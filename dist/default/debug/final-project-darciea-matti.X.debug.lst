

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 23:41:58 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Version 2.35
    48                           ; Generated 05/05/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F67K40 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataBANK0
    84   001D72                     __pidataBANK0:
    85                           	callstack 0
    86                           
    87                           ;initializer for main@F14635
    88   001D72  36B0               	dw	14000
    89   001D74  0834               	dw	2100
    90   001D76  0AF0               	dw	2800
    91   001D78  20D0               	dw	8400
    92   001D7A  1964               	dw	6500
    93   001D7C  1388               	dw	5000
    94   001D7E  1130               	dw	4400
    95   001D80  0708               	dw	1800
    96   001D82  0AF0               	dw	2800
    97                           
    98                           ;initializer for main@F14641
    99   001D84  1F40               	dw	8000
   100   001D86  0000               	dw	0
   101   001D88  1F40               	dw	8000
   102   000000                     _TX4REG	set	3812
   103   000000                     _RC4STAbits	set	3815
   104   000000                     _SP4BRGH	set	3814
   105   000000                     _LATGbits	set	3967
   106   000000                     _TRISFbits	set	3974
   107   000000                     _TRISDbits	set	3972
   108   000000                     _TRISGbits	set	3975
   109   000000                     _SSP2CON2bits	set	3802
   110   000000                     _RX4PPS	set	3605
   111   000000                     _SSP2CLKPPS	set	3612
   112   000000                     _SSP2DATPPS	set	3613
   113   000000                     _RC7PPS	set	3689
   114   000000                     _RE2PPS	set	3700
   115   000000                     _TRISCbits	set	3971
   116   000000                     _TRISEbits	set	3973
   117   000000                     _TRISHbits	set	3976
   118   000000                     _PORTFbits	set	3982
   119   000000                     _T2PR	set	4028
   120   000000                     _T2CONbits	set	4029
   121   000000                     _CCPR2H	set	4006
   122   000000                     _CCPR1H	set	4010
   123   000000                     _RE4PPS	set	3702
   124   000000                     _RG6PPS	set	3720
   125   000000                     _RD5PPS	set	3695
   126   000000                     _ANSELDbits	set	3751
   127   000000                     _SSP2ADD	set	3798
   128   000000                     _SSP2CON1bits	set	3801
   129   000000                     _CCPR4H	set	3873
   130   000000                     _CCPR3H	set	3877
   131   000000                     _T2CLKCONbits	set	4031
   132   000000                     _T2HLTbits	set	4030
   133   000000                     _CCP1CONbits	set	4011
   134   000000                     _CCPTMRS0bits	set	4013
   135   000000                     _CCP2CONbits	set	4007
   136   000000                     _LATAbits	set	3961
   137   000000                     _LATDbits	set	3964
   138   000000                     _LATHbits	set	3968
   139   000000                     _CCP3CONbits	set	3878
   140   000000                     _CCP4CONbits	set	3874
   141   000000                     _RC4REG	set	3811
   142   000000                     _SP4BRGL	set	3813
   143   000000                     _TX4STAbits	set	3816
   144   000000                     _BAUD4CONbits	set	3817
   145   000000                     _SSP2CON2	set	3802
   146   000000                     _SSP2STAT	set	3800
   147   000000                     _SSP2BUF	set	3797
   148   000000                     _PIE4bits	set	3629
   149   000000                     _PIR4bits	set	3639
   150   000000                     _RC0PPS	set	3682
   151   000000                     _RD6PPS	set	3696
   152   000000                     _TRISAbits	set	3969
   153   000000                     _LATFbits	set	3966
   154                           
   155                           	psect	smallconst
   156   000E00                     __psmallconst:
   157                           	callstack 0
   158   000E00  00                 	db	0
   159   000E01                     STR_2:
   160   000E01  67                 	db	103	;'g'
   161   000E02  72                 	db	114	;'r'
   162   000E03  65                 	db	101	;'e'
   163   000E04  65                 	db	101	;'e'
   164   000E05  6E                 	db	110	;'n'
   165   000E06  20                 	db	32
   166   000E07  25                 	db	37
   167   000E08  64                 	db	100	;'d'
   168   000E09  20                 	db	32
   169   000E0A  0A                 	db	10
   170   000E0B  00                 	db	0
   171   000E0C                     STR_4:
   172   000E0C  43                 	db	67	;'C'
   173   000E0D  41                 	db	65	;'A'
   174   000E0E  52                 	db	82	;'R'
   175   000E0F  44                 	db	68	;'D'
   176   000E10  20                 	db	32
   177   000E11  25                 	db	37
   178   000E12  64                 	db	100	;'d'
   179   000E13  20                 	db	32
   180   000E14  0A                 	db	10
   181   000E15  00                 	db	0
   182   000E16                     STR_3:
   183   000E16  62                 	db	98	;'b'
   184   000E17  6C                 	db	108	;'l'
   185   000E18  75                 	db	117	;'u'
   186   000E19  65                 	db	101	;'e'
   187   000E1A  20                 	db	32
   188   000E1B  25                 	db	37
   189   000E1C  64                 	db	100	;'d'
   190   000E1D  20                 	db	32
   191   000E1E  0A                 	db	10
   192   000E1F  00                 	db	0
   193   000E20                     STR_1:
   194   000E20  72                 	db	114	;'r'
   195   000E21  65                 	db	101	;'e'
   196   000E22  64                 	db	100	;'d'
   197   000E23  20                 	db	32
   198   000E24  25                 	db	37
   199   000E25  64                 	db	100	;'d'
   200   000E26  20                 	db	32
   201   000E27  0A                 	db	10
   202   000E28  00                 	db	0
   203   000E29  00                 	db	0	; dummy byte at the end
   204   000000                     
   205                           ; #config settings
   206                           
   207                           	psect	cinit
   208   001BB4                     __pcinit:
   209                           	callstack 0
   210   001BB4                     start_initialization:
   211                           	callstack 0
   212   001BB4                     __initialization:
   213                           	callstack 0
   214                           
   215                           ; Initialize objects allocated to BANK0 (24 bytes)
   216                           ; load TBLPTR registers with __pidataBANK0
   217   001BB4  0E72               	movlw	low __pidataBANK0
   218   001BB6  6EF6               	movwf	tblptrl,c
   219   001BB8  0E1D               	movlw	high __pidataBANK0
   220   001BBA  6EF7               	movwf	tblptrh,c
   221   001BBC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   222   001BBE  6EF8               	movwf	tblptru,c
   223   001BC0  EE00  F0CB         	lfsr	0,__pdataBANK0
   224   001BC4  EE10 F018          	lfsr	1,24
   225   001BC8                     copy_data0:
   226   001BC8  0009               	tblrd		*+
   227   001BCA  CFF5 FFEE          	movff	tablat,postinc0
   228   001BCE  50E5               	movf	postdec1,w,c
   229   001BD0  50E1               	movf	fsr1l,w,c
   230   001BD2  E1FA               	bnz	copy_data0
   231                           
   232                           ; Clear objects allocated to BANK1 (92 bytes)
   233   001BD4  EE01  F000         	lfsr	0,__pbssBANK1
   234   001BD8  0E5C               	movlw	92
   235   001BDA                     clear_0:
   236   001BDA  6AEE               	clrf	postinc0,c
   237   001BDC  06E8               	decf	wreg,f,c
   238   001BDE  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BANK0 (28 bytes)
   241   001BE0  EE00  F0AF         	lfsr	0,__pbssBANK0
   242   001BE4  0E1C               	movlw	28
   243   001BE6                     clear_1:
   244   001BE6  6AEE               	clrf	postinc0,c
   245   001BE8  06E8               	decf	wreg,f,c
   246   001BEA  E1FD               	bnz	clear_1
   247                           
   248                           ; Clear objects allocated to COMRAM (1 bytes)
   249   001BEC  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   250   001BEE                     end_of_initialization:
   251                           	callstack 0
   252   001BEE                     __end_of__initialization:
   253                           	callstack 0
   254   001BEE  0100               	movlb	0
   255   001BF0  EF54  F008         	goto	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMRAM
   258   00005F                     __pbssCOMRAM:
   259                           	callstack 0
   260   00005F                     _TxBufWriteCnt:
   261                           	callstack 0
   262   00005F                     	ds	1
   263                           
   264                           	psect	bssBANK0
   265   0000AF                     __pbssBANK0:
   266                           	callstack 0
   267   0000AF                     _EUSART4RXbuf:
   268                           	callstack 0
   269   0000AF                     	ds	20
   270   0000C3                     _width:
   271                           	callstack 0
   272   0000C3                     	ds	2
   273   0000C5                     _prec:
   274                           	callstack 0
   275   0000C5                     	ds	2
   276   0000C7                     _flags:
   277                           	callstack 0
   278   0000C7                     	ds	1
   279   0000C8                     _TxBufReadCnt:
   280                           	callstack 0
   281   0000C8                     	ds	1
   282   0000C9                     _RxBufReadCnt:
   283                           	callstack 0
   284   0000C9                     	ds	1
   285   0000CA                     _RxBufWriteCnt:
   286                           	callstack 0
   287   0000CA                     	ds	1
   288                           
   289                           	psect	dataBANK0
   290   0000CB                     __pdataBANK0:
   291                           	callstack 0
   292   0000CB                     main@F14635:
   293                           	callstack 0
   294   0000CB                     	ds	18
   295   0000DD                     main@F14641:
   296                           	callstack 0
   297   0000DD                     	ds	6
   298                           
   299                           	psect	bssBANK1
   300   000100                     __pbssBANK1:
   301                           	callstack 0
   302   000100                     _EUSART4TXbuf:
   303                           	callstack 0
   304   000100                     	ds	60
   305   00013C                     _dbuf:
   306                           	callstack 0
   307   00013C                     	ds	32
   308                           
   309                           	psect	cstackBANK0
   310   000060                     __pcstackBANK0:
   311                           	callstack 0
   312   000060                     sprintf@ap:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x0
   316   000060                     	ds	2
   317   000062                     sprintf@f:
   318                           	callstack 0
   319                           
   320                           ; 11 bytes @ 0x2
   321   000062                     	ds	11
   322   00006D                     ??_main:
   323                           
   324                           ; 1 bytes @ 0xD
   325   00006D                     	ds	2
   326   00006F                     main@expected_values:
   327                           	callstack 0
   328                           
   329                           ; 18 bytes @ 0xF
   330   00006F                     	ds	18
   331   000081                     main@buf:
   332                           	callstack 0
   333                           
   334                           ; 20 bytes @ 0x21
   335   000081                     	ds	20
   336   000095                     main@master_closeness:
   337                           	callstack 0
   338                           
   339                           ; 6 bytes @ 0x35
   340   000095                     	ds	6
   341   00009B                     main@card:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x3B
   345   00009B                     	ds	1
   346   00009C                     main@PWMcycle:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x3C
   350   00009C                     	ds	1
   351   00009D                     main@motorL:
   352                           	callstack 0
   353                           
   354                           ; 9 bytes @ 0x3D
   355   00009D                     	ds	9
   356   0000A6                     main@motorR:
   357                           	callstack 0
   358                           
   359                           ; 9 bytes @ 0x46
   360   0000A6                     	ds	9
   361                           
   362                           	psect	cstackCOMRAM
   363   000001                     __pcstackCOMRAM:
   364                           	callstack 0
   365   000001                     ??_I2C_2_Master_Idle:
   366   000001                     ?___wmul:
   367                           	callstack 0
   368   000001                     ?___aodiv:
   369                           	callstack 0
   370   000001                     ?___aomod:
   371                           	callstack 0
   372   000001                     sendCharSerial4@charToSend:
   373                           	callstack 0
   374   000001                     determine_card@master_closeness:
   375                           	callstack 0
   376   000001                     ___wmul@multiplier:
   377                           	callstack 0
   378   000001                     fputc@c:
   379                           	callstack 0
   380   000001                     ___aodiv@dividend:
   381                           	callstack 0
   382   000001                     ___aomod@dividend:
   383                           	callstack 0
   384                           
   385                           ; 8 bytes @ 0x0
   386   000001                     	ds	1
   387   000002                     I2C_2_Master_Write@data_byte:
   388                           	callstack 0
   389   000002                     sendStringSerial4@string:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x1
   393   000002                     	ds	1
   394   000003                     ??_determine_card:
   395   000003                     color_writetoaddr@value:
   396                           	callstack 0
   397   000003                     ___wmul@multiplicand:
   398                           	callstack 0
   399   000003                     fputc@fp:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403   000003                     	ds	1
   404   000004                     color_writetoaddr@address:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x3
   408   000004                     	ds	1
   409   000005                     ??_fputc:
   410   000005                     ??_color_click_init:
   411   000005                     ___wmul@product:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x4
   415   000005                     	ds	2
   416   000007                     ?___lwdiv:
   417                           	callstack 0
   418   000007                     determine_card@current_smallest:
   419                           	callstack 0
   420   000007                     ___lwdiv@dividend:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x6
   424   000007                     	ds	2
   425   000009                     determine_card@i:
   426                           	callstack 0
   427   000009                     ___lwdiv@divisor:
   428                           	callstack 0
   429   000009                     ___aodiv@divisor:
   430                           	callstack 0
   431   000009                     ___aomod@divisor:
   432                           	callstack 0
   433                           
   434                           ; 8 bytes @ 0x8
   435   000009                     	ds	1
   436   00000A                     fputs@s:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x9
   440   00000A                     	ds	1
   441   00000B                     ___lwdiv@quotient:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xA
   445   00000B                     	ds	1
   446   00000C                     fputs@fp:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xB
   450   00000C                     	ds	1
   451   00000D                     ___lwdiv@counter:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0xC
   455   00000D                     	ds	1
   456   00000E                     fputs@c:
   457                           	callstack 0
   458   00000E                     setMotorPWM@m:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xD
   462   00000E                     	ds	1
   463   00000F                     fputs@i:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0xE
   467   00000F                     	ds	1
   468   000010                     ??_setMotorPWM:
   469                           
   470                           ; 1 bytes @ 0xF
   471   000010                     	ds	1
   472   000011                     ___aodiv@counter:
   473                           	callstack 0
   474   000011                     ___aomod@counter:
   475                           	callstack 0
   476   000011                     pad@fp:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x10
   480   000011                     	ds	1
   481   000012                     setMotorPWM@posDuty:
   482                           	callstack 0
   483   000012                     ___aodiv@sign:
   484                           	callstack 0
   485   000012                     ___aomod@sign:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x11
   489   000012                     	ds	1
   490   000013                     ?_abs:
   491                           	callstack 0
   492   000013                     setMotorPWM@negDuty:
   493                           	callstack 0
   494   000013                     abs@a:
   495                           	callstack 0
   496   000013                     pad@buf:
   497                           	callstack 0
   498   000013                     ___aodiv@quotient:
   499                           	callstack 0
   500                           
   501                           ; 8 bytes @ 0x12
   502   000013                     	ds	2
   503   000015                     ??_abs:
   504   000015                     pad@p:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x14
   508   000015                     	ds	2
   509   000017                     ??_pad:
   510                           
   511                           ; 1 bytes @ 0x16
   512   000017                     	ds	1
   513   000018                     pad@i:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x17
   517   000018                     	ds	2
   518   00001A                     pad@w:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x19
   522   00001A                     	ds	2
   523   00001C                     dtoa@fp:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x1B
   527   00001C                     	ds	2
   528   00001E                     dtoa@d:
   529                           	callstack 0
   530                           
   531                           ; 8 bytes @ 0x1D
   532   00001E                     	ds	8
   533   000026                     ??_dtoa:
   534                           
   535                           ; 1 bytes @ 0x25
   536   000026                     	ds	8
   537   00002E                     _dtoa$2241:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x2D
   541   00002E                     	ds	2
   542   000030                     dtoa@p:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x2F
   546   000030                     	ds	2
   547   000032                     dtoa@w:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x31
   551   000032                     	ds	2
   552   000034                     dtoa@n:
   553                           	callstack 0
   554                           
   555                           ; 8 bytes @ 0x33
   556   000034                     	ds	8
   557   00003C                     dtoa@i:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x3B
   561   00003C                     	ds	2
   562   00003E                     dtoa@s:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x3D
   566   00003E                     	ds	1
   567   00003F                     vfpfcnvrt@fp:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x3E
   571   00003F                     	ds	2
   572   000041                     vfpfcnvrt@fmt:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x40
   576   000041                     	ds	2
   577   000043                     vfpfcnvrt@ap:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x42
   581   000043                     	ds	2
   582   000045                     ??_vfpfcnvrt:
   583                           
   584                           ; 1 bytes @ 0x44
   585   000045                     	ds	2
   586   000047                     vfpfcnvrt@convarg:
   587                           	callstack 0
   588                           
   589                           ; 8 bytes @ 0x46
   590   000047                     	ds	8
   591   00004F                     vfpfcnvrt@cp:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x4E
   595   00004F                     	ds	2
   596   000051                     ?_vfprintf:
   597                           	callstack 0
   598   000051                     vfprintf@fp:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x50
   602   000051                     	ds	2
   603   000053                     vfprintf@fmt:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x52
   607   000053                     	ds	2
   608   000055                     vfprintf@ap:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x54
   612   000055                     	ds	2
   613   000057                     vfprintf@cfmt:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x56
   617   000057                     	ds	2
   618   000059                     ?_sprintf:
   619                           	callstack 0
   620   000059                     sprintf@s:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x58
   624   000059                     	ds	2
   625   00005B                     sprintf@fmt:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x5A
   629   00005B                     	ds	4
   630   00005F                     
   631                           ; 1 bytes @ 0x5E
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 20 in file "main.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  buf            20   33[BANK0 ] unsigned char [20]
   642 ;;  expected_val   18   15[BANK0 ] unsigned int [3][3]
   643 ;;  normalised_v   18    0        unsigned int [3][3]
   644 ;;  motorR          9   70[BANK0 ] struct DC_motor
   645 ;;  motorL          9   61[BANK0 ] struct DC_motor
   646 ;;  master_close    6   53[BANK0 ] unsigned int [3]
   647 ;;  blue_read       2    0        unsigned int 
   648 ;;  green_read      2    0        unsigned int 
   649 ;;  red_read        2    0        unsigned int 
   650 ;;  PWMcycle        1   60[BANK0 ] unsigned char 
   651 ;;  card            1   59[BANK0 ] enum E14575
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   662 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   664 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   665 ;;Total ram usage:       66 bytes
   666 ;; Hardware stack levels required when called: 8
   667 ;; This function calls:
   668 ;;		_I2C_2_Master_Init
   669 ;;		_LEDSon_init
   670 ;;		_color_click_init
   671 ;;		_determine_card
   672 ;;		_initDCmotorsPWM
   673 ;;		_initUSART4
   674 ;;		_sendStringSerial4
   675 ;;		_setMotorPWM
   676 ;;		_sprintf
   677 ;; This function is called by:
   678 ;;		Startup code after reset
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text0
   683   0010A8                     __ptext0:
   684                           	callstack 0
   685   0010A8                     _main:
   686                           	callstack 23
   687   0010A8                     
   688                           ;main.c: 25:     LEDSon_init();
   689   0010A8  EC88  F00E         	call	_LEDSon_init	;wreg free
   690   0010AC                     
   691                           ;main.c: 26:     I2C_2_Master_Init();
   692   0010AC  EC4C  F00E         	call	_I2C_2_Master_Init	;wreg free
   693   0010B0                     
   694                           ;main.c: 27:     color_click_init();
   695   0010B0  EC1A  F00E         	call	_color_click_init	;wreg free
   696   0010B4                     
   697                           ;main.c: 28:     initDCmotorsPWM();
   698   0010B4  EC70  F00C         	call	_initDCmotorsPWM	;wreg free
   699   0010B8                     
   700                           ;main.c: 29:     initUSART4();
   701   0010B8  EC99  F00E         	call	_initUSART4	;wreg free
   702   0010BC                     
   703                           ;main.c: 37:     unsigned char PWMcycle = T2PR;
   704   0010BC  CFBC F09C          	movff	4028,main@PWMcycle	;volatile
   705   0010C0                     
   706                           ;main.c: 39:     struct DC_motor motorL, motorR;;main.c: 41:     motorL.power=0;
   707   0010C0  0E00               	movlw	0
   708   0010C2  0100               	movlb	0	; () banked
   709   0010C4  6F9D               	movwf	main@motorL& (0+255),b
   710   0010C6                     
   711                           ; BSR set to: 0
   712                           ;main.c: 42:     motorL.direction=1;
   713   0010C6  0E01               	movlw	1
   714   0010C8  6F9E               	movwf	(main@motorL+1)& (0+255),b
   715   0010CA                     
   716                           ; BSR set to: 0
   717                           ;main.c: 43:     motorL.brakemode=1;
   718   0010CA  0E01               	movlw	1
   719   0010CC  6F9F               	movwf	(main@motorL+2)& (0+255),b
   720   0010CE                     
   721                           ; BSR set to: 0
   722                           ;main.c: 44:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   723   0010CE  0EAA               	movlw	170
   724   0010D0  6FA2               	movwf	(main@motorL+5)& (0+255),b
   725   0010D2  0E0F               	movlw	15
   726   0010D4  6FA3               	movwf	(main@motorL+6)& (0+255),b
   727   0010D6                     
   728                           ; BSR set to: 0
   729                           ;main.c: 45:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   730   0010D6  0EA6               	movlw	166
   731   0010D8  6FA4               	movwf	(main@motorL+7)& (0+255),b
   732   0010DA  0E0F               	movlw	15
   733   0010DC  6FA5               	movwf	(main@motorL+8)& (0+255),b
   734   0010DE                     
   735                           ; BSR set to: 0
   736                           ;main.c: 46:     motorL.PWMperiod=PWMcycle;
   737   0010DE  C09C  F0A0         	movff	main@PWMcycle,main@motorL+3
   738   0010E2  6BA1               	clrf	(main@motorL+4)& (0+255),b
   739   0010E4                     
   740                           ; BSR set to: 0
   741                           ;main.c: 48:     motorR.power=0;
   742   0010E4  0E00               	movlw	0
   743   0010E6  6FA6               	movwf	main@motorR& (0+255),b
   744   0010E8                     
   745                           ; BSR set to: 0
   746                           ;main.c: 49:     motorR.direction=1;
   747   0010E8  0E01               	movlw	1
   748   0010EA  6FA7               	movwf	(main@motorR+1)& (0+255),b
   749   0010EC                     
   750                           ; BSR set to: 0
   751                           ;main.c: 50:     motorR.brakemode=1;
   752   0010EC  0E01               	movlw	1
   753   0010EE  6FA8               	movwf	(main@motorR+2)& (0+255),b
   754   0010F0                     
   755                           ; BSR set to: 0
   756                           ;main.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   757   0010F0  0E25               	movlw	37
   758   0010F2  6FAB               	movwf	(main@motorR+5)& (0+255),b
   759   0010F4  0E0F               	movlw	15
   760   0010F6  6FAC               	movwf	(main@motorR+6)& (0+255),b
   761   0010F8                     
   762                           ; BSR set to: 0
   763                           ;main.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   764   0010F8  0E21               	movlw	33
   765   0010FA  6FAD               	movwf	(main@motorR+7)& (0+255),b
   766   0010FC  0E0F               	movlw	15
   767   0010FE  6FAE               	movwf	(main@motorR+8)& (0+255),b
   768   001100                     
   769                           ; BSR set to: 0
   770                           ;main.c: 53:     motorR.PWMperiod=PWMcycle;
   771   001100  C09C  F0A9         	movff	main@PWMcycle,main@motorR+3
   772   001104  6BAA               	clrf	(main@motorR+4)& (0+255),b
   773   001106                     
   774                           ; BSR set to: 0
   775                           ;main.c: 55:     setMotorPWM(&motorL);
   776   001106  0E9D               	movlw	low main@motorL
   777   001108  6E0E               	movwf	setMotorPWM@m^0,c
   778   00110A  0E00               	movlw	high main@motorL
   779   00110C  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   780   00110E  ECF4  F009         	call	_setMotorPWM	;wreg free
   781   001112                     
   782                           ;main.c: 56:     setMotorPWM(&motorR);
   783   001112  0EA6               	movlw	low main@motorR
   784   001114  6E0E               	movwf	setMotorPWM@m^0,c
   785   001116  0E00               	movlw	high main@motorR
   786   001118  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   787   00111A  ECF4  F009         	call	_setMotorPWM	;wreg free
   788   00111E                     
   789                           ;main.c: 62:     unsigned int expected_values[3][3] = {{14000, 2100, 2800},{8400, 6500, 
      +                          5000},{4400, 1800, 2800}};
   790   00111E  EE20  F0CB         	lfsr	2,main@F14635
   791   001122  EE10  F06F         	lfsr	1,main@expected_values
   792   001126  0E11               	movlw	17
   793   001128                     u1291:
   794   001128  CFDB FFE3          	movff	plusw2,plusw1
   795   00112C  06E8               	decf	wreg,f,c
   796   00112E  E2FC               	bc	u1291
   797   001130                     
   798                           ;main.c: 63:     unsigned int normalised_values[3][3];;main.c: 64:     unsigned int mast
      +                          er_closeness[3]= {8000, 0 , 8000 };
   799   001130  EE20  F0DD         	lfsr	2,main@F14641
   800   001134  EE10  F095         	lfsr	1,main@master_closeness
   801   001138  0E05               	movlw	5
   802   00113A                     u1301:
   803   00113A  CFDB FFE3          	movff	plusw2,plusw1
   804   00113E  06E8               	decf	wreg,f,c
   805   001140  E2FC               	bc	u1301
   806   001142                     
   807                           ;main.c: 99:     while(PORTFbits.RF2){
   808   001142  EFA4  F008         	goto	l233
   809   001146                     l234:
   810                           
   811                           ;main.c: 100:         LATHbits.LATH1 = 1;
   812   001146  8280               	bsf	128,1,c	;volatile
   813   001148                     l233:
   814                           
   815                           ;main.c: 99:     while(PORTFbits.RF2){
   816   001148  B48E               	btfsc	142,2,c	;volatile
   817   00114A  EFA9  F008         	goto	u1311
   818   00114E  EFAB  F008         	goto	u1310
   819   001152                     u1311:
   820   001152  EFA3  F008         	goto	l234
   821   001156                     u1310:
   822   001156                     
   823                           ;main.c: 122:     LATDbits.LATD7=0;
   824   001156  9E7C               	bcf	124,7,c	;volatile
   825                           
   826                           ;main.c: 123:     TRISDbits.TRISD7=0;
   827   001158  9E84               	bcf	132,7,c	;volatile
   828   00115A                     l2519:
   829                           
   830                           ;main.c: 142:         sprintf(buf, "red %d \n", master_closeness[0]);
   831   00115A  0E81               	movlw	low main@buf
   832   00115C  6E59               	movwf	sprintf@s^0,c
   833   00115E  0E00               	movlw	high main@buf
   834   001160  6E5A               	movwf	(sprintf@s+1)^0,c
   835   001162  0E20               	movlw	low STR_1
   836   001164  6E5B               	movwf	sprintf@fmt^0,c
   837   001166  0E0E               	movlw	high STR_1
   838   001168  6E5C               	movwf	(sprintf@fmt+1)^0,c
   839   00116A  C095  F05D         	movff	main@master_closeness,?_sprintf+4
   840   00116E  C096  F05E         	movff	main@master_closeness+1,?_sprintf+5
   841   001172  EC66  F00D         	call	_sprintf	;wreg free
   842   001176                     
   843                           ;main.c: 143:         sendStringSerial4(buf);
   844   001176  0E81               	movlw	low main@buf
   845   001178  6E02               	movwf	sendStringSerial4@string^0,c
   846   00117A  0E00               	movlw	high main@buf
   847   00117C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   848   00117E  EC34  F00E         	call	_sendStringSerial4	;wreg free
   849   001182                     
   850                           ;main.c: 144:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   851   001182  0E52               	movlw	82
   852   001184  0100               	movlb	0	; () banked
   853   001186  6F6E               	movwf	(??_main+1)& (0+255),b
   854   001188  0E2B               	movlw	43
   855   00118A  6F6D               	movwf	??_main& (0+255),b
   856   00118C  0E00               	movlw	0
   857   00118E                     u1427:
   858   00118E  2EE8               	decfsz	wreg,f,c
   859   001190  D7FE               	bra	u1427
   860   001192  2F6D               	decfsz	??_main& (0+255),f,b
   861   001194  D7FC               	bra	u1427
   862   001196  2F6E               	decfsz	(??_main+1)& (0+255),f,b
   863   001198  D7FA               	bra	u1427
   864   00119A  F000               	nop	
   865   00119C                     
   866                           ;main.c: 145:         sprintf(buf, "green %d \n", master_closeness[1]);
   867   00119C  0E81               	movlw	low main@buf
   868   00119E  6E59               	movwf	sprintf@s^0,c
   869   0011A0  0E00               	movlw	high main@buf
   870   0011A2  6E5A               	movwf	(sprintf@s+1)^0,c
   871   0011A4  0E01               	movlw	low STR_2
   872   0011A6  6E5B               	movwf	sprintf@fmt^0,c
   873   0011A8  0E0E               	movlw	high STR_2
   874   0011AA  6E5C               	movwf	(sprintf@fmt+1)^0,c
   875   0011AC  C097  F05D         	movff	main@master_closeness+2,?_sprintf+4
   876   0011B0  C098  F05E         	movff	main@master_closeness+3,?_sprintf+5
   877   0011B4  EC66  F00D         	call	_sprintf	;wreg free
   878   0011B8                     
   879                           ;main.c: 146:         sendStringSerial4(buf);
   880   0011B8  0E81               	movlw	low main@buf
   881   0011BA  6E02               	movwf	sendStringSerial4@string^0,c
   882   0011BC  0E00               	movlw	high main@buf
   883   0011BE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   884   0011C0  EC34  F00E         	call	_sendStringSerial4	;wreg free
   885                           
   886                           ;main.c: 147:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   887   0011C4  0E52               	movlw	82
   888   0011C6  0100               	movlb	0	; () banked
   889   0011C8  6F6E               	movwf	(??_main+1)& (0+255),b
   890   0011CA  0E2B               	movlw	43
   891   0011CC  6F6D               	movwf	??_main& (0+255),b
   892   0011CE  0E00               	movlw	0
   893   0011D0                     u1437:
   894   0011D0  2EE8               	decfsz	wreg,f,c
   895   0011D2  D7FE               	bra	u1437
   896   0011D4  2F6D               	decfsz	??_main& (0+255),f,b
   897   0011D6  D7FC               	bra	u1437
   898   0011D8  2F6E               	decfsz	(??_main+1)& (0+255),f,b
   899   0011DA  D7FA               	bra	u1437
   900   0011DC  F000               	nop	
   901   0011DE                     
   902                           ;main.c: 148:         sprintf(buf, "blue %d \n", master_closeness[2]);
   903   0011DE  0E81               	movlw	low main@buf
   904   0011E0  6E59               	movwf	sprintf@s^0,c
   905   0011E2  0E00               	movlw	high main@buf
   906   0011E4  6E5A               	movwf	(sprintf@s+1)^0,c
   907   0011E6  0E16               	movlw	low STR_3
   908   0011E8  6E5B               	movwf	sprintf@fmt^0,c
   909   0011EA  0E0E               	movlw	high STR_3
   910   0011EC  6E5C               	movwf	(sprintf@fmt+1)^0,c
   911   0011EE  C099  F05D         	movff	main@master_closeness+4,?_sprintf+4
   912   0011F2  C09A  F05E         	movff	main@master_closeness+5,?_sprintf+5
   913   0011F6  EC66  F00D         	call	_sprintf	;wreg free
   914   0011FA                     
   915                           ;main.c: 149:         sendStringSerial4(buf);
   916   0011FA  0E81               	movlw	low main@buf
   917   0011FC  6E02               	movwf	sendStringSerial4@string^0,c
   918   0011FE  0E00               	movlw	high main@buf
   919   001200  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   920   001202  EC34  F00E         	call	_sendStringSerial4	;wreg free
   921   001206                     
   922                           ;main.c: 150:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   923   001206  0E52               	movlw	82
   924   001208  0100               	movlb	0	; () banked
   925   00120A  6F6E               	movwf	(??_main+1)& (0+255),b
   926   00120C  0E2B               	movlw	43
   927   00120E  6F6D               	movwf	??_main& (0+255),b
   928   001210  0E00               	movlw	0
   929   001212                     u1447:
   930   001212  2EE8               	decfsz	wreg,f,c
   931   001214  D7FE               	bra	u1447
   932   001216  2F6D               	decfsz	??_main& (0+255),f,b
   933   001218  D7FC               	bra	u1447
   934   00121A  2F6E               	decfsz	(??_main+1)& (0+255),f,b
   935   00121C  D7FA               	bra	u1447
   936   00121E  F000               	nop	
   937   001220                     
   938                           ;main.c: 152:         card = determine_card(master_closeness);
   939   001220  0E95               	movlw	low main@master_closeness
   940   001222  6E01               	movwf	determine_card@master_closeness^0,c
   941   001224  0E00               	movlw	high main@master_closeness
   942   001226  6E02               	movwf	(determine_card@master_closeness+1)^0,c
   943   001228  ECF1  F00C         	call	_determine_card	;wreg free
   944   00122C  0100               	movlb	0	; () banked
   945   00122E  6F9B               	movwf	main@card& (0+255),b
   946   001230                     
   947                           ; BSR set to: 0
   948                           ;main.c: 154:         sprintf(buf, "CARD %d \n", card);
   949   001230  0E81               	movlw	low main@buf
   950   001232  6E59               	movwf	sprintf@s^0,c
   951   001234  0E00               	movlw	high main@buf
   952   001236  6E5A               	movwf	(sprintf@s+1)^0,c
   953   001238  0E0C               	movlw	low STR_4
   954   00123A  6E5B               	movwf	sprintf@fmt^0,c
   955   00123C  0E0E               	movlw	high STR_4
   956   00123E  6E5C               	movwf	(sprintf@fmt+1)^0,c
   957   001240  C09B  F05D         	movff	main@card,?_sprintf+4
   958   001244  6A5E               	clrf	(?_sprintf+5)^0,c
   959   001246  EC66  F00D         	call	_sprintf	;wreg free
   960   00124A                     
   961                           ;main.c: 155:         sendStringSerial4(buf);
   962   00124A  0E81               	movlw	low main@buf
   963   00124C  6E02               	movwf	sendStringSerial4@string^0,c
   964   00124E  0E00               	movlw	high main@buf
   965   001250  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   966   001252  EC34  F00E         	call	_sendStringSerial4	;wreg free
   967   001256                     
   968                           ;main.c: 162:         LATFbits.LATF0 = 1;
   969   001256  807E               	bsf	126,0,c	;volatile
   970   001258  EFAD  F008         	goto	l2519
   971   00125C  EF01  F000         	goto	start
   972   001260                     __end_of_main:
   973                           	callstack 0
   974                           
   975 ;; *************** function _sprintf *****************
   976 ;; Defined at:
   977 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  s               2   88[COMRAM] PTR unsigned char 
   980 ;;		 -> main@buf(20), 
   981 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
   982 ;;		 -> STR_4(10), STR_3(10), STR_2(11), STR_1(9), 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  f              11    2[BANK0 ] struct _IO_FILE
   985 ;;  ap              2    0[BANK0 ] PTR void [1]
   986 ;;		 -> ?_sprintf(2), 
   987 ;;  ret             2    0        int 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  2   88[COMRAM] int 
   990 ;; Registers used:
   991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   997 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   998 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;      Totals:         6      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;Total ram usage:       19 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 7
  1004 ;; This function calls:
  1005 ;;		_vfprintf
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text1
  1012   001ACC                     __ptext1:
  1013                           	callstack 0
  1014   001ACC                     _sprintf:
  1015                           	callstack 23
  1016   001ACC  0E5D               	movlw	low (?_sprintf+4)
  1017   001ACE  0100               	movlb	0	; () banked
  1018   001AD0  6F60               	movwf	sprintf@ap& (0+255),b
  1019   001AD2  0E00               	movlw	high (?_sprintf+4)
  1020   001AD4  6F61               	movwf	(sprintf@ap+1)& (0+255),b
  1021   001AD6  C059  F062         	movff	sprintf@s,sprintf@f
  1022   001ADA  C05A  F063         	movff	sprintf@s+1,sprintf@f+1
  1023   001ADE                     
  1024                           ; BSR set to: 0
  1025   001ADE  0E00               	movlw	0
  1026   001AE0  6F66               	movwf	(sprintf@f+4)& (0+255),b
  1027   001AE2  0E00               	movlw	0
  1028   001AE4  6F65               	movwf	(sprintf@f+3)& (0+255),b
  1029   001AE6                     
  1030                           ; BSR set to: 0
  1031   001AE6  0E00               	movlw	0
  1032   001AE8  6F6C               	movwf	(sprintf@f+10)& (0+255),b
  1033   001AEA  0E00               	movlw	0
  1034   001AEC  6F6B               	movwf	(sprintf@f+9)& (0+255),b
  1035   001AEE                     
  1036                           ; BSR set to: 0
  1037   001AEE  0E62               	movlw	low sprintf@f
  1038   001AF0  6E51               	movwf	vfprintf@fp^0,c
  1039   001AF2  0E00               	movlw	high sprintf@f
  1040   001AF4  6E52               	movwf	(vfprintf@fp+1)^0,c
  1041   001AF6  C05B  F053         	movff	sprintf@fmt,vfprintf@fmt
  1042   001AFA  C05C  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1043   001AFE  0E60               	movlw	low sprintf@ap
  1044   001B00  6E55               	movwf	vfprintf@ap^0,c
  1045   001B02  0E00               	movlw	high sprintf@ap
  1046   001B04  6E56               	movwf	(vfprintf@ap+1)^0,c
  1047   001B06  EC8F  F00D         	call	_vfprintf	;wreg free
  1048   001B0A  0100               	movlb	0	; () banked
  1049   001B0C  5165               	movf	(sprintf@f+3)& (0+255),w,b
  1050   001B0E  2459               	addwf	sprintf@s^0,w,c
  1051   001B10  6ED9               	movwf	fsr2l,c
  1052   001B12  5166               	movf	(sprintf@f+4)& (0+255),w,b
  1053   001B14  205A               	addwfc	(sprintf@s+1)^0,w,c
  1054   001B16  6EDA               	movwf	fsr2h,c
  1055   001B18  0E00               	movlw	0
  1056   001B1A  6EDF               	movwf	indf2,c
  1057   001B1C                     
  1058                           ; BSR set to: 0
  1059   001B1C  0012               	return		;funcret
  1060   001B1E                     __end_of_sprintf:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _vfprintf *****************
  1064 ;; Defined at:
  1065 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1068 ;;		 -> sprintf@f(11), 
  1069 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1070 ;;		 -> STR_4(10), STR_3(10), STR_2(11), STR_1(9), 
  1071 ;;  ap              2   84[COMRAM] PTR PTR void 
  1072 ;;		 -> sprintf@ap(2), 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1075 ;;		 -> STR_4(10), STR_3(10), STR_2(11), STR_1(9), 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  2   80[COMRAM] int 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1085 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;Total ram usage:        8 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 6
  1092 ;; This function calls:
  1093 ;;		_vfpfcnvrt
  1094 ;; This function is called by:
  1095 ;;		_sprintf
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text2
  1100   001B1E                     __ptext2:
  1101                           	callstack 0
  1102   001B1E                     _vfprintf:
  1103                           	callstack 23
  1104   001B1E                     
  1105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1106   001B1E  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1107   001B22  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1108                           
  1109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1110   001B26  EFA3  F00D         	goto	l2237
  1111   001B2A                     l2235:
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1114   001B2A  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1115   001B2E  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1116   001B32  0E57               	movlw	low vfprintf@cfmt
  1117   001B34  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1118   001B36  0E00               	movlw	high vfprintf@cfmt
  1119   001B38  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1120   001B3A  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1121   001B3E  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1122   001B42  EC5C  F00B         	call	_vfpfcnvrt	;wreg free
  1123   001B46                     l2237:
  1124                           
  1125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1126   001B46  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1127   001B4A  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1128   001B4E                     	if	0	;tblptru may be non-zero
  1129   001B4E                     	endif
  1130   001B4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1131   001B4E  0E00               	movlw	low (__mediumconst shr (0+16))
  1132   001B50  6EF8               	movwf	tblptru,c
  1133   001B52                     	endif
  1134   001B52  0008               	tblrd		*
  1135   001B54  50F5               	movf	tablat,w,c
  1136   001B56  0900               	iorlw	0
  1137   001B58  A4D8               	btfss	status,2,c
  1138   001B5A  EFB1  F00D         	goto	u1141
  1139   001B5E  EFB3  F00D         	goto	u1140
  1140   001B62                     u1141:
  1141   001B62  EF95  F00D         	goto	l2235
  1142   001B66                     u1140:
  1143   001B66                     
  1144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1145   001B66  0E00               	movlw	0
  1146   001B68  6E52               	movwf	(?_vfprintf+1)^0,c
  1147   001B6A  0E00               	movlw	0
  1148   001B6C  6E51               	movwf	?_vfprintf^0,c
  1149   001B6E  0012               	return		;funcret
  1150   001B70                     __end_of_vfprintf:
  1151                           	callstack 0
  1152                           
  1153 ;; *************** function _vfpfcnvrt *****************
  1154 ;; Defined at:
  1155 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1158 ;;		 -> sprintf@f(11), 
  1159 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1160 ;;		 -> vfprintf@cfmt(2), 
  1161 ;;  ap              2   66[COMRAM] PTR PTR void 
  1162 ;;		 -> sprintf@ap(2), 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  convarg         8   70[COMRAM] struct .
  1165 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1166 ;;		 -> STR_4(10), STR_3(10), STR_2(11), STR_1(9), 
  1167 ;;  i               2    0        int 
  1168 ;;  done            2    0        int 
  1169 ;;  c               1    0        unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1179 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1182 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;Total ram usage:       18 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 5
  1186 ;; This function calls:
  1187 ;;		_dtoa
  1188 ;;		_fputc
  1189 ;; This function is called by:
  1190 ;;		_vfprintf
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text3
  1195   0016B8                     __ptext3:
  1196                           	callstack 0
  1197   0016B8                     _vfpfcnvrt:
  1198                           	callstack 23
  1199   0016B8                     
  1200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1201   0016B8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1202   0016BC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1203   0016C0  CFDE FFF6          	movff	postinc2,tblptrl
  1204   0016C4  CFDD FFF7          	movff	postdec2,tblptrh
  1205   0016C8                     	if	0	;tblptru may be non-zero
  1206   0016C8                     	endif
  1207   0016C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1208   0016C8  0E00               	movlw	low (__mediumconst shr (0+16))
  1209   0016CA  6EF8               	movwf	tblptru,c
  1210   0016CC                     	endif
  1211   0016CC  0008               	tblrd		*
  1212   0016CE  50F5               	movf	tablat,w,c
  1213   0016D0  0A25               	xorlw	37
  1214   0016D2  A4D8               	btfss	status,2,c
  1215   0016D4  EF6E  F00B         	goto	u1051
  1216   0016D8  EF70  F00B         	goto	u1050
  1217   0016DC                     u1051:
  1218   0016DC  EFF4  F00B         	goto	l2163
  1219   0016E0                     u1050:
  1220   0016E0                     
  1221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1222   0016E0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1223   0016E4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1224   0016E8  2ADE               	incf	postinc2,f,c
  1225   0016EA  0E00               	movlw	0
  1226   0016EC  22DD               	addwfc	postdec2,f,c
  1227   0016EE                     
  1228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1229   0016EE  0E00               	movlw	0
  1230   0016F0  0100               	movlb	0	; () banked
  1231   0016F2  6FC4               	movwf	(_width+1)& (0+255),b
  1232   0016F4  0E00               	movlw	0
  1233   0016F6  6FC3               	movwf	_width& (0+255),b
  1234   0016F8  C0C3  F0C7         	movff	_width,_flags
  1235   0016FC                     
  1236                           ; BSR set to: 0
  1237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1238   0016FC  69C5               	setf	_prec& (0+255),b
  1239   0016FE  69C6               	setf	(_prec+1)& (0+255),b
  1240   001700                     
  1241                           ; BSR set to: 0
  1242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1243   001700  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1244   001704  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1245   001708  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1246   00170C  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1247   001710                     
  1248                           ; BSR set to: 0
  1249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1250   001710  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1251   001714  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1252   001718                     	if	0	;tblptru may be non-zero
  1253   001718                     	endif
  1254   001718                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1255   001718  0E00               	movlw	low (__mediumconst shr (0+16))
  1256   00171A  6EF8               	movwf	tblptru,c
  1257   00171C                     	endif
  1258   00171C  0008               	tblrd		*
  1259   00171E  50F5               	movf	tablat,w,c
  1260   001720  0A64               	xorlw	100
  1261   001722  B4D8               	btfsc	status,2,c
  1262   001724  EF96  F00B         	goto	u1061
  1263   001728  EF98  F00B         	goto	u1060
  1264   00172C                     u1061:
  1265   00172C  EFA8  F00B         	goto	l2153
  1266   001730                     u1060:
  1267   001730                     
  1268                           ; BSR set to: 0
  1269   001730  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1270   001734  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1271   001738                     	if	0	;tblptru may be non-zero
  1272   001738                     	endif
  1273   001738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1274   001738  0E00               	movlw	low (__mediumconst shr (0+16))
  1275   00173A  6EF8               	movwf	tblptru,c
  1276   00173C                     	endif
  1277   00173C  0008               	tblrd		*
  1278   00173E  50F5               	movf	tablat,w,c
  1279   001740  0A69               	xorlw	105
  1280   001742  A4D8               	btfss	status,2,c
  1281   001744  EFA6  F00B         	goto	u1071
  1282   001748  EFA8  F00B         	goto	u1070
  1283   00174C                     u1071:
  1284   00174C  EFEB  F00B         	goto	l2159
  1285   001750                     u1070:
  1286   001750                     l2153:
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1290   001750  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1291   001754  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1292   001758  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1293   00175C  0E02               	movlw	2
  1294   00175E  26DE               	addwf	postinc2,f,c
  1295   001760  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1296   001764  0E00               	movlw	0
  1297   001766  22DD               	addwfc	postdec2,f,c
  1298   001768  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1299   00176C  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1300   001770  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1301   001774  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1302   001778  0E00               	movlw	0
  1303   00177A  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1304   00177C  0EFF               	movlw	-1
  1305   00177E  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1306   001780  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1307   001782  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1308   001784  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1309   001786  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1310   001788  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1311                           
  1312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1313   00178A  0E01               	movlw	1
  1314   00178C  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1315   00178E  6E45               	movwf	??_vfpfcnvrt^0,c
  1316   001790  0E00               	movlw	0
  1317   001792  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1318   001794  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1319   001796  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1320   00179A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1321   00179E  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1322   0017A2  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1323   0017A6                     
  1324                           ; BSR set to: 0
  1325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1326   0017A6  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1327   0017AA  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1328   0017AE  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1329   0017B2  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1330   0017B6  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1331   0017BA  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1332   0017BE  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1333   0017C2  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1334   0017C6  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1335   0017CA  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1336   0017CE  EC15  F007         	call	_dtoa	;wreg free
  1337   0017D2  EF0A  F00C         	goto	l1154
  1338   0017D6                     l2159:
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1341   0017D6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1342   0017DA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1343   0017DE  2ADE               	incf	postinc2,f,c
  1344   0017E0  0E00               	movlw	0
  1345   0017E2  22DD               	addwfc	postdec2,f,c
  1346   0017E4  EF0A  F00C         	goto	l1154
  1347   0017E8                     l2163:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1350   0017E8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1351   0017EC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1352   0017F0  CFDE FFF6          	movff	postinc2,tblptrl
  1353   0017F4  CFDD FFF7          	movff	postdec2,tblptrh
  1354   0017F8                     	if	0	;tblptru may be non-zero
  1355   0017F8                     	endif
  1356   0017F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1357   0017F8  0E00               	movlw	low (__mediumconst shr (0+16))
  1358   0017FA  6EF8               	movwf	tblptru,c
  1359   0017FC                     	endif
  1360   0017FC  0008               	tblrd		*
  1361   0017FE  50F5               	movf	tablat,w,c
  1362   001800  6E01               	movwf	fputc@c^0,c
  1363   001802  6A02               	clrf	(fputc@c+1)^0,c
  1364   001804  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1365   001808  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1366   00180C  EC0B  F00C         	call	_fputc	;wreg free
  1367   001810  EFEB  F00B         	goto	l2159
  1368   001814                     l1154:
  1369   001814  0012               	return		;funcret
  1370   001816                     __end_of_vfpfcnvrt:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _dtoa *****************
  1374 ;; Defined at:
  1375 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1378 ;;		 -> sprintf@f(11), 
  1379 ;;  d               8   29[COMRAM] long long 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  n               8   51[COMRAM] long long 
  1382 ;;  i               2   59[COMRAM] int 
  1383 ;;  w               2   49[COMRAM] int 
  1384 ;;  p               2   47[COMRAM] int 
  1385 ;;  s               1   61[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1395 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1398 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1399 ;;Total ram usage:       35 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 4
  1402 ;; This function calls:
  1403 ;;		___aodiv
  1404 ;;		___aomod
  1405 ;;		_abs
  1406 ;;		_pad
  1407 ;; This function is called by:
  1408 ;;		_vfpfcnvrt
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text4
  1413   000E2A                     __ptext4:
  1414                           	callstack 0
  1415   000E2A                     _dtoa:
  1416                           	callstack 23
  1417   000E2A                     
  1418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1419   000E2A  C01E  F034         	movff	dtoa@d,dtoa@n
  1420   000E2E  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1421   000E32  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1422   000E36  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1423   000E3A  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1424   000E3E  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1425   000E42  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1426   000E46  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1427   000E4A                     
  1428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1429   000E4A  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1430   000E4C  EF2A  F007         	goto	u951
  1431   000E50  EF2D  F007         	goto	u950
  1432   000E54                     u951:
  1433   000E54  0E01               	movlw	1
  1434   000E56  EF2E  F007         	goto	u960
  1435   000E5A                     u950:
  1436   000E5A  0E00               	movlw	0
  1437   000E5C                     u960:
  1438   000E5C  6E3E               	movwf	dtoa@s^0,c
  1439   000E5E                     
  1440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1441   000E5E  503E               	movf	dtoa@s^0,w,c
  1442   000E60  B4D8               	btfsc	status,2,c
  1443   000E62  EF35  F007         	goto	u971
  1444   000E66  EF37  F007         	goto	u970
  1445   000E6A                     u971:
  1446   000E6A  EF47  F007         	goto	l2083
  1447   000E6E                     u970:
  1448   000E6E                     
  1449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1450   000E6E  1E3B               	comf	(dtoa@n+7)^0,f,c
  1451   000E70  1E3A               	comf	(dtoa@n+6)^0,f,c
  1452   000E72  1E39               	comf	(dtoa@n+5)^0,f,c
  1453   000E74  1E38               	comf	(dtoa@n+4)^0,f,c
  1454   000E76  1E37               	comf	(dtoa@n+3)^0,f,c
  1455   000E78  1E36               	comf	(dtoa@n+2)^0,f,c
  1456   000E7A  1E35               	comf	(dtoa@n+1)^0,f,c
  1457   000E7C  6C34               	negf	dtoa@n^0,c
  1458   000E7E  0E00               	movlw	0
  1459   000E80  2235               	addwfc	(dtoa@n+1)^0,f,c
  1460   000E82  2236               	addwfc	(dtoa@n+2)^0,f,c
  1461   000E84  2237               	addwfc	(dtoa@n+3)^0,f,c
  1462   000E86  2238               	addwfc	(dtoa@n+4)^0,f,c
  1463   000E88  2239               	addwfc	(dtoa@n+5)^0,f,c
  1464   000E8A  223A               	addwfc	(dtoa@n+6)^0,f,c
  1465   000E8C  223B               	addwfc	(dtoa@n+7)^0,f,c
  1466   000E8E                     l2083:
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1469   000E8E  0100               	movlb	0	; () banked
  1470   000E90  BFC6               	btfsc	(_prec+1)& (0+255),7,b
  1471   000E92  EF55  F007         	goto	u980
  1472   000E96  51C6               	movf	(_prec+1)& (0+255),w,b
  1473   000E98  E106               	bnz	u981
  1474   000E9A  05C5               	decf	_prec& (0+255),w,b
  1475   000E9C  B0D8               	btfsc	status,0,c
  1476   000E9E  EF53  F007         	goto	u981
  1477   000EA2  EF55  F007         	goto	u980
  1478   000EA6                     u981:
  1479   000EA6  EF5B  F007         	goto	l1133
  1480   000EAA                     u980:
  1481   000EAA                     
  1482                           ; BSR set to: 0
  1483   000EAA  0E00               	movlw	0
  1484   000EAC  6E31               	movwf	(dtoa@p+1)^0,c
  1485   000EAE  0E01               	movlw	1
  1486   000EB0  6E30               	movwf	dtoa@p^0,c
  1487   000EB2  EF5F  F007         	goto	l1135
  1488   000EB6                     l1133:
  1489                           
  1490                           ; BSR set to: 0
  1491   000EB6  C0C5  F030         	movff	_prec,dtoa@p
  1492   000EBA  C0C6  F031         	movff	_prec+1,dtoa@p+1
  1493   000EBE                     l1135:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1497   000EBE  C0C3  F032         	movff	_width,dtoa@w
  1498   000EC2  C0C4  F033         	movff	_width+1,dtoa@w+1
  1499   000EC6                     
  1500                           ; BSR set to: 0
  1501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1502   000EC6  503E               	movf	dtoa@s^0,w,c
  1503   000EC8  B4D8               	btfsc	status,2,c
  1504   000ECA  EF69  F007         	goto	u991
  1505   000ECE  EF6B  F007         	goto	u990
  1506   000ED2                     u991:
  1507   000ED2  EF82  F007         	goto	l1136
  1508   000ED6                     u990:
  1509   000ED6                     
  1510                           ; BSR set to: 0
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1512   000ED6  0632               	decf	dtoa@w^0,f,c
  1513   000ED8  A0D8               	btfss	status,0,c
  1514   000EDA  0633               	decf	(dtoa@w+1)^0,f,c
  1515   000EDC                     
  1516                           ; BSR set to: 0
  1517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1518   000EDC  503E               	movf	dtoa@s^0,w,c
  1519   000EDE  A4D8               	btfss	status,2,c
  1520   000EE0  EF74  F007         	goto	u1001
  1521   000EE4  EF76  F007         	goto	u1000
  1522   000EE8                     u1001:
  1523   000EE8  EF7C  F007         	goto	l2095
  1524   000EEC                     u1000:
  1525   000EEC                     
  1526                           ; BSR set to: 0
  1527   000EEC  0E00               	movlw	0
  1528   000EEE  6E2F               	movwf	(_dtoa$2241+1)^0,c
  1529   000EF0  0E2B               	movlw	43
  1530   000EF2  6E2E               	movwf	_dtoa$2241^0,c
  1531   000EF4  EF80  F007         	goto	l2097
  1532   000EF8                     l2095:
  1533                           
  1534                           ; BSR set to: 0
  1535   000EF8  0E00               	movlw	0
  1536   000EFA  6E2F               	movwf	(_dtoa$2241+1)^0,c
  1537   000EFC  0E2D               	movlw	45
  1538   000EFE  6E2E               	movwf	_dtoa$2241^0,c
  1539   000F00                     l2097:
  1540                           
  1541                           ; BSR set to: 0
  1542   000F00  C02E  F03E         	movff	_dtoa$2241,dtoa@s
  1543   000F04                     l1136:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1547   000F04  0E00               	movlw	0
  1548   000F06  6E3D               	movwf	(dtoa@i+1)^0,c
  1549   000F08  0E1F               	movlw	31
  1550   000F0A  6E3C               	movwf	dtoa@i^0,c
  1551   000F0C                     
  1552                           ; BSR set to: 0
  1553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1554   000F0C  0E00               	movlw	0
  1555   000F0E  0101               	movlb	1	; () banked
  1556   000F10  6F5B               	movwf	(_dbuf+31)& (0+255),b
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1559   000F12  EF07  F008         	goto	l2111
  1560   000F16                     l2101:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1563   000F16  063C               	decf	dtoa@i^0,f,c
  1564   000F18  A0D8               	btfss	status,0,c
  1565   000F1A  063D               	decf	(dtoa@i+1)^0,f,c
  1566   000F1C                     
  1567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1568   000F1C  0E3C               	movlw	low _dbuf
  1569   000F1E  243C               	addwf	dtoa@i^0,w,c
  1570   000F20  6ED9               	movwf	fsr2l,c
  1571   000F22  0E01               	movlw	high _dbuf
  1572   000F24  203D               	addwfc	(dtoa@i+1)^0,w,c
  1573   000F26  6EDA               	movwf	fsr2h,c
  1574   000F28  C034  F001         	movff	dtoa@n,___aomod@dividend
  1575   000F2C  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1576   000F30  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1577   000F34  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1578   000F38  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1579   000F3C  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1580   000F40  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1581   000F44  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1582   000F48  0E0A               	movlw	10
  1583   000F4A  6E09               	movwf	___aomod@divisor^0,c
  1584   000F4C  0E00               	movlw	0
  1585   000F4E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1586   000F50  0E00               	movlw	0
  1587   000F52  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1588   000F54  0E00               	movlw	0
  1589   000F56  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1590   000F58  0E00               	movlw	0
  1591   000F5A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1592   000F5C  0E00               	movlw	0
  1593   000F5E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1594   000F60  0E00               	movlw	0
  1595   000F62  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1596   000F64  0E00               	movlw	0
  1597   000F66  6E10               	movwf	(___aomod@divisor+7)^0,c
  1598   000F68  ECAA  F00A         	call	___aomod	;wreg free
  1599   000F6C  C001  F026         	movff	?___aomod,??_dtoa
  1600   000F70  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1601   000F74  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1602   000F78  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1603   000F7C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1604   000F80  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1605   000F84  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1606   000F88  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1607   000F8C  C026  F013         	movff	??_dtoa,abs@a
  1608   000F90  C027  F014         	movff	??_dtoa+1,abs@a+1
  1609   000F94  ECFA  F00D         	call	_abs	;wreg free
  1610   000F98  5013               	movf	?_abs^0,w,c
  1611   000F9A  0F30               	addlw	48
  1612   000F9C  6EDF               	movwf	indf2,c
  1613   000F9E                     
  1614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1615   000F9E  0630               	decf	dtoa@p^0,f,c
  1616   000FA0  A0D8               	btfss	status,0,c
  1617   000FA2  0631               	decf	(dtoa@p+1)^0,f,c
  1618   000FA4                     
  1619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1620   000FA4  0632               	decf	dtoa@w^0,f,c
  1621   000FA6  A0D8               	btfss	status,0,c
  1622   000FA8  0633               	decf	(dtoa@w+1)^0,f,c
  1623   000FAA                     
  1624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1625   000FAA  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1626   000FAE  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1627   000FB2  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1628   000FB6  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1629   000FBA  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1630   000FBE  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1631   000FC2  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1632   000FC6  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1633   000FCA  0E0A               	movlw	10
  1634   000FCC  6E09               	movwf	___aodiv@divisor^0,c
  1635   000FCE  0E00               	movlw	0
  1636   000FD0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1637   000FD2  0E00               	movlw	0
  1638   000FD4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1639   000FD6  0E00               	movlw	0
  1640   000FD8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1641   000FDA  0E00               	movlw	0
  1642   000FDC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1643   000FDE  0E00               	movlw	0
  1644   000FE0  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1645   000FE2  0E00               	movlw	0
  1646   000FE4  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1647   000FE6  0E00               	movlw	0
  1648   000FE8  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1649   000FEA  EC30  F009         	call	___aodiv	;wreg free
  1650   000FEE  C001  F034         	movff	?___aodiv,dtoa@n
  1651   000FF2  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1652   000FF6  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1653   000FFA  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1654   000FFE  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1655   001002  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1656   001006  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1657   00100A  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1658   00100E                     l2111:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1661   00100E  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1662   001010  EF12  F008         	goto	u1011
  1663   001014  503D               	movf	(dtoa@i+1)^0,w,c
  1664   001016  E108               	bnz	u1010
  1665   001018  043C               	decf	dtoa@i^0,w,c
  1666   00101A  A0D8               	btfss	status,0,c
  1667   00101C  EF12  F008         	goto	u1011
  1668   001020  EF14  F008         	goto	u1010
  1669   001024                     u1011:
  1670   001024  EF30  F008         	goto	l2117
  1671   001028                     u1010:
  1672   001028  5034               	movf	dtoa@n^0,w,c
  1673   00102A  1035               	iorwf	(dtoa@n+1)^0,w,c
  1674   00102C  1036               	iorwf	(dtoa@n+2)^0,w,c
  1675   00102E  1037               	iorwf	(dtoa@n+3)^0,w,c
  1676   001030  1038               	iorwf	(dtoa@n+4)^0,w,c
  1677   001032  1039               	iorwf	(dtoa@n+5)^0,w,c
  1678   001034  103A               	iorwf	(dtoa@n+6)^0,w,c
  1679   001036  103B               	iorwf	(dtoa@n+7)^0,w,c
  1680   001038  A4D8               	btfss	status,2,c
  1681   00103A  EF21  F008         	goto	u1021
  1682   00103E  EF23  F008         	goto	u1020
  1683   001042                     u1021:
  1684   001042  EF8B  F007         	goto	l2101
  1685   001046                     u1020:
  1686   001046  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1687   001048  EF30  F008         	goto	u1030
  1688   00104C  5031               	movf	(dtoa@p+1)^0,w,c
  1689   00104E  E106               	bnz	u1031
  1690   001050  0430               	decf	dtoa@p^0,w,c
  1691   001052  B0D8               	btfsc	status,0,c
  1692   001054  EF2E  F008         	goto	u1031
  1693   001058  EF30  F008         	goto	u1030
  1694   00105C                     u1031:
  1695   00105C  EF8B  F007         	goto	l2101
  1696   001060                     u1030:
  1697   001060                     l2117:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1700   001060  503E               	movf	dtoa@s^0,w,c
  1701   001062  B4D8               	btfsc	status,2,c
  1702   001064  EF36  F008         	goto	u1041
  1703   001068  EF38  F008         	goto	u1040
  1704   00106C                     u1041:
  1705   00106C  EF43  F008         	goto	l2123
  1706   001070                     u1040:
  1707   001070                     
  1708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1709   001070  063C               	decf	dtoa@i^0,f,c
  1710   001072  A0D8               	btfss	status,0,c
  1711   001074  063D               	decf	(dtoa@i+1)^0,f,c
  1712   001076                     
  1713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1714   001076  0E3C               	movlw	low _dbuf
  1715   001078  243C               	addwf	dtoa@i^0,w,c
  1716   00107A  6ED9               	movwf	fsr2l,c
  1717   00107C  0E01               	movlw	high _dbuf
  1718   00107E  203D               	addwfc	(dtoa@i+1)^0,w,c
  1719   001080  6EDA               	movwf	fsr2h,c
  1720   001082  C03E  FFDF         	movff	dtoa@s,indf2
  1721   001086                     l2123:
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1724   001086  C01C  F011         	movff	dtoa@fp,pad@fp
  1725   00108A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1726   00108E  0E3C               	movlw	low _dbuf
  1727   001090  243C               	addwf	dtoa@i^0,w,c
  1728   001092  6E13               	movwf	pad@buf^0,c
  1729   001094  0E01               	movlw	high _dbuf
  1730   001096  203D               	addwfc	(dtoa@i+1)^0,w,c
  1731   001098  6E14               	movwf	(pad@buf+1)^0,c
  1732   00109A  C032  F015         	movff	dtoa@w,pad@p
  1733   00109E  C033  F016         	movff	dtoa@w+1,pad@p+1
  1734   0010A2  ECB4  F00C         	call	_pad	;wreg free
  1735   0010A6  0012               	return		;funcret
  1736   0010A8                     __end_of_dtoa:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _pad *****************
  1740 ;; Defined at:
  1741 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1744 ;;		 -> sprintf@f(11), 
  1745 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1746 ;;		 -> dbuf(32), 
  1747 ;;  p               2   20[COMRAM] int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  w               2   25[COMRAM] int 
  1750 ;;  i               2   23[COMRAM] int 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1760 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1763 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;Total ram usage:       11 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 3
  1767 ;; This function calls:
  1768 ;;		_fputc
  1769 ;;		_fputs
  1770 ;; This function is called by:
  1771 ;;		_dtoa
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text5
  1776   001968                     __ptext5:
  1777                           	callstack 0
  1778   001968                     _pad:
  1779                           	callstack 23
  1780   001968                     
  1781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1782   001968  BE16               	btfsc	(pad@p+1)^0,7,c
  1783   00196A  EFB9  F00C         	goto	u911
  1784   00196E  EFBB  F00C         	goto	u910
  1785   001972                     u911:
  1786   001972  EFC1  F00C         	goto	l2061
  1787   001976                     u910:
  1788   001976  C015  F01A         	movff	pad@p,pad@w
  1789   00197A  C016  F01B         	movff	pad@p+1,pad@w+1
  1790   00197E  EFC5  F00C         	goto	l1124
  1791   001982                     l2061:
  1792   001982  0E00               	movlw	0
  1793   001984  6E1B               	movwf	(pad@w+1)^0,c
  1794   001986  0E00               	movlw	0
  1795   001988  6E1A               	movwf	pad@w^0,c
  1796   00198A                     l1124:
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1799   00198A  0E00               	movlw	0
  1800   00198C  6E19               	movwf	(pad@i+1)^0,c
  1801   00198E  0E00               	movlw	0
  1802   001990  6E18               	movwf	pad@i^0,c
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1805   001992  EFD7  F00C         	goto	l2067
  1806   001996                     l2063:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1809   001996  0E00               	movlw	0
  1810   001998  6E02               	movwf	(fputc@c+1)^0,c
  1811   00199A  0E20               	movlw	32
  1812   00199C  6E01               	movwf	fputc@c^0,c
  1813   00199E  C011  F003         	movff	pad@fp,fputc@fp
  1814   0019A2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1815   0019A6  EC0B  F00C         	call	_fputc	;wreg free
  1816   0019AA                     
  1817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1818   0019AA  4A18               	infsnz	pad@i^0,f,c
  1819   0019AC  2A19               	incf	(pad@i+1)^0,f,c
  1820   0019AE                     l2067:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1823   0019AE  501A               	movf	pad@w^0,w,c
  1824   0019B0  5C18               	subwf	pad@i^0,w,c
  1825   0019B2  5019               	movf	(pad@i+1)^0,w,c
  1826   0019B4  0A80               	xorlw	128
  1827   0019B6  6E17               	movwf	??_pad^0,c
  1828   0019B8  501B               	movf	(pad@w+1)^0,w,c
  1829   0019BA  0A80               	xorlw	128
  1830   0019BC  5817               	subwfb	??_pad^0,w,c
  1831   0019BE  A0D8               	btfss	status,0,c
  1832   0019C0  EFE4  F00C         	goto	u921
  1833   0019C4  EFE6  F00C         	goto	u920
  1834   0019C8                     u921:
  1835   0019C8  EFCB  F00C         	goto	l2063
  1836   0019CC                     u920:
  1837   0019CC                     
  1838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1839   0019CC  C013  F00A         	movff	pad@buf,fputs@s
  1840   0019D0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1841   0019D4  C011  F00C         	movff	pad@fp,fputs@fp
  1842   0019D8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1843   0019DC  ECB8  F00D         	call	_fputs	;wreg free
  1844   0019E0  0012               	return		;funcret
  1845   0019E2                     __end_of_pad:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _fputs *****************
  1849 ;; Defined at:
  1850 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1853 ;;		 -> dbuf(32), 
  1854 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1855 ;;		 -> sprintf@f(11), 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  i               2   14[COMRAM] int 
  1858 ;;  c               1   13[COMRAM] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  2    9[COMRAM] int 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1872 ;;Total ram usage:        7 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 2
  1875 ;; This function calls:
  1876 ;;		_fputc
  1877 ;; This function is called by:
  1878 ;;		_pad
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text6
  1883   001B70                     __ptext6:
  1884                           	callstack 0
  1885   001B70                     _fputs:
  1886                           	callstack 23
  1887   001B70  0E00               	movlw	0
  1888   001B72  6E10               	movwf	(fputs@i+1)^0,c
  1889   001B74  0E00               	movlw	0
  1890   001B76  6E0F               	movwf	fputs@i^0,c
  1891   001B78  EFC9  F00D         	goto	l1971
  1892   001B7C                     l1967:
  1893   001B7C  C00E  F001         	movff	fputs@c,fputc@c
  1894   001B80  6A02               	clrf	(fputc@c+1)^0,c
  1895   001B82  C00C  F003         	movff	fputs@fp,fputc@fp
  1896   001B86  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1897   001B8A  EC0B  F00C         	call	_fputc	;wreg free
  1898   001B8E  4A0F               	infsnz	fputs@i^0,f,c
  1899   001B90  2A10               	incf	(fputs@i+1)^0,f,c
  1900   001B92                     l1971:
  1901   001B92  500F               	movf	fputs@i^0,w,c
  1902   001B94  240A               	addwf	fputs@s^0,w,c
  1903   001B96  6ED9               	movwf	fsr2l,c
  1904   001B98  5010               	movf	(fputs@i+1)^0,w,c
  1905   001B9A  200B               	addwfc	(fputs@s+1)^0,w,c
  1906   001B9C  6EDA               	movwf	fsr2h,c
  1907   001B9E  50DF               	movf	indf2,w,c
  1908   001BA0  6E0E               	movwf	fputs@c^0,c
  1909   001BA2  500E               	movf	fputs@c^0,w,c
  1910   001BA4  A4D8               	btfss	status,2,c
  1911   001BA6  EFD7  F00D         	goto	u761
  1912   001BAA  EFD9  F00D         	goto	u760
  1913   001BAE                     u761:
  1914   001BAE  EFBE  F00D         	goto	l1967
  1915   001BB2                     u760:
  1916   001BB2  0012               	return		;funcret
  1917   001BB4                     __end_of_fputs:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function _fputc *****************
  1921 ;; Defined at:
  1922 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  c               2    0[COMRAM] int 
  1925 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1926 ;;		 -> sprintf@f(11), 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2    0[COMRAM] int 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1942 ;;Total ram usage:        9 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 1
  1945 ;; This function calls:
  1946 ;;		_putch
  1947 ;; This function is called by:
  1948 ;;		_pad
  1949 ;;		_vfpfcnvrt
  1950 ;;		_fputs
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text7
  1955   001816                     __ptext7:
  1956                           	callstack 0
  1957   001816                     _fputc:
  1958                           	callstack 26
  1959   001816  5003               	movf	fputc@fp^0,w,c
  1960   001818  1004               	iorwf	(fputc@fp+1)^0,w,c
  1961   00181A  B4D8               	btfsc	status,2,c
  1962   00181C  EF12  F00C         	goto	u721
  1963   001820  EF14  F00C         	goto	u720
  1964   001824                     u721:
  1965   001824  EF1D  F00C         	goto	l1955
  1966   001828                     u720:
  1967   001828  5003               	movf	fputc@fp^0,w,c
  1968   00182A  1004               	iorwf	(fputc@fp+1)^0,w,c
  1969   00182C  A4D8               	btfss	status,2,c
  1970   00182E  EF1B  F00C         	goto	u731
  1971   001832  EF1D  F00C         	goto	u730
  1972   001836                     u731:
  1973   001836  EF22  F00C         	goto	l1957
  1974   00183A                     u730:
  1975   00183A                     l1955:
  1976   00183A  5001               	movf	fputc@c^0,w,c
  1977   00183C  ECE1  F00E         	call	_putch
  1978   001840  EF6F  F00C         	goto	l1172
  1979   001844                     l1957:
  1980   001844  EE20 F009          	lfsr	2,9
  1981   001848  5003               	movf	fputc@fp^0,w,c
  1982   00184A  26D9               	addwf	fsr2l,f,c
  1983   00184C  5004               	movf	(fputc@fp+1)^0,w,c
  1984   00184E  22DA               	addwfc	fsr2h,f,c
  1985   001850  50DE               	movf	postinc2,w,c
  1986   001852  10DE               	iorwf	postinc2,w,c
  1987   001854  B4D8               	btfsc	status,2,c
  1988   001856  EF2F  F00C         	goto	u741
  1989   00185A  EF31  F00C         	goto	u740
  1990   00185E                     u741:
  1991   00185E  EF4C  F00C         	goto	l1961
  1992   001862                     u740:
  1993   001862  EE20 F009          	lfsr	2,9
  1994   001866  5003               	movf	fputc@fp^0,w,c
  1995   001868  26D9               	addwf	fsr2l,f,c
  1996   00186A  5004               	movf	(fputc@fp+1)^0,w,c
  1997   00186C  22DA               	addwfc	fsr2h,f,c
  1998   00186E  EE10 F003          	lfsr	1,3
  1999   001872  5003               	movf	fputc@fp^0,w,c
  2000   001874  26E1               	addwf	fsr1l,f,c
  2001   001876  5004               	movf	(fputc@fp+1)^0,w,c
  2002   001878  22E2               	addwfc	fsr1h,f,c
  2003   00187A  50DE               	movf	postinc2,w,c
  2004   00187C  5CE6               	subwf	postinc1,w,c
  2005   00187E  50E6               	movf	postinc1,w,c
  2006   001880  0A80               	xorlw	128
  2007   001882  6E09               	movwf	(??_fputc+4)^0,c
  2008   001884  50DE               	movf	postinc2,w,c
  2009   001886  0A80               	xorlw	128
  2010   001888  5809               	subwfb	(??_fputc+4)^0,w,c
  2011   00188A  B0D8               	btfsc	status,0,c
  2012   00188C  EF4A  F00C         	goto	u751
  2013   001890  EF4C  F00C         	goto	u750
  2014   001894                     u751:
  2015   001894  EF6F  F00C         	goto	l1172
  2016   001898                     u750:
  2017   001898                     l1961:
  2018   001898  EE20 F003          	lfsr	2,3
  2019   00189C  5003               	movf	fputc@fp^0,w,c
  2020   00189E  26D9               	addwf	fsr2l,f,c
  2021   0018A0  5004               	movf	(fputc@fp+1)^0,w,c
  2022   0018A2  22DA               	addwfc	fsr2h,f,c
  2023   0018A4  CFDE F005          	movff	postinc2,??_fputc
  2024   0018A8  CFDD F006          	movff	postdec2,??_fputc+1
  2025   0018AC  C003  FFD9         	movff	fputc@fp,fsr2l
  2026   0018B0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2027   0018B4  CFDE F007          	movff	postinc2,??_fputc+2
  2028   0018B8  CFDD F008          	movff	postdec2,??_fputc+3
  2029   0018BC  5005               	movf	??_fputc^0,w,c
  2030   0018BE  2407               	addwf	(??_fputc+2)^0,w,c
  2031   0018C0  6ED9               	movwf	fsr2l,c
  2032   0018C2  5006               	movf	(??_fputc+1)^0,w,c
  2033   0018C4  2008               	addwfc	(??_fputc+3)^0,w,c
  2034   0018C6  6EDA               	movwf	fsr2h,c
  2035   0018C8  C001  FFDF         	movff	fputc@c,indf2
  2036   0018CC  EE20 F003          	lfsr	2,3
  2037   0018D0  5003               	movf	fputc@fp^0,w,c
  2038   0018D2  26D9               	addwf	fsr2l,f,c
  2039   0018D4  5004               	movf	(fputc@fp+1)^0,w,c
  2040   0018D6  22DA               	addwfc	fsr2h,f,c
  2041   0018D8  2ADE               	incf	postinc2,f,c
  2042   0018DA  0E00               	movlw	0
  2043   0018DC  22DD               	addwfc	postdec2,f,c
  2044   0018DE                     l1172:
  2045   0018DE  0012               	return		;funcret
  2046   0018E0                     __end_of_fputc:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _putch *****************
  2050 ;; Defined at:
  2051 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  c               1    wreg     unsigned char 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  c               1    0[COMRAM] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_fputc
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text8
  2079   001DC2                     __ptext8:
  2080                           	callstack 0
  2081   001DC2                     _putch:
  2082                           	callstack 26
  2083   001DC2  0012               	return		;funcret
  2084   001DC4                     __end_of_putch:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _abs *****************
  2088 ;; Defined at:
  2089 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  a               2   18[COMRAM] int 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  2   18[COMRAM] int 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2106 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;Total ram usage:        4 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_dtoa
  2113 ;;		_normalise_readings
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text9
  2118   001BF4                     __ptext9:
  2119                           	callstack 0
  2120   001BF4                     _abs:
  2121                           	callstack 26
  2122   001BF4  BE14               	btfsc	(abs@a+1)^0,7,c
  2123   001BF6  EF07  F00E         	goto	u770
  2124   001BFA  5014               	movf	(abs@a+1)^0,w,c
  2125   001BFC  E106               	bnz	u771
  2126   001BFE  0413               	decf	abs@a^0,w,c
  2127   001C00  B0D8               	btfsc	status,0,c
  2128   001C02  EF05  F00E         	goto	u771
  2129   001C06  EF07  F00E         	goto	u770
  2130   001C0A                     u771:
  2131   001C0A  EF15  F00E         	goto	l1092
  2132   001C0E                     u770:
  2133   001C0E  C013  F015         	movff	abs@a,??_abs
  2134   001C12  C014  F016         	movff	abs@a+1,??_abs+1
  2135   001C16  1E15               	comf	??_abs^0,f,c
  2136   001C18  1E16               	comf	(??_abs+1)^0,f,c
  2137   001C1A  4A15               	infsnz	??_abs^0,f,c
  2138   001C1C  2A16               	incf	(??_abs+1)^0,f,c
  2139   001C1E  C015  F013         	movff	??_abs,?_abs
  2140   001C22  C016  F014         	movff	??_abs+1,?_abs+1
  2141   001C26  EF19  F00E         	goto	l1095
  2142   001C2A                     l1092:
  2143   001C2A  C013  F013         	movff	abs@a,?_abs
  2144   001C2E  C014  F014         	movff	abs@a+1,?_abs+1
  2145   001C32                     l1095:
  2146   001C32  0012               	return		;funcret
  2147   001C34                     __end_of_abs:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function ___aomod *****************
  2151 ;; Defined at:
  2152 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  dividend        8    0[COMRAM] long long 
  2155 ;;  divisor         8    8[COMRAM] long long 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  sign            1   17[COMRAM] unsigned char 
  2158 ;;  counter         1   16[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  8    0[COMRAM] long long 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2168 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;Total ram usage:       18 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_dtoa
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text10
  2182   001554                     __ptext10:
  2183                           	callstack 0
  2184   001554                     ___aomod:
  2185                           	callstack 26
  2186   001554  0E00               	movlw	0
  2187   001556  6E12               	movwf	___aomod@sign^0,c
  2188   001558  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2189   00155A  EFB3  F00A         	goto	u850
  2190   00155E  EFB1  F00A         	goto	u851
  2191   001562                     u851:
  2192   001562  EFC5  F00A         	goto	l2029
  2193   001566                     u850:
  2194   001566  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2195   001568  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2196   00156A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2197   00156C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2198   00156E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2199   001570  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2200   001572  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2201   001574  6C01               	negf	___aomod@dividend^0,c
  2202   001576  0E00               	movlw	0
  2203   001578  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2204   00157A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2205   00157C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2206   00157E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2207   001580  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2208   001582  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2209   001584  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2210   001586  0E01               	movlw	1
  2211   001588  6E12               	movwf	___aomod@sign^0,c
  2212   00158A                     l2029:
  2213   00158A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2214   00158C  EFCC  F00A         	goto	u860
  2215   001590  EFCA  F00A         	goto	u861
  2216   001594                     u861:
  2217   001594  EFDC  F00A         	goto	l2033
  2218   001598                     u860:
  2219   001598  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2220   00159A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2221   00159C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2222   00159E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2223   0015A0  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2224   0015A2  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2225   0015A4  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2226   0015A6  6C09               	negf	___aomod@divisor^0,c
  2227   0015A8  0E00               	movlw	0
  2228   0015AA  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2229   0015AC  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2230   0015AE  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2231   0015B0  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2232   0015B2  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2233   0015B4  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2234   0015B6  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2235   0015B8                     l2033:
  2236   0015B8  5009               	movf	___aomod@divisor^0,w,c
  2237   0015BA  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2238   0015BC  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2239   0015BE  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2240   0015C0  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2241   0015C2  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2242   0015C4  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2243   0015C6  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2244   0015C8  B4D8               	btfsc	status,2,c
  2245   0015CA  EFE9  F00A         	goto	u871
  2246   0015CE  EFEB  F00A         	goto	u870
  2247   0015D2                     u871:
  2248   0015D2  EF33  F00B         	goto	l2049
  2249   0015D6                     u870:
  2250   0015D6  0E01               	movlw	1
  2251   0015D8  6E11               	movwf	___aomod@counter^0,c
  2252   0015DA  EFF9  F00A         	goto	l2039
  2253   0015DE                     l2037:
  2254   0015DE  90D8               	bcf	status,0,c
  2255   0015E0  3609               	rlcf	___aomod@divisor^0,f,c
  2256   0015E2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2257   0015E4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2258   0015E6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2259   0015E8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2260   0015EA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2261   0015EC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2262   0015EE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2263   0015F0  2A11               	incf	___aomod@counter^0,f,c
  2264   0015F2                     l2039:
  2265   0015F2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2266   0015F4  EFFE  F00A         	goto	u881
  2267   0015F8  EF00  F00B         	goto	u880
  2268   0015FC                     u881:
  2269   0015FC  EFEF  F00A         	goto	l2037
  2270   001600                     u880:
  2271   001600                     l2041:
  2272   001600  5009               	movf	___aomod@divisor^0,w,c
  2273   001602  5C01               	subwf	___aomod@dividend^0,w,c
  2274   001604  500A               	movf	(___aomod@divisor+1)^0,w,c
  2275   001606  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2276   001608  500B               	movf	(___aomod@divisor+2)^0,w,c
  2277   00160A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2278   00160C  500C               	movf	(___aomod@divisor+3)^0,w,c
  2279   00160E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2280   001610  500D               	movf	(___aomod@divisor+4)^0,w,c
  2281   001612  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2282   001614  500E               	movf	(___aomod@divisor+5)^0,w,c
  2283   001616  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2284   001618  500F               	movf	(___aomod@divisor+6)^0,w,c
  2285   00161A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2286   00161C  5010               	movf	(___aomod@divisor+7)^0,w,c
  2287   00161E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2288   001620  A0D8               	btfss	status,0,c
  2289   001622  EF15  F00B         	goto	u891
  2290   001626  EF17  F00B         	goto	u890
  2291   00162A                     u891:
  2292   00162A  EF27  F00B         	goto	l2045
  2293   00162E                     u890:
  2294   00162E  5009               	movf	___aomod@divisor^0,w,c
  2295   001630  5E01               	subwf	___aomod@dividend^0,f,c
  2296   001632  500A               	movf	(___aomod@divisor+1)^0,w,c
  2297   001634  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2298   001636  500B               	movf	(___aomod@divisor+2)^0,w,c
  2299   001638  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2300   00163A  500C               	movf	(___aomod@divisor+3)^0,w,c
  2301   00163C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2302   00163E  500D               	movf	(___aomod@divisor+4)^0,w,c
  2303   001640  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2304   001642  500E               	movf	(___aomod@divisor+5)^0,w,c
  2305   001644  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2306   001646  500F               	movf	(___aomod@divisor+6)^0,w,c
  2307   001648  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2308   00164A  5010               	movf	(___aomod@divisor+7)^0,w,c
  2309   00164C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2310   00164E                     l2045:
  2311   00164E  90D8               	bcf	status,0,c
  2312   001650  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2313   001652  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2314   001654  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2315   001656  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2316   001658  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2317   00165A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2318   00165C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2319   00165E  3209               	rrcf	___aomod@divisor^0,f,c
  2320   001660  2E11               	decfsz	___aomod@counter^0,f,c
  2321   001662  EF00  F00B         	goto	l2041
  2322   001666                     l2049:
  2323   001666  5012               	movf	___aomod@sign^0,w,c
  2324   001668  B4D8               	btfsc	status,2,c
  2325   00166A  EF39  F00B         	goto	u901
  2326   00166E  EF3B  F00B         	goto	u900
  2327   001672                     u901:
  2328   001672  EF4B  F00B         	goto	l2053
  2329   001676                     u900:
  2330   001676  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2331   001678  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2332   00167A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2333   00167C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2334   00167E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2335   001680  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2336   001682  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2337   001684  6C01               	negf	___aomod@dividend^0,c
  2338   001686  0E00               	movlw	0
  2339   001688  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2340   00168A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2341   00168C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2342   00168E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2343   001690  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2344   001692  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2345   001694  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2346   001696                     l2053:
  2347   001696  C001  F001         	movff	___aomod@dividend,?___aomod
  2348   00169A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2349   00169E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2350   0016A2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2351   0016A6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2352   0016AA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2353   0016AE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2354   0016B2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2355   0016B6  0012               	return		;funcret
  2356   0016B8                     __end_of___aomod:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function ___aodiv *****************
  2360 ;; Defined at:
  2361 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  dividend        8    0[COMRAM] long long 
  2364 ;;  divisor         8    8[COMRAM] long long 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  quotient        8   18[COMRAM] long long 
  2367 ;;  sign            1   17[COMRAM] unsigned char 
  2368 ;;  counter         1   16[COMRAM] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  8    0[COMRAM] long long 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2378 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;Total ram usage:       26 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_dtoa
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text11
  2392   001260                     __ptext11:
  2393                           	callstack 0
  2394   001260                     ___aodiv:
  2395                           	callstack 26
  2396   001260  0E00               	movlw	0
  2397   001262  6E12               	movwf	___aodiv@sign^0,c
  2398   001264  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2399   001266  EF39  F009         	goto	u780
  2400   00126A  EF37  F009         	goto	u781
  2401   00126E                     u781:
  2402   00126E  EF4B  F009         	goto	l1985
  2403   001272                     u780:
  2404   001272  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2405   001274  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2406   001276  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2407   001278  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2408   00127A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2409   00127C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2410   00127E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2411   001280  6C09               	negf	___aodiv@divisor^0,c
  2412   001282  0E00               	movlw	0
  2413   001284  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2414   001286  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2415   001288  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2416   00128A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2417   00128C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2418   00128E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2419   001290  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2420   001292  0E01               	movlw	1
  2421   001294  6E12               	movwf	___aodiv@sign^0,c
  2422   001296                     l1985:
  2423   001296  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2424   001298  EF52  F009         	goto	u790
  2425   00129C  EF50  F009         	goto	u791
  2426   0012A0                     u791:
  2427   0012A0  EF64  F009         	goto	l1991
  2428   0012A4                     u790:
  2429   0012A4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2430   0012A6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2431   0012A8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2432   0012AA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2433   0012AC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2434   0012AE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2435   0012B0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2436   0012B2  6C01               	negf	___aodiv@dividend^0,c
  2437   0012B4  0E00               	movlw	0
  2438   0012B6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2439   0012B8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2440   0012BA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2441   0012BC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2442   0012BE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2443   0012C0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2444   0012C2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2445   0012C4  0E01               	movlw	1
  2446   0012C6  1A12               	xorwf	___aodiv@sign^0,f,c
  2447   0012C8                     l1991:
  2448   0012C8  EE20  F013         	lfsr	2,___aodiv@quotient
  2449   0012CC  0E07               	movlw	7
  2450   0012CE                     u801:
  2451   0012CE  6ADE               	clrf	postinc2,c
  2452   0012D0  06E8               	decf	wreg,f,c
  2453   0012D2  E2FD               	bc	u801
  2454   0012D4  5009               	movf	___aodiv@divisor^0,w,c
  2455   0012D6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2456   0012D8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2457   0012DA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2458   0012DC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2459   0012DE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2460   0012E0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2461   0012E2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2462   0012E4  B4D8               	btfsc	status,2,c
  2463   0012E6  EF77  F009         	goto	u811
  2464   0012EA  EF79  F009         	goto	u810
  2465   0012EE                     u811:
  2466   0012EE  EFCB  F009         	goto	l2013
  2467   0012F2                     u810:
  2468   0012F2  0E01               	movlw	1
  2469   0012F4  6E11               	movwf	___aodiv@counter^0,c
  2470   0012F6  EF87  F009         	goto	l1999
  2471   0012FA                     l1997:
  2472   0012FA  90D8               	bcf	status,0,c
  2473   0012FC  3609               	rlcf	___aodiv@divisor^0,f,c
  2474   0012FE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2475   001300  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2476   001302  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2477   001304  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2478   001306  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2479   001308  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2480   00130A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2481   00130C  2A11               	incf	___aodiv@counter^0,f,c
  2482   00130E                     l1999:
  2483   00130E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2484   001310  EF8C  F009         	goto	u821
  2485   001314  EF8E  F009         	goto	u820
  2486   001318                     u821:
  2487   001318  EF7D  F009         	goto	l1997
  2488   00131C                     u820:
  2489   00131C                     l2001:
  2490   00131C  90D8               	bcf	status,0,c
  2491   00131E  3613               	rlcf	___aodiv@quotient^0,f,c
  2492   001320  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2493   001322  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2494   001324  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2495   001326  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2496   001328  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2497   00132A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2498   00132C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2499   00132E  5009               	movf	___aodiv@divisor^0,w,c
  2500   001330  5C01               	subwf	___aodiv@dividend^0,w,c
  2501   001332  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2502   001334  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2503   001336  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2504   001338  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2505   00133A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2506   00133C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2507   00133E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2508   001340  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2509   001342  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2510   001344  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2511   001346  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2512   001348  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2513   00134A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2514   00134C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2515   00134E  A0D8               	btfss	status,0,c
  2516   001350  EFAC  F009         	goto	u831
  2517   001354  EFAE  F009         	goto	u830
  2518   001358                     u831:
  2519   001358  EFBF  F009         	goto	l2009
  2520   00135C                     u830:
  2521   00135C  5009               	movf	___aodiv@divisor^0,w,c
  2522   00135E  5E01               	subwf	___aodiv@dividend^0,f,c
  2523   001360  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2524   001362  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2525   001364  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2526   001366  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2527   001368  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2528   00136A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2529   00136C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2530   00136E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2531   001370  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2532   001372  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2533   001374  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2534   001376  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2535   001378  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2536   00137A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2537   00137C  8013               	bsf	___aodiv@quotient^0,0,c
  2538   00137E                     l2009:
  2539   00137E  90D8               	bcf	status,0,c
  2540   001380  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2541   001382  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2542   001384  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2543   001386  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2544   001388  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2545   00138A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2546   00138C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2547   00138E  3209               	rrcf	___aodiv@divisor^0,f,c
  2548   001390  2E11               	decfsz	___aodiv@counter^0,f,c
  2549   001392  EF8E  F009         	goto	l2001
  2550   001396                     l2013:
  2551   001396  5012               	movf	___aodiv@sign^0,w,c
  2552   001398  B4D8               	btfsc	status,2,c
  2553   00139A  EFD1  F009         	goto	u841
  2554   00139E  EFD3  F009         	goto	u840
  2555   0013A2                     u841:
  2556   0013A2  EFE3  F009         	goto	l2017
  2557   0013A6                     u840:
  2558   0013A6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2559   0013A8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2560   0013AA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2561   0013AC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2562   0013AE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2563   0013B0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2564   0013B2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2565   0013B4  6C13               	negf	___aodiv@quotient^0,c
  2566   0013B6  0E00               	movlw	0
  2567   0013B8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2568   0013BA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2569   0013BC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2570   0013BE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2571   0013C0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2572   0013C2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2573   0013C4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2574   0013C6                     l2017:
  2575   0013C6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2576   0013CA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2577   0013CE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2578   0013D2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2579   0013D6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2580   0013DA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2581   0013DE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2582   0013E2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2583   0013E6  0012               	return		;funcret
  2584   0013E8                     __end_of___aodiv:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _setMotorPWM *****************
  2588 ;; Defined at:
  2589 ;;		line 61 in file "dc_motor.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  m               2   13[COMRAM] PTR struct DC_motor
  2592 ;;		 -> main@motorR(9), main@motorL(9), 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  negDuty         1   18[COMRAM] unsigned char 
  2595 ;;  posDuty         1   17[COMRAM] unsigned char 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;Total ram usage:        6 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 1
  2612 ;; This function calls:
  2613 ;;		___lwdiv
  2614 ;;		___wmul
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;;		_stop
  2618 ;;		_turnLeft45
  2619 ;;		_turnRight45
  2620 ;;		_fullSpeedAhead
  2621 ;;		_reverseFullSpeed
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text12
  2626   0013E8                     __ptext12:
  2627                           	callstack 0
  2628   0013E8                     _setMotorPWM:
  2629                           	callstack 29
  2630   0013E8                     
  2631                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2632   0013E8  EE20 F002          	lfsr	2,2
  2633   0013EC  500E               	movf	setMotorPWM@m^0,w,c
  2634   0013EE  26D9               	addwf	fsr2l,f,c
  2635   0013F0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2636   0013F2  22DA               	addwfc	fsr2h,f,c
  2637   0013F4  50DF               	movf	indf2,w,c
  2638   0013F6  B4D8               	btfsc	status,2,c
  2639   0013F8  EF00  F00A         	goto	u1151
  2640   0013FC  EF02  F00A         	goto	u1150
  2641   001400                     u1151:
  2642   001400  EF36  F00A         	goto	l2299
  2643   001404                     u1150:
  2644   001404                     
  2645                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2646   001404  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2647   001408  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2648   00140C  50DF               	movf	indf2,w,c
  2649   00140E  6E10               	movwf	??_setMotorPWM^0,c
  2650   001410  5010               	movf	??_setMotorPWM^0,w,c
  2651   001412  6E01               	movwf	___wmul@multiplier^0,c
  2652   001414  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2653   001416  EE20 F003          	lfsr	2,3
  2654   00141A  500E               	movf	setMotorPWM@m^0,w,c
  2655   00141C  26D9               	addwf	fsr2l,f,c
  2656   00141E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2657   001420  22DA               	addwfc	fsr2h,f,c
  2658   001422  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2659   001426  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2660   00142A  EC75  F00E         	call	___wmul	;wreg free
  2661   00142E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2662   001432  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2663   001436  0E00               	movlw	0
  2664   001438  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2665   00143A  0E64               	movlw	100
  2666   00143C  6E09               	movwf	___lwdiv@divisor^0,c
  2667   00143E  EC2C  F00D         	call	___lwdiv	;wreg free
  2668   001442  EE20 F003          	lfsr	2,3
  2669   001446  500E               	movf	setMotorPWM@m^0,w,c
  2670   001448  26D9               	addwf	fsr2l,f,c
  2671   00144A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2672   00144C  22DA               	addwfc	fsr2h,f,c
  2673   00144E  50DF               	movf	indf2,w,c
  2674   001450  6E11               	movwf	(??_setMotorPWM+1)^0,c
  2675   001452  5007               	movf	?___lwdiv^0,w,c
  2676   001454  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  2677   001456  6E12               	movwf	setMotorPWM@posDuty^0,c
  2678   001458                     
  2679                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2680   001458  EE20 F003          	lfsr	2,3
  2681   00145C  500E               	movf	setMotorPWM@m^0,w,c
  2682   00145E  26D9               	addwf	fsr2l,f,c
  2683   001460  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2684   001462  22DA               	addwfc	fsr2h,f,c
  2685   001464  50DF               	movf	indf2,w,c
  2686   001466  6E13               	movwf	setMotorPWM@negDuty^0,c
  2687                           
  2688                           ;dc_motor.c: 68:     }
  2689   001468  EF59  F00A         	goto	l2303
  2690   00146C                     l2299:
  2691                           
  2692                           ;dc_motor.c: 70:         posDuty=0;
  2693   00146C  0E00               	movlw	0
  2694   00146E  6E12               	movwf	setMotorPWM@posDuty^0,c
  2695   001470                     
  2696                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2697   001470  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2698   001474  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2699   001478  50DF               	movf	indf2,w,c
  2700   00147A  6E10               	movwf	??_setMotorPWM^0,c
  2701   00147C  5010               	movf	??_setMotorPWM^0,w,c
  2702   00147E  6E01               	movwf	___wmul@multiplier^0,c
  2703   001480  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2704   001482  EE20 F003          	lfsr	2,3
  2705   001486  500E               	movf	setMotorPWM@m^0,w,c
  2706   001488  26D9               	addwf	fsr2l,f,c
  2707   00148A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2708   00148C  22DA               	addwfc	fsr2h,f,c
  2709   00148E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2710   001492  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2711   001496  EC75  F00E         	call	___wmul	;wreg free
  2712   00149A  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2713   00149E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2714   0014A2  0E00               	movlw	0
  2715   0014A4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2716   0014A6  0E64               	movlw	100
  2717   0014A8  6E09               	movwf	___lwdiv@divisor^0,c
  2718   0014AA  EC2C  F00D         	call	___lwdiv	;wreg free
  2719   0014AE  5007               	movf	?___lwdiv^0,w,c
  2720   0014B0  6E13               	movwf	setMotorPWM@negDuty^0,c
  2721   0014B2                     l2303:
  2722                           
  2723                           ;dc_motor.c: 74:     if (m->direction) {
  2724   0014B2  EE20 F001          	lfsr	2,1
  2725   0014B6  500E               	movf	setMotorPWM@m^0,w,c
  2726   0014B8  26D9               	addwf	fsr2l,f,c
  2727   0014BA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2728   0014BC  22DA               	addwfc	fsr2h,f,c
  2729   0014BE  50DF               	movf	indf2,w,c
  2730   0014C0  B4D8               	btfsc	status,2,c
  2731   0014C2  EF65  F00A         	goto	u1161
  2732   0014C6  EF67  F00A         	goto	u1160
  2733   0014CA                     u1161:
  2734   0014CA  EF89  F00A         	goto	l2307
  2735   0014CE                     u1160:
  2736   0014CE                     
  2737                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2738   0014CE  EE20 F005          	lfsr	2,5
  2739   0014D2  500E               	movf	setMotorPWM@m^0,w,c
  2740   0014D4  26D9               	addwf	fsr2l,f,c
  2741   0014D6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2742   0014D8  22DA               	addwfc	fsr2h,f,c
  2743   0014DA  CFDE F010          	movff	postinc2,??_setMotorPWM
  2744   0014DE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2745   0014E2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2746   0014E6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2747   0014EA  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2748                           
  2749                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2750   0014EE  EE20 F007          	lfsr	2,7
  2751   0014F2  500E               	movf	setMotorPWM@m^0,w,c
  2752   0014F4  26D9               	addwf	fsr2l,f,c
  2753   0014F6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2754   0014F8  22DA               	addwfc	fsr2h,f,c
  2755   0014FA  CFDE F010          	movff	postinc2,??_setMotorPWM
  2756   0014FE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2757   001502  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2758   001506  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2759   00150A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2760                           
  2761                           ;dc_motor.c: 77:     } else {
  2762   00150E  EFA9  F00A         	goto	l95
  2763   001512                     l2307:
  2764                           
  2765                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2766   001512  EE20 F005          	lfsr	2,5
  2767   001516  500E               	movf	setMotorPWM@m^0,w,c
  2768   001518  26D9               	addwf	fsr2l,f,c
  2769   00151A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2770   00151C  22DA               	addwfc	fsr2h,f,c
  2771   00151E  CFDE F010          	movff	postinc2,??_setMotorPWM
  2772   001522  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2773   001526  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2774   00152A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2775   00152E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2776                           
  2777                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2778   001532  EE20 F007          	lfsr	2,7
  2779   001536  500E               	movf	setMotorPWM@m^0,w,c
  2780   001538  26D9               	addwf	fsr2l,f,c
  2781   00153A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2782   00153C  22DA               	addwfc	fsr2h,f,c
  2783   00153E  CFDE F010          	movff	postinc2,??_setMotorPWM
  2784   001542  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2785   001546  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2786   00154A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2787   00154E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2788   001552                     l95:
  2789   001552  0012               	return		;funcret
  2790   001554                     __end_of_setMotorPWM:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function ___wmul *****************
  2794 ;; Defined at:
  2795 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  multiplier      2    0[COMRAM] unsigned int 
  2798 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  product         2    4[COMRAM] unsigned int 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  2    0[COMRAM] unsigned int 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, prodl, prodh
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;Total ram usage:        6 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_setMotorPWM
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text13
  2824   001CEA                     __ptext13:
  2825                           	callstack 0
  2826   001CEA                     ___wmul:
  2827                           	callstack 29
  2828   001CEA  5001               	movf	___wmul@multiplier^0,w,c
  2829   001CEC  0203               	mulwf	___wmul@multiplicand^0,c
  2830   001CEE  CFF3 F005          	movff	prodl,___wmul@product
  2831   001CF2  CFF4 F006          	movff	prodh,___wmul@product+1
  2832   001CF6  5001               	movf	___wmul@multiplier^0,w,c
  2833   001CF8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2834   001CFA  50F3               	movf	243,w,c
  2835   001CFC  2606               	addwf	(___wmul@product+1)^0,f,c
  2836   001CFE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2837   001D00  0203               	mulwf	___wmul@multiplicand^0,c
  2838   001D02  50F3               	movf	243,w,c
  2839   001D04  2606               	addwf	(___wmul@product+1)^0,f,c
  2840   001D06  C005  F001         	movff	___wmul@product,?___wmul
  2841   001D0A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2842   001D0E  0012               	return		;funcret
  2843   001D10                     __end_of___wmul:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function ___lwdiv *****************
  2847 ;; Defined at:
  2848 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  dividend        2    6[COMRAM] unsigned int 
  2851 ;;  divisor         2    8[COMRAM] unsigned int 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  quotient        2   10[COMRAM] unsigned int 
  2854 ;;  counter         1   12[COMRAM] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2    6[COMRAM] unsigned int 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;Total ram usage:        7 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_setMotorPWM
  2874 ;;		_collect_avg_readings
  2875 ;;		_normalise_readings
  2876 ;;		_make_master_closeness
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text14
  2881   001A58                     __ptext14:
  2882                           	callstack 0
  2883   001A58                     ___lwdiv:
  2884                           	callstack 29
  2885   001A58  0E00               	movlw	0
  2886   001A5A  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2887   001A5C  0E00               	movlw	0
  2888   001A5E  6E0B               	movwf	___lwdiv@quotient^0,c
  2889   001A60  5009               	movf	___lwdiv@divisor^0,w,c
  2890   001A62  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2891   001A64  B4D8               	btfsc	status,2,c
  2892   001A66  EF37  F00D         	goto	u1111
  2893   001A6A  EF39  F00D         	goto	u1110
  2894   001A6E                     u1111:
  2895   001A6E  EF61  F00D         	goto	l908
  2896   001A72                     u1110:
  2897   001A72  0E01               	movlw	1
  2898   001A74  6E0D               	movwf	___lwdiv@counter^0,c
  2899   001A76  EF41  F00D         	goto	l2219
  2900   001A7A                     l2217:
  2901   001A7A  90D8               	bcf	status,0,c
  2902   001A7C  3609               	rlcf	___lwdiv@divisor^0,f,c
  2903   001A7E  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2904   001A80  2A0D               	incf	___lwdiv@counter^0,f,c
  2905   001A82                     l2219:
  2906   001A82  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2907   001A84  EF46  F00D         	goto	u1121
  2908   001A88  EF48  F00D         	goto	u1120
  2909   001A8C                     u1121:
  2910   001A8C  EF3D  F00D         	goto	l2217
  2911   001A90                     u1120:
  2912   001A90                     l2221:
  2913   001A90  90D8               	bcf	status,0,c
  2914   001A92  360B               	rlcf	___lwdiv@quotient^0,f,c
  2915   001A94  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2916   001A96  5009               	movf	___lwdiv@divisor^0,w,c
  2917   001A98  5C07               	subwf	___lwdiv@dividend^0,w,c
  2918   001A9A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2919   001A9C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2920   001A9E  A0D8               	btfss	status,0,c
  2921   001AA0  EF54  F00D         	goto	u1131
  2922   001AA4  EF56  F00D         	goto	u1130
  2923   001AA8                     u1131:
  2924   001AA8  EF5B  F00D         	goto	l2229
  2925   001AAC                     u1130:
  2926   001AAC  5009               	movf	___lwdiv@divisor^0,w,c
  2927   001AAE  5E07               	subwf	___lwdiv@dividend^0,f,c
  2928   001AB0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2929   001AB2  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2930   001AB4  800B               	bsf	___lwdiv@quotient^0,0,c
  2931   001AB6                     l2229:
  2932   001AB6  90D8               	bcf	status,0,c
  2933   001AB8  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2934   001ABA  3209               	rrcf	___lwdiv@divisor^0,f,c
  2935   001ABC  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2936   001ABE  EF48  F00D         	goto	l2221
  2937   001AC2                     l908:
  2938   001AC2  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  2939   001AC6  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2940   001ACA  0012               	return		;funcret
  2941   001ACC                     __end_of___lwdiv:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _sendStringSerial4 *****************
  2945 ;; Defined at:
  2946 ;;		line 39 in file "serial.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  string          2    1[COMRAM] PTR unsigned char 
  2949 ;;		 -> main@buf(20), 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;Total ram usage:        2 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 1
  2968 ;; This function calls:
  2969 ;;		_sendCharSerial4
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text15
  2976   001C68                     __ptext15:
  2977                           	callstack 0
  2978   001C68                     _sendStringSerial4:
  2979                           	callstack 29
  2980   001C68                     
  2981                           ;serial.c: 40:  while(*string != 0) {
  2982   001C68  EF3F  F00E         	goto	l2407
  2983   001C6C                     l2403:
  2984                           
  2985                           ;serial.c: 41:         sendCharSerial4(*string++);
  2986   001C6C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2987   001C70  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2988   001C74  50DF               	movf	indf2,w,c
  2989   001C76  ECC5  F00E         	call	_sendCharSerial4
  2990   001C7A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2991   001C7C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2992   001C7E                     l2407:
  2993                           
  2994                           ;serial.c: 40:  while(*string != 0) {
  2995   001C7E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2996   001C82  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2997   001C86  50DF               	movf	indf2,w,c
  2998   001C88  A4D8               	btfss	status,2,c
  2999   001C8A  EF49  F00E         	goto	u1221
  3000   001C8E  EF4B  F00E         	goto	u1220
  3001   001C92                     u1221:
  3002   001C92  EF36  F00E         	goto	l2403
  3003   001C96                     u1220:
  3004   001C96  0012               	return		;funcret
  3005   001C98                     __end_of_sendStringSerial4:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function _sendCharSerial4 *****************
  3009 ;; Defined at:
  3010 ;;		line 32 in file "serial.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  charToSend      1    wreg     unsigned char 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  charToSend      1    0[COMRAM] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;Total ram usage:        1 bytes
  3029 ;; Hardware stack levels used: 1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_sendStringSerial4
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text16
  3038   001D8A                     __ptext16:
  3039                           	callstack 0
  3040   001D8A                     _sendCharSerial4:
  3041                           	callstack 29
  3042                           
  3043                           ;incstack = 0
  3044                           ;sendCharSerial4@charToSend stored from wreg
  3045   001D8A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3046   001D8C                     l373:
  3047   001D8C  010E               	movlb	14	; () banked
  3048   001D8E  A537               	btfss	55,2,b	;volatile
  3049   001D90  EFCC  F00E         	goto	u1101
  3050   001D94  EFCE  F00E         	goto	u1100
  3051   001D98                     u1101:
  3052   001D98  EFC6  F00E         	goto	l373
  3053   001D9C                     u1100:
  3054   001D9C                     
  3055                           ; BSR set to: 14
  3056                           ;serial.c: 34:     TX4REG = charToSend;
  3057   001D9C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3058   001DA0                     
  3059                           ; BSR set to: 14
  3060   001DA0  0012               	return		;funcret
  3061   001DA2                     __end_of_sendCharSerial4:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function _initUSART4 *****************
  3065 ;; Defined at:
  3066 ;;		line 6 in file "serial.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;Total ram usage:        0 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text17
  3094   001D32                     __ptext17:
  3095                           	callstack 0
  3096   001D32                     _initUSART4:
  3097                           	callstack 30
  3098   001D32                     
  3099                           ;serial.c: 10:     RC0PPS = 0x12;
  3100   001D32  0E12               	movlw	18
  3101   001D34  010E               	movlb	14	; () banked
  3102   001D36  6F62               	movwf	98,b	;volatile
  3103                           
  3104                           ;serial.c: 11:     RX4PPS = 0x11;
  3105   001D38  0E11               	movlw	17
  3106   001D3A  6F15               	movwf	21,b	;volatile
  3107   001D3C                     
  3108                           ; BSR set to: 14
  3109                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3110   001D3C  8283               	bsf	131,1,c	;volatile
  3111   001D3E                     
  3112                           ; BSR set to: 14
  3113                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3114   001D3E  97E9               	bcf	233,3,b	;volatile
  3115   001D40                     
  3116                           ; BSR set to: 14
  3117                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3118   001D40  95E8               	bcf	232,2,b	;volatile
  3119                           
  3120                           ;serial.c: 17:     SP4BRGL = 51;
  3121   001D42  0E33               	movlw	51
  3122   001D44  6FE5               	movwf	229,b	;volatile
  3123                           
  3124                           ;serial.c: 18:     SP4BRGH = 0;
  3125   001D46  0E00               	movlw	0
  3126   001D48  6FE6               	movwf	230,b	;volatile
  3127   001D4A                     
  3128                           ; BSR set to: 14
  3129                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3130   001D4A  89E7               	bsf	231,4,b	;volatile
  3131   001D4C                     
  3132                           ; BSR set to: 14
  3133                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3134   001D4C  8BE8               	bsf	232,5,b	;volatile
  3135   001D4E                     
  3136                           ; BSR set to: 14
  3137                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3138   001D4E  8FE7               	bsf	231,7,b	;volatile
  3139   001D50                     
  3140                           ; BSR set to: 14
  3141   001D50  0012               	return		;funcret
  3142   001D52                     __end_of_initUSART4:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _initDCmotorsPWM *****************
  3146 ;; Defined at:
  3147 ;;		line 6 in file "dc_motor.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text18
  3175   0018E0                     __ptext18:
  3176                           	callstack 0
  3177   0018E0                     _initDCmotorsPWM:
  3178                           	callstack 30
  3179   0018E0                     
  3180                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3181   0018E0  9485               	bcf	133,2,c	;volatile
  3182                           
  3183                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3184   0018E2  9885               	bcf	133,4,c	;volatile
  3185                           
  3186                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3187   0018E4  9E83               	bcf	131,7,c	;volatile
  3188                           
  3189                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3190   0018E6  9C87               	bcf	135,6,c	;volatile
  3191   0018E8                     
  3192                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3193   0018E8  0E05               	movlw	5
  3194   0018EA  010E               	movlb	14	; () banked
  3195   0018EC  6F74               	movwf	116,b	;volatile
  3196                           
  3197                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3198   0018EE  0E06               	movlw	6
  3199   0018F0  6F76               	movwf	118,b	;volatile
  3200                           
  3201                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3202   0018F2  0E07               	movlw	7
  3203   0018F4  6F69               	movwf	105,b	;volatile
  3204                           
  3205                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3206   0018F6  0E08               	movlw	8
  3207   0018F8  6F88               	movwf	136,b	;volatile
  3208                           
  3209                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3210   0018FA  50BD               	movf	189,w,c	;volatile
  3211   0018FC  0B8F               	andlw	-113
  3212   0018FE  0940               	iorlw	64
  3213   001900  6EBD               	movwf	189,c	;volatile
  3214                           
  3215                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3216   001902  0EE0               	movlw	-32
  3217   001904  16BE               	andwf	190,f,c	;volatile
  3218                           
  3219                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3220   001906  50BF               	movf	191,w,c	;volatile
  3221   001908  0BF0               	andlw	-16
  3222   00190A  0901               	iorlw	1
  3223   00190C  6EBF               	movwf	191,c	;volatile
  3224                           
  3225                           ;dc_motor.c: 26:     T2PR=99;
  3226   00190E  0E63               	movlw	99
  3227   001910  6EBC               	movwf	188,c	;volatile
  3228   001912                     
  3229                           ; BSR set to: 14
  3230                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3231   001912  8EBD               	bsf	189,7,c	;volatile
  3232                           
  3233                           ;dc_motor.c: 31:     CCPR1H=0;
  3234   001914  0E00               	movlw	0
  3235   001916  6EAA               	movwf	170,c	;volatile
  3236                           
  3237                           ;dc_motor.c: 32:     CCPR2H=0;
  3238   001918  0E00               	movlw	0
  3239   00191A  6EA6               	movwf	166,c	;volatile
  3240                           
  3241                           ;dc_motor.c: 33:     CCPR3H=0;
  3242   00191C  0E00               	movlw	0
  3243   00191E  010F               	movlb	15	; () banked
  3244   001920  6F25               	movwf	37,b	;volatile
  3245                           
  3246                           ;dc_motor.c: 34:     CCPR4H=0;
  3247   001922  0E00               	movlw	0
  3248   001924  6F21               	movwf	33,b	;volatile
  3249                           
  3250                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3251   001926  0EFC               	movlw	-4
  3252   001928  16AD               	andwf	173,f,c	;volatile
  3253                           
  3254                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3255   00192A  0EF3               	movlw	-13
  3256   00192C  16AD               	andwf	173,f,c	;volatile
  3257                           
  3258                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3259   00192E  0ECF               	movlw	-49
  3260   001930  16AD               	andwf	173,f,c	;volatile
  3261                           
  3262                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3263   001932  0E3F               	movlw	-193
  3264   001934  16AD               	andwf	173,f,c	;volatile
  3265   001936                     
  3266                           ; BSR set to: 15
  3267                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3268   001936  88AB               	bsf	171,4,c	;volatile
  3269                           
  3270                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3271   001938  50AB               	movf	171,w,c	;volatile
  3272   00193A  0BF0               	andlw	-16
  3273   00193C  090C               	iorlw	12
  3274   00193E  6EAB               	movwf	171,c	;volatile
  3275   001940                     
  3276                           ; BSR set to: 15
  3277                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3278   001940  8EAB               	bsf	171,7,c	;volatile
  3279   001942                     
  3280                           ; BSR set to: 15
  3281                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3282   001942  88A7               	bsf	167,4,c	;volatile
  3283                           
  3284                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3285   001944  50A7               	movf	167,w,c	;volatile
  3286   001946  0BF0               	andlw	-16
  3287   001948  090C               	iorlw	12
  3288   00194A  6EA7               	movwf	167,c	;volatile
  3289   00194C                     
  3290                           ; BSR set to: 15
  3291                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3292   00194C  8EA7               	bsf	167,7,c	;volatile
  3293   00194E                     
  3294                           ; BSR set to: 15
  3295                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3296   00194E  8926               	bsf	38,4,b	;volatile
  3297                           
  3298                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3299   001950  5126               	movf	38,w,b	;volatile
  3300   001952  0BF0               	andlw	-16
  3301   001954  090C               	iorlw	12
  3302   001956  6F26               	movwf	38,b	;volatile
  3303   001958                     
  3304                           ; BSR set to: 15
  3305                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3306   001958  8F26               	bsf	38,7,b	;volatile
  3307   00195A                     
  3308                           ; BSR set to: 15
  3309                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3310   00195A  8922               	bsf	34,4,b	;volatile
  3311                           
  3312                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3313   00195C  5122               	movf	34,w,b	;volatile
  3314   00195E  0BF0               	andlw	-16
  3315   001960  090C               	iorlw	12
  3316   001962  6F22               	movwf	34,b	;volatile
  3317   001964                     
  3318                           ; BSR set to: 15
  3319                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3320   001964  8F22               	bsf	34,7,b	;volatile
  3321   001966                     
  3322                           ; BSR set to: 15
  3323   001966  0012               	return		;funcret
  3324   001968                     __end_of_initDCmotorsPWM:
  3325                           	callstack 0
  3326                           
  3327 ;; *************** function _determine_card *****************
  3328 ;; Defined at:
  3329 ;;		line 95 in file "colour_identify.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  master_close    2    0[COMRAM] PTR unsigned int 
  3332 ;;		 -> main@master_closeness(6), 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  i               1    8[COMRAM] enum E14551
  3335 ;;  current_smal    2    6[COMRAM] unsigned int 
  3336 ;;  predicted_co    1    0        enum E14551
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      enum E14575
  3339 ;; Registers used:
  3340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;Total ram usage:        9 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text19
  3360   0019E2                     __ptext19:
  3361                           	callstack 0
  3362   0019E2                     _determine_card:
  3363                           	callstack 30
  3364   0019E2                     
  3365                           ;colour_identify.c: 97:     unsigned int current_smallest = master_closeness[RED];
  3366   0019E2  C001  FFD9         	movff	determine_card@master_closeness,fsr2l
  3367   0019E6  C002  FFDA         	movff	determine_card@master_closeness+1,fsr2h
  3368   0019EA  CFDE F007          	movff	postinc2,determine_card@current_smallest
  3369   0019EE  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  3370   0019F2                     
  3371                           ;colour_identify.c: 98:     for(colour i = GREEN; i<=BLUE; i++){
  3372   0019F2  0E01               	movlw	1
  3373   0019F4  6E09               	movwf	determine_card@i^0,c
  3374   0019F6                     l2419:
  3375                           
  3376                           ;colour_identify.c: 99:         if(master_closeness[i] < current_smallest){
  3377   0019F6  5009               	movf	determine_card@i^0,w,c
  3378   0019F8  0D02               	mullw	2
  3379   0019FA  CFF3 F003          	movff	prodl,??_determine_card
  3380   0019FE  CFF4 F004          	movff	prodh,??_determine_card+1
  3381   001A02  5003               	movf	??_determine_card^0,w,c
  3382   001A04  2401               	addwf	determine_card@master_closeness^0,w,c
  3383   001A06  6ED9               	movwf	fsr2l,c
  3384   001A08  5004               	movf	(??_determine_card+1)^0,w,c
  3385   001A0A  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  3386   001A0C  6EDA               	movwf	fsr2h,c
  3387   001A0E  5007               	movf	determine_card@current_smallest^0,w,c
  3388   001A10  5CDE               	subwf	postinc2,w,c
  3389   001A12  5008               	movf	(determine_card@current_smallest+1)^0,w,c
  3390   001A14  58DE               	subwfb	postinc2,w,c
  3391   001A16  B0D8               	btfsc	status,0,c
  3392   001A18  EF10  F00D         	goto	u1231
  3393   001A1C  EF12  F00D         	goto	u1230
  3394   001A20                     u1231:
  3395   001A20  EF22  F00D         	goto	l2425
  3396   001A24                     u1230:
  3397   001A24                     
  3398                           ;colour_identify.c: 100:             current_smallest = master_closeness[i];
  3399   001A24  5009               	movf	determine_card@i^0,w,c
  3400   001A26  0D02               	mullw	2
  3401   001A28  CFF3 F003          	movff	prodl,??_determine_card
  3402   001A2C  CFF4 F004          	movff	prodh,??_determine_card+1
  3403   001A30  5003               	movf	??_determine_card^0,w,c
  3404   001A32  2401               	addwf	determine_card@master_closeness^0,w,c
  3405   001A34  6ED9               	movwf	fsr2l,c
  3406   001A36  5004               	movf	(??_determine_card+1)^0,w,c
  3407   001A38  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  3408   001A3A  6EDA               	movwf	fsr2h,c
  3409   001A3C  CFDE F007          	movff	postinc2,determine_card@current_smallest
  3410   001A40  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  3411   001A44                     l2425:
  3412                           
  3413                           ;colour_identify.c: 103:     }
  3414   001A44  2A09               	incf	determine_card@i^0,f,c
  3415   001A46  0E02               	movlw	2
  3416   001A48  6409               	cpfsgt	determine_card@i^0,c
  3417   001A4A  EF29  F00D         	goto	u1241
  3418   001A4E  EF2B  F00D         	goto	u1240
  3419   001A52                     u1241:
  3420   001A52  EFFB  F00C         	goto	l2419
  3421   001A56                     u1240:
  3422   001A56  0012               	return		;funcret
  3423   001A58                     __end_of_determine_card:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _color_click_init *****************
  3427 ;; Defined at:
  3428 ;;		line 5 in file "color.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3446 ;;Total ram usage:        1 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 3
  3449 ;; This function calls:
  3450 ;;		_I2C_2_Master_Init
  3451 ;;		_color_writetoaddr
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text20
  3458   001C34                     __ptext20:
  3459                           	callstack 0
  3460   001C34                     _color_click_init:
  3461                           	callstack 27
  3462   001C34                     
  3463                           ;color.c: 8:     I2C_2_Master_Init();
  3464   001C34  EC4C  F00E         	call	_I2C_2_Master_Init	;wreg free
  3465   001C38                     
  3466                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3467   001C38  0E01               	movlw	1
  3468   001C3A  6E03               	movwf	color_writetoaddr@value^0,c
  3469   001C3C  0E00               	movlw	0
  3470   001C3E  ECA9  F00E         	call	_color_writetoaddr
  3471   001C42                     
  3472                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3473   001C42  0E3F               	movlw	63
  3474   001C44  6E05               	movwf	??_color_click_init^0,c
  3475   001C46  0E55               	movlw	85
  3476   001C48                     u1457:
  3477   001C48  2EE8               	decfsz	wreg,f,c
  3478   001C4A  D7FE               	bra	u1457
  3479   001C4C  2E05               	decfsz	??_color_click_init^0,f,c
  3480   001C4E  D7FC               	bra	u1457
  3481   001C50  F000               	nop	
  3482   001C52                     
  3483                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3484   001C52  0E03               	movlw	3
  3485   001C54  6E03               	movwf	color_writetoaddr@value^0,c
  3486   001C56  0E00               	movlw	0
  3487   001C58  ECA9  F00E         	call	_color_writetoaddr
  3488   001C5C                     
  3489                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3490   001C5C  0ED5               	movlw	213
  3491   001C5E  6E03               	movwf	color_writetoaddr@value^0,c
  3492   001C60  0E01               	movlw	1
  3493   001C62  ECA9  F00E         	call	_color_writetoaddr
  3494   001C66  0012               	return		;funcret
  3495   001C68                     __end_of_color_click_init:
  3496                           	callstack 0
  3497                           
  3498 ;; *************** function _color_writetoaddr *****************
  3499 ;; Defined at:
  3500 ;;		line 21 in file "color.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  address         1    wreg     unsigned char 
  3503 ;;  value           1    2[COMRAM] unsigned char 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  address         1    3[COMRAM] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3515 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3519 ;;Total ram usage:        2 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; Hardware stack levels required when called: 2
  3522 ;; This function calls:
  3523 ;;		_I2C_2_Master_Start
  3524 ;;		_I2C_2_Master_Stop
  3525 ;;		_I2C_2_Master_Write
  3526 ;; This function is called by:
  3527 ;;		_color_click_init
  3528 ;;		_enable_color_interrupt
  3529 ;;		_set_interrupt_threshold
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text21
  3534   001D52                     __ptext21:
  3535                           	callstack 0
  3536   001D52                     _color_writetoaddr:
  3537                           	callstack 27
  3538                           
  3539                           ;incstack = 0
  3540                           ;color_writetoaddr@address stored from wreg
  3541   001D52  6E04               	movwf	color_writetoaddr@address^0,c
  3542   001D54                     
  3543                           ;color.c: 22:     I2C_2_Master_Start();
  3544   001D54  ECDC  F00E         	call	_I2C_2_Master_Start	;wreg free
  3545                           
  3546                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3547   001D58  0E52               	movlw	82
  3548   001D5A  ECD1  F00E         	call	_I2C_2_Master_Write
  3549                           
  3550                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3551   001D5E  5004               	movf	color_writetoaddr@address^0,w,c
  3552   001D60  0980               	iorlw	128
  3553   001D62  ECD1  F00E         	call	_I2C_2_Master_Write
  3554                           
  3555                           ;color.c: 25:     I2C_2_Master_Write(value);
  3556   001D66  5003               	movf	color_writetoaddr@value^0,w,c
  3557   001D68  ECD1  F00E         	call	_I2C_2_Master_Write
  3558                           
  3559                           ;color.c: 26:     I2C_2_Master_Stop();
  3560   001D6C  ECD7  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3561   001D70  0012               	return		;funcret
  3562   001D72                     __end_of_color_writetoaddr:
  3563                           	callstack 0
  3564                           
  3565 ;; *************** function _I2C_2_Master_Write *****************
  3566 ;; Defined at:
  3567 ;;		line 45 in file "i2c.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  data_byte       1    wreg     unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  data_byte       1    1[COMRAM] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3585 ;;Total ram usage:        1 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 1
  3588 ;; This function calls:
  3589 ;;		_I2C_2_Master_Idle
  3590 ;; This function is called by:
  3591 ;;		_color_writetoaddr
  3592 ;;		_color_read_Red
  3593 ;;		_color_read_Green
  3594 ;;		_color_read_Blue
  3595 ;;		_color_read_Clear
  3596 ;;		_read_interrupt_status
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text22
  3601   001DA2                     __ptext22:
  3602                           	callstack 0
  3603   001DA2                     _I2C_2_Master_Write:
  3604                           	callstack 27
  3605                           
  3606                           ;incstack = 0
  3607                           ;I2C_2_Master_Write@data_byte stored from wreg
  3608   001DA2  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3609   001DA4                     
  3610                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3611   001DA4  EC61  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3612   001DA8                     
  3613                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3614   001DA8  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3615   001DAC  0012               	return		;funcret
  3616   001DAE                     __end_of_I2C_2_Master_Write:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _I2C_2_Master_Stop *****************
  3620 ;; Defined at:
  3621 ;;		line 39 in file "i2c.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used: 1
  3641 ;; Hardware stack levels required when called: 1
  3642 ;; This function calls:
  3643 ;;		_I2C_2_Master_Idle
  3644 ;; This function is called by:
  3645 ;;		_color_writetoaddr
  3646 ;;		_color_read_Red
  3647 ;;		_color_read_Green
  3648 ;;		_color_read_Blue
  3649 ;;		_color_read_Clear
  3650 ;;		_read_interrupt_status
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text23
  3655   001DAE                     __ptext23:
  3656                           	callstack 0
  3657   001DAE                     _I2C_2_Master_Stop:
  3658                           	callstack 27
  3659   001DAE                     
  3660                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3661   001DAE  EC61  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3662   001DB2                     
  3663                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3664   001DB2  010E               	movlb	14	; () banked
  3665   001DB4  85DA               	bsf	218,2,b	;volatile
  3666   001DB6                     
  3667                           ; BSR set to: 14
  3668   001DB6  0012               	return		;funcret
  3669   001DB8                     __end_of_I2C_2_Master_Stop:
  3670                           	callstack 0
  3671                           
  3672 ;; *************** function _I2C_2_Master_Start *****************
  3673 ;; Defined at:
  3674 ;;		line 27 in file "i2c.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 1
  3695 ;; This function calls:
  3696 ;;		_I2C_2_Master_Idle
  3697 ;; This function is called by:
  3698 ;;		_color_writetoaddr
  3699 ;;		_color_read_Red
  3700 ;;		_color_read_Green
  3701 ;;		_color_read_Blue
  3702 ;;		_color_read_Clear
  3703 ;;		_read_interrupt_status
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text24
  3708   001DB8                     __ptext24:
  3709                           	callstack 0
  3710   001DB8                     _I2C_2_Master_Start:
  3711                           	callstack 27
  3712   001DB8                     
  3713                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3714   001DB8  EC61  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3715   001DBC                     
  3716                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3717   001DBC  010E               	movlb	14	; () banked
  3718   001DBE  81DA               	bsf	218,0,b	;volatile
  3719   001DC0                     
  3720                           ; BSR set to: 14
  3721   001DC0  0012               	return		;funcret
  3722   001DC2                     __end_of_I2C_2_Master_Start:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _I2C_2_Master_Idle *****************
  3726 ;; Defined at:
  3727 ;;		line 22 in file "i2c.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;Total ram usage:        1 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_I2C_2_Master_Start
  3751 ;;		_I2C_2_Master_Stop
  3752 ;;		_I2C_2_Master_Write
  3753 ;;		_I2C_2_Master_RepStart
  3754 ;;		_I2C_2_Master_Read
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text25
  3759   001CC2                     __ptext25:
  3760                           	callstack 0
  3761   001CC2                     _I2C_2_Master_Idle:
  3762                           	callstack 27
  3763   001CC2                     l154:
  3764   001CC2  010E               	movlb	14	; () banked
  3765   001CC4  B5D8               	btfsc	216,2,b	;volatile
  3766   001CC6  EF67  F00E         	goto	u931
  3767   001CCA  EF69  F00E         	goto	u930
  3768   001CCE                     u931:
  3769   001CCE  EF61  F00E         	goto	l154
  3770   001CD2                     u930:
  3771   001CD2                     
  3772                           ; BSR set to: 14
  3773   001CD2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3774   001CD6  0E1F               	movlw	31
  3775   001CD8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3776   001CDA  A4D8               	btfss	status,2,c
  3777   001CDC  EF72  F00E         	goto	u941
  3778   001CE0  EF74  F00E         	goto	u940
  3779   001CE4                     u941:
  3780   001CE4  EF61  F00E         	goto	l154
  3781   001CE8                     u940:
  3782   001CE8                     
  3783                           ; BSR set to: 14
  3784   001CE8  0012               	return		;funcret
  3785   001CEA                     __end_of_I2C_2_Master_Idle:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _I2C_2_Master_Init *****************
  3789 ;; Defined at:
  3790 ;;		line 4 in file "i2c.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_color_click_init
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text26
  3819   001C98                     __ptext26:
  3820                           	callstack 0
  3821   001C98                     _I2C_2_Master_Init:
  3822                           	callstack 29
  3823   001C98                     
  3824                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3825   001C98  010E               	movlb	14	; () banked
  3826   001C9A  51D9               	movf	217,w,b	;volatile
  3827   001C9C  0BF0               	andlw	-16
  3828   001C9E  0908               	iorlw	8
  3829   001CA0  6FD9               	movwf	217,b	;volatile
  3830   001CA2                     
  3831                           ; BSR set to: 14
  3832                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3833   001CA2  8BD9               	bsf	217,5,b	;volatile
  3834                           
  3835                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3836   001CA4  0E9F               	movlw	159
  3837   001CA6  6FD6               	movwf	214,b	;volatile
  3838   001CA8                     
  3839                           ; BSR set to: 14
  3840                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3841   001CA8  8A84               	bsf	132,5,c	;volatile
  3842   001CAA                     
  3843                           ; BSR set to: 14
  3844                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3845   001CAA  8C84               	bsf	132,6,c	;volatile
  3846   001CAC                     
  3847                           ; BSR set to: 14
  3848                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3849   001CAC  9BA7               	bcf	167,5,b	;volatile
  3850   001CAE                     
  3851                           ; BSR set to: 14
  3852                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3853   001CAE  9DA7               	bcf	167,6,b	;volatile
  3854                           
  3855                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3856   001CB0  0E1D               	movlw	29
  3857   001CB2  6F1D               	movwf	29,b	;volatile
  3858                           
  3859                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3860   001CB4  0E1E               	movlw	30
  3861   001CB6  6F1C               	movwf	28,b	;volatile
  3862                           
  3863                           ;i2c.c: 18:   RD5PPS=0x1C;
  3864   001CB8  0E1C               	movlw	28
  3865   001CBA  6F6F               	movwf	111,b	;volatile
  3866                           
  3867                           ;i2c.c: 19:   RD6PPS=0x1B;
  3868   001CBC  0E1B               	movlw	27
  3869   001CBE  6F70               	movwf	112,b	;volatile
  3870   001CC0                     
  3871                           ; BSR set to: 14
  3872   001CC0  0012               	return		;funcret
  3873   001CC2                     __end_of_I2C_2_Master_Init:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _LEDSon_init *****************
  3877 ;; Defined at:
  3878 ;;		line 18 in file "LEDsOn.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		None
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_main
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text27
  3906   001D10                     __ptext27:
  3907                           	callstack 0
  3908   001D10                     _LEDSon_init:
  3909                           	callstack 30
  3910   001D10                     
  3911                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  3912   001D10  9288               	bcf	136,1,c	;volatile
  3913                           
  3914                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  3915   001D12  9088               	bcf	136,0,c	;volatile
  3916                           
  3917                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  3918   001D14  9884               	bcf	132,4,c	;volatile
  3919                           
  3920                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  3921   001D16  9684               	bcf	132,3,c	;volatile
  3922                           
  3923                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  3924   001D18  9086               	bcf	134,0,c	;volatile
  3925                           
  3926                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  3927   001D1A  9287               	bcf	135,1,c	;volatile
  3928                           
  3929                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  3930   001D1C  9E86               	bcf	134,7,c	;volatile
  3931                           
  3932                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  3933   001D1E  9881               	bcf	129,4,c	;volatile
  3934                           
  3935                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  3936   001D20  8E7E               	bsf	126,7,c	;volatile
  3937                           
  3938                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  3939   001D22  827F               	bsf	127,1,c	;volatile
  3940                           
  3941                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  3942   001D24  8879               	bsf	121,4,c	;volatile
  3943                           
  3944                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  3945   001D26  987C               	bcf	124,4,c	;volatile
  3946                           
  3947                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  3948   001D28  9280               	bcf	128,1,c	;volatile
  3949                           
  3950                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  3951   001D2A  907E               	bcf	126,0,c	;volatile
  3952                           
  3953                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  3954   001D2C  9080               	bcf	128,0,c	;volatile
  3955                           
  3956                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  3957   001D2E  967C               	bcf	124,3,c	;volatile
  3958   001D30  0012               	return		;funcret
  3959   001D32                     __end_of_LEDSon_init:
  3960                           	callstack 0
  3961                           
  3962                           	psect	rparam
  3963   000000                     
  3964                           	psect	idloc
  3965                           
  3966                           ;Config register IDLOC0 @ 0x200000
  3967                           ;	unspecified, using default values
  3968   200000                     	org	2097152
  3969   200000  0FFF               	dw	4095
  3970                           
  3971                           ;Config register IDLOC1 @ 0x200002
  3972                           ;	unspecified, using default values
  3973   200002                     	org	2097154
  3974   200002  0FFF               	dw	4095
  3975                           
  3976                           ;Config register IDLOC2 @ 0x200004
  3977                           ;	unspecified, using default values
  3978   200004                     	org	2097156
  3979   200004  0FFF               	dw	4095
  3980                           
  3981                           ;Config register IDLOC3 @ 0x200006
  3982                           ;	unspecified, using default values
  3983   200006                     	org	2097158
  3984   200006  0FFF               	dw	4095
  3985                           
  3986                           ;Config register IDLOC4 @ 0x200008
  3987                           ;	unspecified, using default values
  3988   200008                     	org	2097160
  3989   200008  0FFF               	dw	4095
  3990                           
  3991                           ;Config register IDLOC5 @ 0x20000A
  3992                           ;	unspecified, using default values
  3993   20000A                     	org	2097162
  3994   20000A  0FFF               	dw	4095
  3995                           
  3996                           ;Config register IDLOC6 @ 0x20000C
  3997                           ;	unspecified, using default values
  3998   20000C                     	org	2097164
  3999   20000C  0FFF               	dw	4095
  4000                           
  4001                           ;Config register IDLOC7 @ 0x20000E
  4002                           ;	unspecified, using default values
  4003   20000E                     	org	2097166
  4004   20000E  0FFF               	dw	4095
  4005                           
  4006                           	psect	config
  4007                           
  4008                           ;Config register CONFIG1L @ 0x300000
  4009                           ;	External Oscillator mode Selection bits
  4010                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4011                           ;	Power-up default value for COSC bits
  4012                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4013   300000                     	org	3145728
  4014   300000  AA                 	db	170
  4015                           
  4016                           ;Config register CONFIG1H @ 0x300001
  4017                           ;	unspecified, using default values
  4018                           ;	Clock Out Enable bit
  4019                           ;	CLKOUTEN = 0x1, unprogrammed default
  4020                           ;	Clock Switch Enable bit
  4021                           ;	CSWEN = 0x1, unprogrammed default
  4022                           ;	Fail-Safe Clock Monitor Enable bit
  4023                           ;	FCMEN = 0x1, unprogrammed default
  4024   300001                     	org	3145729
  4025   300001  FF                 	db	255
  4026                           
  4027                           ;Config register CONFIG2L @ 0x300002
  4028                           ;	unspecified, using default values
  4029                           ;	Master Clear Enable bit
  4030                           ;	MCLRE = 0x1, unprogrammed default
  4031                           ;	Power-up Timer Enable bit
  4032                           ;	PWRTE = 0x1, unprogrammed default
  4033                           ;	Low-power BOR enable bit
  4034                           ;	LPBOREN = 0x1, unprogrammed default
  4035                           ;	Brown-out Reset Enable bits
  4036                           ;	BOREN = 0x3, unprogrammed default
  4037   300002                     	org	3145730
  4038   300002  FF                 	db	255
  4039                           
  4040                           ;Config register CONFIG2H @ 0x300003
  4041                           ;	unspecified, using default values
  4042                           ;	Brown Out Reset Voltage selection bits
  4043                           ;	BORV = 0x3, unprogrammed default
  4044                           ;	ZCD Disable bit
  4045                           ;	ZCD = 0x1, unprogrammed default
  4046                           ;	PPSLOCK bit One-Way Set Enable bit
  4047                           ;	PPS1WAY = 0x1, unprogrammed default
  4048                           ;	Stack Full/Underflow Reset Enable bit
  4049                           ;	STVREN = 0x1, unprogrammed default
  4050                           ;	Debugger Enable bit
  4051                           ;	DEBUG = 0x1, unprogrammed default
  4052                           ;	Extended Instruction Set Enable bit
  4053                           ;	XINST = 0x1, unprogrammed default
  4054   300003                     	org	3145731
  4055   300003  FF                 	db	255
  4056                           
  4057                           ;Config register CONFIG3L @ 0x300004
  4058                           ;	WDT Period Select bits
  4059                           ;	WDTCPS = 0x1F, unprogrammed default
  4060                           ;	WDT operating mode
  4061                           ;	WDTE = OFF, WDT Disabled
  4062   300004                     	org	3145732
  4063   300004  9F                 	db	159
  4064                           
  4065                           ;Config register CONFIG3H @ 0x300005
  4066                           ;	unspecified, using default values
  4067                           ;	WDT Window Select bits
  4068                           ;	WDTCWS = 0x7, unprogrammed default
  4069                           ;	WDT input clock selector
  4070                           ;	WDTCCS = 0x7, unprogrammed default
  4071   300005                     	org	3145733
  4072   300005  FF                 	db	255
  4073                           
  4074                           ;Config register CONFIG4L @ 0x300006
  4075                           ;	unspecified, using default values
  4076                           ;	Write Protection Block 0
  4077                           ;	WRT0 = 0x1, unprogrammed default
  4078                           ;	Write Protection Block 1
  4079                           ;	WRT1 = 0x1, unprogrammed default
  4080                           ;	Write Protection Block 2
  4081                           ;	WRT2 = 0x1, unprogrammed default
  4082                           ;	Write Protection Block 3
  4083                           ;	WRT3 = 0x1, unprogrammed default
  4084                           ;	Write Protection Block 3
  4085                           ;	WRT4 = 0x1, unprogrammed default
  4086                           ;	Write Protection Block 3
  4087                           ;	WRT5 = 0x1, unprogrammed default
  4088                           ;	Write Protection Block 3
  4089                           ;	WRT6 = 0x1, unprogrammed default
  4090                           ;	Write Protection Block 3
  4091                           ;	WRT7 = 0x1, unprogrammed default
  4092   300006                     	org	3145734
  4093   300006  FF                 	db	255
  4094                           
  4095                           ;Config register CONFIG4H @ 0x300007
  4096                           ;	unspecified, using default values
  4097                           ;	Configuration Register Write Protection bit
  4098                           ;	WRTC = 0x1, unprogrammed default
  4099                           ;	Boot Block Write Protection bit
  4100                           ;	WRTB = 0x1, unprogrammed default
  4101                           ;	Data EEPROM Write Protection bit
  4102                           ;	WRTD = 0x1, unprogrammed default
  4103                           ;	Scanner Enable bit
  4104                           ;	SCANE = 0x1, unprogrammed default
  4105                           ;	Low Voltage Programming Enable bit
  4106                           ;	LVP = 0x1, unprogrammed default
  4107   300007                     	org	3145735
  4108   300007  FF                 	db	255
  4109                           
  4110                           ;Config register CONFIG5L @ 0x300008
  4111                           ;	unspecified, using default values
  4112                           ;	UserNVM Program Memory Code Protection bit
  4113                           ;	CP = 0x1, unprogrammed default
  4114                           ;	DataNVM Memory Code Protection bit
  4115                           ;	CPD = 0x1, unprogrammed default
  4116   300008                     	org	3145736
  4117   300008  FF                 	db	255
  4118                           
  4119                           ;Config register CONFIG5H @ 0x300009
  4120                           ;	unspecified, using default values
  4121   300009                     	org	3145737
  4122   300009  FF                 	db	255
  4123                           
  4124                           ;Config register CONFIG6L @ 0x30000A
  4125                           ;	unspecified, using default values
  4126                           ;	Table Read Protection Block 0
  4127                           ;	EBTR0 = 0x1, unprogrammed default
  4128                           ;	Table Read Protection Block 1
  4129                           ;	EBTR1 = 0x1, unprogrammed default
  4130                           ;	Table Read Protection Block 2
  4131                           ;	EBTR2 = 0x1, unprogrammed default
  4132                           ;	Table Read Protection Block 3
  4133                           ;	EBTR3 = 0x1, unprogrammed default
  4134                           ;	Table Read Protection Block 4
  4135                           ;	EBTR4 = 0x1, unprogrammed default
  4136                           ;	Table Read Protection Block 5
  4137                           ;	EBTR5 = 0x1, unprogrammed default
  4138                           ;	Table Read Protection Block 6
  4139                           ;	EBTR6 = 0x1, unprogrammed default
  4140                           ;	Table Read Protection Block 7
  4141                           ;	EBTR7 = 0x1, unprogrammed default
  4142   30000A                     	org	3145738
  4143   30000A  FF                 	db	255
  4144                           
  4145                           ;Config register CONFIG6H @ 0x30000B
  4146                           ;	unspecified, using default values
  4147                           ;	Boot Block Table Read Protection bit
  4148                           ;	EBTRB = 0x1, unprogrammed default
  4149   30000B                     	org	3145739
  4150   30000B  FF                 	db	255
  4151                           tosu	equ	0xFFF
  4152                           tosh	equ	0xFFE
  4153                           tosl	equ	0xFFD
  4154                           stkptr	equ	0xFFC
  4155                           pclatu	equ	0xFFB
  4156                           pclath	equ	0xFFA
  4157                           pcl	equ	0xFF9
  4158                           tblptru	equ	0xFF8
  4159                           tblptrh	equ	0xFF7
  4160                           tblptrl	equ	0xFF6
  4161                           tablat	equ	0xFF5
  4162                           prodh	equ	0xFF4
  4163                           prodl	equ	0xFF3
  4164                           indf0	equ	0xFEF
  4165                           postinc0	equ	0xFEE
  4166                           postdec0	equ	0xFED
  4167                           preinc0	equ	0xFEC
  4168                           plusw0	equ	0xFEB
  4169                           fsr0h	equ	0xFEA
  4170                           fsr0l	equ	0xFE9
  4171                           wreg	equ	0xFE8
  4172                           indf1	equ	0xFE7
  4173                           postinc1	equ	0xFE6
  4174                           postdec1	equ	0xFE5
  4175                           preinc1	equ	0xFE4
  4176                           plusw1	equ	0xFE3
  4177                           fsr1h	equ	0xFE2
  4178                           fsr1l	equ	0xFE1
  4179                           bsr	equ	0xFE0
  4180                           indf2	equ	0xFDF
  4181                           postinc2	equ	0xFDE
  4182                           postdec2	equ	0xFDD
  4183                           preinc2	equ	0xFDC
  4184                           plusw2	equ	0xFDB
  4185                           fsr2h	equ	0xFDA
  4186                           fsr2l	equ	0xFD9
  4187                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    0
    Data        24
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     79     131
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[11]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[11]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[11]), STR_1(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2213$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[11]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2164$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2164$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    determine_card@master_closeness	PTR unsigned int  size(2) Largest target is 6
		 -> main@master_closeness(BANK0[6]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    S532DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    S532DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                90    90      0   11207
                                             13 BANK0     66    66      0
                  _I2C_2_Master_Init
                        _LEDSon_init
                   _color_click_init
                     _determine_card
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    6254
                                             88 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5447
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    5097
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3877
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     370
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3045
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1422
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _determine_card                                      10     8      2     280
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     598
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     598
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _determine_card
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4F      83       5       81.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllhhhl     37      0       0      43        0.0%
BITBIGSFRllhhhl     2D      0       0      46        0.0%
BITBIGSFRllllhl     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllhhhl     1E      0       0      47        0.0%
BITBIGSFRhhlllh     17      0       0      36        0.0%
BITBIGSFRllhhl      11      0       0      48        0.0%
BITBIGSFRllllhl      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhl      9      0       0      54        0.0%
BITBIGSFRllhhhl      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      56        0.0%
BITBIGSFRllllhh      6      0       0      52        0.0%
BITBIGSFRlllhl       5      0       0      51        0.0%
BITBIGSFRhhllll      5      0       0      37        0.0%
BITBIGSFRlllhh       3      0       0      50        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhl      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllhl        1      0       0      49        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13E      58        0.0%
DATA                 0      0     13E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 23:41:58 2022

                            l22 1D70                              l19 1C66                              l95 1552  
                            l88 1966             ___wmul@multiplicand 0003                             l151 1CC0  
                           l160 1DC0                             l233 1148                             l154 1CC2  
                           l234 1146                             l235 1156                             l157 1CE8  
                           l317 1A56                             l262 1D30                             l166 1DB6  
                           l169 1DAC                             l417 1D0E                             l531 13E6  
                           l364 1D50                             l373 1D8C                             l382 1C96  
                           l376 1DA0                             l544 16B6                             l915 1ACA  
                           l908 1AC2                             u720 1828                             u801 12CE  
                           u721 1824                             u810 12F2                             u730 183A  
                           u811 12EE                             u731 1836                             u820 131C  
                           u900 1676                             u740 1862                             u821 1318  
                           u901 1672                             u741 185E                             u830 135C  
                           u750 1898                             u910 1976                             u831 1358  
                           u751 1894                             u911 1972                             u840 13A6  
                           u760 1BB2                             u920 19CC                             u841 13A2  
                           u761 1BAE                             u921 19C8                             u930 1CD2  
                           u850 1566                             u770 1C0E                             u931 1CCE  
                           u851 1562                             u771 1C0A                             u940 1CE8  
                           u780 1272                             u860 1598                             u941 1CE4  
                           u781 126E                             u861 1594                             u790 12A4  
                           u870 15D6                             u950 0E5A                             u791 12A0  
                           u871 15D2                             u951 0E54                             u880 1600  
                           u960 0E5C                             u881 15FC                             u890 162E  
                           u970 0E6E                             u891 162A                             u971 0E6A  
                           u980 0EAA                             u981 0EA6                             u990 0ED6  
                           u991 0ED2                             _abs 1BF4                             _pad 1968  
                           wreg 000FE8                            l1102 1B1C                            l2001 131C  
                          l2011 1390                            l2003 132E                            ?_abs 0013  
                          l1124 198A                            l2005 135C                            l2013 1396  
                          l2021 1554                            l2101 0F16                            l1133 0EB6  
                          l2015 13A6                            l2007 137C                            l2031 1598  
                          l2023 1558                            l2103 0F1C                            l2111 100E  
                          l1135 0EBE                            l1128 19E0                            l1136 0F04  
                          l1160 1B6E                            l2201 1D8C                            l2017 13C6  
                          l2009 137E                            l2041 1600                            l2033 15B8  
                          l2025 1566                            l2121 1076                            l2113 1028  
                          l2105 0F9E                            l1154 1814                            l2131 1DA4  
                          l2203 1D9C                            l2211 1A58                            l2051 1676  
                          l2043 162E                            l2035 15D6                            l2027 1586  
                          l1147 10A6                            l2123 1086                            l2115 1046  
                          l2107 0FA4                            l1092 1C2A                            l1172 18DE  
                          l1180 1BB2                            l2133 1DA8                            l2221 1A90  
                          l2213 1A60                            l2205 1CEA                            l2301 1470  
                          l2053 1696                            l2045 164E                            l2037 15DE  
                          l2029 158A                            l2061 1982                            l2117 1060  
                          l2109 0FAA                            l2141 16E0                            l2071 1CC2  
                          l2127 1DB8                            l2135 1DAE                            l2231 1ABC  
                          l2223 1A96                            l2215 1A72                            l2207 1D06  
                          l2303 14B2                            l2047 1660                            l2039 15F2  
                          l1095 1C32                            l1183 1DC2                            l2063 1996  
                          l2119 1070                            l2151 1730                            l2143 16EE  
                          l2073 1CD2                            l2129 1DBC                            l2137 1DB2  
                          l2401 1C68                            l2225 1AAC                            l2217 1A7A  
                          l2305 14CE                            l2049 1666                            l2065 19AA  
                          l2057 1968                            l2081 0E6E                            l2153 1750  
                          l2145 16FC                            l2233 1B1E                            l2171 1CA2  
                          l2251 1C5C                            l2243 1C34                            l2411 19E2  
                          l2403 1C6C                            l2227 1AB4                            l2219 1A82  
                          l2307 1512                            l2067 19AE                            l2059 1976  
                          l2091 0EDC                            l2083 0E8E                            l2075 0E2A  
                          l2155 17A6                            l2147 1700                            l2163 17E8  
                          l2139 16B8                            l2235 1B2A                            l2173 1CA8  
                          l2181 1D54                            l2245 1C38                            l2421 1A24  
                          l2413 19F2                            l2405 1C7A                            l2229 1AB6  
                          l2069 19CC                            l2093 0EEC                            l2085 0EAA  
                          l2077 0E4A                            l2149 1710                            l2237 1B46  
                          l2501 1100                            l2175 1CAA                            l2247 1C42  
                          l2423 1A44                            l2271 18E0                            l2407 1C7E  
                          l2095 0EF8                            l2087 0EC6                            l2079 0E5E  
                          l2159 17D6                            l2239 1B66                            l2511 1130  
                          l2503 1106                            l2177 1CAC                            l2169 1C98  
                          l2249 1C52                            l2425 1A44                            l2409 19E2  
                          l2281 1942                            l2273 18E8                            l2097 0F00  
                          l2089 0ED6                            l2521 1176                            l2513 1142  
                          l2505 1112                            l2179 1CAE                            l2427 1A46  
                          l2419 19F6                            l2291 1964                            l2283 194C  
                          l2275 1912                            l2099 0F0C                            l2531 11FA  
                          l2523 1182                            l2515 1142                            l2507 111E  
                          l2373 1D10                            l2285 194E                            l2277 1936  
                          l2381 1D40                            l2293 13E8                            l2541 1256  
                          l2533 1206                            l2525 119C                            l2517 1142  
                          l2509 111E                            l2287 1958                            l2279 1940  
                          l2383 1D4A                            l2375 1D32                            l2295 1404  
                          l2391 1ADE                            l2535 1220                            l2527 11B8  
                          l2519 115A                            l2471 10B0                            l2289 195A  
                          l2385 1D4C                            l2377 1D3C                            l2297 1458  
                          l2393 1AE6                            l2537 1230                            l2529 11DE  
                          l2481 10C6                            l2473 10B4                            l2387 1D4E  
                          l2379 1D3E                            l2299 146C                            l2395 1AEE  
                          l2539 124A                            l2491 10E4                            l2483 10CA  
                          l2475 10B8                            l2467 10A8                            l2397 1B0A  
                          l2389 1ACC                            l2493 10E8                            l2485 10CE  
                          l2477 10BC                            l2469 10AC                            l1951 1816  
                          l2495 10EC                            l2487 10D6                            l2479 10C0  
                          l1961 1898                            l1953 1828                            l2497 10F0  
                          l2489 10DE                            l1955 183A                            l1971 1B92  
                          l2499 10F8                            l1981 1272                            l1973 1BF4  
                          l1957 1844                            l1965 1B70                            ?_pad 0011  
                          l1991 12C8                            l1983 1292                            l1975 1C0E  
                          l1959 1862                            l1967 1B7C                            l1993 12D4  
                          l1985 1296                            l1977 1260                            l1969 1B8E  
                          l1995 12F2                            l1987 12A4                            l1979 1264  
                          l1997 12FA                            l1989 12C4                            l1999 130E  
                          STR_1 0E20                            STR_2 0E01                            STR_3 0E16  
                          STR_4 0E0C                            u1000 0EEC                            u1001 0EE8  
                          u1010 1028                            u1011 1024                            u1100 1D9C  
                          u1020 1046                            u1101 1D98                            u1021 1042  
                          u1110 1A72                            u1030 1060                            u1111 1A6E  
                          u1031 105C                            u1120 1A90                            u1040 1070  
                          u1121 1A8C                            u1041 106C                            u1130 1AAC  
                          u1050 16E0                            u1131 1AA8                            u1051 16DC  
                          u1220 1C96                            u1060 1730                            u1140 1B66  
                  ?_LEDSon_init 0001                            u1221 1C92                            u1061 172C  
                          u1141 1B62                            u1301 113A                            u1230 1A24  
                          u1150 1404                            u1070 1750                            u1310 1156  
                          u1231 1A20                            u1151 1400                            u1071 174C  
                          u1311 1152                            u1240 1A56                            u1160 14CE  
                          u1241 1A52                            u1161 14CA                    _BAUD4CONbits 000EE9  
                          u1427 118E                            u1291 1128                            u1437 11D0  
                          u1447 1212                            u1457 1C48                            _T2PR 000FBC  
                          abs@a 0013                            _dbuf 013C                            _main 10A8  
                          _dtoa 0E2A                            _prec 00C5                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            prodh 000FF4                            prodl 000FF3  
                          start 0002                    ___param_bank 000000                           ??_abs 0015  
                         ??_pad 0017                 __end_of___aodiv 13E8                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 16B8                 __end_of___lwdiv 1ACC  
                  vfpfcnvrt@fmt 0041         __end_of_sendCharSerial4 1DA2      __end_of_I2C_2_Master_Start 1DC2  
    __end_of_I2C_2_Master_Write 1DAE                           _flags 00C7                           _fputc 1816  
                         _fputs 1B70                           pad@fp 0011  determine_card@master_closeness 0001  
                         _width 00C3                           _putch 1DC2                           dtoa@d 001E  
                         dtoa@i 003C                           dtoa@n 0034                           dtoa@p 0030  
                         dtoa@s 003E                           dtoa@w 0032                           tablat 000FF5  
                         plusw1 000FE3                           plusw2 000FDB                           status 000FD8  
               __end_of_sprintf 1B1E                 __initialization 1BB4                    __end_of_main 1260  
                  __end_of_dtoa 10A8                          ??_main 006D                          ??_dtoa 0026  
                 __activetblptr 000003                    ?_setMotorPWM 000E                          ?_fputc 0001  
                        ?_fputs 000A                          _CCPR1H 000FAA                          _CCPR2H 000FA6  
                        _CCPR3H 000F25                          _CCPR4H 000F21                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        _RE4PPS 000E76                          _RG6PPS 000E88        __end_of_color_click_init 1C68  
                        _RX4PPS 000E15                          _TX4REG 000EE4                    _CCPTMRS0bits 000FAD  
                  vfprintf@cfmt 0057                       ??___aodiv 0011                       ??___aomod 0011  
                        ___wmul 1CEA                       ??___lwdiv 000B                          clear_0 1BDA  
                        clear_1 1BE6                          isa$std 000001                          pad@buf 0013  
                        dtoa@fp 001C                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                          putch@c 0001                __end_of_vfprintf 1B70  
             ??_initDCmotorsPWM 0001                       ??_sprintf 005F                      __accesstop 0060  
       __end_of__initialization 1BEE                   ___rparam_used 000001                  __pcstackCOMRAM 0001  
                  __pidataBANK0 1D72                   __end_of_fputc 18E0                   __end_of_fputs 1BB4  
                 __end_of_putch 1DC4                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK0 00AF                      __pbssBANK1 0100  
             _color_writetoaddr 1D52                    _T2CLKCONbits 000FBF              ?_color_writetoaddr 0003  
                       ?___wmul 0001             ??_color_writetoaddr 0004                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
        color_writetoaddr@value 0003       __end_of_color_writetoaddr 1D72              _I2C_2_Master_Start 1DB8  
                    _initUSART4 1D32              _I2C_2_Master_Write 1DA2                         __Hparam 0000  
                       __Lparam 0000         sendStringSerial4@string 0002                         ___aodiv 1260  
                       ___aomod 1554             ?_I2C_2_Master_Start 0001                         ___lwdiv 1A58  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0051                    __psmallconst 0E00  
                       __pcinit 1BB4                         __ramtop 0E00                         __ptext0 10A8  
                       __ptext1 1ACC                         __ptext2 1B1E                         __ptext3 16B8  
                       __ptext4 0E2A                         __ptext5 1968                         __ptext6 1B70  
                       __ptext7 1816                         __ptext8 1DC2                         __ptext9 1BF4  
                     _T2CONbits 000FBD                       _T2HLTbits 000FBE                   _RxBufWriteCnt 00CA  
                       main@buf 0081                         _sprintf 1ACC            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 1BEE                         fputc@fp 0003  
                       fputs@fp 000C               ?_color_click_init 0001              ??_color_click_init 0005  
             __end_of_vfpfcnvrt 1816                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
              vfpfcnvrt@convarg 0047                      main@F14641 00DD                      main@F14635 00CB  
                    ??_vfprintf 0057                 _initDCmotorsPWM 18E0                       _PORTFbits 000F8E  
            setMotorPWM@negDuty 0013                       _TRISAbits 000F81              setMotorPWM@posDuty 0012  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
           main@expected_values 006F        color_writetoaddr@address 0004                     _CCP1CONbits 000FAB  
                  _EUSART4RXbuf 00AF                    _EUSART4TXbuf 0100                     _CCP2CONbits 000FA7  
                   _CCP3CONbits 000F26                     ?_initUSART4 0001                     _CCP4CONbits 000F22  
     sendCharSerial4@charToSend 0001                      main@motorL 009D                      main@motorR 00A6  
          main@master_closeness 0095                     vfpfcnvrt@ap 0043                     vfpfcnvrt@cp 004F  
                   vfpfcnvrt@fp 003F                  __end_of___wmul 1D10                 determine_card@i 0009  
           start_initialization 1BB4                     __end_of_abs 1C34                     __end_of_pad 19E2  
                 _TxBufWriteCnt 005F                   ??_LEDSon_init 0001         __end_of_initDCmotorsPWM 1968  
                   vfprintf@fmt 0053                        ??___wmul 0005                     __pdataBANK0 00CB  
                _determine_card 19E2                     __pbssCOMRAM 005F                   __pcstackBANK0 0060  
              ___aodiv@dividend 0001             __end_of_LEDSon_init 1D32                ___lwdiv@dividend 0007  
                     _dtoa$2241 002E                        ?___aodiv 0001                        ?___aomod 0001  
              ___aodiv@quotient 0013          __end_of_determine_card 1A58                        ?___lwdiv 0007  
                   __smallconst 0E00               _I2C_2_Master_Idle 1CC2               _I2C_2_Master_Init 1C98  
             _I2C_2_Master_Stop 1DAE                    _RxBufReadCnt 00C9              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001                   ??_setMotorPWM 0010              ?_I2C_2_Master_Stop 0001  
              ___lwdiv@quotient 000B                        ?_sprintf 0059               _sendStringSerial4 1C68  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATDbits 000F7C  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
            ?_sendStringSerial4 0002                        _PIE4bits 000E2D                        _PIR4bits 000E37  
              ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001                        _SSP2CON2 000EDA  
           ??_sendStringSerial4 0004                        _SSP2STAT 000ED8                 ?_determine_card 0001  
                     _vfpfcnvrt 16B8       __end_of_I2C_2_Master_Idle 1CEA       __end_of_I2C_2_Master_Init 1CC2  
             ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 1DB8                    setMotorPWM@m 000E  
   I2C_2_Master_Write@data_byte 0002                    _TxBufReadCnt 00C8                       copy_data0 1BC8  
     __end_of_sendStringSerial4 1C98                     _LEDSon_init 1D10             __end_of_setMotorPWM 1554  
                  ??_initUSART4 0001                        __Hrparam 0000                      vfprintf@ap 0055  
                      __Lrparam 0000                      vfprintf@fp 0051                      ?_vfpfcnvrt 003F  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    sprintf@fmt 005B                 ___lwdiv@divisor 0009              __end_of_initUSART4 1D52  
               ___lwdiv@counter 000D                        __ptext10 1554                        __ptext11 1260  
                      __ptext20 1C34                        __ptext12 13E8                        __ptext21 1D52  
                      __ptext13 1CEA                        __ptext22 1DA2                        __ptext14 1A58  
                      __ptext23 1DAE                        __ptext15 1C68                        __ptext24 1DB8  
                      __ptext16 1D8A                        __ptext25 1CC2                        __ptext17 1D32  
                      __ptext26 1C98                        __ptext18 18E0                        __ptext27 1D10  
                      __ptext19 19E2                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
                      isa$xinst 000000                      _RC4STAbits 000EE7                        _vfprintf 1B1E  
                      main@card 009B                ___aomod@dividend 0001                     _setMotorPWM 13E8  
                     sprintf@ap 0060  determine_card@current_smallest 0007                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0045                 ___aomod@counter 0011                _color_click_init 1C34  
                      sprintf@f 0062                        sprintf@s 0059                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
               _sendCharSerial4 1D8A                    ___aomod@sign 0012                ??_determine_card 0003  
                  main@PWMcycle 009C  
