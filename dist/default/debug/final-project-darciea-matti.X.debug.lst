

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 11:36:53 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Version 2.35
    68                           ; Generated 05/05/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F67K40 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102   000000                     
   103                           	psect	idataBANK1
   104   001FE0                     __pidataBANK1:
   105                           	callstack 0
   106                           
   107                           ;initializer for main@F14645
   108   001FE0  32C8               	dw	13000
   109   001FE2  0A28               	dw	2600
   110   001FE4  0708               	dw	1800
   111   001FE6  20D0               	dw	8400
   112   001FE8  1964               	dw	6500
   113   001FEA  1388               	dw	5000
   114   001FEC  1130               	dw	4400
   115   001FEE  0708               	dw	1800
   116   001FF0  0AF0               	dw	2800
   117   000000                     _TRISBbits	set	3970
   118   000000                     _TX4REG	set	3812
   119   000000                     _RC4STAbits	set	3815
   120   000000                     _SP4BRGH	set	3814
   121   000000                     _LATGbits	set	3967
   122   000000                     _TRISAbits	set	3969
   123   000000                     _TRISFbits	set	3974
   124   000000                     _TRISDbits	set	3972
   125   000000                     _TRISGbits	set	3975
   126   000000                     _SSP2CON2bits	set	3802
   127   000000                     _TMR0IF	set	29085
   128   000000                     _INT1PPS	set	3569
   129   000000                     _RX4PPS	set	3605
   130   000000                     _SSP2CLKPPS	set	3612
   131   000000                     _SSP2DATPPS	set	3613
   132   000000                     _RC7PPS	set	3689
   133   000000                     _RE2PPS	set	3700
   134   000000                     _TRISCbits	set	3971
   135   000000                     _TRISEbits	set	3973
   136   000000                     _TRISHbits	set	3976
   137   000000                     _T2PR	set	4028
   138   000000                     _T2CONbits	set	4029
   139   000000                     _CCPR2H	set	4006
   140   000000                     _CCPR1H	set	4010
   141   000000                     _RE4PPS	set	3702
   142   000000                     _RG6PPS	set	3720
   143   000000                     _RD5PPS	set	3695
   144   000000                     _ANSELBbits	set	3738
   145   000000                     _ANSELDbits	set	3751
   146   000000                     _SSP2ADD	set	3798
   147   000000                     _SSP2CON1bits	set	3801
   148   000000                     _CCPR4H	set	3873
   149   000000                     _CCPR3H	set	3877
   150   000000                     _TMR0L	set	4051
   151   000000                     _TMR0H	set	4052
   152   000000                     _INTCONbits	set	4082
   153   000000                     _T2CLKCONbits	set	4031
   154   000000                     _T2HLTbits	set	4030
   155   000000                     _CCP1CONbits	set	4011
   156   000000                     _CCPTMRS0bits	set	4013
   157   000000                     _CCP2CONbits	set	4007
   158   000000                     _LATAbits	set	3961
   159   000000                     _LATDbits	set	3964
   160   000000                     _LATHbits	set	3968
   161   000000                     _CCP3CONbits	set	3878
   162   000000                     _CCP4CONbits	set	3874
   163   000000                     _RC4REG	set	3811
   164   000000                     _SP4BRGL	set	3813
   165   000000                     _TX4STAbits	set	3816
   166   000000                     _BAUD4CONbits	set	3817
   167   000000                     _SSP2CON2	set	3802
   168   000000                     _SSP2STAT	set	3800
   169   000000                     _SSP2BUF	set	3797
   170   000000                     _IPR0bits	set	3615
   171   000000                     _PIE0bits	set	3625
   172   000000                     _PIE4bits	set	3629
   173   000000                     _PIR4bits	set	3639
   174   000000                     _RC0PPS	set	3682
   175   000000                     _RD6PPS	set	3696
   176   000000                     _LATFbits	set	3966
   177   000000                     _PIR0bits	set	3635
   178                           
   179                           	psect	smallconst
   180   000E00                     __psmallconst:
   181                           	callstack 0
   182   000E00  00                 	db	0
   183   000E01                     STR_1:
   184                           
   185                           ; BSR set to: 14
   186   000E01  52                 	db	82	;'R'
   187   000E02  61                 	db	97	;'a'
   188   000E03  77                 	db	119	;'w'
   189   000E04  20                 	db	32
   190   000E05  25                 	db	37
   191   000E06  64                 	db	100	;'d'
   192   000E07  2C                 	db	44
   193   000E08  20                 	db	32
   194   000E09  25                 	db	37
   195   000E0A  64                 	db	100	;'d'
   196   000E0B  2C                 	db	44
   197   000E0C  20                 	db	32
   198   000E0D  25                 	db	37
   199   000E0E  64                 	db	100	;'d'
   200   000E0F  2C                 	db	44
   201   000E10  20                 	db	32
   202   000E11  25                 	db	37
   203   000E12  64                 	db	100	;'d'
   204   000E13  20                 	db	32
   205   000E14  0A                 	db	10
   206   000E15  00                 	db	0
   207   000E16  00                 	db	0	; dummy byte at the end
   208   000000                     
   209                           ; #config settings
   210                           
   211                           	psect	cinit
   212   001B4A                     __pcinit:
   213                           	callstack 0
   214   001B4A                     start_initialization:
   215                           	callstack 0
   216   001B4A                     __initialization:
   217                           	callstack 0
   218                           
   219                           ; Initialize objects allocated to BANK1 (18 bytes)
   220                           ; load TBLPTR registers with __pidataBANK1
   221   001B4A  0EE0               	movlw	low __pidataBANK1
   222   001B4C  6EF6               	movwf	tblptrl,c
   223   001B4E  0E1F               	movlw	high __pidataBANK1
   224   001B50  6EF7               	movwf	tblptrh,c
   225   001B52  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   226   001B54  6EF8               	movwf	tblptru,c
   227   001B56  EE01  F0C8         	lfsr	0,__pdataBANK1
   228   001B5A  EE10 F012          	lfsr	1,18
   229   001B5E                     copy_data0:
   230   001B5E  0009               	tblrd		*+
   231   001B60  CFF5 FFEE          	movff	tablat,postinc0
   232   001B64  50E5               	movf	postdec1,w,c
   233   001B66  50E1               	movf	fsr1l,w,c
   234   001B68  E1FA               	bnz	copy_data0
   235                           
   236                           ; Clear objects allocated to BANK2 (120 bytes)
   237   001B6A  EE02  F000         	lfsr	0,__pbssBANK2
   238   001B6E  0E78               	movlw	120
   239   001B70                     clear_0:
   240   001B70  6AEE               	clrf	postinc0,c
   241   001B72  06E8               	decf	wreg,f,c
   242   001B74  E1FD               	bnz	clear_0
   243                           
   244                           ; Clear objects allocated to BANK1 (2 bytes)
   245   001B76  0101               	movlb	1
   246   001B78  6BDB               	clrf	(__pbssBANK1+1)& (0+255),b
   247   001B7A  6BDA               	clrf	__pbssBANK1& (0+255),b
   248                           
   249                           ; Clear objects allocated to BANK0 (120 bytes)
   250   001B7C  EE00  F060         	lfsr	0,__pbssBANK0
   251   001B80  0E78               	movlw	120
   252   001B82                     clear_1:
   253   001B82  6AEE               	clrf	postinc0,c
   254   001B84  06E8               	decf	wreg,f,c
   255   001B86  E1FD               	bnz	clear_1
   256                           
   257                           ; Clear objects allocated to COMRAM (7 bytes)
   258   001B88  EE00  F050         	lfsr	0,__pbssCOMRAM
   259   001B8C  0E07               	movlw	7
   260   001B8E                     clear_2:
   261   001B8E  6AEE               	clrf	postinc0,c
   262   001B90  06E8               	decf	wreg,f,c
   263   001B92  E1FD               	bnz	clear_2
   264   001B94                     end_of_initialization:
   265                           	callstack 0
   266   001B94                     __end_of__initialization:
   267                           	callstack 0
   268   001B94  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   269   001B96  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   270   001B98  0100               	movlb	0
   271   001B9A  EF4A  F008         	goto	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMRAM
   274   000050                     __pbssCOMRAM:
   275                           	callstack 0
   276   000050                     _prec:
   277                           	callstack 0
   278   000050                     	ds	2
   279   000052                     _flags:
   280                           	callstack 0
   281   000052                     	ds	1
   282   000053                     _TxBufReadCnt:
   283                           	callstack 0
   284   000053                     	ds	1
   285   000054                     _TxBufWriteCnt:
   286                           	callstack 0
   287   000054                     	ds	1
   288   000055                     _RxBufReadCnt:
   289                           	callstack 0
   290   000055                     	ds	1
   291   000056                     _RxBufWriteCnt:
   292                           	callstack 0
   293   000056                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296   000060                     __pbssBANK0:
   297                           	callstack 0
   298   000060                     _EUSART4TXbuf:
   299                           	callstack 0
   300   000060                     	ds	60
   301   00009C                     _EUSART4RXbuf:
   302                           	callstack 0
   303   00009C                     	ds	20
   304   0000B0                     _width:
   305                           	callstack 0
   306   0000B0                     	ds	2
   307   0000B2                     _card_seen:
   308                           	callstack 0
   309   0000B2                     	ds	2
   310   0000B4                     _card_detected:
   311                           	callstack 0
   312   0000B4                     	ds	2
   313   0000B6                     _response_in_progress:
   314                           	callstack 0
   315   0000B6                     	ds	2
   316   0000B8                     _dbuf:
   317                           	callstack 0
   318   0000B8                     	ds	32
   319                           
   320                           	psect	bssBANK1
   321   0001DA                     __pbssBANK1:
   322                           	callstack 0
   323   0001DA                     _TimerFlag:
   324                           	callstack 0
   325   0001DA                     	ds	2
   326                           
   327                           	psect	dataBANK1
   328   0001C8                     __pdataBANK1:
   329                           	callstack 0
   330   0001C8                     main@F14645:
   331                           	callstack 0
   332   0001C8                     	ds	18
   333                           
   334                           	psect	bssBANK2
   335   000200                     __pbssBANK2:
   336                           	callstack 0
   337   000200                     	ds	120
   338                           
   339                           	psect	cstackBANK1
   340   000100                     __pcstackBANK1:
   341                           	callstack 0
   342   000100                     sprintf@ap:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x0
   346   000100                     	ds	2
   347   000102                     sprintf@f:
   348                           	callstack 0
   349                           
   350                           ; 11 bytes @ 0x2
   351   000102                     	ds	11
   352   00010D                     main@ReturnHomeArray:
   353                           	callstack 0
   354                           
   355                           ; 120 bytes @ 0xD
   356   00010D                     	ds	120
   357   000185                     main@expected_values:
   358                           	callstack 0
   359                           
   360                           ; 18 bytes @ 0x85
   361   000185                     	ds	18
   362   000197                     main@buf:
   363                           	callstack 0
   364                           
   365                           ; 20 bytes @ 0x97
   366   000197                     	ds	20
   367   0001AB                     main@red_read:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0xAB
   371   0001AB                     	ds	2
   372   0001AD                     main@green_read:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xAD
   376   0001AD                     	ds	2
   377   0001AF                     main@blue_read:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xAF
   381   0001AF                     	ds	2
   382   0001B1                     main@clear_read:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xB1
   386   0001B1                     	ds	2
   387   0001B3                     main@TimerCount:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0xB3
   391   0001B3                     	ds	2
   392   0001B5                     main@PWMcycle:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0xB5
   396   0001B5                     	ds	1
   397   0001B6                     main@motorL:
   398                           	callstack 0
   399                           
   400                           ; 9 bytes @ 0xB6
   401   0001B6                     	ds	9
   402   0001BF                     main@motorR:
   403                           	callstack 0
   404                           
   405                           ; 9 bytes @ 0xBF
   406   0001BF                     	ds	9
   407                           
   408                           	psect	cstackBANK0
   409   0000D8                     __pcstackBANK0:
   410                           	callstack 0
   411   0000D8                     vfpfcnvrt@convarg:
   412                           	callstack 0
   413                           
   414                           ; 8 bytes @ 0x0
   415   0000D8                     	ds	8
   416   0000E0                     vfpfcnvrt@cp:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x8
   420   0000E0                     	ds	2
   421   0000E2                     ?_vfprintf:
   422                           	callstack 0
   423   0000E2                     vfprintf@fp:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0xA
   427   0000E2                     	ds	2
   428   0000E4                     vfprintf@fmt:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0xC
   432   0000E4                     	ds	2
   433   0000E6                     vfprintf@ap:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0xE
   437   0000E6                     	ds	2
   438   0000E8                     ?_sprintf:
   439                           	callstack 0
   440   0000E8                     sprintf@s:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x10
   444   0000E8                     	ds	2
   445   0000EA                     sprintf@fmt:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x12
   449   0000EA                     	ds	10
   450   0000F4                     ??_main:
   451                           
   452                           ; 1 bytes @ 0x1C
   453   0000F4                     	ds	2
   454                           
   455                           	psect	cstackCOMRAM
   456   000001                     __pcstackCOMRAM:
   457                           	callstack 0
   458   000001                     ??i2_I2C_2_Master_Idle:
   459   000001                     
   460                           ; 1 bytes @ 0x0
   461   000001                     	ds	1
   462   000002                     i2I2C_2_Master_Write@data_byte:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x1
   466   000002                     	ds	1
   467   000003                     ??_HighISR:
   468   000003                     
   469                           ; 1 bytes @ 0x2
   470   000003                     	ds	2
   471   000005                     ??_LowISR:
   472                           
   473                           ; 1 bytes @ 0x4
   474   000005                     	ds	3
   475   000008                     ??_I2C_2_Master_Idle:
   476   000008                     ?___wmul:
   477                           	callstack 0
   478   000008                     ?___aodiv:
   479                           	callstack 0
   480   000008                     ?___aomod:
   481                           	callstack 0
   482   000008                     sendCharSerial4@charToSend:
   483                           	callstack 0
   484   000008                     ___wmul@multiplier:
   485                           	callstack 0
   486   000008                     fputc@c:
   487                           	callstack 0
   488   000008                     ___aodiv@dividend:
   489                           	callstack 0
   490   000008                     ___aomod@dividend:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x7
   494   000008                     	ds	1
   495   000009                     ??_I2C_2_Master_Read:
   496   000009                     I2C_2_Master_Write@data_byte:
   497                           	callstack 0
   498   000009                     sendStringSerial4@string:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x8
   502   000009                     	ds	1
   503   00000A                     color_writetoaddr@value:
   504                           	callstack 0
   505   00000A                     I2C_2_Master_Read@ack:
   506                           	callstack 0
   507   00000A                     ___wmul@multiplicand:
   508                           	callstack 0
   509   00000A                     fputc@fp:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x9
   513   00000A                     	ds	1
   514   00000B                     color_writetoaddr@address:
   515                           	callstack 0
   516   00000B                     I2C_2_Master_Read@tmp:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xA
   520   00000B                     	ds	1
   521   00000C                     ??_fputc:
   522   00000C                     ??_color_click_init:
   523   00000C                     ?_color_read_Red:
   524                           	callstack 0
   525   00000C                     ?_color_read_Green:
   526                           	callstack 0
   527   00000C                     ?_color_read_Blue:
   528                           	callstack 0
   529   00000C                     ?_color_read_Clear:
   530                           	callstack 0
   531   00000C                     set_interrupt_threshold@AILT:
   532                           	callstack 0
   533   00000C                     ___wmul@product:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0xB
   537   00000C                     	ds	2
   538   00000E                     ??_color_read_Red:
   539   00000E                     ??_color_read_Green:
   540   00000E                     ??_color_read_Blue:
   541   00000E                     ??_color_read_Clear:
   542   00000E                     ?___lwdiv:
   543                           	callstack 0
   544   00000E                     set_interrupt_threshold@AIHT:
   545                           	callstack 0
   546   00000E                     ___lwdiv@dividend:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0xD
   550   00000E                     	ds	2
   551   000010                     set_interrupt_threshold@persistence:
   552                           	callstack 0
   553   000010                     ___lwdiv@divisor:
   554                           	callstack 0
   555   000010                     ___aodiv@divisor:
   556                           	callstack 0
   557   000010                     ___aomod@divisor:
   558                           	callstack 0
   559                           
   560                           ; 8 bytes @ 0xF
   561   000010                     	ds	1
   562   000011                     color_read_Red@tmp:
   563                           	callstack 0
   564   000011                     color_read_Green@tmp:
   565                           	callstack 0
   566   000011                     color_read_Blue@tmp:
   567                           	callstack 0
   568   000011                     color_read_Clear@tmp:
   569                           	callstack 0
   570   000011                     fputs@s:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x10
   574   000011                     	ds	1
   575   000012                     _set_interrupt_threshold$1930:
   576                           	callstack 0
   577   000012                     ___lwdiv@quotient:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x11
   581   000012                     	ds	1
   582   000013                     _set_interrupt_threshold$1931:
   583                           	callstack 0
   584   000013                     fputs@fp:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x12
   588   000013                     	ds	1
   589   000014                     ___lwdiv@counter:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x13
   593   000014                     	ds	1
   594   000015                     fputs@c:
   595                           	callstack 0
   596   000015                     setMotorPWM@m:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x14
   600   000015                     	ds	1
   601   000016                     fputs@i:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x15
   605   000016                     	ds	1
   606   000017                     ??_setMotorPWM:
   607                           
   608                           ; 1 bytes @ 0x16
   609   000017                     	ds	1
   610   000018                     ___aodiv@counter:
   611                           	callstack 0
   612   000018                     ___aomod@counter:
   613                           	callstack 0
   614   000018                     pad@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x17
   618   000018                     	ds	1
   619   000019                     setMotorPWM@posDuty:
   620                           	callstack 0
   621   000019                     ___aodiv@sign:
   622                           	callstack 0
   623   000019                     ___aomod@sign:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x18
   627   000019                     	ds	1
   628   00001A                     ?_abs:
   629                           	callstack 0
   630   00001A                     setMotorPWM@negDuty:
   631                           	callstack 0
   632   00001A                     abs@a:
   633                           	callstack 0
   634   00001A                     pad@buf:
   635                           	callstack 0
   636   00001A                     ___aodiv@quotient:
   637                           	callstack 0
   638                           
   639                           ; 8 bytes @ 0x19
   640   00001A                     	ds	2
   641   00001C                     ??_abs:
   642   00001C                     pad@p:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x1B
   646   00001C                     	ds	2
   647   00001E                     ??_pad:
   648                           
   649                           ; 1 bytes @ 0x1D
   650   00001E                     	ds	1
   651   00001F                     pad@i:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1E
   655   00001F                     	ds	2
   656   000021                     pad@w:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x20
   660   000021                     	ds	2
   661   000023                     dtoa@fp:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x22
   665   000023                     	ds	2
   666   000025                     dtoa@d:
   667                           	callstack 0
   668                           
   669                           ; 8 bytes @ 0x24
   670   000025                     	ds	8
   671   00002D                     ??_dtoa:
   672                           
   673                           ; 1 bytes @ 0x2C
   674   00002D                     	ds	8
   675   000035                     _dtoa$2454:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x34
   679   000035                     	ds	2
   680   000037                     dtoa@p:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x36
   684   000037                     	ds	2
   685   000039                     dtoa@w:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x38
   689   000039                     	ds	2
   690   00003B                     dtoa@n:
   691                           	callstack 0
   692                           
   693                           ; 8 bytes @ 0x3A
   694   00003B                     	ds	8
   695   000043                     dtoa@s:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x42
   699   000043                     	ds	1
   700   000044                     dtoa@i:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x43
   704   000044                     	ds	2
   705   000046                     vfpfcnvrt@fp:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x45
   709   000046                     	ds	2
   710   000048                     vfpfcnvrt@fmt:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x47
   714   000048                     	ds	2
   715   00004A                     vfpfcnvrt@ap:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x49
   719   00004A                     	ds	2
   720   00004C                     ??_vfpfcnvrt:
   721                           
   722                           ; 1 bytes @ 0x4B
   723   00004C                     	ds	2
   724   00004E                     vfprintf@cfmt:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x4D
   728   00004E                     	ds	2
   729   000050                     
   730                           ; 1 bytes @ 0x4F
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 23 in file "main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  ReturnHomeAr  120   13[BANK1 ] unsigned int [30][2]
   741 ;;  buf            20  151[BANK1 ] unsigned char [20]
   742 ;;  expected_val   18  133[BANK1 ] unsigned int [3][3]
   743 ;;  normalised_v   18    0        unsigned int [3][3]
   744 ;;  motorR          9  191[BANK1 ] struct DC_motor
   745 ;;  motorL          9  182[BANK1 ] struct DC_motor
   746 ;;  master_close    6    0        unsigned int [3]
   747 ;;  TimerCount      2  179[BANK1 ] unsigned int 
   748 ;;  clear_read      2  177[BANK1 ] unsigned int 
   749 ;;  blue_read       2  175[BANK1 ] unsigned int 
   750 ;;  green_read      2  173[BANK1 ] unsigned int 
   751 ;;  red_read        2  171[BANK1 ] unsigned int 
   752 ;;  CardCount       2    0        unsigned int 
   753 ;;  PWMcycle        1  181[BANK1 ] unsigned char 
   754 ;;  card            1    0        enum E14569
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   765 ;;      Locals:         0       0     187       0       0       0       0       0       0       0       0       0       
      +0       0       0
   766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   767 ;;      Totals:         0       2     187       0       0       0       0       0       0       0       0       0       
      +0       0       0
   768 ;;Total ram usage:      189 bytes
   769 ;; Hardware stack levels required when called: 13
   770 ;; This function calls:
   771 ;;		_I2C_2_Master_Init
   772 ;;		_Interrupts_init
   773 ;;		_LEDSon_init
   774 ;;		_color_click_init
   775 ;;		_color_read_Blue
   776 ;;		_color_read_Clear
   777 ;;		_color_read_Green
   778 ;;		_color_read_Red
   779 ;;		_initDCmotorsPWM
   780 ;;		_initUSART4
   781 ;;		_sendStringSerial4
   782 ;;		_setMotorPWM
   783 ;;		_sprintf
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text0
   790   001094                     __ptext0:
   791                           	callstack 0
   792   001094                     _main:
   793                           	callstack 18
   794   001094                     
   795                           ;main.c: 28:     LEDSon_init();
   796   001094  EC9D  F00F         	call	_LEDSon_init	;wreg free
   797   001098                     
   798                           ;main.c: 29:     I2C_2_Master_Init();
   799   001098  EC4D  F00F         	call	_I2C_2_Master_Init	;wreg free
   800   00109C                     
   801                           ;main.c: 30:     color_click_init();
   802   00109C  EC1B  F00F         	call	_color_click_init	;wreg free
   803   0010A0                     
   804                           ;main.c: 31:     initDCmotorsPWM();
   805   0010A0  EC5C  F00C         	call	_initDCmotorsPWM	;wreg free
   806   0010A4                     
   807                           ;main.c: 32:     initUSART4();
   808   0010A4  ECAE  F00F         	call	_initUSART4	;wreg free
   809   0010A8                     
   810                           ;main.c: 33:     Interrupts_init();
   811   0010A8  ECFC  F00E         	call	_Interrupts_init	;wreg free
   812   0010AC                     
   813                           ;main.c: 41:     unsigned char PWMcycle = T2PR;
   814   0010AC  CFBC F1B5          	movff	4028,main@PWMcycle	;volatile
   815                           
   816                           ;main.c: 43:     struct DC_motor motorL, motorR;;main.c: 45:     motorL.power=0;
   817   0010B0  0E00               	movlw	0
   818   0010B2  0101               	movlb	1	; () banked
   819   0010B4  6FB6               	movwf	main@motorL& (0+255),b
   820                           
   821                           ;main.c: 46:     motorL.direction=1;
   822   0010B6  0E01               	movlw	1
   823   0010B8  6FB7               	movwf	(main@motorL+1)& (0+255),b
   824                           
   825                           ;main.c: 47:     motorL.brakemode=1;
   826   0010BA  0E01               	movlw	1
   827   0010BC  6FB8               	movwf	(main@motorL+2)& (0+255),b
   828   0010BE                     
   829                           ; BSR set to: 1
   830                           ;main.c: 48:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   831   0010BE  0EAA               	movlw	170
   832   0010C0  6FBB               	movwf	(main@motorL+5)& (0+255),b
   833   0010C2  0E0F               	movlw	15
   834   0010C4  6FBC               	movwf	(main@motorL+6)& (0+255),b
   835   0010C6                     
   836                           ; BSR set to: 1
   837                           ;main.c: 49:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   838   0010C6  0EA6               	movlw	166
   839   0010C8  6FBD               	movwf	(main@motorL+7)& (0+255),b
   840   0010CA  0E0F               	movlw	15
   841   0010CC  6FBE               	movwf	(main@motorL+8)& (0+255),b
   842   0010CE                     
   843                           ; BSR set to: 1
   844                           ;main.c: 50:     motorL.PWMperiod=PWMcycle;
   845   0010CE  C1B5  F1B9         	movff	main@PWMcycle,main@motorL+3
   846   0010D2  6BBA               	clrf	(main@motorL+4)& (0+255),b
   847                           
   848                           ;main.c: 52:     motorR.power=0;
   849   0010D4  0E00               	movlw	0
   850   0010D6  6FBF               	movwf	main@motorR& (0+255),b
   851                           
   852                           ;main.c: 53:     motorR.direction=1;
   853   0010D8  0E01               	movlw	1
   854   0010DA  6FC0               	movwf	(main@motorR+1)& (0+255),b
   855                           
   856                           ;main.c: 54:     motorR.brakemode=1;
   857   0010DC  0E01               	movlw	1
   858   0010DE  6FC1               	movwf	(main@motorR+2)& (0+255),b
   859   0010E0                     
   860                           ; BSR set to: 1
   861                           ;main.c: 55:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   862   0010E0  0E25               	movlw	37
   863   0010E2  6FC4               	movwf	(main@motorR+5)& (0+255),b
   864   0010E4  0E0F               	movlw	15
   865   0010E6  6FC5               	movwf	(main@motorR+6)& (0+255),b
   866   0010E8                     
   867                           ; BSR set to: 1
   868                           ;main.c: 56:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   869   0010E8  0E21               	movlw	33
   870   0010EA  6FC6               	movwf	(main@motorR+7)& (0+255),b
   871   0010EC  0E0F               	movlw	15
   872   0010EE  6FC7               	movwf	(main@motorR+8)& (0+255),b
   873   0010F0                     
   874                           ; BSR set to: 1
   875                           ;main.c: 57:     motorR.PWMperiod=PWMcycle;
   876   0010F0  C1B5  F1C2         	movff	main@PWMcycle,main@motorR+3
   877   0010F4  6BC3               	clrf	(main@motorR+4)& (0+255),b
   878   0010F6                     
   879                           ; BSR set to: 1
   880                           ;main.c: 59:     setMotorPWM(&motorL);
   881   0010F6  0EB6               	movlw	low main@motorL
   882   0010F8  6E15               	movwf	setMotorPWM@m^0,c
   883   0010FA  0E01               	movlw	high main@motorL
   884   0010FC  6E16               	movwf	(setMotorPWM@m+1)^0,c
   885   0010FE  ECE0  F009         	call	_setMotorPWM	;wreg free
   886   001102                     
   887                           ;main.c: 60:     setMotorPWM(&motorR);
   888   001102  0EBF               	movlw	low main@motorR
   889   001104  6E15               	movwf	setMotorPWM@m^0,c
   890   001106  0E01               	movlw	high main@motorR
   891   001108  6E16               	movwf	(setMotorPWM@m+1)^0,c
   892   00110A  ECE0  F009         	call	_setMotorPWM	;wreg free
   893   00110E                     
   894                           ;main.c: 66:     unsigned int expected_values[3][3] = {{13000, 2600, 1800},{8400, 6500, 
      +                          5000},{4400, 1800, 2800}};
   895   00110E  EE21  F0C8         	lfsr	2,main@F14645
   896   001112  EE11  F085         	lfsr	1,main@expected_values
   897   001116  0E11               	movlw	17
   898   001118                     u1901:
   899   001118  CFDB FFE3          	movff	plusw2,plusw1
   900   00111C  06E8               	decf	wreg,f,c
   901   00111E  E2FC               	bc	u1901
   902   001120                     
   903                           ;main.c: 75:     unsigned int TimerCount = 0;
   904   001120  0E00               	movlw	0
   905   001122  0101               	movlb	1	; () banked
   906   001124  6FB4               	movwf	(main@TimerCount+1)& (0+255),b
   907   001126  0E00               	movlw	0
   908   001128  6FB3               	movwf	main@TimerCount& (0+255),b
   909   00112A                     
   910                           ; BSR set to: 1
   911                           ;main.c: 78:     unsigned int ReturnHomeArray[2][30] = {0};
   912   00112A  EE21  F00D         	lfsr	2,main@ReturnHomeArray
   913   00112E  0E77               	movlw	119
   914   001130                     u1911:
   915   001130  6ADE               	clrf	postinc2,c
   916   001132  06E8               	decf	wreg,f,c
   917   001134  E2FD               	bc	u1911
   918   001136                     
   919                           ; BSR set to: 1
   920                           ;main.c: 136:     LATHbits.LATH3=0;
   921   001136  9680               	bcf	128,3,c	;volatile
   922   001138                     
   923                           ; BSR set to: 1
   924                           ;main.c: 137:     TRISHbits.TRISH3=0;
   925   001138  9688               	bcf	136,3,c	;volatile
   926   00113A                     
   927                           ; BSR set to: 1
   928                           ;main.c: 139:     char buf[20];;main.c: 141:     LATDbits.LATD7=0;
   929   00113A  9E7C               	bcf	124,7,c	;volatile
   930   00113C                     
   931                           ; BSR set to: 1
   932                           ;main.c: 142:     TRISDbits.TRISD7=0;
   933   00113C  9E84               	bcf	132,7,c	;volatile
   934   00113E                     l3342:
   935                           
   936                           ;main.c: 146:         if (TimerFlag == 1){
   937   00113E  0101               	movlb	1	; () banked
   938   001140  05DA               	decf	_TimerFlag& (0+255),w,b
   939   001142  11DB               	iorwf	(_TimerFlag+1)& (0+255),w,b
   940   001144  A4D8               	btfss	status,2,c
   941   001146  EFA7  F008         	goto	u1921
   942   00114A  EFA9  F008         	goto	u1920
   943   00114E                     u1921:
   944   00114E  EFD2  F008         	goto	l3354
   945   001152                     u1920:
   946   001152                     
   947                           ; BSR set to: 1
   948                           ;main.c: 147:             TimerCount += 1;
   949   001152  4BB3               	infsnz	main@TimerCount& (0+255),f,b
   950   001154  2BB4               	incf	(main@TimerCount+1)& (0+255),f,b
   951   001156                     
   952                           ; BSR set to: 1
   953                           ;main.c: 148:             if (TimerCount == 10){LATHbits.LATH3=!LATHbits.LATH3; TimerCou
      +                          nt = 0;}
   954   001156  0E0A               	movlw	10
   955   001158  19B3               	xorwf	main@TimerCount& (0+255),w,b
   956   00115A  11B4               	iorwf	(main@TimerCount+1)& (0+255),w,b
   957   00115C  A4D8               	btfss	status,2,c
   958   00115E  EFB3  F008         	goto	u1931
   959   001162  EFB5  F008         	goto	u1930
   960   001166                     u1931:
   961   001166  EFCE  F008         	goto	l3352
   962   00116A                     u1930:
   963   00116A                     
   964                           ; BSR set to: 1
   965   00116A  A680               	btfss	128,3,c	;volatile
   966   00116C  EFBA  F008         	goto	u1941
   967   001170  EFBF  F008         	goto	u1940
   968   001174                     u1941:
   969   001174  0100               	movlb	0	; () banked
   970   001176  6BF4               	clrf	??_main& (0+255),b
   971   001178  2BF4               	incf	??_main& (0+255),f,b
   972   00117A  EFC1  F008         	goto	u1958
   973   00117E                     u1940:
   974   00117E  0100               	movlb	0	; () banked
   975   001180  6BF4               	clrf	??_main& (0+255),b
   976   001182                     u1958:
   977   001182  47F4               	rlncf	??_main& (0+255),f,b
   978   001184  47F4               	rlncf	??_main& (0+255),f,b
   979   001186  47F4               	rlncf	??_main& (0+255),f,b
   980   001188  5080               	movf	128,w,c	;volatile
   981   00118A  19F4               	xorwf	??_main& (0+255),w,b
   982   00118C  0BF7               	andlw	-9
   983   00118E  19F4               	xorwf	??_main& (0+255),w,b
   984   001190  6E80               	movwf	128,c	;volatile
   985   001192                     
   986                           ; BSR set to: 0
   987   001192  0E00               	movlw	0
   988   001194  0101               	movlb	1	; () banked
   989   001196  6FB4               	movwf	(main@TimerCount+1)& (0+255),b
   990   001198  0E00               	movlw	0
   991   00119A  6FB3               	movwf	main@TimerCount& (0+255),b
   992   00119C                     l3352:
   993                           
   994                           ; BSR set to: 1
   995                           ;main.c: 149:             TimerFlag = 0;
   996   00119C  0E00               	movlw	0
   997   00119E  6FDB               	movwf	(_TimerFlag+1)& (0+255),b
   998   0011A0  0E00               	movlw	0
   999   0011A2  6FDA               	movwf	_TimerFlag& (0+255),b
  1000   0011A4                     l3354:
  1001                           
  1002                           ; BSR set to: 1
  1003                           ;main.c: 169:         red_read = color_read_Red();
  1004   0011A4  ECF9  F00D         	call	_color_read_Red	;wreg free
  1005   0011A8  C00C  F1AB         	movff	?_color_read_Red,main@red_read
  1006   0011AC  C00D  F1AC         	movff	?_color_read_Red+1,main@red_read+1
  1007   0011B0                     
  1008                           ;main.c: 170:         blue_read = color_read_Blue();
  1009   0011B0  EC71  F00E         	call	_color_read_Blue	;wreg free
  1010   0011B4  C00C  F1AF         	movff	?_color_read_Blue,main@blue_read
  1011   0011B8  C00D  F1B0         	movff	?_color_read_Blue+1,main@blue_read+1
  1012   0011BC                     
  1013                           ;main.c: 171:         green_read = color_read_Green();
  1014   0011BC  EC21  F00E         	call	_color_read_Green	;wreg free
  1015   0011C0  C00C  F1AD         	movff	?_color_read_Green,main@green_read
  1016   0011C4  C00D  F1AE         	movff	?_color_read_Green+1,main@green_read+1
  1017   0011C8                     
  1018                           ;main.c: 172:         clear_read = color_read_Clear();
  1019   0011C8  EC49  F00E         	call	_color_read_Clear	;wreg free
  1020   0011CC  C00C  F1B1         	movff	?_color_read_Clear,main@clear_read
  1021   0011D0  C00D  F1B2         	movff	?_color_read_Clear+1,main@clear_read+1
  1022   0011D4                     
  1023                           ;main.c: 175:         sprintf(buf, "Raw %d, %d, %d, %d \n", red_read, green_read, blue_r
      +                          ead, clear_read);
  1024   0011D4  0E97               	movlw	low main@buf
  1025   0011D6  0100               	movlb	0	; () banked
  1026   0011D8  6FE8               	movwf	sprintf@s& (0+255),b
  1027   0011DA  0E01               	movlw	high main@buf
  1028   0011DC  6FE9               	movwf	(sprintf@s+1)& (0+255),b
  1029   0011DE  0E01               	movlw	low STR_1
  1030   0011E0  6FEA               	movwf	sprintf@fmt& (0+255),b
  1031   0011E2  0E0E               	movlw	high STR_1
  1032   0011E4  6FEB               	movwf	(sprintf@fmt+1)& (0+255),b
  1033   0011E6  C1AB  F0EC         	movff	main@red_read,?_sprintf+4
  1034   0011EA  C1AC  F0ED         	movff	main@red_read+1,?_sprintf+5
  1035   0011EE  C1AD  F0EE         	movff	main@green_read,?_sprintf+6
  1036   0011F2  C1AE  F0EF         	movff	main@green_read+1,?_sprintf+7
  1037   0011F6  C1AF  F0F0         	movff	main@blue_read,?_sprintf+8
  1038   0011FA  C1B0  F0F1         	movff	main@blue_read+1,?_sprintf+9
  1039   0011FE  C1B1  F0F2         	movff	main@clear_read,?_sprintf+10
  1040   001202  C1B2  F0F3         	movff	main@clear_read+1,?_sprintf+11
  1041   001206  EC4B  F00D         	call	_sprintf	;wreg free
  1042   00120A                     
  1043                           ;main.c: 176:         sendStringSerial4(buf);
  1044   00120A  0E97               	movlw	low main@buf
  1045   00120C  6E09               	movwf	sendStringSerial4@string^0,c
  1046   00120E  0E01               	movlw	high main@buf
  1047   001210  6E0A               	movwf	(sendStringSerial4@string+1)^0,c
  1048   001212  EC35  F00F         	call	_sendStringSerial4	;wreg free
  1049   001216                     
  1050                           ;main.c: 177:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1051   001216  0E09               	movlw	9
  1052   001218  0100               	movlb	0	; () banked
  1053   00121A  6FF5               	movwf	(??_main+1)& (0+255),b
  1054   00121C  0E1E               	movlw	30
  1055   00121E  6FF4               	movwf	??_main& (0+255),b
  1056   001220  0EE4               	movlw	228
  1057   001222                     u1977:
  1058   001222  2EE8               	decfsz	wreg,f,c
  1059   001224  D7FE               	bra	u1977
  1060   001226  2FF4               	decfsz	??_main& (0+255),f,b
  1061   001228  D7FC               	bra	u1977
  1062   00122A  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1063   00122C  D7FA               	bra	u1977
  1064   00122E  F000               	nop	
  1065   001230  EF9F  F008         	goto	l3342
  1066   001234  EF2E  F000         	goto	start
  1067   001238                     __end_of_main:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function _sprintf *****************
  1071 ;; Defined at:
  1072 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  s               2   16[BANK0 ] PTR unsigned char 
  1075 ;;		 -> main@buf(20), 
  1076 ;;  fmt             2   18[BANK0 ] PTR const unsigned char 
  1077 ;;		 -> STR_1(21), 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  f              11    2[BANK1 ] struct _IO_FILE
  1080 ;;  ap              2    0[BANK1 ] PTR void [1]
  1081 ;;		 -> ?_sprintf(2), 
  1082 ;;  ret             2    0        int 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2   16[BANK0 ] int 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1092 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;      Totals:         0      12      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1096 ;;Total ram usage:       25 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 12
  1099 ;; This function calls:
  1100 ;;		_vfprintf
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text1
  1107   001A96                     __ptext1:
  1108                           	callstack 0
  1109   001A96                     _sprintf:
  1110                           	callstack 18
  1111   001A96  0EEC               	movlw	low (?_sprintf+4)
  1112   001A98  0101               	movlb	1	; () banked
  1113   001A9A  6F00               	movwf	sprintf@ap& (0+255),b
  1114   001A9C  0E00               	movlw	high (?_sprintf+4)
  1115   001A9E  6F01               	movwf	(sprintf@ap+1)& (0+255),b
  1116   001AA0  C0E8  F102         	movff	sprintf@s,sprintf@f
  1117   001AA4  C0E9  F103         	movff	sprintf@s+1,sprintf@f+1
  1118   001AA8                     
  1119                           ; BSR set to: 1
  1120   001AA8  0E00               	movlw	0
  1121   001AAA  6F06               	movwf	(sprintf@f+4)& (0+255),b
  1122   001AAC  0E00               	movlw	0
  1123   001AAE  6F05               	movwf	(sprintf@f+3)& (0+255),b
  1124   001AB0                     
  1125                           ; BSR set to: 1
  1126   001AB0  0E00               	movlw	0
  1127   001AB2  6F0C               	movwf	(sprintf@f+10)& (0+255),b
  1128   001AB4  0E00               	movlw	0
  1129   001AB6  6F0B               	movwf	(sprintf@f+9)& (0+255),b
  1130   001AB8                     
  1131                           ; BSR set to: 1
  1132   001AB8  0E02               	movlw	low sprintf@f
  1133   001ABA  0100               	movlb	0	; () banked
  1134   001ABC  6FE2               	movwf	vfprintf@fp& (0+255),b
  1135   001ABE  0E01               	movlw	high sprintf@f
  1136   001AC0  6FE3               	movwf	(vfprintf@fp+1)& (0+255),b
  1137   001AC2  C0EA  F0E4         	movff	sprintf@fmt,vfprintf@fmt
  1138   001AC6  C0EB  F0E5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1139   001ACA  0E00               	movlw	low sprintf@ap
  1140   001ACC  6FE6               	movwf	vfprintf@ap& (0+255),b
  1141   001ACE  0E01               	movlw	high sprintf@ap
  1142   001AD0  6FE7               	movwf	(vfprintf@ap+1)& (0+255),b
  1143   001AD2  ECCF  F00D         	call	_vfprintf	;wreg free
  1144   001AD6  0101               	movlb	1	; () banked
  1145   001AD8  5105               	movf	(sprintf@f+3)& (0+255),w,b
  1146   001ADA  0100               	movlb	0	; () banked
  1147   001ADC  25E8               	addwf	sprintf@s& (0+255),w,b
  1148   001ADE  6ED9               	movwf	fsr2l,c
  1149   001AE0  0101               	movlb	1	; () banked
  1150   001AE2  5106               	movf	(sprintf@f+4)& (0+255),w,b
  1151   001AE4  0100               	movlb	0	; () banked
  1152   001AE6  21E9               	addwfc	(sprintf@s+1)& (0+255),w,b
  1153   001AE8  6EDA               	movwf	fsr2h,c
  1154   001AEA  0E00               	movlw	0
  1155   001AEC  6EDF               	movwf	indf2,c
  1156   001AEE                     
  1157                           ; BSR set to: 0
  1158   001AEE  0012               	return		;funcret
  1159   001AF0                     __end_of_sprintf:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _vfprintf *****************
  1163 ;; Defined at:
  1164 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  1167 ;;		 -> sprintf@f(11), 
  1168 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  1169 ;;		 -> STR_1(21), 
  1170 ;;  ap              2   14[BANK0 ] PTR PTR void 
  1171 ;;		 -> sprintf@ap(2), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1174 ;;		 -> STR_1(21), 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  2   10[BANK0 ] int 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1184 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1187 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1188 ;;Total ram usage:        8 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 11
  1191 ;; This function calls:
  1192 ;;		_vfpfcnvrt
  1193 ;; This function is called by:
  1194 ;;		_sprintf
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text2
  1199   001B9E                     __ptext2:
  1200                           	callstack 0
  1201   001B9E                     _vfprintf:
  1202                           	callstack 18
  1203   001B9E                     
  1204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1205   001B9E  C0E4  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1206   001BA2  C0E5  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1209   001BA6  EFE3  F00D         	goto	l3270
  1210   001BAA                     l3268:
  1211                           
  1212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1213   001BAA  C0E2  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  1214   001BAE  C0E3  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1215   001BB2  0E4E               	movlw	low vfprintf@cfmt
  1216   001BB4  6E48               	movwf	vfpfcnvrt@fmt^0,c
  1217   001BB6  0E00               	movlw	high vfprintf@cfmt
  1218   001BB8  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1219   001BBA  C0E6  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  1220   001BBE  C0E7  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1221   001BC2  EC48  F00B         	call	_vfpfcnvrt	;wreg free
  1222   001BC6                     l3270:
  1223                           
  1224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1225   001BC6  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1226   001BCA  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1227   001BCE                     	if	0	;tblptru may be non-zero
  1228   001BCE                     	endif
  1229   001BCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1230   001BCE  0E00               	movlw	low (__mediumconst shr (0+16))
  1231   001BD0  6EF8               	movwf	tblptru,c
  1232   001BD2                     	endif
  1233   001BD2  0008               	tblrd		*
  1234   001BD4  50F5               	movf	tablat,w,c
  1235   001BD6  0900               	iorlw	0
  1236   001BD8  A4D8               	btfss	status,2,c
  1237   001BDA  EFF1  F00D         	goto	u1891
  1238   001BDE  EFF3  F00D         	goto	u1890
  1239   001BE2                     u1891:
  1240   001BE2  EFD5  F00D         	goto	l3268
  1241   001BE6                     u1890:
  1242   001BE6                     
  1243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1244   001BE6  0E00               	movlw	0
  1245   001BE8  0100               	movlb	0	; () banked
  1246   001BEA  6FE3               	movwf	(?_vfprintf+1)& (0+255),b
  1247   001BEC  0E00               	movlw	0
  1248   001BEE  6FE2               	movwf	?_vfprintf& (0+255),b
  1249   001BF0                     
  1250                           ; BSR set to: 0
  1251   001BF0  0012               	return		;funcret
  1252   001BF2                     __end_of_vfprintf:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _vfpfcnvrt *****************
  1256 ;; Defined at:
  1257 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  1260 ;;		 -> sprintf@f(11), 
  1261 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  1262 ;;		 -> vfprintf@cfmt(2), 
  1263 ;;  ap              2   73[COMRAM] PTR PTR void 
  1264 ;;		 -> sprintf@ap(2), 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  convarg         8    0[BANK0 ] struct .
  1267 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  1268 ;;		 -> STR_1(21), 
  1269 ;;  i               2    0        int 
  1270 ;;  done            2    0        int 
  1271 ;;  c               1    0        unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1281 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1282 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1284 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;Total ram usage:       18 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 10
  1288 ;; This function calls:
  1289 ;;		_dtoa
  1290 ;;		_fputc
  1291 ;; This function is called by:
  1292 ;;		_vfprintf
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text3
  1297   001690                     __ptext3:
  1298                           	callstack 0
  1299   001690                     _vfpfcnvrt:
  1300                           	callstack 18
  1301   001690                     
  1302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1303   001690  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1304   001694  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1305   001698  CFDE FFF6          	movff	postinc2,tblptrl
  1306   00169C  CFDD FFF7          	movff	postdec2,tblptrh
  1307   0016A0                     	if	0	;tblptru may be non-zero
  1308   0016A0                     	endif
  1309   0016A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1310   0016A0  0E00               	movlw	low (__mediumconst shr (0+16))
  1311   0016A2  6EF8               	movwf	tblptru,c
  1312   0016A4                     	endif
  1313   0016A4  0008               	tblrd		*
  1314   0016A6  50F5               	movf	tablat,w,c
  1315   0016A8  0A25               	xorlw	37
  1316   0016AA  A4D8               	btfss	status,2,c
  1317   0016AC  EF5A  F00B         	goto	u1861
  1318   0016B0  EF5C  F00B         	goto	u1860
  1319   0016B4                     u1861:
  1320   0016B4  EFE0  F00B         	goto	l3260
  1321   0016B8                     u1860:
  1322   0016B8                     
  1323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1324   0016B8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1325   0016BC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1326   0016C0  2ADE               	incf	postinc2,f,c
  1327   0016C2  0E00               	movlw	0
  1328   0016C4  22DD               	addwfc	postdec2,f,c
  1329   0016C6                     
  1330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1331   0016C6  0E00               	movlw	0
  1332   0016C8  0100               	movlb	0	; () banked
  1333   0016CA  6FB1               	movwf	(_width+1)& (0+255),b
  1334   0016CC  0E00               	movlw	0
  1335   0016CE  6FB0               	movwf	_width& (0+255),b
  1336   0016D0  C0B0  F052         	movff	_width,_flags
  1337   0016D4                     
  1338                           ; BSR set to: 0
  1339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1340   0016D4  6850               	setf	_prec^0,c
  1341   0016D6  6851               	setf	(_prec+1)^0,c
  1342   0016D8                     
  1343                           ; BSR set to: 0
  1344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1345   0016D8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1346   0016DC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1347   0016E0  CFDE F0E0          	movff	postinc2,vfpfcnvrt@cp
  1348   0016E4  CFDD F0E1          	movff	postdec2,vfpfcnvrt@cp+1
  1349   0016E8                     
  1350                           ; BSR set to: 0
  1351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1352   0016E8  C0E0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1353   0016EC  C0E1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1354   0016F0                     	if	0	;tblptru may be non-zero
  1355   0016F0                     	endif
  1356   0016F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1357   0016F0  0E00               	movlw	low (__mediumconst shr (0+16))
  1358   0016F2  6EF8               	movwf	tblptru,c
  1359   0016F4                     	endif
  1360   0016F4  0008               	tblrd		*
  1361   0016F6  50F5               	movf	tablat,w,c
  1362   0016F8  0A64               	xorlw	100
  1363   0016FA  B4D8               	btfsc	status,2,c
  1364   0016FC  EF82  F00B         	goto	u1871
  1365   001700  EF84  F00B         	goto	u1870
  1366   001704                     u1871:
  1367   001704  EF94  F00B         	goto	l3250
  1368   001708                     u1870:
  1369   001708                     
  1370                           ; BSR set to: 0
  1371   001708  C0E0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1372   00170C  C0E1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1373   001710                     	if	0	;tblptru may be non-zero
  1374   001710                     	endif
  1375   001710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1376   001710  0E00               	movlw	low (__mediumconst shr (0+16))
  1377   001712  6EF8               	movwf	tblptru,c
  1378   001714                     	endif
  1379   001714  0008               	tblrd		*
  1380   001716  50F5               	movf	tablat,w,c
  1381   001718  0A69               	xorlw	105
  1382   00171A  A4D8               	btfss	status,2,c
  1383   00171C  EF92  F00B         	goto	u1881
  1384   001720  EF94  F00B         	goto	u1880
  1385   001724                     u1881:
  1386   001724  EFD7  F00B         	goto	l3256
  1387   001728                     u1880:
  1388   001728                     l3250:
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1392   001728  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1393   00172C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1394   001730  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1395   001734  0E02               	movlw	2
  1396   001736  26DE               	addwf	postinc2,f,c
  1397   001738  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1398   00173C  0E00               	movlw	0
  1399   00173E  22DD               	addwfc	postdec2,f,c
  1400   001740  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1401   001744  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1402   001748  CFDE F0D8          	movff	postinc2,vfpfcnvrt@convarg
  1403   00174C  CFDD F0D9          	movff	postdec2,vfpfcnvrt@convarg+1
  1404   001750  0E00               	movlw	0
  1405   001752  BFD9               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1406   001754  0EFF               	movlw	-1
  1407   001756  6FDA               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1408   001758  6FDB               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1409   00175A  6FDC               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1410   00175C  6FDD               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1411   00175E  6FDE               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1412   001760  6FDF               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1415   001762  0E01               	movlw	1
  1416   001764  25E0               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1417   001766  6E4C               	movwf	??_vfpfcnvrt^0,c
  1418   001768  0E00               	movlw	0
  1419   00176A  21E1               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1420   00176C  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  1421   00176E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1422   001772  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1423   001776  C04C  FFDE         	movff	??_vfpfcnvrt,postinc2
  1424   00177A  C04D  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1425   00177E                     
  1426                           ; BSR set to: 0
  1427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1428   00177E  C046  F023         	movff	vfpfcnvrt@fp,dtoa@fp
  1429   001782  C047  F024         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1430   001786  C0D8  F025         	movff	vfpfcnvrt@convarg,dtoa@d
  1431   00178A  C0D9  F026         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1432   00178E  C0DA  F027         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1433   001792  C0DB  F028         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1434   001796  C0DC  F029         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1435   00179A  C0DD  F02A         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1436   00179E  C0DE  F02B         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1437   0017A2  C0DF  F02C         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1438   0017A6  EC0C  F007         	call	_dtoa	;wreg free
  1439   0017AA  EFF6  F00B         	goto	l1237
  1440   0017AE                     l3256:
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1443   0017AE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1444   0017B2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1445   0017B6  2ADE               	incf	postinc2,f,c
  1446   0017B8  0E00               	movlw	0
  1447   0017BA  22DD               	addwfc	postdec2,f,c
  1448   0017BC  EFF6  F00B         	goto	l1237
  1449   0017C0                     l3260:
  1450                           
  1451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1452   0017C0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1453   0017C4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1454   0017C8  CFDE FFF6          	movff	postinc2,tblptrl
  1455   0017CC  CFDD FFF7          	movff	postdec2,tblptrh
  1456   0017D0                     	if	0	;tblptru may be non-zero
  1457   0017D0                     	endif
  1458   0017D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1459   0017D0  0E00               	movlw	low (__mediumconst shr (0+16))
  1460   0017D2  6EF8               	movwf	tblptru,c
  1461   0017D4                     	endif
  1462   0017D4  0008               	tblrd		*
  1463   0017D6  50F5               	movf	tablat,w,c
  1464   0017D8  6E08               	movwf	fputc@c^0,c
  1465   0017DA  6A09               	clrf	(fputc@c+1)^0,c
  1466   0017DC  C046  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  1467   0017E0  C047  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1468   0017E4  ECF7  F00B         	call	_fputc	;wreg free
  1469   0017E8  EFD7  F00B         	goto	l3256
  1470   0017EC                     l1237:
  1471   0017EC  0012               	return		;funcret
  1472   0017EE                     __end_of_vfpfcnvrt:
  1473                           	callstack 0
  1474                           
  1475 ;; *************** function _dtoa *****************
  1476 ;; Defined at:
  1477 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  1480 ;;		 -> sprintf@f(11), 
  1481 ;;  d               8   36[COMRAM] long long 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  n               8   58[COMRAM] long long 
  1484 ;;  i               2   67[COMRAM] int 
  1485 ;;  w               2   56[COMRAM] int 
  1486 ;;  p               2   54[COMRAM] int 
  1487 ;;  s               1   66[COMRAM] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1497 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;Total ram usage:       35 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 9
  1504 ;; This function calls:
  1505 ;;		___aodiv
  1506 ;;		___aomod
  1507 ;;		_abs
  1508 ;;		_pad
  1509 ;; This function is called by:
  1510 ;;		_vfpfcnvrt
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text4
  1515   000E18                     __ptext4:
  1516                           	callstack 0
  1517   000E18                     _dtoa:
  1518                           	callstack 18
  1519   000E18                     
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1521   000E18  C025  F03B         	movff	dtoa@d,dtoa@n
  1522   000E1C  C026  F03C         	movff	dtoa@d+1,dtoa@n+1
  1523   000E20  C027  F03D         	movff	dtoa@d+2,dtoa@n+2
  1524   000E24  C028  F03E         	movff	dtoa@d+3,dtoa@n+3
  1525   000E28  C029  F03F         	movff	dtoa@d+4,dtoa@n+4
  1526   000E2C  C02A  F040         	movff	dtoa@d+5,dtoa@n+5
  1527   000E30  C02B  F041         	movff	dtoa@d+6,dtoa@n+6
  1528   000E34  C02C  F042         	movff	dtoa@d+7,dtoa@n+7
  1529   000E38                     
  1530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1531   000E38  BE42               	btfsc	(dtoa@n+7)^0,7,c
  1532   000E3A  EF21  F007         	goto	u1761
  1533   000E3E  EF24  F007         	goto	u1760
  1534   000E42                     u1761:
  1535   000E42  0E01               	movlw	1
  1536   000E44  EF25  F007         	goto	u1770
  1537   000E48                     u1760:
  1538   000E48  0E00               	movlw	0
  1539   000E4A                     u1770:
  1540   000E4A  6E43               	movwf	dtoa@s^0,c
  1541   000E4C                     
  1542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1543   000E4C  5043               	movf	dtoa@s^0,w,c
  1544   000E4E  B4D8               	btfsc	status,2,c
  1545   000E50  EF2C  F007         	goto	u1781
  1546   000E54  EF2E  F007         	goto	u1780
  1547   000E58                     u1781:
  1548   000E58  EF3E  F007         	goto	l3192
  1549   000E5C                     u1780:
  1550   000E5C                     
  1551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1552   000E5C  1E42               	comf	(dtoa@n+7)^0,f,c
  1553   000E5E  1E41               	comf	(dtoa@n+6)^0,f,c
  1554   000E60  1E40               	comf	(dtoa@n+5)^0,f,c
  1555   000E62  1E3F               	comf	(dtoa@n+4)^0,f,c
  1556   000E64  1E3E               	comf	(dtoa@n+3)^0,f,c
  1557   000E66  1E3D               	comf	(dtoa@n+2)^0,f,c
  1558   000E68  1E3C               	comf	(dtoa@n+1)^0,f,c
  1559   000E6A  6C3B               	negf	dtoa@n^0,c
  1560   000E6C  0E00               	movlw	0
  1561   000E6E  223C               	addwfc	(dtoa@n+1)^0,f,c
  1562   000E70  223D               	addwfc	(dtoa@n+2)^0,f,c
  1563   000E72  223E               	addwfc	(dtoa@n+3)^0,f,c
  1564   000E74  223F               	addwfc	(dtoa@n+4)^0,f,c
  1565   000E76  2240               	addwfc	(dtoa@n+5)^0,f,c
  1566   000E78  2241               	addwfc	(dtoa@n+6)^0,f,c
  1567   000E7A  2242               	addwfc	(dtoa@n+7)^0,f,c
  1568   000E7C                     l3192:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1571   000E7C  BE51               	btfsc	(_prec+1)^0,7,c
  1572   000E7E  EF4B  F007         	goto	u1790
  1573   000E82  5051               	movf	(_prec+1)^0,w,c
  1574   000E84  E106               	bnz	u1791
  1575   000E86  0450               	decf	_prec^0,w,c
  1576   000E88  B0D8               	btfsc	status,0,c
  1577   000E8A  EF49  F007         	goto	u1791
  1578   000E8E  EF4B  F007         	goto	u1790
  1579   000E92                     u1791:
  1580   000E92  EF51  F007         	goto	l1216
  1581   000E96                     u1790:
  1582   000E96  0E00               	movlw	0
  1583   000E98  6E38               	movwf	(dtoa@p+1)^0,c
  1584   000E9A  0E01               	movlw	1
  1585   000E9C  6E37               	movwf	dtoa@p^0,c
  1586   000E9E  EF55  F007         	goto	l1218
  1587   000EA2                     l1216:
  1588   000EA2  C050  F037         	movff	_prec,dtoa@p
  1589   000EA6  C051  F038         	movff	_prec+1,dtoa@p+1
  1590   000EAA                     l1218:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1593   000EAA  C0B0  F039         	movff	_width,dtoa@w
  1594   000EAE  C0B1  F03A         	movff	_width+1,dtoa@w+1
  1595   000EB2                     
  1596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1597   000EB2  5043               	movf	dtoa@s^0,w,c
  1598   000EB4  B4D8               	btfsc	status,2,c
  1599   000EB6  EF5F  F007         	goto	u1801
  1600   000EBA  EF61  F007         	goto	u1800
  1601   000EBE                     u1801:
  1602   000EBE  EF78  F007         	goto	l1219
  1603   000EC2                     u1800:
  1604   000EC2                     
  1605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1606   000EC2  0639               	decf	dtoa@w^0,f,c
  1607   000EC4  A0D8               	btfss	status,0,c
  1608   000EC6  063A               	decf	(dtoa@w+1)^0,f,c
  1609   000EC8                     
  1610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1611   000EC8  5043               	movf	dtoa@s^0,w,c
  1612   000ECA  A4D8               	btfss	status,2,c
  1613   000ECC  EF6A  F007         	goto	u1811
  1614   000ED0  EF6C  F007         	goto	u1810
  1615   000ED4                     u1811:
  1616   000ED4  EF72  F007         	goto	l3204
  1617   000ED8                     u1810:
  1618   000ED8  0E00               	movlw	0
  1619   000EDA  6E36               	movwf	(_dtoa$2454+1)^0,c
  1620   000EDC  0E2B               	movlw	43
  1621   000EDE  6E35               	movwf	_dtoa$2454^0,c
  1622   000EE0  EF76  F007         	goto	l3206
  1623   000EE4                     l3204:
  1624   000EE4  0E00               	movlw	0
  1625   000EE6  6E36               	movwf	(_dtoa$2454+1)^0,c
  1626   000EE8  0E2D               	movlw	45
  1627   000EEA  6E35               	movwf	_dtoa$2454^0,c
  1628   000EEC                     l3206:
  1629   000EEC  C035  F043         	movff	_dtoa$2454,dtoa@s
  1630   000EF0                     l1219:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1633   000EF0  0E00               	movlw	0
  1634   000EF2  6E45               	movwf	(dtoa@i+1)^0,c
  1635   000EF4  0E1F               	movlw	31
  1636   000EF6  6E44               	movwf	dtoa@i^0,c
  1637   000EF8                     
  1638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1639   000EF8  0E00               	movlw	0
  1640   000EFA  0100               	movlb	0	; () banked
  1641   000EFC  6FD7               	movwf	(_dbuf+31)& (0+255),b
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1644   000EFE  EFFD  F007         	goto	l3220
  1645   000F02                     l3210:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1648   000F02  0644               	decf	dtoa@i^0,f,c
  1649   000F04  A0D8               	btfss	status,0,c
  1650   000F06  0645               	decf	(dtoa@i+1)^0,f,c
  1651   000F08                     
  1652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1653   000F08  0EB8               	movlw	low _dbuf
  1654   000F0A  2444               	addwf	dtoa@i^0,w,c
  1655   000F0C  6ED9               	movwf	fsr2l,c
  1656   000F0E  0E00               	movlw	high _dbuf
  1657   000F10  2045               	addwfc	(dtoa@i+1)^0,w,c
  1658   000F12  6EDA               	movwf	fsr2h,c
  1659   000F14  C03B  F008         	movff	dtoa@n,___aomod@dividend
  1660   000F18  C03C  F009         	movff	dtoa@n+1,___aomod@dividend+1
  1661   000F1C  C03D  F00A         	movff	dtoa@n+2,___aomod@dividend+2
  1662   000F20  C03E  F00B         	movff	dtoa@n+3,___aomod@dividend+3
  1663   000F24  C03F  F00C         	movff	dtoa@n+4,___aomod@dividend+4
  1664   000F28  C040  F00D         	movff	dtoa@n+5,___aomod@dividend+5
  1665   000F2C  C041  F00E         	movff	dtoa@n+6,___aomod@dividend+6
  1666   000F30  C042  F00F         	movff	dtoa@n+7,___aomod@dividend+7
  1667   000F34  0E0A               	movlw	10
  1668   000F36  6E10               	movwf	___aomod@divisor^0,c
  1669   000F38  0E00               	movlw	0
  1670   000F3A  6E11               	movwf	(___aomod@divisor+1)^0,c
  1671   000F3C  0E00               	movlw	0
  1672   000F3E  6E12               	movwf	(___aomod@divisor+2)^0,c
  1673   000F40  0E00               	movlw	0
  1674   000F42  6E13               	movwf	(___aomod@divisor+3)^0,c
  1675   000F44  0E00               	movlw	0
  1676   000F46  6E14               	movwf	(___aomod@divisor+4)^0,c
  1677   000F48  0E00               	movlw	0
  1678   000F4A  6E15               	movwf	(___aomod@divisor+5)^0,c
  1679   000F4C  0E00               	movlw	0
  1680   000F4E  6E16               	movwf	(___aomod@divisor+6)^0,c
  1681   000F50  0E00               	movlw	0
  1682   000F52  6E17               	movwf	(___aomod@divisor+7)^0,c
  1683   000F54  EC96  F00A         	call	___aomod	;wreg free
  1684   000F58  C008  F02D         	movff	?___aomod,??_dtoa
  1685   000F5C  C009  F02E         	movff	?___aomod+1,??_dtoa+1
  1686   000F60  C00A  F02F         	movff	?___aomod+2,??_dtoa+2
  1687   000F64  C00B  F030         	movff	?___aomod+3,??_dtoa+3
  1688   000F68  C00C  F031         	movff	?___aomod+4,??_dtoa+4
  1689   000F6C  C00D  F032         	movff	?___aomod+5,??_dtoa+5
  1690   000F70  C00E  F033         	movff	?___aomod+6,??_dtoa+6
  1691   000F74  C00F  F034         	movff	?___aomod+7,??_dtoa+7
  1692   000F78  C02D  F01A         	movff	??_dtoa,abs@a
  1693   000F7C  C02E  F01B         	movff	??_dtoa+1,abs@a+1
  1694   000F80  ECDC  F00E         	call	_abs	;wreg free
  1695   000F84  501A               	movf	?_abs^0,w,c
  1696   000F86  0F30               	addlw	48
  1697   000F88  6EDF               	movwf	indf2,c
  1698   000F8A                     
  1699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1700   000F8A  0637               	decf	dtoa@p^0,f,c
  1701   000F8C  A0D8               	btfss	status,0,c
  1702   000F8E  0638               	decf	(dtoa@p+1)^0,f,c
  1703   000F90                     
  1704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1705   000F90  0639               	decf	dtoa@w^0,f,c
  1706   000F92  A0D8               	btfss	status,0,c
  1707   000F94  063A               	decf	(dtoa@w+1)^0,f,c
  1708   000F96                     
  1709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1710   000F96  C03B  F008         	movff	dtoa@n,___aodiv@dividend
  1711   000F9A  C03C  F009         	movff	dtoa@n+1,___aodiv@dividend+1
  1712   000F9E  C03D  F00A         	movff	dtoa@n+2,___aodiv@dividend+2
  1713   000FA2  C03E  F00B         	movff	dtoa@n+3,___aodiv@dividend+3
  1714   000FA6  C03F  F00C         	movff	dtoa@n+4,___aodiv@dividend+4
  1715   000FAA  C040  F00D         	movff	dtoa@n+5,___aodiv@dividend+5
  1716   000FAE  C041  F00E         	movff	dtoa@n+6,___aodiv@dividend+6
  1717   000FB2  C042  F00F         	movff	dtoa@n+7,___aodiv@dividend+7
  1718   000FB6  0E0A               	movlw	10
  1719   000FB8  6E10               	movwf	___aodiv@divisor^0,c
  1720   000FBA  0E00               	movlw	0
  1721   000FBC  6E11               	movwf	(___aodiv@divisor+1)^0,c
  1722   000FBE  0E00               	movlw	0
  1723   000FC0  6E12               	movwf	(___aodiv@divisor+2)^0,c
  1724   000FC2  0E00               	movlw	0
  1725   000FC4  6E13               	movwf	(___aodiv@divisor+3)^0,c
  1726   000FC6  0E00               	movlw	0
  1727   000FC8  6E14               	movwf	(___aodiv@divisor+4)^0,c
  1728   000FCA  0E00               	movlw	0
  1729   000FCC  6E15               	movwf	(___aodiv@divisor+5)^0,c
  1730   000FCE  0E00               	movlw	0
  1731   000FD0  6E16               	movwf	(___aodiv@divisor+6)^0,c
  1732   000FD2  0E00               	movlw	0
  1733   000FD4  6E17               	movwf	(___aodiv@divisor+7)^0,c
  1734   000FD6  EC1C  F009         	call	___aodiv	;wreg free
  1735   000FDA  C008  F03B         	movff	?___aodiv,dtoa@n
  1736   000FDE  C009  F03C         	movff	?___aodiv+1,dtoa@n+1
  1737   000FE2  C00A  F03D         	movff	?___aodiv+2,dtoa@n+2
  1738   000FE6  C00B  F03E         	movff	?___aodiv+3,dtoa@n+3
  1739   000FEA  C00C  F03F         	movff	?___aodiv+4,dtoa@n+4
  1740   000FEE  C00D  F040         	movff	?___aodiv+5,dtoa@n+5
  1741   000FF2  C00E  F041         	movff	?___aodiv+6,dtoa@n+6
  1742   000FF6  C00F  F042         	movff	?___aodiv+7,dtoa@n+7
  1743   000FFA                     l3220:
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1746   000FFA  BE45               	btfsc	(dtoa@i+1)^0,7,c
  1747   000FFC  EF08  F008         	goto	u1821
  1748   001000  5045               	movf	(dtoa@i+1)^0,w,c
  1749   001002  E108               	bnz	u1820
  1750   001004  0444               	decf	dtoa@i^0,w,c
  1751   001006  A0D8               	btfss	status,0,c
  1752   001008  EF08  F008         	goto	u1821
  1753   00100C  EF0A  F008         	goto	u1820
  1754   001010                     u1821:
  1755   001010  EF26  F008         	goto	l3226
  1756   001014                     u1820:
  1757   001014  503B               	movf	dtoa@n^0,w,c
  1758   001016  103C               	iorwf	(dtoa@n+1)^0,w,c
  1759   001018  103D               	iorwf	(dtoa@n+2)^0,w,c
  1760   00101A  103E               	iorwf	(dtoa@n+3)^0,w,c
  1761   00101C  103F               	iorwf	(dtoa@n+4)^0,w,c
  1762   00101E  1040               	iorwf	(dtoa@n+5)^0,w,c
  1763   001020  1041               	iorwf	(dtoa@n+6)^0,w,c
  1764   001022  1042               	iorwf	(dtoa@n+7)^0,w,c
  1765   001024  A4D8               	btfss	status,2,c
  1766   001026  EF17  F008         	goto	u1831
  1767   00102A  EF19  F008         	goto	u1830
  1768   00102E                     u1831:
  1769   00102E  EF81  F007         	goto	l3210
  1770   001032                     u1830:
  1771   001032  BE38               	btfsc	(dtoa@p+1)^0,7,c
  1772   001034  EF26  F008         	goto	u1840
  1773   001038  5038               	movf	(dtoa@p+1)^0,w,c
  1774   00103A  E106               	bnz	u1841
  1775   00103C  0437               	decf	dtoa@p^0,w,c
  1776   00103E  B0D8               	btfsc	status,0,c
  1777   001040  EF24  F008         	goto	u1841
  1778   001044  EF26  F008         	goto	u1840
  1779   001048                     u1841:
  1780   001048  EF81  F007         	goto	l3210
  1781   00104C                     u1840:
  1782   00104C                     l3226:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1785   00104C  5043               	movf	dtoa@s^0,w,c
  1786   00104E  B4D8               	btfsc	status,2,c
  1787   001050  EF2C  F008         	goto	u1851
  1788   001054  EF2E  F008         	goto	u1850
  1789   001058                     u1851:
  1790   001058  EF39  F008         	goto	l3232
  1791   00105C                     u1850:
  1792   00105C                     
  1793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1794   00105C  0644               	decf	dtoa@i^0,f,c
  1795   00105E  A0D8               	btfss	status,0,c
  1796   001060  0645               	decf	(dtoa@i+1)^0,f,c
  1797   001062                     
  1798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1799   001062  0EB8               	movlw	low _dbuf
  1800   001064  2444               	addwf	dtoa@i^0,w,c
  1801   001066  6ED9               	movwf	fsr2l,c
  1802   001068  0E00               	movlw	high _dbuf
  1803   00106A  2045               	addwfc	(dtoa@i+1)^0,w,c
  1804   00106C  6EDA               	movwf	fsr2h,c
  1805   00106E  C043  FFDF         	movff	dtoa@s,indf2
  1806   001072                     l3232:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1809   001072  C023  F018         	movff	dtoa@fp,pad@fp
  1810   001076  C024  F019         	movff	dtoa@fp+1,pad@fp+1
  1811   00107A  0EB8               	movlw	low _dbuf
  1812   00107C  2444               	addwf	dtoa@i^0,w,c
  1813   00107E  6E1A               	movwf	pad@buf^0,c
  1814   001080  0E00               	movlw	high _dbuf
  1815   001082  2045               	addwfc	(dtoa@i+1)^0,w,c
  1816   001084  6E1B               	movwf	(pad@buf+1)^0,c
  1817   001086  C039  F01C         	movff	dtoa@w,pad@p
  1818   00108A  C03A  F01D         	movff	dtoa@w+1,pad@p+1
  1819   00108E  ECA0  F00C         	call	_pad	;wreg free
  1820   001092  0012               	return		;funcret
  1821   001094                     __end_of_dtoa:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _pad *****************
  1825 ;; Defined at:
  1826 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  1829 ;;		 -> sprintf@f(11), 
  1830 ;;  buf             2   25[COMRAM] PTR unsigned char 
  1831 ;;		 -> dbuf(32), 
  1832 ;;  p               2   27[COMRAM] int 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  w               2   32[COMRAM] int 
  1835 ;;  i               2   30[COMRAM] int 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1845 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1846 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1848 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1849 ;;Total ram usage:       11 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; Hardware stack levels required when called: 8
  1852 ;; This function calls:
  1853 ;;		_fputc
  1854 ;;		_fputs
  1855 ;; This function is called by:
  1856 ;;		_dtoa
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text5
  1861   001940                     __ptext5:
  1862                           	callstack 0
  1863   001940                     _pad:
  1864                           	callstack 18
  1865   001940                     
  1866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1867   001940  BE1D               	btfsc	(pad@p+1)^0,7,c
  1868   001942  EFA5  F00C         	goto	u1741
  1869   001946  EFA7  F00C         	goto	u1740
  1870   00194A                     u1741:
  1871   00194A  EFAD  F00C         	goto	l3174
  1872   00194E                     u1740:
  1873   00194E  C01C  F021         	movff	pad@p,pad@w
  1874   001952  C01D  F022         	movff	pad@p+1,pad@w+1
  1875   001956  EFB1  F00C         	goto	l1207
  1876   00195A                     l3174:
  1877   00195A  0E00               	movlw	0
  1878   00195C  6E22               	movwf	(pad@w+1)^0,c
  1879   00195E  0E00               	movlw	0
  1880   001960  6E21               	movwf	pad@w^0,c
  1881   001962                     l1207:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1884   001962  0E00               	movlw	0
  1885   001964  6E20               	movwf	(pad@i+1)^0,c
  1886   001966  0E00               	movlw	0
  1887   001968  6E1F               	movwf	pad@i^0,c
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1890   00196A  EFC3  F00C         	goto	l3180
  1891   00196E                     l3176:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1894   00196E  0E00               	movlw	0
  1895   001970  6E09               	movwf	(fputc@c+1)^0,c
  1896   001972  0E20               	movlw	32
  1897   001974  6E08               	movwf	fputc@c^0,c
  1898   001976  C018  F00A         	movff	pad@fp,fputc@fp
  1899   00197A  C019  F00B         	movff	pad@fp+1,fputc@fp+1
  1900   00197E  ECF7  F00B         	call	_fputc	;wreg free
  1901   001982                     
  1902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1903   001982  4A1F               	infsnz	pad@i^0,f,c
  1904   001984  2A20               	incf	(pad@i+1)^0,f,c
  1905   001986                     l3180:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1908   001986  5021               	movf	pad@w^0,w,c
  1909   001988  5C1F               	subwf	pad@i^0,w,c
  1910   00198A  5020               	movf	(pad@i+1)^0,w,c
  1911   00198C  0A80               	xorlw	128
  1912   00198E  6E1E               	movwf	??_pad^0,c
  1913   001990  5022               	movf	(pad@w+1)^0,w,c
  1914   001992  0A80               	xorlw	128
  1915   001994  581E               	subwfb	??_pad^0,w,c
  1916   001996  A0D8               	btfss	status,0,c
  1917   001998  EFD0  F00C         	goto	u1751
  1918   00199C  EFD2  F00C         	goto	u1750
  1919   0019A0                     u1751:
  1920   0019A0  EFB7  F00C         	goto	l3176
  1921   0019A4                     u1750:
  1922   0019A4                     
  1923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1924   0019A4  C01A  F011         	movff	pad@buf,fputs@s
  1925   0019A8  C01B  F012         	movff	pad@buf+1,fputs@s+1
  1926   0019AC  C018  F013         	movff	pad@fp,fputs@fp
  1927   0019B0  C019  F014         	movff	pad@fp+1,fputs@fp+1
  1928   0019B4  EC99  F00E         	call	_fputs	;wreg free
  1929   0019B8  0012               	return		;funcret
  1930   0019BA                     __end_of_pad:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _fputs *****************
  1934 ;; Defined at:
  1935 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  s               2   16[COMRAM] PTR const unsigned char 
  1938 ;;		 -> dbuf(32), 
  1939 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1940 ;;		 -> sprintf@f(11), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  i               2   21[COMRAM] int 
  1943 ;;  c               1   20[COMRAM] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2   16[COMRAM] int 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;Total ram usage:        7 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 7
  1960 ;; This function calls:
  1961 ;;		_fputc
  1962 ;; This function is called by:
  1963 ;;		_pad
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text6
  1968   001D32                     __ptext6:
  1969                           	callstack 0
  1970   001D32                     _fputs:
  1971                           	callstack 18
  1972   001D32  0E00               	movlw	0
  1973   001D34  6E17               	movwf	(fputs@i+1)^0,c
  1974   001D36  0E00               	movlw	0
  1975   001D38  6E16               	movwf	fputs@i^0,c
  1976   001D3A  EFAA  F00E         	goto	l3084
  1977   001D3E                     l3080:
  1978   001D3E  C015  F008         	movff	fputs@c,fputc@c
  1979   001D42  6A09               	clrf	(fputc@c+1)^0,c
  1980   001D44  C013  F00A         	movff	fputs@fp,fputc@fp
  1981   001D48  C014  F00B         	movff	fputs@fp+1,fputc@fp+1
  1982   001D4C  ECF7  F00B         	call	_fputc	;wreg free
  1983   001D50  4A16               	infsnz	fputs@i^0,f,c
  1984   001D52  2A17               	incf	(fputs@i+1)^0,f,c
  1985   001D54                     l3084:
  1986   001D54  5016               	movf	fputs@i^0,w,c
  1987   001D56  2411               	addwf	fputs@s^0,w,c
  1988   001D58  6ED9               	movwf	fsr2l,c
  1989   001D5A  5017               	movf	(fputs@i+1)^0,w,c
  1990   001D5C  2012               	addwfc	(fputs@s+1)^0,w,c
  1991   001D5E  6EDA               	movwf	fsr2h,c
  1992   001D60  50DF               	movf	indf2,w,c
  1993   001D62  6E15               	movwf	fputs@c^0,c
  1994   001D64  5015               	movf	fputs@c^0,w,c
  1995   001D66  A4D8               	btfss	status,2,c
  1996   001D68  EFB8  F00E         	goto	u1591
  1997   001D6C  EFBA  F00E         	goto	u1590
  1998   001D70                     u1591:
  1999   001D70  EF9F  F00E         	goto	l3080
  2000   001D74                     u1590:
  2001   001D74  0012               	return		;funcret
  2002   001D76                     __end_of_fputs:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _fputc *****************
  2006 ;; Defined at:
  2007 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  c               2    7[COMRAM] int 
  2010 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  2011 ;;		 -> sprintf@f(11), 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  2    7[COMRAM] int 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2025 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2026 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2027 ;;Total ram usage:        9 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 6
  2030 ;; This function calls:
  2031 ;;		_putch
  2032 ;; This function is called by:
  2033 ;;		_pad
  2034 ;;		_vfpfcnvrt
  2035 ;;		_fputs
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text7
  2040   0017EE                     __ptext7:
  2041                           	callstack 0
  2042   0017EE                     _fputc:
  2043                           	callstack 21
  2044   0017EE  500A               	movf	fputc@fp^0,w,c
  2045   0017F0  100B               	iorwf	(fputc@fp+1)^0,w,c
  2046   0017F2  B4D8               	btfsc	status,2,c
  2047   0017F4  EFFE  F00B         	goto	u1551
  2048   0017F8  EF00  F00C         	goto	u1550
  2049   0017FC                     u1551:
  2050   0017FC  EF09  F00C         	goto	l3068
  2051   001800                     u1550:
  2052   001800  500A               	movf	fputc@fp^0,w,c
  2053   001802  100B               	iorwf	(fputc@fp+1)^0,w,c
  2054   001804  A4D8               	btfss	status,2,c
  2055   001806  EF07  F00C         	goto	u1561
  2056   00180A  EF09  F00C         	goto	u1560
  2057   00180E                     u1561:
  2058   00180E  EF0E  F00C         	goto	l3070
  2059   001812                     u1560:
  2060   001812                     l3068:
  2061   001812  5008               	movf	fputc@c^0,w,c
  2062   001814  EC26  F010         	call	_putch
  2063   001818  EF5B  F00C         	goto	l1255
  2064   00181C                     l3070:
  2065   00181C  EE20 F009          	lfsr	2,9
  2066   001820  500A               	movf	fputc@fp^0,w,c
  2067   001822  26D9               	addwf	fsr2l,f,c
  2068   001824  500B               	movf	(fputc@fp+1)^0,w,c
  2069   001826  22DA               	addwfc	fsr2h,f,c
  2070   001828  50DE               	movf	postinc2,w,c
  2071   00182A  10DE               	iorwf	postinc2,w,c
  2072   00182C  B4D8               	btfsc	status,2,c
  2073   00182E  EF1B  F00C         	goto	u1571
  2074   001832  EF1D  F00C         	goto	u1570
  2075   001836                     u1571:
  2076   001836  EF38  F00C         	goto	l3074
  2077   00183A                     u1570:
  2078   00183A  EE20 F009          	lfsr	2,9
  2079   00183E  500A               	movf	fputc@fp^0,w,c
  2080   001840  26D9               	addwf	fsr2l,f,c
  2081   001842  500B               	movf	(fputc@fp+1)^0,w,c
  2082   001844  22DA               	addwfc	fsr2h,f,c
  2083   001846  EE10 F003          	lfsr	1,3
  2084   00184A  500A               	movf	fputc@fp^0,w,c
  2085   00184C  26E1               	addwf	fsr1l,f,c
  2086   00184E  500B               	movf	(fputc@fp+1)^0,w,c
  2087   001850  22E2               	addwfc	fsr1h,f,c
  2088   001852  50DE               	movf	postinc2,w,c
  2089   001854  5CE6               	subwf	postinc1,w,c
  2090   001856  50E6               	movf	postinc1,w,c
  2091   001858  0A80               	xorlw	128
  2092   00185A  6E10               	movwf	(??_fputc+4)^0,c
  2093   00185C  50DE               	movf	postinc2,w,c
  2094   00185E  0A80               	xorlw	128
  2095   001860  5810               	subwfb	(??_fputc+4)^0,w,c
  2096   001862  B0D8               	btfsc	status,0,c
  2097   001864  EF36  F00C         	goto	u1581
  2098   001868  EF38  F00C         	goto	u1580
  2099   00186C                     u1581:
  2100   00186C  EF5B  F00C         	goto	l1255
  2101   001870                     u1580:
  2102   001870                     l3074:
  2103   001870  EE20 F003          	lfsr	2,3
  2104   001874  500A               	movf	fputc@fp^0,w,c
  2105   001876  26D9               	addwf	fsr2l,f,c
  2106   001878  500B               	movf	(fputc@fp+1)^0,w,c
  2107   00187A  22DA               	addwfc	fsr2h,f,c
  2108   00187C  CFDE F00C          	movff	postinc2,??_fputc
  2109   001880  CFDD F00D          	movff	postdec2,??_fputc+1
  2110   001884  C00A  FFD9         	movff	fputc@fp,fsr2l
  2111   001888  C00B  FFDA         	movff	fputc@fp+1,fsr2h
  2112   00188C  CFDE F00E          	movff	postinc2,??_fputc+2
  2113   001890  CFDD F00F          	movff	postdec2,??_fputc+3
  2114   001894  500C               	movf	??_fputc^0,w,c
  2115   001896  240E               	addwf	(??_fputc+2)^0,w,c
  2116   001898  6ED9               	movwf	fsr2l,c
  2117   00189A  500D               	movf	(??_fputc+1)^0,w,c
  2118   00189C  200F               	addwfc	(??_fputc+3)^0,w,c
  2119   00189E  6EDA               	movwf	fsr2h,c
  2120   0018A0  C008  FFDF         	movff	fputc@c,indf2
  2121   0018A4  EE20 F003          	lfsr	2,3
  2122   0018A8  500A               	movf	fputc@fp^0,w,c
  2123   0018AA  26D9               	addwf	fsr2l,f,c
  2124   0018AC  500B               	movf	(fputc@fp+1)^0,w,c
  2125   0018AE  22DA               	addwfc	fsr2h,f,c
  2126   0018B0  2ADE               	incf	postinc2,f,c
  2127   0018B2  0E00               	movlw	0
  2128   0018B4  22DD               	addwfc	postdec2,f,c
  2129   0018B6                     l1255:
  2130   0018B6  0012               	return		;funcret
  2131   0018B8                     __end_of_fputc:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _putch *****************
  2135 ;; Defined at:
  2136 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  c               1    wreg     unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  c               1    0[COMRAM] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;Total ram usage:        0 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 5
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_fputc
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text8
  2165   00204C                     __ptext8:
  2166                           	callstack 0
  2167   00204C                     _putch:
  2168                           	callstack 21
  2169   00204C  0012               	return		;funcret
  2170   00204E                     __end_of_putch:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _abs *****************
  2174 ;; Defined at:
  2175 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  a               2   25[COMRAM] int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  2   25[COMRAM] int 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;Total ram usage:        4 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 5
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_dtoa
  2200 ;;		_normalise_readings
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text9
  2205   001DB8                     __ptext9:
  2206                           	callstack 0
  2207   001DB8                     _abs:
  2208                           	callstack 21
  2209   001DB8  BE1B               	btfsc	(abs@a+1)^0,7,c
  2210   001DBA  EFE9  F00E         	goto	u1600
  2211   001DBE  501B               	movf	(abs@a+1)^0,w,c
  2212   001DC0  E106               	bnz	u1601
  2213   001DC2  041A               	decf	abs@a^0,w,c
  2214   001DC4  B0D8               	btfsc	status,0,c
  2215   001DC6  EFE7  F00E         	goto	u1601
  2216   001DCA  EFE9  F00E         	goto	u1600
  2217   001DCE                     u1601:
  2218   001DCE  EFF7  F00E         	goto	l1175
  2219   001DD2                     u1600:
  2220   001DD2  C01A  F01C         	movff	abs@a,??_abs
  2221   001DD6  C01B  F01D         	movff	abs@a+1,??_abs+1
  2222   001DDA  1E1C               	comf	??_abs^0,f,c
  2223   001DDC  1E1D               	comf	(??_abs+1)^0,f,c
  2224   001DDE  4A1C               	infsnz	??_abs^0,f,c
  2225   001DE0  2A1D               	incf	(??_abs+1)^0,f,c
  2226   001DE2  C01C  F01A         	movff	??_abs,?_abs
  2227   001DE6  C01D  F01B         	movff	??_abs+1,?_abs+1
  2228   001DEA  EFFB  F00E         	goto	l1178
  2229   001DEE                     l1175:
  2230   001DEE  C01A  F01A         	movff	abs@a,?_abs
  2231   001DF2  C01B  F01B         	movff	abs@a+1,?_abs+1
  2232   001DF6                     l1178:
  2233   001DF6  0012               	return		;funcret
  2234   001DF8                     __end_of_abs:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function ___aomod *****************
  2238 ;; Defined at:
  2239 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  dividend        8    7[COMRAM] long long 
  2242 ;;  divisor         8   15[COMRAM] long long 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  sign            1   24[COMRAM] unsigned char 
  2245 ;;  counter         1   23[COMRAM] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  8    7[COMRAM] long long 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2255 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2258 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;Total ram usage:       18 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 5
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_dtoa
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text10
  2270   00152C                     __ptext10:
  2271                           	callstack 0
  2272   00152C                     ___aomod:
  2273                           	callstack 21
  2274   00152C  0E00               	movlw	0
  2275   00152E  6E19               	movwf	___aomod@sign^0,c
  2276   001530  BE0F               	btfsc	(___aomod@dividend+7)^0,7,c
  2277   001532  EF9F  F00A         	goto	u1680
  2278   001536  EF9D  F00A         	goto	u1681
  2279   00153A                     u1681:
  2280   00153A  EFB1  F00A         	goto	l3142
  2281   00153E                     u1680:
  2282   00153E  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2283   001540  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2284   001542  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2285   001544  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2286   001546  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2287   001548  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2288   00154A  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2289   00154C  6C08               	negf	___aomod@dividend^0,c
  2290   00154E  0E00               	movlw	0
  2291   001550  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2292   001552  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2293   001554  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2294   001556  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2295   001558  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2296   00155A  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2297   00155C  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2298   00155E  0E01               	movlw	1
  2299   001560  6E19               	movwf	___aomod@sign^0,c
  2300   001562                     l3142:
  2301   001562  BE17               	btfsc	(___aomod@divisor+7)^0,7,c
  2302   001564  EFB8  F00A         	goto	u1690
  2303   001568  EFB6  F00A         	goto	u1691
  2304   00156C                     u1691:
  2305   00156C  EFC8  F00A         	goto	l3146
  2306   001570                     u1690:
  2307   001570  1E17               	comf	(___aomod@divisor+7)^0,f,c
  2308   001572  1E16               	comf	(___aomod@divisor+6)^0,f,c
  2309   001574  1E15               	comf	(___aomod@divisor+5)^0,f,c
  2310   001576  1E14               	comf	(___aomod@divisor+4)^0,f,c
  2311   001578  1E13               	comf	(___aomod@divisor+3)^0,f,c
  2312   00157A  1E12               	comf	(___aomod@divisor+2)^0,f,c
  2313   00157C  1E11               	comf	(___aomod@divisor+1)^0,f,c
  2314   00157E  6C10               	negf	___aomod@divisor^0,c
  2315   001580  0E00               	movlw	0
  2316   001582  2211               	addwfc	(___aomod@divisor+1)^0,f,c
  2317   001584  2212               	addwfc	(___aomod@divisor+2)^0,f,c
  2318   001586  2213               	addwfc	(___aomod@divisor+3)^0,f,c
  2319   001588  2214               	addwfc	(___aomod@divisor+4)^0,f,c
  2320   00158A  2215               	addwfc	(___aomod@divisor+5)^0,f,c
  2321   00158C  2216               	addwfc	(___aomod@divisor+6)^0,f,c
  2322   00158E  2217               	addwfc	(___aomod@divisor+7)^0,f,c
  2323   001590                     l3146:
  2324   001590  5010               	movf	___aomod@divisor^0,w,c
  2325   001592  1011               	iorwf	(___aomod@divisor+1)^0,w,c
  2326   001594  1012               	iorwf	(___aomod@divisor+2)^0,w,c
  2327   001596  1013               	iorwf	(___aomod@divisor+3)^0,w,c
  2328   001598  1014               	iorwf	(___aomod@divisor+4)^0,w,c
  2329   00159A  1015               	iorwf	(___aomod@divisor+5)^0,w,c
  2330   00159C  1016               	iorwf	(___aomod@divisor+6)^0,w,c
  2331   00159E  1017               	iorwf	(___aomod@divisor+7)^0,w,c
  2332   0015A0  B4D8               	btfsc	status,2,c
  2333   0015A2  EFD5  F00A         	goto	u1701
  2334   0015A6  EFD7  F00A         	goto	u1700
  2335   0015AA                     u1701:
  2336   0015AA  EF1F  F00B         	goto	l3162
  2337   0015AE                     u1700:
  2338   0015AE  0E01               	movlw	1
  2339   0015B0  6E18               	movwf	___aomod@counter^0,c
  2340   0015B2  EFE5  F00A         	goto	l3152
  2341   0015B6                     l3150:
  2342   0015B6  90D8               	bcf	status,0,c
  2343   0015B8  3610               	rlcf	___aomod@divisor^0,f,c
  2344   0015BA  3611               	rlcf	(___aomod@divisor+1)^0,f,c
  2345   0015BC  3612               	rlcf	(___aomod@divisor+2)^0,f,c
  2346   0015BE  3613               	rlcf	(___aomod@divisor+3)^0,f,c
  2347   0015C0  3614               	rlcf	(___aomod@divisor+4)^0,f,c
  2348   0015C2  3615               	rlcf	(___aomod@divisor+5)^0,f,c
  2349   0015C4  3616               	rlcf	(___aomod@divisor+6)^0,f,c
  2350   0015C6  3617               	rlcf	(___aomod@divisor+7)^0,f,c
  2351   0015C8  2A18               	incf	___aomod@counter^0,f,c
  2352   0015CA                     l3152:
  2353   0015CA  AE17               	btfss	(___aomod@divisor+7)^0,7,c
  2354   0015CC  EFEA  F00A         	goto	u1711
  2355   0015D0  EFEC  F00A         	goto	u1710
  2356   0015D4                     u1711:
  2357   0015D4  EFDB  F00A         	goto	l3150
  2358   0015D8                     u1710:
  2359   0015D8                     l3154:
  2360   0015D8  5010               	movf	___aomod@divisor^0,w,c
  2361   0015DA  5C08               	subwf	___aomod@dividend^0,w,c
  2362   0015DC  5011               	movf	(___aomod@divisor+1)^0,w,c
  2363   0015DE  5809               	subwfb	(___aomod@dividend+1)^0,w,c
  2364   0015E0  5012               	movf	(___aomod@divisor+2)^0,w,c
  2365   0015E2  580A               	subwfb	(___aomod@dividend+2)^0,w,c
  2366   0015E4  5013               	movf	(___aomod@divisor+3)^0,w,c
  2367   0015E6  580B               	subwfb	(___aomod@dividend+3)^0,w,c
  2368   0015E8  5014               	movf	(___aomod@divisor+4)^0,w,c
  2369   0015EA  580C               	subwfb	(___aomod@dividend+4)^0,w,c
  2370   0015EC  5015               	movf	(___aomod@divisor+5)^0,w,c
  2371   0015EE  580D               	subwfb	(___aomod@dividend+5)^0,w,c
  2372   0015F0  5016               	movf	(___aomod@divisor+6)^0,w,c
  2373   0015F2  580E               	subwfb	(___aomod@dividend+6)^0,w,c
  2374   0015F4  5017               	movf	(___aomod@divisor+7)^0,w,c
  2375   0015F6  580F               	subwfb	(___aomod@dividend+7)^0,w,c
  2376   0015F8  A0D8               	btfss	status,0,c
  2377   0015FA  EF01  F00B         	goto	u1721
  2378   0015FE  EF03  F00B         	goto	u1720
  2379   001602                     u1721:
  2380   001602  EF13  F00B         	goto	l3158
  2381   001606                     u1720:
  2382   001606  5010               	movf	___aomod@divisor^0,w,c
  2383   001608  5E08               	subwf	___aomod@dividend^0,f,c
  2384   00160A  5011               	movf	(___aomod@divisor+1)^0,w,c
  2385   00160C  5A09               	subwfb	(___aomod@dividend+1)^0,f,c
  2386   00160E  5012               	movf	(___aomod@divisor+2)^0,w,c
  2387   001610  5A0A               	subwfb	(___aomod@dividend+2)^0,f,c
  2388   001612  5013               	movf	(___aomod@divisor+3)^0,w,c
  2389   001614  5A0B               	subwfb	(___aomod@dividend+3)^0,f,c
  2390   001616  5014               	movf	(___aomod@divisor+4)^0,w,c
  2391   001618  5A0C               	subwfb	(___aomod@dividend+4)^0,f,c
  2392   00161A  5015               	movf	(___aomod@divisor+5)^0,w,c
  2393   00161C  5A0D               	subwfb	(___aomod@dividend+5)^0,f,c
  2394   00161E  5016               	movf	(___aomod@divisor+6)^0,w,c
  2395   001620  5A0E               	subwfb	(___aomod@dividend+6)^0,f,c
  2396   001622  5017               	movf	(___aomod@divisor+7)^0,w,c
  2397   001624  5A0F               	subwfb	(___aomod@dividend+7)^0,f,c
  2398   001626                     l3158:
  2399   001626  90D8               	bcf	status,0,c
  2400   001628  3217               	rrcf	(___aomod@divisor+7)^0,f,c
  2401   00162A  3216               	rrcf	(___aomod@divisor+6)^0,f,c
  2402   00162C  3215               	rrcf	(___aomod@divisor+5)^0,f,c
  2403   00162E  3214               	rrcf	(___aomod@divisor+4)^0,f,c
  2404   001630  3213               	rrcf	(___aomod@divisor+3)^0,f,c
  2405   001632  3212               	rrcf	(___aomod@divisor+2)^0,f,c
  2406   001634  3211               	rrcf	(___aomod@divisor+1)^0,f,c
  2407   001636  3210               	rrcf	___aomod@divisor^0,f,c
  2408   001638  2E18               	decfsz	___aomod@counter^0,f,c
  2409   00163A  EFEC  F00A         	goto	l3154
  2410   00163E                     l3162:
  2411   00163E  5019               	movf	___aomod@sign^0,w,c
  2412   001640  B4D8               	btfsc	status,2,c
  2413   001642  EF25  F00B         	goto	u1731
  2414   001646  EF27  F00B         	goto	u1730
  2415   00164A                     u1731:
  2416   00164A  EF37  F00B         	goto	l3166
  2417   00164E                     u1730:
  2418   00164E  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2419   001650  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2420   001652  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2421   001654  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2422   001656  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2423   001658  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2424   00165A  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2425   00165C  6C08               	negf	___aomod@dividend^0,c
  2426   00165E  0E00               	movlw	0
  2427   001660  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2428   001662  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2429   001664  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2430   001666  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2431   001668  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2432   00166A  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2433   00166C  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2434   00166E                     l3166:
  2435   00166E  C008  F008         	movff	___aomod@dividend,?___aomod
  2436   001672  C009  F009         	movff	___aomod@dividend+1,?___aomod+1
  2437   001676  C00A  F00A         	movff	___aomod@dividend+2,?___aomod+2
  2438   00167A  C00B  F00B         	movff	___aomod@dividend+3,?___aomod+3
  2439   00167E  C00C  F00C         	movff	___aomod@dividend+4,?___aomod+4
  2440   001682  C00D  F00D         	movff	___aomod@dividend+5,?___aomod+5
  2441   001686  C00E  F00E         	movff	___aomod@dividend+6,?___aomod+6
  2442   00168A  C00F  F00F         	movff	___aomod@dividend+7,?___aomod+7
  2443   00168E  0012               	return		;funcret
  2444   001690                     __end_of___aomod:
  2445                           	callstack 0
  2446                           
  2447 ;; *************** function ___aodiv *****************
  2448 ;; Defined at:
  2449 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  dividend        8    7[COMRAM] long long 
  2452 ;;  divisor         8   15[COMRAM] long long 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  quotient        8   25[COMRAM] long long 
  2455 ;;  sign            1   24[COMRAM] unsigned char 
  2456 ;;  counter         1   23[COMRAM] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  8    7[COMRAM] long long 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2466 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2467 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;Total ram usage:       26 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 5
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_dtoa
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text11
  2481   001238                     __ptext11:
  2482                           	callstack 0
  2483   001238                     ___aodiv:
  2484                           	callstack 21
  2485   001238  0E00               	movlw	0
  2486   00123A  6E19               	movwf	___aodiv@sign^0,c
  2487   00123C  BE17               	btfsc	(___aodiv@divisor+7)^0,7,c
  2488   00123E  EF25  F009         	goto	u1610
  2489   001242  EF23  F009         	goto	u1611
  2490   001246                     u1611:
  2491   001246  EF37  F009         	goto	l3098
  2492   00124A                     u1610:
  2493   00124A  1E17               	comf	(___aodiv@divisor+7)^0,f,c
  2494   00124C  1E16               	comf	(___aodiv@divisor+6)^0,f,c
  2495   00124E  1E15               	comf	(___aodiv@divisor+5)^0,f,c
  2496   001250  1E14               	comf	(___aodiv@divisor+4)^0,f,c
  2497   001252  1E13               	comf	(___aodiv@divisor+3)^0,f,c
  2498   001254  1E12               	comf	(___aodiv@divisor+2)^0,f,c
  2499   001256  1E11               	comf	(___aodiv@divisor+1)^0,f,c
  2500   001258  6C10               	negf	___aodiv@divisor^0,c
  2501   00125A  0E00               	movlw	0
  2502   00125C  2211               	addwfc	(___aodiv@divisor+1)^0,f,c
  2503   00125E  2212               	addwfc	(___aodiv@divisor+2)^0,f,c
  2504   001260  2213               	addwfc	(___aodiv@divisor+3)^0,f,c
  2505   001262  2214               	addwfc	(___aodiv@divisor+4)^0,f,c
  2506   001264  2215               	addwfc	(___aodiv@divisor+5)^0,f,c
  2507   001266  2216               	addwfc	(___aodiv@divisor+6)^0,f,c
  2508   001268  2217               	addwfc	(___aodiv@divisor+7)^0,f,c
  2509   00126A  0E01               	movlw	1
  2510   00126C  6E19               	movwf	___aodiv@sign^0,c
  2511   00126E                     l3098:
  2512   00126E  BE0F               	btfsc	(___aodiv@dividend+7)^0,7,c
  2513   001270  EF3E  F009         	goto	u1620
  2514   001274  EF3C  F009         	goto	u1621
  2515   001278                     u1621:
  2516   001278  EF50  F009         	goto	l3104
  2517   00127C                     u1620:
  2518   00127C  1E0F               	comf	(___aodiv@dividend+7)^0,f,c
  2519   00127E  1E0E               	comf	(___aodiv@dividend+6)^0,f,c
  2520   001280  1E0D               	comf	(___aodiv@dividend+5)^0,f,c
  2521   001282  1E0C               	comf	(___aodiv@dividend+4)^0,f,c
  2522   001284  1E0B               	comf	(___aodiv@dividend+3)^0,f,c
  2523   001286  1E0A               	comf	(___aodiv@dividend+2)^0,f,c
  2524   001288  1E09               	comf	(___aodiv@dividend+1)^0,f,c
  2525   00128A  6C08               	negf	___aodiv@dividend^0,c
  2526   00128C  0E00               	movlw	0
  2527   00128E  2209               	addwfc	(___aodiv@dividend+1)^0,f,c
  2528   001290  220A               	addwfc	(___aodiv@dividend+2)^0,f,c
  2529   001292  220B               	addwfc	(___aodiv@dividend+3)^0,f,c
  2530   001294  220C               	addwfc	(___aodiv@dividend+4)^0,f,c
  2531   001296  220D               	addwfc	(___aodiv@dividend+5)^0,f,c
  2532   001298  220E               	addwfc	(___aodiv@dividend+6)^0,f,c
  2533   00129A  220F               	addwfc	(___aodiv@dividend+7)^0,f,c
  2534   00129C  0E01               	movlw	1
  2535   00129E  1A19               	xorwf	___aodiv@sign^0,f,c
  2536   0012A0                     l3104:
  2537   0012A0  EE20  F01A         	lfsr	2,___aodiv@quotient
  2538   0012A4  0E07               	movlw	7
  2539   0012A6                     u1631:
  2540   0012A6  6ADE               	clrf	postinc2,c
  2541   0012A8  06E8               	decf	wreg,f,c
  2542   0012AA  E2FD               	bc	u1631
  2543   0012AC  5010               	movf	___aodiv@divisor^0,w,c
  2544   0012AE  1011               	iorwf	(___aodiv@divisor+1)^0,w,c
  2545   0012B0  1012               	iorwf	(___aodiv@divisor+2)^0,w,c
  2546   0012B2  1013               	iorwf	(___aodiv@divisor+3)^0,w,c
  2547   0012B4  1014               	iorwf	(___aodiv@divisor+4)^0,w,c
  2548   0012B6  1015               	iorwf	(___aodiv@divisor+5)^0,w,c
  2549   0012B8  1016               	iorwf	(___aodiv@divisor+6)^0,w,c
  2550   0012BA  1017               	iorwf	(___aodiv@divisor+7)^0,w,c
  2551   0012BC  B4D8               	btfsc	status,2,c
  2552   0012BE  EF63  F009         	goto	u1641
  2553   0012C2  EF65  F009         	goto	u1640
  2554   0012C6                     u1641:
  2555   0012C6  EFB7  F009         	goto	l3126
  2556   0012CA                     u1640:
  2557   0012CA  0E01               	movlw	1
  2558   0012CC  6E18               	movwf	___aodiv@counter^0,c
  2559   0012CE  EF73  F009         	goto	l3112
  2560   0012D2                     l3110:
  2561   0012D2  90D8               	bcf	status,0,c
  2562   0012D4  3610               	rlcf	___aodiv@divisor^0,f,c
  2563   0012D6  3611               	rlcf	(___aodiv@divisor+1)^0,f,c
  2564   0012D8  3612               	rlcf	(___aodiv@divisor+2)^0,f,c
  2565   0012DA  3613               	rlcf	(___aodiv@divisor+3)^0,f,c
  2566   0012DC  3614               	rlcf	(___aodiv@divisor+4)^0,f,c
  2567   0012DE  3615               	rlcf	(___aodiv@divisor+5)^0,f,c
  2568   0012E0  3616               	rlcf	(___aodiv@divisor+6)^0,f,c
  2569   0012E2  3617               	rlcf	(___aodiv@divisor+7)^0,f,c
  2570   0012E4  2A18               	incf	___aodiv@counter^0,f,c
  2571   0012E6                     l3112:
  2572   0012E6  AE17               	btfss	(___aodiv@divisor+7)^0,7,c
  2573   0012E8  EF78  F009         	goto	u1651
  2574   0012EC  EF7A  F009         	goto	u1650
  2575   0012F0                     u1651:
  2576   0012F0  EF69  F009         	goto	l3110
  2577   0012F4                     u1650:
  2578   0012F4                     l3114:
  2579   0012F4  90D8               	bcf	status,0,c
  2580   0012F6  361A               	rlcf	___aodiv@quotient^0,f,c
  2581   0012F8  361B               	rlcf	(___aodiv@quotient+1)^0,f,c
  2582   0012FA  361C               	rlcf	(___aodiv@quotient+2)^0,f,c
  2583   0012FC  361D               	rlcf	(___aodiv@quotient+3)^0,f,c
  2584   0012FE  361E               	rlcf	(___aodiv@quotient+4)^0,f,c
  2585   001300  361F               	rlcf	(___aodiv@quotient+5)^0,f,c
  2586   001302  3620               	rlcf	(___aodiv@quotient+6)^0,f,c
  2587   001304  3621               	rlcf	(___aodiv@quotient+7)^0,f,c
  2588   001306  5010               	movf	___aodiv@divisor^0,w,c
  2589   001308  5C08               	subwf	___aodiv@dividend^0,w,c
  2590   00130A  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2591   00130C  5809               	subwfb	(___aodiv@dividend+1)^0,w,c
  2592   00130E  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2593   001310  580A               	subwfb	(___aodiv@dividend+2)^0,w,c
  2594   001312  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2595   001314  580B               	subwfb	(___aodiv@dividend+3)^0,w,c
  2596   001316  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2597   001318  580C               	subwfb	(___aodiv@dividend+4)^0,w,c
  2598   00131A  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2599   00131C  580D               	subwfb	(___aodiv@dividend+5)^0,w,c
  2600   00131E  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2601   001320  580E               	subwfb	(___aodiv@dividend+6)^0,w,c
  2602   001322  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2603   001324  580F               	subwfb	(___aodiv@dividend+7)^0,w,c
  2604   001326  A0D8               	btfss	status,0,c
  2605   001328  EF98  F009         	goto	u1661
  2606   00132C  EF9A  F009         	goto	u1660
  2607   001330                     u1661:
  2608   001330  EFAB  F009         	goto	l3122
  2609   001334                     u1660:
  2610   001334  5010               	movf	___aodiv@divisor^0,w,c
  2611   001336  5E08               	subwf	___aodiv@dividend^0,f,c
  2612   001338  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2613   00133A  5A09               	subwfb	(___aodiv@dividend+1)^0,f,c
  2614   00133C  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2615   00133E  5A0A               	subwfb	(___aodiv@dividend+2)^0,f,c
  2616   001340  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2617   001342  5A0B               	subwfb	(___aodiv@dividend+3)^0,f,c
  2618   001344  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2619   001346  5A0C               	subwfb	(___aodiv@dividend+4)^0,f,c
  2620   001348  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2621   00134A  5A0D               	subwfb	(___aodiv@dividend+5)^0,f,c
  2622   00134C  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2623   00134E  5A0E               	subwfb	(___aodiv@dividend+6)^0,f,c
  2624   001350  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2625   001352  5A0F               	subwfb	(___aodiv@dividend+7)^0,f,c
  2626   001354  801A               	bsf	___aodiv@quotient^0,0,c
  2627   001356                     l3122:
  2628   001356  90D8               	bcf	status,0,c
  2629   001358  3217               	rrcf	(___aodiv@divisor+7)^0,f,c
  2630   00135A  3216               	rrcf	(___aodiv@divisor+6)^0,f,c
  2631   00135C  3215               	rrcf	(___aodiv@divisor+5)^0,f,c
  2632   00135E  3214               	rrcf	(___aodiv@divisor+4)^0,f,c
  2633   001360  3213               	rrcf	(___aodiv@divisor+3)^0,f,c
  2634   001362  3212               	rrcf	(___aodiv@divisor+2)^0,f,c
  2635   001364  3211               	rrcf	(___aodiv@divisor+1)^0,f,c
  2636   001366  3210               	rrcf	___aodiv@divisor^0,f,c
  2637   001368  2E18               	decfsz	___aodiv@counter^0,f,c
  2638   00136A  EF7A  F009         	goto	l3114
  2639   00136E                     l3126:
  2640   00136E  5019               	movf	___aodiv@sign^0,w,c
  2641   001370  B4D8               	btfsc	status,2,c
  2642   001372  EFBD  F009         	goto	u1671
  2643   001376  EFBF  F009         	goto	u1670
  2644   00137A                     u1671:
  2645   00137A  EFCF  F009         	goto	l3130
  2646   00137E                     u1670:
  2647   00137E  1E21               	comf	(___aodiv@quotient+7)^0,f,c
  2648   001380  1E20               	comf	(___aodiv@quotient+6)^0,f,c
  2649   001382  1E1F               	comf	(___aodiv@quotient+5)^0,f,c
  2650   001384  1E1E               	comf	(___aodiv@quotient+4)^0,f,c
  2651   001386  1E1D               	comf	(___aodiv@quotient+3)^0,f,c
  2652   001388  1E1C               	comf	(___aodiv@quotient+2)^0,f,c
  2653   00138A  1E1B               	comf	(___aodiv@quotient+1)^0,f,c
  2654   00138C  6C1A               	negf	___aodiv@quotient^0,c
  2655   00138E  0E00               	movlw	0
  2656   001390  221B               	addwfc	(___aodiv@quotient+1)^0,f,c
  2657   001392  221C               	addwfc	(___aodiv@quotient+2)^0,f,c
  2658   001394  221D               	addwfc	(___aodiv@quotient+3)^0,f,c
  2659   001396  221E               	addwfc	(___aodiv@quotient+4)^0,f,c
  2660   001398  221F               	addwfc	(___aodiv@quotient+5)^0,f,c
  2661   00139A  2220               	addwfc	(___aodiv@quotient+6)^0,f,c
  2662   00139C  2221               	addwfc	(___aodiv@quotient+7)^0,f,c
  2663   00139E                     l3130:
  2664   00139E  C01A  F008         	movff	___aodiv@quotient,?___aodiv
  2665   0013A2  C01B  F009         	movff	___aodiv@quotient+1,?___aodiv+1
  2666   0013A6  C01C  F00A         	movff	___aodiv@quotient+2,?___aodiv+2
  2667   0013AA  C01D  F00B         	movff	___aodiv@quotient+3,?___aodiv+3
  2668   0013AE  C01E  F00C         	movff	___aodiv@quotient+4,?___aodiv+4
  2669   0013B2  C01F  F00D         	movff	___aodiv@quotient+5,?___aodiv+5
  2670   0013B6  C020  F00E         	movff	___aodiv@quotient+6,?___aodiv+6
  2671   0013BA  C021  F00F         	movff	___aodiv@quotient+7,?___aodiv+7
  2672   0013BE  0012               	return		;funcret
  2673   0013C0                     __end_of___aodiv:
  2674                           	callstack 0
  2675                           
  2676 ;; *************** function _setMotorPWM *****************
  2677 ;; Defined at:
  2678 ;;		line 61 in file "dc_motor.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  m               2   20[COMRAM] PTR struct DC_motor
  2681 ;;		 -> main@motorR(9), main@motorL(9), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  negDuty         1   25[COMRAM] unsigned char 
  2684 ;;  posDuty         1   24[COMRAM] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2698 ;;Total ram usage:        6 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 6
  2701 ;; This function calls:
  2702 ;;		___lwdiv
  2703 ;;		___wmul
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;;		_stop
  2707 ;;		_turnLeft45
  2708 ;;		_turnRight45
  2709 ;;		_fullSpeedAhead
  2710 ;;		_reverseFullSpeed
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text12
  2715   0013C0                     __ptext12:
  2716                           	callstack 0
  2717   0013C0                     _setMotorPWM:
  2718                           	callstack 24
  2719   0013C0                     
  2720                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2721   0013C0  EE20 F002          	lfsr	2,2
  2722   0013C4  5015               	movf	setMotorPWM@m^0,w,c
  2723   0013C6  26D9               	addwf	fsr2l,f,c
  2724   0013C8  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2725   0013CA  22DA               	addwfc	fsr2h,f,c
  2726   0013CC  50DF               	movf	indf2,w,c
  2727   0013CE  B4D8               	btfsc	status,2,c
  2728   0013D0  EFEC  F009         	goto	u1281
  2729   0013D4  EFEE  F009         	goto	u1280
  2730   0013D8                     u1281:
  2731   0013D8  EF22  F00A         	goto	l2576
  2732   0013DC                     u1280:
  2733   0013DC                     
  2734                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2735   0013DC  C015  FFD9         	movff	setMotorPWM@m,fsr2l
  2736   0013E0  C016  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2737   0013E4  50DF               	movf	indf2,w,c
  2738   0013E6  6E17               	movwf	??_setMotorPWM^0,c
  2739   0013E8  5017               	movf	??_setMotorPWM^0,w,c
  2740   0013EA  6E08               	movwf	___wmul@multiplier^0,c
  2741   0013EC  6A09               	clrf	(___wmul@multiplier+1)^0,c
  2742   0013EE  EE20 F003          	lfsr	2,3
  2743   0013F2  5015               	movf	setMotorPWM@m^0,w,c
  2744   0013F4  26D9               	addwf	fsr2l,f,c
  2745   0013F6  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2746   0013F8  22DA               	addwfc	fsr2h,f,c
  2747   0013FA  CFDE F00A          	movff	postinc2,___wmul@multiplicand
  2748   0013FE  CFDD F00B          	movff	postdec2,___wmul@multiplicand+1
  2749   001402  EC8A  F00F         	call	___wmul	;wreg free
  2750   001406  C008  F00E         	movff	?___wmul,___lwdiv@dividend
  2751   00140A  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
  2752   00140E  0E00               	movlw	0
  2753   001410  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  2754   001412  0E64               	movlw	100
  2755   001414  6E10               	movwf	___lwdiv@divisor^0,c
  2756   001416  ECDD  F00C         	call	___lwdiv	;wreg free
  2757   00141A  EE20 F003          	lfsr	2,3
  2758   00141E  5015               	movf	setMotorPWM@m^0,w,c
  2759   001420  26D9               	addwf	fsr2l,f,c
  2760   001422  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2761   001424  22DA               	addwfc	fsr2h,f,c
  2762   001426  50DF               	movf	indf2,w,c
  2763   001428  6E18               	movwf	(??_setMotorPWM+1)^0,c
  2764   00142A  500E               	movf	?___lwdiv^0,w,c
  2765   00142C  5C18               	subwf	(??_setMotorPWM+1)^0,w,c
  2766   00142E  6E19               	movwf	setMotorPWM@posDuty^0,c
  2767   001430                     
  2768                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2769   001430  EE20 F003          	lfsr	2,3
  2770   001434  5015               	movf	setMotorPWM@m^0,w,c
  2771   001436  26D9               	addwf	fsr2l,f,c
  2772   001438  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2773   00143A  22DA               	addwfc	fsr2h,f,c
  2774   00143C  50DF               	movf	indf2,w,c
  2775   00143E  6E1A               	movwf	setMotorPWM@negDuty^0,c
  2776                           
  2777                           ;dc_motor.c: 68:     }
  2778   001440  EF45  F00A         	goto	l2580
  2779   001444                     l2576:
  2780                           
  2781                           ;dc_motor.c: 70:         posDuty=0;
  2782   001444  0E00               	movlw	0
  2783   001446  6E19               	movwf	setMotorPWM@posDuty^0,c
  2784   001448                     
  2785                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2786   001448  C015  FFD9         	movff	setMotorPWM@m,fsr2l
  2787   00144C  C016  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2788   001450  50DF               	movf	indf2,w,c
  2789   001452  6E17               	movwf	??_setMotorPWM^0,c
  2790   001454  5017               	movf	??_setMotorPWM^0,w,c
  2791   001456  6E08               	movwf	___wmul@multiplier^0,c
  2792   001458  6A09               	clrf	(___wmul@multiplier+1)^0,c
  2793   00145A  EE20 F003          	lfsr	2,3
  2794   00145E  5015               	movf	setMotorPWM@m^0,w,c
  2795   001460  26D9               	addwf	fsr2l,f,c
  2796   001462  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2797   001464  22DA               	addwfc	fsr2h,f,c
  2798   001466  CFDE F00A          	movff	postinc2,___wmul@multiplicand
  2799   00146A  CFDD F00B          	movff	postdec2,___wmul@multiplicand+1
  2800   00146E  EC8A  F00F         	call	___wmul	;wreg free
  2801   001472  C008  F00E         	movff	?___wmul,___lwdiv@dividend
  2802   001476  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
  2803   00147A  0E00               	movlw	0
  2804   00147C  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  2805   00147E  0E64               	movlw	100
  2806   001480  6E10               	movwf	___lwdiv@divisor^0,c
  2807   001482  ECDD  F00C         	call	___lwdiv	;wreg free
  2808   001486  500E               	movf	?___lwdiv^0,w,c
  2809   001488  6E1A               	movwf	setMotorPWM@negDuty^0,c
  2810   00148A                     l2580:
  2811                           
  2812                           ;dc_motor.c: 74:     if (m->direction) {
  2813   00148A  EE20 F001          	lfsr	2,1
  2814   00148E  5015               	movf	setMotorPWM@m^0,w,c
  2815   001490  26D9               	addwf	fsr2l,f,c
  2816   001492  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2817   001494  22DA               	addwfc	fsr2h,f,c
  2818   001496  50DF               	movf	indf2,w,c
  2819   001498  B4D8               	btfsc	status,2,c
  2820   00149A  EF51  F00A         	goto	u1291
  2821   00149E  EF53  F00A         	goto	u1290
  2822   0014A2                     u1291:
  2823   0014A2  EF75  F00A         	goto	l2584
  2824   0014A6                     u1290:
  2825   0014A6                     
  2826                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2827   0014A6  EE20 F005          	lfsr	2,5
  2828   0014AA  5015               	movf	setMotorPWM@m^0,w,c
  2829   0014AC  26D9               	addwf	fsr2l,f,c
  2830   0014AE  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2831   0014B0  22DA               	addwfc	fsr2h,f,c
  2832   0014B2  CFDE F017          	movff	postinc2,??_setMotorPWM
  2833   0014B6  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  2834   0014BA  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  2835   0014BE  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2836   0014C2  C019  FFDF         	movff	setMotorPWM@posDuty,indf2
  2837                           
  2838                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2839   0014C6  EE20 F007          	lfsr	2,7
  2840   0014CA  5015               	movf	setMotorPWM@m^0,w,c
  2841   0014CC  26D9               	addwf	fsr2l,f,c
  2842   0014CE  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2843   0014D0  22DA               	addwfc	fsr2h,f,c
  2844   0014D2  CFDE F017          	movff	postinc2,??_setMotorPWM
  2845   0014D6  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  2846   0014DA  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  2847   0014DE  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2848   0014E2  C01A  FFDF         	movff	setMotorPWM@negDuty,indf2
  2849                           
  2850                           ;dc_motor.c: 77:     } else {
  2851   0014E6  EF95  F00A         	goto	l86
  2852   0014EA                     l2584:
  2853                           
  2854                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2855   0014EA  EE20 F005          	lfsr	2,5
  2856   0014EE  5015               	movf	setMotorPWM@m^0,w,c
  2857   0014F0  26D9               	addwf	fsr2l,f,c
  2858   0014F2  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2859   0014F4  22DA               	addwfc	fsr2h,f,c
  2860   0014F6  CFDE F017          	movff	postinc2,??_setMotorPWM
  2861   0014FA  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  2862   0014FE  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  2863   001502  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2864   001506  C01A  FFDF         	movff	setMotorPWM@negDuty,indf2
  2865                           
  2866                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2867   00150A  EE20 F007          	lfsr	2,7
  2868   00150E  5015               	movf	setMotorPWM@m^0,w,c
  2869   001510  26D9               	addwf	fsr2l,f,c
  2870   001512  5016               	movf	(setMotorPWM@m+1)^0,w,c
  2871   001514  22DA               	addwfc	fsr2h,f,c
  2872   001516  CFDE F017          	movff	postinc2,??_setMotorPWM
  2873   00151A  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  2874   00151E  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  2875   001522  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2876   001526  C019  FFDF         	movff	setMotorPWM@posDuty,indf2
  2877   00152A                     l86:
  2878   00152A  0012               	return		;funcret
  2879   00152C                     __end_of_setMotorPWM:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function ___wmul *****************
  2883 ;; Defined at:
  2884 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  multiplier      2    7[COMRAM] unsigned int 
  2887 ;;  multiplicand    2    9[COMRAM] unsigned int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  product         2   11[COMRAM] unsigned int 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  2    7[COMRAM] unsigned int 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, prodl, prodh
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;Total ram usage:        6 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 5
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_setMotorPWM
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text13
  2914   001F14                     __ptext13:
  2915                           	callstack 0
  2916   001F14                     ___wmul:
  2917                           	callstack 24
  2918   001F14  5008               	movf	___wmul@multiplier^0,w,c
  2919   001F16  020A               	mulwf	___wmul@multiplicand^0,c
  2920   001F18  CFF3 F00C          	movff	prodl,___wmul@product
  2921   001F1C  CFF4 F00D          	movff	prodh,___wmul@product+1
  2922   001F20  5008               	movf	___wmul@multiplier^0,w,c
  2923   001F22  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  2924   001F24  50F3               	movf	243,w,c
  2925   001F26  260D               	addwf	(___wmul@product+1)^0,f,c
  2926   001F28  5009               	movf	(___wmul@multiplier+1)^0,w,c
  2927   001F2A  020A               	mulwf	___wmul@multiplicand^0,c
  2928   001F2C  50F3               	movf	243,w,c
  2929   001F2E  260D               	addwf	(___wmul@product+1)^0,f,c
  2930   001F30  C00C  F008         	movff	___wmul@product,?___wmul
  2931   001F34  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  2932   001F38  0012               	return		;funcret
  2933   001F3A                     __end_of___wmul:
  2934                           	callstack 0
  2935                           
  2936 ;; *************** function ___lwdiv *****************
  2937 ;; Defined at:
  2938 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  dividend        2   13[COMRAM] unsigned int 
  2941 ;;  divisor         2   15[COMRAM] unsigned int 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  quotient        2   17[COMRAM] unsigned int 
  2944 ;;  counter         1   19[COMRAM] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2   13[COMRAM] unsigned int 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2957 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2958 ;;Total ram usage:        7 bytes
  2959 ;; Hardware stack levels used: 1
  2960 ;; Hardware stack levels required when called: 5
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_setMotorPWM
  2965 ;;		_collect_avg_readings
  2966 ;;		_normalise_readings
  2967 ;;		_make_master_closeness
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text14
  2972   0019BA                     __ptext14:
  2973                           	callstack 0
  2974   0019BA                     ___lwdiv:
  2975                           	callstack 24
  2976   0019BA  0E00               	movlw	0
  2977   0019BC  6E13               	movwf	(___lwdiv@quotient+1)^0,c
  2978   0019BE  0E00               	movlw	0
  2979   0019C0  6E12               	movwf	___lwdiv@quotient^0,c
  2980   0019C2  5010               	movf	___lwdiv@divisor^0,w,c
  2981   0019C4  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2982   0019C6  B4D8               	btfsc	status,2,c
  2983   0019C8  EFE8  F00C         	goto	u1241
  2984   0019CC  EFEA  F00C         	goto	u1240
  2985   0019D0                     u1241:
  2986   0019D0  EF12  F00D         	goto	l991
  2987   0019D4                     u1240:
  2988   0019D4  0E01               	movlw	1
  2989   0019D6  6E14               	movwf	___lwdiv@counter^0,c
  2990   0019D8  EFF2  F00C         	goto	l2478
  2991   0019DC                     l2476:
  2992   0019DC  90D8               	bcf	status,0,c
  2993   0019DE  3610               	rlcf	___lwdiv@divisor^0,f,c
  2994   0019E0  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2995   0019E2  2A14               	incf	___lwdiv@counter^0,f,c
  2996   0019E4                     l2478:
  2997   0019E4  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
  2998   0019E6  EFF7  F00C         	goto	u1251
  2999   0019EA  EFF9  F00C         	goto	u1250
  3000   0019EE                     u1251:
  3001   0019EE  EFEE  F00C         	goto	l2476
  3002   0019F2                     u1250:
  3003   0019F2                     l2480:
  3004   0019F2  90D8               	bcf	status,0,c
  3005   0019F4  3612               	rlcf	___lwdiv@quotient^0,f,c
  3006   0019F6  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3007   0019F8  5010               	movf	___lwdiv@divisor^0,w,c
  3008   0019FA  5C0E               	subwf	___lwdiv@dividend^0,w,c
  3009   0019FC  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  3010   0019FE  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3011   001A00  A0D8               	btfss	status,0,c
  3012   001A02  EF05  F00D         	goto	u1261
  3013   001A06  EF07  F00D         	goto	u1260
  3014   001A0A                     u1261:
  3015   001A0A  EF0C  F00D         	goto	l2488
  3016   001A0E                     u1260:
  3017   001A0E  5010               	movf	___lwdiv@divisor^0,w,c
  3018   001A10  5E0E               	subwf	___lwdiv@dividend^0,f,c
  3019   001A12  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  3020   001A14  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3021   001A16  8012               	bsf	___lwdiv@quotient^0,0,c
  3022   001A18                     l2488:
  3023   001A18  90D8               	bcf	status,0,c
  3024   001A1A  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3025   001A1C  3210               	rrcf	___lwdiv@divisor^0,f,c
  3026   001A1E  2E14               	decfsz	___lwdiv@counter^0,f,c
  3027   001A20  EFF9  F00C         	goto	l2480
  3028   001A24                     l991:
  3029   001A24  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
  3030   001A28  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3031   001A2C  0012               	return		;funcret
  3032   001A2E                     __end_of___lwdiv:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function _sendStringSerial4 *****************
  3036 ;; Defined at:
  3037 ;;		line 39 in file "serial.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  string          2    8[COMRAM] PTR unsigned char 
  3040 ;;		 -> main@buf(20), 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3055 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3056 ;;Total ram usage:        2 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 6
  3059 ;; This function calls:
  3060 ;;		_sendCharSerial4
  3061 ;; This function is called by:
  3062 ;;		_main
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text15
  3067   001E6A                     __ptext15:
  3068                           	callstack 0
  3069   001E6A                     _sendStringSerial4:
  3070                           	callstack 24
  3071   001E6A                     
  3072                           ;serial.c: 40:  while(*string != 0) {
  3073   001E6A  EF40  F00F         	goto	l2706
  3074   001E6E                     l2702:
  3075                           
  3076                           ;serial.c: 41:         sendCharSerial4(*string++);
  3077   001E6E  C009  FFD9         	movff	sendStringSerial4@string,fsr2l
  3078   001E72  C00A  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3079   001E76  50DF               	movf	indf2,w,c
  3080   001E78  ECCE  F00F         	call	_sendCharSerial4
  3081   001E7C  4A09               	infsnz	sendStringSerial4@string^0,f,c
  3082   001E7E  2A0A               	incf	(sendStringSerial4@string+1)^0,f,c
  3083   001E80                     l2706:
  3084                           
  3085                           ;serial.c: 40:  while(*string != 0) {
  3086   001E80  C009  FFD9         	movff	sendStringSerial4@string,fsr2l
  3087   001E84  C00A  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3088   001E88  50DF               	movf	indf2,w,c
  3089   001E8A  A4D8               	btfss	status,2,c
  3090   001E8C  EF4A  F00F         	goto	u1351
  3091   001E90  EF4C  F00F         	goto	u1350
  3092   001E94                     u1351:
  3093   001E94  EF37  F00F         	goto	l2702
  3094   001E98                     u1350:
  3095   001E98  0012               	return		;funcret
  3096   001E9A                     __end_of_sendStringSerial4:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _sendCharSerial4 *****************
  3100 ;; Defined at:
  3101 ;;		line 32 in file "serial.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  charToSend      1    wreg     unsigned char 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  charToSend      1    7[COMRAM] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3119 ;;Total ram usage:        1 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 5
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_sendStringSerial4
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text16
  3130   001F9C                     __ptext16:
  3131                           	callstack 0
  3132   001F9C                     _sendCharSerial4:
  3133                           	callstack 24
  3134                           
  3135                           ;incstack = 0
  3136                           ;sendCharSerial4@charToSend stored from wreg
  3137   001F9C  6E08               	movwf	sendCharSerial4@charToSend^0,c
  3138   001F9E                     l384:
  3139   001F9E  010E               	movlb	14	; () banked
  3140   001FA0  A537               	btfss	55,2,b	;volatile
  3141   001FA2  EFD5  F00F         	goto	u1211
  3142   001FA6  EFD7  F00F         	goto	u1210
  3143   001FAA                     u1211:
  3144   001FAA  EFCF  F00F         	goto	l384
  3145   001FAE                     u1210:
  3146   001FAE                     
  3147                           ; BSR set to: 14
  3148                           ;serial.c: 34:     TX4REG = charToSend;
  3149   001FAE  C008  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3150   001FB2                     
  3151                           ; BSR set to: 14
  3152   001FB2  0012               	return		;funcret
  3153   001FB4                     __end_of_sendCharSerial4:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _initUSART4 *****************
  3157 ;; Defined at:
  3158 ;;		line 6 in file "serial.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 5
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_main
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text17
  3187   001F5C                     __ptext17:
  3188                           	callstack 0
  3189   001F5C                     _initUSART4:
  3190                           	callstack 25
  3191   001F5C                     
  3192                           ;serial.c: 10:     RC0PPS = 0x12;
  3193   001F5C  0E12               	movlw	18
  3194   001F5E  010E               	movlb	14	; () banked
  3195   001F60  6F62               	movwf	98,b	;volatile
  3196                           
  3197                           ;serial.c: 11:     RX4PPS = 0x11;
  3198   001F62  0E11               	movlw	17
  3199   001F64  6F15               	movwf	21,b	;volatile
  3200   001F66                     
  3201                           ; BSR set to: 14
  3202                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3203   001F66  8283               	bsf	131,1,c	;volatile
  3204   001F68                     
  3205                           ; BSR set to: 14
  3206                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3207   001F68  97E9               	bcf	233,3,b	;volatile
  3208   001F6A                     
  3209                           ; BSR set to: 14
  3210                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3211   001F6A  95E8               	bcf	232,2,b	;volatile
  3212                           
  3213                           ;serial.c: 17:     SP4BRGL = 51;
  3214   001F6C  0E33               	movlw	51
  3215   001F6E  6FE5               	movwf	229,b	;volatile
  3216                           
  3217                           ;serial.c: 18:     SP4BRGH = 0;
  3218   001F70  0E00               	movlw	0
  3219   001F72  6FE6               	movwf	230,b	;volatile
  3220   001F74                     
  3221                           ; BSR set to: 14
  3222                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3223   001F74  89E7               	bsf	231,4,b	;volatile
  3224   001F76                     
  3225                           ; BSR set to: 14
  3226                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3227   001F76  8BE8               	bsf	232,5,b	;volatile
  3228   001F78                     
  3229                           ; BSR set to: 14
  3230                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3231   001F78  8FE7               	bsf	231,7,b	;volatile
  3232   001F7A                     
  3233                           ; BSR set to: 14
  3234   001F7A  0012               	return		;funcret
  3235   001F7C                     __end_of_initUSART4:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _initDCmotorsPWM *****************
  3239 ;; Defined at:
  3240 ;;		line 6 in file "dc_motor.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3258 ;;Total ram usage:        0 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 5
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_main
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text18
  3269   0018B8                     __ptext18:
  3270                           	callstack 0
  3271   0018B8                     _initDCmotorsPWM:
  3272                           	callstack 25
  3273   0018B8                     
  3274                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3275   0018B8  9485               	bcf	133,2,c	;volatile
  3276                           
  3277                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3278   0018BA  9885               	bcf	133,4,c	;volatile
  3279                           
  3280                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3281   0018BC  9E83               	bcf	131,7,c	;volatile
  3282                           
  3283                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3284   0018BE  9C87               	bcf	135,6,c	;volatile
  3285   0018C0                     
  3286                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3287   0018C0  0E05               	movlw	5
  3288   0018C2  010E               	movlb	14	; () banked
  3289   0018C4  6F74               	movwf	116,b	;volatile
  3290                           
  3291                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3292   0018C6  0E06               	movlw	6
  3293   0018C8  6F76               	movwf	118,b	;volatile
  3294                           
  3295                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3296   0018CA  0E07               	movlw	7
  3297   0018CC  6F69               	movwf	105,b	;volatile
  3298                           
  3299                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3300   0018CE  0E08               	movlw	8
  3301   0018D0  6F88               	movwf	136,b	;volatile
  3302                           
  3303                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3304   0018D2  50BD               	movf	189,w,c	;volatile
  3305   0018D4  0B8F               	andlw	-113
  3306   0018D6  0940               	iorlw	64
  3307   0018D8  6EBD               	movwf	189,c	;volatile
  3308                           
  3309                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3310   0018DA  0EE0               	movlw	-32
  3311   0018DC  16BE               	andwf	190,f,c	;volatile
  3312                           
  3313                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3314   0018DE  50BF               	movf	191,w,c	;volatile
  3315   0018E0  0BF0               	andlw	-16
  3316   0018E2  0901               	iorlw	1
  3317   0018E4  6EBF               	movwf	191,c	;volatile
  3318                           
  3319                           ;dc_motor.c: 26:     T2PR=99;
  3320   0018E6  0E63               	movlw	99
  3321   0018E8  6EBC               	movwf	188,c	;volatile
  3322   0018EA                     
  3323                           ; BSR set to: 14
  3324                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3325   0018EA  8EBD               	bsf	189,7,c	;volatile
  3326                           
  3327                           ;dc_motor.c: 31:     CCPR1H=0;
  3328   0018EC  0E00               	movlw	0
  3329   0018EE  6EAA               	movwf	170,c	;volatile
  3330                           
  3331                           ;dc_motor.c: 32:     CCPR2H=0;
  3332   0018F0  0E00               	movlw	0
  3333   0018F2  6EA6               	movwf	166,c	;volatile
  3334                           
  3335                           ;dc_motor.c: 33:     CCPR3H=0;
  3336   0018F4  0E00               	movlw	0
  3337   0018F6  010F               	movlb	15	; () banked
  3338   0018F8  6F25               	movwf	37,b	;volatile
  3339                           
  3340                           ;dc_motor.c: 34:     CCPR4H=0;
  3341   0018FA  0E00               	movlw	0
  3342   0018FC  6F21               	movwf	33,b	;volatile
  3343                           
  3344                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3345   0018FE  0EFC               	movlw	-4
  3346   001900  16AD               	andwf	173,f,c	;volatile
  3347                           
  3348                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3349   001902  0EF3               	movlw	-13
  3350   001904  16AD               	andwf	173,f,c	;volatile
  3351                           
  3352                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3353   001906  0ECF               	movlw	-49
  3354   001908  16AD               	andwf	173,f,c	;volatile
  3355                           
  3356                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3357   00190A  0E3F               	movlw	-193
  3358   00190C  16AD               	andwf	173,f,c	;volatile
  3359   00190E                     
  3360                           ; BSR set to: 15
  3361                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3362   00190E  88AB               	bsf	171,4,c	;volatile
  3363                           
  3364                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3365   001910  50AB               	movf	171,w,c	;volatile
  3366   001912  0BF0               	andlw	-16
  3367   001914  090C               	iorlw	12
  3368   001916  6EAB               	movwf	171,c	;volatile
  3369   001918                     
  3370                           ; BSR set to: 15
  3371                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3372   001918  8EAB               	bsf	171,7,c	;volatile
  3373   00191A                     
  3374                           ; BSR set to: 15
  3375                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3376   00191A  88A7               	bsf	167,4,c	;volatile
  3377                           
  3378                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3379   00191C  50A7               	movf	167,w,c	;volatile
  3380   00191E  0BF0               	andlw	-16
  3381   001920  090C               	iorlw	12
  3382   001922  6EA7               	movwf	167,c	;volatile
  3383   001924                     
  3384                           ; BSR set to: 15
  3385                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3386   001924  8EA7               	bsf	167,7,c	;volatile
  3387   001926                     
  3388                           ; BSR set to: 15
  3389                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3390   001926  8926               	bsf	38,4,b	;volatile
  3391                           
  3392                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3393   001928  5126               	movf	38,w,b	;volatile
  3394   00192A  0BF0               	andlw	-16
  3395   00192C  090C               	iorlw	12
  3396   00192E  6F26               	movwf	38,b	;volatile
  3397   001930                     
  3398                           ; BSR set to: 15
  3399                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3400   001930  8F26               	bsf	38,7,b	;volatile
  3401   001932                     
  3402                           ; BSR set to: 15
  3403                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3404   001932  8922               	bsf	34,4,b	;volatile
  3405                           
  3406                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3407   001934  5122               	movf	34,w,b	;volatile
  3408   001936  0BF0               	andlw	-16
  3409   001938  090C               	iorlw	12
  3410   00193A  6F22               	movwf	34,b	;volatile
  3411   00193C                     
  3412                           ; BSR set to: 15
  3413                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3414   00193C  8F22               	bsf	34,7,b	;volatile
  3415   00193E                     
  3416                           ; BSR set to: 15
  3417   00193E  0012               	return		;funcret
  3418   001940                     __end_of_initDCmotorsPWM:
  3419                           	callstack 0
  3420                           
  3421 ;; *************** function _color_read_Red *****************
  3422 ;; Defined at:
  3423 ;;		line 29 in file "color.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  tmp             2   16[COMRAM] unsigned int 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  2   11[COMRAM] unsigned int 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;Total ram usage:        7 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; Hardware stack levels required when called: 7
  3444 ;; This function calls:
  3445 ;;		_I2C_2_Master_Read
  3446 ;;		_I2C_2_Master_RepStart
  3447 ;;		_I2C_2_Master_Start
  3448 ;;		_I2C_2_Master_Stop
  3449 ;;		_I2C_2_Master_Write
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;;		_collect_avg_readings
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text19
  3457   001BF2                     __ptext19:
  3458                           	callstack 0
  3459   001BF2                     _color_read_Red:
  3460                           	callstack 23
  3461   001BF2                     
  3462                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  3463   001BF2  EC17  F010         	call	_I2C_2_Master_Start	;wreg free
  3464                           
  3465                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  3466   001BF6  0E52               	movlw	82
  3467   001BF8  EC01  F010         	call	_I2C_2_Master_Write
  3468                           
  3469                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  3470   001BFC  0EB6               	movlw	182
  3471   001BFE  EC01  F010         	call	_I2C_2_Master_Write
  3472                           
  3473                           ;color.c: 35:  I2C_2_Master_RepStart();
  3474   001C02  EC0D  F010         	call	_I2C_2_Master_RepStart	;wreg free
  3475                           
  3476                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  3477   001C06  0E53               	movlw	83
  3478   001C08  EC01  F010         	call	_I2C_2_Master_Write
  3479                           
  3480                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  3481   001C0C  0E01               	movlw	1
  3482   001C0E  ECBB  F00E         	call	_I2C_2_Master_Read
  3483   001C12  6E0E               	movwf	??_color_read_Red^0,c
  3484   001C14  500E               	movf	??_color_read_Red^0,w,c
  3485   001C16  6E11               	movwf	color_read_Red@tmp^0,c
  3486   001C18  6A12               	clrf	(color_read_Red@tmp+1)^0,c
  3487                           
  3488                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3489   001C1A  0E00               	movlw	0
  3490   001C1C  ECBB  F00E         	call	_I2C_2_Master_Read
  3491   001C20  6E0E               	movwf	??_color_read_Red^0,c
  3492   001C22  500E               	movf	??_color_read_Red^0,w,c
  3493   001C24  6E10               	movwf	(??_color_read_Red+2)^0,c
  3494   001C26  6A0F               	clrf	(??_color_read_Red+1)^0,c
  3495   001C28  5011               	movf	color_read_Red@tmp^0,w,c
  3496   001C2A  100F               	iorwf	(??_color_read_Red+1)^0,w,c
  3497   001C2C  6E11               	movwf	color_read_Red@tmp^0,c
  3498   001C2E  5012               	movf	(color_read_Red@tmp+1)^0,w,c
  3499   001C30  1010               	iorwf	(??_color_read_Red+2)^0,w,c
  3500   001C32  6E12               	movwf	(color_read_Red@tmp+1)^0,c
  3501                           
  3502                           ;color.c: 39:  I2C_2_Master_Stop();
  3503   001C34  EC12  F010         	call	_I2C_2_Master_Stop	;wreg free
  3504   001C38                     
  3505                           ;color.c: 40:  return tmp;
  3506   001C38  C011  F00C         	movff	color_read_Red@tmp,?_color_read_Red
  3507   001C3C  C012  F00D         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3508   001C40  0012               	return		;funcret
  3509   001C42                     __end_of_color_read_Red:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _color_read_Green *****************
  3513 ;; Defined at:
  3514 ;;		line 43 in file "color.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  tmp             2   16[COMRAM] unsigned int 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  2   11[COMRAM] unsigned int 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;Total ram usage:        7 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 7
  3535 ;; This function calls:
  3536 ;;		_I2C_2_Master_Read
  3537 ;;		_I2C_2_Master_RepStart
  3538 ;;		_I2C_2_Master_Start
  3539 ;;		_I2C_2_Master_Stop
  3540 ;;		_I2C_2_Master_Write
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;;		_collect_avg_readings
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text20
  3548   001C42                     __ptext20:
  3549                           	callstack 0
  3550   001C42                     _color_read_Green:
  3551                           	callstack 23
  3552   001C42                     
  3553                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  3554   001C42  EC17  F010         	call	_I2C_2_Master_Start	;wreg free
  3555                           
  3556                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3557   001C46  0E52               	movlw	82
  3558   001C48  EC01  F010         	call	_I2C_2_Master_Write
  3559                           
  3560                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  3561   001C4C  0EB8               	movlw	184
  3562   001C4E  EC01  F010         	call	_I2C_2_Master_Write
  3563                           
  3564                           ;color.c: 49:  I2C_2_Master_RepStart();
  3565   001C52  EC0D  F010         	call	_I2C_2_Master_RepStart	;wreg free
  3566                           
  3567                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3568   001C56  0E53               	movlw	83
  3569   001C58  EC01  F010         	call	_I2C_2_Master_Write
  3570                           
  3571                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  3572   001C5C  0E01               	movlw	1
  3573   001C5E  ECBB  F00E         	call	_I2C_2_Master_Read
  3574   001C62  6E0E               	movwf	??_color_read_Green^0,c
  3575   001C64  500E               	movf	??_color_read_Green^0,w,c
  3576   001C66  6E11               	movwf	color_read_Green@tmp^0,c
  3577   001C68  6A12               	clrf	(color_read_Green@tmp+1)^0,c
  3578                           
  3579                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3580   001C6A  0E00               	movlw	0
  3581   001C6C  ECBB  F00E         	call	_I2C_2_Master_Read
  3582   001C70  6E0E               	movwf	??_color_read_Green^0,c
  3583   001C72  500E               	movf	??_color_read_Green^0,w,c
  3584   001C74  6E10               	movwf	(??_color_read_Green+2)^0,c
  3585   001C76  6A0F               	clrf	(??_color_read_Green+1)^0,c
  3586   001C78  5011               	movf	color_read_Green@tmp^0,w,c
  3587   001C7A  100F               	iorwf	(??_color_read_Green+1)^0,w,c
  3588   001C7C  6E11               	movwf	color_read_Green@tmp^0,c
  3589   001C7E  5012               	movf	(color_read_Green@tmp+1)^0,w,c
  3590   001C80  1010               	iorwf	(??_color_read_Green+2)^0,w,c
  3591   001C82  6E12               	movwf	(color_read_Green@tmp+1)^0,c
  3592                           
  3593                           ;color.c: 53:  I2C_2_Master_Stop();
  3594   001C84  EC12  F010         	call	_I2C_2_Master_Stop	;wreg free
  3595   001C88                     
  3596                           ;color.c: 54:  return tmp;
  3597   001C88  C011  F00C         	movff	color_read_Green@tmp,?_color_read_Green
  3598   001C8C  C012  F00D         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3599   001C90  0012               	return		;funcret
  3600   001C92                     __end_of_color_read_Green:
  3601                           	callstack 0
  3602                           
  3603 ;; *************** function _color_read_Clear *****************
  3604 ;; Defined at:
  3605 ;;		line 71 in file "color.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  tmp             2   16[COMRAM] unsigned int 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  2   11[COMRAM] unsigned int 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;Total ram usage:        7 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 7
  3626 ;; This function calls:
  3627 ;;		_I2C_2_Master_Read
  3628 ;;		_I2C_2_Master_RepStart
  3629 ;;		_I2C_2_Master_Start
  3630 ;;		_I2C_2_Master_Stop
  3631 ;;		_I2C_2_Master_Write
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text21
  3638   001C92                     __ptext21:
  3639                           	callstack 0
  3640   001C92                     _color_read_Clear:
  3641                           	callstack 23
  3642   001C92                     
  3643                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3644   001C92  EC17  F010         	call	_I2C_2_Master_Start	;wreg free
  3645                           
  3646                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3647   001C96  0E52               	movlw	82
  3648   001C98  EC01  F010         	call	_I2C_2_Master_Write
  3649                           
  3650                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  3651   001C9C  0EB4               	movlw	180
  3652   001C9E  EC01  F010         	call	_I2C_2_Master_Write
  3653                           
  3654                           ;color.c: 77:  I2C_2_Master_RepStart();
  3655   001CA2  EC0D  F010         	call	_I2C_2_Master_RepStart	;wreg free
  3656                           
  3657                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3658   001CA6  0E53               	movlw	83
  3659   001CA8  EC01  F010         	call	_I2C_2_Master_Write
  3660                           
  3661                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  3662   001CAC  0E01               	movlw	1
  3663   001CAE  ECBB  F00E         	call	_I2C_2_Master_Read
  3664   001CB2  6E0E               	movwf	??_color_read_Clear^0,c
  3665   001CB4  500E               	movf	??_color_read_Clear^0,w,c
  3666   001CB6  6E11               	movwf	color_read_Clear@tmp^0,c
  3667   001CB8  6A12               	clrf	(color_read_Clear@tmp+1)^0,c
  3668                           
  3669                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3670   001CBA  0E00               	movlw	0
  3671   001CBC  ECBB  F00E         	call	_I2C_2_Master_Read
  3672   001CC0  6E0E               	movwf	??_color_read_Clear^0,c
  3673   001CC2  500E               	movf	??_color_read_Clear^0,w,c
  3674   001CC4  6E10               	movwf	(??_color_read_Clear+2)^0,c
  3675   001CC6  6A0F               	clrf	(??_color_read_Clear+1)^0,c
  3676   001CC8  5011               	movf	color_read_Clear@tmp^0,w,c
  3677   001CCA  100F               	iorwf	(??_color_read_Clear+1)^0,w,c
  3678   001CCC  6E11               	movwf	color_read_Clear@tmp^0,c
  3679   001CCE  5012               	movf	(color_read_Clear@tmp+1)^0,w,c
  3680   001CD0  1010               	iorwf	(??_color_read_Clear+2)^0,w,c
  3681   001CD2  6E12               	movwf	(color_read_Clear@tmp+1)^0,c
  3682                           
  3683                           ;color.c: 81:  I2C_2_Master_Stop();
  3684   001CD4  EC12  F010         	call	_I2C_2_Master_Stop	;wreg free
  3685   001CD8                     
  3686                           ;color.c: 82:  return tmp;
  3687   001CD8  C011  F00C         	movff	color_read_Clear@tmp,?_color_read_Clear
  3688   001CDC  C012  F00D         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3689   001CE0  0012               	return		;funcret
  3690   001CE2                     __end_of_color_read_Clear:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _color_read_Blue *****************
  3694 ;; Defined at:
  3695 ;;		line 57 in file "color.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  tmp             2   16[COMRAM] unsigned int 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  2   11[COMRAM] unsigned int 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;Total ram usage:        7 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 7
  3716 ;; This function calls:
  3717 ;;		_I2C_2_Master_Read
  3718 ;;		_I2C_2_Master_RepStart
  3719 ;;		_I2C_2_Master_Start
  3720 ;;		_I2C_2_Master_Stop
  3721 ;;		_I2C_2_Master_Write
  3722 ;; This function is called by:
  3723 ;;		_main
  3724 ;;		_collect_avg_readings
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text22
  3729   001CE2                     __ptext22:
  3730                           	callstack 0
  3731   001CE2                     _color_read_Blue:
  3732                           	callstack 23
  3733   001CE2                     
  3734                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  3735   001CE2  EC17  F010         	call	_I2C_2_Master_Start	;wreg free
  3736                           
  3737                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  3738   001CE6  0E52               	movlw	82
  3739   001CE8  EC01  F010         	call	_I2C_2_Master_Write
  3740                           
  3741                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  3742   001CEC  0EBA               	movlw	186
  3743   001CEE  EC01  F010         	call	_I2C_2_Master_Write
  3744                           
  3745                           ;color.c: 63:  I2C_2_Master_RepStart();
  3746   001CF2  EC0D  F010         	call	_I2C_2_Master_RepStart	;wreg free
  3747                           
  3748                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  3749   001CF6  0E53               	movlw	83
  3750   001CF8  EC01  F010         	call	_I2C_2_Master_Write
  3751                           
  3752                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  3753   001CFC  0E01               	movlw	1
  3754   001CFE  ECBB  F00E         	call	_I2C_2_Master_Read
  3755   001D02  6E0E               	movwf	??_color_read_Blue^0,c
  3756   001D04  500E               	movf	??_color_read_Blue^0,w,c
  3757   001D06  6E11               	movwf	color_read_Blue@tmp^0,c
  3758   001D08  6A12               	clrf	(color_read_Blue@tmp+1)^0,c
  3759                           
  3760                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3761   001D0A  0E00               	movlw	0
  3762   001D0C  ECBB  F00E         	call	_I2C_2_Master_Read
  3763   001D10  6E0E               	movwf	??_color_read_Blue^0,c
  3764   001D12  500E               	movf	??_color_read_Blue^0,w,c
  3765   001D14  6E10               	movwf	(??_color_read_Blue+2)^0,c
  3766   001D16  6A0F               	clrf	(??_color_read_Blue+1)^0,c
  3767   001D18  5011               	movf	color_read_Blue@tmp^0,w,c
  3768   001D1A  100F               	iorwf	(??_color_read_Blue+1)^0,w,c
  3769   001D1C  6E11               	movwf	color_read_Blue@tmp^0,c
  3770   001D1E  5012               	movf	(color_read_Blue@tmp+1)^0,w,c
  3771   001D20  1010               	iorwf	(??_color_read_Blue+2)^0,w,c
  3772   001D22  6E12               	movwf	(color_read_Blue@tmp+1)^0,c
  3773                           
  3774                           ;color.c: 67:  I2C_2_Master_Stop();
  3775   001D24  EC12  F010         	call	_I2C_2_Master_Stop	;wreg free
  3776   001D28                     
  3777                           ;color.c: 68:  return tmp;
  3778   001D28  C011  F00C         	movff	color_read_Blue@tmp,?_color_read_Blue
  3779   001D2C  C012  F00D         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3780   001D30  0012               	return		;funcret
  3781   001D32                     __end_of_color_read_Blue:
  3782                           	callstack 0
  3783                           
  3784 ;; *************** function _I2C_2_Master_RepStart *****************
  3785 ;; Defined at:
  3786 ;;		line 33 in file "i2c.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;		None
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg, status,2, status,0, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;Total ram usage:        0 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; Hardware stack levels required when called: 6
  3807 ;; This function calls:
  3808 ;;		_I2C_2_Master_Idle
  3809 ;; This function is called by:
  3810 ;;		_color_read_Red
  3811 ;;		_color_read_Green
  3812 ;;		_color_read_Blue
  3813 ;;		_color_read_Clear
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text23
  3818   00201A                     __ptext23:
  3819                           	callstack 0
  3820   00201A                     _I2C_2_Master_RepStart:
  3821                           	callstack 23
  3822   00201A                     
  3823                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3824   00201A  EC62  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3825   00201E                     
  3826                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3827   00201E  010E               	movlb	14	; () banked
  3828   002020  83DA               	bsf	218,1,b	;volatile
  3829   002022                     
  3830                           ; BSR set to: 14
  3831   002022  0012               	return		;funcret
  3832   002024                     __end_of_I2C_2_Master_RepStart:
  3833                           	callstack 0
  3834                           
  3835 ;; *************** function _I2C_2_Master_Read *****************
  3836 ;; Defined at:
  3837 ;;		line 51 in file "i2c.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  ack             1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  ack             1    9[COMRAM] unsigned char 
  3842 ;;  tmp             1   10[COMRAM] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      unsigned char 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3856 ;;Total ram usage:        3 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 6
  3859 ;; This function calls:
  3860 ;;		_I2C_2_Master_Idle
  3861 ;; This function is called by:
  3862 ;;		_color_read_Red
  3863 ;;		_color_read_Green
  3864 ;;		_color_read_Blue
  3865 ;;		_color_read_Clear
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text24
  3870   001D76                     __ptext24:
  3871                           	callstack 0
  3872   001D76                     _I2C_2_Master_Read:
  3873                           	callstack 23
  3874                           
  3875                           ; BSR set to: 14
  3876                           ;incstack = 0
  3877                           ;I2C_2_Master_Read@ack stored from wreg
  3878   001D76  6E0A               	movwf	I2C_2_Master_Read@ack^0,c
  3879   001D78                     
  3880                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3881   001D78  EC62  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3882   001D7C                     
  3883                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3884   001D7C  010E               	movlb	14	; () banked
  3885   001D7E  87DA               	bsf	218,3,b	;volatile
  3886                           
  3887                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3888   001D80  EC62  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3889   001D84                     
  3890                           ;i2c.c: 57:   tmp = SSP2BUF;
  3891   001D84  CED5 F00B          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3892                           
  3893                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3894   001D88  EC62  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3895   001D8C                     
  3896                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3897   001D8C  500A               	movf	I2C_2_Master_Read@ack^0,w,c
  3898   001D8E  B4D8               	btfsc	status,2,c
  3899   001D90  EFCC  F00E         	goto	u1191
  3900   001D94  EFD0  F00E         	goto	u1190
  3901   001D98                     u1191:
  3902   001D98  6A09               	clrf	??_I2C_2_Master_Read^0,c
  3903   001D9A  2A09               	incf	??_I2C_2_Master_Read^0,f,c
  3904   001D9C  EFD1  F00E         	goto	u1208
  3905   001DA0                     u1190:
  3906   001DA0  6A09               	clrf	??_I2C_2_Master_Read^0,c
  3907   001DA2                     u1208:
  3908   001DA2  3A09               	swapf	??_I2C_2_Master_Read^0,f,c
  3909   001DA4  4609               	rlncf	??_I2C_2_Master_Read^0,f,c
  3910   001DA6  010E               	movlb	14	; () banked
  3911   001DA8  51DA               	movf	218,w,b	;volatile
  3912   001DAA  1809               	xorwf	??_I2C_2_Master_Read^0,w,c
  3913   001DAC  0BDF               	andlw	-33
  3914   001DAE  1809               	xorwf	??_I2C_2_Master_Read^0,w,c
  3915   001DB0  6FDA               	movwf	218,b	;volatile
  3916   001DB2                     
  3917                           ; BSR set to: 14
  3918                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3919   001DB2  89DA               	bsf	218,4,b	;volatile
  3920   001DB4                     
  3921                           ; BSR set to: 14
  3922                           ;i2c.c: 61:   return tmp;
  3923   001DB4  500B               	movf	I2C_2_Master_Read@tmp^0,w,c
  3924   001DB6                     
  3925                           ; BSR set to: 14
  3926   001DB6  0012               	return		;funcret
  3927   001DB8                     __end_of_I2C_2_Master_Read:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function _color_click_init *****************
  3931 ;; Defined at:
  3932 ;;		line 5 in file "color.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;Total ram usage:        1 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 8
  3953 ;; This function calls:
  3954 ;;		_I2C_2_Master_Init
  3955 ;;		_color_writetoaddr
  3956 ;; This function is called by:
  3957 ;;		_main
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text25
  3962   001E36                     __ptext25:
  3963                           	callstack 0
  3964   001E36                     _color_click_init:
  3965                           	callstack 22
  3966   001E36                     
  3967                           ;color.c: 8:     I2C_2_Master_Init();
  3968   001E36  EC4D  F00F         	call	_I2C_2_Master_Init	;wreg free
  3969   001E3A                     
  3970                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3971   001E3A  0E01               	movlw	1
  3972   001E3C  6E0A               	movwf	color_writetoaddr@value^0,c
  3973   001E3E  0E00               	movlw	0
  3974   001E40  ECBE  F00F         	call	_color_writetoaddr
  3975   001E44                     
  3976                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3977   001E44  0E3F               	movlw	63
  3978   001E46  6E0C               	movwf	??_color_click_init^0,c
  3979   001E48  0E55               	movlw	85
  3980   001E4A                     u1987:
  3981   001E4A  2EE8               	decfsz	wreg,f,c
  3982   001E4C  D7FE               	bra	u1987
  3983   001E4E  2E0C               	decfsz	??_color_click_init^0,f,c
  3984   001E50  D7FC               	bra	u1987
  3985   001E52  F000               	nop	
  3986   001E54                     
  3987                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3988   001E54  0E03               	movlw	3
  3989   001E56  6E0A               	movwf	color_writetoaddr@value^0,c
  3990   001E58  0E00               	movlw	0
  3991   001E5A  ECBE  F00F         	call	_color_writetoaddr
  3992   001E5E                     
  3993                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3994   001E5E  0ED5               	movlw	213
  3995   001E60  6E0A               	movwf	color_writetoaddr@value^0,c
  3996   001E62  0E01               	movlw	1
  3997   001E64  ECBE  F00F         	call	_color_writetoaddr
  3998   001E68  0012               	return		;funcret
  3999   001E6A                     __end_of_color_click_init:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function _I2C_2_Master_Init *****************
  4003 ;; Defined at:
  4004 ;;		line 4 in file "i2c.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;Total ram usage:        0 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 5
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_color_click_init
  4029 ;;		_main
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text26
  4034   001E9A                     __ptext26:
  4035                           	callstack 0
  4036   001E9A                     _I2C_2_Master_Init:
  4037                           	callstack 24
  4038   001E9A                     
  4039                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4040   001E9A  010E               	movlb	14	; () banked
  4041   001E9C  51D9               	movf	217,w,b	;volatile
  4042   001E9E  0BF0               	andlw	-16
  4043   001EA0  0908               	iorlw	8
  4044   001EA2  6FD9               	movwf	217,b	;volatile
  4045   001EA4                     
  4046                           ; BSR set to: 14
  4047                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4048   001EA4  8BD9               	bsf	217,5,b	;volatile
  4049                           
  4050                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4051   001EA6  0E9F               	movlw	159
  4052   001EA8  6FD6               	movwf	214,b	;volatile
  4053   001EAA                     
  4054                           ; BSR set to: 14
  4055                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4056   001EAA  8A84               	bsf	132,5,c	;volatile
  4057   001EAC                     
  4058                           ; BSR set to: 14
  4059                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4060   001EAC  8C84               	bsf	132,6,c	;volatile
  4061   001EAE                     
  4062                           ; BSR set to: 14
  4063                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4064   001EAE  9BA7               	bcf	167,5,b	;volatile
  4065   001EB0                     
  4066                           ; BSR set to: 14
  4067                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4068   001EB0  9DA7               	bcf	167,6,b	;volatile
  4069                           
  4070                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4071   001EB2  0E1D               	movlw	29
  4072   001EB4  6F1D               	movwf	29,b	;volatile
  4073                           
  4074                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4075   001EB6  0E1E               	movlw	30
  4076   001EB8  6F1C               	movwf	28,b	;volatile
  4077                           
  4078                           ;i2c.c: 18:   RD5PPS=0x1C;
  4079   001EBA  0E1C               	movlw	28
  4080   001EBC  6F6F               	movwf	111,b	;volatile
  4081                           
  4082                           ;i2c.c: 19:   RD6PPS=0x1B;
  4083   001EBE  0E1B               	movlw	27
  4084   001EC0  6F70               	movwf	112,b	;volatile
  4085   001EC2                     
  4086                           ; BSR set to: 14
  4087   001EC2  0012               	return		;funcret
  4088   001EC4                     __end_of_I2C_2_Master_Init:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _LEDSon_init *****************
  4092 ;; Defined at:
  4093 ;;		line 18 in file "LEDsOn.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		None
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;Total ram usage:        0 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 5
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_main
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text27
  4122   001F3A                     __ptext27:
  4123                           	callstack 0
  4124   001F3A                     _LEDSon_init:
  4125                           	callstack 25
  4126   001F3A                     
  4127                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  4128   001F3A  9288               	bcf	136,1,c	;volatile
  4129                           
  4130                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  4131   001F3C  9088               	bcf	136,0,c	;volatile
  4132                           
  4133                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  4134   001F3E  9884               	bcf	132,4,c	;volatile
  4135                           
  4136                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  4137   001F40  9684               	bcf	132,3,c	;volatile
  4138                           
  4139                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  4140   001F42  9086               	bcf	134,0,c	;volatile
  4141                           
  4142                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  4143   001F44  9287               	bcf	135,1,c	;volatile
  4144                           
  4145                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  4146   001F46  9E86               	bcf	134,7,c	;volatile
  4147                           
  4148                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  4149   001F48  9881               	bcf	129,4,c	;volatile
  4150                           
  4151                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 0;
  4152   001F4A  9E7E               	bcf	126,7,c	;volatile
  4153                           
  4154                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 0;
  4155   001F4C  927F               	bcf	127,1,c	;volatile
  4156                           
  4157                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 0;
  4158   001F4E  9879               	bcf	121,4,c	;volatile
  4159                           
  4160                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  4161   001F50  987C               	bcf	124,4,c	;volatile
  4162                           
  4163                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  4164   001F52  9280               	bcf	128,1,c	;volatile
  4165                           
  4166                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  4167   001F54  907E               	bcf	126,0,c	;volatile
  4168                           
  4169                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  4170   001F56  9080               	bcf	128,0,c	;volatile
  4171                           
  4172                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  4173   001F58  967C               	bcf	124,3,c	;volatile
  4174   001F5A  0012               	return		;funcret
  4175   001F5C                     __end_of_LEDSon_init:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _Interrupts_init *****************
  4179 ;; Defined at:
  4180 ;;		line 7 in file "interrupts.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 9
  4201 ;; This function calls:
  4202 ;;		_enable_color_interrupt
  4203 ;;		_set_interrupt_threshold
  4204 ;; This function is called by:
  4205 ;;		_main
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text28
  4210   001DF8                     __ptext28:
  4211                           	callstack 0
  4212   001DF8                     _Interrupts_init:
  4213                           	callstack 21
  4214   001DF8                     
  4215                           ;interrupts.c: 10:     enable_color_interrupt();
  4216   001DF8  ECF9  F00F         	call	_enable_color_interrupt	;wreg free
  4217                           
  4218                           ;interrupts.c: 11:     set_interrupt_threshold(1, 2000, 0b0100);
  4219   001DFC  0E00               	movlw	0
  4220   001DFE  6E0D               	movwf	(set_interrupt_threshold@AILT+1)^0,c
  4221   001E00  0E01               	movlw	1
  4222   001E02  6E0C               	movwf	set_interrupt_threshold@AILT^0,c
  4223   001E04  0E07               	movlw	7
  4224   001E06  6E0F               	movwf	(set_interrupt_threshold@AIHT+1)^0,c
  4225   001E08  0ED0               	movlw	208
  4226   001E0A  6E0E               	movwf	set_interrupt_threshold@AIHT^0,c
  4227   001E0C  0E00               	movlw	0
  4228   001E0E  6E11               	movwf	(set_interrupt_threshold@persistence+1)^0,c
  4229   001E10  0E04               	movlw	4
  4230   001E12  6E10               	movwf	set_interrupt_threshold@persistence^0,c
  4231   001E14  EC17  F00D         	call	_set_interrupt_threshold	;wreg free
  4232   001E18                     
  4233                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 0;
  4234   001E18  9282               	bcf	130,1,c	;volatile
  4235   001E1A                     
  4236                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  4237   001E1A  010E               	movlb	14	; () banked
  4238   001E1C  939A               	bcf	154,1,b	;volatile
  4239   001E1E                     
  4240                           ; BSR set to: 14
  4241                           ;interrupts.c: 15:     INT1PPS=0x09;
  4242   001E1E  0E09               	movlw	9
  4243   001E20  010D               	movlb	13	; () banked
  4244   001E22  6FF1               	movwf	241,b	;volatile
  4245   001E24                     
  4246                           ; BSR set to: 13
  4247                           ;interrupts.c: 16:     PIE0bits.INT1IE = 1;
  4248   001E24  010E               	movlb	14	; () banked
  4249   001E26  8329               	bsf	41,1,b	;volatile
  4250   001E28                     
  4251                           ; BSR set to: 14
  4252                           ;interrupts.c: 17:     IPR0bits.INT1IP = 1;
  4253   001E28  831F               	bsf	31,1,b	;volatile
  4254   001E2A                     
  4255                           ; BSR set to: 14
  4256                           ;interrupts.c: 18:     INTCONbits.INT1EDG = 0;
  4257   001E2A  92F2               	bcf	242,1,c	;volatile
  4258   001E2C                     
  4259                           ; BSR set to: 14
  4260                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  4261   001E2C  8CF2               	bsf	242,6,c	;volatile
  4262   001E2E                     
  4263                           ; BSR set to: 14
  4264                           ;interrupts.c: 20:     INTCONbits.IPEN = 1;
  4265   001E2E  8AF2               	bsf	242,5,c	;volatile
  4266   001E30                     
  4267                           ; BSR set to: 14
  4268                           ;interrupts.c: 34:     INTCONbits.GIEL = 1;
  4269   001E30  8CF2               	bsf	242,6,c	;volatile
  4270   001E32                     
  4271                           ; BSR set to: 14
  4272                           ;interrupts.c: 35:     INTCONbits.GIEH=1;}
  4273   001E32  8EF2               	bsf	242,7,c	;volatile
  4274   001E34                     
  4275                           ; BSR set to: 14
  4276   001E34  0012               	return		;funcret
  4277   001E36                     __end_of_Interrupts_init:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _set_interrupt_threshold *****************
  4281 ;; Defined at:
  4282 ;;		line 58 in file "interrupts.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  AILT            2   11[COMRAM] unsigned int 
  4285 ;;  AIHT            2   13[COMRAM] unsigned int 
  4286 ;;  persistence     2   15[COMRAM] unsigned int 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4298 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;Total ram usage:        8 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 8
  4305 ;; This function calls:
  4306 ;;		_color_writetoaddr
  4307 ;; This function is called by:
  4308 ;;		_Interrupts_init
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text29
  4313   001A2E                     __ptext29:
  4314                           	callstack 0
  4315   001A2E                     _set_interrupt_threshold:
  4316                           	callstack 21
  4317   001A2E                     
  4318                           ;interrupts.c: 60:     color_writetoaddr(0x0C, persistence);
  4319   001A2E  C010  F00A         	movff	set_interrupt_threshold@persistence,color_writetoaddr@value
  4320   001A32  0E0C               	movlw	12
  4321   001A34  ECBE  F00F         	call	_color_writetoaddr
  4322                           
  4323                           ;interrupts.c: 61:     color_writetoaddr(0x05, AILT >> 8);
  4324   001A38  500D               	movf	(set_interrupt_threshold@AILT+1)^0,w,c
  4325   001A3A  6E0A               	movwf	color_writetoaddr@value^0,c
  4326   001A3C  0E05               	movlw	5
  4327   001A3E  ECBE  F00F         	call	_color_writetoaddr
  4328   001A42                     
  4329                           ;interrupts.c: 62:     color_writetoaddr(0x04, AILT && 0b0000000011111111);
  4330   001A42  0E00               	movlw	0
  4331   001A44  6E12               	movwf	_set_interrupt_threshold$1930^0,c
  4332   001A46  500C               	movf	set_interrupt_threshold@AILT^0,w,c
  4333   001A48  100D               	iorwf	(set_interrupt_threshold@AILT+1)^0,w,c
  4334   001A4A  B4D8               	btfsc	status,2,c
  4335   001A4C  EF2A  F00D         	goto	u1221
  4336   001A50  EF2C  F00D         	goto	u1220
  4337   001A54                     u1221:
  4338   001A54  EF2E  F00D         	goto	l2454
  4339   001A58                     u1220:
  4340   001A58  0E01               	movlw	1
  4341   001A5A  6E12               	movwf	_set_interrupt_threshold$1930^0,c
  4342   001A5C                     l2454:
  4343   001A5C  C012  F00A         	movff	_set_interrupt_threshold$1930,color_writetoaddr@value
  4344   001A60  0E04               	movlw	4
  4345   001A62  ECBE  F00F         	call	_color_writetoaddr
  4346   001A66                     
  4347                           ;interrupts.c: 63:     color_writetoaddr(0x07, AIHT >> 8);
  4348   001A66  500F               	movf	(set_interrupt_threshold@AIHT+1)^0,w,c
  4349   001A68  6E0A               	movwf	color_writetoaddr@value^0,c
  4350   001A6A  0E07               	movlw	7
  4351   001A6C  ECBE  F00F         	call	_color_writetoaddr
  4352                           
  4353                           ;interrupts.c: 64:     color_writetoaddr(0x06, AIHT && 0b0000000011111111);
  4354   001A70  0E00               	movlw	0
  4355   001A72  6E13               	movwf	_set_interrupt_threshold$1931^0,c
  4356   001A74  500E               	movf	set_interrupt_threshold@AIHT^0,w,c
  4357   001A76  100F               	iorwf	(set_interrupt_threshold@AIHT+1)^0,w,c
  4358   001A78  B4D8               	btfsc	status,2,c
  4359   001A7A  EF41  F00D         	goto	u1231
  4360   001A7E  EF43  F00D         	goto	u1230
  4361   001A82                     u1231:
  4362   001A82  EF45  F00D         	goto	l2462
  4363   001A86                     u1230:
  4364   001A86  0E01               	movlw	1
  4365   001A88  6E13               	movwf	_set_interrupt_threshold$1931^0,c
  4366   001A8A                     l2462:
  4367   001A8A  C013  F00A         	movff	_set_interrupt_threshold$1931,color_writetoaddr@value
  4368   001A8E  0E06               	movlw	6
  4369   001A90  ECBE  F00F         	call	_color_writetoaddr
  4370   001A94  0012               	return		;funcret
  4371   001A96                     __end_of_set_interrupt_threshold:
  4372                           	callstack 0
  4373                           
  4374 ;; *************** function _enable_color_interrupt *****************
  4375 ;; Defined at:
  4376 ;;		line 53 in file "interrupts.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2, status,0, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4394 ;;Total ram usage:        0 bytes
  4395 ;; Hardware stack levels used: 1
  4396 ;; Hardware stack levels required when called: 8
  4397 ;; This function calls:
  4398 ;;		_clear_interrupt_flag
  4399 ;;		_color_writetoaddr
  4400 ;; This function is called by:
  4401 ;;		_Interrupts_init
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text30
  4406   001FF2                     __ptext30:
  4407                           	callstack 0
  4408   001FF2                     _enable_color_interrupt:
  4409                           	callstack 21
  4410   001FF2                     
  4411                           ;interrupts.c: 54:     clear_interrupt_flag();
  4412   001FF2  ECDA  F00F         	call	_clear_interrupt_flag	;wreg free
  4413                           
  4414                           ;interrupts.c: 55:  color_writetoaddr(0x00, 0b10011);
  4415   001FF6  0E13               	movlw	19
  4416   001FF8  6E0A               	movwf	color_writetoaddr@value^0,c
  4417   001FFA  0E00               	movlw	0
  4418   001FFC  ECBE  F00F         	call	_color_writetoaddr
  4419   002000  0012               	return		;funcret
  4420   002002                     __end_of_enable_color_interrupt:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _color_writetoaddr *****************
  4424 ;; Defined at:
  4425 ;;		line 21 in file "color.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  address         1    wreg     unsigned char 
  4428 ;;  value           1    9[COMRAM] unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  address         1   10[COMRAM] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4440 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;Total ram usage:        2 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 7
  4447 ;; This function calls:
  4448 ;;		_I2C_2_Master_Start
  4449 ;;		_I2C_2_Master_Stop
  4450 ;;		_I2C_2_Master_Write
  4451 ;; This function is called by:
  4452 ;;		_color_click_init
  4453 ;;		_enable_color_interrupt
  4454 ;;		_set_interrupt_threshold
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text31
  4459   001F7C                     __ptext31:
  4460                           	callstack 0
  4461   001F7C                     _color_writetoaddr:
  4462                           	callstack 22
  4463                           
  4464                           ;incstack = 0
  4465                           ;color_writetoaddr@address stored from wreg
  4466   001F7C  6E0B               	movwf	color_writetoaddr@address^0,c
  4467   001F7E                     
  4468                           ;color.c: 22:     I2C_2_Master_Start();
  4469   001F7E  EC17  F010         	call	_I2C_2_Master_Start	;wreg free
  4470                           
  4471                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4472   001F82  0E52               	movlw	82
  4473   001F84  EC01  F010         	call	_I2C_2_Master_Write
  4474                           
  4475                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4476   001F88  500B               	movf	color_writetoaddr@address^0,w,c
  4477   001F8A  0980               	iorlw	128
  4478   001F8C  EC01  F010         	call	_I2C_2_Master_Write
  4479                           
  4480                           ;color.c: 25:     I2C_2_Master_Write(value);
  4481   001F90  500A               	movf	color_writetoaddr@value^0,w,c
  4482   001F92  EC01  F010         	call	_I2C_2_Master_Write
  4483                           
  4484                           ;color.c: 26:     I2C_2_Master_Stop();
  4485   001F96  EC12  F010         	call	_I2C_2_Master_Stop	;wreg free
  4486   001F9A  0012               	return		;funcret
  4487   001F9C                     __end_of_color_writetoaddr:
  4488                           	callstack 0
  4489                           
  4490 ;; *************** function _clear_interrupt_flag *****************
  4491 ;; Defined at:
  4492 ;;		line 67 in file "interrupts.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1    wreg      void 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;Total ram usage:        0 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; Hardware stack levels required when called: 7
  4513 ;; This function calls:
  4514 ;;		_I2C_2_Master_Start
  4515 ;;		_I2C_2_Master_Stop
  4516 ;;		_I2C_2_Master_Write
  4517 ;; This function is called by:
  4518 ;;		_enable_color_interrupt
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text32
  4523   001FB4                     __ptext32:
  4524                           	callstack 0
  4525   001FB4                     _clear_interrupt_flag:
  4526                           	callstack 21
  4527   001FB4                     
  4528                           ;interrupts.c: 68:     I2C_2_Master_Start();
  4529   001FB4  EC17  F010         	call	_I2C_2_Master_Start	;wreg free
  4530                           
  4531                           ;interrupts.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  4532   001FB8  0E52               	movlw	82
  4533   001FBA  EC01  F010         	call	_I2C_2_Master_Write
  4534                           
  4535                           ;interrupts.c: 70:     I2C_2_Master_Write(0b11100110);
  4536   001FBE  0EE6               	movlw	230
  4537   001FC0  EC01  F010         	call	_I2C_2_Master_Write
  4538                           
  4539                           ;interrupts.c: 71:     I2C_2_Master_Stop();
  4540   001FC4  EC12  F010         	call	_I2C_2_Master_Stop	;wreg free
  4541   001FC8  0012               	return		;funcret
  4542   001FCA                     __end_of_clear_interrupt_flag:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _I2C_2_Master_Write *****************
  4546 ;; Defined at:
  4547 ;;		line 45 in file "i2c.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  data_byte       1    wreg     unsigned char 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  data_byte       1    8[COMRAM] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;Total ram usage:        1 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 6
  4568 ;; This function calls:
  4569 ;;		_I2C_2_Master_Idle
  4570 ;; This function is called by:
  4571 ;;		_color_writetoaddr
  4572 ;;		_color_read_Red
  4573 ;;		_color_read_Green
  4574 ;;		_color_read_Blue
  4575 ;;		_color_read_Clear
  4576 ;;		_clear_interrupt_flag
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text33
  4581   002002                     __ptext33:
  4582                           	callstack 0
  4583   002002                     _I2C_2_Master_Write:
  4584                           	callstack 23
  4585                           
  4586                           ;incstack = 0
  4587                           ;I2C_2_Master_Write@data_byte stored from wreg
  4588   002002  6E09               	movwf	I2C_2_Master_Write@data_byte^0,c
  4589   002004                     
  4590                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4591   002004  EC62  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4592   002008                     
  4593                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4594   002008  C009  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4595   00200C  0012               	return		;funcret
  4596   00200E                     __end_of_I2C_2_Master_Write:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function _I2C_2_Master_Stop *****************
  4600 ;; Defined at:
  4601 ;;		line 39 in file "i2c.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;Total ram usage:        0 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 6
  4622 ;; This function calls:
  4623 ;;		_I2C_2_Master_Idle
  4624 ;; This function is called by:
  4625 ;;		_color_writetoaddr
  4626 ;;		_color_read_Red
  4627 ;;		_color_read_Green
  4628 ;;		_color_read_Blue
  4629 ;;		_color_read_Clear
  4630 ;;		_clear_interrupt_flag
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text34
  4635   002024                     __ptext34:
  4636                           	callstack 0
  4637   002024                     _I2C_2_Master_Stop:
  4638                           	callstack 23
  4639   002024                     
  4640                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4641   002024  EC62  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4642   002028                     
  4643                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4644   002028  010E               	movlb	14	; () banked
  4645   00202A  85DA               	bsf	218,2,b	;volatile
  4646   00202C                     
  4647                           ; BSR set to: 14
  4648   00202C  0012               	return		;funcret
  4649   00202E                     __end_of_I2C_2_Master_Stop:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function _I2C_2_Master_Start *****************
  4653 ;; Defined at:
  4654 ;;		line 27 in file "i2c.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;		None
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      void 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2, status,0, cstack
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;Total ram usage:        0 bytes
  4673 ;; Hardware stack levels used: 1
  4674 ;; Hardware stack levels required when called: 6
  4675 ;; This function calls:
  4676 ;;		_I2C_2_Master_Idle
  4677 ;; This function is called by:
  4678 ;;		_color_writetoaddr
  4679 ;;		_color_read_Red
  4680 ;;		_color_read_Green
  4681 ;;		_color_read_Blue
  4682 ;;		_color_read_Clear
  4683 ;;		_clear_interrupt_flag
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text35
  4688   00202E                     __ptext35:
  4689                           	callstack 0
  4690   00202E                     _I2C_2_Master_Start:
  4691                           	callstack 23
  4692   00202E                     
  4693                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4694   00202E  EC62  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4695   002032                     
  4696                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4697   002032  010E               	movlb	14	; () banked
  4698   002034  81DA               	bsf	218,0,b	;volatile
  4699   002036                     
  4700                           ; BSR set to: 14
  4701   002036  0012               	return		;funcret
  4702   002038                     __end_of_I2C_2_Master_Start:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _I2C_2_Master_Idle *****************
  4706 ;; Defined at:
  4707 ;;		line 22 in file "i2c.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;Total ram usage:        1 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 5
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_I2C_2_Master_Start
  4732 ;;		_I2C_2_Master_RepStart
  4733 ;;		_I2C_2_Master_Stop
  4734 ;;		_I2C_2_Master_Write
  4735 ;;		_I2C_2_Master_Read
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text36
  4740   001EC4                     __ptext36:
  4741                           	callstack 0
  4742   001EC4                     _I2C_2_Master_Idle:
  4743                           	callstack 23
  4744   001EC4                     l145:
  4745   001EC4  010E               	movlb	14	; () banked
  4746   001EC6  B5D8               	btfsc	216,2,b	;volatile
  4747   001EC8  EF68  F00F         	goto	u861
  4748   001ECC  EF6A  F00F         	goto	u860
  4749   001ED0                     u861:
  4750   001ED0  EF62  F00F         	goto	l145
  4751   001ED4                     u860:
  4752   001ED4                     
  4753                           ; BSR set to: 14
  4754   001ED4  CEDA F008          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4755   001ED8  0E1F               	movlw	31
  4756   001EDA  1608               	andwf	??_I2C_2_Master_Idle^0,f,c
  4757   001EDC  A4D8               	btfss	status,2,c
  4758   001EDE  EF73  F00F         	goto	u871
  4759   001EE2  EF75  F00F         	goto	u870
  4760   001EE6                     u871:
  4761   001EE6  EF62  F00F         	goto	l145
  4762   001EEA                     u870:
  4763   001EEA                     
  4764                           ; BSR set to: 14
  4765   001EEA  0012               	return		;funcret
  4766   001EEC                     __end_of_I2C_2_Master_Idle:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _LowISR *****************
  4770 ;; Defined at:
  4771 ;;		line 75 in file "interrupts.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		wreg, status,2
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;Total ram usage:        3 bytes
  4790 ;; Hardware stack levels used: 1
  4791 ;; Hardware stack levels required when called: 4
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		Interrupt level 1
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	intcodelo
  4800   000018                     __pintcodelo:
  4801                           	callstack 0
  4802   000018                     _LowISR:
  4803                           	callstack 18
  4804                           
  4805                           ; BSR set to: 14
  4806                           ;incstack = 0
  4807   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4808   00001A  CFD8 F005          	movff	status,??_LowISR
  4809   00001E  CFE8 F006          	movff	wreg,??_LowISR+1
  4810   000022  CFE0 F007          	movff	bsr,??_LowISR+2
  4811   000026                     
  4812                           ;interrupts.c: 78:     if(TMR0IF){
  4813   000026  010E               	movlb	14	; () banked
  4814   000028  AB33               	btfss	51,5,b	;volatile
  4815   00002A  EF19  F000         	goto	i1u154_21
  4816   00002E  EF1B  F000         	goto	i1u154_20
  4817   000032                     i1u154_21:
  4818   000032  EF26  F000         	goto	i1l497
  4819   000036                     i1u154_20:
  4820   000036                     
  4821                           ; BSR set to: 14
  4822                           ;interrupts.c: 79:     TMR0H=0b00111100;
  4823   000036  0E3C               	movlw	60
  4824   000038  6ED4               	movwf	212,c	;volatile
  4825                           
  4826                           ;interrupts.c: 80:     TMR0L=0b10101111;
  4827   00003A  0EAF               	movlw	175
  4828   00003C  6ED3               	movwf	211,c	;volatile
  4829                           
  4830                           ;interrupts.c: 85:         TimerFlag=1;
  4831   00003E  0E00               	movlw	0
  4832   000040  0101               	movlb	1	; () banked
  4833   000042  6FDB               	movwf	(_TimerFlag+1)& (0+255),b
  4834   000044  0E01               	movlw	1
  4835   000046  6FDA               	movwf	_TimerFlag& (0+255),b
  4836   000048                     
  4837                           ; BSR set to: 1
  4838                           ;interrupts.c: 87:        TMR0IF=0;
  4839   000048  010E               	movlb	14	; () banked
  4840   00004A  9B33               	bcf	51,5,b	;volatile
  4841   00004C                     i1l497:
  4842                           
  4843                           ; BSR set to: 14
  4844   00004C  C007  FFE0         	movff	??_LowISR+2,bsr
  4845   000050  C006  FFE8         	movff	??_LowISR+1,wreg
  4846   000054  C005  FFD8         	movff	??_LowISR,status
  4847   000058  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4848   00005A  0010               	retfie	
  4849   00005C                     __end_of_LowISR:
  4850                           	callstack 0
  4851                           
  4852 ;; *************** function _HighISR *****************
  4853 ;; Defined at:
  4854 ;;		line 39 in file "interrupts.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;Total ram usage:        2 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 3
  4875 ;; This function calls:
  4876 ;;		i2_clear_interrupt_flag
  4877 ;; This function is called by:
  4878 ;;		Interrupt level 2
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	intcode
  4883   000008                     __pintcode:
  4884                           	callstack 0
  4885   000008                     _HighISR:
  4886                           	callstack 18
  4887                           
  4888                           ; BSR set to: 14
  4889                           ;incstack = 0
  4890   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4891   00000A  EF78  F00D         	goto	int_func
  4892                           
  4893                           	psect	intcode_body
  4894   001AF0                     __pintcode_body:
  4895                           	callstack 18
  4896   001AF0                     int_func:
  4897                           	callstack 18
  4898   001AF0                     
  4899                           ;interrupts.c: 42:     if(PIR0bits.INT1IF == 1 ) {
  4900   001AF0  010E               	movlb	14	; () banked
  4901   001AF2  A333               	btfss	51,1,b	;volatile
  4902   001AF4  EF7E  F00D         	goto	i2u153_41
  4903   001AF8  EF80  F00D         	goto	i2u153_40
  4904   001AFC                     i2u153_41:
  4905   001AFC  EFA3  F00D         	goto	i2l478
  4906   001B00                     i2u153_40:
  4907   001B00                     
  4908                           ; BSR set to: 14
  4909                           ;interrupts.c: 43:         card_detected = 1;
  4910   001B00  0E00               	movlw	0
  4911   001B02  0100               	movlb	0	; () banked
  4912   001B04  6FB5               	movwf	(_card_detected+1)& (0+255),b
  4913   001B06  0E01               	movlw	1
  4914   001B08  6FB4               	movwf	_card_detected& (0+255),b
  4915   001B0A                     
  4916                           ; BSR set to: 0
  4917                           ;interrupts.c: 44:         LATDbits.LATD7=1;
  4918   001B0A  8E7C               	bsf	124,7,c	;volatile
  4919   001B0C                     
  4920                           ; BSR set to: 0
  4921                           ;interrupts.c: 45:         _delay((unsigned long)((500)*(64000000/4000.0)));
  4922   001B0C  0E29               	movlw	41
  4923   001B0E  6E04               	movwf	(??_HighISR+1)^0,c
  4924   001B10  0E96               	movlw	150
  4925   001B12  6E03               	movwf	??_HighISR^0,c
  4926   001B14  0E7F               	movlw	127
  4927   001B16                     i2u199_47:
  4928   001B16  2EE8               	decfsz	wreg,f,c
  4929   001B18  D7FE               	bra	i2u199_47
  4930   001B1A  2E03               	decfsz	??_HighISR^0,f,c
  4931   001B1C  D7FC               	bra	i2u199_47
  4932   001B1E  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4933   001B20  D7FA               	bra	i2u199_47
  4934   001B22  F000               	nop	
  4935   001B24                     
  4936                           ;interrupts.c: 46:         LATDbits.LATD7=0;
  4937   001B24  9E7C               	bcf	124,7,c	;volatile
  4938   001B26                     
  4939                           ;interrupts.c: 47:         _delay((unsigned long)((500)*(64000000/4000.0)));
  4940   001B26  0E29               	movlw	41
  4941   001B28  6E04               	movwf	(??_HighISR+1)^0,c
  4942   001B2A  0E96               	movlw	150
  4943   001B2C  6E03               	movwf	??_HighISR^0,c
  4944   001B2E  0E7F               	movlw	127
  4945   001B30                     i2u200_47:
  4946   001B30  2EE8               	decfsz	wreg,f,c
  4947   001B32  D7FE               	bra	i2u200_47
  4948   001B34  2E03               	decfsz	??_HighISR^0,f,c
  4949   001B36  D7FC               	bra	i2u200_47
  4950   001B38  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4951   001B3A  D7FA               	bra	i2u200_47
  4952   001B3C  F000               	nop	
  4953   001B3E                     
  4954                           ;interrupts.c: 48:         clear_interrupt_flag();
  4955   001B3E  ECE5  F00F         	call	i2_clear_interrupt_flag	;wreg free
  4956   001B42                     
  4957                           ;interrupts.c: 49:         PIR0bits.INT1IF = 0;
  4958   001B42  010E               	movlb	14	; () banked
  4959   001B44  9333               	bcf	51,1,b	;volatile
  4960   001B46                     i2l478:
  4961                           
  4962                           ; BSR set to: 14
  4963   001B46  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4964   001B48  0011               	retfie		f
  4965   001B4A                     __end_of_HighISR:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function i2_clear_interrupt_flag *****************
  4969 ;; Defined at:
  4970 ;;		line 67 in file "interrupts.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4988 ;;Total ram usage:        0 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; Hardware stack levels required when called: 2
  4991 ;; This function calls:
  4992 ;;		i2_I2C_2_Master_Start
  4993 ;;		i2_I2C_2_Master_Stop
  4994 ;;		i2_I2C_2_Master_Write
  4995 ;; This function is called by:
  4996 ;;		_HighISR
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text39
  5001   001FCA                     __ptext39:
  5002                           	callstack 0
  5003   001FCA                     i2_clear_interrupt_flag:
  5004                           	callstack 18
  5005   001FCA                     
  5006                           ;interrupts.c: 68:     I2C_2_Master_Start();
  5007   001FCA  EC21  F010         	call	i2_I2C_2_Master_Start	;wreg free
  5008                           
  5009                           ;interrupts.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  5010   001FCE  0E52               	movlw	82
  5011   001FD0  EC07  F010         	call	i2_I2C_2_Master_Write
  5012                           
  5013                           ;interrupts.c: 70:     I2C_2_Master_Write(0b11100110);
  5014   001FD4  0EE6               	movlw	230
  5015   001FD6  EC07  F010         	call	i2_I2C_2_Master_Write
  5016                           
  5017                           ;interrupts.c: 71:     I2C_2_Master_Stop();
  5018   001FDA  EC1C  F010         	call	i2_I2C_2_Master_Stop	;wreg free
  5019   001FDE  0012               	return		;funcret
  5020   001FE0                     __end_ofi2_clear_interrupt_flag:
  5021                           	callstack 0
  5022                           
  5023 ;; *************** function i2_I2C_2_Master_Write *****************
  5024 ;; Defined at:
  5025 ;;		line 45 in file "i2c.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  data_byte       1    wreg     unsigned char 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  data_byte       1    1[COMRAM] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;Total ram usage:        1 bytes
  5044 ;; Hardware stack levels used: 1
  5045 ;; Hardware stack levels required when called: 1
  5046 ;; This function calls:
  5047 ;;		i2_I2C_2_Master_Idle
  5048 ;; This function is called by:
  5049 ;;		i2_clear_interrupt_flag
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text40
  5054   00200E                     __ptext40:
  5055                           	callstack 0
  5056   00200E                     i2_I2C_2_Master_Write:
  5057                           	callstack 18
  5058                           
  5059                           ;incstack = 0
  5060                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5061   00200E  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5062   002010                     
  5063                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5064   002010  EC76  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  5065   002014                     
  5066                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5067   002014  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5068   002018  0012               	return		;funcret
  5069   00201A                     __end_ofi2_I2C_2_Master_Write:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function i2_I2C_2_Master_Stop *****************
  5073 ;; Defined at:
  5074 ;;		line 39 in file "i2c.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 1
  5095 ;; This function calls:
  5096 ;;		i2_I2C_2_Master_Idle
  5097 ;; This function is called by:
  5098 ;;		i2_clear_interrupt_flag
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text41
  5103   002038                     __ptext41:
  5104                           	callstack 0
  5105   002038                     i2_I2C_2_Master_Stop:
  5106                           	callstack 18
  5107   002038                     
  5108                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5109   002038  EC76  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  5110   00203C                     
  5111                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5112   00203C  010E               	movlb	14	; () banked
  5113   00203E  85DA               	bsf	218,2,b	;volatile
  5114   002040                     
  5115                           ; BSR set to: 14
  5116   002040  0012               	return		;funcret
  5117   002042                     __end_ofi2_I2C_2_Master_Stop:
  5118                           	callstack 0
  5119                           
  5120 ;; *************** function i2_I2C_2_Master_Start *****************
  5121 ;; Defined at:
  5122 ;;		line 27 in file "i2c.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5140 ;;Total ram usage:        0 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 1
  5143 ;; This function calls:
  5144 ;;		i2_I2C_2_Master_Idle
  5145 ;; This function is called by:
  5146 ;;		i2_clear_interrupt_flag
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text42
  5151   002042                     __ptext42:
  5152                           	callstack 0
  5153   002042                     i2_I2C_2_Master_Start:
  5154                           	callstack 18
  5155   002042                     
  5156                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5157   002042  EC76  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  5158   002046                     
  5159                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5160   002046  010E               	movlb	14	; () banked
  5161   002048  81DA               	bsf	218,0,b	;volatile
  5162   00204A                     
  5163                           ; BSR set to: 14
  5164   00204A  0012               	return		;funcret
  5165   00204C                     __end_ofi2_I2C_2_Master_Start:
  5166                           	callstack 0
  5167                           
  5168 ;; *************** function i2_I2C_2_Master_Idle *****************
  5169 ;; Defined at:
  5170 ;;		line 22 in file "i2c.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;		None
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      void 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5188 ;;Total ram usage:        1 bytes
  5189 ;; Hardware stack levels used: 1
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		i2_I2C_2_Master_Start
  5194 ;;		i2_I2C_2_Master_Stop
  5195 ;;		i2_I2C_2_Master_Write
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text43
  5200   001EEC                     __ptext43:
  5201                           	callstack 0
  5202   001EEC                     i2_I2C_2_Master_Idle:
  5203                           	callstack 18
  5204   001EEC                     i2l145:
  5205   001EEC  010E               	movlb	14	; () banked
  5206   001EEE  B5D8               	btfsc	216,2,b	;volatile
  5207   001EF0  EF7C  F00F         	goto	i2u117_41
  5208   001EF4  EF7E  F00F         	goto	i2u117_40
  5209   001EF8                     i2u117_41:
  5210   001EF8  EF76  F00F         	goto	i2l145
  5211   001EFC                     i2u117_40:
  5212   001EFC                     
  5213                           ; BSR set to: 14
  5214   001EFC  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5215   001F00  0E1F               	movlw	31
  5216   001F02  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5217   001F04  A4D8               	btfss	status,2,c
  5218   001F06  EF87  F00F         	goto	i2u118_41
  5219   001F0A  EF89  F00F         	goto	i2u118_40
  5220   001F0E                     i2u118_41:
  5221   001F0E  EF76  F00F         	goto	i2l145
  5222   001F12                     i2u118_40:
  5223   001F12                     
  5224                           ; BSR set to: 14
  5225   001F12  0012               	return		;funcret
  5226   001F14                     __end_ofi2_I2C_2_Master_Idle:
  5227                           	callstack 0
  5228                           
  5229                           	psect	rparam
  5230   000000                     
  5231                           	psect	temp
  5232   000057                     btemp:
  5233                           	callstack 0
  5234   000057                     	ds	1
  5235   000000                     int$flags	set	btemp
  5236   000000                     wtemp8	set	btemp+1
  5237   000000                     ttemp5	set	btemp+1
  5238   000000                     ttemp6	set	btemp+4
  5239   000000                     ttemp7	set	btemp+8
  5240                           
  5241                           	psect	idloc
  5242                           
  5243                           ;Config register IDLOC0 @ 0x200000
  5244                           ;	unspecified, using default values
  5245   200000                     	org	2097152
  5246   200000  0FFF               	dw	4095
  5247                           
  5248                           ;Config register IDLOC1 @ 0x200002
  5249                           ;	unspecified, using default values
  5250   200002                     	org	2097154
  5251   200002  0FFF               	dw	4095
  5252                           
  5253                           ;Config register IDLOC2 @ 0x200004
  5254                           ;	unspecified, using default values
  5255   200004                     	org	2097156
  5256   200004  0FFF               	dw	4095
  5257                           
  5258                           ;Config register IDLOC3 @ 0x200006
  5259                           ;	unspecified, using default values
  5260   200006                     	org	2097158
  5261   200006  0FFF               	dw	4095
  5262                           
  5263                           ;Config register IDLOC4 @ 0x200008
  5264                           ;	unspecified, using default values
  5265   200008                     	org	2097160
  5266   200008  0FFF               	dw	4095
  5267                           
  5268                           ;Config register IDLOC5 @ 0x20000A
  5269                           ;	unspecified, using default values
  5270   20000A                     	org	2097162
  5271   20000A  0FFF               	dw	4095
  5272                           
  5273                           ;Config register IDLOC6 @ 0x20000C
  5274                           ;	unspecified, using default values
  5275   20000C                     	org	2097164
  5276   20000C  0FFF               	dw	4095
  5277                           
  5278                           ;Config register IDLOC7 @ 0x20000E
  5279                           ;	unspecified, using default values
  5280   20000E                     	org	2097166
  5281   20000E  0FFF               	dw	4095
  5282                           
  5283                           	psect	config
  5284                           
  5285                           ;Config register CONFIG1L @ 0x300000
  5286                           ;	External Oscillator mode Selection bits
  5287                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5288                           ;	Power-up default value for COSC bits
  5289                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5290   300000                     	org	3145728
  5291   300000  AA                 	db	170
  5292                           
  5293                           ;Config register CONFIG1H @ 0x300001
  5294                           ;	unspecified, using default values
  5295                           ;	Clock Out Enable bit
  5296                           ;	CLKOUTEN = 0x1, unprogrammed default
  5297                           ;	Clock Switch Enable bit
  5298                           ;	CSWEN = 0x1, unprogrammed default
  5299                           ;	Fail-Safe Clock Monitor Enable bit
  5300                           ;	FCMEN = 0x1, unprogrammed default
  5301   300001                     	org	3145729
  5302   300001  FF                 	db	255
  5303                           
  5304                           ;Config register CONFIG2L @ 0x300002
  5305                           ;	unspecified, using default values
  5306                           ;	Master Clear Enable bit
  5307                           ;	MCLRE = 0x1, unprogrammed default
  5308                           ;	Power-up Timer Enable bit
  5309                           ;	PWRTE = 0x1, unprogrammed default
  5310                           ;	Low-power BOR enable bit
  5311                           ;	LPBOREN = 0x1, unprogrammed default
  5312                           ;	Brown-out Reset Enable bits
  5313                           ;	BOREN = 0x3, unprogrammed default
  5314   300002                     	org	3145730
  5315   300002  FF                 	db	255
  5316                           
  5317                           ;Config register CONFIG2H @ 0x300003
  5318                           ;	unspecified, using default values
  5319                           ;	Brown Out Reset Voltage selection bits
  5320                           ;	BORV = 0x3, unprogrammed default
  5321                           ;	ZCD Disable bit
  5322                           ;	ZCD = 0x1, unprogrammed default
  5323                           ;	PPSLOCK bit One-Way Set Enable bit
  5324                           ;	PPS1WAY = 0x1, unprogrammed default
  5325                           ;	Stack Full/Underflow Reset Enable bit
  5326                           ;	STVREN = 0x1, unprogrammed default
  5327                           ;	Debugger Enable bit
  5328                           ;	DEBUG = 0x1, unprogrammed default
  5329                           ;	Extended Instruction Set Enable bit
  5330                           ;	XINST = 0x1, unprogrammed default
  5331   300003                     	org	3145731
  5332   300003  FF                 	db	255
  5333                           
  5334                           ;Config register CONFIG3L @ 0x300004
  5335                           ;	WDT Period Select bits
  5336                           ;	WDTCPS = 0x1F, unprogrammed default
  5337                           ;	WDT operating mode
  5338                           ;	WDTE = OFF, WDT Disabled
  5339   300004                     	org	3145732
  5340   300004  9F                 	db	159
  5341                           
  5342                           ;Config register CONFIG3H @ 0x300005
  5343                           ;	unspecified, using default values
  5344                           ;	WDT Window Select bits
  5345                           ;	WDTCWS = 0x7, unprogrammed default
  5346                           ;	WDT input clock selector
  5347                           ;	WDTCCS = 0x7, unprogrammed default
  5348   300005                     	org	3145733
  5349   300005  FF                 	db	255
  5350                           
  5351                           ;Config register CONFIG4L @ 0x300006
  5352                           ;	unspecified, using default values
  5353                           ;	Write Protection Block 0
  5354                           ;	WRT0 = 0x1, unprogrammed default
  5355                           ;	Write Protection Block 1
  5356                           ;	WRT1 = 0x1, unprogrammed default
  5357                           ;	Write Protection Block 2
  5358                           ;	WRT2 = 0x1, unprogrammed default
  5359                           ;	Write Protection Block 3
  5360                           ;	WRT3 = 0x1, unprogrammed default
  5361                           ;	Write Protection Block 3
  5362                           ;	WRT4 = 0x1, unprogrammed default
  5363                           ;	Write Protection Block 3
  5364                           ;	WRT5 = 0x1, unprogrammed default
  5365                           ;	Write Protection Block 3
  5366                           ;	WRT6 = 0x1, unprogrammed default
  5367                           ;	Write Protection Block 3
  5368                           ;	WRT7 = 0x1, unprogrammed default
  5369   300006                     	org	3145734
  5370   300006  FF                 	db	255
  5371                           
  5372                           ;Config register CONFIG4H @ 0x300007
  5373                           ;	unspecified, using default values
  5374                           ;	Configuration Register Write Protection bit
  5375                           ;	WRTC = 0x1, unprogrammed default
  5376                           ;	Boot Block Write Protection bit
  5377                           ;	WRTB = 0x1, unprogrammed default
  5378                           ;	Data EEPROM Write Protection bit
  5379                           ;	WRTD = 0x1, unprogrammed default
  5380                           ;	Scanner Enable bit
  5381                           ;	SCANE = 0x1, unprogrammed default
  5382                           ;	Low Voltage Programming Enable bit
  5383                           ;	LVP = 0x1, unprogrammed default
  5384   300007                     	org	3145735
  5385   300007  FF                 	db	255
  5386                           
  5387                           ;Config register CONFIG5L @ 0x300008
  5388                           ;	unspecified, using default values
  5389                           ;	UserNVM Program Memory Code Protection bit
  5390                           ;	CP = 0x1, unprogrammed default
  5391                           ;	DataNVM Memory Code Protection bit
  5392                           ;	CPD = 0x1, unprogrammed default
  5393   300008                     	org	3145736
  5394   300008  FF                 	db	255
  5395                           
  5396                           ;Config register CONFIG5H @ 0x300009
  5397                           ;	unspecified, using default values
  5398   300009                     	org	3145737
  5399   300009  FF                 	db	255
  5400                           
  5401                           ;Config register CONFIG6L @ 0x30000A
  5402                           ;	unspecified, using default values
  5403                           ;	Table Read Protection Block 0
  5404                           ;	EBTR0 = 0x1, unprogrammed default
  5405                           ;	Table Read Protection Block 1
  5406                           ;	EBTR1 = 0x1, unprogrammed default
  5407                           ;	Table Read Protection Block 2
  5408                           ;	EBTR2 = 0x1, unprogrammed default
  5409                           ;	Table Read Protection Block 3
  5410                           ;	EBTR3 = 0x1, unprogrammed default
  5411                           ;	Table Read Protection Block 4
  5412                           ;	EBTR4 = 0x1, unprogrammed default
  5413                           ;	Table Read Protection Block 5
  5414                           ;	EBTR5 = 0x1, unprogrammed default
  5415                           ;	Table Read Protection Block 6
  5416                           ;	EBTR6 = 0x1, unprogrammed default
  5417                           ;	Table Read Protection Block 7
  5418                           ;	EBTR7 = 0x1, unprogrammed default
  5419   30000A                     	org	3145738
  5420   30000A  FF                 	db	255
  5421                           
  5422                           ;Config register CONFIG6H @ 0x30000B
  5423                           ;	unspecified, using default values
  5424                           ;	Boot Block Table Read Protection bit
  5425                           ;	EBTRB = 0x1, unprogrammed default
  5426   30000B                     	org	3145739
  5427   30000B  FF                 	db	255
  5428                           tosu	equ	0xFFF
  5429                           tosh	equ	0xFFE
  5430                           tosl	equ	0xFFD
  5431                           stkptr	equ	0xFFC
  5432                           pclatu	equ	0xFFB
  5433                           pclath	equ	0xFFA
  5434                           pcl	equ	0xFF9
  5435                           tblptru	equ	0xFF8
  5436                           tblptrh	equ	0xFF7
  5437                           tblptrl	equ	0xFF6
  5438                           tablat	equ	0xFF5
  5439                           prodh	equ	0xFF4
  5440                           prodl	equ	0xFF3
  5441                           indf0	equ	0xFEF
  5442                           postinc0	equ	0xFEE
  5443                           postdec0	equ	0xFED
  5444                           preinc0	equ	0xFEC
  5445                           plusw0	equ	0xFEB
  5446                           fsr0h	equ	0xFEA
  5447                           fsr0l	equ	0xFE9
  5448                           wreg	equ	0xFE8
  5449                           indf1	equ	0xFE7
  5450                           postinc1	equ	0xFE6
  5451                           postdec1	equ	0xFE5
  5452                           preinc1	equ	0xFE4
  5453                           plusw1	equ	0xFE3
  5454                           fsr1h	equ	0xFE2
  5455                           fsr1l	equ	0xFE1
  5456                           bsr	equ	0xFE0
  5457                           indf2	equ	0xFDF
  5458                           postinc2	equ	0xFDE
  5459                           postdec2	equ	0xFDD
  5460                           preinc2	equ	0xFDC
  5461                           plusw2	equ	0xFDB
  5462                           fsr2h	equ	0xFDA
  5463                           fsr2l	equ	0xFD9
  5464                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        18
    BSS         249
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      86
    BANK0           160     30     150
    BANK1           256    200     220
    BANK2           256      0     120
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2426$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2377$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2377$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK1[20]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S525DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S525DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _Interrupts_init->_set_interrupt_threshold
    _set_interrupt_threshold->_color_writetoaddr
    _enable_color_interrupt->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _clear_interrupt_flag->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_clear_interrupt_flag->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               216   216      0   14739
                                             28 BANK0      2     2      0
                                             13 BANK1    187   187      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _LEDSon_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7586
                                             16 BANK0     12     0     12
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7100
                                             77 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6639
                                             69 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5072
                                             34 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     453
                                             25 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              7 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              7 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3045
                                             20 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1422
                                             13 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              8 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              8 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             11 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0    1908
             _enable_color_interrupt
            _set_interrupt_threshold
 ---------------------------------------------------------------------------------
 (2) _set_interrupt_threshold                              8     2      6    1136
                                             11 COMRAM     8     2      6
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _enable_color_interrupt                               0     0      0     772
               _clear_interrupt_flag
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              9 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _clear_interrupt_flag                                 0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             2     2      0      22
                                              2 COMRAM     2     2      0
             i2_clear_interrupt_flag
 ---------------------------------------------------------------------------------
 (11) i2_clear_interrupt_flag                              0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
     _enable_color_interrupt
       _clear_interrupt_flag
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _set_interrupt_threshold
       _color_writetoaddr
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_clear_interrupt_flag
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      78       9       46.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C8      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      56       1       91.5%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRllhhhl     37      0       0      43        0.0%
BITBIGSFRllhhhl     2D      0       0      46        0.0%
BITBIGSFRllllhl     2A      0       0      54        0.0%
BITBIGSFRllllll     23      0       0      61        0.0%
BITBIGSFRhhhlh      1D      0       0      33        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRllhhhl     11      0       0      48        0.0%
BITBIGSFRllhhl      11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllhhhl      C      0       0      47        0.0%
BITBIGSFRllllhl      9      0       0      58        0.0%
BITBIGSFRllhhhl      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      60        0.0%
BITBIGSFRllllhh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRlllhl       5      0       0      52        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      57        0.0%
BITBIGSFRlllhh       3      0       0      51        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRllllll      2      0       0      62        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllllhl      1      0       0      59        0.0%
BITBIGSFRllhhhl      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     240      63        0.0%
DATA                 0      0     240       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 11:36:53 2022

                    _color_read_Red 1BF2                     _color_read_Blue 1CE2  
                                l22 1F9A                                  l31 1D30  
                                l25 1C40                                  l34 1CE0  
                                l19 1E68                                  l28 1C90  
                                l86 152A                                  l79 193E  
                                bsr 000FE0                 ___wmul@multiplicand 000A  
                  _color_read_Clear 1C92                    _color_read_Green 1C42  
                 ??_Interrupts_init 0014                                 l142 1EC2  
                               l151 2036                                 l160 200C  
                               l145 1EC4                                 l154 2022  
                               l163 1DB6                                 l148 1EEA  
                               l500 1F38                                 l157 202C  
                               l266 1F5A                                 l614 13BE  
                               l375 1F7A                                 l472 1E34  
                               l384 1F9E                                 l481 2000  
                               l393 1E98                                 l491 1FC8  
                               l387 1FB2                                 l627 168E  
                               l488 1A94                                 l991 1A24  
                               l998 1A2C                                 u860 1ED4  
                               u861 1ED0                                 u870 1EEA  
                               u871 1EE6                                 _abs 1DB8  
                               _pad 1940                                 wreg 000FE8  
                              l1211 19B8                                ?_abs 001A  
                              l1230 1092                                l1207 1962  
                              l1216 0EA2                                l1218 0EAA  
                              l1219 0EF0                                l1243 1BF0  
                              l3100 127C                                l1237 17EC  
                              l2206 1EC4                                l2310 2032  
                              l3110 12D2                                l3102 129C  
                              l1175 1DEE                                l1255 18B6  
                              l1263 1D74                                l2208 1ED4  
                              l2312 2004                                l3120 1354  
                              l3112 12E6                                l3104 12A0  
                              l3200 0EC8                                l1185 1AEE  
                              l2314 2008                                l2410 1E9A  
                              l3130 139E                                l3122 1356  
                              l3114 12F4                                l3106 12AC  
                              l1178 1DF6                                l1266 204C  
                              l3210 0F02                                l3202 0ED8  
                              l2308 202E                                l2316 2024  
                              l2420 1EB0                                l2412 1EA4  
                              l3124 1368                                l3116 1306  
                              l3108 12CA                                l3140 155E  
                              l3212 0F08                                l3220 0FFA  
                              l3204 0EE4                                l3300 10AC  
                              l2318 2028                                l2414 1EAA  
                              l2430 1D84                                l2422 201A  
                              l3118 1334                                l3126 136E  
                              l3150 15B6                                l3142 1562  
                              l3134 152C                                l3070 181C  
                              l3230 1062                                l3222 1014  
                              l3214 0F8A                                l3206 0EEC  
                              l3310 10E8                                l3302 10BE  
                              l2416 1EAC                                l2520 1E54  
                              l2432 1D8C                                l2424 201E  
                              l2440 1F9E                                l3128 137E  
                              l3160 1638                                l3152 15CA  
                              l3144 1570                                l3136 1530  
                              l3072 183A                                l3064 17EE  
                              l3080 1D3E                                l3232 1072  
                              l3224 1032                                l3216 0F90  
                              l3208 0EF8                                l3240 16C6  
                              l3320 1120                                l3312 10F0  
                              l3304 10C6                                l2450 1A46  
                              l2418 1EAE                                l2522 1E5E  
                              l2514 1E36                                l2434 1DB2  
                              l2426 1D78                                l2530 1C42  
                              l2442 1FAE                                l3090 1238  
                              l3154 15D8                                l3162 163E  
                              l3146 1590                                l3138 153E  
                              l3074 1870                                l3066 1800  
                              l3082 1D50                                l3170 1940  
                              l3226 104C                                l3218 0F96  
                              l3250 1728                                l3242 16D4  
                              l3330 112A                                l3322 1120  
                              l3314 10F6                                l3306 10CE  
                              l2372 1F7E                                l2444 1FF2  
                              l2460 1A86                                l2452 1A58  
                              l2516 1E3A                                l2436 1DB4  
                              l2428 1D7C                                l2532 1C88  
                              l2524 1BF2                                l2700 1E6A  
                              l3092 123C                                l3164 164E  
                              l3156 1606                                l3148 15AE  
                              l3068 1812                                l3084 1D54  
                              l3180 1986                                l3172 194E  
                              l3228 105C                                l3252 177E  
                              l3244 16D8                                l3260 17C0  
                              l3236 1690                                l3340 113C  
                              l3332 112A                                l3324 1120  
                              l3316 1102                                l3308 10E0  
                              l2374 1FB4                                l2462 1A8A  
                              l2454 1A5C                                l2446 1A2E  
                              l2518 1E44                                l2542 1C92  
                              l2526 1C38                                l2550 18C0  
                              l2702 1E6E                                l2470 19BA  
                              l3094 124A                                l3166 166E  
                              l3158 1626                                l3086 1DB8  
                              l3078 1D32                                l3182 19A4  
                              l3174 195A                                l3190 0E5C  
                              l3246 16E8                                l3238 16B8  
                              l3270 1BC6                                l3350 1192  
                              l3342 113E                                l3334 1136  
                              l3326 1120                                l3318 110E  
                              l2456 1A66                                l2448 1A42  
                              l2536 1CE2                                l2544 1CD8  
                              l2560 1924                                l2552 18EA  
                              l2704 1E7C                                l2480 19F2  
                              l2472 19C2                                l2464 1F14  
                              l3096 126A                                l3088 1DD2  
                              l3176 196E                                l3192 0E7C  
                              l3184 0E18                                l3256 17AE  
                              l3248 1708                                l3272 1BE6  
                              l3280 1AB0                                l3360 11C8  
                              l3352 119C                                l3344 1152  
                              l3336 1138                                l3328 1120  
                              l2458 1A74                                l2650 1F3A  
                              l2538 1D28                                l2562 1926  
                              l2554 190E                                l2706 1E80  
                              l2490 1A1E                                l2482 19F8  
                              l2474 19D4                                l2466 1F30  
                              l2570 13C0                                l3098 126E  
                              l3178 1982                                l3194 0E96  
                              l3186 0E38                                l3266 1B9E  
                              l3282 1AB8                                l3362 11D4  
                              l3346 1156                                l3354 11A4  
                              l3338 113A                                l3290 1098  
                              l2564 1930                                l2556 1918  
                              l2548 18B8                                l2660 1F74  
                              l2652 1F5C                                l2484 1A0E  
                              l2476 19DC                                l2580 148A  
                              l2572 13DC                                l3196 0EB2  
                              l3188 0E4C                                l3268 1BAA  
                              l3284 1AD6                                l3276 1A96  
                              l3364 120A                                l3356 11B0  
                              l3348 116A                                l3292 109C  
                              l2670 1E1A                                l2566 1932  
                              l2558 191A                                l2662 1F76  
                              l2654 1F66                                l2486 1A16  
                              l2478 19E4                                l2582 14A6  
                              l2574 1430                                l3198 0EC2  
                              l3278 1AA8                                l3366 1216  
                              l3358 11BC                                l3294 10A0  
                              l2680 1E2C                                l2672 1E1E  
                              l2568 193C                                l2664 1F78  
                              l2656 1F68                                l2488 1A18  
                              l2584 14EA                                l2576 1444  
                              l3296 10A4                                l3288 1094  
                              l2682 1E2E                                l2674 1E24  
                              l2666 1DF8                                l2658 1F6A  
                              l2578 1448                                l3298 10A8  
                              l2684 1E30                                l2676 1E28  
                              l2668 1E18                                l2686 1E32  
                              l2678 1E2A                                ?_pad 0018  
                              STR_1 0E01                                u1210 1FAE  
                              u1211 1FAA                                u1220 1A58  
                      ?_LEDSon_init 0001                                u1221 1A54  
                              u1230 1A86                                u1231 1A82  
                              u1208 1DA2                                u1240 19D4  
                              u1241 19D0                                u1250 19F2  
                              u1251 19EE                                u1260 1A0E  
                              u1261 1A0A                                u1190 1DA0  
                              u1350 1E98                                u1191 1D98  
                              u1351 1E94                                u1280 13DC  
                              u1600 1DD2                        _BAUD4CONbits 000EE9  
                              u1281 13D8                                u1601 1DCE  
                              u1290 14A6                                u1610 124A  
                              u1291 14A2                                u1611 1246  
                              u1620 127C                                u1700 15AE  
                              u1621 1278                                u1701 15AA  
                              u1710 15D8                                u1550 1800  
                              u1631 12A6                                u1711 15D4  
                              u1551 17FC                                u1640 12CA  
                              u1720 1606                                u1560 1812  
                              u1800 0EC2                                u1641 12C6  
                              u1721 1602                                u1561 180E  
                              u1801 0EBE                                u1650 12F4  
                              u1730 164E                                u1570 183A  
                              u1810 0ED8                                _T2PR 000FBC  
                              u1651 12F0                                u1731 164A  
                              u1571 1836                                u1811 0ED4  
                              u1660 1334                                u1580 1870  
                              u1740 194E                                u1820 1014  
                              u1661 1330                                u1581 186C  
                              u1741 194A                                u1821 1010  
                              u1901 1118                                u1670 137E  
                              u1590 1D74                                u1750 19A4  
                              u1830 1032                                u1671 137A  
                              u1591 1D70                                u1751 19A0  
                              u1831 102E                                u1911 1130  
                              u1680 153E                                u1840 104C  
                              u1760 0E48                                u1920 1152  
                              u1681 153A                                u1841 1048  
                              u1761 0E42                                u1921 114E  
                              u1690 1570                                u1850 105C  
                              u1770 0E4A                                u1930 116A  
                              u1691 156C                                u1851 1058  
                              u1931 1166                                u1780 0E5C  
                              u1860 16B8                                u1940 117E  
                              u1781 0E58                                u1861 16B4  
                              u1941 1174                                u1790 0E96  
                              u1870 1708                                u1791 0E92  
                              u1871 1704                                u1880 1728  
                              u1881 1724                                u1890 1BE6  
                              u1891 1BE2                                u1958 1182  
                              u1977 1222                                u1987 1E4A  
                              abs@a 001A                                _dbuf 00B8  
                              _main 1094                                _dtoa 0E18  
                              _prec 0050                                pad@i 001F  
                              pad@p 001C                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 0021  
                              fsr2l 000FD9                                btemp 0057  
                              prodh 000FF4                                prodl 000FF3  
                              start 005C              __end_of_color_read_Red 1C42  
                   __end_of_HighISR 1B4A                _response_in_progress 00B6  
                      ___param_bank 000000                               ??_abs 001C  
                             ??_pad 001E                     __end_of___aodiv 13C0  
                             ?_main 0001                               ?_dtoa 0023  
                   __end_of___aomod 1690                     __end_of___lwdiv 1A2E  
                             i2l151 204A                               i2l160 2018  
                             i2l145 1EEC                               i2l148 1F12  
                             i2l157 2040                               i1l497 004C  
                             i2l491 1FDE                               i2l478 1B46  
                      vfpfcnvrt@fmt 0048                               _TMR0H 000FD4  
                             _TMR0L 000FD3             ?_enable_color_interrupt 0001  
                      main@red_read 01AB             __end_of_sendCharSerial4 1FB4  
        __end_of_I2C_2_Master_Start 2038          __end_of_I2C_2_Master_Write 200E  
                             _flags 0052                               _fputc 17EE  
                             _fputs 1D32                               pad@fp 0018  
                             _width 00B0                               _putch 204C  
                             dtoa@d 0025                               dtoa@i 0044  
                             dtoa@n 003B                               dtoa@p 0037  
                             dtoa@s 0043                               dtoa@w 0039  
                             tablat 000FF5                               plusw1 000FE3  
                             plusw2 000FDB                               ttemp5 0058  
                             ttemp6 005B                               ttemp7 005F  
                             status 000FD8                               wtemp8 0058  
                   __end_of_sprintf 1AF0             __end_of_color_read_Blue 1D32  
             _I2C_2_Master_RepStart 201A                     ?_color_read_Red 000C  
                   __initialization 1B4A                        __end_of_main 1238  
                      __end_of_dtoa 1094      __end_of_enable_color_interrupt 2002  
                            ??_main 00F4                              ??_dtoa 002D  
                     __activetblptr 000003                       main@blue_read 01AF  
                      ?_setMotorPWM 0015                              ?_fputc 0008  
                            ?_fputs 0011                              _CCPR1H 000FAA  
                            _CCPR2H 000FA6                              _CCPR3H 000F25  
                            _CCPR4H 000F21                      main@TimerCount 01B3  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            i1l3060 0036                              i1l3062 0048  
                            i1l3058 0026                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            _RE4PPS 000E76                              i2l3050 1B24  
                            i2l3042 1AF0                              i2l3052 1B26  
                            i2l3044 1B00                              i2l2406 1EEC  
                            i2l2502 2042                              i2l2510 2010  
                            i2l3054 1B3E                              i2l3046 1B0A  
                            i2l2408 1EFC                              i2l2504 2046  
                            i2l2512 2014                              i2l3056 1B42  
                            i2l3048 1B0C                              i2l2506 2038  
                            i2l2508 203C                              i2l2716 1FCA  
                            _RG6PPS 000E88                           ??_HighISR 0003  
          __end_of_color_click_init 1E6A                              _TMR0IF 00719D  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                            _LowISR 0018                        _CCPTMRS0bits 000FAD  
                      vfprintf@cfmt 004E                           ??___aodiv 0018  
                         ??___aomod 0018                              ___wmul 1F14  
                         ??___lwdiv 0012                              clear_0 1B70  
                            clear_1 1B82                              clear_2 1B8E  
                            isa$std 000001                              pad@buf 001A  
                            dtoa@fp 0023        __end_of_clear_interrupt_flag 1FCA  
                            fputc@c 0008                              fputs@c 0015  
                            fputs@i 0016                              fputs@s 0011  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                  ?_sendCharSerial4 0001                              putch@c 0001  
                  __end_of_vfprintf 1BF2                   ??_initDCmotorsPWM 0008  
                         ??_sprintf 0050             ?i2_clear_interrupt_flag 0001  
                        __accesstop 0060             __end_of__initialization 1B94  
          __end_of_color_read_Clear 1CE2            __end_of_color_read_Green 1C92  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                  ?_color_read_Blue 000C                     _Interrupts_init 1DF8  
                    __pcstackCOMRAM 0001                        __pidataBANK1 1FE0  
           _set_interrupt_threshold 1A2E                       __end_of_fputc 18B8  
                     __end_of_fputs 1D76                       __end_of_putch 204E  
                    main@clear_read 01B1      __end_ofi2_clear_interrupt_flag 1FE0  
                           ??_fputc 000C                             ??_fputs 0015  
                           ??_putch 0008                          __pbssBANK0 0060  
                        __pbssBANK1 01DA                          __pbssBANK2 0200  
                           ?_LowISR 0001                   _color_writetoaddr 1F7C  
                      _T2CLKCONbits 000FBF                  ?_color_writetoaddr 000A  
                           ?___wmul 0008                 ??_color_writetoaddr 000B  
                           _INT1PPS 000DF1                      main@green_read 01AD  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
       set_interrupt_threshold@AIHT 000E         set_interrupt_threshold@AILT 000C  
           __end_of_Interrupts_init 1E36              color_writetoaddr@value 000A  
                  ??_color_read_Red 000E                             _HighISR 0008  
         __end_of_color_writetoaddr 1F9C                _clear_interrupt_flag 1FB4  
                _I2C_2_Master_Start 202E                          _initUSART4 1F5C  
               i2_I2C_2_Master_Idle 1EEC                  _I2C_2_Master_Write 2002  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 2038  
                           __Lparam 0000                   color_read_Red@tmp 0011  
         ??_set_interrupt_threshold 0012             sendStringSerial4@string 0009  
                           ___aodiv 1238                             ___aomod 152C  
               ?_I2C_2_Master_Start 0001                             ___lwdiv 19BA  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 00E2  
                      __psmallconst 0E00                             __pcinit 1B4A  
                           __ramtop 0E00                             __ptext0 1094  
                           __ptext1 1A96                             __ptext2 1B9E  
                           __ptext3 1690                             __ptext4 0E18  
                           __ptext5 1940                             __ptext6 1D32  
                           __ptext7 17EE                             __ptext8 204C  
                           __ptext9 1DB8                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                ?i2_I2C_2_Master_Stop 0001  
                         _T2HLTbits 000FBE                       _RxBufWriteCnt 0056  
                           main@buf 0197                             _sprintf 1A96  
              ??_I2C_2_Master_Start 0009                ??_I2C_2_Master_Write 0009  
                    __pintcode_body 1AF0                end_of_initialization 1B94  
                           fputc@fp 000A                             int_func 1AF0  
                           fputs@fp 0013                   ?_color_click_init 0001  
             ?_clear_interrupt_flag 0001                  ??_color_click_init 000C  
                     _card_detected 00B4                   __end_of_vfpfcnvrt 17EE  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                    vfpfcnvrt@convarg 00D8  
                        main@F14645 01C8                          main@F14658 0200  
                        ??_vfprintf 004E                     _initDCmotorsPWM 18B8  
                setMotorPWM@negDuty 001A               ??i2_I2C_2_Master_Idle 0001  
             ??i2_I2C_2_Master_Stop 0002     __end_of_set_interrupt_threshold 1A96  
                         _TRISAbits 000F81                  setMotorPWM@posDuty 0019  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                 main@expected_values 0185  
          color_writetoaddr@address 000B             ??_I2C_2_Master_RepStart 0009  
                  ?_Interrupts_init 0001                         _CCP1CONbits 000FAB  
                 ?_color_read_Clear 000C                        _EUSART4RXbuf 009C  
                      _EUSART4TXbuf 0060                         _CCP2CONbits 000FA7  
                 ?_color_read_Green 000C                         _CCP3CONbits 000F26  
                       ?_initUSART4 0001                         _CCP4CONbits 000F22  
         sendCharSerial4@charToSend 0008                          main@motorL 01B6  
                        main@motorR 01BF                  ??_color_read_Clear 000E  
                ??_color_read_Green 000E                      __end_of_LowISR 005C  
                       vfpfcnvrt@ap 004A                         vfpfcnvrt@cp 00E0  
                       vfpfcnvrt@fp 0046                      __end_of___wmul 1F3A  
               color_read_Clear@tmp 0011                 start_initialization 1B4A  
                       __end_of_abs 1DF8                         __end_of_pad 19BA  
                     _TxBufWriteCnt 0054                       ??_LEDSon_init 0008  
            ??_clear_interrupt_flag 000A                 color_read_Green@tmp 0011  
                          ??_LowISR 0005             __end_of_initDCmotorsPWM 1940  
                       vfprintf@fmt 00E4                           _TimerFlag 01DA  
          ??_enable_color_interrupt 000C                            ??___wmul 000C  
                       __pdataBANK1 01C8       i2I2C_2_Master_Write@data_byte 0002  
      __end_ofi2_I2C_2_Master_Start 204C        __end_ofi2_I2C_2_Master_Write 201A  
                       __pbssCOMRAM 0050                       __pcstackBANK0 00D8  
                     __pcstackBANK1 0100                    ___aodiv@dividend 0008  
                          ?_HighISR 0001                           _card_seen 00B2  
               __end_of_LEDSon_init 1F5C                    ___lwdiv@dividend 000E  
                         _dtoa$2454 0035                           __pintcode 0008  
                          ?___aodiv 0008                            ?___aomod 0008  
                  ___aodiv@quotient 001A                            ?___lwdiv 000E  
                       __pintcodelo 0018                I2C_2_Master_Read@ack 000A  
              I2C_2_Master_Read@tmp 000B                         __smallconst 0E00  
                 _I2C_2_Master_Idle 1EC4                   _I2C_2_Master_Init 1E9A  
                 _I2C_2_Master_Read 1D76                   _I2C_2_Master_Stop 2024  
                      _RxBufReadCnt 0055                 main@ReturnHomeArray 010D  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0017  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 0012  
                          ?_sprintf 00E8                   _sendStringSerial4 1E6A  
               ??_I2C_2_Master_Idle 0008                 ??_I2C_2_Master_Init 0008  
               ??_I2C_2_Master_Read 0009  set_interrupt_threshold@persistence 0010  
                    ___wmul@product 000C                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0009                            _LATDbits 000F7C  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                  ?_sendStringSerial4 0009  
                          _PIE4bits 000E2D                            i1u154_20 0036  
                          i1u154_21 0032                            i2u200_47 1B30  
                          i2u117_40 1EFC                            i2u117_41 1EF8  
                          i2u118_40 1F12                            i2u118_41 1F0E  
                          i2u153_40 1B00                            i2u153_41 1AFC  
                          _PIR0bits 000E33                            _PIR4bits 000E37  
                          i2u199_47 1B16                    ?_initDCmotorsPWM 0001  
                 ??_sendCharSerial4 0008                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 000B                            _SSP2STAT 000ED8  
                         _vfpfcnvrt 1690           __end_of_I2C_2_Master_Idle 1EEC  
         __end_of_I2C_2_Master_Init 1EC4           __end_of_I2C_2_Master_Read 1DB8  
                 ___wmul@multiplier 0008           __end_of_I2C_2_Master_Stop 202E  
          ??i2_clear_interrupt_flag 0003                        setMotorPWM@m 0015  
       I2C_2_Master_Write@data_byte 0009                   ??_color_read_Blue 000E  
                      _TxBufReadCnt 0053                           copy_data0 1B5E  
         __end_of_sendStringSerial4 1E9A                         _LEDSon_init 1F3A  
     __end_of_I2C_2_Master_RepStart 2024                  color_read_Blue@tmp 0011  
          ?_set_interrupt_threshold 000C                 __end_of_setMotorPWM 152C  
                      ??_initUSART4 0008                i2_I2C_2_Master_Start 2042  
              i2_I2C_2_Master_Write 200E                            __Hrparam 0000  
                        vfprintf@ap 00E6                            __Lrparam 0000  
                        vfprintf@fp 00E2         __end_ofi2_I2C_2_Master_Idle 1F14  
       __end_ofi2_I2C_2_Master_Stop 2042                          ?_vfpfcnvrt 0046  
                   ___aodiv@divisor 0010                     ___aodiv@counter 0018  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        sprintf@fmt 00EA                     ___lwdiv@divisor 0010  
                __end_of_initUSART4 1F7C                     ___lwdiv@counter 0014  
                          __ptext10 152C                            __ptext11 1238  
                          __ptext20 1C42                            __ptext12 13C0  
                          __ptext21 1C92                            __ptext13 1F14  
            _enable_color_interrupt 1FF2                            __ptext30 1FF2  
                          __ptext22 1CE2                            __ptext14 19BA  
                          __ptext31 1F7C                            __ptext23 201A  
                          __ptext15 1E6A                            __ptext40 200E  
                          __ptext32 1FB4                            __ptext24 1D76  
                          __ptext16 1F9C                            __ptext41 2038  
                          __ptext33 2002                            __ptext25 1E36  
                          __ptext17 1F5C                            __ptext42 2042  
                          __ptext34 2024                            __ptext26 1E9A  
                          __ptext18 18B8                            __ptext43 1EEC  
                          __ptext35 202E                            __ptext27 1F3A  
                          __ptext19 1BF2                            __ptext36 1EC4  
                          __ptext28 1DF8                            __ptext29 1A2E  
                          __ptext39 1FCA                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0057  
                          _vfprintf 1B9E                    ___aomod@dividend 0008  
                        _INTCONbits 000FF2        _set_interrupt_threshold$1930 0012  
      _set_interrupt_threshold$1931 0013                         _setMotorPWM 13C0  
                          intlevel1 0000                            intlevel2 0000  
                         sprintf@ap 0100                     ___aomod@divisor 0010  
                       ??_vfpfcnvrt 004C                     ___aomod@counter 0018  
                  _color_click_init 1E36                            sprintf@f 0102  
                          sprintf@s 00E8                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C                          _TX4STAbits 000EE8  
                      ___aodiv@sign 0019                     _sendCharSerial4 1F9C  
            ??i2_I2C_2_Master_Start 0002              ??i2_I2C_2_Master_Write 0002  
            i2_clear_interrupt_flag 1FCA                        ___aomod@sign 0019  
                      main@PWMcycle 01B5  
