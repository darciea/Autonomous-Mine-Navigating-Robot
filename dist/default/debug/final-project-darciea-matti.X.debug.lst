

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 10:35:39 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Version 2.35
    31                           ; Generated 05/05/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F67K40 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   01FB0B                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for main@F14298
    71   01FB0B  11                 	db	17
    72   01FB0C  02                 	db	2
    73   01FB0D  0C                 	db	12
    74   01FB0E  0C                 	db	12
    75   01FB0F  0A                 	db	10
    76   01FB10  0B                 	db	11
    77   01FB11  0C                 	db	12
    78   01FB12  0E                 	db	14
    79   01FB13  10                 	db	16
    80   000000                     _LATHbits	set	3968
    81   000000                     _TRISAbits	set	3969
    82   000000                     _TRISFbits	set	3974
    83   000000                     _LATGbits	set	3967
    84   000000                     _TRISDbits	set	3972
    85   000000                     _TRISGbits	set	3975
    86   000000                     _SSP2CON2bits	set	3802
    87   000000                     _SSP2CLKPPS	set	3612
    88   000000                     _SSP2DATPPS	set	3613
    89   000000                     _RC7PPS	set	3689
    90   000000                     _RE2PPS	set	3700
    91   000000                     _TRISCbits	set	3971
    92   000000                     _TRISEbits	set	3973
    93   000000                     _TRISHbits	set	3976
    94   000000                     _T2PR	set	4028
    95   000000                     _T2CONbits	set	4029
    96   000000                     _CCPR2H	set	4006
    97   000000                     _CCPR1H	set	4010
    98   000000                     _RE4PPS	set	3702
    99   000000                     _RG6PPS	set	3720
   100   000000                     _RD5PPS	set	3695
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _CCPR4H	set	3873
   105   000000                     _CCPR3H	set	3877
   106   000000                     _T2CLKCONbits	set	4031
   107   000000                     _T2HLTbits	set	4030
   108   000000                     _CCP1CONbits	set	4011
   109   000000                     _CCPTMRS0bits	set	4013
   110   000000                     _CCP2CONbits	set	4007
   111   000000                     _LATAbits	set	3961
   112   000000                     _LATDbits	set	3964
   113   000000                     _CCP3CONbits	set	3878
   114   000000                     _CCP4CONbits	set	3874
   115   000000                     _SSP2CON2	set	3802
   116   000000                     _SSP2STAT	set	3800
   117   000000                     _SSP2BUF	set	3797
   118   000000                     _RD6PPS	set	3696
   119   000000                     _LATFbits	set	3966
   120                           
   121                           ; #config settings
   122                           
   123                           	psect	cinit
   124   01FBA6                     __pcinit:
   125                           	callstack 0
   126   01FBA6                     start_initialization:
   127                           	callstack 0
   128   01FBA6                     __initialization:
   129                           	callstack 0
   130                           
   131                           ; Initialize objects allocated to COMRAM (9 bytes)
   132                           ; load TBLPTR registers with __pidataCOMRAM
   133   01FBA6  0E0B               	movlw	low __pidataCOMRAM
   134   01FBA8  6EF6               	movwf	tblptrl,c
   135   01FBAA  0EFB               	movlw	high __pidataCOMRAM
   136   01FBAC  6EF7               	movwf	tblptrh,c
   137   01FBAE  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   138   01FBB0  6EF8               	movwf	tblptru,c
   139   01FBB2  EE00  F032         	lfsr	0,__pdataCOMRAM
   140   01FBB6  EE10 F009          	lfsr	1,9
   141   01FBBA                     copy_data0:
   142   01FBBA  0009               	tblrd		*+
   143   01FBBC  CFF5 FFEE          	movff	tablat,postinc0
   144   01FBC0  50E5               	movf	postdec1,w,c
   145   01FBC2  50E1               	movf	fsr1l,w,c
   146   01FBC4  E1FA               	bnz	copy_data0
   147   01FBC6                     end_of_initialization:
   148                           	callstack 0
   149   01FBC6                     __end_of__initialization:
   150                           	callstack 0
   151   01FBC6  0100               	movlb	0
   152   01FBC8  EFF0  F0FE         	goto	_main	;jump to C main() function
   153                           
   154                           	psect	dataCOMRAM
   155   000032                     __pdataCOMRAM:
   156                           	callstack 0
   157   000032                     main@F14298:
   158                           	callstack 0
   159   000032                     	ds	9
   160                           
   161                           	psect	cstackCOMRAM
   162   000001                     __pcstackCOMRAM:
   163                           	callstack 0
   164   000001                     ??_I2C_2_Master_Idle:
   165   000001                     ?___wmul:
   166                           	callstack 0
   167   000001                     ___wmul@multiplier:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x0
   171   000001                     	ds	1
   172   000002                     ??_I2C_2_Master_Read:
   173   000002                     I2C_2_Master_Write@data_byte:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x1
   177   000002                     	ds	1
   178   000003                     color_writetoaddr@value:
   179                           	callstack 0
   180   000003                     I2C_2_Master_Read@ack:
   181                           	callstack 0
   182   000003                     ___wmul@multiplicand:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x2
   186   000003                     	ds	1
   187   000004                     color_writetoaddr@address:
   188                           	callstack 0
   189   000004                     I2C_2_Master_Read@tmp:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x3
   193   000004                     	ds	1
   194   000005                     ??_color_click_init:
   195   000005                     ?_color_read_Red:
   196                           	callstack 0
   197   000005                     ___wmul@product:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x4
   201   000005                     	ds	2
   202   000007                     ??_color_read_Red:
   203   000007                     ?___lwdiv:
   204                           	callstack 0
   205   000007                     ___lwdiv@dividend:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x6
   209   000007                     	ds	2
   210   000009                     ___lwdiv@divisor:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x8
   214   000009                     	ds	1
   215   00000A                     color_read_Red@tmp:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x9
   219   00000A                     	ds	1
   220   00000B                     ___lwdiv@quotient:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0xA
   224   00000B                     	ds	2
   225   00000D                     ___lwdiv@counter:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0xC
   229   00000D                     	ds	1
   230   00000E                     setMotorPWM@m:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0xD
   234   00000E                     	ds	2
   235   000010                     ??_setMotorPWM:
   236                           
   237                           ; 1 bytes @ 0xF
   238   000010                     	ds	2
   239   000012                     setMotorPWM@posDuty:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x11
   243   000012                     	ds	1
   244   000013                     setMotorPWM@negDuty:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x12
   248   000013                     	ds	1
   249   000014                     main@master_closeness:
   250                           	callstack 0
   251                           
   252                           ; 9 bytes @ 0x13
   253   000014                     	ds	9
   254   00001D                     main@test:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x1C
   258   00001D                     	ds	2
   259   00001F                     main@PWMcycle:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x1E
   263   00001F                     	ds	1
   264   000020                     main@motorL:
   265                           	callstack 0
   266                           
   267                           ; 9 bytes @ 0x1F
   268   000020                     	ds	9
   269   000029                     main@motorR:
   270                           	callstack 0
   271                           
   272                           ; 9 bytes @ 0x28
   273   000029                     	ds	9
   274                           
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 18 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  test            2   28[COMRAM] unsigned int 
   285 ;;  normalised_v   24    0        unsigned char [3][8]
   286 ;;  expected_val   24    0        unsigned char [3][8]
   287 ;;  motorR          9   40[COMRAM] struct DC_motor
   288 ;;  motorL          9   31[COMRAM] struct DC_motor
   289 ;;  master_close    9   19[COMRAM] unsigned char [9]
   290 ;;  PWMcycle        1   30[COMRAM] unsigned char 
   291 ;;  blue_read       1    0        unsigned char 
   292 ;;  green_read      1    0        unsigned char 
   293 ;;  red_read        1    0        unsigned char 
   294 ;;  card            1    0        enum E14257
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   305 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   307 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   308 ;;Total ram usage:       30 bytes
   309 ;; Hardware stack levels required when called: 4
   310 ;; This function calls:
   311 ;;		_I2C_2_Master_Init
   312 ;;		_LEDSon_init
   313 ;;		_color_click_init
   314 ;;		_color_read_Red
   315 ;;		_initDCmotorsPWM
   316 ;;		_setMotorPWM
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text0
   323   01FDE0                     __ptext0:
   324                           	callstack 0
   325   01FDE0                     _main:
   326                           	callstack 27
   327   01FDE0                     
   328                           ;main.c: 23:     LEDSon_init();
   329   01FDE0  ECAF  F0FD         	call	_LEDSon_init	;wreg free
   330   01FDE4                     
   331                           ;main.c: 24:     I2C_2_Master_Init();
   332   01FDE4  ECFA  F0FD         	call	_I2C_2_Master_Init	;wreg free
   333   01FDE8                     
   334                           ;main.c: 25:     color_click_init();
   335   01FDE8  EC0F  F0FE         	call	_color_click_init	;wreg free
   336   01FDEC                     
   337                           ;main.c: 26:     initDCmotorsPWM();
   338   01FDEC  ECAC  F0FE         	call	_initDCmotorsPWM	;wreg free
   339   01FDF0                     
   340                           ;main.c: 34:     unsigned char PWMcycle = T2PR;
   341   01FDF0  CFBC F01F          	movff	4028,main@PWMcycle	;volatile
   342   01FDF4                     
   343                           ;main.c: 36:     struct DC_motor motorL, motorR;;main.c: 38:     motorL.power=0;
   344   01FDF4  0E00               	movlw	0
   345   01FDF6  6E20               	movwf	main@motorL^0,c
   346   01FDF8                     
   347                           ;main.c: 39:     motorL.direction=1;
   348   01FDF8  0E01               	movlw	1
   349   01FDFA  6E21               	movwf	(main@motorL+1)^0,c
   350   01FDFC                     
   351                           ;main.c: 40:     motorL.brakemode=1;
   352   01FDFC  0E01               	movlw	1
   353   01FDFE  6E22               	movwf	(main@motorL+2)^0,c
   354   01FE00                     
   355                           ;main.c: 41:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   356   01FE00  0EAA               	movlw	170
   357   01FE02  6E25               	movwf	(main@motorL+5)^0,c
   358   01FE04  0E0F               	movlw	15
   359   01FE06  6E26               	movwf	(main@motorL+6)^0,c
   360   01FE08                     
   361                           ;main.c: 42:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   362   01FE08  0EA6               	movlw	166
   363   01FE0A  6E27               	movwf	(main@motorL+7)^0,c
   364   01FE0C  0E0F               	movlw	15
   365   01FE0E  6E28               	movwf	(main@motorL+8)^0,c
   366   01FE10                     
   367                           ;main.c: 43:     motorL.PWMperiod=PWMcycle;
   368   01FE10  C01F  F023         	movff	main@PWMcycle,main@motorL+3
   369   01FE14  6A24               	clrf	(main@motorL+4)^0,c
   370   01FE16                     
   371                           ;main.c: 45:     motorR.power=0;
   372   01FE16  0E00               	movlw	0
   373   01FE18  6E29               	movwf	main@motorR^0,c
   374   01FE1A                     
   375                           ;main.c: 46:     motorR.direction=1;
   376   01FE1A  0E01               	movlw	1
   377   01FE1C  6E2A               	movwf	(main@motorR+1)^0,c
   378   01FE1E                     
   379                           ;main.c: 47:     motorR.brakemode=1;
   380   01FE1E  0E01               	movlw	1
   381   01FE20  6E2B               	movwf	(main@motorR+2)^0,c
   382                           
   383                           ;main.c: 48:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   384   01FE22  0E25               	movlw	37
   385   01FE24  6E2E               	movwf	(main@motorR+5)^0,c
   386   01FE26  0E0F               	movlw	15
   387   01FE28  6E2F               	movwf	(main@motorR+6)^0,c
   388                           
   389                           ;main.c: 49:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   390   01FE2A  0E21               	movlw	33
   391   01FE2C  6E30               	movwf	(main@motorR+7)^0,c
   392   01FE2E  0E0F               	movlw	15
   393   01FE30  6E31               	movwf	(main@motorR+8)^0,c
   394   01FE32                     
   395                           ;main.c: 50:     motorR.PWMperiod=PWMcycle;
   396   01FE32  C01F  F02C         	movff	main@PWMcycle,main@motorR+3
   397   01FE36  6A2D               	clrf	(main@motorR+4)^0,c
   398   01FE38                     
   399                           ;main.c: 52:     setMotorPWM(&motorL);
   400   01FE38  0E20               	movlw	low main@motorL
   401   01FE3A  6E0E               	movwf	setMotorPWM@m^0,c
   402   01FE3C  0E00               	movlw	high main@motorL
   403   01FE3E  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   404   01FE40  EC4A  F0FF         	call	_setMotorPWM	;wreg free
   405   01FE44                     
   406                           ;main.c: 53:     setMotorPWM(&motorR);
   407   01FE44  0E29               	movlw	low main@motorR
   408   01FE46  6E0E               	movwf	setMotorPWM@m^0,c
   409   01FE48  0E00               	movlw	high main@motorR
   410   01FE4A  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   411   01FE4C  EC4A  F0FF         	call	_setMotorPWM	;wreg free
   412   01FE50                     
   413                           ;main.c: 59:     unsigned char expected_values[8][3];;main.c: 60:     unsigned char norm
      +                          alised_values[8][3];;main.c: 61:     unsigned char master_closeness[9] = {17, 2, 12, 12,
      +                           10, 11, 12, 14, 16};
   414   01FE50  EE20  F032         	lfsr	2,main@F14298
   415   01FE54  EE10  F014         	lfsr	1,main@master_closeness
   416   01FE58  0E08               	movlw	8
   417   01FE5A                     u291:
   418   01FE5A  CFDB FFE3          	movff	plusw2,plusw1
   419   01FE5E  06E8               	decf	wreg,f,c
   420   01FE60  E2FC               	bc	u291
   421   01FE62                     
   422                           ;main.c: 111:     LATDbits.LATD7=0;
   423   01FE62  9E7C               	bcf	124,7,c	;volatile
   424   01FE64                     
   425                           ;main.c: 112:     TRISDbits.TRISD7=0;
   426   01FE64  9E84               	bcf	132,7,c	;volatile
   427   01FE66                     
   428                           ;main.c: 113:     LATFbits.LATF7 = 1;
   429   01FE66  8E7E               	bsf	126,7,c	;volatile
   430   01FE68                     
   431                           ;main.c: 114:     LATGbits.LATG1 = 1;
   432   01FE68  827F               	bsf	127,1,c	;volatile
   433   01FE6A                     
   434                           ;main.c: 115:     LATAbits.LATA4 = 1;
   435   01FE6A  8879               	bsf	121,4,c	;volatile
   436   01FE6C                     l1402:
   437                           
   438                           ;main.c: 119:         unsigned int test = color_read_Red();
   439   01FE6C  EC4A  F0FE         	call	_color_read_Red	;wreg free
   440   01FE70  C005  F01D         	movff	?_color_read_Red,main@test
   441   01FE74  C006  F01E         	movff	?_color_read_Red+1,main@test+1
   442   01FE78                     
   443                           ;main.c: 120:         if (test > 0) {LATDbits.LATD7 = 1;}
   444   01FE78  501D               	movf	main@test^0,w,c
   445   01FE7A  101E               	iorwf	(main@test+1)^0,w,c
   446   01FE7C  B4D8               	btfsc	status,2,c
   447   01FE7E  EF43  F0FF         	goto	u301
   448   01FE82  EF45  F0FF         	goto	u300
   449   01FE86                     u301:
   450   01FE86  EF36  F0FF         	goto	l1402
   451   01FE8A                     u300:
   452   01FE8A  8E7C               	bsf	124,7,c	;volatile
   453   01FE8C  EF36  F0FF         	goto	l1402
   454   01FE90  EF01  F000         	goto	start
   455   01FE94                     __end_of_main:
   456                           	callstack 0
   457                           
   458 ;; *************** function _setMotorPWM *****************
   459 ;; Defined at:
   460 ;;		line 61 in file "dc_motor.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  m               2   13[COMRAM] PTR struct DC_motor
   463 ;;		 -> main@motorR(9), main@motorL(9), 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  negDuty         1   18[COMRAM] unsigned char 
   466 ;;  posDuty         1   17[COMRAM] unsigned char 
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   479 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   480 ;;Total ram usage:        6 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; Hardware stack levels required when called: 1
   483 ;; This function calls:
   484 ;;		___lwdiv
   485 ;;		___wmul
   486 ;; This function is called by:
   487 ;;		_main
   488 ;;		_stop
   489 ;;		_turnLeft45
   490 ;;		_turnRight45
   491 ;;		_fullSpeedAhead
   492 ;;		_reverseFullSpeed
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text1
   497   01FE94                     __ptext1:
   498                           	callstack 0
   499   01FE94                     _setMotorPWM:
   500                           	callstack 29
   501   01FE94                     
   502                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
   503   01FE94  EE20 F002          	lfsr	2,2
   504   01FE98  500E               	movf	setMotorPWM@m^0,w,c
   505   01FE9A  26D9               	addwf	fsr2l,f,c
   506   01FE9C  500F               	movf	(setMotorPWM@m+1)^0,w,c
   507   01FE9E  22DA               	addwfc	fsr2h,f,c
   508   01FEA0  50DF               	movf	indf2,w,c
   509   01FEA2  B4D8               	btfsc	status,2,c
   510   01FEA4  EF56  F0FF         	goto	u211
   511   01FEA8  EF58  F0FF         	goto	u210
   512   01FEAC                     u211:
   513   01FEAC  EF8C  F0FF         	goto	l1256
   514   01FEB0                     u210:
   515   01FEB0                     
   516                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
   517   01FEB0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
   518   01FEB4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
   519   01FEB8  50DF               	movf	indf2,w,c
   520   01FEBA  6E10               	movwf	??_setMotorPWM^0,c
   521   01FEBC  5010               	movf	??_setMotorPWM^0,w,c
   522   01FEBE  6E01               	movwf	___wmul@multiplier^0,c
   523   01FEC0  6A02               	clrf	(___wmul@multiplier+1)^0,c
   524   01FEC2  EE20 F003          	lfsr	2,3
   525   01FEC6  500E               	movf	setMotorPWM@m^0,w,c
   526   01FEC8  26D9               	addwf	fsr2l,f,c
   527   01FECA  500F               	movf	(setMotorPWM@m+1)^0,w,c
   528   01FECC  22DA               	addwfc	fsr2h,f,c
   529   01FECE  CFDE F003          	movff	postinc2,___wmul@multiplicand
   530   01FED2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
   531   01FED6  ECC0  F0FD         	call	___wmul	;wreg free
   532   01FEDA  C001  F007         	movff	?___wmul,___lwdiv@dividend
   533   01FEDE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
   534   01FEE2  0E00               	movlw	0
   535   01FEE4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
   536   01FEE6  0E64               	movlw	100
   537   01FEE8  6E09               	movwf	___lwdiv@divisor^0,c
   538   01FEEA  EC72  F0FE         	call	___lwdiv	;wreg free
   539   01FEEE  EE20 F003          	lfsr	2,3
   540   01FEF2  500E               	movf	setMotorPWM@m^0,w,c
   541   01FEF4  26D9               	addwf	fsr2l,f,c
   542   01FEF6  500F               	movf	(setMotorPWM@m+1)^0,w,c
   543   01FEF8  22DA               	addwfc	fsr2h,f,c
   544   01FEFA  50DF               	movf	indf2,w,c
   545   01FEFC  6E11               	movwf	(??_setMotorPWM+1)^0,c
   546   01FEFE  5007               	movf	?___lwdiv^0,w,c
   547   01FF00  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
   548   01FF02  6E12               	movwf	setMotorPWM@posDuty^0,c
   549   01FF04                     
   550                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
   551   01FF04  EE20 F003          	lfsr	2,3
   552   01FF08  500E               	movf	setMotorPWM@m^0,w,c
   553   01FF0A  26D9               	addwf	fsr2l,f,c
   554   01FF0C  500F               	movf	(setMotorPWM@m+1)^0,w,c
   555   01FF0E  22DA               	addwfc	fsr2h,f,c
   556   01FF10  50DF               	movf	indf2,w,c
   557   01FF12  6E13               	movwf	setMotorPWM@negDuty^0,c
   558                           
   559                           ;dc_motor.c: 68:     }
   560   01FF14  EFAF  F0FF         	goto	l1260
   561   01FF18                     l1256:
   562                           
   563                           ;dc_motor.c: 70:         posDuty=0;
   564   01FF18  0E00               	movlw	0
   565   01FF1A  6E12               	movwf	setMotorPWM@posDuty^0,c
   566   01FF1C                     
   567                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
   568   01FF1C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
   569   01FF20  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
   570   01FF24  50DF               	movf	indf2,w,c
   571   01FF26  6E10               	movwf	??_setMotorPWM^0,c
   572   01FF28  5010               	movf	??_setMotorPWM^0,w,c
   573   01FF2A  6E01               	movwf	___wmul@multiplier^0,c
   574   01FF2C  6A02               	clrf	(___wmul@multiplier+1)^0,c
   575   01FF2E  EE20 F003          	lfsr	2,3
   576   01FF32  500E               	movf	setMotorPWM@m^0,w,c
   577   01FF34  26D9               	addwf	fsr2l,f,c
   578   01FF36  500F               	movf	(setMotorPWM@m+1)^0,w,c
   579   01FF38  22DA               	addwfc	fsr2h,f,c
   580   01FF3A  CFDE F003          	movff	postinc2,___wmul@multiplicand
   581   01FF3E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
   582   01FF42  ECC0  F0FD         	call	___wmul	;wreg free
   583   01FF46  C001  F007         	movff	?___wmul,___lwdiv@dividend
   584   01FF4A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
   585   01FF4E  0E00               	movlw	0
   586   01FF50  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
   587   01FF52  0E64               	movlw	100
   588   01FF54  6E09               	movwf	___lwdiv@divisor^0,c
   589   01FF56  EC72  F0FE         	call	___lwdiv	;wreg free
   590   01FF5A  5007               	movf	?___lwdiv^0,w,c
   591   01FF5C  6E13               	movwf	setMotorPWM@negDuty^0,c
   592   01FF5E                     l1260:
   593                           
   594                           ;dc_motor.c: 74:     if (m->direction) {
   595   01FF5E  EE20 F001          	lfsr	2,1
   596   01FF62  500E               	movf	setMotorPWM@m^0,w,c
   597   01FF64  26D9               	addwf	fsr2l,f,c
   598   01FF66  500F               	movf	(setMotorPWM@m+1)^0,w,c
   599   01FF68  22DA               	addwfc	fsr2h,f,c
   600   01FF6A  50DF               	movf	indf2,w,c
   601   01FF6C  B4D8               	btfsc	status,2,c
   602   01FF6E  EFBB  F0FF         	goto	u221
   603   01FF72  EFBD  F0FF         	goto	u220
   604   01FF76                     u221:
   605   01FF76  EFDF  F0FF         	goto	l1264
   606   01FF7A                     u220:
   607   01FF7A                     
   608                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
   609   01FF7A  EE20 F005          	lfsr	2,5
   610   01FF7E  500E               	movf	setMotorPWM@m^0,w,c
   611   01FF80  26D9               	addwf	fsr2l,f,c
   612   01FF82  500F               	movf	(setMotorPWM@m+1)^0,w,c
   613   01FF84  22DA               	addwfc	fsr2h,f,c
   614   01FF86  CFDE F010          	movff	postinc2,??_setMotorPWM
   615   01FF8A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   616   01FF8E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   617   01FF92  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   618   01FF96  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
   619                           
   620                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
   621   01FF9A  EE20 F007          	lfsr	2,7
   622   01FF9E  500E               	movf	setMotorPWM@m^0,w,c
   623   01FFA0  26D9               	addwf	fsr2l,f,c
   624   01FFA2  500F               	movf	(setMotorPWM@m+1)^0,w,c
   625   01FFA4  22DA               	addwfc	fsr2h,f,c
   626   01FFA6  CFDE F010          	movff	postinc2,??_setMotorPWM
   627   01FFAA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   628   01FFAE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   629   01FFB2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   630   01FFB6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
   631                           
   632                           ;dc_motor.c: 77:     } else {
   633   01FFBA  EFFF  F0FF         	goto	l95
   634   01FFBE                     l1264:
   635                           
   636                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
   637   01FFBE  EE20 F005          	lfsr	2,5
   638   01FFC2  500E               	movf	setMotorPWM@m^0,w,c
   639   01FFC4  26D9               	addwf	fsr2l,f,c
   640   01FFC6  500F               	movf	(setMotorPWM@m+1)^0,w,c
   641   01FFC8  22DA               	addwfc	fsr2h,f,c
   642   01FFCA  CFDE F010          	movff	postinc2,??_setMotorPWM
   643   01FFCE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   644   01FFD2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   645   01FFD6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   646   01FFDA  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
   647                           
   648                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
   649   01FFDE  EE20 F007          	lfsr	2,7
   650   01FFE2  500E               	movf	setMotorPWM@m^0,w,c
   651   01FFE4  26D9               	addwf	fsr2l,f,c
   652   01FFE6  500F               	movf	(setMotorPWM@m+1)^0,w,c
   653   01FFE8  22DA               	addwfc	fsr2h,f,c
   654   01FFEA  CFDE F010          	movff	postinc2,??_setMotorPWM
   655   01FFEE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   656   01FFF2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   657   01FFF6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   658   01FFFA  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
   659   01FFFE                     l95:
   660   01FFFE  0012               	return		;funcret
   661   020000                     __end_of_setMotorPWM:
   662                           	callstack 0
   663                           
   664 ;; *************** function ___wmul *****************
   665 ;; Defined at:
   666 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  multiplier      2    0[COMRAM] unsigned int 
   669 ;;  multiplicand    2    2[COMRAM] unsigned int 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  product         2    4[COMRAM] unsigned int 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  2    0[COMRAM] unsigned int 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0, prodl, prodh
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;Total ram usage:        6 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_setMotorPWM
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text2
   695   01FB80                     __ptext2:
   696                           	callstack 0
   697   01FB80                     ___wmul:
   698                           	callstack 29
   699   01FB80  5001               	movf	___wmul@multiplier^0,w,c
   700   01FB82  0203               	mulwf	___wmul@multiplicand^0,c
   701   01FB84  CFF3 F005          	movff	prodl,___wmul@product
   702   01FB88  CFF4 F006          	movff	prodh,___wmul@product+1
   703   01FB8C  5001               	movf	___wmul@multiplier^0,w,c
   704   01FB8E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
   705   01FB90  50F3               	movf	243,w,c
   706   01FB92  2606               	addwf	(___wmul@product+1)^0,f,c
   707   01FB94  5002               	movf	(___wmul@multiplier+1)^0,w,c
   708   01FB96  0203               	mulwf	___wmul@multiplicand^0,c
   709   01FB98  50F3               	movf	243,w,c
   710   01FB9A  2606               	addwf	(___wmul@product+1)^0,f,c
   711   01FB9C  C005  F001         	movff	___wmul@product,?___wmul
   712   01FBA0  C006  F002         	movff	___wmul@product+1,?___wmul+1
   713   01FBA4  0012               	return		;funcret
   714   01FBA6                     __end_of___wmul:
   715                           	callstack 0
   716                           
   717 ;; *************** function ___lwdiv *****************
   718 ;; Defined at:
   719 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  dividend        2    6[COMRAM] unsigned int 
   722 ;;  divisor         2    8[COMRAM] unsigned int 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  quotient        2   10[COMRAM] unsigned int 
   725 ;;  counter         1   12[COMRAM] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  2    6[COMRAM] unsigned int 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   736 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   738 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   739 ;;Total ram usage:        7 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_setMotorPWM
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text3
   749   01FCE4                     __ptext3:
   750                           	callstack 0
   751   01FCE4                     ___lwdiv:
   752                           	callstack 29
   753   01FCE4  0E00               	movlw	0
   754   01FCE6  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
   755   01FCE8  0E00               	movlw	0
   756   01FCEA  6E0B               	movwf	___lwdiv@quotient^0,c
   757   01FCEC  5009               	movf	___lwdiv@divisor^0,w,c
   758   01FCEE  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
   759   01FCF0  B4D8               	btfsc	status,2,c
   760   01FCF2  EF7D  F0FE         	goto	u181
   761   01FCF6  EF7F  F0FE         	goto	u180
   762   01FCFA                     u181:
   763   01FCFA  EFA7  F0FE         	goto	l732
   764   01FCFE                     u180:
   765   01FCFE  0E01               	movlw	1
   766   01FD00  6E0D               	movwf	___lwdiv@counter^0,c
   767   01FD02  EF87  F0FE         	goto	l1220
   768   01FD06                     l1218:
   769   01FD06  90D8               	bcf	status,0,c
   770   01FD08  3609               	rlcf	___lwdiv@divisor^0,f,c
   771   01FD0A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
   772   01FD0C  2A0D               	incf	___lwdiv@counter^0,f,c
   773   01FD0E                     l1220:
   774   01FD0E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
   775   01FD10  EF8C  F0FE         	goto	u191
   776   01FD14  EF8E  F0FE         	goto	u190
   777   01FD18                     u191:
   778   01FD18  EF83  F0FE         	goto	l1218
   779   01FD1C                     u190:
   780   01FD1C                     l1222:
   781   01FD1C  90D8               	bcf	status,0,c
   782   01FD1E  360B               	rlcf	___lwdiv@quotient^0,f,c
   783   01FD20  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
   784   01FD22  5009               	movf	___lwdiv@divisor^0,w,c
   785   01FD24  5C07               	subwf	___lwdiv@dividend^0,w,c
   786   01FD26  500A               	movf	(___lwdiv@divisor+1)^0,w,c
   787   01FD28  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
   788   01FD2A  A0D8               	btfss	status,0,c
   789   01FD2C  EF9A  F0FE         	goto	u201
   790   01FD30  EF9C  F0FE         	goto	u200
   791   01FD34                     u201:
   792   01FD34  EFA1  F0FE         	goto	l1230
   793   01FD38                     u200:
   794   01FD38  5009               	movf	___lwdiv@divisor^0,w,c
   795   01FD3A  5E07               	subwf	___lwdiv@dividend^0,f,c
   796   01FD3C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
   797   01FD3E  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
   798   01FD40  800B               	bsf	___lwdiv@quotient^0,0,c
   799   01FD42                     l1230:
   800   01FD42  90D8               	bcf	status,0,c
   801   01FD44  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
   802   01FD46  3209               	rrcf	___lwdiv@divisor^0,f,c
   803   01FD48  2E0D               	decfsz	___lwdiv@counter^0,f,c
   804   01FD4A  EF8E  F0FE         	goto	l1222
   805   01FD4E                     l732:
   806   01FD4E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
   807   01FD52  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
   808   01FD56  0012               	return		;funcret
   809   01FD58                     __end_of___lwdiv:
   810                           	callstack 0
   811                           
   812 ;; *************** function _initDCmotorsPWM *****************
   813 ;; Defined at:
   814 ;;		line 6 in file "dc_motor.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text4
   842   01FD58                     __ptext4:
   843                           	callstack 0
   844   01FD58                     _initDCmotorsPWM:
   845                           	callstack 30
   846   01FD58                     
   847                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
   848   01FD58  9485               	bcf	133,2,c	;volatile
   849                           
   850                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
   851   01FD5A  9885               	bcf	133,4,c	;volatile
   852                           
   853                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
   854   01FD5C  9E83               	bcf	131,7,c	;volatile
   855                           
   856                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
   857   01FD5E  9C87               	bcf	135,6,c	;volatile
   858   01FD60                     
   859                           ;dc_motor.c: 14:     RE2PPS=0x05;
   860   01FD60  0E05               	movlw	5
   861   01FD62  010E               	movlb	14	; () banked
   862   01FD64  6F74               	movwf	116,b	;volatile
   863                           
   864                           ;dc_motor.c: 15:     RE4PPS=0x06;
   865   01FD66  0E06               	movlw	6
   866   01FD68  6F76               	movwf	118,b	;volatile
   867                           
   868                           ;dc_motor.c: 16:     RC7PPS=0x07;
   869   01FD6A  0E07               	movlw	7
   870   01FD6C  6F69               	movwf	105,b	;volatile
   871                           
   872                           ;dc_motor.c: 17:     RG6PPS=0x08;
   873   01FD6E  0E08               	movlw	8
   874   01FD70  6F88               	movwf	136,b	;volatile
   875                           
   876                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
   877   01FD72  50BD               	movf	189,w,c	;volatile
   878   01FD74  0B8F               	andlw	-113
   879   01FD76  0940               	iorlw	64
   880   01FD78  6EBD               	movwf	189,c	;volatile
   881                           
   882                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
   883   01FD7A  0EE0               	movlw	-32
   884   01FD7C  16BE               	andwf	190,f,c	;volatile
   885                           
   886                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
   887   01FD7E  50BF               	movf	191,w,c	;volatile
   888   01FD80  0BF0               	andlw	-16
   889   01FD82  0901               	iorlw	1
   890   01FD84  6EBF               	movwf	191,c	;volatile
   891                           
   892                           ;dc_motor.c: 26:     T2PR=99;
   893   01FD86  0E63               	movlw	99
   894   01FD88  6EBC               	movwf	188,c	;volatile
   895   01FD8A                     
   896                           ; BSR set to: 14
   897                           ;dc_motor.c: 27:     T2CONbits.ON=1;
   898   01FD8A  8EBD               	bsf	189,7,c	;volatile
   899                           
   900                           ;dc_motor.c: 31:     CCPR1H=0;
   901   01FD8C  0E00               	movlw	0
   902   01FD8E  6EAA               	movwf	170,c	;volatile
   903                           
   904                           ;dc_motor.c: 32:     CCPR2H=0;
   905   01FD90  0E00               	movlw	0
   906   01FD92  6EA6               	movwf	166,c	;volatile
   907                           
   908                           ;dc_motor.c: 33:     CCPR3H=0;
   909   01FD94  0E00               	movlw	0
   910   01FD96  010F               	movlb	15	; () banked
   911   01FD98  6F25               	movwf	37,b	;volatile
   912                           
   913                           ;dc_motor.c: 34:     CCPR4H=0;
   914   01FD9A  0E00               	movlw	0
   915   01FD9C  6F21               	movwf	33,b	;volatile
   916                           
   917                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
   918   01FD9E  0EFC               	movlw	-4
   919   01FDA0  16AD               	andwf	173,f,c	;volatile
   920                           
   921                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
   922   01FDA2  0EF3               	movlw	-13
   923   01FDA4  16AD               	andwf	173,f,c	;volatile
   924                           
   925                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
   926   01FDA6  0ECF               	movlw	-49
   927   01FDA8  16AD               	andwf	173,f,c	;volatile
   928                           
   929                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
   930   01FDAA  0E3F               	movlw	-193
   931   01FDAC  16AD               	andwf	173,f,c	;volatile
   932   01FDAE                     
   933                           ; BSR set to: 15
   934                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
   935   01FDAE  88AB               	bsf	171,4,c	;volatile
   936                           
   937                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
   938   01FDB0  50AB               	movf	171,w,c	;volatile
   939   01FDB2  0BF0               	andlw	-16
   940   01FDB4  090C               	iorlw	12
   941   01FDB6  6EAB               	movwf	171,c	;volatile
   942   01FDB8                     
   943                           ; BSR set to: 15
   944                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
   945   01FDB8  8EAB               	bsf	171,7,c	;volatile
   946   01FDBA                     
   947                           ; BSR set to: 15
   948                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
   949   01FDBA  88A7               	bsf	167,4,c	;volatile
   950                           
   951                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
   952   01FDBC  50A7               	movf	167,w,c	;volatile
   953   01FDBE  0BF0               	andlw	-16
   954   01FDC0  090C               	iorlw	12
   955   01FDC2  6EA7               	movwf	167,c	;volatile
   956   01FDC4                     
   957                           ; BSR set to: 15
   958                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
   959   01FDC4  8EA7               	bsf	167,7,c	;volatile
   960   01FDC6                     
   961                           ; BSR set to: 15
   962                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
   963   01FDC6  8926               	bsf	38,4,b	;volatile
   964                           
   965                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
   966   01FDC8  5126               	movf	38,w,b	;volatile
   967   01FDCA  0BF0               	andlw	-16
   968   01FDCC  090C               	iorlw	12
   969   01FDCE  6F26               	movwf	38,b	;volatile
   970   01FDD0                     
   971                           ; BSR set to: 15
   972                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
   973   01FDD0  8F26               	bsf	38,7,b	;volatile
   974   01FDD2                     
   975                           ; BSR set to: 15
   976                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
   977   01FDD2  8922               	bsf	34,4,b	;volatile
   978                           
   979                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
   980   01FDD4  5122               	movf	34,w,b	;volatile
   981   01FDD6  0BF0               	andlw	-16
   982   01FDD8  090C               	iorlw	12
   983   01FDDA  6F22               	movwf	34,b	;volatile
   984   01FDDC                     
   985                           ; BSR set to: 15
   986                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
   987   01FDDC  8F22               	bsf	34,7,b	;volatile
   988   01FDDE                     
   989                           ; BSR set to: 15
   990   01FDDE  0012               	return		;funcret
   991   01FDE0                     __end_of_initDCmotorsPWM:
   992                           	callstack 0
   993                           
   994 ;; *************** function _color_read_Red *****************
   995 ;; Defined at:
   996 ;;		line 29 in file "color.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  tmp             2    9[COMRAM] unsigned int 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  2    4[COMRAM] unsigned int 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2, status,0, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1012 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1013 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1014 ;;Total ram usage:        7 bytes
  1015 ;; Hardware stack levels used: 1
  1016 ;; Hardware stack levels required when called: 2
  1017 ;; This function calls:
  1018 ;;		_I2C_2_Master_Read
  1019 ;;		_I2C_2_Master_RepStart
  1020 ;;		_I2C_2_Master_Start
  1021 ;;		_I2C_2_Master_Stop
  1022 ;;		_I2C_2_Master_Write
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text5
  1029   01FC94                     __ptext5:
  1030                           	callstack 0
  1031   01FC94                     _color_read_Red:
  1032                           	callstack 28
  1033   01FC94                     
  1034                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1035   01FC94  EC8A  F0FD         	call	_I2C_2_Master_Start	;wreg free
  1036                           
  1037                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1038   01FC98  0E52               	movlw	82
  1039   01FC9A  EC99  F0FD         	call	_I2C_2_Master_Write
  1040                           
  1041                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1042   01FC9E  0EB6               	movlw	182
  1043   01FCA0  EC99  F0FD         	call	_I2C_2_Master_Write
  1044                           
  1045                           ;color.c: 35:  I2C_2_Master_RepStart();
  1046   01FCA4  EC94  F0FD         	call	_I2C_2_Master_RepStart	;wreg free
  1047                           
  1048                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1049   01FCA8  0E53               	movlw	83
  1050   01FCAA  EC99  F0FD         	call	_I2C_2_Master_Write
  1051                           
  1052                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1053   01FCAE  0E01               	movlw	1
  1054   01FCB0  EC29  F0FE         	call	_I2C_2_Master_Read
  1055   01FCB4  6E07               	movwf	??_color_read_Red^0,c
  1056   01FCB6  5007               	movf	??_color_read_Red^0,w,c
  1057   01FCB8  6E0A               	movwf	color_read_Red@tmp^0,c
  1058   01FCBA  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1059                           
  1060                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1061   01FCBC  0E00               	movlw	0
  1062   01FCBE  EC29  F0FE         	call	_I2C_2_Master_Read
  1063   01FCC2  6E07               	movwf	??_color_read_Red^0,c
  1064   01FCC4  5007               	movf	??_color_read_Red^0,w,c
  1065   01FCC6  6E09               	movwf	(??_color_read_Red+2)^0,c
  1066   01FCC8  6A08               	clrf	(??_color_read_Red+1)^0,c
  1067   01FCCA  500A               	movf	color_read_Red@tmp^0,w,c
  1068   01FCCC  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1069   01FCCE  6E0A               	movwf	color_read_Red@tmp^0,c
  1070   01FCD0  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1071   01FCD2  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1072   01FCD4  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1073                           
  1074                           ;color.c: 39:  I2C_2_Master_Stop();
  1075   01FCD6  EC8F  F0FD         	call	_I2C_2_Master_Stop	;wreg free
  1076   01FCDA                     
  1077                           ;color.c: 40:  return tmp;
  1078   01FCDA  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1079   01FCDE  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1080   01FCE2  0012               	return		;funcret
  1081   01FCE4                     __end_of_color_read_Red:
  1082                           	callstack 0
  1083                           
  1084 ;; *************** function _I2C_2_Master_RepStart *****************
  1085 ;; Defined at:
  1086 ;;		line 33 in file "i2c.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;Total ram usage:        0 bytes
  1105 ;; Hardware stack levels used: 1
  1106 ;; Hardware stack levels required when called: 1
  1107 ;; This function calls:
  1108 ;;		_I2C_2_Master_Idle
  1109 ;; This function is called by:
  1110 ;;		_color_read_Red
  1111 ;;		_color_read_Green
  1112 ;;		_color_read_Blue
  1113 ;;		_color_read_Clear
  1114 ;;		_read_interrupt_status
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text6
  1119   01FB28                     __ptext6:
  1120                           	callstack 0
  1121   01FB28                     _I2C_2_Master_RepStart:
  1122                           	callstack 28
  1123   01FB28                     
  1124                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1125   01FB28  ECE6  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1126   01FB2C                     
  1127                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1128   01FB2C  010E               	movlb	14	; () banked
  1129   01FB2E  83DA               	bsf	218,1,b	;volatile
  1130   01FB30                     
  1131                           ; BSR set to: 14
  1132   01FB30  0012               	return		;funcret
  1133   01FB32                     __end_of_I2C_2_Master_RepStart:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _I2C_2_Master_Read *****************
  1137 ;; Defined at:
  1138 ;;		line 51 in file "i2c.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  ack             1    wreg     unsigned char 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  ack             1    2[COMRAM] unsigned char 
  1143 ;;  tmp             1    3[COMRAM] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      unsigned char 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1157 ;;Total ram usage:        3 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 1
  1160 ;; This function calls:
  1161 ;;		_I2C_2_Master_Idle
  1162 ;; This function is called by:
  1163 ;;		_color_read_Red
  1164 ;;		_color_read_Green
  1165 ;;		_color_read_Blue
  1166 ;;		_color_read_Clear
  1167 ;;		_read_interrupt_status
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text7
  1172   01FC52                     __ptext7:
  1173                           	callstack 0
  1174   01FC52                     _I2C_2_Master_Read:
  1175                           	callstack 28
  1176                           
  1177                           ; BSR set to: 14
  1178                           ;incstack = 0
  1179                           ;I2C_2_Master_Read@ack stored from wreg
  1180   01FC52  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1181   01FC54                     
  1182                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1183   01FC54  ECE6  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1184   01FC58                     
  1185                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1186   01FC58  010E               	movlb	14	; () banked
  1187   01FC5A  87DA               	bsf	218,3,b	;volatile
  1188                           
  1189                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1190   01FC5C  ECE6  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1191   01FC60                     
  1192                           ;i2c.c: 57:   tmp = SSP2BUF;
  1193   01FC60  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1194                           
  1195                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1196   01FC64  ECE6  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1197   01FC68                     
  1198                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1199   01FC68  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1200   01FC6A  B4D8               	btfsc	status,2,c
  1201   01FC6C  EF3A  F0FE         	goto	u31
  1202   01FC70  EF3E  F0FE         	goto	u30
  1203   01FC74                     u31:
  1204   01FC74  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1205   01FC76  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1206   01FC78  EF3F  F0FE         	goto	u48
  1207   01FC7C                     u30:
  1208   01FC7C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1209   01FC7E                     u48:
  1210   01FC7E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1211   01FC80  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1212   01FC82  010E               	movlb	14	; () banked
  1213   01FC84  51DA               	movf	218,w,b	;volatile
  1214   01FC86  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1215   01FC88  0BDF               	andlw	-33
  1216   01FC8A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1217   01FC8C  6FDA               	movwf	218,b	;volatile
  1218   01FC8E                     
  1219                           ; BSR set to: 14
  1220                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1221   01FC8E  89DA               	bsf	218,4,b	;volatile
  1222   01FC90                     
  1223                           ; BSR set to: 14
  1224                           ;i2c.c: 61:   return tmp;
  1225   01FC90  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1226   01FC92                     
  1227                           ; BSR set to: 14
  1228   01FC92  0012               	return		;funcret
  1229   01FC94                     __end_of_I2C_2_Master_Read:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _color_click_init *****************
  1233 ;; Defined at:
  1234 ;;		line 5 in file "color.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; Hardware stack levels required when called: 3
  1255 ;; This function calls:
  1256 ;;		_I2C_2_Master_Init
  1257 ;;		_color_writetoaddr
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text8
  1264   01FC1E                     __ptext8:
  1265                           	callstack 0
  1266   01FC1E                     _color_click_init:
  1267                           	callstack 27
  1268   01FC1E                     
  1269                           ;color.c: 8:     I2C_2_Master_Init();
  1270   01FC1E  ECFA  F0FD         	call	_I2C_2_Master_Init	;wreg free
  1271   01FC22                     
  1272                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1273   01FC22  0E01               	movlw	1
  1274   01FC24  6E03               	movwf	color_writetoaddr@value^0,c
  1275   01FC26  0E00               	movlw	0
  1276   01FC28  EC9F  F0FD         	call	_color_writetoaddr
  1277   01FC2C                     
  1278                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1279   01FC2C  0E3F               	movlw	63
  1280   01FC2E  6E05               	movwf	??_color_click_init^0,c
  1281   01FC30  0E55               	movlw	85
  1282   01FC32                     u317:
  1283   01FC32  2EE8               	decfsz	wreg,f,c
  1284   01FC34  D7FE               	bra	u317
  1285   01FC36  2E05               	decfsz	??_color_click_init^0,f,c
  1286   01FC38  D7FC               	bra	u317
  1287   01FC3A  F000               	nop	
  1288   01FC3C                     
  1289                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1290   01FC3C  0E03               	movlw	3
  1291   01FC3E  6E03               	movwf	color_writetoaddr@value^0,c
  1292   01FC40  0E00               	movlw	0
  1293   01FC42  EC9F  F0FD         	call	_color_writetoaddr
  1294   01FC46                     
  1295                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1296   01FC46  0ED5               	movlw	213
  1297   01FC48  6E03               	movwf	color_writetoaddr@value^0,c
  1298   01FC4A  0E01               	movlw	1
  1299   01FC4C  EC9F  F0FD         	call	_color_writetoaddr
  1300   01FC50  0012               	return		;funcret
  1301   01FC52                     __end_of_color_click_init:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _color_writetoaddr *****************
  1305 ;; Defined at:
  1306 ;;		line 21 in file "color.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  address         1    wreg     unsigned char 
  1309 ;;  value           1    2[COMRAM] unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  address         1    3[COMRAM] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1321 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;Total ram usage:        2 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 2
  1328 ;; This function calls:
  1329 ;;		_I2C_2_Master_Start
  1330 ;;		_I2C_2_Master_Stop
  1331 ;;		_I2C_2_Master_Write
  1332 ;; This function is called by:
  1333 ;;		_color_click_init
  1334 ;;		_enable_color_interrupt
  1335 ;;		_set_interrupt_threshold
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text9
  1340   01FB3E                     __ptext9:
  1341                           	callstack 0
  1342   01FB3E                     _color_writetoaddr:
  1343                           	callstack 27
  1344                           
  1345                           ;incstack = 0
  1346                           ;color_writetoaddr@address stored from wreg
  1347   01FB3E  6E04               	movwf	color_writetoaddr@address^0,c
  1348   01FB40                     
  1349                           ;color.c: 22:     I2C_2_Master_Start();
  1350   01FB40  EC8A  F0FD         	call	_I2C_2_Master_Start	;wreg free
  1351                           
  1352                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1353   01FB44  0E52               	movlw	82
  1354   01FB46  EC99  F0FD         	call	_I2C_2_Master_Write
  1355                           
  1356                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1357   01FB4A  5004               	movf	color_writetoaddr@address^0,w,c
  1358   01FB4C  0980               	iorlw	128
  1359   01FB4E  EC99  F0FD         	call	_I2C_2_Master_Write
  1360                           
  1361                           ;color.c: 25:     I2C_2_Master_Write(value);
  1362   01FB52  5003               	movf	color_writetoaddr@value^0,w,c
  1363   01FB54  EC99  F0FD         	call	_I2C_2_Master_Write
  1364                           
  1365                           ;color.c: 26:     I2C_2_Master_Stop();
  1366   01FB58  EC8F  F0FD         	call	_I2C_2_Master_Stop	;wreg free
  1367   01FB5C  0012               	return		;funcret
  1368   01FB5E                     __end_of_color_writetoaddr:
  1369                           	callstack 0
  1370                           
  1371 ;; *************** function _I2C_2_Master_Write *****************
  1372 ;; Defined at:
  1373 ;;		line 45 in file "i2c.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  data_byte       1    wreg     unsigned char 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  data_byte       1    1[COMRAM] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;Total ram usage:        1 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 1
  1394 ;; This function calls:
  1395 ;;		_I2C_2_Master_Idle
  1396 ;; This function is called by:
  1397 ;;		_color_writetoaddr
  1398 ;;		_color_read_Red
  1399 ;;		_color_read_Green
  1400 ;;		_color_read_Blue
  1401 ;;		_color_read_Clear
  1402 ;;		_read_interrupt_status
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text10
  1407   01FB32                     __ptext10:
  1408                           	callstack 0
  1409   01FB32                     _I2C_2_Master_Write:
  1410                           	callstack 28
  1411                           
  1412                           ;incstack = 0
  1413                           ;I2C_2_Master_Write@data_byte stored from wreg
  1414   01FB32  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1415   01FB34                     
  1416                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1417   01FB34  ECE6  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1418   01FB38                     
  1419                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1420   01FB38  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1421   01FB3C  0012               	return		;funcret
  1422   01FB3E                     __end_of_I2C_2_Master_Write:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _I2C_2_Master_Stop *****************
  1426 ;; Defined at:
  1427 ;;		line 39 in file "i2c.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 1
  1448 ;; This function calls:
  1449 ;;		_I2C_2_Master_Idle
  1450 ;; This function is called by:
  1451 ;;		_color_writetoaddr
  1452 ;;		_color_read_Red
  1453 ;;		_color_read_Green
  1454 ;;		_color_read_Blue
  1455 ;;		_color_read_Clear
  1456 ;;		_read_interrupt_status
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text11
  1461   01FB1E                     __ptext11:
  1462                           	callstack 0
  1463   01FB1E                     _I2C_2_Master_Stop:
  1464                           	callstack 28
  1465   01FB1E                     
  1466                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1467   01FB1E  ECE6  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1468   01FB22                     
  1469                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1470   01FB22  010E               	movlb	14	; () banked
  1471   01FB24  85DA               	bsf	218,2,b	;volatile
  1472   01FB26                     
  1473                           ; BSR set to: 14
  1474   01FB26  0012               	return		;funcret
  1475   01FB28                     __end_of_I2C_2_Master_Stop:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _I2C_2_Master_Start *****************
  1479 ;; Defined at:
  1480 ;;		line 27 in file "i2c.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;Total ram usage:        0 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 1
  1501 ;; This function calls:
  1502 ;;		_I2C_2_Master_Idle
  1503 ;; This function is called by:
  1504 ;;		_color_writetoaddr
  1505 ;;		_color_read_Red
  1506 ;;		_color_read_Green
  1507 ;;		_color_read_Blue
  1508 ;;		_color_read_Clear
  1509 ;;		_read_interrupt_status
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text12
  1514   01FB14                     __ptext12:
  1515                           	callstack 0
  1516   01FB14                     _I2C_2_Master_Start:
  1517                           	callstack 28
  1518   01FB14                     
  1519                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1520   01FB14  ECE6  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1521   01FB18                     
  1522                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1523   01FB18  010E               	movlb	14	; () banked
  1524   01FB1A  81DA               	bsf	218,0,b	;volatile
  1525   01FB1C                     
  1526                           ; BSR set to: 14
  1527   01FB1C  0012               	return		;funcret
  1528   01FB1E                     __end_of_I2C_2_Master_Start:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function _I2C_2_Master_Idle *****************
  1532 ;; Defined at:
  1533 ;;		line 22 in file "i2c.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1551 ;;Total ram usage:        1 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_I2C_2_Master_Start
  1557 ;;		_I2C_2_Master_RepStart
  1558 ;;		_I2C_2_Master_Stop
  1559 ;;		_I2C_2_Master_Write
  1560 ;;		_I2C_2_Master_Read
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text13
  1565   01FBCC                     __ptext13:
  1566                           	callstack 0
  1567   01FBCC                     _I2C_2_Master_Idle:
  1568                           	callstack 28
  1569   01FBCC                     l154:
  1570   01FBCC  010E               	movlb	14	; () banked
  1571   01FBCE  B5D8               	btfsc	216,2,b	;volatile
  1572   01FBD0  EFEC  F0FD         	goto	u11
  1573   01FBD4  EFEE  F0FD         	goto	u10
  1574   01FBD8                     u11:
  1575   01FBD8  EFE6  F0FD         	goto	l154
  1576   01FBDC                     u10:
  1577   01FBDC                     
  1578                           ; BSR set to: 14
  1579   01FBDC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1580   01FBE0  0E1F               	movlw	31
  1581   01FBE2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  1582   01FBE4  A4D8               	btfss	status,2,c
  1583   01FBE6  EFF7  F0FD         	goto	u21
  1584   01FBEA  EFF9  F0FD         	goto	u20
  1585   01FBEE                     u21:
  1586   01FBEE  EFE6  F0FD         	goto	l154
  1587   01FBF2                     u20:
  1588   01FBF2                     
  1589                           ; BSR set to: 14
  1590   01FBF2  0012               	return		;funcret
  1591   01FBF4                     __end_of_I2C_2_Master_Idle:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _I2C_2_Master_Init *****************
  1595 ;; Defined at:
  1596 ;;		line 4 in file "i2c.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_color_click_init
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text14
  1625   01FBF4                     __ptext14:
  1626                           	callstack 0
  1627   01FBF4                     _I2C_2_Master_Init:
  1628                           	callstack 29
  1629   01FBF4                     
  1630                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1631   01FBF4  010E               	movlb	14	; () banked
  1632   01FBF6  51D9               	movf	217,w,b	;volatile
  1633   01FBF8  0BF0               	andlw	-16
  1634   01FBFA  0908               	iorlw	8
  1635   01FBFC  6FD9               	movwf	217,b	;volatile
  1636   01FBFE                     
  1637                           ; BSR set to: 14
  1638                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1639   01FBFE  8BD9               	bsf	217,5,b	;volatile
  1640                           
  1641                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1642   01FC00  0E9F               	movlw	159
  1643   01FC02  6FD6               	movwf	214,b	;volatile
  1644   01FC04                     
  1645                           ; BSR set to: 14
  1646                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1647   01FC04  8A84               	bsf	132,5,c	;volatile
  1648   01FC06                     
  1649                           ; BSR set to: 14
  1650                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1651   01FC06  8C84               	bsf	132,6,c	;volatile
  1652   01FC08                     
  1653                           ; BSR set to: 14
  1654                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1655   01FC08  9BA7               	bcf	167,5,b	;volatile
  1656   01FC0A                     
  1657                           ; BSR set to: 14
  1658                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1659   01FC0A  9DA7               	bcf	167,6,b	;volatile
  1660                           
  1661                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1662   01FC0C  0E1D               	movlw	29
  1663   01FC0E  6F1D               	movwf	29,b	;volatile
  1664                           
  1665                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1666   01FC10  0E1E               	movlw	30
  1667   01FC12  6F1C               	movwf	28,b	;volatile
  1668                           
  1669                           ;i2c.c: 18:   RD5PPS=0x1C;
  1670   01FC14  0E1C               	movlw	28
  1671   01FC16  6F6F               	movwf	111,b	;volatile
  1672                           
  1673                           ;i2c.c: 19:   RD6PPS=0x1B;
  1674   01FC18  0E1B               	movlw	27
  1675   01FC1A  6F70               	movwf	112,b	;volatile
  1676   01FC1C                     
  1677                           ; BSR set to: 14
  1678   01FC1C  0012               	return		;funcret
  1679   01FC1E                     __end_of_I2C_2_Master_Init:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _LEDSon_init *****************
  1683 ;; Defined at:
  1684 ;;		line 18 in file "LEDsOn.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		None
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text15
  1712   01FB5E                     __ptext15:
  1713                           	callstack 0
  1714   01FB5E                     _LEDSon_init:
  1715                           	callstack 30
  1716   01FB5E                     
  1717                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  1718   01FB5E  9288               	bcf	136,1,c	;volatile
  1719                           
  1720                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  1721   01FB60  9088               	bcf	136,0,c	;volatile
  1722                           
  1723                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  1724   01FB62  9884               	bcf	132,4,c	;volatile
  1725                           
  1726                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  1727   01FB64  9684               	bcf	132,3,c	;volatile
  1728                           
  1729                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  1730   01FB66  9086               	bcf	134,0,c	;volatile
  1731                           
  1732                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  1733   01FB68  9287               	bcf	135,1,c	;volatile
  1734                           
  1735                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  1736   01FB6A  9E86               	bcf	134,7,c	;volatile
  1737                           
  1738                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  1739   01FB6C  9881               	bcf	129,4,c	;volatile
  1740                           
  1741                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  1742   01FB6E  8E7E               	bsf	126,7,c	;volatile
  1743                           
  1744                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  1745   01FB70  827F               	bsf	127,1,c	;volatile
  1746                           
  1747                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  1748   01FB72  8879               	bsf	121,4,c	;volatile
  1749                           
  1750                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  1751   01FB74  987C               	bcf	124,4,c	;volatile
  1752                           
  1753                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  1754   01FB76  9280               	bcf	128,1,c	;volatile
  1755                           
  1756                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  1757   01FB78  907E               	bcf	126,0,c	;volatile
  1758                           
  1759                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  1760   01FB7A  9080               	bcf	128,0,c	;volatile
  1761                           
  1762                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  1763   01FB7C  967C               	bcf	124,3,c	;volatile
  1764   01FB7E  0012               	return		;funcret
  1765   01FB80                     __end_of_LEDSon_init:
  1766                           	callstack 0
  1767   000000                     
  1768                           	psect	rparam
  1769   000000                     
  1770                           	psect	idloc
  1771                           
  1772                           ;Config register IDLOC0 @ 0x200000
  1773                           ;	unspecified, using default values
  1774   200000                     	org	2097152
  1775   200000  0FFF               	dw	4095
  1776                           
  1777                           ;Config register IDLOC1 @ 0x200002
  1778                           ;	unspecified, using default values
  1779   200002                     	org	2097154
  1780   200002  0FFF               	dw	4095
  1781                           
  1782                           ;Config register IDLOC2 @ 0x200004
  1783                           ;	unspecified, using default values
  1784   200004                     	org	2097156
  1785   200004  0FFF               	dw	4095
  1786                           
  1787                           ;Config register IDLOC3 @ 0x200006
  1788                           ;	unspecified, using default values
  1789   200006                     	org	2097158
  1790   200006  0FFF               	dw	4095
  1791                           
  1792                           ;Config register IDLOC4 @ 0x200008
  1793                           ;	unspecified, using default values
  1794   200008                     	org	2097160
  1795   200008  0FFF               	dw	4095
  1796                           
  1797                           ;Config register IDLOC5 @ 0x20000A
  1798                           ;	unspecified, using default values
  1799   20000A                     	org	2097162
  1800   20000A  0FFF               	dw	4095
  1801                           
  1802                           ;Config register IDLOC6 @ 0x20000C
  1803                           ;	unspecified, using default values
  1804   20000C                     	org	2097164
  1805   20000C  0FFF               	dw	4095
  1806                           
  1807                           ;Config register IDLOC7 @ 0x20000E
  1808                           ;	unspecified, using default values
  1809   20000E                     	org	2097166
  1810   20000E  0FFF               	dw	4095
  1811                           
  1812                           	psect	config
  1813                           
  1814                           ;Config register CONFIG1L @ 0x300000
  1815                           ;	External Oscillator mode Selection bits
  1816                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1817                           ;	Power-up default value for COSC bits
  1818                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1819   300000                     	org	3145728
  1820   300000  AA                 	db	170
  1821                           
  1822                           ;Config register CONFIG1H @ 0x300001
  1823                           ;	unspecified, using default values
  1824                           ;	Clock Out Enable bit
  1825                           ;	CLKOUTEN = 0x1, unprogrammed default
  1826                           ;	Clock Switch Enable bit
  1827                           ;	CSWEN = 0x1, unprogrammed default
  1828                           ;	Fail-Safe Clock Monitor Enable bit
  1829                           ;	FCMEN = 0x1, unprogrammed default
  1830   300001                     	org	3145729
  1831   300001  FF                 	db	255
  1832                           
  1833                           ;Config register CONFIG2L @ 0x300002
  1834                           ;	unspecified, using default values
  1835                           ;	Master Clear Enable bit
  1836                           ;	MCLRE = 0x1, unprogrammed default
  1837                           ;	Power-up Timer Enable bit
  1838                           ;	PWRTE = 0x1, unprogrammed default
  1839                           ;	Low-power BOR enable bit
  1840                           ;	LPBOREN = 0x1, unprogrammed default
  1841                           ;	Brown-out Reset Enable bits
  1842                           ;	BOREN = 0x3, unprogrammed default
  1843   300002                     	org	3145730
  1844   300002  FF                 	db	255
  1845                           
  1846                           ;Config register CONFIG2H @ 0x300003
  1847                           ;	unspecified, using default values
  1848                           ;	Brown Out Reset Voltage selection bits
  1849                           ;	BORV = 0x3, unprogrammed default
  1850                           ;	ZCD Disable bit
  1851                           ;	ZCD = 0x1, unprogrammed default
  1852                           ;	PPSLOCK bit One-Way Set Enable bit
  1853                           ;	PPS1WAY = 0x1, unprogrammed default
  1854                           ;	Stack Full/Underflow Reset Enable bit
  1855                           ;	STVREN = 0x1, unprogrammed default
  1856                           ;	Debugger Enable bit
  1857                           ;	DEBUG = 0x1, unprogrammed default
  1858                           ;	Extended Instruction Set Enable bit
  1859                           ;	XINST = 0x1, unprogrammed default
  1860   300003                     	org	3145731
  1861   300003  FF                 	db	255
  1862                           
  1863                           ;Config register CONFIG3L @ 0x300004
  1864                           ;	WDT Period Select bits
  1865                           ;	WDTCPS = 0x1F, unprogrammed default
  1866                           ;	WDT operating mode
  1867                           ;	WDTE = OFF, WDT Disabled
  1868   300004                     	org	3145732
  1869   300004  9F                 	db	159
  1870                           
  1871                           ;Config register CONFIG3H @ 0x300005
  1872                           ;	unspecified, using default values
  1873                           ;	WDT Window Select bits
  1874                           ;	WDTCWS = 0x7, unprogrammed default
  1875                           ;	WDT input clock selector
  1876                           ;	WDTCCS = 0x7, unprogrammed default
  1877   300005                     	org	3145733
  1878   300005  FF                 	db	255
  1879                           
  1880                           ;Config register CONFIG4L @ 0x300006
  1881                           ;	unspecified, using default values
  1882                           ;	Write Protection Block 0
  1883                           ;	WRT0 = 0x1, unprogrammed default
  1884                           ;	Write Protection Block 1
  1885                           ;	WRT1 = 0x1, unprogrammed default
  1886                           ;	Write Protection Block 2
  1887                           ;	WRT2 = 0x1, unprogrammed default
  1888                           ;	Write Protection Block 3
  1889                           ;	WRT3 = 0x1, unprogrammed default
  1890                           ;	Write Protection Block 3
  1891                           ;	WRT4 = 0x1, unprogrammed default
  1892                           ;	Write Protection Block 3
  1893                           ;	WRT5 = 0x1, unprogrammed default
  1894                           ;	Write Protection Block 3
  1895                           ;	WRT6 = 0x1, unprogrammed default
  1896                           ;	Write Protection Block 3
  1897                           ;	WRT7 = 0x1, unprogrammed default
  1898   300006                     	org	3145734
  1899   300006  FF                 	db	255
  1900                           
  1901                           ;Config register CONFIG4H @ 0x300007
  1902                           ;	unspecified, using default values
  1903                           ;	Configuration Register Write Protection bit
  1904                           ;	WRTC = 0x1, unprogrammed default
  1905                           ;	Boot Block Write Protection bit
  1906                           ;	WRTB = 0x1, unprogrammed default
  1907                           ;	Data EEPROM Write Protection bit
  1908                           ;	WRTD = 0x1, unprogrammed default
  1909                           ;	Scanner Enable bit
  1910                           ;	SCANE = 0x1, unprogrammed default
  1911                           ;	Low Voltage Programming Enable bit
  1912                           ;	LVP = 0x1, unprogrammed default
  1913   300007                     	org	3145735
  1914   300007  FF                 	db	255
  1915                           
  1916                           ;Config register CONFIG5L @ 0x300008
  1917                           ;	unspecified, using default values
  1918                           ;	UserNVM Program Memory Code Protection bit
  1919                           ;	CP = 0x1, unprogrammed default
  1920                           ;	DataNVM Memory Code Protection bit
  1921                           ;	CPD = 0x1, unprogrammed default
  1922   300008                     	org	3145736
  1923   300008  FF                 	db	255
  1924                           
  1925                           ;Config register CONFIG5H @ 0x300009
  1926                           ;	unspecified, using default values
  1927   300009                     	org	3145737
  1928   300009  FF                 	db	255
  1929                           
  1930                           ;Config register CONFIG6L @ 0x30000A
  1931                           ;	unspecified, using default values
  1932                           ;	Table Read Protection Block 0
  1933                           ;	EBTR0 = 0x1, unprogrammed default
  1934                           ;	Table Read Protection Block 1
  1935                           ;	EBTR1 = 0x1, unprogrammed default
  1936                           ;	Table Read Protection Block 2
  1937                           ;	EBTR2 = 0x1, unprogrammed default
  1938                           ;	Table Read Protection Block 3
  1939                           ;	EBTR3 = 0x1, unprogrammed default
  1940                           ;	Table Read Protection Block 4
  1941                           ;	EBTR4 = 0x1, unprogrammed default
  1942                           ;	Table Read Protection Block 5
  1943                           ;	EBTR5 = 0x1, unprogrammed default
  1944                           ;	Table Read Protection Block 6
  1945                           ;	EBTR6 = 0x1, unprogrammed default
  1946                           ;	Table Read Protection Block 7
  1947                           ;	EBTR7 = 0x1, unprogrammed default
  1948   30000A                     	org	3145738
  1949   30000A  FF                 	db	255
  1950                           
  1951                           ;Config register CONFIG6H @ 0x30000B
  1952                           ;	unspecified, using default values
  1953                           ;	Boot Block Table Read Protection bit
  1954                           ;	EBTRB = 0x1, unprogrammed default
  1955   30000B                     	org	3145739
  1956   30000B  FF                 	db	255
  1957                           tosu	equ	0xFFF
  1958                           tosh	equ	0xFFE
  1959                           tosl	equ	0xFFD
  1960                           stkptr	equ	0xFFC
  1961                           pclatu	equ	0xFFB
  1962                           pclath	equ	0xFFA
  1963                           pcl	equ	0xFF9
  1964                           tblptru	equ	0xFF8
  1965                           tblptrh	equ	0xFF7
  1966                           tblptrl	equ	0xFF6
  1967                           tablat	equ	0xFF5
  1968                           prodh	equ	0xFF4
  1969                           prodl	equ	0xFF3
  1970                           indf0	equ	0xFEF
  1971                           postinc0	equ	0xFEE
  1972                           postdec0	equ	0xFED
  1973                           preinc0	equ	0xFEC
  1974                           plusw0	equ	0xFEB
  1975                           fsr0h	equ	0xFEA
  1976                           fsr0l	equ	0xFE9
  1977                           wreg	equ	0xFE8
  1978                           indf1	equ	0xFE7
  1979                           postinc1	equ	0xFE6
  1980                           postdec1	equ	0xFE5
  1981                           preinc1	equ	0xFE4
  1982                           plusw1	equ	0xFE3
  1983                           fsr1h	equ	0xFE2
  1984                           fsr1l	equ	0xFE1
  1985                           bsr	equ	0xFE0
  1986                           indf2	equ	0xFDF
  1987                           postinc2	equ	0xFDE
  1988                           postdec2	equ	0xFDD
  1989                           preinc2	equ	0xFDC
  1990                           plusw2	equ	0xFDB
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      58
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S532DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S532DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), main@motorL(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_Red->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                82    82      0    3046
                                             19 COMRAM    30    30      0
                  _I2C_2_Master_Init
                        _LEDSon_init
                   _color_click_init
                     _color_read_Red
                    _initDCmotorsPWM
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     591
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     591
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Red
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      3A       1       61.1%
BITBIGSFRllhhhh     52      0       0      40        0.0%
BITBIGSFRllllh      4B      0       0      50        0.0%
BITBIGSFRllhhhl     46      0       0      42        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllhhhl     2D      0       0      44        0.0%
BITBIGSFRlllll      2D      0       0      51        0.0%
BITBIGSFRllhhhl     1E      0       0      45        0.0%
BITBIGSFRhhlll      1D      0       0      36        0.0%
BITBIGSFRllhhl      11      0       0      46        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRlllhl       5      0       0      49        0.0%
BITBIGSFRlllhh       3      0       0      48        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRllhhhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhhhh      1      0       0      37        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhl      1      0       0      43        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllhl        1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A      52        0.0%
DATA                 0      0      3A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 10:35:39 2022

               _color_read_Red FC94                             l22 FB5C                             l25 FCE2  
                           l19 FC50                             l95 FFFE                             l88 FDDE  
                           u10 FBDC                             u11 FBD8                             u20 FBF2  
                           u21 FBEE                             u30 FC7C                             u31 FC74  
                           u48 FC7E            ___wmul@multiplicand 0003                            l151 FC1C  
                          l160 FB1C                            l241 FBA4                            l154 FBCC  
                          l163 FB30                            l172 FC92                            l157 FBF2  
                          l238 FB7E                            l166 FB26                            l169 FB3C  
                          l732 FD4E                            l920 FB18                            l930 FBF4  
                          l914 FBCC                            l922 FB34                            l739 FD56  
                          l940 FC0A                            l932 FBFE                            l916 FBDC  
                          l924 FB38                            l934 FC04                            l918 FB14  
                          l926 FB1E                            l950 FC58                            l936 FC06  
                          l928 FB22                            l952 FC60                            l944 FB28  
                          l938 FC08                            l954 FC68                            l946 FB2C  
                          l956 FC8E                            l948 FC54                            l958 FC90  
                          u200 FD38                            u201 FD34                            u210 FEB0  
                          u211 FEAC                            u220 FF7A                            u300 FE8A  
                          u221 FF76                            u301 FE86                            u180 FCFE  
                          u317 FC32                            u181 FCFA                            u190 FD1C  
                          u191 FD18                            u291 FE5A                            wreg 000FE8  
                         l1010 FD8A                           l1020 FDC6                           l1012 FDAE  
                         l1022 FDD0                           l1014 FDB8                           l1006 FD58  
                         l1024 FDD2                           l1016 FDBA                           l1008 FD60  
                         l1026 FDDC                           l1018 FDC4                           l1044 FB5E  
                         l1204 FB40                           l1220 FD0E                           l1212 FCE4  
                         l1230 FD42                           l1222 FD1C                           l1214 FCEC  
                         l1206 FB80                           l1240 FC3C                           l1232 FD48  
                         l1224 FD22                           l1216 FCFE                           l1208 FB9C  
                         l1400 FE6A                           l1242 FC46                           l1234 FC1E  
                         l1226 FD38                           l1218 FD06                           l1250 FE94  
                         l1402 FE6C                           l1236 FC22                           l1244 FC94  
                         l1228 FD40                           l1260 FF5E                           l1252 FEB0  
                         l1404 FE78                           l1238 FC2C                           l1246 FCDA  
                         l1262 FF7A                           l1254 FF04                           l1406 FE8A  
                         l1350 FDE4                           l1264 FFBE                           l1256 FF18  
                         l1360 FDF8                           l1352 FDE8                           l1258 FF1C  
                         l1370 FE16                           l1362 FDFC                           l1354 FDEC  
                         l1380 FE44                           l1372 FE1A                           l1364 FE00  
                         l1356 FDF0                           l1348 FDE0                           l1390 FE62  
                         l1382 FE50                           l1374 FE1E                           l1366 FE08  
                         l1358 FDF4                           l1392 FE62                           l1384 FE50  
                         l1376 FE32                           l1368 FE10                           l1394 FE64  
                         l1386 FE62                           l1378 FE38                           l1396 FE66  
                         l1388 FE62                           l1398 FE68                   ?_LEDSon_init 0001  
                         _T2PR 000FBC                           _main FDE0                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         prodh 000FF4                           prodl 000FF3                           start 0002  
       __end_of_color_read_Red FCE4                   ___param_bank 000000                          ?_main 0001  
              __end_of___lwdiv FD58     __end_of_I2C_2_Master_Start FB1E     __end_of_I2C_2_Master_Write FB3E  
                        tablat 000FF5                          plusw1 000FE3                          plusw2 000FDB  
                        status 000FD8          _I2C_2_Master_RepStart FB28                ?_color_read_Red 0005  
              __initialization FBA6                   __end_of_main FE94                         ??_main 0014  
                __activetblptr 000000                   ?_setMotorPWM 000E                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RD6PPS 000E70                         _RE4PPS 000E76                         _RG6PPS 000E88  
     __end_of_color_click_init FC52                   _CCPTMRS0bits 000FAD                         ___wmul FB80  
                    ??___lwdiv 000B                         isa$std 000001                   __pdataCOMRAM 0032  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
            ??_initDCmotorsPWM 0001                     __accesstop 0060        __end_of__initialization FBC6  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                 __pcstackCOMRAM 0001  
            _color_writetoaddr FB3E                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0003  
                      ?___wmul 0001            ??_color_writetoaddr 0004                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr FB5E             _I2C_2_Master_Start FB14             _I2C_2_Master_Write FB32  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
          ?_I2C_2_Master_Start 0001                        ___lwdiv FCE4            ?_I2C_2_Master_Write 0001  
                      __pcinit FBA6                        __ramtop 0E00                        __ptext0 FDE0  
                      __ptext1 FE94                        __ptext2 FB80                        __ptext3 FCE4  
                      __ptext4 FD58                        __ptext5 FC94                        __ptext6 FB28  
                      __ptext7 FC52                        __ptext8 FC1E                        __ptext9 FB3E  
                    _T2CONbits 000FBD                      _T2HLTbits 000FBE           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization FBC6              ?_color_click_init 0001  
           ??_color_click_init 0005                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                     main@F14298 0032  
              _initDCmotorsPWM FD58             setMotorPWM@negDuty 0013                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 000FAB                    _CCP2CONbits 000FA7                    _CCP3CONbits 000F26  
                  _CCP4CONbits 000F22                     main@motorL 0020                     main@motorR 0029  
         main@master_closeness 0014                 __end_of___wmul FBA6                  __pidataCOMRAM FB0B  
          start_initialization FBA6                  ??_LEDSon_init 0001        __end_of_initDCmotorsPWM FDE0  
                     ??___wmul 0005            __end_of_LEDSon_init FB80               ___lwdiv@dividend 0007  
                     ?___lwdiv 0007           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
            _I2C_2_Master_Idle FBCC              _I2C_2_Master_Init FBF4              _I2C_2_Master_Read FC52  
            _I2C_2_Master_Stop FB1E             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80               ?_initDCmotorsPWM 0001  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8      __end_of_I2C_2_Master_Idle FBF4  
    __end_of_I2C_2_Master_Init FC1E      __end_of_I2C_2_Master_Read FC94              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop FB28                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
                    copy_data0 FBBA                    _LEDSon_init FB5E  __end_of_I2C_2_Master_RepStart FB32  
          __end_of_setMotorPWM 0000                       __Hrparam 0000                       __Lrparam 0000  
                   _ANSELDbits 000EA7                ___lwdiv@divisor 0009                ___lwdiv@counter 000D  
                     __ptext10 FB32                       __ptext11 FB1E                       __ptext12 FB14  
                     __ptext13 FBCC                       __ptext14 FBF4                       __ptext15 FB5E  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                     main@test 001D                    _setMotorPWM FE94               _color_click_init FC1E  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                   main@PWMcycle 001F  
