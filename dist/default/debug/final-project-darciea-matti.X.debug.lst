

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 12:10:37 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.35
    56                           ; Generated 05/05/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _TX4REG	set	3812
    91   000000                     _RC4STAbits	set	3815
    92   000000                     _SP4BRGH	set	3814
    93   000000                     _LATHbits	set	3968
    94   000000                     _LATGbits	set	3967
    95   000000                     _TRISAbits	set	3969
    96   000000                     _TRISFbits	set	3974
    97   000000                     _TRISDbits	set	3972
    98   000000                     _TRISGbits	set	3975
    99   000000                     _SSP2CON2bits	set	3802
   100   000000                     _RX4PPS	set	3605
   101   000000                     _SSP2CLKPPS	set	3612
   102   000000                     _SSP2DATPPS	set	3613
   103   000000                     _RC7PPS	set	3689
   104   000000                     _RE2PPS	set	3700
   105   000000                     _TRISCbits	set	3971
   106   000000                     _TRISEbits	set	3973
   107   000000                     _TRISHbits	set	3976
   108   000000                     _PORTFbits	set	3982
   109   000000                     _T2PR	set	4028
   110   000000                     _T2CONbits	set	4029
   111   000000                     _CCPR2H	set	4006
   112   000000                     _CCPR1H	set	4010
   113   000000                     _RE4PPS	set	3702
   114   000000                     _RG6PPS	set	3720
   115   000000                     _RD5PPS	set	3695
   116   000000                     _ANSELDbits	set	3751
   117   000000                     _SSP2ADD	set	3798
   118   000000                     _SSP2CON1bits	set	3801
   119   000000                     _CCPR4H	set	3873
   120   000000                     _CCPR3H	set	3877
   121   000000                     _T2CLKCONbits	set	4031
   122   000000                     _T2HLTbits	set	4030
   123   000000                     _CCP1CONbits	set	4011
   124   000000                     _CCPTMRS0bits	set	4013
   125   000000                     _CCP2CONbits	set	4007
   126   000000                     _LATAbits	set	3961
   127   000000                     _LATDbits	set	3964
   128   000000                     _CCP3CONbits	set	3878
   129   000000                     _CCP4CONbits	set	3874
   130   000000                     _RC4REG	set	3811
   131   000000                     _SP4BRGL	set	3813
   132   000000                     _TX4STAbits	set	3816
   133   000000                     _BAUD4CONbits	set	3817
   134   000000                     _SSP2CON2	set	3802
   135   000000                     _SSP2STAT	set	3800
   136   000000                     _ANSELFbits	set	3764
   137   000000                     _SSP2BUF	set	3797
   138   000000                     _PIE4bits	set	3629
   139   000000                     _PIR4bits	set	3639
   140   000000                     _RC0PPS	set	3682
   141   000000                     _RD6PPS	set	3696
   142   000000                     _LATFbits	set	3966
   143                           
   144                           	psect	smallconst
   145   000E00                     __psmallconst:
   146                           	callstack 0
   147   000E00  00                 	db	0
   148   000E01                     STR_1:
   149   000E01  0A                 	db	10
   150   000E02  20                 	db	32
   151   000E03  41                 	db	65	;'A'
   152   000E04  56                 	db	86	;'V'
   153   000E05  47                 	db	71	;'G'
   154   000E06  3A                 	db	58	;':'
   155   000E07  20                 	db	32
   156   000E08  52                 	db	82	;'R'
   157   000E09  20                 	db	32
   158   000E0A  25                 	db	37
   159   000E0B  64                 	db	100	;'d'
   160   000E0C  2C                 	db	44
   161   000E0D  20                 	db	32
   162   000E0E  47                 	db	71	;'G'
   163   000E0F  20                 	db	32
   164   000E10  25                 	db	37
   165   000E11  64                 	db	100	;'d'
   166   000E12  2C                 	db	44
   167   000E13  20                 	db	32
   168   000E14  42                 	db	66	;'B'
   169   000E15  20                 	db	32
   170   000E16  25                 	db	37
   171   000E17  64                 	db	100	;'d'
   172   000E18  20                 	db	32
   173   000E19  0A                 	db	10
   174   000E1A  00                 	db	0
   175   000E1B                     STR_2:
   176   000E1B  43                 	db	67	;'C'
   177   000E1C  41                 	db	65	;'A'
   178   000E1D  52                 	db	82	;'R'
   179   000E1E  44                 	db	68	;'D'
   180   000E1F  20                 	db	32
   181   000E20  25                 	db	37
   182   000E21  64                 	db	100	;'d'
   183   000E22  20                 	db	32
   184   000E23  0A                 	db	10
   185   000E24  00                 	db	0
   186   000E25  00                 	db	0	; dummy byte at the end
   187   000000                     
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191   0022EA                     __pcinit:
   192                           	callstack 0
   193   0022EA                     start_initialization:
   194                           	callstack 0
   195   0022EA                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Clear objects allocated to BANK2 (60 bytes)
   199   0022EA  EE02  F000         	lfsr	0,__pbssBANK2
   200   0022EE  0E3C               	movlw	60
   201   0022F0                     clear_0:
   202   0022F0  6AEE               	clrf	postinc0,c
   203   0022F2  06E8               	decf	wreg,f,c
   204   0022F4  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to BANK1 (56 bytes)
   207   0022F6  EE01  F0A8         	lfsr	0,__pbssBANK1
   208   0022FA  0E38               	movlw	56
   209   0022FC                     clear_1:
   210   0022FC  6AEE               	clrf	postinc0,c
   211   0022FE  06E8               	decf	wreg,f,c
   212   002300  E1FD               	bnz	clear_1
   213                           
   214                           ; Clear objects allocated to BANK0 (4 bytes)
   215   002302  0100               	movlb	0
   216   002304  6BFE               	clrf	(__pbssBANK0+3)& (0+255),b
   217   002306  6BFD               	clrf	(__pbssBANK0+2)& (0+255),b
   218   002308  6BFC               	clrf	(__pbssBANK0+1)& (0+255),b
   219   00230A  6BFB               	clrf	__pbssBANK0& (0+255),b
   220                           
   221                           ; Clear objects allocated to COMRAM (1 bytes)
   222   00230C  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   223   00230E                     end_of_initialization:
   224                           	callstack 0
   225   00230E                     __end_of__initialization:
   226                           	callstack 0
   227   00230E  0100               	movlb	0
   228   002310  EF71  F009         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   00005F                     __pbssCOMRAM:
   232                           	callstack 0
   233   00005F                     _TxBufWriteCnt:
   234                           	callstack 0
   235   00005F                     	ds	1
   236                           
   237                           	psect	bssBANK0
   238   0000FB                     __pbssBANK0:
   239                           	callstack 0
   240   0000FB                     _flags:
   241                           	callstack 0
   242   0000FB                     	ds	1
   243   0000FC                     _TxBufReadCnt:
   244                           	callstack 0
   245   0000FC                     	ds	1
   246   0000FD                     _RxBufReadCnt:
   247                           	callstack 0
   248   0000FD                     	ds	1
   249   0000FE                     _RxBufWriteCnt:
   250                           	callstack 0
   251   0000FE                     	ds	1
   252                           
   253                           	psect	bssBANK1
   254   0001A8                     __pbssBANK1:
   255                           	callstack 0
   256   0001A8                     _EUSART4RXbuf:
   257                           	callstack 0
   258   0001A8                     	ds	20
   259   0001BC                     _width:
   260                           	callstack 0
   261   0001BC                     	ds	2
   262   0001BE                     _prec:
   263                           	callstack 0
   264   0001BE                     	ds	2
   265   0001C0                     _dbuf:
   266                           	callstack 0
   267   0001C0                     	ds	32
   268                           
   269                           	psect	bssBANK2
   270   000200                     __pbssBANK2:
   271                           	callstack 0
   272   000200                     _EUSART4TXbuf:
   273                           	callstack 0
   274   000200                     	ds	60
   275                           
   276                           	psect	cstackBANK1
   277   000100                     __pcstackBANK1:
   278                           	callstack 0
   279   000100                     main@buf:
   280                           	callstack 0
   281                           
   282                           ; 150 bytes @ 0x0
   283   000100                     	ds	150
   284   000196                     main@motorL:
   285                           	callstack 0
   286                           
   287                           ; 9 bytes @ 0x96
   288   000196                     	ds	9
   289   00019F                     main@motorR:
   290                           	callstack 0
   291                           
   292                           ; 9 bytes @ 0x9F
   293   00019F                     	ds	9
   294                           
   295                           	psect	cstackBANK0
   296   000060                     __pcstackBANK0:
   297                           	callstack 0
   298   000060                     ?_sprintf:
   299                           	callstack 0
   300   000060                     sprintf@s:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x0
   304   000060                     	ds	2
   305   000062                     sprintf@fmt:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2
   309   000062                     	ds	8
   310   00006A                     sprintf@ap:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0xA
   314   00006A                     	ds	2
   315   00006C                     sprintf@f:
   316                           	callstack 0
   317                           
   318                           ; 11 bytes @ 0xC
   319   00006C                     	ds	11
   320   000077                     main@expected_values:
   321                           	callstack 0
   322                           
   323                           ; 54 bytes @ 0x17
   324   000077                     	ds	54
   325   0000AD                     main@normalised_values:
   326                           	callstack 0
   327                           
   328                           ; 54 bytes @ 0x4D
   329   0000AD                     	ds	54
   330   0000E3                     main@master_closeness:
   331                           	callstack 0
   332                           
   333                           ; 18 bytes @ 0x83
   334   0000E3                     	ds	18
   335   0000F5                     main@red_read:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x95
   339   0000F5                     	ds	2
   340   0000F7                     main@green_read:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x97
   344   0000F7                     	ds	2
   345   0000F9                     main@blue_read:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x99
   349   0000F9                     	ds	2
   350                           
   351                           	psect	cstackCOMRAM
   352   000001                     __pcstackCOMRAM:
   353                           	callstack 0
   354   000001                     ??_I2C_2_Master_Idle:
   355   000001                     ?___wmul:
   356                           	callstack 0
   357   000001                     ?___aodiv:
   358                           	callstack 0
   359   000001                     ?___aomod:
   360                           	callstack 0
   361   000001                     sendCharSerial4@charToSend:
   362                           	callstack 0
   363   000001                     determine_card@master_closeness:
   364                           	callstack 0
   365   000001                     ___wmul@multiplier:
   366                           	callstack 0
   367   000001                     fputc@c:
   368                           	callstack 0
   369   000001                     ___aodiv@dividend:
   370                           	callstack 0
   371   000001                     ___aomod@dividend:
   372                           	callstack 0
   373                           
   374                           ; 8 bytes @ 0x0
   375   000001                     	ds	1
   376   000002                     ??_I2C_2_Master_Read:
   377   000002                     I2C_2_Master_Write@data_byte:
   378                           	callstack 0
   379   000002                     sendStringSerial4@string:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x1
   383   000002                     	ds	1
   384   000003                     ??_determine_card:
   385   000003                     color_writetoaddr@value:
   386                           	callstack 0
   387   000003                     I2C_2_Master_Read@ack:
   388                           	callstack 0
   389   000003                     ___wmul@multiplicand:
   390                           	callstack 0
   391   000003                     fputc@fp:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x2
   395   000003                     	ds	1
   396   000004                     color_writetoaddr@address:
   397                           	callstack 0
   398   000004                     I2C_2_Master_Read@tmp:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x3
   402   000004                     	ds	1
   403   000005                     ??_fputc:
   404   000005                     ??_color_click_init:
   405   000005                     ?_color_read_Red:
   406                           	callstack 0
   407   000005                     ?_color_read_Green:
   408                           	callstack 0
   409   000005                     ?_color_read_Blue:
   410                           	callstack 0
   411   000005                     ___wmul@product:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x4
   415   000005                     	ds	2
   416   000007                     ??_color_read_Red:
   417   000007                     ??_color_read_Green:
   418   000007                     ??_color_read_Blue:
   419   000007                     ?___lwdiv:
   420                           	callstack 0
   421   000007                     determine_card@current_smallest:
   422                           	callstack 0
   423   000007                     ___lwdiv@dividend:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x6
   427   000007                     	ds	2
   428   000009                     determine_card@predicted_colour:
   429                           	callstack 0
   430   000009                     ___lwdiv@divisor:
   431                           	callstack 0
   432   000009                     ___aodiv@divisor:
   433                           	callstack 0
   434   000009                     ___aomod@divisor:
   435                           	callstack 0
   436                           
   437                           ; 8 bytes @ 0x8
   438   000009                     	ds	1
   439   00000A                     determine_card@i:
   440                           	callstack 0
   441   00000A                     color_read_Red@tmp:
   442                           	callstack 0
   443   00000A                     color_read_Green@tmp:
   444                           	callstack 0
   445   00000A                     color_read_Blue@tmp:
   446                           	callstack 0
   447   00000A                     fputs@s:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x9
   451   00000A                     	ds	1
   452   00000B                     ___lwdiv@quotient:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0xA
   456   00000B                     	ds	1
   457   00000C                     fputs@fp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0xB
   461   00000C                     	ds	1
   462   00000D                     ___lwdiv@counter:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0xC
   466   00000D                     	ds	1
   467   00000E                     fputs@c:
   468                           	callstack 0
   469   00000E                     setMotorPWM@m:
   470                           	callstack 0
   471   00000E                     collect_avg_readings@red_read:
   472                           	callstack 0
   473   00000E                     make_master_closeness@buf:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xD
   477   00000E                     	ds	1
   478   00000F                     fputs@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0xE
   482   00000F                     	ds	1
   483   000010                     ??_setMotorPWM:
   484   000010                     collect_avg_readings@green_read:
   485                           	callstack 0
   486   000010                     make_master_closeness@normalised_values:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xF
   490   000010                     	ds	1
   491   000011                     ___aodiv@counter:
   492                           	callstack 0
   493   000011                     ___aomod@counter:
   494                           	callstack 0
   495   000011                     pad@fp:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x10
   499   000011                     	ds	1
   500   000012                     setMotorPWM@posDuty:
   501                           	callstack 0
   502   000012                     ___aodiv@sign:
   503                           	callstack 0
   504   000012                     ___aomod@sign:
   505                           	callstack 0
   506   000012                     collect_avg_readings@blue_read:
   507                           	callstack 0
   508   000012                     make_master_closeness@master_closeness:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x11
   512   000012                     	ds	1
   513   000013                     ?_abs:
   514                           	callstack 0
   515   000013                     setMotorPWM@negDuty:
   516                           	callstack 0
   517   000013                     abs@a:
   518                           	callstack 0
   519   000013                     pad@buf:
   520                           	callstack 0
   521   000013                     ___aodiv@quotient:
   522                           	callstack 0
   523                           
   524                           ; 8 bytes @ 0x12
   525   000013                     	ds	1
   526   000014                     ??_collect_avg_readings:
   527   000014                     ??_make_master_closeness:
   528                           
   529                           ; 1 bytes @ 0x13
   530   000014                     	ds	1
   531   000015                     ??_abs:
   532   000015                     pad@p:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x14
   536   000015                     	ds	1
   537   000016                     collect_avg_readings@i:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x15
   541   000016                     	ds	1
   542   000017                     ??_pad:
   543   000017                     normalise_readings@buf:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x16
   547   000017                     	ds	1
   548   000018                     collect_avg_readings@i_1553:
   549                           	callstack 0
   550   000018                     pad@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x17
   554   000018                     	ds	1
   555   000019                     normalise_readings@red_read:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x18
   559   000019                     	ds	1
   560   00001A                     collect_avg_readings@i_1554:
   561                           	callstack 0
   562   00001A                     pad@w:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x19
   566   00001A                     	ds	1
   567   00001B                     normalise_readings@green_read:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x1A
   571   00001B                     	ds	1
   572   00001C                     collect_avg_readings@i_1555:
   573                           	callstack 0
   574   00001C                     dtoa@fp:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x1B
   578   00001C                     	ds	1
   579   00001D                     normalise_readings@blue_read:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x1C
   583   00001D                     	ds	1
   584   00001E                     dtoa@d:
   585                           	callstack 0
   586                           
   587                           ; 8 bytes @ 0x1D
   588   00001E                     	ds	1
   589   00001F                     normalise_readings@expected_values:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x1E
   593   00001F                     	ds	2
   594   000021                     normalise_readings@normalised_values:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x20
   598   000021                     	ds	2
   599   000023                     ??_normalise_readings:
   600                           
   601                           ; 1 bytes @ 0x22
   602   000023                     	ds	3
   603   000026                     ??_dtoa:
   604                           
   605                           ; 1 bytes @ 0x25
   606   000026                     	ds	2
   607   000028                     make_master_closeness@i:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x27
   611   000028                     	ds	3
   612   00002B                     normalise_readings@difference:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x2A
   616   00002B                     	ds	2
   617   00002D                     normalise_readings@i:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x2C
   621   00002D                     	ds	1
   622   00002E                     _dtoa$2279:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x2D
   626   00002E                     	ds	2
   627   000030                     dtoa@p:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2F
   631   000030                     	ds	2
   632   000032                     dtoa@w:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x31
   636   000032                     	ds	2
   637   000034                     dtoa@n:
   638                           	callstack 0
   639                           
   640                           ; 8 bytes @ 0x33
   641   000034                     	ds	8
   642   00003C                     dtoa@i:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x3B
   646   00003C                     	ds	2
   647   00003E                     dtoa@s:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x3D
   651   00003E                     	ds	1
   652   00003F                     vfpfcnvrt@fp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x3E
   656   00003F                     	ds	2
   657   000041                     vfpfcnvrt@fmt:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x40
   661   000041                     	ds	2
   662   000043                     vfpfcnvrt@ap:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x42
   666   000043                     	ds	2
   667   000045                     ??_vfpfcnvrt:
   668                           
   669                           ; 1 bytes @ 0x44
   670   000045                     	ds	2
   671   000047                     vfpfcnvrt@convarg:
   672                           	callstack 0
   673                           
   674                           ; 8 bytes @ 0x46
   675   000047                     	ds	8
   676   00004F                     vfpfcnvrt@cp:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x4E
   680   00004F                     	ds	2
   681   000051                     ?_vfprintf:
   682                           	callstack 0
   683   000051                     vfprintf@fp:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x50
   687   000051                     	ds	2
   688   000053                     vfprintf@fmt:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x52
   692   000053                     	ds	2
   693   000055                     vfprintf@ap:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x54
   697   000055                     	ds	2
   698   000057                     vfprintf@cfmt:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x56
   702   000057                     	ds	2
   703   000059                     ??_main:
   704                           
   705                           ; 1 bytes @ 0x58
   706   000059                     	ds	2
   707   00005B                     main@card:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x5A
   711   00005B                     	ds	1
   712   00005C                     main@i:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x5B
   716   00005C                     	ds	2
   717   00005E                     main@PWMcycle:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x5D
   721   00005E                     	ds	1
   722                           
   723 ;;
   724 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   725 ;;
   726 ;; *************** function _main *****************
   727 ;; Defined at:
   728 ;;		line 20 in file "main.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  i               2   91[COMRAM] int 
   733 ;;  buf           150    0[BANK1 ] unsigned char [150]
   734 ;;  normalised_v   54   77[BANK0 ] unsigned int [9][3]
   735 ;;  expected_val   54   23[BANK0 ] unsigned int [9][3]
   736 ;;  master_close   18  131[BANK0 ] unsigned int [9]
   737 ;;  motorR          9  159[BANK1 ] struct DC_motor
   738 ;;  motorL          9  150[BANK1 ] struct DC_motor
   739 ;;  blue_read       2  153[BANK0 ] unsigned int 
   740 ;;  green_read      2  151[BANK0 ] unsigned int 
   741 ;;  red_read        2  149[BANK0 ] unsigned int 
   742 ;;  PWMcycle        1   93[COMRAM] unsigned char 
   743 ;;  card            1   90[COMRAM] enum E14575
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Locals:         4     132     168       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Totals:         6     132     168       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;Total ram usage:      306 bytes
   758 ;; Hardware stack levels required when called: 8
   759 ;; This function calls:
   760 ;;		_I2C_2_Master_Init
   761 ;;		_LEDSon_init
   762 ;;		_collect_avg_readings
   763 ;;		_color_click_init
   764 ;;		_determine_card
   765 ;;		_initDCmotorsPWM
   766 ;;		_initUSART4
   767 ;;		_make_master_closeness
   768 ;;		_normalise_readings
   769 ;;		_sendStringSerial4
   770 ;;		_setMotorPWM
   771 ;;		_sprintf
   772 ;; This function is called by:
   773 ;;		Startup code after reset
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text0
   778   0012E2                     __ptext0:
   779                           	callstack 0
   780   0012E2                     _main:
   781                           	callstack 23
   782   0012E2                     
   783                           ;main.c: 25:     LEDSon_init();
   784   0012E2  ECC6  F011         	call	_LEDSon_init	;wreg free
   785   0012E6                     
   786                           ;main.c: 26:     I2C_2_Master_Init();
   787   0012E6  EC8A  F011         	call	_I2C_2_Master_Init	;wreg free
   788   0012EA                     
   789                           ;main.c: 27:     color_click_init();
   790   0012EA  EC43  F011         	call	_color_click_init	;wreg free
   791   0012EE                     
   792                           ;main.c: 28:     initDCmotorsPWM();
   793   0012EE  EC1B  F00F         	call	_initDCmotorsPWM	;wreg free
   794   0012F2                     
   795                           ;main.c: 29:     initUSART4();
   796   0012F2  ECD7  F011         	call	_initUSART4	;wreg free
   797   0012F6                     
   798                           ;main.c: 31:     TRISFbits.TRISF2=1;
   799   0012F6  8486               	bsf	134,2,c	;volatile
   800   0012F8                     
   801                           ;main.c: 32:     ANSELFbits.ANSELF2=0;
   802   0012F8  010E               	movlb	14	; () banked
   803   0012FA  95B4               	bcf	180,2,b	;volatile
   804   0012FC                     
   805                           ; BSR set to: 14
   806                           ;main.c: 40:     unsigned char PWMcycle = T2PR;
   807   0012FC  CFBC F05E          	movff	4028,main@PWMcycle	;volatile
   808   001300                     
   809                           ; BSR set to: 14
   810                           ;main.c: 42:     struct DC_motor motorL, motorR;;main.c: 44:     motorL.power=0;
   811   001300  0E00               	movlw	0
   812   001302  0101               	movlb	1	; () banked
   813   001304  6F96               	movwf	main@motorL& (0+255),b
   814   001306                     
   815                           ; BSR set to: 1
   816                           ;main.c: 45:     motorL.direction=1;
   817   001306  0E01               	movlw	1
   818   001308  6F97               	movwf	(main@motorL+1)& (0+255),b
   819   00130A                     
   820                           ; BSR set to: 1
   821                           ;main.c: 46:     motorL.brakemode=1;
   822   00130A  0E01               	movlw	1
   823   00130C  6F98               	movwf	(main@motorL+2)& (0+255),b
   824   00130E                     
   825                           ; BSR set to: 1
   826                           ;main.c: 47:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   827   00130E  0EAA               	movlw	170
   828   001310  6F9B               	movwf	(main@motorL+5)& (0+255),b
   829   001312  0E0F               	movlw	15
   830   001314  6F9C               	movwf	(main@motorL+6)& (0+255),b
   831   001316                     
   832                           ; BSR set to: 1
   833                           ;main.c: 48:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   834   001316  0EA6               	movlw	166
   835   001318  6F9D               	movwf	(main@motorL+7)& (0+255),b
   836   00131A  0E0F               	movlw	15
   837   00131C  6F9E               	movwf	(main@motorL+8)& (0+255),b
   838   00131E                     
   839                           ; BSR set to: 1
   840                           ;main.c: 49:     motorL.PWMperiod=PWMcycle;
   841   00131E  C05E  F199         	movff	main@PWMcycle,main@motorL+3
   842   001322  6B9A               	clrf	(main@motorL+4)& (0+255),b
   843   001324                     
   844                           ; BSR set to: 1
   845                           ;main.c: 51:     motorR.power=0;
   846   001324  0E00               	movlw	0
   847   001326  6F9F               	movwf	main@motorR& (0+255),b
   848   001328                     
   849                           ; BSR set to: 1
   850                           ;main.c: 52:     motorR.direction=1;
   851   001328  0E01               	movlw	1
   852   00132A  6FA0               	movwf	(main@motorR+1)& (0+255),b
   853   00132C                     
   854                           ; BSR set to: 1
   855                           ;main.c: 53:     motorR.brakemode=1;
   856   00132C  0E01               	movlw	1
   857   00132E  6FA1               	movwf	(main@motorR+2)& (0+255),b
   858   001330                     
   859                           ; BSR set to: 1
   860                           ;main.c: 54:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   861   001330  0E25               	movlw	37
   862   001332  6FA4               	movwf	(main@motorR+5)& (0+255),b
   863   001334  0E0F               	movlw	15
   864   001336  6FA5               	movwf	(main@motorR+6)& (0+255),b
   865   001338                     
   866                           ; BSR set to: 1
   867                           ;main.c: 55:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   868   001338  0E21               	movlw	33
   869   00133A  6FA6               	movwf	(main@motorR+7)& (0+255),b
   870   00133C  0E0F               	movlw	15
   871   00133E  6FA7               	movwf	(main@motorR+8)& (0+255),b
   872   001340                     
   873                           ; BSR set to: 1
   874                           ;main.c: 56:     motorR.PWMperiod=PWMcycle;
   875   001340  C05E  F1A2         	movff	main@PWMcycle,main@motorR+3
   876   001344  6BA3               	clrf	(main@motorR+4)& (0+255),b
   877   001346                     
   878                           ; BSR set to: 1
   879                           ;main.c: 58:     setMotorPWM(&motorL);
   880   001346  0E96               	movlw	low main@motorL
   881   001348  6E0E               	movwf	setMotorPWM@m^0,c
   882   00134A  0E01               	movlw	high main@motorL
   883   00134C  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   884   00134E  EC29  F00C         	call	_setMotorPWM	;wreg free
   885   001352                     
   886                           ;main.c: 59:     setMotorPWM(&motorR);
   887   001352  0E9F               	movlw	low main@motorR
   888   001354  6E0E               	movwf	setMotorPWM@m^0,c
   889   001356  0E01               	movlw	high main@motorR
   890   001358  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   891   00135A  EC29  F00C         	call	_setMotorPWM	;wreg free
   892   00135E                     
   893                           ;main.c: 66:     unsigned int expected_values[3][9];;main.c: 67:     unsigned int normal
      +                          ised_values[3][9];;main.c: 68:     unsigned int master_closeness[9];;main.c: 69:     uns
      +                          igned int red_read = 0;
   894   00135E  0E00               	movlw	0
   895   001360  0100               	movlb	0	; () banked
   896   001362  6FF6               	movwf	(main@red_read+1)& (0+255),b
   897   001364  0E00               	movlw	0
   898   001366  6FF5               	movwf	main@red_read& (0+255),b
   899   001368                     
   900                           ; BSR set to: 0
   901                           ;main.c: 70:     unsigned int green_read = 0;
   902   001368  0E00               	movlw	0
   903   00136A  6FF8               	movwf	(main@green_read+1)& (0+255),b
   904   00136C  0E00               	movlw	0
   905   00136E  6FF7               	movwf	main@green_read& (0+255),b
   906   001370                     
   907                           ; BSR set to: 0
   908                           ;main.c: 71:     unsigned int blue_read = 0;
   909   001370  0E00               	movlw	0
   910   001372  6FFA               	movwf	(main@blue_read+1)& (0+255),b
   911   001374  0E00               	movlw	0
   912   001376  6FF9               	movwf	main@blue_read& (0+255),b
   913   001378                     
   914                           ; BSR set to: 0
   915                           ;main.c: 83:     LATDbits.LATD4 = 0;
   916   001378  987C               	bcf	124,4,c	;volatile
   917   00137A                     
   918                           ; BSR set to: 0
   919                           ;main.c: 84:     for(int i = 0; i<= 7; i++){
   920   00137A  0E00               	movlw	0
   921   00137C  6E5D               	movwf	(main@i+1)^0,c
   922   00137E  0E00               	movlw	0
   923   001380  6E5C               	movwf	main@i^0,c
   924   001382  EFD0  F009         	goto	l2659
   925   001386                     l238:
   926                           
   927                           ;main.c: 86:             LATDbits.LATD4 = 1;
   928   001386  887C               	bsf	124,4,c	;volatile
   929   001388                     
   930                           ;main.c: 87:             _delay((unsigned long)((500)*(64000000/4000.0)));
   931   001388  0E29               	movlw	41
   932   00138A  6E5A               	movwf	(??_main+1)^0,c
   933   00138C  0E96               	movlw	150
   934   00138E  6E59               	movwf	??_main^0,c
   935   001390  0E7F               	movlw	127
   936   001392                     u1447:
   937   001392  2EE8               	decfsz	wreg,f,c
   938   001394  D7FE               	bra	u1447
   939   001396  2E59               	decfsz	??_main^0,f,c
   940   001398  D7FC               	bra	u1447
   941   00139A  2E5A               	decfsz	(??_main+1)^0,f,c
   942   00139C  D7FA               	bra	u1447
   943   00139E  F000               	nop	
   944   0013A0                     l2659:
   945                           
   946                           ;main.c: 85:         while(PORTFbits.RF2){
   947   0013A0  B48E               	btfsc	142,2,c	;volatile
   948   0013A2  EFD5  F009         	goto	u1361
   949   0013A6  EFD7  F009         	goto	u1360
   950   0013AA                     u1361:
   951   0013AA  EFC3  F009         	goto	l238
   952   0013AE                     u1360:
   953   0013AE                     
   954                           ;main.c: 89:         LATDbits.LATD4 = 0;
   955   0013AE  987C               	bcf	124,4,c	;volatile
   956   0013B0                     
   957                           ;main.c: 90:         _delay((unsigned long)((500)*(64000000/4000.0)));
   958   0013B0  0E29               	movlw	41
   959   0013B2  6E5A               	movwf	(??_main+1)^0,c
   960   0013B4  0E96               	movlw	150
   961   0013B6  6E59               	movwf	??_main^0,c
   962   0013B8  0E7F               	movlw	127
   963   0013BA                     u1457:
   964   0013BA  2EE8               	decfsz	wreg,f,c
   965   0013BC  D7FE               	bra	u1457
   966   0013BE  2E59               	decfsz	??_main^0,f,c
   967   0013C0  D7FC               	bra	u1457
   968   0013C2  2E5A               	decfsz	(??_main+1)^0,f,c
   969   0013C4  D7FA               	bra	u1457
   970   0013C6  F000               	nop	
   971   0013C8                     
   972                           ;main.c: 95:     }
   973   0013C8  4A5C               	infsnz	main@i^0,f,c
   974   0013CA  2A5D               	incf	(main@i+1)^0,f,c
   975   0013CC  BE5D               	btfsc	(main@i+1)^0,7,c
   976   0013CE  EFF2  F009         	goto	u1371
   977   0013D2  505D               	movf	(main@i+1)^0,w,c
   978   0013D4  E109               	bnz	u1370
   979   0013D6  0E08               	movlw	8
   980   0013D8  5C5C               	subwf	main@i^0,w,c
   981   0013DA  A0D8               	btfss	status,0,c
   982   0013DC  EFF2  F009         	goto	u1371
   983   0013E0  EFF4  F009         	goto	u1370
   984   0013E4                     u1371:
   985   0013E4  EFD0  F009         	goto	l2659
   986   0013E8                     u1370:
   987   0013E8  EFF8  F009         	goto	l241
   988   0013EC                     l242:
   989                           
   990                           ;main.c: 120:             LATDbits.LATD4 = 1;
   991   0013EC  887C               	bsf	124,4,c	;volatile
   992                           
   993                           ;main.c: 121:             LATFbits.LATF0 = 1;
   994   0013EE  807E               	bsf	126,0,c	;volatile
   995   0013F0                     l241:
   996                           
   997                           ;main.c: 119:         while(PORTFbits.RF2){
   998   0013F0  B48E               	btfsc	142,2,c	;volatile
   999   0013F2  EFFD  F009         	goto	u1381
  1000   0013F6  EFFF  F009         	goto	u1380
  1001   0013FA                     u1381:
  1002   0013FA  EFF6  F009         	goto	l242
  1003   0013FE                     u1380:
  1004   0013FE                     
  1005                           ;main.c: 123:         LATFbits.LATF0 = 0;
  1006   0013FE  907E               	bcf	126,0,c	;volatile
  1007   001400                     
  1008                           ;main.c: 126:         collect_avg_readings(&red_read, &green_read, &blue_read);
  1009   001400  0EF5               	movlw	low main@red_read
  1010   001402  6E0E               	movwf	collect_avg_readings@red_read^0,c
  1011   001404  0E00               	movlw	high main@red_read
  1012   001406  6E0F               	movwf	(collect_avg_readings@red_read+1)^0,c
  1013   001408  0EF7               	movlw	low main@green_read
  1014   00140A  6E10               	movwf	collect_avg_readings@green_read^0,c
  1015   00140C  0E00               	movlw	high main@green_read
  1016   00140E  6E11               	movwf	(collect_avg_readings@green_read+1)^0,c
  1017   001410  0EF9               	movlw	low main@blue_read
  1018   001412  6E12               	movwf	collect_avg_readings@blue_read^0,c
  1019   001414  0E00               	movlw	high main@blue_read
  1020   001416  6E13               	movwf	(collect_avg_readings@blue_read+1)^0,c
  1021   001418  EC72  F00A         	call	_collect_avg_readings	;wreg free
  1022   00141C                     
  1023                           ;main.c: 127:         sprintf(buf, "\n AVG: R %d, G %d, B %d \n", red_read, green_read, 
      +                          blue_read);
  1024   00141C  0E00               	movlw	low main@buf
  1025   00141E  0100               	movlb	0	; () banked
  1026   001420  6F60               	movwf	sprintf@s& (0+255),b
  1027   001422  0E01               	movlw	high main@buf
  1028   001424  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1029   001426  0E01               	movlw	low STR_1
  1030   001428  6F62               	movwf	sprintf@fmt& (0+255),b
  1031   00142A  0E0E               	movlw	high STR_1
  1032   00142C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1033   00142E  C0F5  F064         	movff	main@red_read,?_sprintf+4
  1034   001432  C0F6  F065         	movff	main@red_read+1,?_sprintf+5
  1035   001436  C0F7  F066         	movff	main@green_read,?_sprintf+6
  1036   00143A  C0F8  F067         	movff	main@green_read+1,?_sprintf+7
  1037   00143E  C0F9  F068         	movff	main@blue_read,?_sprintf+8
  1038   001442  C0FA  F069         	movff	main@blue_read+1,?_sprintf+9
  1039   001446  EC16  F010         	call	_sprintf	;wreg free
  1040   00144A                     
  1041                           ;main.c: 128:         sendStringSerial4(buf);
  1042   00144A  0E00               	movlw	low main@buf
  1043   00144C  6E02               	movwf	sendStringSerial4@string^0,c
  1044   00144E  0E01               	movlw	high main@buf
  1045   001450  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1046   001452  EC5D  F011         	call	_sendStringSerial4	;wreg free
  1047   001456                     
  1048                           ;main.c: 130:         normalise_readings(buf, red_read, green_read, blue_read, expected_
      +                          values, normalised_values);
  1049   001456  0E00               	movlw	low main@buf
  1050   001458  6E17               	movwf	normalise_readings@buf^0,c
  1051   00145A  0E01               	movlw	high main@buf
  1052   00145C  6E18               	movwf	(normalise_readings@buf+1)^0,c
  1053   00145E  C0F5  F019         	movff	main@red_read,normalise_readings@red_read
  1054   001462  C0F6  F01A         	movff	main@red_read+1,normalise_readings@red_read+1
  1055   001466  C0F7  F01B         	movff	main@green_read,normalise_readings@green_read
  1056   00146A  C0F8  F01C         	movff	main@green_read+1,normalise_readings@green_read+1
  1057   00146E  C0F9  F01D         	movff	main@blue_read,normalise_readings@blue_read
  1058   001472  C0FA  F01E         	movff	main@blue_read+1,normalise_readings@blue_read+1
  1059   001476  0E77               	movlw	low main@expected_values
  1060   001478  6E1F               	movwf	normalise_readings@expected_values^0,c
  1061   00147A  0E00               	movlw	high main@expected_values
  1062   00147C  6E20               	movwf	(normalise_readings@expected_values+1)^0,c
  1063   00147E  0EAD               	movlw	low main@normalised_values
  1064   001480  6E21               	movwf	normalise_readings@normalised_values^0,c
  1065   001482  0E00               	movlw	high main@normalised_values
  1066   001484  6E22               	movwf	(normalise_readings@normalised_values+1)^0,c
  1067   001486  EC51  F008         	call	_normalise_readings	;wreg free
  1068   00148A                     
  1069                           ;main.c: 131:         make_master_closeness(buf, normalised_values,master_closeness);
  1070   00148A  0E00               	movlw	low main@buf
  1071   00148C  6E0E               	movwf	make_master_closeness@buf^0,c
  1072   00148E  0E01               	movlw	high main@buf
  1073   001490  6E0F               	movwf	(make_master_closeness@buf+1)^0,c
  1074   001492  0EAD               	movlw	low main@normalised_values
  1075   001494  6E10               	movwf	make_master_closeness@normalised_values^0,c
  1076   001496  0E00               	movlw	high main@normalised_values
  1077   001498  6E11               	movwf	(make_master_closeness@normalised_values+1)^0,c
  1078   00149A  0EE3               	movlw	low main@master_closeness
  1079   00149C  6E12               	movwf	make_master_closeness@master_closeness^0,c
  1080   00149E  0E00               	movlw	high main@master_closeness
  1081   0014A0  6E13               	movwf	(make_master_closeness@master_closeness+1)^0,c
  1082   0014A2  EC40  F00E         	call	_make_master_closeness	;wreg free
  1083   0014A6                     
  1084                           ;main.c: 132:         card = determine_card(master_closeness);
  1085   0014A6  0EE3               	movlw	low main@master_closeness
  1086   0014A8  6E01               	movwf	determine_card@master_closeness^0,c
  1087   0014AA  0E00               	movlw	high main@master_closeness
  1088   0014AC  6E02               	movwf	(determine_card@master_closeness+1)^0,c
  1089   0014AE  EC5F  F00F         	call	_determine_card	;wreg free
  1090   0014B2  6E5B               	movwf	main@card^0,c
  1091   0014B4                     
  1092                           ;main.c: 133:         sprintf(buf, "CARD %d \n", card);
  1093   0014B4  0E00               	movlw	low main@buf
  1094   0014B6  0100               	movlb	0	; () banked
  1095   0014B8  6F60               	movwf	sprintf@s& (0+255),b
  1096   0014BA  0E01               	movlw	high main@buf
  1097   0014BC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1098   0014BE  0E1B               	movlw	low STR_2
  1099   0014C0  6F62               	movwf	sprintf@fmt& (0+255),b
  1100   0014C2  0E0E               	movlw	high STR_2
  1101   0014C4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1102   0014C6  C05B  F064         	movff	main@card,?_sprintf+4
  1103   0014CA  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1104   0014CC  EC16  F010         	call	_sprintf	;wreg free
  1105   0014D0                     
  1106                           ;main.c: 134:         sendStringSerial4(buf);
  1107   0014D0  0E00               	movlw	low main@buf
  1108   0014D2  6E02               	movwf	sendStringSerial4@string^0,c
  1109   0014D4  0E01               	movlw	high main@buf
  1110   0014D6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1111   0014D8  EC5D  F011         	call	_sendStringSerial4	;wreg free
  1112   0014DC  EFF8  F009         	goto	l241
  1113   0014E0  EF01  F000         	goto	start
  1114   0014E4                     __end_of_main:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _sprintf *****************
  1118 ;; Defined at:
  1119 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1122 ;;		 -> main@buf(150), 
  1123 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1124 ;;		 -> STR_2(10), STR_1(26), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  f              11   12[BANK0 ] struct _IO_FILE
  1127 ;;  ap              2   10[BANK0 ] PTR void [1]
  1128 ;;		 -> ?_sprintf(2), 
  1129 ;;  ret             2    0        int 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  2    0[BANK0 ] int 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1139 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1140 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1142 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1143 ;;Total ram usage:       23 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 7
  1146 ;; This function calls:
  1147 ;;		_vfprintf
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text1
  1154   00202C                     __ptext1:
  1155                           	callstack 0
  1156   00202C                     _sprintf:
  1157                           	callstack 23
  1158   00202C  0E64               	movlw	low (?_sprintf+4)
  1159   00202E  0100               	movlb	0	; () banked
  1160   002030  6F6A               	movwf	sprintf@ap& (0+255),b
  1161   002032  0E00               	movlw	high (?_sprintf+4)
  1162   002034  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1163   002036  C060  F06C         	movff	sprintf@s,sprintf@f
  1164   00203A  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1165   00203E                     
  1166                           ; BSR set to: 0
  1167   00203E  0E00               	movlw	0
  1168   002040  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1169   002042  0E00               	movlw	0
  1170   002044  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1171   002046                     
  1172                           ; BSR set to: 0
  1173   002046  0E00               	movlw	0
  1174   002048  6F76               	movwf	(sprintf@f+10)& (0+255),b
  1175   00204A  0E00               	movlw	0
  1176   00204C  6F75               	movwf	(sprintf@f+9)& (0+255),b
  1177   00204E                     
  1178                           ; BSR set to: 0
  1179   00204E  0E6C               	movlw	low sprintf@f
  1180   002050  6E51               	movwf	vfprintf@fp^0,c
  1181   002052  0E00               	movlw	high sprintf@f
  1182   002054  6E52               	movwf	(vfprintf@fp+1)^0,c
  1183   002056  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1184   00205A  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1185   00205E  0E6A               	movlw	low sprintf@ap
  1186   002060  6E55               	movwf	vfprintf@ap^0,c
  1187   002062  0E00               	movlw	high sprintf@ap
  1188   002064  6E56               	movwf	(vfprintf@ap+1)^0,c
  1189   002066  EC3F  F010         	call	_vfprintf	;wreg free
  1190   00206A  0100               	movlb	0	; () banked
  1191   00206C  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1192   00206E  2560               	addwf	sprintf@s& (0+255),w,b
  1193   002070  6ED9               	movwf	fsr2l,c
  1194   002072  5170               	movf	(sprintf@f+4)& (0+255),w,b
  1195   002074  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1196   002076  6EDA               	movwf	fsr2h,c
  1197   002078  0E00               	movlw	0
  1198   00207A  6EDF               	movwf	indf2,c
  1199   00207C                     
  1200                           ; BSR set to: 0
  1201   00207C  0012               	return		;funcret
  1202   00207E                     __end_of_sprintf:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _vfprintf *****************
  1206 ;; Defined at:
  1207 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1210 ;;		 -> sprintf@f(11), 
  1211 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1212 ;;		 -> STR_2(10), STR_1(26), 
  1213 ;;  ap              2   84[COMRAM] PTR PTR void 
  1214 ;;		 -> sprintf@ap(2), 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1217 ;;		 -> STR_2(10), STR_1(26), 
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  2   80[COMRAM] int 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1227 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;Total ram usage:        8 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; Hardware stack levels required when called: 6
  1234 ;; This function calls:
  1235 ;;		_vfpfcnvrt
  1236 ;; This function is called by:
  1237 ;;		_sprintf
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text2
  1242   00207E                     __ptext2:
  1243                           	callstack 0
  1244   00207E                     _vfprintf:
  1245                           	callstack 23
  1246   00207E                     
  1247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1248   00207E  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1249   002082  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1252   002086  EF53  F010         	goto	l2293
  1253   00208A                     l2291:
  1254                           
  1255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1256   00208A  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1257   00208E  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1258   002092  0E57               	movlw	low vfprintf@cfmt
  1259   002094  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1260   002096  0E00               	movlw	high vfprintf@cfmt
  1261   002098  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1262   00209A  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1263   00209E  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1264   0020A2  EC91  F00D         	call	_vfpfcnvrt	;wreg free
  1265   0020A6                     l2293:
  1266                           
  1267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1268   0020A6  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1269   0020AA  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1270   0020AE                     	if	0	;tblptru may be non-zero
  1271   0020AE                     	endif
  1272   0020AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1273   0020AE  0E00               	movlw	low (__mediumconst shr (0+16))
  1274   0020B0  6EF8               	movwf	tblptru,c
  1275   0020B2                     	endif
  1276   0020B2  0008               	tblrd		*
  1277   0020B4  50F5               	movf	tablat,w,c
  1278   0020B6  0900               	iorlw	0
  1279   0020B8  A4D8               	btfss	status,2,c
  1280   0020BA  EF61  F010         	goto	u1151
  1281   0020BE  EF63  F010         	goto	u1150
  1282   0020C2                     u1151:
  1283   0020C2  EF45  F010         	goto	l2291
  1284   0020C6                     u1150:
  1285   0020C6                     
  1286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1287   0020C6  0E00               	movlw	0
  1288   0020C8  6E52               	movwf	(?_vfprintf+1)^0,c
  1289   0020CA  0E00               	movlw	0
  1290   0020CC  6E51               	movwf	?_vfprintf^0,c
  1291   0020CE  0012               	return		;funcret
  1292   0020D0                     __end_of_vfprintf:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _vfpfcnvrt *****************
  1296 ;; Defined at:
  1297 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1300 ;;		 -> sprintf@f(11), 
  1301 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1302 ;;		 -> vfprintf@cfmt(2), 
  1303 ;;  ap              2   66[COMRAM] PTR PTR void 
  1304 ;;		 -> sprintf@ap(2), 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  convarg         8   70[COMRAM] struct .
  1307 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1308 ;;		 -> STR_2(10), STR_1(26), 
  1309 ;;  i               2    0        int 
  1310 ;;  done            2    0        int 
  1311 ;;  c               1    0        unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1321 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;Total ram usage:       18 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 5
  1328 ;; This function calls:
  1329 ;;		_dtoa
  1330 ;;		_fputc
  1331 ;; This function is called by:
  1332 ;;		_vfprintf
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text3
  1337   001B22                     __ptext3:
  1338                           	callstack 0
  1339   001B22                     _vfpfcnvrt:
  1340                           	callstack 23
  1341   001B22                     
  1342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1343   001B22  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1344   001B26  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1345   001B2A  CFDE FFF6          	movff	postinc2,tblptrl
  1346   001B2E  CFDD FFF7          	movff	postdec2,tblptrh
  1347   001B32                     	if	0	;tblptru may be non-zero
  1348   001B32                     	endif
  1349   001B32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1350   001B32  0E00               	movlw	low (__mediumconst shr (0+16))
  1351   001B34  6EF8               	movwf	tblptru,c
  1352   001B36                     	endif
  1353   001B36  0008               	tblrd		*
  1354   001B38  50F5               	movf	tablat,w,c
  1355   001B3A  0A25               	xorlw	37
  1356   001B3C  A4D8               	btfss	status,2,c
  1357   001B3E  EFA3  F00D         	goto	u1081
  1358   001B42  EFA5  F00D         	goto	u1080
  1359   001B46                     u1081:
  1360   001B46  EF29  F00E         	goto	l2219
  1361   001B4A                     u1080:
  1362   001B4A                     
  1363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1364   001B4A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1365   001B4E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1366   001B52  2ADE               	incf	postinc2,f,c
  1367   001B54  0E00               	movlw	0
  1368   001B56  22DD               	addwfc	postdec2,f,c
  1369   001B58                     
  1370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1371   001B58  0E00               	movlw	0
  1372   001B5A  0101               	movlb	1	; () banked
  1373   001B5C  6FBD               	movwf	(_width+1)& (0+255),b
  1374   001B5E  0E00               	movlw	0
  1375   001B60  6FBC               	movwf	_width& (0+255),b
  1376   001B62  C1BC  F0FB         	movff	_width,_flags
  1377   001B66                     
  1378                           ; BSR set to: 1
  1379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1380   001B66  69BE               	setf	_prec& (0+255),b
  1381   001B68  69BF               	setf	(_prec+1)& (0+255),b
  1382   001B6A                     
  1383                           ; BSR set to: 1
  1384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1385   001B6A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1386   001B6E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1387   001B72  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1388   001B76  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1389   001B7A                     
  1390                           ; BSR set to: 1
  1391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1392   001B7A  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1393   001B7E  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1394   001B82                     	if	0	;tblptru may be non-zero
  1395   001B82                     	endif
  1396   001B82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1397   001B82  0E00               	movlw	low (__mediumconst shr (0+16))
  1398   001B84  6EF8               	movwf	tblptru,c
  1399   001B86                     	endif
  1400   001B86  0008               	tblrd		*
  1401   001B88  50F5               	movf	tablat,w,c
  1402   001B8A  0A64               	xorlw	100
  1403   001B8C  B4D8               	btfsc	status,2,c
  1404   001B8E  EFCB  F00D         	goto	u1091
  1405   001B92  EFCD  F00D         	goto	u1090
  1406   001B96                     u1091:
  1407   001B96  EFDD  F00D         	goto	l2209
  1408   001B9A                     u1090:
  1409   001B9A                     
  1410                           ; BSR set to: 1
  1411   001B9A  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1412   001B9E  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1413   001BA2                     	if	0	;tblptru may be non-zero
  1414   001BA2                     	endif
  1415   001BA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1416   001BA2  0E00               	movlw	low (__mediumconst shr (0+16))
  1417   001BA4  6EF8               	movwf	tblptru,c
  1418   001BA6                     	endif
  1419   001BA6  0008               	tblrd		*
  1420   001BA8  50F5               	movf	tablat,w,c
  1421   001BAA  0A69               	xorlw	105
  1422   001BAC  A4D8               	btfss	status,2,c
  1423   001BAE  EFDB  F00D         	goto	u1101
  1424   001BB2  EFDD  F00D         	goto	u1100
  1425   001BB6                     u1101:
  1426   001BB6  EF20  F00E         	goto	l2215
  1427   001BBA                     u1100:
  1428   001BBA                     l2209:
  1429                           
  1430                           ; BSR set to: 1
  1431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1432   001BBA  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1433   001BBE  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1434   001BC2  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1435   001BC6  0E02               	movlw	2
  1436   001BC8  26DE               	addwf	postinc2,f,c
  1437   001BCA  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1438   001BCE  0E00               	movlw	0
  1439   001BD0  22DD               	addwfc	postdec2,f,c
  1440   001BD2  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1441   001BD6  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1442   001BDA  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1443   001BDE  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1444   001BE2  0E00               	movlw	0
  1445   001BE4  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1446   001BE6  0EFF               	movlw	-1
  1447   001BE8  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1448   001BEA  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1449   001BEC  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1450   001BEE  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1451   001BF0  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1452   001BF2  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1455   001BF4  0E01               	movlw	1
  1456   001BF6  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1457   001BF8  6E45               	movwf	??_vfpfcnvrt^0,c
  1458   001BFA  0E00               	movlw	0
  1459   001BFC  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1460   001BFE  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1461   001C00  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1462   001C04  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1463   001C08  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1464   001C0C  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1465   001C10                     
  1466                           ; BSR set to: 1
  1467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1468   001C10  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1469   001C14  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1470   001C18  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1471   001C1C  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1472   001C20  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1473   001C24  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1474   001C28  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1475   001C2C  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1476   001C30  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1477   001C34  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1478   001C38  EC13  F007         	call	_dtoa	;wreg free
  1479   001C3C  EF3F  F00E         	goto	l1164
  1480   001C40                     l2215:
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1483   001C40  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1484   001C44  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1485   001C48  2ADE               	incf	postinc2,f,c
  1486   001C4A  0E00               	movlw	0
  1487   001C4C  22DD               	addwfc	postdec2,f,c
  1488   001C4E  EF3F  F00E         	goto	l1164
  1489   001C52                     l2219:
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1492   001C52  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1493   001C56  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1494   001C5A  CFDE FFF6          	movff	postinc2,tblptrl
  1495   001C5E  CFDD FFF7          	movff	postdec2,tblptrh
  1496   001C62                     	if	0	;tblptru may be non-zero
  1497   001C62                     	endif
  1498   001C62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1499   001C62  0E00               	movlw	low (__mediumconst shr (0+16))
  1500   001C64  6EF8               	movwf	tblptru,c
  1501   001C66                     	endif
  1502   001C66  0008               	tblrd		*
  1503   001C68  50F5               	movf	tablat,w,c
  1504   001C6A  6E01               	movwf	fputc@c^0,c
  1505   001C6C  6A02               	clrf	(fputc@c+1)^0,c
  1506   001C6E  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1507   001C72  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1508   001C76  ECB6  F00E         	call	_fputc	;wreg free
  1509   001C7A  EF20  F00E         	goto	l2215
  1510   001C7E                     l1164:
  1511   001C7E  0012               	return		;funcret
  1512   001C80                     __end_of_vfpfcnvrt:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _dtoa *****************
  1516 ;; Defined at:
  1517 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1520 ;;		 -> sprintf@f(11), 
  1521 ;;  d               8   29[COMRAM] long long 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  n               8   51[COMRAM] long long 
  1524 ;;  i               2   59[COMRAM] int 
  1525 ;;  w               2   49[COMRAM] int 
  1526 ;;  p               2   47[COMRAM] int 
  1527 ;;  s               1   61[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1537 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1538 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1539 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1540 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1541 ;;Total ram usage:       35 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 4
  1544 ;; This function calls:
  1545 ;;		___aodiv
  1546 ;;		___aomod
  1547 ;;		_abs
  1548 ;;		_pad
  1549 ;; This function is called by:
  1550 ;;		_vfpfcnvrt
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text4
  1555   000E26                     __ptext4:
  1556                           	callstack 0
  1557   000E26                     _dtoa:
  1558                           	callstack 23
  1559   000E26                     
  1560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1561   000E26  C01E  F034         	movff	dtoa@d,dtoa@n
  1562   000E2A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1563   000E2E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1564   000E32  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1565   000E36  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1566   000E3A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1567   000E3E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1568   000E42  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1569   000E46                     
  1570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1571   000E46  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1572   000E48  EF28  F007         	goto	u961
  1573   000E4C  EF2B  F007         	goto	u960
  1574   000E50                     u961:
  1575   000E50  0E01               	movlw	1
  1576   000E52  EF2C  F007         	goto	u970
  1577   000E56                     u960:
  1578   000E56  0E00               	movlw	0
  1579   000E58                     u970:
  1580   000E58  6E3E               	movwf	dtoa@s^0,c
  1581   000E5A                     
  1582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1583   000E5A  503E               	movf	dtoa@s^0,w,c
  1584   000E5C  B4D8               	btfsc	status,2,c
  1585   000E5E  EF33  F007         	goto	u981
  1586   000E62  EF35  F007         	goto	u980
  1587   000E66                     u981:
  1588   000E66  EF45  F007         	goto	l2121
  1589   000E6A                     u980:
  1590   000E6A                     
  1591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1592   000E6A  1E3B               	comf	(dtoa@n+7)^0,f,c
  1593   000E6C  1E3A               	comf	(dtoa@n+6)^0,f,c
  1594   000E6E  1E39               	comf	(dtoa@n+5)^0,f,c
  1595   000E70  1E38               	comf	(dtoa@n+4)^0,f,c
  1596   000E72  1E37               	comf	(dtoa@n+3)^0,f,c
  1597   000E74  1E36               	comf	(dtoa@n+2)^0,f,c
  1598   000E76  1E35               	comf	(dtoa@n+1)^0,f,c
  1599   000E78  6C34               	negf	dtoa@n^0,c
  1600   000E7A  0E00               	movlw	0
  1601   000E7C  2235               	addwfc	(dtoa@n+1)^0,f,c
  1602   000E7E  2236               	addwfc	(dtoa@n+2)^0,f,c
  1603   000E80  2237               	addwfc	(dtoa@n+3)^0,f,c
  1604   000E82  2238               	addwfc	(dtoa@n+4)^0,f,c
  1605   000E84  2239               	addwfc	(dtoa@n+5)^0,f,c
  1606   000E86  223A               	addwfc	(dtoa@n+6)^0,f,c
  1607   000E88  223B               	addwfc	(dtoa@n+7)^0,f,c
  1608   000E8A                     l2121:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1611   000E8A  0101               	movlb	1	; () banked
  1612   000E8C  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  1613   000E8E  EF53  F007         	goto	u990
  1614   000E92  51BF               	movf	(_prec+1)& (0+255),w,b
  1615   000E94  E106               	bnz	u991
  1616   000E96  05BE               	decf	_prec& (0+255),w,b
  1617   000E98  B0D8               	btfsc	status,0,c
  1618   000E9A  EF51  F007         	goto	u991
  1619   000E9E  EF53  F007         	goto	u990
  1620   000EA2                     u991:
  1621   000EA2  EF59  F007         	goto	l1143
  1622   000EA6                     u990:
  1623   000EA6                     
  1624                           ; BSR set to: 1
  1625   000EA6  0E00               	movlw	0
  1626   000EA8  6E31               	movwf	(dtoa@p+1)^0,c
  1627   000EAA  0E01               	movlw	1
  1628   000EAC  6E30               	movwf	dtoa@p^0,c
  1629   000EAE  EF5D  F007         	goto	l1145
  1630   000EB2                     l1143:
  1631                           
  1632                           ; BSR set to: 1
  1633   000EB2  C1BE  F030         	movff	_prec,dtoa@p
  1634   000EB6  C1BF  F031         	movff	_prec+1,dtoa@p+1
  1635   000EBA                     l1145:
  1636                           
  1637                           ; BSR set to: 1
  1638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1639   000EBA  C1BC  F032         	movff	_width,dtoa@w
  1640   000EBE  C1BD  F033         	movff	_width+1,dtoa@w+1
  1641   000EC2                     
  1642                           ; BSR set to: 1
  1643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1644   000EC2  503E               	movf	dtoa@s^0,w,c
  1645   000EC4  B4D8               	btfsc	status,2,c
  1646   000EC6  EF67  F007         	goto	u1001
  1647   000ECA  EF69  F007         	goto	u1000
  1648   000ECE                     u1001:
  1649   000ECE  EF80  F007         	goto	l1146
  1650   000ED2                     u1000:
  1651   000ED2                     
  1652                           ; BSR set to: 1
  1653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1654   000ED2  0632               	decf	dtoa@w^0,f,c
  1655   000ED4  A0D8               	btfss	status,0,c
  1656   000ED6  0633               	decf	(dtoa@w+1)^0,f,c
  1657   000ED8                     
  1658                           ; BSR set to: 1
  1659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1660   000ED8  503E               	movf	dtoa@s^0,w,c
  1661   000EDA  A4D8               	btfss	status,2,c
  1662   000EDC  EF72  F007         	goto	u1011
  1663   000EE0  EF74  F007         	goto	u1010
  1664   000EE4                     u1011:
  1665   000EE4  EF7A  F007         	goto	l2133
  1666   000EE8                     u1010:
  1667   000EE8                     
  1668                           ; BSR set to: 1
  1669   000EE8  0E00               	movlw	0
  1670   000EEA  6E2F               	movwf	(_dtoa$2279+1)^0,c
  1671   000EEC  0E2B               	movlw	43
  1672   000EEE  6E2E               	movwf	_dtoa$2279^0,c
  1673   000EF0  EF7E  F007         	goto	l2135
  1674   000EF4                     l2133:
  1675                           
  1676                           ; BSR set to: 1
  1677   000EF4  0E00               	movlw	0
  1678   000EF6  6E2F               	movwf	(_dtoa$2279+1)^0,c
  1679   000EF8  0E2D               	movlw	45
  1680   000EFA  6E2E               	movwf	_dtoa$2279^0,c
  1681   000EFC                     l2135:
  1682                           
  1683                           ; BSR set to: 1
  1684   000EFC  C02E  F03E         	movff	_dtoa$2279,dtoa@s
  1685   000F00                     l1146:
  1686                           
  1687                           ; BSR set to: 1
  1688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1689   000F00  0E00               	movlw	0
  1690   000F02  6E3D               	movwf	(dtoa@i+1)^0,c
  1691   000F04  0E1F               	movlw	31
  1692   000F06  6E3C               	movwf	dtoa@i^0,c
  1693   000F08                     
  1694                           ; BSR set to: 1
  1695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1696   000F08  0E00               	movlw	0
  1697   000F0A  6FDF               	movwf	(_dbuf+31)& (0+255),b
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1700   000F0C  EF04  F008         	goto	l2149
  1701   000F10                     l2139:
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1704   000F10  063C               	decf	dtoa@i^0,f,c
  1705   000F12  A0D8               	btfss	status,0,c
  1706   000F14  063D               	decf	(dtoa@i+1)^0,f,c
  1707   000F16                     
  1708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1709   000F16  0EC0               	movlw	low _dbuf
  1710   000F18  243C               	addwf	dtoa@i^0,w,c
  1711   000F1A  6ED9               	movwf	fsr2l,c
  1712   000F1C  0E01               	movlw	high _dbuf
  1713   000F1E  203D               	addwfc	(dtoa@i+1)^0,w,c
  1714   000F20  6EDA               	movwf	fsr2h,c
  1715   000F22  C034  F001         	movff	dtoa@n,___aomod@dividend
  1716   000F26  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1717   000F2A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1718   000F2E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1719   000F32  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1720   000F36  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1721   000F3A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1722   000F3E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1723   000F42  0E0A               	movlw	10
  1724   000F44  6E09               	movwf	___aomod@divisor^0,c
  1725   000F46  0E00               	movlw	0
  1726   000F48  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1727   000F4A  0E00               	movlw	0
  1728   000F4C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1729   000F4E  0E00               	movlw	0
  1730   000F50  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1731   000F52  0E00               	movlw	0
  1732   000F54  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1733   000F56  0E00               	movlw	0
  1734   000F58  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1735   000F5A  0E00               	movlw	0
  1736   000F5C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1737   000F5E  0E00               	movlw	0
  1738   000F60  6E10               	movwf	(___aomod@divisor+7)^0,c
  1739   000F62  ECDF  F00C         	call	___aomod	;wreg free
  1740   000F66  C001  F026         	movff	?___aomod,??_dtoa
  1741   000F6A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1742   000F6E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1743   000F72  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1744   000F76  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1745   000F7A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1746   000F7E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1747   000F82  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1748   000F86  C026  F013         	movff	??_dtoa,abs@a
  1749   000F8A  C027  F014         	movff	??_dtoa+1,abs@a+1
  1750   000F8E  EC23  F011         	call	_abs	;wreg free
  1751   000F92  5013               	movf	?_abs^0,w,c
  1752   000F94  0F30               	addlw	48
  1753   000F96  6EDF               	movwf	indf2,c
  1754   000F98                     
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1756   000F98  0630               	decf	dtoa@p^0,f,c
  1757   000F9A  A0D8               	btfss	status,0,c
  1758   000F9C  0631               	decf	(dtoa@p+1)^0,f,c
  1759   000F9E                     
  1760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1761   000F9E  0632               	decf	dtoa@w^0,f,c
  1762   000FA0  A0D8               	btfss	status,0,c
  1763   000FA2  0633               	decf	(dtoa@w+1)^0,f,c
  1764   000FA4                     
  1765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1766   000FA4  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1767   000FA8  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1768   000FAC  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1769   000FB0  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1770   000FB4  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1771   000FB8  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1772   000FBC  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1773   000FC0  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1774   000FC4  0E0A               	movlw	10
  1775   000FC6  6E09               	movwf	___aodiv@divisor^0,c
  1776   000FC8  0E00               	movlw	0
  1777   000FCA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1778   000FCC  0E00               	movlw	0
  1779   000FCE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1780   000FD0  0E00               	movlw	0
  1781   000FD2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1782   000FD4  0E00               	movlw	0
  1783   000FD6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1784   000FD8  0E00               	movlw	0
  1785   000FDA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1786   000FDC  0E00               	movlw	0
  1787   000FDE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1788   000FE0  0E00               	movlw	0
  1789   000FE2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1790   000FE4  EC65  F00B         	call	___aodiv	;wreg free
  1791   000FE8  C001  F034         	movff	?___aodiv,dtoa@n
  1792   000FEC  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1793   000FF0  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1794   000FF4  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1795   000FF8  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1796   000FFC  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1797   001000  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1798   001004  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1799   001008                     l2149:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1802   001008  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1803   00100A  EF0F  F008         	goto	u1021
  1804   00100E  503D               	movf	(dtoa@i+1)^0,w,c
  1805   001010  E108               	bnz	u1020
  1806   001012  043C               	decf	dtoa@i^0,w,c
  1807   001014  A0D8               	btfss	status,0,c
  1808   001016  EF0F  F008         	goto	u1021
  1809   00101A  EF11  F008         	goto	u1020
  1810   00101E                     u1021:
  1811   00101E  EF2D  F008         	goto	l2155
  1812   001022                     u1020:
  1813   001022  5034               	movf	dtoa@n^0,w,c
  1814   001024  1035               	iorwf	(dtoa@n+1)^0,w,c
  1815   001026  1036               	iorwf	(dtoa@n+2)^0,w,c
  1816   001028  1037               	iorwf	(dtoa@n+3)^0,w,c
  1817   00102A  1038               	iorwf	(dtoa@n+4)^0,w,c
  1818   00102C  1039               	iorwf	(dtoa@n+5)^0,w,c
  1819   00102E  103A               	iorwf	(dtoa@n+6)^0,w,c
  1820   001030  103B               	iorwf	(dtoa@n+7)^0,w,c
  1821   001032  A4D8               	btfss	status,2,c
  1822   001034  EF1E  F008         	goto	u1031
  1823   001038  EF20  F008         	goto	u1030
  1824   00103C                     u1031:
  1825   00103C  EF88  F007         	goto	l2139
  1826   001040                     u1030:
  1827   001040  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1828   001042  EF2D  F008         	goto	u1040
  1829   001046  5031               	movf	(dtoa@p+1)^0,w,c
  1830   001048  E106               	bnz	u1041
  1831   00104A  0430               	decf	dtoa@p^0,w,c
  1832   00104C  B0D8               	btfsc	status,0,c
  1833   00104E  EF2B  F008         	goto	u1041
  1834   001052  EF2D  F008         	goto	u1040
  1835   001056                     u1041:
  1836   001056  EF88  F007         	goto	l2139
  1837   00105A                     u1040:
  1838   00105A                     l2155:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1841   00105A  503E               	movf	dtoa@s^0,w,c
  1842   00105C  B4D8               	btfsc	status,2,c
  1843   00105E  EF33  F008         	goto	u1051
  1844   001062  EF35  F008         	goto	u1050
  1845   001066                     u1051:
  1846   001066  EF40  F008         	goto	l2161
  1847   00106A                     u1050:
  1848   00106A                     
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1850   00106A  063C               	decf	dtoa@i^0,f,c
  1851   00106C  A0D8               	btfss	status,0,c
  1852   00106E  063D               	decf	(dtoa@i+1)^0,f,c
  1853   001070                     
  1854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1855   001070  0EC0               	movlw	low _dbuf
  1856   001072  243C               	addwf	dtoa@i^0,w,c
  1857   001074  6ED9               	movwf	fsr2l,c
  1858   001076  0E01               	movlw	high _dbuf
  1859   001078  203D               	addwfc	(dtoa@i+1)^0,w,c
  1860   00107A  6EDA               	movwf	fsr2h,c
  1861   00107C  C03E  FFDF         	movff	dtoa@s,indf2
  1862   001080                     l2161:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1865   001080  C01C  F011         	movff	dtoa@fp,pad@fp
  1866   001084  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1867   001088  0EC0               	movlw	low _dbuf
  1868   00108A  243C               	addwf	dtoa@i^0,w,c
  1869   00108C  6E13               	movwf	pad@buf^0,c
  1870   00108E  0E01               	movlw	high _dbuf
  1871   001090  203D               	addwfc	(dtoa@i+1)^0,w,c
  1872   001092  6E14               	movwf	(pad@buf+1)^0,c
  1873   001094  C032  F015         	movff	dtoa@w,pad@p
  1874   001098  C033  F016         	movff	dtoa@w+1,pad@p+1
  1875   00109C  EC9F  F00F         	call	_pad	;wreg free
  1876   0010A0  0012               	return		;funcret
  1877   0010A2                     __end_of_dtoa:
  1878                           	callstack 0
  1879                           
  1880 ;; *************** function _pad *****************
  1881 ;; Defined at:
  1882 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1885 ;;		 -> sprintf@f(11), 
  1886 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1887 ;;		 -> dbuf(32), 
  1888 ;;  p               2   20[COMRAM] int 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  w               2   25[COMRAM] int 
  1891 ;;  i               2   23[COMRAM] int 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1901 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1902 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1905 ;;Total ram usage:       11 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 3
  1908 ;; This function calls:
  1909 ;;		_fputc
  1910 ;;		_fputs
  1911 ;; This function is called by:
  1912 ;;		_dtoa
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text5
  1917   001F3E                     __ptext5:
  1918                           	callstack 0
  1919   001F3E                     _pad:
  1920                           	callstack 23
  1921   001F3E                     
  1922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1923   001F3E  BE16               	btfsc	(pad@p+1)^0,7,c
  1924   001F40  EFA4  F00F         	goto	u921
  1925   001F44  EFA6  F00F         	goto	u920
  1926   001F48                     u921:
  1927   001F48  EFAC  F00F         	goto	l2099
  1928   001F4C                     u920:
  1929   001F4C  C015  F01A         	movff	pad@p,pad@w
  1930   001F50  C016  F01B         	movff	pad@p+1,pad@w+1
  1931   001F54  EFB0  F00F         	goto	l1134
  1932   001F58                     l2099:
  1933   001F58  0E00               	movlw	0
  1934   001F5A  6E1B               	movwf	(pad@w+1)^0,c
  1935   001F5C  0E00               	movlw	0
  1936   001F5E  6E1A               	movwf	pad@w^0,c
  1937   001F60                     l1134:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1940   001F60  0E00               	movlw	0
  1941   001F62  6E19               	movwf	(pad@i+1)^0,c
  1942   001F64  0E00               	movlw	0
  1943   001F66  6E18               	movwf	pad@i^0,c
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1946   001F68  EFC2  F00F         	goto	l2105
  1947   001F6C                     l2101:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1950   001F6C  0E00               	movlw	0
  1951   001F6E  6E02               	movwf	(fputc@c+1)^0,c
  1952   001F70  0E20               	movlw	32
  1953   001F72  6E01               	movwf	fputc@c^0,c
  1954   001F74  C011  F003         	movff	pad@fp,fputc@fp
  1955   001F78  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1956   001F7C  ECB6  F00E         	call	_fputc	;wreg free
  1957   001F80                     
  1958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1959   001F80  4A18               	infsnz	pad@i^0,f,c
  1960   001F82  2A19               	incf	(pad@i+1)^0,f,c
  1961   001F84                     l2105:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1964   001F84  501A               	movf	pad@w^0,w,c
  1965   001F86  5C18               	subwf	pad@i^0,w,c
  1966   001F88  5019               	movf	(pad@i+1)^0,w,c
  1967   001F8A  0A80               	xorlw	128
  1968   001F8C  6E17               	movwf	??_pad^0,c
  1969   001F8E  501B               	movf	(pad@w+1)^0,w,c
  1970   001F90  0A80               	xorlw	128
  1971   001F92  5817               	subwfb	??_pad^0,w,c
  1972   001F94  A0D8               	btfss	status,0,c
  1973   001F96  EFCF  F00F         	goto	u931
  1974   001F9A  EFD1  F00F         	goto	u930
  1975   001F9E                     u931:
  1976   001F9E  EFB6  F00F         	goto	l2101
  1977   001FA2                     u930:
  1978   001FA2                     
  1979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1980   001FA2  C013  F00A         	movff	pad@buf,fputs@s
  1981   001FA6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1982   001FAA  C011  F00C         	movff	pad@fp,fputs@fp
  1983   001FAE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1984   001FB2  ECE0  F010         	call	_fputs	;wreg free
  1985   001FB6  0012               	return		;funcret
  1986   001FB8                     __end_of_pad:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _fputs *****************
  1990 ;; Defined at:
  1991 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1994 ;;		 -> dbuf(32), 
  1995 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1996 ;;		 -> sprintf@f(11), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  i               2   14[COMRAM] int 
  1999 ;;  c               1   13[COMRAM] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  2    9[COMRAM] int 
  2002 ;; Registers used:
  2003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;Total ram usage:        7 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; Hardware stack levels required when called: 2
  2016 ;; This function calls:
  2017 ;;		_fputc
  2018 ;; This function is called by:
  2019 ;;		_pad
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text6
  2024   0021C0                     __ptext6:
  2025                           	callstack 0
  2026   0021C0                     _fputs:
  2027                           	callstack 23
  2028   0021C0  0E00               	movlw	0
  2029   0021C2  6E10               	movwf	(fputs@i+1)^0,c
  2030   0021C4  0E00               	movlw	0
  2031   0021C6  6E0F               	movwf	fputs@i^0,c
  2032   0021C8  EFF1  F010         	goto	l2009
  2033   0021CC                     l2005:
  2034   0021CC  C00E  F001         	movff	fputs@c,fputc@c
  2035   0021D0  6A02               	clrf	(fputc@c+1)^0,c
  2036   0021D2  C00C  F003         	movff	fputs@fp,fputc@fp
  2037   0021D6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2038   0021DA  ECB6  F00E         	call	_fputc	;wreg free
  2039   0021DE  4A0F               	infsnz	fputs@i^0,f,c
  2040   0021E0  2A10               	incf	(fputs@i+1)^0,f,c
  2041   0021E2                     l2009:
  2042   0021E2  500F               	movf	fputs@i^0,w,c
  2043   0021E4  240A               	addwf	fputs@s^0,w,c
  2044   0021E6  6ED9               	movwf	fsr2l,c
  2045   0021E8  5010               	movf	(fputs@i+1)^0,w,c
  2046   0021EA  200B               	addwfc	(fputs@s+1)^0,w,c
  2047   0021EC  6EDA               	movwf	fsr2h,c
  2048   0021EE  50DF               	movf	indf2,w,c
  2049   0021F0  6E0E               	movwf	fputs@c^0,c
  2050   0021F2  500E               	movf	fputs@c^0,w,c
  2051   0021F4  A4D8               	btfss	status,2,c
  2052   0021F6  EFFF  F010         	goto	u771
  2053   0021FA  EF01  F011         	goto	u770
  2054   0021FE                     u771:
  2055   0021FE  EFE6  F010         	goto	l2005
  2056   002202                     u770:
  2057   002202  0012               	return		;funcret
  2058   002204                     __end_of_fputs:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _fputc *****************
  2062 ;; Defined at:
  2063 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  c               2    0[COMRAM] int 
  2066 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2067 ;;		 -> sprintf@f(11), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  2    0[COMRAM] int 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;Total ram usage:        9 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 1
  2086 ;; This function calls:
  2087 ;;		_putch
  2088 ;; This function is called by:
  2089 ;;		_pad
  2090 ;;		_vfpfcnvrt
  2091 ;;		_fputs
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text7
  2096   001D6C                     __ptext7:
  2097                           	callstack 0
  2098   001D6C                     _fputc:
  2099                           	callstack 26
  2100   001D6C  5003               	movf	fputc@fp^0,w,c
  2101   001D6E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2102   001D70  B4D8               	btfsc	status,2,c
  2103   001D72  EFBD  F00E         	goto	u731
  2104   001D76  EFBF  F00E         	goto	u730
  2105   001D7A                     u731:
  2106   001D7A  EFC8  F00E         	goto	l1993
  2107   001D7E                     u730:
  2108   001D7E  5003               	movf	fputc@fp^0,w,c
  2109   001D80  1004               	iorwf	(fputc@fp+1)^0,w,c
  2110   001D82  A4D8               	btfss	status,2,c
  2111   001D84  EFC6  F00E         	goto	u741
  2112   001D88  EFC8  F00E         	goto	u740
  2113   001D8C                     u741:
  2114   001D8C  EFCD  F00E         	goto	l1995
  2115   001D90                     u740:
  2116   001D90                     l1993:
  2117   001D90  5001               	movf	fputc@c^0,w,c
  2118   001D92  EC18  F012         	call	_putch
  2119   001D96  EF1A  F00F         	goto	l1182
  2120   001D9A                     l1995:
  2121   001D9A  EE20 F009          	lfsr	2,9
  2122   001D9E  5003               	movf	fputc@fp^0,w,c
  2123   001DA0  26D9               	addwf	fsr2l,f,c
  2124   001DA2  5004               	movf	(fputc@fp+1)^0,w,c
  2125   001DA4  22DA               	addwfc	fsr2h,f,c
  2126   001DA6  50DE               	movf	postinc2,w,c
  2127   001DA8  10DE               	iorwf	postinc2,w,c
  2128   001DAA  B4D8               	btfsc	status,2,c
  2129   001DAC  EFDA  F00E         	goto	u751
  2130   001DB0  EFDC  F00E         	goto	u750
  2131   001DB4                     u751:
  2132   001DB4  EFF7  F00E         	goto	l1999
  2133   001DB8                     u750:
  2134   001DB8  EE20 F009          	lfsr	2,9
  2135   001DBC  5003               	movf	fputc@fp^0,w,c
  2136   001DBE  26D9               	addwf	fsr2l,f,c
  2137   001DC0  5004               	movf	(fputc@fp+1)^0,w,c
  2138   001DC2  22DA               	addwfc	fsr2h,f,c
  2139   001DC4  EE10 F003          	lfsr	1,3
  2140   001DC8  5003               	movf	fputc@fp^0,w,c
  2141   001DCA  26E1               	addwf	fsr1l,f,c
  2142   001DCC  5004               	movf	(fputc@fp+1)^0,w,c
  2143   001DCE  22E2               	addwfc	fsr1h,f,c
  2144   001DD0  50DE               	movf	postinc2,w,c
  2145   001DD2  5CE6               	subwf	postinc1,w,c
  2146   001DD4  50E6               	movf	postinc1,w,c
  2147   001DD6  0A80               	xorlw	128
  2148   001DD8  6E09               	movwf	(??_fputc+4)^0,c
  2149   001DDA  50DE               	movf	postinc2,w,c
  2150   001DDC  0A80               	xorlw	128
  2151   001DDE  5809               	subwfb	(??_fputc+4)^0,w,c
  2152   001DE0  B0D8               	btfsc	status,0,c
  2153   001DE2  EFF5  F00E         	goto	u761
  2154   001DE6  EFF7  F00E         	goto	u760
  2155   001DEA                     u761:
  2156   001DEA  EF1A  F00F         	goto	l1182
  2157   001DEE                     u760:
  2158   001DEE                     l1999:
  2159   001DEE  EE20 F003          	lfsr	2,3
  2160   001DF2  5003               	movf	fputc@fp^0,w,c
  2161   001DF4  26D9               	addwf	fsr2l,f,c
  2162   001DF6  5004               	movf	(fputc@fp+1)^0,w,c
  2163   001DF8  22DA               	addwfc	fsr2h,f,c
  2164   001DFA  CFDE F005          	movff	postinc2,??_fputc
  2165   001DFE  CFDD F006          	movff	postdec2,??_fputc+1
  2166   001E02  C003  FFD9         	movff	fputc@fp,fsr2l
  2167   001E06  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2168   001E0A  CFDE F007          	movff	postinc2,??_fputc+2
  2169   001E0E  CFDD F008          	movff	postdec2,??_fputc+3
  2170   001E12  5005               	movf	??_fputc^0,w,c
  2171   001E14  2407               	addwf	(??_fputc+2)^0,w,c
  2172   001E16  6ED9               	movwf	fsr2l,c
  2173   001E18  5006               	movf	(??_fputc+1)^0,w,c
  2174   001E1A  2008               	addwfc	(??_fputc+3)^0,w,c
  2175   001E1C  6EDA               	movwf	fsr2h,c
  2176   001E1E  C001  FFDF         	movff	fputc@c,indf2
  2177   001E22  EE20 F003          	lfsr	2,3
  2178   001E26  5003               	movf	fputc@fp^0,w,c
  2179   001E28  26D9               	addwf	fsr2l,f,c
  2180   001E2A  5004               	movf	(fputc@fp+1)^0,w,c
  2181   001E2C  22DA               	addwfc	fsr2h,f,c
  2182   001E2E  2ADE               	incf	postinc2,f,c
  2183   001E30  0E00               	movlw	0
  2184   001E32  22DD               	addwfc	postdec2,f,c
  2185   001E34                     l1182:
  2186   001E34  0012               	return		;funcret
  2187   001E36                     __end_of_fputc:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _putch *****************
  2191 ;; Defined at:
  2192 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  c               1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  c               1    0[COMRAM] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_fputc
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text8
  2220   002430                     __ptext8:
  2221                           	callstack 0
  2222   002430                     _putch:
  2223                           	callstack 26
  2224   002430  0012               	return		;funcret
  2225   002432                     __end_of_putch:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function ___aomod *****************
  2229 ;; Defined at:
  2230 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  dividend        8    0[COMRAM] long long 
  2233 ;;  divisor         8    8[COMRAM] long long 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;  sign            1   17[COMRAM] unsigned char 
  2236 ;;  counter         1   16[COMRAM] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  8    0[COMRAM] long long 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2246 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2249 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2250 ;;Total ram usage:       18 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; This function calls:
  2253 ;;		Nothing
  2254 ;; This function is called by:
  2255 ;;		_dtoa
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text9
  2260   0019BE                     __ptext9:
  2261                           	callstack 0
  2262   0019BE                     ___aomod:
  2263                           	callstack 26
  2264   0019BE  0E00               	movlw	0
  2265   0019C0  6E12               	movwf	___aomod@sign^0,c
  2266   0019C2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2267   0019C4  EFE8  F00C         	goto	u860
  2268   0019C8  EFE6  F00C         	goto	u861
  2269   0019CC                     u861:
  2270   0019CC  EFFA  F00C         	goto	l2067
  2271   0019D0                     u860:
  2272   0019D0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2273   0019D2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2274   0019D4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2275   0019D6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2276   0019D8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2277   0019DA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2278   0019DC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2279   0019DE  6C01               	negf	___aomod@dividend^0,c
  2280   0019E0  0E00               	movlw	0
  2281   0019E2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2282   0019E4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2283   0019E6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2284   0019E8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2285   0019EA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2286   0019EC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2287   0019EE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2288   0019F0  0E01               	movlw	1
  2289   0019F2  6E12               	movwf	___aomod@sign^0,c
  2290   0019F4                     l2067:
  2291   0019F4  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2292   0019F6  EF01  F00D         	goto	u870
  2293   0019FA  EFFF  F00C         	goto	u871
  2294   0019FE                     u871:
  2295   0019FE  EF11  F00D         	goto	l2071
  2296   001A02                     u870:
  2297   001A02  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2298   001A04  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2299   001A06  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2300   001A08  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2301   001A0A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2302   001A0C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2303   001A0E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2304   001A10  6C09               	negf	___aomod@divisor^0,c
  2305   001A12  0E00               	movlw	0
  2306   001A14  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2307   001A16  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2308   001A18  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2309   001A1A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2310   001A1C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2311   001A1E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2312   001A20  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2313   001A22                     l2071:
  2314   001A22  5009               	movf	___aomod@divisor^0,w,c
  2315   001A24  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2316   001A26  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2317   001A28  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2318   001A2A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2319   001A2C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2320   001A2E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2321   001A30  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2322   001A32  B4D8               	btfsc	status,2,c
  2323   001A34  EF1E  F00D         	goto	u881
  2324   001A38  EF20  F00D         	goto	u880
  2325   001A3C                     u881:
  2326   001A3C  EF68  F00D         	goto	l2087
  2327   001A40                     u880:
  2328   001A40  0E01               	movlw	1
  2329   001A42  6E11               	movwf	___aomod@counter^0,c
  2330   001A44  EF2E  F00D         	goto	l2077
  2331   001A48                     l2075:
  2332   001A48  90D8               	bcf	status,0,c
  2333   001A4A  3609               	rlcf	___aomod@divisor^0,f,c
  2334   001A4C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2335   001A4E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2336   001A50  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2337   001A52  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2338   001A54  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2339   001A56  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2340   001A58  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2341   001A5A  2A11               	incf	___aomod@counter^0,f,c
  2342   001A5C                     l2077:
  2343   001A5C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2344   001A5E  EF33  F00D         	goto	u891
  2345   001A62  EF35  F00D         	goto	u890
  2346   001A66                     u891:
  2347   001A66  EF24  F00D         	goto	l2075
  2348   001A6A                     u890:
  2349   001A6A                     l2079:
  2350   001A6A  5009               	movf	___aomod@divisor^0,w,c
  2351   001A6C  5C01               	subwf	___aomod@dividend^0,w,c
  2352   001A6E  500A               	movf	(___aomod@divisor+1)^0,w,c
  2353   001A70  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2354   001A72  500B               	movf	(___aomod@divisor+2)^0,w,c
  2355   001A74  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2356   001A76  500C               	movf	(___aomod@divisor+3)^0,w,c
  2357   001A78  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2358   001A7A  500D               	movf	(___aomod@divisor+4)^0,w,c
  2359   001A7C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2360   001A7E  500E               	movf	(___aomod@divisor+5)^0,w,c
  2361   001A80  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2362   001A82  500F               	movf	(___aomod@divisor+6)^0,w,c
  2363   001A84  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2364   001A86  5010               	movf	(___aomod@divisor+7)^0,w,c
  2365   001A88  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2366   001A8A  A0D8               	btfss	status,0,c
  2367   001A8C  EF4A  F00D         	goto	u901
  2368   001A90  EF4C  F00D         	goto	u900
  2369   001A94                     u901:
  2370   001A94  EF5C  F00D         	goto	l2083
  2371   001A98                     u900:
  2372   001A98  5009               	movf	___aomod@divisor^0,w,c
  2373   001A9A  5E01               	subwf	___aomod@dividend^0,f,c
  2374   001A9C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2375   001A9E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2376   001AA0  500B               	movf	(___aomod@divisor+2)^0,w,c
  2377   001AA2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2378   001AA4  500C               	movf	(___aomod@divisor+3)^0,w,c
  2379   001AA6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2380   001AA8  500D               	movf	(___aomod@divisor+4)^0,w,c
  2381   001AAA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2382   001AAC  500E               	movf	(___aomod@divisor+5)^0,w,c
  2383   001AAE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2384   001AB0  500F               	movf	(___aomod@divisor+6)^0,w,c
  2385   001AB2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2386   001AB4  5010               	movf	(___aomod@divisor+7)^0,w,c
  2387   001AB6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2388   001AB8                     l2083:
  2389   001AB8  90D8               	bcf	status,0,c
  2390   001ABA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2391   001ABC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2392   001ABE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2393   001AC0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2394   001AC2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2395   001AC4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2396   001AC6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2397   001AC8  3209               	rrcf	___aomod@divisor^0,f,c
  2398   001ACA  2E11               	decfsz	___aomod@counter^0,f,c
  2399   001ACC  EF35  F00D         	goto	l2079
  2400   001AD0                     l2087:
  2401   001AD0  5012               	movf	___aomod@sign^0,w,c
  2402   001AD2  B4D8               	btfsc	status,2,c
  2403   001AD4  EF6E  F00D         	goto	u911
  2404   001AD8  EF70  F00D         	goto	u910
  2405   001ADC                     u911:
  2406   001ADC  EF80  F00D         	goto	l2091
  2407   001AE0                     u910:
  2408   001AE0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2409   001AE2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2410   001AE4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2411   001AE6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2412   001AE8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2413   001AEA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2414   001AEC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2415   001AEE  6C01               	negf	___aomod@dividend^0,c
  2416   001AF0  0E00               	movlw	0
  2417   001AF2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2418   001AF4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2419   001AF6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2420   001AF8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2421   001AFA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2422   001AFC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2423   001AFE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2424   001B00                     l2091:
  2425   001B00  C001  F001         	movff	___aomod@dividend,?___aomod
  2426   001B04  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2427   001B08  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2428   001B0C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2429   001B10  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2430   001B14  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2431   001B18  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2432   001B1C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2433   001B20  0012               	return		;funcret
  2434   001B22                     __end_of___aomod:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function ___aodiv *****************
  2438 ;; Defined at:
  2439 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  dividend        8    0[COMRAM] long long 
  2442 ;;  divisor         8    8[COMRAM] long long 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  quotient        8   18[COMRAM] long long 
  2445 ;;  sign            1   17[COMRAM] unsigned char 
  2446 ;;  counter         1   16[COMRAM] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  8    0[COMRAM] long long 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2456 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;Total ram usage:       26 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_dtoa
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text10
  2470   0016CA                     __ptext10:
  2471                           	callstack 0
  2472   0016CA                     ___aodiv:
  2473                           	callstack 26
  2474   0016CA  0E00               	movlw	0
  2475   0016CC  6E12               	movwf	___aodiv@sign^0,c
  2476   0016CE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2477   0016D0  EF6E  F00B         	goto	u790
  2478   0016D4  EF6C  F00B         	goto	u791
  2479   0016D8                     u791:
  2480   0016D8  EF80  F00B         	goto	l2023
  2481   0016DC                     u790:
  2482   0016DC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2483   0016DE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2484   0016E0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2485   0016E2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2486   0016E4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2487   0016E6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2488   0016E8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2489   0016EA  6C09               	negf	___aodiv@divisor^0,c
  2490   0016EC  0E00               	movlw	0
  2491   0016EE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2492   0016F0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2493   0016F2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2494   0016F4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2495   0016F6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2496   0016F8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2497   0016FA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2498   0016FC  0E01               	movlw	1
  2499   0016FE  6E12               	movwf	___aodiv@sign^0,c
  2500   001700                     l2023:
  2501   001700  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2502   001702  EF87  F00B         	goto	u800
  2503   001706  EF85  F00B         	goto	u801
  2504   00170A                     u801:
  2505   00170A  EF99  F00B         	goto	l2029
  2506   00170E                     u800:
  2507   00170E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2508   001710  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2509   001712  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2510   001714  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2511   001716  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2512   001718  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2513   00171A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2514   00171C  6C01               	negf	___aodiv@dividend^0,c
  2515   00171E  0E00               	movlw	0
  2516   001720  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2517   001722  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2518   001724  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2519   001726  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2520   001728  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2521   00172A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2522   00172C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2523   00172E  0E01               	movlw	1
  2524   001730  1A12               	xorwf	___aodiv@sign^0,f,c
  2525   001732                     l2029:
  2526   001732  EE20  F013         	lfsr	2,___aodiv@quotient
  2527   001736  0E07               	movlw	7
  2528   001738                     u811:
  2529   001738  6ADE               	clrf	postinc2,c
  2530   00173A  06E8               	decf	wreg,f,c
  2531   00173C  E2FD               	bc	u811
  2532   00173E  5009               	movf	___aodiv@divisor^0,w,c
  2533   001740  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2534   001742  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2535   001744  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2536   001746  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2537   001748  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2538   00174A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2539   00174C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2540   00174E  B4D8               	btfsc	status,2,c
  2541   001750  EFAC  F00B         	goto	u821
  2542   001754  EFAE  F00B         	goto	u820
  2543   001758                     u821:
  2544   001758  EF00  F00C         	goto	l2051
  2545   00175C                     u820:
  2546   00175C  0E01               	movlw	1
  2547   00175E  6E11               	movwf	___aodiv@counter^0,c
  2548   001760  EFBC  F00B         	goto	l2037
  2549   001764                     l2035:
  2550   001764  90D8               	bcf	status,0,c
  2551   001766  3609               	rlcf	___aodiv@divisor^0,f,c
  2552   001768  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2553   00176A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2554   00176C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2555   00176E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2556   001770  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2557   001772  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2558   001774  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2559   001776  2A11               	incf	___aodiv@counter^0,f,c
  2560   001778                     l2037:
  2561   001778  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2562   00177A  EFC1  F00B         	goto	u831
  2563   00177E  EFC3  F00B         	goto	u830
  2564   001782                     u831:
  2565   001782  EFB2  F00B         	goto	l2035
  2566   001786                     u830:
  2567   001786                     l2039:
  2568   001786  90D8               	bcf	status,0,c
  2569   001788  3613               	rlcf	___aodiv@quotient^0,f,c
  2570   00178A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2571   00178C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2572   00178E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2573   001790  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2574   001792  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2575   001794  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2576   001796  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2577   001798  5009               	movf	___aodiv@divisor^0,w,c
  2578   00179A  5C01               	subwf	___aodiv@dividend^0,w,c
  2579   00179C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2580   00179E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2581   0017A0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2582   0017A2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2583   0017A4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2584   0017A6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2585   0017A8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2586   0017AA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2587   0017AC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2588   0017AE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2589   0017B0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2590   0017B2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2591   0017B4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2592   0017B6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2593   0017B8  A0D8               	btfss	status,0,c
  2594   0017BA  EFE1  F00B         	goto	u841
  2595   0017BE  EFE3  F00B         	goto	u840
  2596   0017C2                     u841:
  2597   0017C2  EFF4  F00B         	goto	l2047
  2598   0017C6                     u840:
  2599   0017C6  5009               	movf	___aodiv@divisor^0,w,c
  2600   0017C8  5E01               	subwf	___aodiv@dividend^0,f,c
  2601   0017CA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2602   0017CC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2603   0017CE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2604   0017D0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2605   0017D2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2606   0017D4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2607   0017D6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2608   0017D8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2609   0017DA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2610   0017DC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2611   0017DE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2612   0017E0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2613   0017E2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2614   0017E4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2615   0017E6  8013               	bsf	___aodiv@quotient^0,0,c
  2616   0017E8                     l2047:
  2617   0017E8  90D8               	bcf	status,0,c
  2618   0017EA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2619   0017EC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2620   0017EE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2621   0017F0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2622   0017F2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2623   0017F4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2624   0017F6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2625   0017F8  3209               	rrcf	___aodiv@divisor^0,f,c
  2626   0017FA  2E11               	decfsz	___aodiv@counter^0,f,c
  2627   0017FC  EFC3  F00B         	goto	l2039
  2628   001800                     l2051:
  2629   001800  5012               	movf	___aodiv@sign^0,w,c
  2630   001802  B4D8               	btfsc	status,2,c
  2631   001804  EF06  F00C         	goto	u851
  2632   001808  EF08  F00C         	goto	u850
  2633   00180C                     u851:
  2634   00180C  EF18  F00C         	goto	l2055
  2635   001810                     u850:
  2636   001810  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2637   001812  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2638   001814  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2639   001816  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2640   001818  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2641   00181A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2642   00181C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2643   00181E  6C13               	negf	___aodiv@quotient^0,c
  2644   001820  0E00               	movlw	0
  2645   001822  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2646   001824  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2647   001826  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2648   001828  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2649   00182A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2650   00182C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2651   00182E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2652   001830                     l2055:
  2653   001830  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2654   001834  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2655   001838  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2656   00183C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2657   001840  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2658   001844  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2659   001848  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2660   00184C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2661   001850  0012               	return		;funcret
  2662   001852                     __end_of___aodiv:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _setMotorPWM *****************
  2666 ;; Defined at:
  2667 ;;		line 61 in file "dc_motor.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  m               2   13[COMRAM] PTR struct DC_motor
  2670 ;;		 -> main@motorR(9), main@motorL(9), 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  negDuty         1   18[COMRAM] unsigned char 
  2673 ;;  posDuty         1   17[COMRAM] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;Total ram usage:        6 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 1
  2690 ;; This function calls:
  2691 ;;		___lwdiv
  2692 ;;		___wmul
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;;		_stop
  2696 ;;		_turnLeft45
  2697 ;;		_turnRight45
  2698 ;;		_fullSpeedAhead
  2699 ;;		_reverseFullSpeed
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text11
  2704   001852                     __ptext11:
  2705                           	callstack 0
  2706   001852                     _setMotorPWM:
  2707                           	callstack 29
  2708   001852                     
  2709                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2710   001852  EE20 F002          	lfsr	2,2
  2711   001856  500E               	movf	setMotorPWM@m^0,w,c
  2712   001858  26D9               	addwf	fsr2l,f,c
  2713   00185A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2714   00185C  22DA               	addwfc	fsr2h,f,c
  2715   00185E  50DF               	movf	indf2,w,c
  2716   001860  B4D8               	btfsc	status,2,c
  2717   001862  EF35  F00C         	goto	u1161
  2718   001866  EF37  F00C         	goto	u1160
  2719   00186A                     u1161:
  2720   00186A  EF6B  F00C         	goto	l2337
  2721   00186E                     u1160:
  2722   00186E                     
  2723                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2724   00186E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2725   001872  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2726   001876  50DF               	movf	indf2,w,c
  2727   001878  6E10               	movwf	??_setMotorPWM^0,c
  2728   00187A  5010               	movf	??_setMotorPWM^0,w,c
  2729   00187C  6E01               	movwf	___wmul@multiplier^0,c
  2730   00187E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2731   001880  EE20 F003          	lfsr	2,3
  2732   001884  500E               	movf	setMotorPWM@m^0,w,c
  2733   001886  26D9               	addwf	fsr2l,f,c
  2734   001888  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2735   00188A  22DA               	addwfc	fsr2h,f,c
  2736   00188C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2737   001890  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2738   001894  ECB3  F011         	call	___wmul	;wreg free
  2739   001898  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2740   00189C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2741   0018A0  0E00               	movlw	0
  2742   0018A2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2743   0018A4  0E64               	movlw	100
  2744   0018A6  6E09               	movwf	___lwdiv@divisor^0,c
  2745   0018A8  ECDC  F00F         	call	___lwdiv	;wreg free
  2746   0018AC  EE20 F003          	lfsr	2,3
  2747   0018B0  500E               	movf	setMotorPWM@m^0,w,c
  2748   0018B2  26D9               	addwf	fsr2l,f,c
  2749   0018B4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2750   0018B6  22DA               	addwfc	fsr2h,f,c
  2751   0018B8  50DF               	movf	indf2,w,c
  2752   0018BA  6E11               	movwf	(??_setMotorPWM+1)^0,c
  2753   0018BC  5007               	movf	?___lwdiv^0,w,c
  2754   0018BE  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  2755   0018C0  6E12               	movwf	setMotorPWM@posDuty^0,c
  2756   0018C2                     
  2757                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2758   0018C2  EE20 F003          	lfsr	2,3
  2759   0018C6  500E               	movf	setMotorPWM@m^0,w,c
  2760   0018C8  26D9               	addwf	fsr2l,f,c
  2761   0018CA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2762   0018CC  22DA               	addwfc	fsr2h,f,c
  2763   0018CE  50DF               	movf	indf2,w,c
  2764   0018D0  6E13               	movwf	setMotorPWM@negDuty^0,c
  2765                           
  2766                           ;dc_motor.c: 68:     }
  2767   0018D2  EF8E  F00C         	goto	l2341
  2768   0018D6                     l2337:
  2769                           
  2770                           ;dc_motor.c: 70:         posDuty=0;
  2771   0018D6  0E00               	movlw	0
  2772   0018D8  6E12               	movwf	setMotorPWM@posDuty^0,c
  2773   0018DA                     
  2774                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2775   0018DA  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2776   0018DE  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2777   0018E2  50DF               	movf	indf2,w,c
  2778   0018E4  6E10               	movwf	??_setMotorPWM^0,c
  2779   0018E6  5010               	movf	??_setMotorPWM^0,w,c
  2780   0018E8  6E01               	movwf	___wmul@multiplier^0,c
  2781   0018EA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2782   0018EC  EE20 F003          	lfsr	2,3
  2783   0018F0  500E               	movf	setMotorPWM@m^0,w,c
  2784   0018F2  26D9               	addwf	fsr2l,f,c
  2785   0018F4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2786   0018F6  22DA               	addwfc	fsr2h,f,c
  2787   0018F8  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2788   0018FC  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2789   001900  ECB3  F011         	call	___wmul	;wreg free
  2790   001904  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2791   001908  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2792   00190C  0E00               	movlw	0
  2793   00190E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2794   001910  0E64               	movlw	100
  2795   001912  6E09               	movwf	___lwdiv@divisor^0,c
  2796   001914  ECDC  F00F         	call	___lwdiv	;wreg free
  2797   001918  5007               	movf	?___lwdiv^0,w,c
  2798   00191A  6E13               	movwf	setMotorPWM@negDuty^0,c
  2799   00191C                     l2341:
  2800                           
  2801                           ;dc_motor.c: 74:     if (m->direction) {
  2802   00191C  EE20 F001          	lfsr	2,1
  2803   001920  500E               	movf	setMotorPWM@m^0,w,c
  2804   001922  26D9               	addwf	fsr2l,f,c
  2805   001924  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2806   001926  22DA               	addwfc	fsr2h,f,c
  2807   001928  50DF               	movf	indf2,w,c
  2808   00192A  B4D8               	btfsc	status,2,c
  2809   00192C  EF9A  F00C         	goto	u1171
  2810   001930  EF9C  F00C         	goto	u1170
  2811   001934                     u1171:
  2812   001934  EFBE  F00C         	goto	l2345
  2813   001938                     u1170:
  2814   001938                     
  2815                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2816   001938  EE20 F005          	lfsr	2,5
  2817   00193C  500E               	movf	setMotorPWM@m^0,w,c
  2818   00193E  26D9               	addwf	fsr2l,f,c
  2819   001940  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2820   001942  22DA               	addwfc	fsr2h,f,c
  2821   001944  CFDE F010          	movff	postinc2,??_setMotorPWM
  2822   001948  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2823   00194C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2824   001950  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2825   001954  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2826                           
  2827                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2828   001958  EE20 F007          	lfsr	2,7
  2829   00195C  500E               	movf	setMotorPWM@m^0,w,c
  2830   00195E  26D9               	addwf	fsr2l,f,c
  2831   001960  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2832   001962  22DA               	addwfc	fsr2h,f,c
  2833   001964  CFDE F010          	movff	postinc2,??_setMotorPWM
  2834   001968  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2835   00196C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2836   001970  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2837   001974  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2838                           
  2839                           ;dc_motor.c: 77:     } else {
  2840   001978  EFDE  F00C         	goto	l95
  2841   00197C                     l2345:
  2842                           
  2843                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2844   00197C  EE20 F005          	lfsr	2,5
  2845   001980  500E               	movf	setMotorPWM@m^0,w,c
  2846   001982  26D9               	addwf	fsr2l,f,c
  2847   001984  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2848   001986  22DA               	addwfc	fsr2h,f,c
  2849   001988  CFDE F010          	movff	postinc2,??_setMotorPWM
  2850   00198C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2851   001990  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2852   001994  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2853   001998  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2854                           
  2855                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2856   00199C  EE20 F007          	lfsr	2,7
  2857   0019A0  500E               	movf	setMotorPWM@m^0,w,c
  2858   0019A2  26D9               	addwf	fsr2l,f,c
  2859   0019A4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2860   0019A6  22DA               	addwfc	fsr2h,f,c
  2861   0019A8  CFDE F010          	movff	postinc2,??_setMotorPWM
  2862   0019AC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2863   0019B0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2864   0019B4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2865   0019B8  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2866   0019BC                     l95:
  2867   0019BC  0012               	return		;funcret
  2868   0019BE                     __end_of_setMotorPWM:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _sendStringSerial4 *****************
  2872 ;; Defined at:
  2873 ;;		line 39 in file "serial.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  string          2    1[COMRAM] PTR unsigned char 
  2876 ;;		 -> main@buf(150), 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;Total ram usage:        2 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 1
  2895 ;; This function calls:
  2896 ;;		_sendCharSerial4
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text12
  2903   0022BA                     __ptext12:
  2904                           	callstack 0
  2905   0022BA                     _sendStringSerial4:
  2906                           	callstack 29
  2907   0022BA                     
  2908                           ;serial.c: 40:  while(*string != 0) {
  2909   0022BA  EF68  F011         	goto	l2505
  2910   0022BE                     l2501:
  2911                           
  2912                           ;serial.c: 41:         sendCharSerial4(*string++);
  2913   0022BE  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2914   0022C2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2915   0022C6  50DF               	movf	indf2,w,c
  2916   0022C8  ECF7  F011         	call	_sendCharSerial4
  2917   0022CC  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2918   0022CE  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2919   0022D0                     l2505:
  2920                           
  2921                           ;serial.c: 40:  while(*string != 0) {
  2922   0022D0  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2923   0022D4  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2924   0022D8  50DF               	movf	indf2,w,c
  2925   0022DA  A4D8               	btfss	status,2,c
  2926   0022DC  EF72  F011         	goto	u1271
  2927   0022E0  EF74  F011         	goto	u1270
  2928   0022E4                     u1271:
  2929   0022E4  EF5F  F011         	goto	l2501
  2930   0022E8                     u1270:
  2931   0022E8  0012               	return		;funcret
  2932   0022EA                     __end_of_sendStringSerial4:
  2933                           	callstack 0
  2934                           
  2935 ;; *************** function _sendCharSerial4 *****************
  2936 ;; Defined at:
  2937 ;;		line 32 in file "serial.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  charToSend      1    wreg     unsigned char 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  charToSend      1    0[COMRAM] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;Total ram usage:        1 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_sendStringSerial4
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text13
  2965   0023EE                     __ptext13:
  2966                           	callstack 0
  2967   0023EE                     _sendCharSerial4:
  2968                           	callstack 29
  2969                           
  2970                           ;incstack = 0
  2971                           ;sendCharSerial4@charToSend stored from wreg
  2972   0023EE  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2973   0023F0                     l383:
  2974   0023F0  010E               	movlb	14	; () banked
  2975   0023F2  A537               	btfss	55,2,b	;volatile
  2976   0023F4  EFFE  F011         	goto	u1111
  2977   0023F8  EF00  F012         	goto	u1110
  2978   0023FC                     u1111:
  2979   0023FC  EFF8  F011         	goto	l383
  2980   002400                     u1110:
  2981   002400                     
  2982                           ; BSR set to: 14
  2983                           ;serial.c: 34:     TX4REG = charToSend;
  2984   002400  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2985   002404                     
  2986                           ; BSR set to: 14
  2987   002404  0012               	return		;funcret
  2988   002406                     __end_of_sendCharSerial4:
  2989                           	callstack 0
  2990                           
  2991 ;; *************** function _normalise_readings *****************
  2992 ;; Defined at:
  2993 ;;		line 64 in file "colour_identify.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2996 ;;		 -> main@buf(150), 
  2997 ;;  red_read        2   24[COMRAM] unsigned int 
  2998 ;;  green_read      2   26[COMRAM] unsigned int 
  2999 ;;  blue_read       2   28[COMRAM] unsigned int 
  3000 ;;  expected_val    2   30[COMRAM] PTR unsigned int [9]
  3001 ;;		 -> main@expected_values(54), 
  3002 ;;  normalised_v    2   32[COMRAM] PTR unsigned int [9]
  3003 ;;		 -> main@normalised_values(54), 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  difference      2   42[COMRAM] unsigned int 
  3006 ;;  i               1   44[COMRAM] enum E14551
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3016 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;Total ram usage:       23 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 1
  3023 ;; This function calls:
  3024 ;;		___lwdiv
  3025 ;;		___wmul
  3026 ;;		_abs
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text14
  3033   0010A2                     __ptext14:
  3034                           	callstack 0
  3035   0010A2                     _normalise_readings:
  3036                           	callstack 29
  3037   0010A2                     
  3038                           ;colour_identify.c: 71:     for(colour i = RED; i<= BLACK; i++){
  3039   0010A2  0E00               	movlw	0
  3040   0010A4  6E2D               	movwf	normalise_readings@i^0,c
  3041   0010A6                     l2513:
  3042                           
  3043                           ;colour_identify.c: 74:         unsigned int difference = abs(red_read - expected_values
      +                          [i][RED]);
  3044   0010A6  502D               	movf	normalise_readings@i^0,w,c
  3045   0010A8  0D12               	mullw	18
  3046   0010AA  CFF3 F023          	movff	prodl,??_normalise_readings
  3047   0010AE  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3048   0010B2  5023               	movf	??_normalise_readings^0,w,c
  3049   0010B4  241F               	addwf	normalise_readings@expected_values^0,w,c
  3050   0010B6  6ED9               	movwf	fsr2l,c
  3051   0010B8  5024               	movf	(??_normalise_readings+1)^0,w,c
  3052   0010BA  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3053   0010BC  6EDA               	movwf	fsr2h,c
  3054   0010BE  CFDE F025          	movff	postinc2,??_normalise_readings+2
  3055   0010C2  CFDD F026          	movff	postdec2,??_normalise_readings+3
  3056   0010C6  5025               	movf	(??_normalise_readings+2)^0,w,c
  3057   0010C8  5C19               	subwf	normalise_readings@red_read^0,w,c
  3058   0010CA  6E13               	movwf	abs@a^0,c
  3059   0010CC  5026               	movf	(??_normalise_readings+3)^0,w,c
  3060   0010CE  581A               	subwfb	(normalise_readings@red_read+1)^0,w,c
  3061   0010D0  6E14               	movwf	(abs@a+1)^0,c
  3062   0010D2  EC23  F011         	call	_abs	;wreg free
  3063   0010D6  C013  F02B         	movff	?_abs,normalise_readings@difference
  3064   0010DA  C014  F02C         	movff	?_abs+1,normalise_readings@difference+1
  3065                           
  3066                           ;colour_identify.c: 76:         normalised_values[i][RED] = (difference*100) / expected_
      +                          values[i][RED];
  3067   0010DE  C02B  F001         	movff	normalise_readings@difference,___wmul@multiplier
  3068   0010E2  C02C  F002         	movff	normalise_readings@difference+1,___wmul@multiplier+1
  3069   0010E6  0E00               	movlw	0
  3070   0010E8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3071   0010EA  0E64               	movlw	100
  3072   0010EC  6E03               	movwf	___wmul@multiplicand^0,c
  3073   0010EE  ECB3  F011         	call	___wmul	;wreg free
  3074   0010F2  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3075   0010F6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3076   0010FA  502D               	movf	normalise_readings@i^0,w,c
  3077   0010FC  0D12               	mullw	18
  3078   0010FE  CFF3 F023          	movff	prodl,??_normalise_readings
  3079   001102  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3080   001106  5023               	movf	??_normalise_readings^0,w,c
  3081   001108  241F               	addwf	normalise_readings@expected_values^0,w,c
  3082   00110A  6ED9               	movwf	fsr2l,c
  3083   00110C  5024               	movf	(??_normalise_readings+1)^0,w,c
  3084   00110E  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3085   001110  6EDA               	movwf	fsr2h,c
  3086   001112  CFDE F009          	movff	postinc2,___lwdiv@divisor
  3087   001116  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  3088   00111A  ECDC  F00F         	call	___lwdiv	;wreg free
  3089   00111E  502D               	movf	normalise_readings@i^0,w,c
  3090   001120  0D12               	mullw	18
  3091   001122  CFF3 F025          	movff	prodl,??_normalise_readings+2
  3092   001126  CFF4 F026          	movff	prodh,??_normalise_readings+3
  3093   00112A  5025               	movf	(??_normalise_readings+2)^0,w,c
  3094   00112C  2421               	addwf	normalise_readings@normalised_values^0,w,c
  3095   00112E  6ED9               	movwf	fsr2l,c
  3096   001130  5026               	movf	(??_normalise_readings+3)^0,w,c
  3097   001132  2022               	addwfc	(normalise_readings@normalised_values+1)^0,w,c
  3098   001134  6EDA               	movwf	fsr2h,c
  3099   001136  C007  FFDE         	movff	?___lwdiv,postinc2
  3100   00113A  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3101                           
  3102                           ;colour_identify.c: 81:         difference = abs(green_read - expected_values[i][GREEN])
      +                          ;
  3103   00113E  502D               	movf	normalise_readings@i^0,w,c
  3104   001140  0D12               	mullw	18
  3105   001142  CFF3 F023          	movff	prodl,??_normalise_readings
  3106   001146  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3107   00114A  5023               	movf	??_normalise_readings^0,w,c
  3108   00114C  241F               	addwf	normalise_readings@expected_values^0,w,c
  3109   00114E  6E25               	movwf	(??_normalise_readings+2)^0,c
  3110   001150  5024               	movf	(??_normalise_readings+1)^0,w,c
  3111   001152  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3112   001154  6E26               	movwf	(??_normalise_readings+3)^0,c
  3113   001156  0E02               	movlw	2
  3114   001158  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3115   00115A  6ED9               	movwf	fsr2l,c
  3116   00115C  0E00               	movlw	0
  3117   00115E  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3118   001160  6EDA               	movwf	fsr2h,c
  3119   001162  CFDE F027          	movff	postinc2,??_normalise_readings+4
  3120   001166  CFDD F028          	movff	postdec2,??_normalise_readings+5
  3121   00116A  5027               	movf	(??_normalise_readings+4)^0,w,c
  3122   00116C  5C1B               	subwf	normalise_readings@green_read^0,w,c
  3123   00116E  6E13               	movwf	abs@a^0,c
  3124   001170  5028               	movf	(??_normalise_readings+5)^0,w,c
  3125   001172  581C               	subwfb	(normalise_readings@green_read+1)^0,w,c
  3126   001174  6E14               	movwf	(abs@a+1)^0,c
  3127   001176  EC23  F011         	call	_abs	;wreg free
  3128   00117A  C013  F02B         	movff	?_abs,normalise_readings@difference
  3129   00117E  C014  F02C         	movff	?_abs+1,normalise_readings@difference+1
  3130                           
  3131                           ;colour_identify.c: 83:         normalised_values[i][GREEN] = (difference*100) / expecte
      +                          d_values[i][GREEN];
  3132   001182  C02B  F001         	movff	normalise_readings@difference,___wmul@multiplier
  3133   001186  C02C  F002         	movff	normalise_readings@difference+1,___wmul@multiplier+1
  3134   00118A  0E00               	movlw	0
  3135   00118C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3136   00118E  0E64               	movlw	100
  3137   001190  6E03               	movwf	___wmul@multiplicand^0,c
  3138   001192  ECB3  F011         	call	___wmul	;wreg free
  3139   001196  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3140   00119A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3141   00119E  502D               	movf	normalise_readings@i^0,w,c
  3142   0011A0  0D12               	mullw	18
  3143   0011A2  CFF3 F023          	movff	prodl,??_normalise_readings
  3144   0011A6  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3145   0011AA  5023               	movf	??_normalise_readings^0,w,c
  3146   0011AC  241F               	addwf	normalise_readings@expected_values^0,w,c
  3147   0011AE  6E25               	movwf	(??_normalise_readings+2)^0,c
  3148   0011B0  5024               	movf	(??_normalise_readings+1)^0,w,c
  3149   0011B2  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3150   0011B4  6E26               	movwf	(??_normalise_readings+3)^0,c
  3151   0011B6  0E02               	movlw	2
  3152   0011B8  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3153   0011BA  6ED9               	movwf	fsr2l,c
  3154   0011BC  0E00               	movlw	0
  3155   0011BE  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3156   0011C0  6EDA               	movwf	fsr2h,c
  3157   0011C2  CFDE F009          	movff	postinc2,___lwdiv@divisor
  3158   0011C6  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  3159   0011CA  ECDC  F00F         	call	___lwdiv	;wreg free
  3160   0011CE  502D               	movf	normalise_readings@i^0,w,c
  3161   0011D0  0D12               	mullw	18
  3162   0011D2  CFF3 F027          	movff	prodl,??_normalise_readings+4
  3163   0011D6  CFF4 F028          	movff	prodh,??_normalise_readings+5
  3164   0011DA  5027               	movf	(??_normalise_readings+4)^0,w,c
  3165   0011DC  2421               	addwf	normalise_readings@normalised_values^0,w,c
  3166   0011DE  6E29               	movwf	(??_normalise_readings+6)^0,c
  3167   0011E0  5028               	movf	(??_normalise_readings+5)^0,w,c
  3168   0011E2  2022               	addwfc	(normalise_readings@normalised_values+1)^0,w,c
  3169   0011E4  6E2A               	movwf	(??_normalise_readings+7)^0,c
  3170   0011E6  0E02               	movlw	2
  3171   0011E8  2429               	addwf	(??_normalise_readings+6)^0,w,c
  3172   0011EA  6ED9               	movwf	fsr2l,c
  3173   0011EC  0E00               	movlw	0
  3174   0011EE  202A               	addwfc	(??_normalise_readings+7)^0,w,c
  3175   0011F0  6EDA               	movwf	fsr2h,c
  3176   0011F2  C007  FFDE         	movff	?___lwdiv,postinc2
  3177   0011F6  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3178                           
  3179                           ;colour_identify.c: 88:         difference = abs(blue_read - expected_values[i][BLUE]);
  3180   0011FA  502D               	movf	normalise_readings@i^0,w,c
  3181   0011FC  0D12               	mullw	18
  3182   0011FE  CFF3 F023          	movff	prodl,??_normalise_readings
  3183   001202  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3184   001206  5023               	movf	??_normalise_readings^0,w,c
  3185   001208  241F               	addwf	normalise_readings@expected_values^0,w,c
  3186   00120A  6E25               	movwf	(??_normalise_readings+2)^0,c
  3187   00120C  5024               	movf	(??_normalise_readings+1)^0,w,c
  3188   00120E  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3189   001210  6E26               	movwf	(??_normalise_readings+3)^0,c
  3190   001212  0E04               	movlw	4
  3191   001214  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3192   001216  6ED9               	movwf	fsr2l,c
  3193   001218  0E00               	movlw	0
  3194   00121A  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3195   00121C  6EDA               	movwf	fsr2h,c
  3196   00121E  CFDE F027          	movff	postinc2,??_normalise_readings+4
  3197   001222  CFDD F028          	movff	postdec2,??_normalise_readings+5
  3198   001226  5027               	movf	(??_normalise_readings+4)^0,w,c
  3199   001228  5C1D               	subwf	normalise_readings@blue_read^0,w,c
  3200   00122A  6E13               	movwf	abs@a^0,c
  3201   00122C  5028               	movf	(??_normalise_readings+5)^0,w,c
  3202   00122E  581E               	subwfb	(normalise_readings@blue_read+1)^0,w,c
  3203   001230  6E14               	movwf	(abs@a+1)^0,c
  3204   001232  EC23  F011         	call	_abs	;wreg free
  3205   001236  C013  F02B         	movff	?_abs,normalise_readings@difference
  3206   00123A  C014  F02C         	movff	?_abs+1,normalise_readings@difference+1
  3207                           
  3208                           ;colour_identify.c: 90:         normalised_values[i][BLUE] = (difference*100) / expected
      +                          _values[i][BLUE];
  3209   00123E  C02B  F001         	movff	normalise_readings@difference,___wmul@multiplier
  3210   001242  C02C  F002         	movff	normalise_readings@difference+1,___wmul@multiplier+1
  3211   001246  0E00               	movlw	0
  3212   001248  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3213   00124A  0E64               	movlw	100
  3214   00124C  6E03               	movwf	___wmul@multiplicand^0,c
  3215   00124E  ECB3  F011         	call	___wmul	;wreg free
  3216   001252  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3217   001256  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3218   00125A  502D               	movf	normalise_readings@i^0,w,c
  3219   00125C  0D12               	mullw	18
  3220   00125E  CFF3 F023          	movff	prodl,??_normalise_readings
  3221   001262  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3222   001266  5023               	movf	??_normalise_readings^0,w,c
  3223   001268  241F               	addwf	normalise_readings@expected_values^0,w,c
  3224   00126A  6E25               	movwf	(??_normalise_readings+2)^0,c
  3225   00126C  5024               	movf	(??_normalise_readings+1)^0,w,c
  3226   00126E  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3227   001270  6E26               	movwf	(??_normalise_readings+3)^0,c
  3228   001272  0E04               	movlw	4
  3229   001274  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3230   001276  6ED9               	movwf	fsr2l,c
  3231   001278  0E00               	movlw	0
  3232   00127A  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3233   00127C  6EDA               	movwf	fsr2h,c
  3234   00127E  CFDE F009          	movff	postinc2,___lwdiv@divisor
  3235   001282  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  3236   001286  ECDC  F00F         	call	___lwdiv	;wreg free
  3237   00128A  502D               	movf	normalise_readings@i^0,w,c
  3238   00128C  0D12               	mullw	18
  3239   00128E  CFF3 F027          	movff	prodl,??_normalise_readings+4
  3240   001292  CFF4 F028          	movff	prodh,??_normalise_readings+5
  3241   001296  5027               	movf	(??_normalise_readings+4)^0,w,c
  3242   001298  2421               	addwf	normalise_readings@normalised_values^0,w,c
  3243   00129A  6E29               	movwf	(??_normalise_readings+6)^0,c
  3244   00129C  5028               	movf	(??_normalise_readings+5)^0,w,c
  3245   00129E  2022               	addwfc	(normalise_readings@normalised_values+1)^0,w,c
  3246   0012A0  6E2A               	movwf	(??_normalise_readings+7)^0,c
  3247   0012A2  0E04               	movlw	4
  3248   0012A4  2429               	addwf	(??_normalise_readings+6)^0,w,c
  3249   0012A6  6ED9               	movwf	fsr2l,c
  3250   0012A8  0E00               	movlw	0
  3251   0012AA  202A               	addwfc	(??_normalise_readings+7)^0,w,c
  3252   0012AC  6EDA               	movwf	fsr2h,c
  3253   0012AE  C007  FFDE         	movff	?___lwdiv,postinc2
  3254   0012B2  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3255   0012B6                     
  3256                           ;colour_identify.c: 93:         _delay((unsigned long)((200)*(64000000/4000.0)));
  3257   0012B6  0E11               	movlw	17
  3258   0012B8  6E24               	movwf	(??_normalise_readings+1)^0,c
  3259   0012BA  0E3C               	movlw	60
  3260   0012BC  6E23               	movwf	??_normalise_readings^0,c
  3261   0012BE  0ECB               	movlw	203
  3262   0012C0                     u1467:
  3263   0012C0  2EE8               	decfsz	wreg,f,c
  3264   0012C2  D7FE               	bra	u1467
  3265   0012C4  2E23               	decfsz	??_normalise_readings^0,f,c
  3266   0012C6  D7FC               	bra	u1467
  3267   0012C8  2E24               	decfsz	(??_normalise_readings+1)^0,f,c
  3268   0012CA  D7FA               	bra	u1467
  3269   0012CC  F000               	nop	
  3270   0012CE                     
  3271                           ;colour_identify.c: 94:     }
  3272   0012CE  2A2D               	incf	normalise_readings@i^0,f,c
  3273   0012D0  0E08               	movlw	8
  3274   0012D2  642D               	cpfsgt	normalise_readings@i^0,c
  3275   0012D4  EF6E  F009         	goto	u1281
  3276   0012D8  EF70  F009         	goto	u1280
  3277   0012DC                     u1281:
  3278   0012DC  EF53  F008         	goto	l2513
  3279   0012E0                     u1280:
  3280   0012E0  0012               	return		;funcret
  3281   0012E2                     __end_of_normalise_readings:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _abs *****************
  3285 ;; Defined at:
  3286 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  a               2   18[COMRAM] int 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  2   18[COMRAM] int 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;Total ram usage:        4 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_normalise_readings
  3310 ;;		_dtoa
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text15
  3315   002246                     __ptext15:
  3316                           	callstack 0
  3317   002246                     _abs:
  3318                           	callstack 26
  3319   002246  BE14               	btfsc	(abs@a+1)^0,7,c
  3320   002248  EF30  F011         	goto	u780
  3321   00224C  5014               	movf	(abs@a+1)^0,w,c
  3322   00224E  E106               	bnz	u781
  3323   002250  0413               	decf	abs@a^0,w,c
  3324   002252  B0D8               	btfsc	status,0,c
  3325   002254  EF2E  F011         	goto	u781
  3326   002258  EF30  F011         	goto	u780
  3327   00225C                     u781:
  3328   00225C  EF3E  F011         	goto	l1102
  3329   002260                     u780:
  3330   002260  C013  F015         	movff	abs@a,??_abs
  3331   002264  C014  F016         	movff	abs@a+1,??_abs+1
  3332   002268  1E15               	comf	??_abs^0,f,c
  3333   00226A  1E16               	comf	(??_abs+1)^0,f,c
  3334   00226C  4A15               	infsnz	??_abs^0,f,c
  3335   00226E  2A16               	incf	(??_abs+1)^0,f,c
  3336   002270  C015  F013         	movff	??_abs,?_abs
  3337   002274  C016  F014         	movff	??_abs+1,?_abs+1
  3338   002278  EF42  F011         	goto	l1105
  3339   00227C                     l1102:
  3340   00227C  C013  F013         	movff	abs@a,?_abs
  3341   002280  C014  F014         	movff	abs@a+1,?_abs+1
  3342   002284                     l1105:
  3343   002284  0012               	return		;funcret
  3344   002286                     __end_of_abs:
  3345                           	callstack 0
  3346                           
  3347 ;; *************** function ___wmul *****************
  3348 ;; Defined at:
  3349 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  multiplier      2    0[COMRAM] unsigned int 
  3352 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  product         2    4[COMRAM] unsigned int 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  2    0[COMRAM] unsigned int 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, prodl, prodh
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;Total ram usage:        6 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_setMotorPWM
  3374 ;;		_normalise_readings
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text16
  3379   002366                     __ptext16:
  3380                           	callstack 0
  3381   002366                     ___wmul:
  3382                           	callstack 29
  3383   002366  5001               	movf	___wmul@multiplier^0,w,c
  3384   002368  0203               	mulwf	___wmul@multiplicand^0,c
  3385   00236A  CFF3 F005          	movff	prodl,___wmul@product
  3386   00236E  CFF4 F006          	movff	prodh,___wmul@product+1
  3387   002372  5001               	movf	___wmul@multiplier^0,w,c
  3388   002374  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3389   002376  50F3               	movf	243,w,c
  3390   002378  2606               	addwf	(___wmul@product+1)^0,f,c
  3391   00237A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3392   00237C  0203               	mulwf	___wmul@multiplicand^0,c
  3393   00237E  50F3               	movf	243,w,c
  3394   002380  2606               	addwf	(___wmul@product+1)^0,f,c
  3395   002382  C005  F001         	movff	___wmul@product,?___wmul
  3396   002386  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3397   00238A  0012               	return		;funcret
  3398   00238C                     __end_of___wmul:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function _make_master_closeness *****************
  3402 ;; Defined at:
  3403 ;;		line 98 in file "colour_identify.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  buf             2   13[COMRAM] PTR unsigned char 
  3406 ;;		 -> main@buf(150), 
  3407 ;;  normalised_v    2   15[COMRAM] PTR unsigned int [9]
  3408 ;;		 -> main@normalised_values(54), 
  3409 ;;  master_close    2   17[COMRAM] PTR unsigned int 
  3410 ;;		 -> main@master_closeness(18), 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  i               1   39[COMRAM] enum E14551
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3422 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3424 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3426 ;;Total ram usage:       27 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 1
  3429 ;; This function calls:
  3430 ;;		___lwdiv
  3431 ;; This function is called by:
  3432 ;;		_main
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text17
  3437   001C80                     __ptext17:
  3438                           	callstack 0
  3439   001C80                     _make_master_closeness:
  3440                           	callstack 29
  3441   001C80                     
  3442                           ;colour_identify.c: 99:     for(colour i = RED; i<=BLACK; i++){
  3443   001C80  0E00               	movlw	0
  3444   001C82  6E28               	movwf	make_master_closeness@i^0,c
  3445   001C84                     l2527:
  3446                           
  3447                           ;colour_identify.c: 100:         master_closeness[i] = (normalised_values[i][RED] + norm
      +                          alised_values[i][GREEN] + normalised_values[i][BLUE])/3;
  3448   001C84  5028               	movf	make_master_closeness@i^0,w,c
  3449   001C86  0D12               	mullw	18
  3450   001C88  CFF3 F014          	movff	prodl,??_make_master_closeness
  3451   001C8C  CFF4 F015          	movff	prodh,??_make_master_closeness+1
  3452   001C90  5014               	movf	??_make_master_closeness^0,w,c
  3453   001C92  2410               	addwf	make_master_closeness@normalised_values^0,w,c
  3454   001C94  6E16               	movwf	(??_make_master_closeness+2)^0,c
  3455   001C96  5015               	movf	(??_make_master_closeness+1)^0,w,c
  3456   001C98  2011               	addwfc	(make_master_closeness@normalised_values+1)^0,w,c
  3457   001C9A  6E17               	movwf	(??_make_master_closeness+3)^0,c
  3458   001C9C  0E04               	movlw	4
  3459   001C9E  2416               	addwf	(??_make_master_closeness+2)^0,w,c
  3460   001CA0  6ED9               	movwf	fsr2l,c
  3461   001CA2  0E00               	movlw	0
  3462   001CA4  2017               	addwfc	(??_make_master_closeness+3)^0,w,c
  3463   001CA6  6EDA               	movwf	fsr2h,c
  3464   001CA8  CFDE F018          	movff	postinc2,??_make_master_closeness+4
  3465   001CAC  CFDD F019          	movff	postdec2,??_make_master_closeness+5
  3466   001CB0  5028               	movf	make_master_closeness@i^0,w,c
  3467   001CB2  0D12               	mullw	18
  3468   001CB4  CFF3 F01A          	movff	prodl,??_make_master_closeness+6
  3469   001CB8  CFF4 F01B          	movff	prodh,??_make_master_closeness+7
  3470   001CBC  501A               	movf	(??_make_master_closeness+6)^0,w,c
  3471   001CBE  2410               	addwf	make_master_closeness@normalised_values^0,w,c
  3472   001CC0  6E1C               	movwf	(??_make_master_closeness+8)^0,c
  3473   001CC2  501B               	movf	(??_make_master_closeness+7)^0,w,c
  3474   001CC4  2011               	addwfc	(make_master_closeness@normalised_values+1)^0,w,c
  3475   001CC6  6E1D               	movwf	(??_make_master_closeness+9)^0,c
  3476   001CC8  0E02               	movlw	2
  3477   001CCA  241C               	addwf	(??_make_master_closeness+8)^0,w,c
  3478   001CCC  6ED9               	movwf	fsr2l,c
  3479   001CCE  0E00               	movlw	0
  3480   001CD0  201D               	addwfc	(??_make_master_closeness+9)^0,w,c
  3481   001CD2  6EDA               	movwf	fsr2h,c
  3482   001CD4  CFDE F01E          	movff	postinc2,??_make_master_closeness+10
  3483   001CD8  CFDD F01F          	movff	postdec2,??_make_master_closeness+11
  3484   001CDC  5028               	movf	make_master_closeness@i^0,w,c
  3485   001CDE  0D12               	mullw	18
  3486   001CE0  CFF3 F020          	movff	prodl,??_make_master_closeness+12
  3487   001CE4  CFF4 F021          	movff	prodh,??_make_master_closeness+13
  3488   001CE8  5020               	movf	(??_make_master_closeness+12)^0,w,c
  3489   001CEA  2410               	addwf	make_master_closeness@normalised_values^0,w,c
  3490   001CEC  6ED9               	movwf	fsr2l,c
  3491   001CEE  5021               	movf	(??_make_master_closeness+13)^0,w,c
  3492   001CF0  2011               	addwfc	(make_master_closeness@normalised_values+1)^0,w,c
  3493   001CF2  6EDA               	movwf	fsr2h,c
  3494   001CF4  CFDE F022          	movff	postinc2,??_make_master_closeness+14
  3495   001CF8  CFDD F023          	movff	postdec2,??_make_master_closeness+15
  3496   001CFC  501E               	movf	(??_make_master_closeness+10)^0,w,c
  3497   001CFE  2422               	addwf	(??_make_master_closeness+14)^0,w,c
  3498   001D00  6E24               	movwf	(??_make_master_closeness+16)^0,c
  3499   001D02  501F               	movf	(??_make_master_closeness+11)^0,w,c
  3500   001D04  2023               	addwfc	(??_make_master_closeness+15)^0,w,c
  3501   001D06  6E25               	movwf	(??_make_master_closeness+17)^0,c
  3502   001D08  5018               	movf	(??_make_master_closeness+4)^0,w,c
  3503   001D0A  2424               	addwf	(??_make_master_closeness+16)^0,w,c
  3504   001D0C  6E07               	movwf	___lwdiv@dividend^0,c
  3505   001D0E  5019               	movf	(??_make_master_closeness+5)^0,w,c
  3506   001D10  2025               	addwfc	(??_make_master_closeness+17)^0,w,c
  3507   001D12  6E08               	movwf	(___lwdiv@dividend+1)^0,c
  3508   001D14  0E00               	movlw	0
  3509   001D16  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3510   001D18  0E03               	movlw	3
  3511   001D1A  6E09               	movwf	___lwdiv@divisor^0,c
  3512   001D1C  ECDC  F00F         	call	___lwdiv	;wreg free
  3513   001D20  5028               	movf	make_master_closeness@i^0,w,c
  3514   001D22  0D02               	mullw	2
  3515   001D24  CFF3 F026          	movff	prodl,??_make_master_closeness+18
  3516   001D28  CFF4 F027          	movff	prodh,??_make_master_closeness+19
  3517   001D2C  5026               	movf	(??_make_master_closeness+18)^0,w,c
  3518   001D2E  2412               	addwf	make_master_closeness@master_closeness^0,w,c
  3519   001D30  6ED9               	movwf	fsr2l,c
  3520   001D32  5027               	movf	(??_make_master_closeness+19)^0,w,c
  3521   001D34  2013               	addwfc	(make_master_closeness@master_closeness+1)^0,w,c
  3522   001D36  6EDA               	movwf	fsr2h,c
  3523   001D38  C007  FFDE         	movff	?___lwdiv,postinc2
  3524   001D3C  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3525   001D40                     
  3526                           ;colour_identify.c: 102:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3527   001D40  0E52               	movlw	82
  3528   001D42  6E15               	movwf	(??_make_master_closeness+1)^0,c
  3529   001D44  0E2B               	movlw	43
  3530   001D46  6E14               	movwf	??_make_master_closeness^0,c
  3531   001D48  0E00               	movlw	0
  3532   001D4A                     u1477:
  3533   001D4A  2EE8               	decfsz	wreg,f,c
  3534   001D4C  D7FE               	bra	u1477
  3535   001D4E  2E14               	decfsz	??_make_master_closeness^0,f,c
  3536   001D50  D7FC               	bra	u1477
  3537   001D52  2E15               	decfsz	(??_make_master_closeness+1)^0,f,c
  3538   001D54  D7FA               	bra	u1477
  3539   001D56  D000               	nop2	
  3540   001D58                     
  3541                           ;colour_identify.c: 104:     }
  3542   001D58  2A28               	incf	make_master_closeness@i^0,f,c
  3543   001D5A  0E08               	movlw	8
  3544   001D5C  6428               	cpfsgt	make_master_closeness@i^0,c
  3545   001D5E  EFB3  F00E         	goto	u1291
  3546   001D62  EFB5  F00E         	goto	u1290
  3547   001D66                     u1291:
  3548   001D66  EF42  F00E         	goto	l2527
  3549   001D6A                     u1290:
  3550   001D6A  0012               	return		;funcret
  3551   001D6C                     __end_of_make_master_closeness:
  3552                           	callstack 0
  3553                           
  3554 ;; *************** function _initUSART4 *****************
  3555 ;; Defined at:
  3556 ;;		line 6 in file "serial.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;		None
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;		None
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      void 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;Total ram usage:        0 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text18
  3584   0023AE                     __ptext18:
  3585                           	callstack 0
  3586   0023AE                     _initUSART4:
  3587                           	callstack 30
  3588   0023AE                     
  3589                           ;serial.c: 10:     RC0PPS = 0x12;
  3590   0023AE  0E12               	movlw	18
  3591   0023B0  010E               	movlb	14	; () banked
  3592   0023B2  6F62               	movwf	98,b	;volatile
  3593                           
  3594                           ;serial.c: 11:     RX4PPS = 0x11;
  3595   0023B4  0E11               	movlw	17
  3596   0023B6  6F15               	movwf	21,b	;volatile
  3597   0023B8                     
  3598                           ; BSR set to: 14
  3599                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3600   0023B8  8283               	bsf	131,1,c	;volatile
  3601   0023BA                     
  3602                           ; BSR set to: 14
  3603                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3604   0023BA  97E9               	bcf	233,3,b	;volatile
  3605   0023BC                     
  3606                           ; BSR set to: 14
  3607                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3608   0023BC  95E8               	bcf	232,2,b	;volatile
  3609                           
  3610                           ;serial.c: 17:     SP4BRGL = 51;
  3611   0023BE  0E33               	movlw	51
  3612   0023C0  6FE5               	movwf	229,b	;volatile
  3613                           
  3614                           ;serial.c: 18:     SP4BRGH = 0;
  3615   0023C2  0E00               	movlw	0
  3616   0023C4  6FE6               	movwf	230,b	;volatile
  3617   0023C6                     
  3618                           ; BSR set to: 14
  3619                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3620   0023C6  89E7               	bsf	231,4,b	;volatile
  3621   0023C8                     
  3622                           ; BSR set to: 14
  3623                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3624   0023C8  8BE8               	bsf	232,5,b	;volatile
  3625   0023CA                     
  3626                           ; BSR set to: 14
  3627                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3628   0023CA  8FE7               	bsf	231,7,b	;volatile
  3629   0023CC                     
  3630                           ; BSR set to: 14
  3631   0023CC  0012               	return		;funcret
  3632   0023CE                     __end_of_initUSART4:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _initDCmotorsPWM *****************
  3636 ;; Defined at:
  3637 ;;		line 6 in file "dc_motor.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;Total ram usage:        0 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_main
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text19
  3665   001E36                     __ptext19:
  3666                           	callstack 0
  3667   001E36                     _initDCmotorsPWM:
  3668                           	callstack 30
  3669   001E36                     
  3670                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3671   001E36  9485               	bcf	133,2,c	;volatile
  3672                           
  3673                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3674   001E38  9885               	bcf	133,4,c	;volatile
  3675                           
  3676                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3677   001E3A  9E83               	bcf	131,7,c	;volatile
  3678                           
  3679                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3680   001E3C  9C87               	bcf	135,6,c	;volatile
  3681   001E3E                     
  3682                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3683   001E3E  0E05               	movlw	5
  3684   001E40  010E               	movlb	14	; () banked
  3685   001E42  6F74               	movwf	116,b	;volatile
  3686                           
  3687                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3688   001E44  0E06               	movlw	6
  3689   001E46  6F76               	movwf	118,b	;volatile
  3690                           
  3691                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3692   001E48  0E07               	movlw	7
  3693   001E4A  6F69               	movwf	105,b	;volatile
  3694                           
  3695                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3696   001E4C  0E08               	movlw	8
  3697   001E4E  6F88               	movwf	136,b	;volatile
  3698                           
  3699                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3700   001E50  50BD               	movf	189,w,c	;volatile
  3701   001E52  0B8F               	andlw	-113
  3702   001E54  0940               	iorlw	64
  3703   001E56  6EBD               	movwf	189,c	;volatile
  3704                           
  3705                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3706   001E58  0EE0               	movlw	-32
  3707   001E5A  16BE               	andwf	190,f,c	;volatile
  3708                           
  3709                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3710   001E5C  50BF               	movf	191,w,c	;volatile
  3711   001E5E  0BF0               	andlw	-16
  3712   001E60  0901               	iorlw	1
  3713   001E62  6EBF               	movwf	191,c	;volatile
  3714                           
  3715                           ;dc_motor.c: 26:     T2PR=99;
  3716   001E64  0E63               	movlw	99
  3717   001E66  6EBC               	movwf	188,c	;volatile
  3718   001E68                     
  3719                           ; BSR set to: 14
  3720                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3721   001E68  8EBD               	bsf	189,7,c	;volatile
  3722                           
  3723                           ;dc_motor.c: 31:     CCPR1H=0;
  3724   001E6A  0E00               	movlw	0
  3725   001E6C  6EAA               	movwf	170,c	;volatile
  3726                           
  3727                           ;dc_motor.c: 32:     CCPR2H=0;
  3728   001E6E  0E00               	movlw	0
  3729   001E70  6EA6               	movwf	166,c	;volatile
  3730                           
  3731                           ;dc_motor.c: 33:     CCPR3H=0;
  3732   001E72  0E00               	movlw	0
  3733   001E74  010F               	movlb	15	; () banked
  3734   001E76  6F25               	movwf	37,b	;volatile
  3735                           
  3736                           ;dc_motor.c: 34:     CCPR4H=0;
  3737   001E78  0E00               	movlw	0
  3738   001E7A  6F21               	movwf	33,b	;volatile
  3739                           
  3740                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3741   001E7C  0EFC               	movlw	-4
  3742   001E7E  16AD               	andwf	173,f,c	;volatile
  3743                           
  3744                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3745   001E80  0EF3               	movlw	-13
  3746   001E82  16AD               	andwf	173,f,c	;volatile
  3747                           
  3748                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3749   001E84  0ECF               	movlw	-49
  3750   001E86  16AD               	andwf	173,f,c	;volatile
  3751                           
  3752                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3753   001E88  0E3F               	movlw	-193
  3754   001E8A  16AD               	andwf	173,f,c	;volatile
  3755   001E8C                     
  3756                           ; BSR set to: 15
  3757                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3758   001E8C  88AB               	bsf	171,4,c	;volatile
  3759                           
  3760                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3761   001E8E  50AB               	movf	171,w,c	;volatile
  3762   001E90  0BF0               	andlw	-16
  3763   001E92  090C               	iorlw	12
  3764   001E94  6EAB               	movwf	171,c	;volatile
  3765   001E96                     
  3766                           ; BSR set to: 15
  3767                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3768   001E96  8EAB               	bsf	171,7,c	;volatile
  3769   001E98                     
  3770                           ; BSR set to: 15
  3771                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3772   001E98  88A7               	bsf	167,4,c	;volatile
  3773                           
  3774                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3775   001E9A  50A7               	movf	167,w,c	;volatile
  3776   001E9C  0BF0               	andlw	-16
  3777   001E9E  090C               	iorlw	12
  3778   001EA0  6EA7               	movwf	167,c	;volatile
  3779   001EA2                     
  3780                           ; BSR set to: 15
  3781                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3782   001EA2  8EA7               	bsf	167,7,c	;volatile
  3783   001EA4                     
  3784                           ; BSR set to: 15
  3785                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3786   001EA4  8926               	bsf	38,4,b	;volatile
  3787                           
  3788                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3789   001EA6  5126               	movf	38,w,b	;volatile
  3790   001EA8  0BF0               	andlw	-16
  3791   001EAA  090C               	iorlw	12
  3792   001EAC  6F26               	movwf	38,b	;volatile
  3793   001EAE                     
  3794                           ; BSR set to: 15
  3795                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3796   001EAE  8F26               	bsf	38,7,b	;volatile
  3797   001EB0                     
  3798                           ; BSR set to: 15
  3799                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3800   001EB0  8922               	bsf	34,4,b	;volatile
  3801                           
  3802                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3803   001EB2  5122               	movf	34,w,b	;volatile
  3804   001EB4  0BF0               	andlw	-16
  3805   001EB6  090C               	iorlw	12
  3806   001EB8  6F22               	movwf	34,b	;volatile
  3807   001EBA                     
  3808                           ; BSR set to: 15
  3809                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3810   001EBA  8F22               	bsf	34,7,b	;volatile
  3811   001EBC                     
  3812                           ; BSR set to: 15
  3813   001EBC  0012               	return		;funcret
  3814   001EBE                     __end_of_initDCmotorsPWM:
  3815                           	callstack 0
  3816                           
  3817 ;; *************** function _determine_card *****************
  3818 ;; Defined at:
  3819 ;;		line 107 in file "colour_identify.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  master_close    2    0[COMRAM] PTR unsigned int 
  3822 ;;		 -> main@master_closeness(18), 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  i               1    9[COMRAM] enum E14551
  3825 ;;  current_smal    2    6[COMRAM] unsigned int 
  3826 ;;  predicted_co    1    8[COMRAM] enum E14551
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      enum E14575
  3829 ;; Registers used:
  3830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3839 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3840 ;;Total ram usage:       10 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_main
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text20
  3850   001EBE                     __ptext20:
  3851                           	callstack 0
  3852   001EBE                     _determine_card:
  3853                           	callstack 30
  3854   001EBE                     
  3855                           ;colour_identify.c: 108:     colour predicted_colour = RED;
  3856   001EBE  0E00               	movlw	0
  3857   001EC0  6E09               	movwf	determine_card@predicted_colour^0,c
  3858   001EC2                     
  3859                           ;colour_identify.c: 109:     unsigned int current_smallest = master_closeness[RED];
  3860   001EC2  C001  FFD9         	movff	determine_card@master_closeness,fsr2l
  3861   001EC6  C002  FFDA         	movff	determine_card@master_closeness+1,fsr2h
  3862   001ECA  CFDE F007          	movff	postinc2,determine_card@current_smallest
  3863   001ECE  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  3864   001ED2                     
  3865                           ;colour_identify.c: 110:     for(colour i = GREEN; i<=BLACK; i++){
  3866   001ED2  0E01               	movlw	1
  3867   001ED4  6E0A               	movwf	determine_card@i^0,c
  3868   001ED6                     l2545:
  3869                           
  3870                           ;colour_identify.c: 111:         if(master_closeness[i] < current_smallest){
  3871   001ED6  500A               	movf	determine_card@i^0,w,c
  3872   001ED8  0D02               	mullw	2
  3873   001EDA  CFF3 F003          	movff	prodl,??_determine_card
  3874   001EDE  CFF4 F004          	movff	prodh,??_determine_card+1
  3875   001EE2  5003               	movf	??_determine_card^0,w,c
  3876   001EE4  2401               	addwf	determine_card@master_closeness^0,w,c
  3877   001EE6  6ED9               	movwf	fsr2l,c
  3878   001EE8  5004               	movf	(??_determine_card+1)^0,w,c
  3879   001EEA  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  3880   001EEC  6EDA               	movwf	fsr2h,c
  3881   001EEE  5007               	movf	determine_card@current_smallest^0,w,c
  3882   001EF0  5CDE               	subwf	postinc2,w,c
  3883   001EF2  5008               	movf	(determine_card@current_smallest+1)^0,w,c
  3884   001EF4  58DE               	subwfb	postinc2,w,c
  3885   001EF6  B0D8               	btfsc	status,0,c
  3886   001EF8  EF80  F00F         	goto	u1301
  3887   001EFC  EF82  F00F         	goto	u1300
  3888   001F00                     u1301:
  3889   001F00  EF94  F00F         	goto	l2551
  3890   001F04                     u1300:
  3891   001F04                     
  3892                           ;colour_identify.c: 112:             current_smallest = master_closeness[i];
  3893   001F04  500A               	movf	determine_card@i^0,w,c
  3894   001F06  0D02               	mullw	2
  3895   001F08  CFF3 F003          	movff	prodl,??_determine_card
  3896   001F0C  CFF4 F004          	movff	prodh,??_determine_card+1
  3897   001F10  5003               	movf	??_determine_card^0,w,c
  3898   001F12  2401               	addwf	determine_card@master_closeness^0,w,c
  3899   001F14  6ED9               	movwf	fsr2l,c
  3900   001F16  5004               	movf	(??_determine_card+1)^0,w,c
  3901   001F18  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  3902   001F1A  6EDA               	movwf	fsr2h,c
  3903   001F1C  CFDE F007          	movff	postinc2,determine_card@current_smallest
  3904   001F20  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  3905   001F24                     
  3906                           ;colour_identify.c: 113:             predicted_colour = i;
  3907   001F24  C00A  F009         	movff	determine_card@i,determine_card@predicted_colour
  3908   001F28                     l2551:
  3909                           
  3910                           ;colour_identify.c: 115:     }
  3911   001F28  2A0A               	incf	determine_card@i^0,f,c
  3912   001F2A  0E08               	movlw	8
  3913   001F2C  640A               	cpfsgt	determine_card@i^0,c
  3914   001F2E  EF9B  F00F         	goto	u1311
  3915   001F32  EF9D  F00F         	goto	u1310
  3916   001F36                     u1311:
  3917   001F36  EF6B  F00F         	goto	l2545
  3918   001F3A                     u1310:
  3919   001F3A                     
  3920                           ;colour_identify.c: 116:     return predicted_colour;
  3921   001F3A  5009               	movf	determine_card@predicted_colour^0,w,c
  3922   001F3C  0012               	return		;funcret
  3923   001F3E                     __end_of_determine_card:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _color_click_init *****************
  3927 ;; Defined at:
  3928 ;;		line 5 in file "color.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;Total ram usage:        1 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 3
  3949 ;; This function calls:
  3950 ;;		_I2C_2_Master_Init
  3951 ;;		_color_writetoaddr
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text21
  3958   002286                     __ptext21:
  3959                           	callstack 0
  3960   002286                     _color_click_init:
  3961                           	callstack 27
  3962   002286                     
  3963                           ;color.c: 8:     I2C_2_Master_Init();
  3964   002286  EC8A  F011         	call	_I2C_2_Master_Init	;wreg free
  3965   00228A                     
  3966                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3967   00228A  0E01               	movlw	1
  3968   00228C  6E03               	movwf	color_writetoaddr@value^0,c
  3969   00228E  0E00               	movlw	0
  3970   002290  ECE7  F011         	call	_color_writetoaddr
  3971   002294                     
  3972                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3973   002294  0E3F               	movlw	63
  3974   002296  6E05               	movwf	??_color_click_init^0,c
  3975   002298  0E55               	movlw	85
  3976   00229A                     u1487:
  3977   00229A  2EE8               	decfsz	wreg,f,c
  3978   00229C  D7FE               	bra	u1487
  3979   00229E  2E05               	decfsz	??_color_click_init^0,f,c
  3980   0022A0  D7FC               	bra	u1487
  3981   0022A2  F000               	nop	
  3982   0022A4                     
  3983                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3984   0022A4  0E03               	movlw	3
  3985   0022A6  6E03               	movwf	color_writetoaddr@value^0,c
  3986   0022A8  0E00               	movlw	0
  3987   0022AA  ECE7  F011         	call	_color_writetoaddr
  3988   0022AE                     
  3989                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3990   0022AE  0ED5               	movlw	213
  3991   0022B0  6E03               	movwf	color_writetoaddr@value^0,c
  3992   0022B2  0E01               	movlw	1
  3993   0022B4  ECE7  F011         	call	_color_writetoaddr
  3994   0022B8  0012               	return		;funcret
  3995   0022BA                     __end_of_color_click_init:
  3996                           	callstack 0
  3997                           
  3998 ;; *************** function _color_writetoaddr *****************
  3999 ;; Defined at:
  4000 ;;		line 21 in file "color.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  address         1    wreg     unsigned char 
  4003 ;;  value           1    2[COMRAM] unsigned char 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  address         1    3[COMRAM] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4015 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;Total ram usage:        2 bytes
  4020 ;; Hardware stack levels used: 1
  4021 ;; Hardware stack levels required when called: 2
  4022 ;; This function calls:
  4023 ;;		_I2C_2_Master_Start
  4024 ;;		_I2C_2_Master_Stop
  4025 ;;		_I2C_2_Master_Write
  4026 ;; This function is called by:
  4027 ;;		_color_click_init
  4028 ;;		_enable_color_interrupt
  4029 ;;		_set_interrupt_threshold
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text22
  4034   0023CE                     __ptext22:
  4035                           	callstack 0
  4036   0023CE                     _color_writetoaddr:
  4037                           	callstack 27
  4038                           
  4039                           ;incstack = 0
  4040                           ;color_writetoaddr@address stored from wreg
  4041   0023CE  6E04               	movwf	color_writetoaddr@address^0,c
  4042   0023D0                     
  4043                           ;color.c: 22:     I2C_2_Master_Start();
  4044   0023D0  EC0E  F012         	call	_I2C_2_Master_Start	;wreg free
  4045                           
  4046                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4047   0023D4  0E52               	movlw	82
  4048   0023D6  EC03  F012         	call	_I2C_2_Master_Write
  4049                           
  4050                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4051   0023DA  5004               	movf	color_writetoaddr@address^0,w,c
  4052   0023DC  0980               	iorlw	128
  4053   0023DE  EC03  F012         	call	_I2C_2_Master_Write
  4054                           
  4055                           ;color.c: 25:     I2C_2_Master_Write(value);
  4056   0023E2  5003               	movf	color_writetoaddr@value^0,w,c
  4057   0023E4  EC03  F012         	call	_I2C_2_Master_Write
  4058                           
  4059                           ;color.c: 26:     I2C_2_Master_Stop();
  4060   0023E8  EC09  F012         	call	_I2C_2_Master_Stop	;wreg free
  4061   0023EC  0012               	return		;funcret
  4062   0023EE                     __end_of_color_writetoaddr:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _I2C_2_Master_Init *****************
  4066 ;; Defined at:
  4067 ;;		line 4 in file "i2c.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_color_click_init
  4091 ;;		_main
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text23
  4096   002314                     __ptext23:
  4097                           	callstack 0
  4098   002314                     _I2C_2_Master_Init:
  4099                           	callstack 29
  4100   002314                     
  4101                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4102   002314  010E               	movlb	14	; () banked
  4103   002316  51D9               	movf	217,w,b	;volatile
  4104   002318  0BF0               	andlw	-16
  4105   00231A  0908               	iorlw	8
  4106   00231C  6FD9               	movwf	217,b	;volatile
  4107   00231E                     
  4108                           ; BSR set to: 14
  4109                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4110   00231E  8BD9               	bsf	217,5,b	;volatile
  4111                           
  4112                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4113   002320  0E9F               	movlw	159
  4114   002322  6FD6               	movwf	214,b	;volatile
  4115   002324                     
  4116                           ; BSR set to: 14
  4117                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4118   002324  8A84               	bsf	132,5,c	;volatile
  4119   002326                     
  4120                           ; BSR set to: 14
  4121                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4122   002326  8C84               	bsf	132,6,c	;volatile
  4123   002328                     
  4124                           ; BSR set to: 14
  4125                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4126   002328  9BA7               	bcf	167,5,b	;volatile
  4127   00232A                     
  4128                           ; BSR set to: 14
  4129                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4130   00232A  9DA7               	bcf	167,6,b	;volatile
  4131                           
  4132                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4133   00232C  0E1D               	movlw	29
  4134   00232E  6F1D               	movwf	29,b	;volatile
  4135                           
  4136                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4137   002330  0E1E               	movlw	30
  4138   002332  6F1C               	movwf	28,b	;volatile
  4139                           
  4140                           ;i2c.c: 18:   RD5PPS=0x1C;
  4141   002334  0E1C               	movlw	28
  4142   002336  6F6F               	movwf	111,b	;volatile
  4143                           
  4144                           ;i2c.c: 19:   RD6PPS=0x1B;
  4145   002338  0E1B               	movlw	27
  4146   00233A  6F70               	movwf	112,b	;volatile
  4147   00233C                     
  4148                           ; BSR set to: 14
  4149   00233C  0012               	return		;funcret
  4150   00233E                     __end_of_I2C_2_Master_Init:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _collect_avg_readings *****************
  4154 ;; Defined at:
  4155 ;;		line 25 in file "colour_identify.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  red_read        2   13[COMRAM] PTR unsigned int 
  4158 ;;		 -> main@red_read(2), 
  4159 ;;  green_read      2   15[COMRAM] PTR unsigned int 
  4160 ;;		 -> main@green_read(2), 
  4161 ;;  blue_read       2   17[COMRAM] PTR unsigned int 
  4162 ;;		 -> main@blue_read(2), 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  i               2   27[COMRAM] int 
  4165 ;;  i               2   25[COMRAM] int 
  4166 ;;  i               2   23[COMRAM] int 
  4167 ;;  i               2   21[COMRAM] int 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4177 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;Total ram usage:       16 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 3
  4184 ;; This function calls:
  4185 ;;		___lwdiv
  4186 ;;		_color_read_Blue
  4187 ;;		_color_read_Green
  4188 ;;		_color_read_Red
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text24
  4195   0014E4                     __ptext24:
  4196                           	callstack 0
  4197   0014E4                     _collect_avg_readings:
  4198                           	callstack 27
  4199   0014E4                     
  4200                           ;colour_identify.c: 25: void collect_avg_readings( unsigned int *red_read, unsigned int 
      +                          *green_read, unsigned int *blue_read);colour_identify.c: 26: {;colour_identify.c: 29:   
      +                            for (int i = 0; i <= 500; i++){
  4201   0014E4  0E00               	movlw	0
  4202   0014E6  6E17               	movwf	(collect_avg_readings@i+1)^0,c
  4203   0014E8  0E00               	movlw	0
  4204   0014EA  6E16               	movwf	collect_avg_readings@i^0,c
  4205   0014EC                     l2433:
  4206                           
  4207                           ;colour_identify.c: 30:         *red_read = color_read_Red();
  4208   0014EC  EC68  F010         	call	_color_read_Red	;wreg free
  4209   0014F0  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4210   0014F4  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4211   0014F8  C005  FFDE         	movff	?_color_read_Red,postinc2
  4212   0014FC  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4213                           
  4214                           ;colour_identify.c: 31:         *green_read = color_read_Green();
  4215   001500  EC90  F010         	call	_color_read_Green	;wreg free
  4216   001504  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4217   001508  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4218   00150C  C005  FFDE         	movff	?_color_read_Green,postinc2
  4219   001510  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4220                           
  4221                           ;colour_identify.c: 32:         *blue_read = color_read_Blue();
  4222   001514  ECB8  F010         	call	_color_read_Blue	;wreg free
  4223   001518  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4224   00151C  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4225   001520  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4226   001524  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4227   001528                     
  4228                           ;colour_identify.c: 33:     }
  4229   001528  4A16               	infsnz	collect_avg_readings@i^0,f,c
  4230   00152A  2A17               	incf	(collect_avg_readings@i+1)^0,f,c
  4231   00152C  BE17               	btfsc	(collect_avg_readings@i+1)^0,7,c
  4232   00152E  EFA2  F00A         	goto	u1231
  4233   001532  0EF5               	movlw	245
  4234   001534  5C16               	subwf	collect_avg_readings@i^0,w,c
  4235   001536  0E01               	movlw	1
  4236   001538  5817               	subwfb	(collect_avg_readings@i+1)^0,w,c
  4237   00153A  A0D8               	btfss	status,0,c
  4238   00153C  EFA2  F00A         	goto	u1231
  4239   001540  EFA4  F00A         	goto	u1230
  4240   001544                     u1231:
  4241   001544  EF76  F00A         	goto	l2433
  4242   001548                     u1230:
  4243   001548                     
  4244                           ;colour_identify.c: 35:     for(int i = 0; i <= 2; i++){
  4245   001548  0E00               	movlw	0
  4246   00154A  6E19               	movwf	(collect_avg_readings@i_1553+1)^0,c
  4247   00154C  0E00               	movlw	0
  4248   00154E  6E18               	movwf	collect_avg_readings@i_1553^0,c
  4249   001550                     l2445:
  4250                           
  4251                           ;colour_identify.c: 36:         *red_read += color_read_Red();
  4252   001550  EC68  F010         	call	_color_read_Red	;wreg free
  4253   001554  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4254   001558  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4255   00155C  5005               	movf	?_color_read_Red^0,w,c
  4256   00155E  26DE               	addwf	postinc2,f,c
  4257   001560  5006               	movf	(?_color_read_Red+1)^0,w,c
  4258   001562  22DD               	addwfc	postdec2,f,c
  4259   001564                     
  4260                           ;colour_identify.c: 37:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4261   001564  0E11               	movlw	17
  4262   001566  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4263   001568  0E3C               	movlw	60
  4264   00156A  6E14               	movwf	??_collect_avg_readings^0,c
  4265   00156C  0ECB               	movlw	203
  4266   00156E                     u1497:
  4267   00156E  2EE8               	decfsz	wreg,f,c
  4268   001570  D7FE               	bra	u1497
  4269   001572  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4270   001574  D7FC               	bra	u1497
  4271   001576  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4272   001578  D7FA               	bra	u1497
  4273   00157A  F000               	nop	
  4274   00157C                     
  4275                           ;colour_identify.c: 38:     }
  4276   00157C  4A18               	infsnz	collect_avg_readings@i_1553^0,f,c
  4277   00157E  2A19               	incf	(collect_avg_readings@i_1553+1)^0,f,c
  4278   001580  BE19               	btfsc	(collect_avg_readings@i_1553+1)^0,7,c
  4279   001582  EFCC  F00A         	goto	u1241
  4280   001586  5019               	movf	(collect_avg_readings@i_1553+1)^0,w,c
  4281   001588  E109               	bnz	u1240
  4282   00158A  0E03               	movlw	3
  4283   00158C  5C18               	subwf	collect_avg_readings@i_1553^0,w,c
  4284   00158E  A0D8               	btfss	status,0,c
  4285   001590  EFCC  F00A         	goto	u1241
  4286   001594  EFCE  F00A         	goto	u1240
  4287   001598                     u1241:
  4288   001598  EFA8  F00A         	goto	l2445
  4289   00159C                     u1240:
  4290   00159C                     
  4291                           ;colour_identify.c: 39:     *red_read = *red_read/3;
  4292   00159C  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4293   0015A0  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4294   0015A4  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4295   0015A8  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4296   0015AC  0E00               	movlw	0
  4297   0015AE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4298   0015B0  0E03               	movlw	3
  4299   0015B2  6E09               	movwf	___lwdiv@divisor^0,c
  4300   0015B4  ECDC  F00F         	call	___lwdiv	;wreg free
  4301   0015B8  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4302   0015BC  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4303   0015C0  C007  FFDE         	movff	?___lwdiv,postinc2
  4304   0015C4  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4305   0015C8                     
  4306                           ;colour_identify.c: 44:     for(int i = 0; i <= 2; i++){
  4307   0015C8  0E00               	movlw	0
  4308   0015CA  6E1B               	movwf	(collect_avg_readings@i_1554+1)^0,c
  4309   0015CC  0E00               	movlw	0
  4310   0015CE  6E1A               	movwf	collect_avg_readings@i_1554^0,c
  4311   0015D0                     l2461:
  4312                           
  4313                           ;colour_identify.c: 45:         *green_read += color_read_Green();
  4314   0015D0  EC90  F010         	call	_color_read_Green	;wreg free
  4315   0015D4  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4316   0015D8  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4317   0015DC  5005               	movf	?_color_read_Green^0,w,c
  4318   0015DE  26DE               	addwf	postinc2,f,c
  4319   0015E0  5006               	movf	(?_color_read_Green+1)^0,w,c
  4320   0015E2  22DD               	addwfc	postdec2,f,c
  4321   0015E4                     
  4322                           ;colour_identify.c: 46:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4323   0015E4  0E11               	movlw	17
  4324   0015E6  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4325   0015E8  0E3C               	movlw	60
  4326   0015EA  6E14               	movwf	??_collect_avg_readings^0,c
  4327   0015EC  0ECB               	movlw	203
  4328   0015EE                     u1507:
  4329   0015EE  2EE8               	decfsz	wreg,f,c
  4330   0015F0  D7FE               	bra	u1507
  4331   0015F2  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4332   0015F4  D7FC               	bra	u1507
  4333   0015F6  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4334   0015F8  D7FA               	bra	u1507
  4335   0015FA  F000               	nop	
  4336   0015FC                     
  4337                           ;colour_identify.c: 47:     }
  4338   0015FC  4A1A               	infsnz	collect_avg_readings@i_1554^0,f,c
  4339   0015FE  2A1B               	incf	(collect_avg_readings@i_1554+1)^0,f,c
  4340   001600  BE1B               	btfsc	(collect_avg_readings@i_1554+1)^0,7,c
  4341   001602  EF0C  F00B         	goto	u1251
  4342   001606  501B               	movf	(collect_avg_readings@i_1554+1)^0,w,c
  4343   001608  E109               	bnz	u1250
  4344   00160A  0E03               	movlw	3
  4345   00160C  5C1A               	subwf	collect_avg_readings@i_1554^0,w,c
  4346   00160E  A0D8               	btfss	status,0,c
  4347   001610  EF0C  F00B         	goto	u1251
  4348   001614  EF0E  F00B         	goto	u1250
  4349   001618                     u1251:
  4350   001618  EFE8  F00A         	goto	l2461
  4351   00161C                     u1250:
  4352   00161C                     
  4353                           ;colour_identify.c: 48:     *green_read = *green_read/3;
  4354   00161C  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4355   001620  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4356   001624  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4357   001628  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4358   00162C  0E00               	movlw	0
  4359   00162E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4360   001630  0E03               	movlw	3
  4361   001632  6E09               	movwf	___lwdiv@divisor^0,c
  4362   001634  ECDC  F00F         	call	___lwdiv	;wreg free
  4363   001638  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4364   00163C  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4365   001640  C007  FFDE         	movff	?___lwdiv,postinc2
  4366   001644  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4367   001648                     
  4368                           ;colour_identify.c: 53:     for(int i = 0; i <= 2; i++){
  4369   001648  0E00               	movlw	0
  4370   00164A  6E1D               	movwf	(collect_avg_readings@i_1555+1)^0,c
  4371   00164C  0E00               	movlw	0
  4372   00164E  6E1C               	movwf	collect_avg_readings@i_1555^0,c
  4373   001650                     l2477:
  4374                           
  4375                           ;colour_identify.c: 54:         *blue_read += color_read_Blue();
  4376   001650  ECB8  F010         	call	_color_read_Blue	;wreg free
  4377   001654  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4378   001658  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4379   00165C  5005               	movf	?_color_read_Blue^0,w,c
  4380   00165E  26DE               	addwf	postinc2,f,c
  4381   001660  5006               	movf	(?_color_read_Blue+1)^0,w,c
  4382   001662  22DD               	addwfc	postdec2,f,c
  4383   001664                     
  4384                           ;colour_identify.c: 55:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4385   001664  0E11               	movlw	17
  4386   001666  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4387   001668  0E3C               	movlw	60
  4388   00166A  6E14               	movwf	??_collect_avg_readings^0,c
  4389   00166C  0ECB               	movlw	203
  4390   00166E                     u1517:
  4391   00166E  2EE8               	decfsz	wreg,f,c
  4392   001670  D7FE               	bra	u1517
  4393   001672  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4394   001674  D7FC               	bra	u1517
  4395   001676  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4396   001678  D7FA               	bra	u1517
  4397   00167A  F000               	nop	
  4398   00167C                     
  4399                           ;colour_identify.c: 56:     }
  4400   00167C  4A1C               	infsnz	collect_avg_readings@i_1555^0,f,c
  4401   00167E  2A1D               	incf	(collect_avg_readings@i_1555+1)^0,f,c
  4402   001680  BE1D               	btfsc	(collect_avg_readings@i_1555+1)^0,7,c
  4403   001682  EF4C  F00B         	goto	u1261
  4404   001686  501D               	movf	(collect_avg_readings@i_1555+1)^0,w,c
  4405   001688  E109               	bnz	u1260
  4406   00168A  0E03               	movlw	3
  4407   00168C  5C1C               	subwf	collect_avg_readings@i_1555^0,w,c
  4408   00168E  A0D8               	btfss	status,0,c
  4409   001690  EF4C  F00B         	goto	u1261
  4410   001694  EF4E  F00B         	goto	u1260
  4411   001698                     u1261:
  4412   001698  EF28  F00B         	goto	l2477
  4413   00169C                     u1260:
  4414   00169C                     
  4415                           ;colour_identify.c: 57:     *blue_read = *blue_read/3;
  4416   00169C  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4417   0016A0  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4418   0016A4  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4419   0016A8  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4420   0016AC  0E00               	movlw	0
  4421   0016AE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4422   0016B0  0E03               	movlw	3
  4423   0016B2  6E09               	movwf	___lwdiv@divisor^0,c
  4424   0016B4  ECDC  F00F         	call	___lwdiv	;wreg free
  4425   0016B8  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4426   0016BC  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4427   0016C0  C007  FFDE         	movff	?___lwdiv,postinc2
  4428   0016C4  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4429   0016C8  0012               	return		;funcret
  4430   0016CA                     __end_of_collect_avg_readings:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _color_read_Red *****************
  4434 ;; Defined at:
  4435 ;;		line 29 in file "color.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  tmp             2    9[COMRAM] unsigned int 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  2    4[COMRAM] unsigned int 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;Total ram usage:        7 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 2
  4456 ;; This function calls:
  4457 ;;		_I2C_2_Master_Read
  4458 ;;		_I2C_2_Master_RepStart
  4459 ;;		_I2C_2_Master_Start
  4460 ;;		_I2C_2_Master_Stop
  4461 ;;		_I2C_2_Master_Write
  4462 ;; This function is called by:
  4463 ;;		_collect_avg_readings
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text25
  4468   0020D0                     __ptext25:
  4469                           	callstack 0
  4470   0020D0                     _color_read_Red:
  4471                           	callstack 27
  4472   0020D0                     
  4473                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  4474   0020D0  EC0E  F012         	call	_I2C_2_Master_Start	;wreg free
  4475                           
  4476                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  4477   0020D4  0E52               	movlw	82
  4478   0020D6  EC03  F012         	call	_I2C_2_Master_Write
  4479                           
  4480                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  4481   0020DA  0EB6               	movlw	182
  4482   0020DC  EC03  F012         	call	_I2C_2_Master_Write
  4483                           
  4484                           ;color.c: 35:  I2C_2_Master_RepStart();
  4485   0020E0  EC13  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4486                           
  4487                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  4488   0020E4  0E53               	movlw	83
  4489   0020E6  EC03  F012         	call	_I2C_2_Master_Write
  4490                           
  4491                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  4492   0020EA  0E01               	movlw	1
  4493   0020EC  EC02  F011         	call	_I2C_2_Master_Read
  4494   0020F0  6E07               	movwf	??_color_read_Red^0,c
  4495   0020F2  5007               	movf	??_color_read_Red^0,w,c
  4496   0020F4  6E0A               	movwf	color_read_Red@tmp^0,c
  4497   0020F6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4498                           
  4499                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4500   0020F8  0E00               	movlw	0
  4501   0020FA  EC02  F011         	call	_I2C_2_Master_Read
  4502   0020FE  6E07               	movwf	??_color_read_Red^0,c
  4503   002100  5007               	movf	??_color_read_Red^0,w,c
  4504   002102  6E09               	movwf	(??_color_read_Red+2)^0,c
  4505   002104  6A08               	clrf	(??_color_read_Red+1)^0,c
  4506   002106  500A               	movf	color_read_Red@tmp^0,w,c
  4507   002108  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4508   00210A  6E0A               	movwf	color_read_Red@tmp^0,c
  4509   00210C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4510   00210E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4511   002110  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4512                           
  4513                           ;color.c: 39:  I2C_2_Master_Stop();
  4514   002112  EC09  F012         	call	_I2C_2_Master_Stop	;wreg free
  4515   002116                     
  4516                           ;color.c: 40:  return tmp;
  4517   002116  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4518   00211A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4519   00211E  0012               	return		;funcret
  4520   002120                     __end_of_color_read_Red:
  4521                           	callstack 0
  4522                           
  4523 ;; *************** function _color_read_Green *****************
  4524 ;; Defined at:
  4525 ;;		line 43 in file "color.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  tmp             2    9[COMRAM] unsigned int 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2    4[COMRAM] unsigned int 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;Total ram usage:        7 bytes
  4544 ;; Hardware stack levels used: 1
  4545 ;; Hardware stack levels required when called: 2
  4546 ;; This function calls:
  4547 ;;		_I2C_2_Master_Read
  4548 ;;		_I2C_2_Master_RepStart
  4549 ;;		_I2C_2_Master_Start
  4550 ;;		_I2C_2_Master_Stop
  4551 ;;		_I2C_2_Master_Write
  4552 ;; This function is called by:
  4553 ;;		_collect_avg_readings
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text26
  4558   002120                     __ptext26:
  4559                           	callstack 0
  4560   002120                     _color_read_Green:
  4561                           	callstack 27
  4562   002120                     
  4563                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  4564   002120  EC0E  F012         	call	_I2C_2_Master_Start	;wreg free
  4565                           
  4566                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  4567   002124  0E52               	movlw	82
  4568   002126  EC03  F012         	call	_I2C_2_Master_Write
  4569                           
  4570                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  4571   00212A  0EB8               	movlw	184
  4572   00212C  EC03  F012         	call	_I2C_2_Master_Write
  4573                           
  4574                           ;color.c: 49:  I2C_2_Master_RepStart();
  4575   002130  EC13  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4576                           
  4577                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  4578   002134  0E53               	movlw	83
  4579   002136  EC03  F012         	call	_I2C_2_Master_Write
  4580                           
  4581                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  4582   00213A  0E01               	movlw	1
  4583   00213C  EC02  F011         	call	_I2C_2_Master_Read
  4584   002140  6E07               	movwf	??_color_read_Green^0,c
  4585   002142  5007               	movf	??_color_read_Green^0,w,c
  4586   002144  6E0A               	movwf	color_read_Green@tmp^0,c
  4587   002146  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4588                           
  4589                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4590   002148  0E00               	movlw	0
  4591   00214A  EC02  F011         	call	_I2C_2_Master_Read
  4592   00214E  6E07               	movwf	??_color_read_Green^0,c
  4593   002150  5007               	movf	??_color_read_Green^0,w,c
  4594   002152  6E09               	movwf	(??_color_read_Green+2)^0,c
  4595   002154  6A08               	clrf	(??_color_read_Green+1)^0,c
  4596   002156  500A               	movf	color_read_Green@tmp^0,w,c
  4597   002158  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4598   00215A  6E0A               	movwf	color_read_Green@tmp^0,c
  4599   00215C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4600   00215E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4601   002160  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4602                           
  4603                           ;color.c: 53:  I2C_2_Master_Stop();
  4604   002162  EC09  F012         	call	_I2C_2_Master_Stop	;wreg free
  4605   002166                     
  4606                           ;color.c: 54:  return tmp;
  4607   002166  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4608   00216A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4609   00216E  0012               	return		;funcret
  4610   002170                     __end_of_color_read_Green:
  4611                           	callstack 0
  4612                           
  4613 ;; *************** function _color_read_Blue *****************
  4614 ;; Defined at:
  4615 ;;		line 57 in file "color.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  tmp             2    9[COMRAM] unsigned int 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  2    4[COMRAM] unsigned int 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;Total ram usage:        7 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 2
  4636 ;; This function calls:
  4637 ;;		_I2C_2_Master_Read
  4638 ;;		_I2C_2_Master_RepStart
  4639 ;;		_I2C_2_Master_Start
  4640 ;;		_I2C_2_Master_Stop
  4641 ;;		_I2C_2_Master_Write
  4642 ;; This function is called by:
  4643 ;;		_collect_avg_readings
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text27
  4648   002170                     __ptext27:
  4649                           	callstack 0
  4650   002170                     _color_read_Blue:
  4651                           	callstack 27
  4652   002170                     
  4653                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  4654   002170  EC0E  F012         	call	_I2C_2_Master_Start	;wreg free
  4655                           
  4656                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  4657   002174  0E52               	movlw	82
  4658   002176  EC03  F012         	call	_I2C_2_Master_Write
  4659                           
  4660                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  4661   00217A  0EBA               	movlw	186
  4662   00217C  EC03  F012         	call	_I2C_2_Master_Write
  4663                           
  4664                           ;color.c: 63:  I2C_2_Master_RepStart();
  4665   002180  EC13  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4666                           
  4667                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  4668   002184  0E53               	movlw	83
  4669   002186  EC03  F012         	call	_I2C_2_Master_Write
  4670                           
  4671                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  4672   00218A  0E01               	movlw	1
  4673   00218C  EC02  F011         	call	_I2C_2_Master_Read
  4674   002190  6E07               	movwf	??_color_read_Blue^0,c
  4675   002192  5007               	movf	??_color_read_Blue^0,w,c
  4676   002194  6E0A               	movwf	color_read_Blue@tmp^0,c
  4677   002196  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4678                           
  4679                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4680   002198  0E00               	movlw	0
  4681   00219A  EC02  F011         	call	_I2C_2_Master_Read
  4682   00219E  6E07               	movwf	??_color_read_Blue^0,c
  4683   0021A0  5007               	movf	??_color_read_Blue^0,w,c
  4684   0021A2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4685   0021A4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4686   0021A6  500A               	movf	color_read_Blue@tmp^0,w,c
  4687   0021A8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4688   0021AA  6E0A               	movwf	color_read_Blue@tmp^0,c
  4689   0021AC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4690   0021AE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4691   0021B0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4692                           
  4693                           ;color.c: 67:  I2C_2_Master_Stop();
  4694   0021B2  EC09  F012         	call	_I2C_2_Master_Stop	;wreg free
  4695   0021B6                     
  4696                           ;color.c: 68:  return tmp;
  4697   0021B6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4698   0021BA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4699   0021BE  0012               	return		;funcret
  4700   0021C0                     __end_of_color_read_Blue:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _I2C_2_Master_Write *****************
  4704 ;; Defined at:
  4705 ;;		line 45 in file "i2c.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  data_byte       1    wreg     unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  data_byte       1    1[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2, status,0, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;Total ram usage:        1 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 1
  4726 ;; This function calls:
  4727 ;;		_I2C_2_Master_Idle
  4728 ;; This function is called by:
  4729 ;;		_color_writetoaddr
  4730 ;;		_color_read_Red
  4731 ;;		_color_read_Green
  4732 ;;		_color_read_Blue
  4733 ;;		_color_read_Clear
  4734 ;;		_read_interrupt_status
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text28
  4739   002406                     __ptext28:
  4740                           	callstack 0
  4741   002406                     _I2C_2_Master_Write:
  4742                           	callstack 27
  4743                           
  4744                           ;incstack = 0
  4745                           ;I2C_2_Master_Write@data_byte stored from wreg
  4746   002406  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4747   002408                     
  4748                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4749   002408  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4750   00240C                     
  4751                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4752   00240C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4753   002410  0012               	return		;funcret
  4754   002412                     __end_of_I2C_2_Master_Write:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _I2C_2_Master_Stop *****************
  4758 ;; Defined at:
  4759 ;;		line 39 in file "i2c.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;		None
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;Total ram usage:        0 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 1
  4780 ;; This function calls:
  4781 ;;		_I2C_2_Master_Idle
  4782 ;; This function is called by:
  4783 ;;		_color_writetoaddr
  4784 ;;		_color_read_Red
  4785 ;;		_color_read_Green
  4786 ;;		_color_read_Blue
  4787 ;;		_color_read_Clear
  4788 ;;		_read_interrupt_status
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text29
  4793   002412                     __ptext29:
  4794                           	callstack 0
  4795   002412                     _I2C_2_Master_Stop:
  4796                           	callstack 27
  4797   002412                     
  4798                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4799   002412  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4800   002416                     
  4801                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4802   002416  010E               	movlb	14	; () banked
  4803   002418  85DA               	bsf	218,2,b	;volatile
  4804   00241A                     
  4805                           ; BSR set to: 14
  4806   00241A  0012               	return		;funcret
  4807   00241C                     __end_of_I2C_2_Master_Stop:
  4808                           	callstack 0
  4809                           
  4810 ;; *************** function _I2C_2_Master_Start *****************
  4811 ;; Defined at:
  4812 ;;		line 27 in file "i2c.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used: 1
  4832 ;; Hardware stack levels required when called: 1
  4833 ;; This function calls:
  4834 ;;		_I2C_2_Master_Idle
  4835 ;; This function is called by:
  4836 ;;		_color_writetoaddr
  4837 ;;		_color_read_Red
  4838 ;;		_color_read_Green
  4839 ;;		_color_read_Blue
  4840 ;;		_color_read_Clear
  4841 ;;		_read_interrupt_status
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text30
  4846   00241C                     __ptext30:
  4847                           	callstack 0
  4848   00241C                     _I2C_2_Master_Start:
  4849                           	callstack 27
  4850   00241C                     
  4851                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4852   00241C  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4853   002420                     
  4854                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4855   002420  010E               	movlb	14	; () banked
  4856   002422  81DA               	bsf	218,0,b	;volatile
  4857   002424                     
  4858                           ; BSR set to: 14
  4859   002424  0012               	return		;funcret
  4860   002426                     __end_of_I2C_2_Master_Start:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _I2C_2_Master_RepStart *****************
  4864 ;; Defined at:
  4865 ;;		line 33 in file "i2c.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 1
  4886 ;; This function calls:
  4887 ;;		_I2C_2_Master_Idle
  4888 ;; This function is called by:
  4889 ;;		_color_read_Red
  4890 ;;		_color_read_Green
  4891 ;;		_color_read_Blue
  4892 ;;		_color_read_Clear
  4893 ;;		_read_interrupt_status
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text31
  4898   002426                     __ptext31:
  4899                           	callstack 0
  4900   002426                     _I2C_2_Master_RepStart:
  4901                           	callstack 27
  4902   002426                     
  4903                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4904   002426  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4905   00242A                     
  4906                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4907   00242A  010E               	movlb	14	; () banked
  4908   00242C  83DA               	bsf	218,1,b	;volatile
  4909   00242E                     
  4910                           ; BSR set to: 14
  4911   00242E  0012               	return		;funcret
  4912   002430                     __end_of_I2C_2_Master_RepStart:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _I2C_2_Master_Read *****************
  4916 ;; Defined at:
  4917 ;;		line 51 in file "i2c.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  ack             1    wreg     unsigned char 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  ack             1    2[COMRAM] unsigned char 
  4922 ;;  tmp             1    3[COMRAM] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      unsigned char 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4936 ;;Total ram usage:        3 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 1
  4939 ;; This function calls:
  4940 ;;		_I2C_2_Master_Idle
  4941 ;; This function is called by:
  4942 ;;		_color_read_Red
  4943 ;;		_color_read_Green
  4944 ;;		_color_read_Blue
  4945 ;;		_color_read_Clear
  4946 ;;		_read_interrupt_status
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text32
  4951   002204                     __ptext32:
  4952                           	callstack 0
  4953   002204                     _I2C_2_Master_Read:
  4954                           	callstack 27
  4955                           
  4956                           ; BSR set to: 14
  4957                           ;incstack = 0
  4958                           ;I2C_2_Master_Read@ack stored from wreg
  4959   002204  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4960   002206                     
  4961                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4962   002206  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4963   00220A                     
  4964                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4965   00220A  010E               	movlb	14	; () banked
  4966   00220C  87DA               	bsf	218,3,b	;volatile
  4967                           
  4968                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4969   00220E  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4970   002212                     
  4971                           ;i2c.c: 57:   tmp = SSP2BUF;
  4972   002212  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4973                           
  4974                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4975   002216  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4976   00221A                     
  4977                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4978   00221A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4979   00221C  B4D8               	btfsc	status,2,c
  4980   00221E  EF13  F011         	goto	u1061
  4981   002222  EF17  F011         	goto	u1060
  4982   002226                     u1061:
  4983   002226  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4984   002228  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4985   00222A  EF18  F011         	goto	u1078
  4986   00222E                     u1060:
  4987   00222E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4988   002230                     u1078:
  4989   002230  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4990   002232  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4991   002234  010E               	movlb	14	; () banked
  4992   002236  51DA               	movf	218,w,b	;volatile
  4993   002238  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4994   00223A  0BDF               	andlw	-33
  4995   00223C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4996   00223E  6FDA               	movwf	218,b	;volatile
  4997   002240                     
  4998                           ; BSR set to: 14
  4999                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5000   002240  89DA               	bsf	218,4,b	;volatile
  5001   002242                     
  5002                           ; BSR set to: 14
  5003                           ;i2c.c: 61:   return tmp;
  5004   002242  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5005   002244                     
  5006                           ; BSR set to: 14
  5007   002244  0012               	return		;funcret
  5008   002246                     __end_of_I2C_2_Master_Read:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function _I2C_2_Master_Idle *****************
  5012 ;; Defined at:
  5013 ;;		line 22 in file "i2c.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;Total ram usage:        1 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_I2C_2_Master_Start
  5037 ;;		_I2C_2_Master_RepStart
  5038 ;;		_I2C_2_Master_Stop
  5039 ;;		_I2C_2_Master_Write
  5040 ;;		_I2C_2_Master_Read
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text33
  5045   00233E                     __ptext33:
  5046                           	callstack 0
  5047   00233E                     _I2C_2_Master_Idle:
  5048                           	callstack 27
  5049   00233E                     l154:
  5050   00233E  010E               	movlb	14	; () banked
  5051   002340  B5D8               	btfsc	216,2,b	;volatile
  5052   002342  EFA5  F011         	goto	u941
  5053   002346  EFA7  F011         	goto	u940
  5054   00234A                     u941:
  5055   00234A  EF9F  F011         	goto	l154
  5056   00234E                     u940:
  5057   00234E                     
  5058                           ; BSR set to: 14
  5059   00234E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5060   002352  0E1F               	movlw	31
  5061   002354  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  5062   002356  A4D8               	btfss	status,2,c
  5063   002358  EFB0  F011         	goto	u951
  5064   00235C  EFB2  F011         	goto	u950
  5065   002360                     u951:
  5066   002360  EF9F  F011         	goto	l154
  5067   002364                     u950:
  5068   002364                     
  5069                           ; BSR set to: 14
  5070   002364  0012               	return		;funcret
  5071   002366                     __end_of_I2C_2_Master_Idle:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function ___lwdiv *****************
  5075 ;; Defined at:
  5076 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  dividend        2    6[COMRAM] unsigned int 
  5079 ;;  divisor         2    8[COMRAM] unsigned int 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  quotient        2   10[COMRAM] unsigned int 
  5082 ;;  counter         1   12[COMRAM] unsigned char 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  2    6[COMRAM] unsigned int 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5092 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5093 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5095 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5096 ;;Total ram usage:        7 bytes
  5097 ;; Hardware stack levels used: 1
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_setMotorPWM
  5102 ;;		_collect_avg_readings
  5103 ;;		_normalise_readings
  5104 ;;		_make_master_closeness
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text34
  5109   001FB8                     __ptext34:
  5110                           	callstack 0
  5111   001FB8                     ___lwdiv:
  5112                           	callstack 29
  5113   001FB8  0E00               	movlw	0
  5114   001FBA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  5115   001FBC  0E00               	movlw	0
  5116   001FBE  6E0B               	movwf	___lwdiv@quotient^0,c
  5117   001FC0  5009               	movf	___lwdiv@divisor^0,w,c
  5118   001FC2  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5119   001FC4  B4D8               	btfsc	status,2,c
  5120   001FC6  EFE7  F00F         	goto	u1121
  5121   001FCA  EFE9  F00F         	goto	u1120
  5122   001FCE                     u1121:
  5123   001FCE  EF11  F010         	goto	l918
  5124   001FD2                     u1120:
  5125   001FD2  0E01               	movlw	1
  5126   001FD4  6E0D               	movwf	___lwdiv@counter^0,c
  5127   001FD6  EFF1  F00F         	goto	l2275
  5128   001FDA                     l2273:
  5129   001FDA  90D8               	bcf	status,0,c
  5130   001FDC  3609               	rlcf	___lwdiv@divisor^0,f,c
  5131   001FDE  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5132   001FE0  2A0D               	incf	___lwdiv@counter^0,f,c
  5133   001FE2                     l2275:
  5134   001FE2  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  5135   001FE4  EFF6  F00F         	goto	u1131
  5136   001FE8  EFF8  F00F         	goto	u1130
  5137   001FEC                     u1131:
  5138   001FEC  EFED  F00F         	goto	l2273
  5139   001FF0                     u1130:
  5140   001FF0                     l2277:
  5141   001FF0  90D8               	bcf	status,0,c
  5142   001FF2  360B               	rlcf	___lwdiv@quotient^0,f,c
  5143   001FF4  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5144   001FF6  5009               	movf	___lwdiv@divisor^0,w,c
  5145   001FF8  5C07               	subwf	___lwdiv@dividend^0,w,c
  5146   001FFA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5147   001FFC  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5148   001FFE  A0D8               	btfss	status,0,c
  5149   002000  EF04  F010         	goto	u1141
  5150   002004  EF06  F010         	goto	u1140
  5151   002008                     u1141:
  5152   002008  EF0B  F010         	goto	l2285
  5153   00200C                     u1140:
  5154   00200C  5009               	movf	___lwdiv@divisor^0,w,c
  5155   00200E  5E07               	subwf	___lwdiv@dividend^0,f,c
  5156   002010  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5157   002012  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5158   002014  800B               	bsf	___lwdiv@quotient^0,0,c
  5159   002016                     l2285:
  5160   002016  90D8               	bcf	status,0,c
  5161   002018  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5162   00201A  3209               	rrcf	___lwdiv@divisor^0,f,c
  5163   00201C  2E0D               	decfsz	___lwdiv@counter^0,f,c
  5164   00201E  EFF8  F00F         	goto	l2277
  5165   002022                     l918:
  5166   002022  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  5167   002026  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5168   00202A  0012               	return		;funcret
  5169   00202C                     __end_of___lwdiv:
  5170                           	callstack 0
  5171                           
  5172 ;; *************** function _LEDSon_init *****************
  5173 ;; Defined at:
  5174 ;;		line 18 in file "LEDsOn.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;		None
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      void 
  5181 ;; Registers used:
  5182 ;;		None
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;Total ram usage:        0 bytes
  5193 ;; Hardware stack levels used: 1
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_main
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text35
  5202   00238C                     __ptext35:
  5203                           	callstack 0
  5204   00238C                     _LEDSon_init:
  5205                           	callstack 30
  5206   00238C                     
  5207                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  5208   00238C  9288               	bcf	136,1,c	;volatile
  5209                           
  5210                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  5211   00238E  9088               	bcf	136,0,c	;volatile
  5212                           
  5213                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  5214   002390  9884               	bcf	132,4,c	;volatile
  5215                           
  5216                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  5217   002392  9684               	bcf	132,3,c	;volatile
  5218                           
  5219                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  5220   002394  9086               	bcf	134,0,c	;volatile
  5221                           
  5222                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  5223   002396  9287               	bcf	135,1,c	;volatile
  5224                           
  5225                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  5226   002398  9E86               	bcf	134,7,c	;volatile
  5227                           
  5228                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  5229   00239A  9881               	bcf	129,4,c	;volatile
  5230                           
  5231                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  5232   00239C  8E7E               	bsf	126,7,c	;volatile
  5233                           
  5234                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  5235   00239E  827F               	bsf	127,1,c	;volatile
  5236                           
  5237                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  5238   0023A0  8879               	bsf	121,4,c	;volatile
  5239                           
  5240                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  5241   0023A2  987C               	bcf	124,4,c	;volatile
  5242                           
  5243                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  5244   0023A4  9280               	bcf	128,1,c	;volatile
  5245                           
  5246                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  5247   0023A6  907E               	bcf	126,0,c	;volatile
  5248                           
  5249                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  5250   0023A8  9080               	bcf	128,0,c	;volatile
  5251                           
  5252                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  5253   0023AA  967C               	bcf	124,3,c	;volatile
  5254   0023AC  0012               	return		;funcret
  5255   0023AE                     __end_of_LEDSon_init:
  5256                           	callstack 0
  5257                           
  5258                           	psect	rparam
  5259   000000                     
  5260                           	psect	idloc
  5261                           
  5262                           ;Config register IDLOC0 @ 0x200000
  5263                           ;	unspecified, using default values
  5264   200000                     	org	2097152
  5265   200000  0FFF               	dw	4095
  5266                           
  5267                           ;Config register IDLOC1 @ 0x200002
  5268                           ;	unspecified, using default values
  5269   200002                     	org	2097154
  5270   200002  0FFF               	dw	4095
  5271                           
  5272                           ;Config register IDLOC2 @ 0x200004
  5273                           ;	unspecified, using default values
  5274   200004                     	org	2097156
  5275   200004  0FFF               	dw	4095
  5276                           
  5277                           ;Config register IDLOC3 @ 0x200006
  5278                           ;	unspecified, using default values
  5279   200006                     	org	2097158
  5280   200006  0FFF               	dw	4095
  5281                           
  5282                           ;Config register IDLOC4 @ 0x200008
  5283                           ;	unspecified, using default values
  5284   200008                     	org	2097160
  5285   200008  0FFF               	dw	4095
  5286                           
  5287                           ;Config register IDLOC5 @ 0x20000A
  5288                           ;	unspecified, using default values
  5289   20000A                     	org	2097162
  5290   20000A  0FFF               	dw	4095
  5291                           
  5292                           ;Config register IDLOC6 @ 0x20000C
  5293                           ;	unspecified, using default values
  5294   20000C                     	org	2097164
  5295   20000C  0FFF               	dw	4095
  5296                           
  5297                           ;Config register IDLOC7 @ 0x20000E
  5298                           ;	unspecified, using default values
  5299   20000E                     	org	2097166
  5300   20000E  0FFF               	dw	4095
  5301                           
  5302                           	psect	config
  5303                           
  5304                           ;Config register CONFIG1L @ 0x300000
  5305                           ;	External Oscillator mode Selection bits
  5306                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5307                           ;	Power-up default value for COSC bits
  5308                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5309   300000                     	org	3145728
  5310   300000  AA                 	db	170
  5311                           
  5312                           ;Config register CONFIG1H @ 0x300001
  5313                           ;	unspecified, using default values
  5314                           ;	Clock Out Enable bit
  5315                           ;	CLKOUTEN = 0x1, unprogrammed default
  5316                           ;	Clock Switch Enable bit
  5317                           ;	CSWEN = 0x1, unprogrammed default
  5318                           ;	Fail-Safe Clock Monitor Enable bit
  5319                           ;	FCMEN = 0x1, unprogrammed default
  5320   300001                     	org	3145729
  5321   300001  FF                 	db	255
  5322                           
  5323                           ;Config register CONFIG2L @ 0x300002
  5324                           ;	unspecified, using default values
  5325                           ;	Master Clear Enable bit
  5326                           ;	MCLRE = 0x1, unprogrammed default
  5327                           ;	Power-up Timer Enable bit
  5328                           ;	PWRTE = 0x1, unprogrammed default
  5329                           ;	Low-power BOR enable bit
  5330                           ;	LPBOREN = 0x1, unprogrammed default
  5331                           ;	Brown-out Reset Enable bits
  5332                           ;	BOREN = 0x3, unprogrammed default
  5333   300002                     	org	3145730
  5334   300002  FF                 	db	255
  5335                           
  5336                           ;Config register CONFIG2H @ 0x300003
  5337                           ;	unspecified, using default values
  5338                           ;	Brown Out Reset Voltage selection bits
  5339                           ;	BORV = 0x3, unprogrammed default
  5340                           ;	ZCD Disable bit
  5341                           ;	ZCD = 0x1, unprogrammed default
  5342                           ;	PPSLOCK bit One-Way Set Enable bit
  5343                           ;	PPS1WAY = 0x1, unprogrammed default
  5344                           ;	Stack Full/Underflow Reset Enable bit
  5345                           ;	STVREN = 0x1, unprogrammed default
  5346                           ;	Debugger Enable bit
  5347                           ;	DEBUG = 0x1, unprogrammed default
  5348                           ;	Extended Instruction Set Enable bit
  5349                           ;	XINST = 0x1, unprogrammed default
  5350   300003                     	org	3145731
  5351   300003  FF                 	db	255
  5352                           
  5353                           ;Config register CONFIG3L @ 0x300004
  5354                           ;	WDT Period Select bits
  5355                           ;	WDTCPS = 0x1F, unprogrammed default
  5356                           ;	WDT operating mode
  5357                           ;	WDTE = OFF, WDT Disabled
  5358   300004                     	org	3145732
  5359   300004  9F                 	db	159
  5360                           
  5361                           ;Config register CONFIG3H @ 0x300005
  5362                           ;	unspecified, using default values
  5363                           ;	WDT Window Select bits
  5364                           ;	WDTCWS = 0x7, unprogrammed default
  5365                           ;	WDT input clock selector
  5366                           ;	WDTCCS = 0x7, unprogrammed default
  5367   300005                     	org	3145733
  5368   300005  FF                 	db	255
  5369                           
  5370                           ;Config register CONFIG4L @ 0x300006
  5371                           ;	unspecified, using default values
  5372                           ;	Write Protection Block 0
  5373                           ;	WRT0 = 0x1, unprogrammed default
  5374                           ;	Write Protection Block 1
  5375                           ;	WRT1 = 0x1, unprogrammed default
  5376                           ;	Write Protection Block 2
  5377                           ;	WRT2 = 0x1, unprogrammed default
  5378                           ;	Write Protection Block 3
  5379                           ;	WRT3 = 0x1, unprogrammed default
  5380                           ;	Write Protection Block 3
  5381                           ;	WRT4 = 0x1, unprogrammed default
  5382                           ;	Write Protection Block 3
  5383                           ;	WRT5 = 0x1, unprogrammed default
  5384                           ;	Write Protection Block 3
  5385                           ;	WRT6 = 0x1, unprogrammed default
  5386                           ;	Write Protection Block 3
  5387                           ;	WRT7 = 0x1, unprogrammed default
  5388   300006                     	org	3145734
  5389   300006  FF                 	db	255
  5390                           
  5391                           ;Config register CONFIG4H @ 0x300007
  5392                           ;	unspecified, using default values
  5393                           ;	Configuration Register Write Protection bit
  5394                           ;	WRTC = 0x1, unprogrammed default
  5395                           ;	Boot Block Write Protection bit
  5396                           ;	WRTB = 0x1, unprogrammed default
  5397                           ;	Data EEPROM Write Protection bit
  5398                           ;	WRTD = 0x1, unprogrammed default
  5399                           ;	Scanner Enable bit
  5400                           ;	SCANE = 0x1, unprogrammed default
  5401                           ;	Low Voltage Programming Enable bit
  5402                           ;	LVP = 0x1, unprogrammed default
  5403   300007                     	org	3145735
  5404   300007  FF                 	db	255
  5405                           
  5406                           ;Config register CONFIG5L @ 0x300008
  5407                           ;	unspecified, using default values
  5408                           ;	UserNVM Program Memory Code Protection bit
  5409                           ;	CP = 0x1, unprogrammed default
  5410                           ;	DataNVM Memory Code Protection bit
  5411                           ;	CPD = 0x1, unprogrammed default
  5412   300008                     	org	3145736
  5413   300008  FF                 	db	255
  5414                           
  5415                           ;Config register CONFIG5H @ 0x300009
  5416                           ;	unspecified, using default values
  5417   300009                     	org	3145737
  5418   300009  FF                 	db	255
  5419                           
  5420                           ;Config register CONFIG6L @ 0x30000A
  5421                           ;	unspecified, using default values
  5422                           ;	Table Read Protection Block 0
  5423                           ;	EBTR0 = 0x1, unprogrammed default
  5424                           ;	Table Read Protection Block 1
  5425                           ;	EBTR1 = 0x1, unprogrammed default
  5426                           ;	Table Read Protection Block 2
  5427                           ;	EBTR2 = 0x1, unprogrammed default
  5428                           ;	Table Read Protection Block 3
  5429                           ;	EBTR3 = 0x1, unprogrammed default
  5430                           ;	Table Read Protection Block 4
  5431                           ;	EBTR4 = 0x1, unprogrammed default
  5432                           ;	Table Read Protection Block 5
  5433                           ;	EBTR5 = 0x1, unprogrammed default
  5434                           ;	Table Read Protection Block 6
  5435                           ;	EBTR6 = 0x1, unprogrammed default
  5436                           ;	Table Read Protection Block 7
  5437                           ;	EBTR7 = 0x1, unprogrammed default
  5438   30000A                     	org	3145738
  5439   30000A  FF                 	db	255
  5440                           
  5441                           ;Config register CONFIG6H @ 0x30000B
  5442                           ;	unspecified, using default values
  5443                           ;	Boot Block Table Read Protection bit
  5444                           ;	EBTRB = 0x1, unprogrammed default
  5445   30000B                     	org	3145739
  5446   30000B  FF                 	db	255
  5447                           tosu	equ	0xFFF
  5448                           tosh	equ	0xFFE
  5449                           tosl	equ	0xFFD
  5450                           stkptr	equ	0xFFC
  5451                           pclatu	equ	0xFFB
  5452                           pclath	equ	0xFFA
  5453                           pcl	equ	0xFF9
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           indf0	equ	0xFEF
  5461                           postinc0	equ	0xFEE
  5462                           postdec0	equ	0xFED
  5463                           preinc0	equ	0xFEC
  5464                           plusw0	equ	0xFEB
  5465                           fsr0h	equ	0xFEA
  5466                           fsr0l	equ	0xFE9
  5467                           wreg	equ	0xFE8
  5468                           indf1	equ	0xFE7
  5469                           postinc1	equ	0xFE6
  5470                           postdec1	equ	0xFE5
  5471                           preinc1	equ	0xFE4
  5472                           plusw1	equ	0xFE3
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           bsr	equ	0xFE0
  5476                           indf2	equ	0xFDF
  5477                           postinc2	equ	0xFDE
  5478                           postdec2	equ	0xFDD
  5479                           preinc2	equ	0xFDC
  5480                           plusw2	equ	0xFDB
  5481                           fsr2h	equ	0xFDA
  5482                           fsr2l	equ	0xFD9
  5483                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    155     159
    BANK1           256    168     224
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    make_master_closeness@buf	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    normalise_readings@buf	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2251$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2202$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2202$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    determine_card@master_closeness	PTR unsigned int  size(2) Largest target is 18
		 -> main@master_closeness(BANK0[18]), 

    make_master_closeness@normalised_values	PTR unsigned int [9] size(2) Largest target is 54
		 -> main@normalised_values(BANK0[54]), 

    make_master_closeness@master_closeness	PTR unsigned int  size(2) Largest target is 18
		 -> main@master_closeness(BANK0[18]), 

    normalise_readings@normalised_values	PTR unsigned int [9] size(2) Largest target is 54
		 -> main@normalised_values(BANK0[54]), 

    normalise_readings@expected_values	PTR unsigned int [9] size(2) Largest target is 54
		 -> main@expected_values(BANK0[54]), 

    collect_avg_readings@blue_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@blue_read(BANK0[2]), 

    collect_avg_readings@green_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@green_read(BANK0[2]), 

    collect_avg_readings@red_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@red_read(BANK0[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    S532DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    S532DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _setMotorPWM->___lwdiv
    _sendStringSerial4->_sendCharSerial4
    _normalise_readings->_abs
    _abs->___aomod
    _make_master_closeness->___lwdiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _collect_avg_readings->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               306   306      0   18566
                                             88 COMRAM     6     6      0
                                             23 BANK0    132   132      0
                                              0 BANK1    168   168      0
                  _I2C_2_Master_Init
                        _LEDSon_init
               _collect_avg_readings
                   _color_click_init
                     _determine_card
                    _initDCmotorsPWM
                         _initUSART4
              _make_master_closeness
                 _normalise_readings
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    5950
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5447
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    5097
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3877
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3285
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _normalise_readings                                  23    11     12    3420
                                             22 COMRAM    23    11     12
                            ___lwdiv
                             ___wmul
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     370
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _make_master_closeness                               27    21      6    1656
                                             13 COMRAM    27    21      6
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _determine_card                                      10     8      2     302
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     598
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     598
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _collect_avg_readings                                16    10      6    2221
                                             13 COMRAM    16    10      6
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1206
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _collect_avg_readings
     ___lwdiv
       ___wmul (ARG)
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_card
   _initDCmotorsPWM
   _initUSART4
   _make_master_closeness
     ___lwdiv
   _normalise_readings
     ___lwdiv
     ___wmul
     _abs
       ___aomod (ARG)
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A8      E0       7       87.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllhhhl     37      0       0      43        0.0%
BITBIGSFRllllhl     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllhhhl     20      0       0      46        0.0%
BITBIGSFRllhhhl     1E      0       0      48        0.0%
BITBIGSFRhhlllh     17      0       0      36        0.0%
BITBIGSFRllhhl      11      0       0      49        0.0%
BITBIGSFRllllhl      F      0       0      56        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllhhhl      C      0       0      47        0.0%
BITBIGSFRllllhl      9      0       0      55        0.0%
BITBIGSFRllhhhl      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      57        0.0%
BITBIGSFRllllhh      6      0       0      53        0.0%
BITBIGSFRlllhl       5      0       0      52        0.0%
BITBIGSFRhhllll      5      0       0      37        0.0%
BITBIGSFRlllhh       3      0       0      51        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllhhhl      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllhl        1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21A      59        0.0%
DATA                 0      0     21A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 12:10:37 2022

                        _color_read_Red 20D0                         _color_read_Blue 2170  
                                    l22 23EC                                      l31 21BE  
                                    l25 211E                                      l19 22B8  
                                    l28 216E                                      l95 19BC  
                                    l88 1EBC                     ___wmul@multiplicand 0003  
                      _color_read_Green 2120                                     l310 16C8  
                                   l151 233C                                     l160 2424  
                                   l320 1D6A                                     l241 13F0  
                                   l154 233E                                     l242 13EC  
                                   l163 242E                                     l315 12E0  
                                   l243 13FE                                     l172 2244  
                                   l157 2364                                     l166 241A  
                                   l326 1F3C                                     l238 1386  
                                   l239 13AE                                     l169 2410  
                                   l427 238A                                     l269 23AC  
                                   l541 1850                                     l374 23CC  
                                   l383 23F0                                     l392 22E8  
                                   l386 2404                                     l554 1B20  
                                   l925 202A                                     l918 2022  
                                   u800 170E                                     u801 170A  
                                   u730 1D7E                                     u811 1738  
                                   u731 1D7A                                     u820 175C  
                                   u900 1A98                                     u740 1D90  
                                   u821 1758                                     u901 1A94  
                                   u741 1D8C                                     u830 1786  
                                   u910 1AE0                                     u750 1DB8  
                                   u831 1782                                     u911 1ADC  
                                   u751 1DB4                                     u840 17C6  
                                   u760 1DEE                                     u920 1F4C  
                                   u841 17C2                                     u761 1DEA  
                                   u921 1F48                                     u850 1810  
                                   u770 2202                                     u930 1FA2  
                                   u851 180C                                     u771 21FE  
                                   u931 1F9E                                     u940 234E  
                                   u780 2260                                     u860 19D0  
                                   u941 234A                                     u781 225C  
                                   u861 19CC                                     u950 2364  
                                   u790 16DC                                     u870 1A02  
                                   u951 2360                                     u791 16D8  
                                   u871 19FE                                     u880 1A40  
                                   u960 0E56                                     u881 1A3C  
                                   u961 0E50                                     u890 1A6A  
                                   u970 0E58                                     u891 1A66  
                                   u980 0E6A                                     u981 0E66  
                                   u990 0EA6                                     u991 0EA2  
   normalise_readings@normalised_values 0021                                     _abs 2246  
                                   _pad 1F3E                                     wreg 000FE8  
                                  l1102 227C                                    l1112 207C  
                                  l1105 2284                                    l2011 2246  
                                  l2003 21C0                                    ?_abs 0013  
                                  l2013 2260                                    l2021 16FC  
                                  l2005 21CC                                    l2101 1F6C  
                                  l1134 1F60                                    l2111 234E  
                                  l2031 173E                                    l2023 1700  
                                  l2015 16CA                                    l2007 21DE  
                                  l2103 1F80                                    l1143 0EB2  
                                  l2041 1798                                    l2033 175C  
                                  l2025 170E                                    l2017 16CE  
                                  l2009 21E2                                    l2105 1F84  
                                  l1145 0EBA                                    l2121 0E8A  
                                  l2113 0E26                                    l2201 1B66  
                                  l1138 1FB6                                    l1146 0F00  
                                  l1170 20CE                                    l2043 17C6  
                                  l2035 1764                                    l2051 1800  
                                  l2027 172E                                    l2019 16DC  
                                  l2107 1FA2                                    l2131 0EE8  
                                  l2123 0EA6                                    l2115 0E46  
                                  l2211 1C10                                    l2203 1B6A  
                                  l1164 1C7E                                    l2109 233E  
                                  l2301 228A                                    l2053 1810  
                                  l2045 17E6                                    l2037 1778  
                                  l2029 1732                                    l2061 19C2  
                                  l1157 10A0                                    l2141 0F16  
                                  l2133 0EF4                                    l2125 0EC2  
                                  l2117 0E5A                                    l2205 1B7A  
                                  l1182 1E34                                    l1190 2202  
                                  l2231 2326                                    l2303 2294  
                                  l2311 1E3E                                    l2055 1830  
                                  l2047 17E8                                    l2039 1786  
                                  l2071 1A22                                    l2063 19D0  
                                  l2151 1022                                    l2143 0F98  
                                  l2135 0EFC                                    l2127 0ED2  
                                  l2119 0E6A                                    l2215 1C40  
                                  l2207 1B9A                                    l2241 2116  
                                  l2233 2328                                    l2225 2314  
                                  l2305 22A4                                    l2321 1EA2  
                                  l2313 1E68                                    l2049 17FA  
                                  l2081 1A98                                    l2073 1A40  
                                  l2065 19F0                                    l1193 2430  
                                  l2161 1080                                    l2153 1040  
                                  l2145 0F9E                                    l2137 0F08  
                                  l2129 0ED8                                    l2209 1BBA  
                                  l2411 238C                                    l2171 240C  
                                  l2251 2170                                    l2235 232A  
                                  l2227 231E                                    l2307 22AE  
                                  l2323 1EA4                                    l2315 1E8C  
                                  l2331 1852                                    l2091 1B00  
                                  l2083 1AB8                                    l2075 1A48  
                                  l2067 19F4                                    l2059 19BE  
                                  l2155 105A                                    l2147 0FA4  
                                  l2139 0F10                                    l2219 1C52  
                                  l2181 2206                                    l2165 241C  
                                  l2173 2412                                    l2253 21B6  
                                  l2245 2120                                    l2229 2324  
                                  l2237 23D0                                    l2325 1EAE  
                                  l2317 1E96                                    l2309 1E36  
                                  l2421 23C6                                    l2413 23AE  
                                  l2261 2366                                    l2501 22BE  
                                  l2341 191C                                    l2333 186E  
                                  l2085 1ACA                                    l2077 1A5C  
                                  l2069 1A02                                    l2157 106A  
                                  l2149 1008                                    l2271 1FD2  
                                  l2191 2242                                    l2183 220A  
                                  l2167 2420                                    l2175 2416  
                                  l2247 2166                                    l2239 20D0  
                                  l2327 1EB0                                    l2319 1E98  
                                  l2423 23C8                                    l2415 23B8  
                                  l2263 2382                                    l2503 22CC  
                                  l2343 1938                                    l2335 18C2  
                                  l2079 1A6A                                    l2087 1AD0  
                                  l2095 1F3E                                    l2159 1070  
                                  l2281 200C                                    l2273 1FDA  
                                  l2185 2212                                    l2177 2426  
                                  l2169 2408                                    l2433 14EC  
                                  l2329 1EBA                                    l2425 23CA  
                                  l2417 23BA                                    l2521 1C80  
                                  l2513 10A6                                    l2257 23F0  
                                  l2505 22D0                                    l2345 197C  
                                  l2337 18D6                                    l2089 1AE0  
                                  l2097 1F4C                                    l2601 12EA  
                                  l2283 2014                                    l2275 1FE2  
                                  l2267 1FB8                                    l2187 221A  
                                  l2179 242A                                    l2451 1580  
                                  l2435 1528                                    l2427 14E4  
                                  l2419 23BC                                    l2531 1D58  
                                  l2515 12B6                                    l2507 10A2  
                                  l2259 2400                                    l2339 18DA  
                                  l2099 1F58                                    l2195 1B22  
                                  l2291 208A                                    l2611 12FC  
                                  l2603 12EE                                    l2285 2016  
                                  l2277 1FF0                                    l2269 1FC0  
                                  l2189 2240                                    l2461 15D0  
                                  l2453 159C                                    l2445 1550  
                                  l2437 152C                                    l2533 1D5A  
                                  l2517 12CE                                    l2197 1B4A  
                                  l2293 20A6                                    l2621 1316  
                                  l2613 1300                                    l2605 12F2  
                                  l2287 201C                                    l2279 1FF6  
                                  l2471 1648                                    l2463 15E4  
                                  l2455 15C8                                    l2447 1564  
                                  l2439 1548                                    l2551 1F28  
                                  l2535 1EBE                                    l2527 1C84  
                                  l2519 12D0                                    l2199 1B58  
                                  l2295 20C6                                    l2631 1330  
                                  l2623 131E                                    l2615 1306  
                                  l2607 12F6                                    l2481 167C  
                                  l2465 15FC                                    l2449 157C  
                                  l2553 1F2A                                    l2545 1ED6  
                                  l2537 1EC2                                    l2529 1D40  
                                  l2289 207E                                    l2641 135E  
                                  l2633 1338                                    l2625 1324  
                                  l2617 130A                                    l2609 12F8  
                                  l2483 1680                                    l2467 1600  
                                  l2299 2286                                    l2555 1F3A  
                                  l2547 1F04                                    l2539 1ED2  
                                  l2491 2046                                    l2651 137A  
                                  l2643 135E                                    l2635 1340  
                                  l2627 1328                                    l2619 130E  
                                  l2485 169C                                    l2477 1650  
                                  l2469 161C                                    l2549 1F24  
                                  l2493 204E                                    l2661 13B0  
                                  l2645 1368                                    l2637 1346  
                                  l2629 132C                                    l2479 1664  
                                  l2495 206A                                    l2487 202C  
                                  l2671 1456                                    l2663 13C8  
                                  l2647 1370                                    l2639 1352  
                                  l2489 203E                                    l2673 148A  
                                  l2665 1400                                    l2657 1388  
                                  l2649 1378                                    l2499 22BA  
                                  l2675 14A6                                    l2667 141C  
                                  l2659 13A0                                    l2677 14B4  
                                  l2669 144A                                    l2597 12E2  
                                  ?_pad 0011                                    l1991 1D7E  
                                  l2679 14D0                                    l2599 12E6  
                                  l1993 1D90                                    l1995 1D9A  
                                  l1997 1DB8                                    l1989 1D6C  
                                  l1999 1DEE                                    STR_1 0E01  
                                  STR_2 0E1B                                    u1000 0ED2  
                                  u1001 0ECE                                    u1010 0EE8  
                                  u1011 0EE4                                    u1020 1022  
                                  u1100 1BBA                                    u1021 101E  
                                  u1101 1BB6                                    u1110 2400  
                                  u1030 1040                                    u1111 23FC  
                                  u1031 103C                                    u1120 1FD2  
                                  u1040 105A                                    u1121 1FCE  
                                  u1041 1056                                    u1130 1FF0  
                                  u1050 106A                                    u1131 1FEC  
                                  u1051 1066                                    u1140 200C  
                                  u1060 222E                                    u1300 1F04  
                          ?_LEDSon_init 0001                                    u1141 2008  
                                  u1061 2226                                    u1301 1F00  
                                  u1230 1548                                    u1310 1F3A  
                                  u1150 20C6                                    u1231 1544  
                                  u1311 1F36                                    u1151 20C2  
                                  u1240 159C                                    u1160 186E  
                                  u1080 1B4A                                    u1241 1598  
                                  u1161 186A                                    u1081 1B46  
                                  u1250 161C                                    u1170 1938  
                                  u1090 1B9A                                    u1251 1618  
                                  u1171 1934                                    u1091 1B96  
                                  u1260 169C                                    u1261 1698  
                                  u1078 2230                                    u1270 22E8  
                                  u1271 22E4                                    u1280 12E0  
                                  u1360 13AE                            _BAUD4CONbits 000EE9  
                                  u1281 12DC                                    u1361 13AA  
                                  u1290 1D6A                                    u1370 13E8  
                                  u1507 15EE                                    u1291 1D66  
                                  u1371 13E4                                    u1380 13FE  
                                  u1517 166E                                    u1381 13FA  
                                  u1447 1392                                    u1457 13BA  
                                  _T2PR 000FBC                                    u1467 12C0  
                                  u1477 1D4A                                    u1487 229A  
                                  u1497 156E              normalise_readings@red_read 0019  
                                  abs@a 0013                                    _dbuf 01C0  
                                  _main 12E2                                    _dtoa 0E26  
                                  _prec 01BE                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0002  
                __end_of_color_read_Red 2120             normalise_readings@blue_read 001D  
                          ___param_bank 000000                                   ??_abs 0015  
                                 ??_pad 0017                         __end_of___aodiv 1852  
                                 ?_main 0001                                   ?_dtoa 001C  
                       __end_of___aomod 1B22                         __end_of___lwdiv 202C  
                          vfpfcnvrt@fmt 0041                            main@red_read 00F5  
               __end_of_sendCharSerial4 2406              __end_of_I2C_2_Master_Start 2426  
            __end_of_I2C_2_Master_Write 2412                                   _flags 00FB  
                                 _fputc 1D6C                                   _fputs 21C0  
                                 pad@fp 0011          determine_card@master_closeness 0001  
               ??_make_master_closeness 0014                                   _width 01BC  
                                 _putch 2430                                   main@i 005C  
                                 dtoa@d 001E                                   dtoa@i 003C  
                                 dtoa@n 0034                                   dtoa@p 0030  
                                 dtoa@s 003E                                   dtoa@w 0032  
                   normalise_readings@i 002D                                   tablat 000FF5  
                                 status 000FD8                         __end_of_sprintf 207E  
               __end_of_color_read_Blue 21C0                   _I2C_2_Master_RepStart 2426  
                       ?_color_read_Red 0005                         __initialization 22EA  
                          __end_of_main 14E4                            __end_of_dtoa 10A2  
                                ??_main 0059                                  ??_dtoa 0026  
                         __activetblptr 000003                           main@blue_read 00F9  
                          ?_setMotorPWM 000E                                  ?_fputc 0001  
                                ?_fputs 000A                                  _CCPR1H 000FAA  
                                _CCPR2H 000FA6                                  _CCPR3H 000F25  
                                _CCPR4H 000F21            collect_avg_readings@red_read 000E  
                                ?_putch 0001                                  _RC0PPS 000E62  
                                _RC4REG 000EE3                                  _RE2PPS 000E74  
                                _RD5PPS 000E6F                                  _RC7PPS 000E69  
                                _RD6PPS 000E70                                  _RE4PPS 000E76  
                                _RG6PPS 000E88                __end_of_color_click_init 22BA  
                make_master_closeness@i 0028                                  _RX4PPS 000E15  
                                _TX4REG 000EE4                            _CCPTMRS0bits 000FAD  
                          vfprintf@cfmt 0057                               ??___aodiv 0011  
                             ??___aomod 0011                                  ___wmul 2366  
                    _normalise_readings 10A2                               ??___lwdiv 000B  
                                clear_0 22F0                                  clear_1 22FC  
                                isa$std 000001                                  pad@buf 0013  
                                dtoa@fp 001C                     ?_normalise_readings 0017  
                                fputc@c 0001                                  fputs@c 000E  
                                fputs@i 000F                                  fputs@s 000A  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                      ?_sendCharSerial4 0001                                  putch@c 0001  
                      __end_of_vfprintf 20D0                       ??_initDCmotorsPWM 0001  
                             ??_sprintf 0059                              __accesstop 0060  
               __end_of__initialization 230E                __end_of_color_read_Green 2170  
                ?_I2C_2_Master_RepStart 0001                    ??_normalise_readings 0023  
                         ___rparam_used 000001                        ?_color_read_Blue 0005  
          __end_of_collect_avg_readings 16CA                          __pcstackCOMRAM 0001  
            collect_avg_readings@i_1553 0018              collect_avg_readings@i_1554 001A  
            collect_avg_readings@i_1555 001C                           __end_of_fputc 1E36  
                         __end_of_fputs 2204                           __end_of_putch 2432  
                 main@normalised_values 00AD                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00FB                              __pbssBANK1 01A8  
                            __pbssBANK2 0200                       _color_writetoaddr 23CE  
                          _T2CLKCONbits 000FBF                      ?_color_writetoaddr 0003  
                               ?___wmul 0001                     ??_color_writetoaddr 0004  
                        main@green_read 00F7                                 _SP4BRGH 000EE6  
                               _SP4BRGL 000EE5                                 _SSP2ADD 000ED6  
                               _SSP2BUF 000ED5                  color_writetoaddr@value 0003  
                      ??_color_read_Red 0007           __end_of_make_master_closeness 1D6C  
        determine_card@predicted_colour 0009               __end_of_color_writetoaddr 23EE  
                    _I2C_2_Master_Start 241C                              _initUSART4 23AE  
                    _I2C_2_Master_Write 2406                                 __Hparam 0000  
                               __Lparam 0000                       color_read_Red@tmp 000A  
make_master_closeness@normalised_values 0010                 sendStringSerial4@string 0002  
                               ___aodiv 16CA                                 ___aomod 19BE  
                   ?_I2C_2_Master_Start 0001                                 ___lwdiv 1FB8  
                   ?_I2C_2_Master_Write 0001                               ?_vfprintf 0051  
                          __psmallconst 0E00                                 __pcinit 22EA  
                               __ramtop 0E00                                 __ptext0 12E2  
                               __ptext1 202C                                 __ptext2 207E  
                               __ptext3 1B22                                 __ptext4 0E26  
                               __ptext5 1F3E                                 __ptext6 21C0  
                               __ptext7 1D6C                                 __ptext8 2430  
                               __ptext9 19BE                               _T2CONbits 000FBD  
                             _T2HLTbits 000FBE                           _RxBufWriteCnt 00FE  
                  _collect_avg_readings 14E4                                 main@buf 0100  
                               _sprintf 202C                    ??_I2C_2_Master_Start 0002  
                  ??_I2C_2_Master_Write 0002                    end_of_initialization 230E  
        collect_avg_readings@green_read 0010                   normalise_readings@buf 0017  
                               fputc@fp 0003                                 fputs@fp 000C  
                     ?_color_click_init 0001                      ??_color_click_init 0005  
                     __end_of_vfpfcnvrt 1C80                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                        vfpfcnvrt@convarg 0047  
                            ??_vfprintf 0057                         _initDCmotorsPWM 1E36  
                             _PORTFbits 000F8E                      setMotorPWM@negDuty 0013  
     normalise_readings@expected_values 001F                               _TRISAbits 000F81  
                    setMotorPWM@posDuty 0012                               _TRISCbits 000F83  
                             _TRISDbits 000F84                               _TRISEbits 000F85  
                             _TRISFbits 000F86                               _TRISGbits 000F87  
                             _TRISHbits 000F88                   ?_collect_avg_readings 000E  
                   main@expected_values 0077                color_writetoaddr@address 0004  
               ??_I2C_2_Master_RepStart 0002                             _CCP1CONbits 000FAB  
                          _EUSART4RXbuf 01A8                            _EUSART4TXbuf 0200  
                           _CCP2CONbits 000FA7                       ?_color_read_Green 0005  
                           _CCP3CONbits 000F26                             ?_initUSART4 0001  
                           _CCP4CONbits 000F22               sendCharSerial4@charToSend 0001  
                            main@motorL 0196                              main@motorR 019F  
                    ??_color_read_Green 0007                    main@master_closeness 00E3  
                           vfpfcnvrt@ap 0043                             vfpfcnvrt@cp 004F  
                           vfpfcnvrt@fp 003F                          __end_of___wmul 238C  
                       determine_card@i 000A                     start_initialization 22EA  
                           __end_of_abs 2286                             __end_of_pad 1FB8  
                         _TxBufWriteCnt 005F                           ??_LEDSon_init 0001  
                   color_read_Green@tmp 000A                 __end_of_initDCmotorsPWM 1EBE  
                           vfprintf@fmt 0053                                ??___wmul 0005  
                        _determine_card 1EBE                             __pbssCOMRAM 005F  
                ??_collect_avg_readings 0014                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                        ___aodiv@dividend 0001  
                   __end_of_LEDSon_init 23AE                        ___lwdiv@dividend 0007  
                             _dtoa$2279 002E                                ?___aodiv 0001  
                              ?___aomod 0001                        ___aodiv@quotient 0013  
                __end_of_determine_card 1F3E                                ?___lwdiv 0007  
                  I2C_2_Master_Read@ack 0003                    I2C_2_Master_Read@tmp 0004  
                           __smallconst 0E00                       _I2C_2_Master_Idle 233E  
                     _I2C_2_Master_Init 2314                       _I2C_2_Master_Read 2204  
                     _I2C_2_Master_Stop 2412                            _RxBufReadCnt 00FD  
          normalise_readings@difference 002B                      ?_I2C_2_Master_Idle 0001  
                    ?_I2C_2_Master_Init 0001                      ?_I2C_2_Master_Read 0001  
                         ??_setMotorPWM 0010                      ?_I2C_2_Master_Stop 0001  
                      ___lwdiv@quotient 000B                                ?_sprintf 0060  
                     _sendStringSerial4 22BA                     ??_I2C_2_Master_Idle 0001  
                   ??_I2C_2_Master_Init 0001                     ??_I2C_2_Master_Read 0002  
                        ___wmul@product 0005                                _LATAbits 000F79  
                   ??_I2C_2_Master_Stop 0002                                _LATDbits 000F7C  
                              _LATFbits 000F7E                                _LATGbits 000F7F  
                              _LATHbits 000F80                      ?_sendStringSerial4 0002  
                              _PIE4bits 000E2D                   _make_master_closeness 1C80  
                              _PIR4bits 000E37                        ?_initDCmotorsPWM 0001  
                     ??_sendCharSerial4 0001                make_master_closeness@buf 000E  
                              _SSP2CON2 000EDA                     ??_sendStringSerial4 0004  
                              _SSP2STAT 000ED8                         ?_determine_card 0001  
                             _vfpfcnvrt 1B22               __end_of_I2C_2_Master_Idle 2366  
             __end_of_I2C_2_Master_Init 233E               __end_of_I2C_2_Master_Read 2246  
                     ___wmul@multiplier 0001               __end_of_I2C_2_Master_Stop 241C  
                          setMotorPWM@m 000E             I2C_2_Master_Write@data_byte 0002  
          normalise_readings@green_read 001B                       ??_color_read_Blue 0007  
                          _TxBufReadCnt 00FC               __end_of_sendStringSerial4 22EA  
                           _LEDSon_init 238C           __end_of_I2C_2_Master_RepStart 2430  
                    color_read_Blue@tmp 000A                     __end_of_setMotorPWM 19BE  
                          ??_initUSART4 0001                                __Hrparam 0000  
                            vfprintf@ap 0055                                __Lrparam 0000  
                            vfprintf@fp 0051   make_master_closeness@master_closeness 0012  
                            ?_vfpfcnvrt 003F                         ___aodiv@divisor 0009  
                       ___aodiv@counter 0011                              _ANSELDbits 000EA7  
                            _ANSELFbits 000EB4                              sprintf@fmt 0062  
                       ___lwdiv@divisor 0009                      __end_of_initUSART4 23CE  
                       ___lwdiv@counter 000D                                __ptext10 16CA  
                              __ptext11 1852                                __ptext20 1EBE  
                              __ptext12 22BA                                __ptext21 2286  
                              __ptext13 23EE                                __ptext30 241C  
                              __ptext22 23CE                                __ptext14 10A2  
                              __ptext31 2426                                __ptext23 2314  
                              __ptext15 2246                                __ptext32 2204  
                              __ptext24 14E4                                __ptext16 2366  
                              __ptext33 233E                                __ptext25 20D0  
                              __ptext17 1C80                                __ptext34 1FB8  
                              __ptext26 2120                                __ptext18 23AE  
                              __ptext35 238C                                __ptext27 2170  
                              __ptext19 1E36                                __ptext28 2406  
                              __ptext29 2412                            _SSP2CON1bits 000ED9  
                          _SSP2CON2bits 000EDA                  ?_make_master_closeness 000E  
                              isa$xinst 000000                              _RC4STAbits 000EE7  
                              _vfprintf 207E                                main@card 005B  
                      ___aomod@dividend 0001                   collect_avg_readings@i 0016  
                           _setMotorPWM 1852           collect_avg_readings@blue_read 0012  
                             sprintf@ap 006A              __end_of_normalise_readings 12E2  
        determine_card@current_smallest 0007                         ___aomod@divisor 0009  
                           ??_vfpfcnvrt 0045                         ___aomod@counter 0011  
                      _color_click_init 2286                                sprintf@f 006C  
                              sprintf@s 0060                              _SSP2DATPPS 000E1D  
                            _SSP2CLKPPS 000E1C                              _TX4STAbits 000EE8  
                          ___aodiv@sign 0012                         _sendCharSerial4 23EE  
                          ___aomod@sign 0012                        ??_determine_card 0003  
                          main@PWMcycle 005E  
