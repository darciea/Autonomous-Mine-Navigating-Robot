

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 28 10:52:50 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	text11,global,reloc=2,class=CODE,delta=1
    19                           	psect	text12,global,reloc=2,class=CODE,delta=1
    20                           	psect	text13,global,reloc=2,class=CODE,delta=1
    21                           	psect	text14,global,reloc=2,class=CODE,delta=1
    22                           	psect	text15,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Version 2.35
    29                           ; Generated 05/05/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F67K40 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     _LATHbits	set	3968
    64   000000                     _LATGbits	set	3967
    65   000000                     _TRISAbits	set	3969
    66   000000                     _TRISFbits	set	3974
    67   000000                     _TRISDbits	set	3972
    68   000000                     _TRISGbits	set	3975
    69   000000                     _SSP2CON2bits	set	3802
    70   000000                     _SSP2CLKPPS	set	3612
    71   000000                     _SSP2DATPPS	set	3613
    72   000000                     _RC7PPS	set	3689
    73   000000                     _RE2PPS	set	3700
    74   000000                     _TRISCbits	set	3971
    75   000000                     _TRISEbits	set	3973
    76   000000                     _TRISHbits	set	3976
    77   000000                     _T2PR	set	4028
    78   000000                     _T2CONbits	set	4029
    79   000000                     _CCPR2H	set	4006
    80   000000                     _CCPR1H	set	4010
    81   000000                     _RE4PPS	set	3702
    82   000000                     _RG6PPS	set	3720
    83   000000                     _RD5PPS	set	3695
    84   000000                     _ANSELDbits	set	3751
    85   000000                     _SSP2ADD	set	3798
    86   000000                     _SSP2CON1bits	set	3801
    87   000000                     _CCPR4H	set	3873
    88   000000                     _CCPR3H	set	3877
    89   000000                     _T2CLKCONbits	set	4031
    90   000000                     _T2HLTbits	set	4030
    91   000000                     _CCP1CONbits	set	4011
    92   000000                     _CCPTMRS0bits	set	4013
    93   000000                     _CCP2CONbits	set	4007
    94   000000                     _LATAbits	set	3961
    95   000000                     _LATDbits	set	3964
    96   000000                     _CCP3CONbits	set	3878
    97   000000                     _CCP4CONbits	set	3874
    98   000000                     _SSP2CON2	set	3802
    99   000000                     _SSP2STAT	set	3800
   100   000000                     _SSP2BUF	set	3797
   101   000000                     _RD6PPS	set	3696
   102   000000                     _LATFbits	set	3966
   103                           
   104                           ; #config settings
   105                           
   106                           	psect	cinit
   107   01FB48                     __pcinit:
   108                           	callstack 0
   109   01FB48                     start_initialization:
   110                           	callstack 0
   111   01FB48                     __initialization:
   112                           	callstack 0
   113   01FB48                     end_of_initialization:
   114                           	callstack 0
   115   01FB48                     __end_of__initialization:
   116                           	callstack 0
   117   01FB48  0100               	movlb	0
   118   01FB4A  EFFA  F0FE         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	cstackCOMRAM
   121   000001                     __pcstackCOMRAM:
   122                           	callstack 0
   123   000001                     ??_I2C_2_Master_Idle:
   124   000001                     ?___wmul:
   125                           	callstack 0
   126   000001                     ___wmul@multiplier:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x0
   130   000001                     	ds	1
   131   000002                     ??_I2C_2_Master_Read:
   132   000002                     I2C_2_Master_Write@data_byte:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x1
   136   000002                     	ds	1
   137   000003                     color_writetoaddr@value:
   138                           	callstack 0
   139   000003                     I2C_2_Master_Read@ack:
   140                           	callstack 0
   141   000003                     ___wmul@multiplicand:
   142                           	callstack 0
   143                           
   144                           ; 2 bytes @ 0x2
   145   000003                     	ds	1
   146   000004                     color_writetoaddr@address:
   147                           	callstack 0
   148   000004                     I2C_2_Master_Read@tmp:
   149                           	callstack 0
   150                           
   151                           ; 1 bytes @ 0x3
   152   000004                     	ds	1
   153   000005                     ??_color_click_init:
   154   000005                     ?_color_read_Blue:
   155                           	callstack 0
   156   000005                     ___wmul@product:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x4
   160   000005                     	ds	2
   161   000007                     ??_color_read_Blue:
   162   000007                     ?___lwdiv:
   163                           	callstack 0
   164   000007                     ___lwdiv@dividend:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x6
   168   000007                     	ds	2
   169   000009                     ___lwdiv@divisor:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x8
   173   000009                     	ds	1
   174   00000A                     color_read_Blue@tmp:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x9
   178   00000A                     	ds	1
   179   00000B                     ___lwdiv@quotient:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0xA
   183   00000B                     	ds	2
   184   00000D                     ___lwdiv@counter:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0xC
   188   00000D                     	ds	1
   189   00000E                     setMotorPWM@m:
   190                           	callstack 0
   191                           
   192                           ; 2 bytes @ 0xD
   193   00000E                     	ds	2
   194   000010                     ??_setMotorPWM:
   195                           
   196                           ; 1 bytes @ 0xF
   197   000010                     	ds	2
   198   000012                     setMotorPWM@posDuty:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x11
   202   000012                     	ds	1
   203   000013                     setMotorPWM@negDuty:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x12
   207   000013                     	ds	1
   208   000014                     main@blue:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x13
   212   000014                     	ds	2
   213   000016                     main@PWMcycle:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x15
   217   000016                     	ds	1
   218   000017                     main@motorL:
   219                           	callstack 0
   220                           
   221                           ; 9 bytes @ 0x16
   222   000017                     	ds	9
   223   000020                     main@motorR:
   224                           	callstack 0
   225                           
   226                           ; 9 bytes @ 0x1F
   227   000020                     	ds	9
   228                           
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 17 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  motorR          9   31[COMRAM] struct DC_motor
   239 ;;  motorL          9   22[COMRAM] struct DC_motor
   240 ;;  blue            2   19[COMRAM] unsigned int 
   241 ;;  green           2    0        unsigned int 
   242 ;;  red             2    0        unsigned int 
   243 ;;  clear           2    0        unsigned int 
   244 ;;  PWMcycle        1   21[COMRAM] unsigned char 
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   255 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   257 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   258 ;;Total ram usage:       21 bytes
   259 ;; Hardware stack levels required when called: 4
   260 ;; This function calls:
   261 ;;		_I2C_2_Master_Init
   262 ;;		_LEDSon_init
   263 ;;		_color_click_init
   264 ;;		_color_read_Blue
   265 ;;		_initDCmotorsPWM
   266 ;;		_setMotorPWM
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text0
   273   01FDF4                     __ptext0:
   274                           	callstack 0
   275   01FDF4                     _main:
   276                           	callstack 27
   277   01FDF4                     
   278                           ;main.c: 22:     LEDSon_init();
   279   01FDF4  ECCC  F0FD         	call	_LEDSon_init	;wreg free
   280   01FDF8                     
   281                           ;main.c: 23:     I2C_2_Master_Init();
   282   01FDF8  EC04  F0FE         	call	_I2C_2_Master_Init	;wreg free
   283   01FDFC                     
   284                           ;main.c: 24:     color_click_init();
   285   01FDFC  EC19  F0FE         	call	_color_click_init	;wreg free
   286   01FE00                     
   287                           ;main.c: 25:     initDCmotorsPWM();
   288   01FE00  ECB6  F0FE         	call	_initDCmotorsPWM	;wreg free
   289   01FE04                     
   290                           ;main.c: 33:     unsigned char PWMcycle = T2PR;
   291   01FE04  CFBC F016          	movff	4028,main@PWMcycle	;volatile
   292   01FE08                     
   293                           ;main.c: 35:     struct DC_motor motorL, motorR;;main.c: 37:     motorL.power=0;
   294   01FE08  0E00               	movlw	0
   295   01FE0A  6E17               	movwf	main@motorL^0,c
   296   01FE0C                     
   297                           ;main.c: 38:     motorL.direction=1;
   298   01FE0C  0E01               	movlw	1
   299   01FE0E  6E18               	movwf	(main@motorL+1)^0,c
   300   01FE10                     
   301                           ;main.c: 39:     motorL.brakemode=1;
   302   01FE10  0E01               	movlw	1
   303   01FE12  6E19               	movwf	(main@motorL+2)^0,c
   304   01FE14                     
   305                           ;main.c: 40:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   306   01FE14  0EAA               	movlw	170
   307   01FE16  6E1C               	movwf	(main@motorL+5)^0,c
   308   01FE18  0E0F               	movlw	15
   309   01FE1A  6E1D               	movwf	(main@motorL+6)^0,c
   310   01FE1C                     
   311                           ;main.c: 41:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   312   01FE1C  0EA6               	movlw	166
   313   01FE1E  6E1E               	movwf	(main@motorL+7)^0,c
   314   01FE20  0E0F               	movlw	15
   315   01FE22  6E1F               	movwf	(main@motorL+8)^0,c
   316   01FE24                     
   317                           ;main.c: 42:     motorL.PWMperiod=PWMcycle;
   318   01FE24  C016  F01A         	movff	main@PWMcycle,main@motorL+3
   319   01FE28  6A1B               	clrf	(main@motorL+4)^0,c
   320   01FE2A                     
   321                           ;main.c: 44:     motorR.power=0;
   322   01FE2A  0E00               	movlw	0
   323   01FE2C  6E20               	movwf	main@motorR^0,c
   324   01FE2E                     
   325                           ;main.c: 45:     motorR.direction=1;
   326   01FE2E  0E01               	movlw	1
   327   01FE30  6E21               	movwf	(main@motorR+1)^0,c
   328   01FE32                     
   329                           ;main.c: 46:     motorR.brakemode=1;
   330   01FE32  0E01               	movlw	1
   331   01FE34  6E22               	movwf	(main@motorR+2)^0,c
   332                           
   333                           ;main.c: 47:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   334   01FE36  0E25               	movlw	37
   335   01FE38  6E25               	movwf	(main@motorR+5)^0,c
   336   01FE3A  0E0F               	movlw	15
   337   01FE3C  6E26               	movwf	(main@motorR+6)^0,c
   338                           
   339                           ;main.c: 48:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   340   01FE3E  0E21               	movlw	33
   341   01FE40  6E27               	movwf	(main@motorR+7)^0,c
   342   01FE42  0E0F               	movlw	15
   343   01FE44  6E28               	movwf	(main@motorR+8)^0,c
   344   01FE46                     
   345                           ;main.c: 49:     motorR.PWMperiod=PWMcycle;
   346   01FE46  C016  F023         	movff	main@PWMcycle,main@motorR+3
   347   01FE4A  6A24               	clrf	(main@motorR+4)^0,c
   348   01FE4C                     
   349                           ;main.c: 51:     setMotorPWM(&motorL);
   350   01FE4C  0E17               	movlw	low main@motorL
   351   01FE4E  6E0E               	movwf	setMotorPWM@m^0,c
   352   01FE50  0E00               	movlw	high main@motorL
   353   01FE52  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   354   01FE54  EC4A  F0FF         	call	_setMotorPWM	;wreg free
   355   01FE58                     
   356                           ;main.c: 52:     setMotorPWM(&motorR);
   357   01FE58  0E20               	movlw	low main@motorR
   358   01FE5A  6E0E               	movwf	setMotorPWM@m^0,c
   359   01FE5C  0E00               	movlw	high main@motorR
   360   01FE5E  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   361   01FE60  EC4A  F0FF         	call	_setMotorPWM	;wreg free
   362   01FE64                     
   363                           ;main.c: 61:     LATDbits.LATD7=1;
   364   01FE64  8E7C               	bsf	124,7,c	;volatile
   365   01FE66                     
   366                           ;main.c: 62:     TRISDbits.TRISD7=0;
   367   01FE66  9E84               	bcf	132,7,c	;volatile
   368   01FE68                     l1325:
   369                           
   370                           ;main.c: 65:         LATDbits.LATD4 = 1;
   371   01FE68  887C               	bsf	124,4,c	;volatile
   372   01FE6A                     
   373                           ;main.c: 68:         blue = color_read_Blue();
   374   01FE6A  EC54  F0FE         	call	_color_read_Blue	;wreg free
   375   01FE6E  C005  F014         	movff	?_color_read_Blue,main@blue
   376   01FE72  C006  F015         	movff	?_color_read_Blue+1,main@blue+1
   377   01FE76                     
   378                           ;main.c: 69:         if (blue != 0) {LATDbits.LATD7 = 0;}
   379   01FE76  5014               	movf	main@blue^0,w,c
   380   01FE78  1015               	iorwf	(main@blue+1)^0,w,c
   381   01FE7A  B4D8               	btfsc	status,2,c
   382   01FE7C  EF42  F0FF         	goto	u261
   383   01FE80  EF44  F0FF         	goto	u260
   384   01FE84                     u261:
   385   01FE84  EF45  F0FF         	goto	l189
   386   01FE88                     u260:
   387   01FE88  9E7C               	bcf	124,7,c	;volatile
   388   01FE8A                     l189:
   389                           
   390                           ;main.c: 70:         LATFbits.LATF0 = 1;
   391   01FE8A  807E               	bsf	126,0,c	;volatile
   392   01FE8C  EF34  F0FF         	goto	l1325
   393   01FE90  EF01  F000         	goto	start
   394   01FE94                     __end_of_main:
   395                           	callstack 0
   396                           
   397 ;; *************** function _setMotorPWM *****************
   398 ;; Defined at:
   399 ;;		line 61 in file "dc_motor.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;  m               2   13[COMRAM] PTR struct DC_motor
   402 ;;		 -> main@motorR(9), main@motorL(9), 
   403 ;; Auto vars:     Size  Location     Type
   404 ;;  negDuty         1   18[COMRAM] unsigned char 
   405 ;;  posDuty         1   17[COMRAM] unsigned char 
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   418 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   419 ;;Total ram usage:        6 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; Hardware stack levels required when called: 1
   422 ;; This function calls:
   423 ;;		___lwdiv
   424 ;;		___wmul
   425 ;; This function is called by:
   426 ;;		_main
   427 ;;		_stop
   428 ;;		_turnLeft
   429 ;;		_turnRight
   430 ;;		_fullSpeedAhead
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text1
   435   01FE94                     __ptext1:
   436                           	callstack 0
   437   01FE94                     _setMotorPWM:
   438                           	callstack 29
   439   01FE94                     
   440                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
   441   01FE94  EE20 F002          	lfsr	2,2
   442   01FE98  500E               	movf	setMotorPWM@m^0,w,c
   443   01FE9A  26D9               	addwf	fsr2l,f,c
   444   01FE9C  500F               	movf	(setMotorPWM@m+1)^0,w,c
   445   01FE9E  22DA               	addwfc	fsr2h,f,c
   446   01FEA0  50DF               	movf	indf2,w,c
   447   01FEA2  B4D8               	btfsc	status,2,c
   448   01FEA4  EF56  F0FF         	goto	u191
   449   01FEA8  EF58  F0FF         	goto	u190
   450   01FEAC                     u191:
   451   01FEAC  EF8C  F0FF         	goto	l1203
   452   01FEB0                     u190:
   453   01FEB0                     
   454                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
   455   01FEB0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
   456   01FEB4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
   457   01FEB8  50DF               	movf	indf2,w,c
   458   01FEBA  6E10               	movwf	??_setMotorPWM^0,c
   459   01FEBC  5010               	movf	??_setMotorPWM^0,w,c
   460   01FEBE  6E01               	movwf	___wmul@multiplier^0,c
   461   01FEC0  6A02               	clrf	(___wmul@multiplier+1)^0,c
   462   01FEC2  EE20 F003          	lfsr	2,3
   463   01FEC6  500E               	movf	setMotorPWM@m^0,w,c
   464   01FEC8  26D9               	addwf	fsr2l,f,c
   465   01FECA  500F               	movf	(setMotorPWM@m+1)^0,w,c
   466   01FECC  22DA               	addwfc	fsr2h,f,c
   467   01FECE  CFDE F003          	movff	postinc2,___wmul@multiplicand
   468   01FED2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
   469   01FED6  ECDD  F0FD         	call	___wmul	;wreg free
   470   01FEDA  C001  F007         	movff	?___wmul,___lwdiv@dividend
   471   01FEDE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
   472   01FEE2  0E00               	movlw	0
   473   01FEE4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
   474   01FEE6  0E64               	movlw	100
   475   01FEE8  6E09               	movwf	___lwdiv@divisor^0,c
   476   01FEEA  EC7C  F0FE         	call	___lwdiv	;wreg free
   477   01FEEE  EE20 F003          	lfsr	2,3
   478   01FEF2  500E               	movf	setMotorPWM@m^0,w,c
   479   01FEF4  26D9               	addwf	fsr2l,f,c
   480   01FEF6  500F               	movf	(setMotorPWM@m+1)^0,w,c
   481   01FEF8  22DA               	addwfc	fsr2h,f,c
   482   01FEFA  50DF               	movf	indf2,w,c
   483   01FEFC  6E11               	movwf	(??_setMotorPWM+1)^0,c
   484   01FEFE  5007               	movf	?___lwdiv^0,w,c
   485   01FF00  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
   486   01FF02  6E12               	movwf	setMotorPWM@posDuty^0,c
   487   01FF04                     
   488                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
   489   01FF04  EE20 F003          	lfsr	2,3
   490   01FF08  500E               	movf	setMotorPWM@m^0,w,c
   491   01FF0A  26D9               	addwf	fsr2l,f,c
   492   01FF0C  500F               	movf	(setMotorPWM@m+1)^0,w,c
   493   01FF0E  22DA               	addwfc	fsr2h,f,c
   494   01FF10  50DF               	movf	indf2,w,c
   495   01FF12  6E13               	movwf	setMotorPWM@negDuty^0,c
   496                           
   497                           ;dc_motor.c: 68:     }
   498   01FF14  EFAF  F0FF         	goto	l1207
   499   01FF18                     l1203:
   500                           
   501                           ;dc_motor.c: 70:         posDuty=0;
   502   01FF18  0E00               	movlw	0
   503   01FF1A  6E12               	movwf	setMotorPWM@posDuty^0,c
   504   01FF1C                     
   505                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
   506   01FF1C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
   507   01FF20  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
   508   01FF24  50DF               	movf	indf2,w,c
   509   01FF26  6E10               	movwf	??_setMotorPWM^0,c
   510   01FF28  5010               	movf	??_setMotorPWM^0,w,c
   511   01FF2A  6E01               	movwf	___wmul@multiplier^0,c
   512   01FF2C  6A02               	clrf	(___wmul@multiplier+1)^0,c
   513   01FF2E  EE20 F003          	lfsr	2,3
   514   01FF32  500E               	movf	setMotorPWM@m^0,w,c
   515   01FF34  26D9               	addwf	fsr2l,f,c
   516   01FF36  500F               	movf	(setMotorPWM@m+1)^0,w,c
   517   01FF38  22DA               	addwfc	fsr2h,f,c
   518   01FF3A  CFDE F003          	movff	postinc2,___wmul@multiplicand
   519   01FF3E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
   520   01FF42  ECDD  F0FD         	call	___wmul	;wreg free
   521   01FF46  C001  F007         	movff	?___wmul,___lwdiv@dividend
   522   01FF4A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
   523   01FF4E  0E00               	movlw	0
   524   01FF50  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
   525   01FF52  0E64               	movlw	100
   526   01FF54  6E09               	movwf	___lwdiv@divisor^0,c
   527   01FF56  EC7C  F0FE         	call	___lwdiv	;wreg free
   528   01FF5A  5007               	movf	?___lwdiv^0,w,c
   529   01FF5C  6E13               	movwf	setMotorPWM@negDuty^0,c
   530   01FF5E                     l1207:
   531                           
   532                           ;dc_motor.c: 74:     if (m->direction) {
   533   01FF5E  EE20 F001          	lfsr	2,1
   534   01FF62  500E               	movf	setMotorPWM@m^0,w,c
   535   01FF64  26D9               	addwf	fsr2l,f,c
   536   01FF66  500F               	movf	(setMotorPWM@m+1)^0,w,c
   537   01FF68  22DA               	addwfc	fsr2h,f,c
   538   01FF6A  50DF               	movf	indf2,w,c
   539   01FF6C  B4D8               	btfsc	status,2,c
   540   01FF6E  EFBB  F0FF         	goto	u201
   541   01FF72  EFBD  F0FF         	goto	u200
   542   01FF76                     u201:
   543   01FF76  EFDF  F0FF         	goto	l1211
   544   01FF7A                     u200:
   545   01FF7A                     
   546                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
   547   01FF7A  EE20 F005          	lfsr	2,5
   548   01FF7E  500E               	movf	setMotorPWM@m^0,w,c
   549   01FF80  26D9               	addwf	fsr2l,f,c
   550   01FF82  500F               	movf	(setMotorPWM@m+1)^0,w,c
   551   01FF84  22DA               	addwfc	fsr2h,f,c
   552   01FF86  CFDE F010          	movff	postinc2,??_setMotorPWM
   553   01FF8A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   554   01FF8E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   555   01FF92  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   556   01FF96  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
   557                           
   558                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
   559   01FF9A  EE20 F007          	lfsr	2,7
   560   01FF9E  500E               	movf	setMotorPWM@m^0,w,c
   561   01FFA0  26D9               	addwf	fsr2l,f,c
   562   01FFA2  500F               	movf	(setMotorPWM@m+1)^0,w,c
   563   01FFA4  22DA               	addwfc	fsr2h,f,c
   564   01FFA6  CFDE F010          	movff	postinc2,??_setMotorPWM
   565   01FFAA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   566   01FFAE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   567   01FFB2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   568   01FFB6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
   569                           
   570                           ;dc_motor.c: 77:     } else {
   571   01FFBA  EFFF  F0FF         	goto	l83
   572   01FFBE                     l1211:
   573                           
   574                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
   575   01FFBE  EE20 F005          	lfsr	2,5
   576   01FFC2  500E               	movf	setMotorPWM@m^0,w,c
   577   01FFC4  26D9               	addwf	fsr2l,f,c
   578   01FFC6  500F               	movf	(setMotorPWM@m+1)^0,w,c
   579   01FFC8  22DA               	addwfc	fsr2h,f,c
   580   01FFCA  CFDE F010          	movff	postinc2,??_setMotorPWM
   581   01FFCE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   582   01FFD2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   583   01FFD6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   584   01FFDA  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
   585                           
   586                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
   587   01FFDE  EE20 F007          	lfsr	2,7
   588   01FFE2  500E               	movf	setMotorPWM@m^0,w,c
   589   01FFE4  26D9               	addwf	fsr2l,f,c
   590   01FFE6  500F               	movf	(setMotorPWM@m+1)^0,w,c
   591   01FFE8  22DA               	addwfc	fsr2h,f,c
   592   01FFEA  CFDE F010          	movff	postinc2,??_setMotorPWM
   593   01FFEE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   594   01FFF2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   595   01FFF6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   596   01FFFA  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
   597   01FFFE                     l83:
   598   01FFFE  0012               	return		;funcret
   599   020000                     __end_of_setMotorPWM:
   600                           	callstack 0
   601                           
   602 ;; *************** function ___wmul *****************
   603 ;; Defined at:
   604 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;  multiplier      2    0[COMRAM] unsigned int 
   607 ;;  multiplicand    2    2[COMRAM] unsigned int 
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  product         2    4[COMRAM] unsigned int 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  2    0[COMRAM] unsigned int 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, prodl, prodh
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   623 ;;Total ram usage:        6 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_setMotorPWM
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text2
   633   01FBBA                     __ptext2:
   634                           	callstack 0
   635   01FBBA                     ___wmul:
   636                           	callstack 29
   637   01FBBA  5001               	movf	___wmul@multiplier^0,w,c
   638   01FBBC  0203               	mulwf	___wmul@multiplicand^0,c
   639   01FBBE  CFF3 F005          	movff	prodl,___wmul@product
   640   01FBC2  CFF4 F006          	movff	prodh,___wmul@product+1
   641   01FBC6  5001               	movf	___wmul@multiplier^0,w,c
   642   01FBC8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
   643   01FBCA  50F3               	movf	243,w,c
   644   01FBCC  2606               	addwf	(___wmul@product+1)^0,f,c
   645   01FBCE  5002               	movf	(___wmul@multiplier+1)^0,w,c
   646   01FBD0  0203               	mulwf	___wmul@multiplicand^0,c
   647   01FBD2  50F3               	movf	243,w,c
   648   01FBD4  2606               	addwf	(___wmul@product+1)^0,f,c
   649   01FBD6  C005  F001         	movff	___wmul@product,?___wmul
   650   01FBDA  C006  F002         	movff	___wmul@product+1,?___wmul+1
   651   01FBDE  0012               	return		;funcret
   652   01FBE0                     __end_of___wmul:
   653                           	callstack 0
   654                           
   655 ;; *************** function ___lwdiv *****************
   656 ;; Defined at:
   657 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  dividend        2    6[COMRAM] unsigned int 
   660 ;;  divisor         2    8[COMRAM] unsigned int 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  quotient        2   10[COMRAM] unsigned int 
   663 ;;  counter         1   12[COMRAM] unsigned char 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  2    6[COMRAM] unsigned int 
   666 ;; Registers used:
   667 ;;		wreg, status,2, status,0
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   676 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   677 ;;Total ram usage:        7 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_setMotorPWM
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text3
   687   01FCF8                     __ptext3:
   688                           	callstack 0
   689   01FCF8                     ___lwdiv:
   690                           	callstack 29
   691   01FCF8  0E00               	movlw	0
   692   01FCFA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
   693   01FCFC  0E00               	movlw	0
   694   01FCFE  6E0B               	movwf	___lwdiv@quotient^0,c
   695   01FD00  5009               	movf	___lwdiv@divisor^0,w,c
   696   01FD02  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
   697   01FD04  B4D8               	btfsc	status,2,c
   698   01FD06  EF87  F0FE         	goto	u161
   699   01FD0A  EF89  F0FE         	goto	u160
   700   01FD0E                     u161:
   701   01FD0E  EFB1  F0FE         	goto	l709
   702   01FD12                     u160:
   703   01FD12  0E01               	movlw	1
   704   01FD14  6E0D               	movwf	___lwdiv@counter^0,c
   705   01FD16  EF91  F0FE         	goto	l1167
   706   01FD1A                     l1165:
   707   01FD1A  90D8               	bcf	status,0,c
   708   01FD1C  3609               	rlcf	___lwdiv@divisor^0,f,c
   709   01FD1E  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
   710   01FD20  2A0D               	incf	___lwdiv@counter^0,f,c
   711   01FD22                     l1167:
   712   01FD22  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
   713   01FD24  EF96  F0FE         	goto	u171
   714   01FD28  EF98  F0FE         	goto	u170
   715   01FD2C                     u171:
   716   01FD2C  EF8D  F0FE         	goto	l1165
   717   01FD30                     u170:
   718   01FD30                     l1169:
   719   01FD30  90D8               	bcf	status,0,c
   720   01FD32  360B               	rlcf	___lwdiv@quotient^0,f,c
   721   01FD34  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
   722   01FD36  5009               	movf	___lwdiv@divisor^0,w,c
   723   01FD38  5C07               	subwf	___lwdiv@dividend^0,w,c
   724   01FD3A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
   725   01FD3C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
   726   01FD3E  A0D8               	btfss	status,0,c
   727   01FD40  EFA4  F0FE         	goto	u181
   728   01FD44  EFA6  F0FE         	goto	u180
   729   01FD48                     u181:
   730   01FD48  EFAB  F0FE         	goto	l1177
   731   01FD4C                     u180:
   732   01FD4C  5009               	movf	___lwdiv@divisor^0,w,c
   733   01FD4E  5E07               	subwf	___lwdiv@dividend^0,f,c
   734   01FD50  500A               	movf	(___lwdiv@divisor+1)^0,w,c
   735   01FD52  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
   736   01FD54  800B               	bsf	___lwdiv@quotient^0,0,c
   737   01FD56                     l1177:
   738   01FD56  90D8               	bcf	status,0,c
   739   01FD58  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
   740   01FD5A  3209               	rrcf	___lwdiv@divisor^0,f,c
   741   01FD5C  2E0D               	decfsz	___lwdiv@counter^0,f,c
   742   01FD5E  EF98  F0FE         	goto	l1169
   743   01FD62                     l709:
   744   01FD62  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
   745   01FD66  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
   746   01FD6A  0012               	return		;funcret
   747   01FD6C                     __end_of___lwdiv:
   748                           	callstack 0
   749                           
   750 ;; *************** function _initDCmotorsPWM *****************
   751 ;; Defined at:
   752 ;;		line 6 in file "dc_motor.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text4
   780   01FD6C                     __ptext4:
   781                           	callstack 0
   782   01FD6C                     _initDCmotorsPWM:
   783                           	callstack 30
   784   01FD6C                     
   785                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
   786   01FD6C  9485               	bcf	133,2,c	;volatile
   787                           
   788                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
   789   01FD6E  9885               	bcf	133,4,c	;volatile
   790                           
   791                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
   792   01FD70  9E83               	bcf	131,7,c	;volatile
   793                           
   794                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
   795   01FD72  9C87               	bcf	135,6,c	;volatile
   796   01FD74                     
   797                           ;dc_motor.c: 14:     RE2PPS=0x05;
   798   01FD74  0E05               	movlw	5
   799   01FD76  010E               	movlb	14	; () banked
   800   01FD78  6F74               	movwf	116,b	;volatile
   801                           
   802                           ;dc_motor.c: 15:     RE4PPS=0x06;
   803   01FD7A  0E06               	movlw	6
   804   01FD7C  6F76               	movwf	118,b	;volatile
   805                           
   806                           ;dc_motor.c: 16:     RC7PPS=0x07;
   807   01FD7E  0E07               	movlw	7
   808   01FD80  6F69               	movwf	105,b	;volatile
   809                           
   810                           ;dc_motor.c: 17:     RG6PPS=0x08;
   811   01FD82  0E08               	movlw	8
   812   01FD84  6F88               	movwf	136,b	;volatile
   813                           
   814                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
   815   01FD86  50BD               	movf	189,w,c	;volatile
   816   01FD88  0B8F               	andlw	-113
   817   01FD8A  0940               	iorlw	64
   818   01FD8C  6EBD               	movwf	189,c	;volatile
   819                           
   820                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
   821   01FD8E  0EE0               	movlw	-32
   822   01FD90  16BE               	andwf	190,f,c	;volatile
   823                           
   824                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
   825   01FD92  50BF               	movf	191,w,c	;volatile
   826   01FD94  0BF0               	andlw	-16
   827   01FD96  0901               	iorlw	1
   828   01FD98  6EBF               	movwf	191,c	;volatile
   829                           
   830                           ;dc_motor.c: 26:     T2PR=99;
   831   01FD9A  0E63               	movlw	99
   832   01FD9C  6EBC               	movwf	188,c	;volatile
   833   01FD9E                     
   834                           ; BSR set to: 14
   835                           ;dc_motor.c: 27:     T2CONbits.ON=1;
   836   01FD9E  8EBD               	bsf	189,7,c	;volatile
   837                           
   838                           ;dc_motor.c: 31:     CCPR1H=0;
   839   01FDA0  0E00               	movlw	0
   840   01FDA2  6EAA               	movwf	170,c	;volatile
   841                           
   842                           ;dc_motor.c: 32:     CCPR2H=0;
   843   01FDA4  0E00               	movlw	0
   844   01FDA6  6EA6               	movwf	166,c	;volatile
   845                           
   846                           ;dc_motor.c: 33:     CCPR3H=0;
   847   01FDA8  0E00               	movlw	0
   848   01FDAA  010F               	movlb	15	; () banked
   849   01FDAC  6F25               	movwf	37,b	;volatile
   850                           
   851                           ;dc_motor.c: 34:     CCPR4H=0;
   852   01FDAE  0E00               	movlw	0
   853   01FDB0  6F21               	movwf	33,b	;volatile
   854                           
   855                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
   856   01FDB2  0EFC               	movlw	-4
   857   01FDB4  16AD               	andwf	173,f,c	;volatile
   858                           
   859                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
   860   01FDB6  0EF3               	movlw	-13
   861   01FDB8  16AD               	andwf	173,f,c	;volatile
   862                           
   863                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
   864   01FDBA  0ECF               	movlw	-49
   865   01FDBC  16AD               	andwf	173,f,c	;volatile
   866                           
   867                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
   868   01FDBE  0E3F               	movlw	-193
   869   01FDC0  16AD               	andwf	173,f,c	;volatile
   870   01FDC2                     
   871                           ; BSR set to: 15
   872                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
   873   01FDC2  88AB               	bsf	171,4,c	;volatile
   874                           
   875                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
   876   01FDC4  50AB               	movf	171,w,c	;volatile
   877   01FDC6  0BF0               	andlw	-16
   878   01FDC8  090C               	iorlw	12
   879   01FDCA  6EAB               	movwf	171,c	;volatile
   880   01FDCC                     
   881                           ; BSR set to: 15
   882                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
   883   01FDCC  8EAB               	bsf	171,7,c	;volatile
   884   01FDCE                     
   885                           ; BSR set to: 15
   886                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
   887   01FDCE  88A7               	bsf	167,4,c	;volatile
   888                           
   889                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
   890   01FDD0  50A7               	movf	167,w,c	;volatile
   891   01FDD2  0BF0               	andlw	-16
   892   01FDD4  090C               	iorlw	12
   893   01FDD6  6EA7               	movwf	167,c	;volatile
   894   01FDD8                     
   895                           ; BSR set to: 15
   896                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
   897   01FDD8  8EA7               	bsf	167,7,c	;volatile
   898   01FDDA                     
   899                           ; BSR set to: 15
   900                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
   901   01FDDA  8926               	bsf	38,4,b	;volatile
   902                           
   903                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
   904   01FDDC  5126               	movf	38,w,b	;volatile
   905   01FDDE  0BF0               	andlw	-16
   906   01FDE0  090C               	iorlw	12
   907   01FDE2  6F26               	movwf	38,b	;volatile
   908   01FDE4                     
   909                           ; BSR set to: 15
   910                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
   911   01FDE4  8F26               	bsf	38,7,b	;volatile
   912   01FDE6                     
   913                           ; BSR set to: 15
   914                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
   915   01FDE6  8922               	bsf	34,4,b	;volatile
   916                           
   917                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
   918   01FDE8  5122               	movf	34,w,b	;volatile
   919   01FDEA  0BF0               	andlw	-16
   920   01FDEC  090C               	iorlw	12
   921   01FDEE  6F22               	movwf	34,b	;volatile
   922   01FDF0                     
   923                           ; BSR set to: 15
   924                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
   925   01FDF0  8F22               	bsf	34,7,b	;volatile
   926   01FDF2                     
   927                           ; BSR set to: 15
   928   01FDF2  0012               	return		;funcret
   929   01FDF4                     __end_of_initDCmotorsPWM:
   930                           	callstack 0
   931                           
   932 ;; *************** function _color_read_Blue *****************
   933 ;; Defined at:
   934 ;;		line 57 in file "color.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  tmp             2    9[COMRAM] unsigned int 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2    4[COMRAM] unsigned int 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;Total ram usage:        7 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 2
   955 ;; This function calls:
   956 ;;		_I2C_2_Master_Read
   957 ;;		_I2C_2_Master_RepStart
   958 ;;		_I2C_2_Master_Start
   959 ;;		_I2C_2_Master_Stop
   960 ;;		_I2C_2_Master_Write
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text5
   967   01FCA8                     __ptext5:
   968                           	callstack 0
   969   01FCA8                     _color_read_Blue:
   970                           	callstack 28
   971   01FCA8                     
   972                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
   973   01FCA8  ECA7  F0FD         	call	_I2C_2_Master_Start	;wreg free
   974                           
   975                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
   976   01FCAC  0E52               	movlw	82
   977   01FCAE  ECB6  F0FD         	call	_I2C_2_Master_Write
   978                           
   979                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
   980   01FCB2  0EBA               	movlw	186
   981   01FCB4  ECB6  F0FD         	call	_I2C_2_Master_Write
   982                           
   983                           ;color.c: 63:  I2C_2_Master_RepStart();
   984   01FCB8  ECB1  F0FD         	call	_I2C_2_Master_RepStart	;wreg free
   985                           
   986                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
   987   01FCBC  0E53               	movlw	83
   988   01FCBE  ECB6  F0FD         	call	_I2C_2_Master_Write
   989                           
   990                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
   991   01FCC2  0E01               	movlw	1
   992   01FCC4  EC33  F0FE         	call	_I2C_2_Master_Read
   993   01FCC8  6E07               	movwf	??_color_read_Blue^0,c
   994   01FCCA  5007               	movf	??_color_read_Blue^0,w,c
   995   01FCCC  6E0A               	movwf	color_read_Blue@tmp^0,c
   996   01FCCE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
   997                           
   998                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
   999   01FCD0  0E00               	movlw	0
  1000   01FCD2  EC33  F0FE         	call	_I2C_2_Master_Read
  1001   01FCD6  6E07               	movwf	??_color_read_Blue^0,c
  1002   01FCD8  5007               	movf	??_color_read_Blue^0,w,c
  1003   01FCDA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1004   01FCDC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1005   01FCDE  500A               	movf	color_read_Blue@tmp^0,w,c
  1006   01FCE0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1007   01FCE2  6E0A               	movwf	color_read_Blue@tmp^0,c
  1008   01FCE4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1009   01FCE6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1010   01FCE8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1011                           
  1012                           ;color.c: 67:  I2C_2_Master_Stop();
  1013   01FCEA  ECAC  F0FD         	call	_I2C_2_Master_Stop	;wreg free
  1014   01FCEE                     
  1015                           ;color.c: 68:  return tmp;
  1016   01FCEE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1017   01FCF2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1018   01FCF6  0012               	return		;funcret
  1019   01FCF8                     __end_of_color_read_Blue:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _I2C_2_Master_RepStart *****************
  1023 ;; Defined at:
  1024 ;;		line 33 in file "i2c.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1042 ;;Total ram usage:        0 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 1
  1045 ;; This function calls:
  1046 ;;		_I2C_2_Master_Idle
  1047 ;; This function is called by:
  1048 ;;		_color_read_Blue
  1049 ;;		_color_read_Red
  1050 ;;		_color_read_Green
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text6
  1055   01FB62                     __ptext6:
  1056                           	callstack 0
  1057   01FB62                     _I2C_2_Master_RepStart:
  1058                           	callstack 28
  1059   01FB62                     
  1060                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1061   01FB62  ECF0  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1062   01FB66                     
  1063                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1064   01FB66  010E               	movlb	14	; () banked
  1065   01FB68  83DA               	bsf	218,1,b	;volatile
  1066   01FB6A                     
  1067                           ; BSR set to: 14
  1068   01FB6A  0012               	return		;funcret
  1069   01FB6C                     __end_of_I2C_2_Master_RepStart:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _I2C_2_Master_Read *****************
  1073 ;; Defined at:
  1074 ;;		line 51 in file "i2c.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  ack             1    wreg     unsigned char 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  ack             1    2[COMRAM] unsigned char 
  1079 ;;  tmp             1    3[COMRAM] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      unsigned char 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;Total ram usage:        3 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 1
  1096 ;; This function calls:
  1097 ;;		_I2C_2_Master_Idle
  1098 ;; This function is called by:
  1099 ;;		_color_read_Blue
  1100 ;;		_color_read_Red
  1101 ;;		_color_read_Green
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text7
  1106   01FC66                     __ptext7:
  1107                           	callstack 0
  1108   01FC66                     _I2C_2_Master_Read:
  1109                           	callstack 28
  1110                           
  1111                           ; BSR set to: 14
  1112                           ;incstack = 0
  1113                           ;I2C_2_Master_Read@ack stored from wreg
  1114   01FC66  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1115   01FC68                     
  1116                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1117   01FC68  ECF0  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1118   01FC6C                     
  1119                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1120   01FC6C  010E               	movlb	14	; () banked
  1121   01FC6E  87DA               	bsf	218,3,b	;volatile
  1122                           
  1123                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1124   01FC70  ECF0  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1125   01FC74                     
  1126                           ;i2c.c: 57:   tmp = SSP2BUF;
  1127   01FC74  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1128                           
  1129                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1130   01FC78  ECF0  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1131   01FC7C                     
  1132                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1133   01FC7C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1134   01FC7E  B4D8               	btfsc	status,2,c
  1135   01FC80  EF44  F0FE         	goto	u31
  1136   01FC84  EF48  F0FE         	goto	u30
  1137   01FC88                     u31:
  1138   01FC88  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1139   01FC8A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1140   01FC8C  EF49  F0FE         	goto	u48
  1141   01FC90                     u30:
  1142   01FC90  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1143   01FC92                     u48:
  1144   01FC92  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1145   01FC94  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1146   01FC96  010E               	movlb	14	; () banked
  1147   01FC98  51DA               	movf	218,w,b	;volatile
  1148   01FC9A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1149   01FC9C  0BDF               	andlw	-33
  1150   01FC9E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1151   01FCA0  6FDA               	movwf	218,b	;volatile
  1152   01FCA2                     
  1153                           ; BSR set to: 14
  1154                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1155   01FCA2  89DA               	bsf	218,4,b	;volatile
  1156   01FCA4                     
  1157                           ; BSR set to: 14
  1158                           ;i2c.c: 61:   return tmp;
  1159   01FCA4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1160   01FCA6                     
  1161                           ; BSR set to: 14
  1162   01FCA6  0012               	return		;funcret
  1163   01FCA8                     __end_of_I2C_2_Master_Read:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _color_click_init *****************
  1167 ;; Defined at:
  1168 ;;		line 5 in file "color.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;Total ram usage:        1 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 3
  1189 ;; This function calls:
  1190 ;;		_I2C_2_Master_Init
  1191 ;;		_color_writetoaddr
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text8
  1198   01FC32                     __ptext8:
  1199                           	callstack 0
  1200   01FC32                     _color_click_init:
  1201                           	callstack 27
  1202   01FC32                     
  1203                           ;color.c: 8:     I2C_2_Master_Init();
  1204   01FC32  EC04  F0FE         	call	_I2C_2_Master_Init	;wreg free
  1205   01FC36                     
  1206                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1207   01FC36  0E01               	movlw	1
  1208   01FC38  6E03               	movwf	color_writetoaddr@value^0,c
  1209   01FC3A  0E00               	movlw	0
  1210   01FC3C  ECBC  F0FD         	call	_color_writetoaddr
  1211   01FC40                     
  1212                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1213   01FC40  0E3F               	movlw	63
  1214   01FC42  6E05               	movwf	??_color_click_init^0,c
  1215   01FC44  0E55               	movlw	85
  1216   01FC46                     u277:
  1217   01FC46  2EE8               	decfsz	wreg,f,c
  1218   01FC48  D7FE               	bra	u277
  1219   01FC4A  2E05               	decfsz	??_color_click_init^0,f,c
  1220   01FC4C  D7FC               	bra	u277
  1221   01FC4E  F000               	nop	
  1222   01FC50                     
  1223                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1224   01FC50  0E03               	movlw	3
  1225   01FC52  6E03               	movwf	color_writetoaddr@value^0,c
  1226   01FC54  0E00               	movlw	0
  1227   01FC56  ECBC  F0FD         	call	_color_writetoaddr
  1228   01FC5A                     
  1229                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1230   01FC5A  0ED5               	movlw	213
  1231   01FC5C  6E03               	movwf	color_writetoaddr@value^0,c
  1232   01FC5E  0E01               	movlw	1
  1233   01FC60  ECBC  F0FD         	call	_color_writetoaddr
  1234   01FC64  0012               	return		;funcret
  1235   01FC66                     __end_of_color_click_init:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function _color_writetoaddr *****************
  1239 ;; Defined at:
  1240 ;;		line 21 in file "color.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  address         1    wreg     unsigned char 
  1243 ;;  value           1    2[COMRAM] unsigned char 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  address         1    3[COMRAM] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1255 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;Total ram usage:        2 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 2
  1262 ;; This function calls:
  1263 ;;		_I2C_2_Master_Start
  1264 ;;		_I2C_2_Master_Stop
  1265 ;;		_I2C_2_Master_Write
  1266 ;; This function is called by:
  1267 ;;		_color_click_init
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text9
  1272   01FB78                     __ptext9:
  1273                           	callstack 0
  1274   01FB78                     _color_writetoaddr:
  1275                           	callstack 27
  1276                           
  1277                           ;incstack = 0
  1278                           ;color_writetoaddr@address stored from wreg
  1279   01FB78  6E04               	movwf	color_writetoaddr@address^0,c
  1280   01FB7A                     
  1281                           ;color.c: 22:     I2C_2_Master_Start();
  1282   01FB7A  ECA7  F0FD         	call	_I2C_2_Master_Start	;wreg free
  1283                           
  1284                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1285   01FB7E  0E52               	movlw	82
  1286   01FB80  ECB6  F0FD         	call	_I2C_2_Master_Write
  1287                           
  1288                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1289   01FB84  5004               	movf	color_writetoaddr@address^0,w,c
  1290   01FB86  0980               	iorlw	128
  1291   01FB88  ECB6  F0FD         	call	_I2C_2_Master_Write
  1292                           
  1293                           ;color.c: 25:     I2C_2_Master_Write(value);
  1294   01FB8C  5003               	movf	color_writetoaddr@value^0,w,c
  1295   01FB8E  ECB6  F0FD         	call	_I2C_2_Master_Write
  1296                           
  1297                           ;color.c: 26:     I2C_2_Master_Stop();
  1298   01FB92  ECAC  F0FD         	call	_I2C_2_Master_Stop	;wreg free
  1299   01FB96  0012               	return		;funcret
  1300   01FB98                     __end_of_color_writetoaddr:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _I2C_2_Master_Write *****************
  1304 ;; Defined at:
  1305 ;;		line 45 in file "i2c.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  data_byte       1    wreg     unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  data_byte       1    1[COMRAM] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 1
  1326 ;; This function calls:
  1327 ;;		_I2C_2_Master_Idle
  1328 ;; This function is called by:
  1329 ;;		_color_writetoaddr
  1330 ;;		_color_read_Blue
  1331 ;;		_color_read_Red
  1332 ;;		_color_read_Green
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text10
  1337   01FB6C                     __ptext10:
  1338                           	callstack 0
  1339   01FB6C                     _I2C_2_Master_Write:
  1340                           	callstack 28
  1341                           
  1342                           ;incstack = 0
  1343                           ;I2C_2_Master_Write@data_byte stored from wreg
  1344   01FB6C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1345   01FB6E                     
  1346                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1347   01FB6E  ECF0  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1348   01FB72                     
  1349                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1350   01FB72  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1351   01FB76  0012               	return		;funcret
  1352   01FB78                     __end_of_I2C_2_Master_Write:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _I2C_2_Master_Stop *****************
  1356 ;; Defined at:
  1357 ;;		line 39 in file "i2c.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 1
  1378 ;; This function calls:
  1379 ;;		_I2C_2_Master_Idle
  1380 ;; This function is called by:
  1381 ;;		_color_writetoaddr
  1382 ;;		_color_read_Blue
  1383 ;;		_color_read_Red
  1384 ;;		_color_read_Green
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text11
  1389   01FB58                     __ptext11:
  1390                           	callstack 0
  1391   01FB58                     _I2C_2_Master_Stop:
  1392                           	callstack 28
  1393   01FB58                     
  1394                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1395   01FB58  ECF0  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1396   01FB5C                     
  1397                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1398   01FB5C  010E               	movlb	14	; () banked
  1399   01FB5E  85DA               	bsf	218,2,b	;volatile
  1400   01FB60                     
  1401                           ; BSR set to: 14
  1402   01FB60  0012               	return		;funcret
  1403   01FB62                     __end_of_I2C_2_Master_Stop:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _I2C_2_Master_Start *****************
  1407 ;; Defined at:
  1408 ;;		line 27 in file "i2c.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 1
  1429 ;; This function calls:
  1430 ;;		_I2C_2_Master_Idle
  1431 ;; This function is called by:
  1432 ;;		_color_writetoaddr
  1433 ;;		_color_read_Blue
  1434 ;;		_color_read_Red
  1435 ;;		_color_read_Green
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text12
  1440   01FB4E                     __ptext12:
  1441                           	callstack 0
  1442   01FB4E                     _I2C_2_Master_Start:
  1443                           	callstack 28
  1444   01FB4E                     
  1445                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1446   01FB4E  ECF0  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1447   01FB52                     
  1448                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1449   01FB52  010E               	movlb	14	; () banked
  1450   01FB54  81DA               	bsf	218,0,b	;volatile
  1451   01FB56                     
  1452                           ; BSR set to: 14
  1453   01FB56  0012               	return		;funcret
  1454   01FB58                     __end_of_I2C_2_Master_Start:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _I2C_2_Master_Idle *****************
  1458 ;; Defined at:
  1459 ;;		line 22 in file "i2c.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;Total ram usage:        1 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_I2C_2_Master_Start
  1483 ;;		_I2C_2_Master_RepStart
  1484 ;;		_I2C_2_Master_Stop
  1485 ;;		_I2C_2_Master_Write
  1486 ;;		_I2C_2_Master_Read
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text13
  1491   01FBE0                     __ptext13:
  1492                           	callstack 0
  1493   01FBE0                     _I2C_2_Master_Idle:
  1494                           	callstack 28
  1495   01FBE0                     l137:
  1496   01FBE0  010E               	movlb	14	; () banked
  1497   01FBE2  B5D8               	btfsc	216,2,b	;volatile
  1498   01FBE4  EFF6  F0FD         	goto	u11
  1499   01FBE8  EFF8  F0FD         	goto	u10
  1500   01FBEC                     u11:
  1501   01FBEC  EFF0  F0FD         	goto	l137
  1502   01FBF0                     u10:
  1503   01FBF0                     
  1504                           ; BSR set to: 14
  1505   01FBF0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1506   01FBF4  0E1F               	movlw	31
  1507   01FBF6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  1508   01FBF8  A4D8               	btfss	status,2,c
  1509   01FBFA  EF01  F0FE         	goto	u21
  1510   01FBFE  EF03  F0FE         	goto	u20
  1511   01FC02                     u21:
  1512   01FC02  EFF0  F0FD         	goto	l137
  1513   01FC06                     u20:
  1514   01FC06                     
  1515                           ; BSR set to: 14
  1516   01FC06  0012               	return		;funcret
  1517   01FC08                     __end_of_I2C_2_Master_Idle:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _I2C_2_Master_Init *****************
  1521 ;; Defined at:
  1522 ;;		line 4 in file "i2c.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_color_click_init
  1546 ;;		_main
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text14
  1551   01FC08                     __ptext14:
  1552                           	callstack 0
  1553   01FC08                     _I2C_2_Master_Init:
  1554                           	callstack 29
  1555   01FC08                     
  1556                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1557   01FC08  010E               	movlb	14	; () banked
  1558   01FC0A  51D9               	movf	217,w,b	;volatile
  1559   01FC0C  0BF0               	andlw	-16
  1560   01FC0E  0908               	iorlw	8
  1561   01FC10  6FD9               	movwf	217,b	;volatile
  1562   01FC12                     
  1563                           ; BSR set to: 14
  1564                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1565   01FC12  8BD9               	bsf	217,5,b	;volatile
  1566                           
  1567                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1568   01FC14  0E9F               	movlw	159
  1569   01FC16  6FD6               	movwf	214,b	;volatile
  1570   01FC18                     
  1571                           ; BSR set to: 14
  1572                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1573   01FC18  8A84               	bsf	132,5,c	;volatile
  1574   01FC1A                     
  1575                           ; BSR set to: 14
  1576                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1577   01FC1A  8C84               	bsf	132,6,c	;volatile
  1578   01FC1C                     
  1579                           ; BSR set to: 14
  1580                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1581   01FC1C  9BA7               	bcf	167,5,b	;volatile
  1582   01FC1E                     
  1583                           ; BSR set to: 14
  1584                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1585   01FC1E  9DA7               	bcf	167,6,b	;volatile
  1586                           
  1587                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1588   01FC20  0E1D               	movlw	29
  1589   01FC22  6F1D               	movwf	29,b	;volatile
  1590                           
  1591                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1592   01FC24  0E1E               	movlw	30
  1593   01FC26  6F1C               	movwf	28,b	;volatile
  1594                           
  1595                           ;i2c.c: 18:   RD5PPS=0x1C;
  1596   01FC28  0E1C               	movlw	28
  1597   01FC2A  6F6F               	movwf	111,b	;volatile
  1598                           
  1599                           ;i2c.c: 19:   RD6PPS=0x1B;
  1600   01FC2C  0E1B               	movlw	27
  1601   01FC2E  6F70               	movwf	112,b	;volatile
  1602   01FC30                     
  1603                           ; BSR set to: 14
  1604   01FC30  0012               	return		;funcret
  1605   01FC32                     __end_of_I2C_2_Master_Init:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _LEDSon_init *****************
  1609 ;; Defined at:
  1610 ;;		line 18 in file "LEDsOn.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		None
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text15
  1638   01FB98                     __ptext15:
  1639                           	callstack 0
  1640   01FB98                     _LEDSon_init:
  1641                           	callstack 30
  1642   01FB98                     
  1643                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  1644   01FB98  9288               	bcf	136,1,c	;volatile
  1645                           
  1646                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  1647   01FB9A  9088               	bcf	136,0,c	;volatile
  1648                           
  1649                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  1650   01FB9C  9884               	bcf	132,4,c	;volatile
  1651                           
  1652                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  1653   01FB9E  9684               	bcf	132,3,c	;volatile
  1654                           
  1655                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  1656   01FBA0  9086               	bcf	134,0,c	;volatile
  1657                           
  1658                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  1659   01FBA2  9287               	bcf	135,1,c	;volatile
  1660                           
  1661                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  1662   01FBA4  9E86               	bcf	134,7,c	;volatile
  1663                           
  1664                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  1665   01FBA6  9881               	bcf	129,4,c	;volatile
  1666                           
  1667                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  1668   01FBA8  8E7E               	bsf	126,7,c	;volatile
  1669                           
  1670                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  1671   01FBAA  827F               	bsf	127,1,c	;volatile
  1672                           
  1673                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  1674   01FBAC  8879               	bsf	121,4,c	;volatile
  1675                           
  1676                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  1677   01FBAE  987C               	bcf	124,4,c	;volatile
  1678                           
  1679                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  1680   01FBB0  9280               	bcf	128,1,c	;volatile
  1681                           
  1682                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  1683   01FBB2  907E               	bcf	126,0,c	;volatile
  1684                           
  1685                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  1686   01FBB4  9080               	bcf	128,0,c	;volatile
  1687                           
  1688                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  1689   01FBB6  967C               	bcf	124,3,c	;volatile
  1690   01FBB8  0012               	return		;funcret
  1691   01FBBA                     __end_of_LEDSon_init:
  1692                           	callstack 0
  1693   000000                     
  1694                           	psect	rparam
  1695   000000                     
  1696                           	psect	idloc
  1697                           
  1698                           ;Config register IDLOC0 @ 0x200000
  1699                           ;	unspecified, using default values
  1700   200000                     	org	2097152
  1701   200000  0FFF               	dw	4095
  1702                           
  1703                           ;Config register IDLOC1 @ 0x200002
  1704                           ;	unspecified, using default values
  1705   200002                     	org	2097154
  1706   200002  0FFF               	dw	4095
  1707                           
  1708                           ;Config register IDLOC2 @ 0x200004
  1709                           ;	unspecified, using default values
  1710   200004                     	org	2097156
  1711   200004  0FFF               	dw	4095
  1712                           
  1713                           ;Config register IDLOC3 @ 0x200006
  1714                           ;	unspecified, using default values
  1715   200006                     	org	2097158
  1716   200006  0FFF               	dw	4095
  1717                           
  1718                           ;Config register IDLOC4 @ 0x200008
  1719                           ;	unspecified, using default values
  1720   200008                     	org	2097160
  1721   200008  0FFF               	dw	4095
  1722                           
  1723                           ;Config register IDLOC5 @ 0x20000A
  1724                           ;	unspecified, using default values
  1725   20000A                     	org	2097162
  1726   20000A  0FFF               	dw	4095
  1727                           
  1728                           ;Config register IDLOC6 @ 0x20000C
  1729                           ;	unspecified, using default values
  1730   20000C                     	org	2097164
  1731   20000C  0FFF               	dw	4095
  1732                           
  1733                           ;Config register IDLOC7 @ 0x20000E
  1734                           ;	unspecified, using default values
  1735   20000E                     	org	2097166
  1736   20000E  0FFF               	dw	4095
  1737                           
  1738                           	psect	config
  1739                           
  1740                           ;Config register CONFIG1L @ 0x300000
  1741                           ;	External Oscillator mode Selection bits
  1742                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1743                           ;	Power-up default value for COSC bits
  1744                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1745   300000                     	org	3145728
  1746   300000  AA                 	db	170
  1747                           
  1748                           ;Config register CONFIG1H @ 0x300001
  1749                           ;	unspecified, using default values
  1750                           ;	Clock Out Enable bit
  1751                           ;	CLKOUTEN = 0x1, unprogrammed default
  1752                           ;	Clock Switch Enable bit
  1753                           ;	CSWEN = 0x1, unprogrammed default
  1754                           ;	Fail-Safe Clock Monitor Enable bit
  1755                           ;	FCMEN = 0x1, unprogrammed default
  1756   300001                     	org	3145729
  1757   300001  FF                 	db	255
  1758                           
  1759                           ;Config register CONFIG2L @ 0x300002
  1760                           ;	unspecified, using default values
  1761                           ;	Master Clear Enable bit
  1762                           ;	MCLRE = 0x1, unprogrammed default
  1763                           ;	Power-up Timer Enable bit
  1764                           ;	PWRTE = 0x1, unprogrammed default
  1765                           ;	Low-power BOR enable bit
  1766                           ;	LPBOREN = 0x1, unprogrammed default
  1767                           ;	Brown-out Reset Enable bits
  1768                           ;	BOREN = 0x3, unprogrammed default
  1769   300002                     	org	3145730
  1770   300002  FF                 	db	255
  1771                           
  1772                           ;Config register CONFIG2H @ 0x300003
  1773                           ;	unspecified, using default values
  1774                           ;	Brown Out Reset Voltage selection bits
  1775                           ;	BORV = 0x3, unprogrammed default
  1776                           ;	ZCD Disable bit
  1777                           ;	ZCD = 0x1, unprogrammed default
  1778                           ;	PPSLOCK bit One-Way Set Enable bit
  1779                           ;	PPS1WAY = 0x1, unprogrammed default
  1780                           ;	Stack Full/Underflow Reset Enable bit
  1781                           ;	STVREN = 0x1, unprogrammed default
  1782                           ;	Debugger Enable bit
  1783                           ;	DEBUG = 0x1, unprogrammed default
  1784                           ;	Extended Instruction Set Enable bit
  1785                           ;	XINST = 0x1, unprogrammed default
  1786   300003                     	org	3145731
  1787   300003  FF                 	db	255
  1788                           
  1789                           ;Config register CONFIG3L @ 0x300004
  1790                           ;	WDT Period Select bits
  1791                           ;	WDTCPS = 0x1F, unprogrammed default
  1792                           ;	WDT operating mode
  1793                           ;	WDTE = OFF, WDT Disabled
  1794   300004                     	org	3145732
  1795   300004  9F                 	db	159
  1796                           
  1797                           ;Config register CONFIG3H @ 0x300005
  1798                           ;	unspecified, using default values
  1799                           ;	WDT Window Select bits
  1800                           ;	WDTCWS = 0x7, unprogrammed default
  1801                           ;	WDT input clock selector
  1802                           ;	WDTCCS = 0x7, unprogrammed default
  1803   300005                     	org	3145733
  1804   300005  FF                 	db	255
  1805                           
  1806                           ;Config register CONFIG4L @ 0x300006
  1807                           ;	unspecified, using default values
  1808                           ;	Write Protection Block 0
  1809                           ;	WRT0 = 0x1, unprogrammed default
  1810                           ;	Write Protection Block 1
  1811                           ;	WRT1 = 0x1, unprogrammed default
  1812                           ;	Write Protection Block 2
  1813                           ;	WRT2 = 0x1, unprogrammed default
  1814                           ;	Write Protection Block 3
  1815                           ;	WRT3 = 0x1, unprogrammed default
  1816                           ;	Write Protection Block 3
  1817                           ;	WRT4 = 0x1, unprogrammed default
  1818                           ;	Write Protection Block 3
  1819                           ;	WRT5 = 0x1, unprogrammed default
  1820                           ;	Write Protection Block 3
  1821                           ;	WRT6 = 0x1, unprogrammed default
  1822                           ;	Write Protection Block 3
  1823                           ;	WRT7 = 0x1, unprogrammed default
  1824   300006                     	org	3145734
  1825   300006  FF                 	db	255
  1826                           
  1827                           ;Config register CONFIG4H @ 0x300007
  1828                           ;	unspecified, using default values
  1829                           ;	Configuration Register Write Protection bit
  1830                           ;	WRTC = 0x1, unprogrammed default
  1831                           ;	Boot Block Write Protection bit
  1832                           ;	WRTB = 0x1, unprogrammed default
  1833                           ;	Data EEPROM Write Protection bit
  1834                           ;	WRTD = 0x1, unprogrammed default
  1835                           ;	Scanner Enable bit
  1836                           ;	SCANE = 0x1, unprogrammed default
  1837                           ;	Low Voltage Programming Enable bit
  1838                           ;	LVP = 0x1, unprogrammed default
  1839   300007                     	org	3145735
  1840   300007  FF                 	db	255
  1841                           
  1842                           ;Config register CONFIG5L @ 0x300008
  1843                           ;	unspecified, using default values
  1844                           ;	UserNVM Program Memory Code Protection bit
  1845                           ;	CP = 0x1, unprogrammed default
  1846                           ;	DataNVM Memory Code Protection bit
  1847                           ;	CPD = 0x1, unprogrammed default
  1848   300008                     	org	3145736
  1849   300008  FF                 	db	255
  1850                           
  1851                           ;Config register CONFIG5H @ 0x300009
  1852                           ;	unspecified, using default values
  1853   300009                     	org	3145737
  1854   300009  FF                 	db	255
  1855                           
  1856                           ;Config register CONFIG6L @ 0x30000A
  1857                           ;	unspecified, using default values
  1858                           ;	Table Read Protection Block 0
  1859                           ;	EBTR0 = 0x1, unprogrammed default
  1860                           ;	Table Read Protection Block 1
  1861                           ;	EBTR1 = 0x1, unprogrammed default
  1862                           ;	Table Read Protection Block 2
  1863                           ;	EBTR2 = 0x1, unprogrammed default
  1864                           ;	Table Read Protection Block 3
  1865                           ;	EBTR3 = 0x1, unprogrammed default
  1866                           ;	Table Read Protection Block 4
  1867                           ;	EBTR4 = 0x1, unprogrammed default
  1868                           ;	Table Read Protection Block 5
  1869                           ;	EBTR5 = 0x1, unprogrammed default
  1870                           ;	Table Read Protection Block 6
  1871                           ;	EBTR6 = 0x1, unprogrammed default
  1872                           ;	Table Read Protection Block 7
  1873                           ;	EBTR7 = 0x1, unprogrammed default
  1874   30000A                     	org	3145738
  1875   30000A  FF                 	db	255
  1876                           
  1877                           ;Config register CONFIG6H @ 0x30000B
  1878                           ;	unspecified, using default values
  1879                           ;	Boot Block Table Read Protection bit
  1880                           ;	EBTRB = 0x1, unprogrammed default
  1881   30000B                     	org	3145739
  1882   30000B  FF                 	db	255
  1883                           tosu	equ	0xFFF
  1884                           tosh	equ	0xFFE
  1885                           tosl	equ	0xFFD
  1886                           stkptr	equ	0xFFC
  1887                           pclatu	equ	0xFFB
  1888                           pclath	equ	0xFFA
  1889                           pcl	equ	0xFF9
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           indf0	equ	0xFEF
  1897                           postinc0	equ	0xFEE
  1898                           postdec0	equ	0xFED
  1899                           preinc0	equ	0xFEC
  1900                           plusw0	equ	0xFEB
  1901                           fsr0h	equ	0xFEA
  1902                           fsr0l	equ	0xFE9
  1903                           wreg	equ	0xFE8
  1904                           indf1	equ	0xFE7
  1905                           postinc1	equ	0xFE6
  1906                           postdec1	equ	0xFE5
  1907                           preinc1	equ	0xFE4
  1908                           plusw1	equ	0xFE3
  1909                           fsr1h	equ	0xFE2
  1910                           fsr1l	equ	0xFE1
  1911                           bsr	equ	0xFE0
  1912                           indf2	equ	0xFDF
  1913                           postinc2	equ	0xFDE
  1914                           postdec2	equ	0xFDD
  1915                           preinc2	equ	0xFDC
  1916                           plusw2	equ	0xFDB
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S523DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S523DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), main@motorL(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    2589
                                             19 COMRAM    21    21      0
                  _I2C_2_Master_Init
                        _LEDSon_init
                   _color_click_init
                    _color_read_Blue
                    _initDCmotorsPWM
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     28      28       1       42.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRhhlll      1D      0       0      36        0.0%
BITBIGSFRllhhhh      1      0       0      37        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRllhhhh     52      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      41        0.0%
BITBIGSFRllhhhl     46      0       0      42        0.0%
BITBIGSFRllhhhl      1      0       0      43        0.0%
BITBIGSFRllhhhl     2D      0       0      44        0.0%
BITBIGSFRllhhhl     1E      0       0      45        0.0%
BITBIGSFRllhhl      11      0       0      46        0.0%
BITBIGSFRllhl        1      0       0      47        0.0%
BITBIGSFRlllhh       3      0       0      48        0.0%
BITBIGSFRlllhl       5      0       0      49        0.0%
BITBIGSFRllllh      4B      0       0      50        0.0%
BITBIGSFRlllll      2D      0       0      51        0.0%
ABS                  0      0       0      52        0.0%
BIGRAM             DE9      0       0      53        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 28 10:52:50 2022

              _color_read_Blue FCA8                             l22 FB96                             l31 FCF6  
                           l19 FC64                             l83 FFFE                             l76 FDF2  
                           u10 FBF0                             u11 FBEC                             u20 FC06  
                           u21 FC02                             u30 FC90                             u31 FC88  
                           u48 FC92            ___wmul@multiplicand 0003                            l140 FC06  
                          l134 FC30                            l215 FBB8                            l143 FB56  
                          l152 FB76                            l137 FBE0                            l146 FB6A  
                          l218 FBDE                            l155 FCA6                            l149 FB60  
                          l189 FE8A                            l716 FD6A                            l901 FB72  
                          l709 FD62                            l911 FC18                            l903 FB58  
                          l913 FC1A                            l905 FB5C                            l921 FB62  
                          l915 FC1C                            l907 FC08                            l931 FC7C  
                          l923 FB66                            l917 FC1E                            l909 FC12  
                          l933 FCA2                            l925 FC68                            l935 FCA4  
                          l927 FC6C                            l929 FC74                            l891 FBE0  
                          l893 FBF0                            l895 FB4E                            l991 FDCC  
                          l983 FD6C                            l897 FB52                            l993 FDCE  
                          l985 FD74                            l899 FB6E                            l995 FDD8  
                          l987 FD9E                            l997 FDDA                            l989 FDC2  
                          l999 FDE4                            u200 FF7A                            u201 FF76  
                          u160 FD12                            u161 FD0E                            u170 FD30  
                          u171 FD2C                            u180 FD4C                            u260 FE88  
                          u181 FD48                            u261 FE84                            u190 FEB0  
                          u191 FEAC                            u277 FC46                            wreg 000FE8  
                         l1001 FDE6                           l1003 FDF0                           l1021 FB98  
                         l1201 FF04                           l1211 FFBE                           l1203 FF18  
                         l1205 FF1C                           l1301 FE2A                           l1151 FB7A  
                         l1207 FF5E                           l1311 FE58                           l1303 FE2E  
                         l1161 FD00                           l1153 FBBA                           l1209 FF7A  
                         l1321 FE64                           l1313 FE64                           l1305 FE32  
                         l1171 FD36                           l1163 FD12                           l1155 FBD6  
                         l1331 FE88                           l1323 FE66                           l1315 FE64  
                         l1307 FE46                           l1181 FC32                           l1173 FD4C  
                         l1165 FD1A                           l1325 FE68                           l1317 FE64  
                         l1309 FE4C                           l1183 FC36                           l1191 FCA8  
                         l1175 FD54                           l1167 FD22                           l1159 FCF8  
                         l1327 FE6A                           l1319 FE64                           l1185 FC40  
                         l1193 FCEE                           l1177 FD56                           l1169 FD30  
                         l1329 FE76                           l1281 FDF8                           l1187 FC50  
                         l1179 FD5C                           l1291 FE0C                           l1283 FDFC  
                         l1189 FC5A                           l1197 FE94                           l1293 FE10  
                         l1285 FE00                           l1199 FEB0                           l1295 FE14  
                         l1287 FE04                           l1279 FDF4                           l1297 FE1C  
                         l1289 FE08                           l1299 FE24                   ?_LEDSon_init 0001  
                         _T2PR 000FBC                           _main FDF4                           fsr2h 000FDA  
                         indf2 000FDF                           fsr2l 000FD9                           prodh 000FF4  
                         prodl 000FF3                           start 0002                   ___param_bank 000000  
                        ?_main 0001                __end_of___lwdiv FD6C     __end_of_I2C_2_Master_Start FB58  
   __end_of_I2C_2_Master_Write FB78                          status 000FD8        __end_of_color_read_Blue FCF8  
        _I2C_2_Master_RepStart FB62                __initialization FB48                   __end_of_main FE94  
                       ??_main 0014                  __activetblptr 000000                   ?_setMotorPWM 000E  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RD6PPS 000E70                         _RE4PPS 000E76  
                       _RG6PPS 000E88       __end_of_color_click_init FC66                   _CCPTMRS0bits 000FAD  
                       ___wmul FBBA                      ??___lwdiv 000B                         isa$std 000001  
            ??_initDCmotorsPWM 0001                     __accesstop 0060        __end_of__initialization FB48  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001              _color_writetoaddr FB78                   _T2CLKCONbits 000FBF  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_writetoaddr 0004  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5         color_writetoaddr@value 0003  
    __end_of_color_writetoaddr FB98             _I2C_2_Master_Start FB4E             _I2C_2_Master_Write FB6C  
                      __Hparam 0000                        __Lparam 0000            ?_I2C_2_Master_Start 0001  
                      ___lwdiv FCF8            ?_I2C_2_Master_Write 0001                        __pcinit FB48  
                      __ramtop 0E00                        __ptext0 FDF4                        __ptext1 FE94  
                      __ptext2 FBBA                        __ptext3 FCF8                        __ptext4 FD6C  
                      __ptext5 FCA8                        __ptext6 FB62                        __ptext7 FC66  
                      __ptext8 FC32                        __ptext9 FB78                      _T2CONbits 000FBD  
                    _T2HLTbits 000FBE           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization FB48              ?_color_click_init 0001             ??_color_click_init 0005  
                      postdec2 000FDD                        postinc2 000FDE                _initDCmotorsPWM FD6C  
           setMotorPWM@negDuty 0013                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    _CCP1CONbits 000FAB  
                  _CCP2CONbits 000FA7                    _CCP3CONbits 000F26                    _CCP4CONbits 000F22  
                   main@motorL 0017                     main@motorR 0020                 __end_of___wmul FBE0  
          start_initialization FB48                  ??_LEDSon_init 0001        __end_of_initDCmotorsPWM FDF4  
                     ??___wmul 0005            __end_of_LEDSon_init FBBA               ___lwdiv@dividend 0007  
                     ?___lwdiv 0007           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
            _I2C_2_Master_Idle FBE0              _I2C_2_Master_Init FC08              _I2C_2_Master_Read FC66  
            _I2C_2_Master_Stop FB58             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80               ?_initDCmotorsPWM 0001  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8      __end_of_I2C_2_Master_Idle FC08  
    __end_of_I2C_2_Master_Init FC32      __end_of_I2C_2_Master_Read FCA8              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop FB62                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                    _LEDSon_init FB98  __end_of_I2C_2_Master_RepStart FB6C  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 0000                       __Hrparam 0000  
                     __Lrparam 0000                     _ANSELDbits 000EA7                ___lwdiv@divisor 0009  
              ___lwdiv@counter 000D                       __ptext10 FB6C                       __ptext11 FB58  
                     __ptext12 FB4E                       __ptext13 FBE0                       __ptext14 FC08  
                     __ptext15 FB98                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     isa$xinst 000000                       main@blue 0014                    _setMotorPWM FE94  
             _color_click_init FC32                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                 main@PWMcycle 0016  
