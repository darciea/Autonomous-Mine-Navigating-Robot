

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 14:11:56 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Version 2.35
    50                           ; Generated 05/05/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataBANK0
    86   001CC4                     __pidataBANK0:
    87                           	callstack 0
    88                           
    89                           ;initializer for main@F14639
    90   001CC4  11                 	db	17
    91   001CC5  02                 	db	2
    92   001CC6  0C                 	db	12
    93   001CC7  0C                 	db	12
    94   001CC8  0A                 	db	10
    95   001CC9  0B                 	db	11
    96   001CCA  0C                 	db	12
    97   001CCB  0E                 	db	14
    98   001CCC  10                 	db	16
    99   000000                     _TX4REG	set	3812
   100   000000                     _RC4STAbits	set	3815
   101   000000                     _SP4BRGH	set	3814
   102   000000                     _LATHbits	set	3968
   103   000000                     _LATGbits	set	3967
   104   000000                     _TRISFbits	set	3974
   105   000000                     _TRISDbits	set	3972
   106   000000                     _TRISGbits	set	3975
   107   000000                     _SSP2CON2bits	set	3802
   108   000000                     _RX4PPS	set	3605
   109   000000                     _SSP2CLKPPS	set	3612
   110   000000                     _SSP2DATPPS	set	3613
   111   000000                     _RC7PPS	set	3689
   112   000000                     _RE2PPS	set	3700
   113   000000                     _TRISCbits	set	3971
   114   000000                     _TRISEbits	set	3973
   115   000000                     _TRISHbits	set	3976
   116   000000                     _T2PR	set	4028
   117   000000                     _T2CONbits	set	4029
   118   000000                     _CCPR2H	set	4006
   119   000000                     _CCPR1H	set	4010
   120   000000                     _RE4PPS	set	3702
   121   000000                     _RG6PPS	set	3720
   122   000000                     _RD5PPS	set	3695
   123   000000                     _ANSELDbits	set	3751
   124   000000                     _SSP2ADD	set	3798
   125   000000                     _SSP2CON1bits	set	3801
   126   000000                     _CCPR4H	set	3873
   127   000000                     _CCPR3H	set	3877
   128   000000                     _T2CLKCONbits	set	4031
   129   000000                     _T2HLTbits	set	4030
   130   000000                     _CCP1CONbits	set	4011
   131   000000                     _CCPTMRS0bits	set	4013
   132   000000                     _CCP2CONbits	set	4007
   133   000000                     _LATAbits	set	3961
   134   000000                     _LATDbits	set	3964
   135   000000                     _CCP3CONbits	set	3878
   136   000000                     _CCP4CONbits	set	3874
   137   000000                     _RC4REG	set	3811
   138   000000                     _SP4BRGL	set	3813
   139   000000                     _TX4STAbits	set	3816
   140   000000                     _BAUD4CONbits	set	3817
   141   000000                     _SSP2CON2	set	3802
   142   000000                     _SSP2STAT	set	3800
   143   000000                     _SSP2BUF	set	3797
   144   000000                     _PIE4bits	set	3629
   145   000000                     _PIR4bits	set	3639
   146   000000                     _RC0PPS	set	3682
   147   000000                     _RD6PPS	set	3696
   148   000000                     _LATFbits	set	3966
   149   000000                     _TRISAbits	set	3969
   150                           
   151                           	psect	smallconst
   152   000E00                     __psmallconst:
   153                           	callstack 0
   154   000E00  00                 	db	0
   155   000E01                     STR_1:
   156   000E01  52                 	db	82	;'R'
   157   000E02  65                 	db	101	;'e'
   158   000E03  64                 	db	100	;'d'
   159   000E04  20                 	db	32
   160   000E05  72                 	db	114	;'r'
   161   000E06  65                 	db	101	;'e'
   162   000E07  61                 	db	97	;'a'
   163   000E08  64                 	db	100	;'d'
   164   000E09  20                 	db	32
   165   000E0A  3D                 	db	61	;'='
   166   000E0B  20                 	db	32
   167   000E0C  25                 	db	37
   168   000E0D  64                 	db	100	;'d'
   169   000E0E  20                 	db	32
   170   000E0F  0A                 	db	10
   171   000E10  00                 	db	0
   172   000E11  00                 	db	0	; dummy byte at the end
   173   000000                     
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177   001A36                     __pcinit:
   178                           	callstack 0
   179   001A36                     start_initialization:
   180                           	callstack 0
   181   001A36                     __initialization:
   182                           	callstack 0
   183                           
   184                           ; Initialize objects allocated to BANK0 (9 bytes)
   185                           ; load TBLPTR registers with __pidataBANK0
   186   001A36  0EC4               	movlw	low __pidataBANK0
   187   001A38  6EF6               	movwf	tblptrl,c
   188   001A3A  0E1C               	movlw	high __pidataBANK0
   189   001A3C  6EF7               	movwf	tblptrh,c
   190   001A3E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   191   001A40  6EF8               	movwf	tblptru,c
   192   001A42  EE00  F0DC         	lfsr	0,__pdataBANK0
   193   001A46  EE10 F009          	lfsr	1,9
   194   001A4A                     copy_data0:
   195   001A4A  0009               	tblrd		*+
   196   001A4C  CFF5 FFEE          	movff	tablat,postinc0
   197   001A50  50E5               	movf	postdec1,w,c
   198   001A52  50E1               	movf	fsr1l,w,c
   199   001A54  E1FA               	bnz	copy_data0
   200                           
   201                           ; Clear objects allocated to BANK1 (60 bytes)
   202   001A56  EE01  F000         	lfsr	0,__pbssBANK1
   203   001A5A  0E3C               	movlw	60
   204   001A5C                     clear_0:
   205   001A5C  6AEE               	clrf	postinc0,c
   206   001A5E  06E8               	decf	wreg,f,c
   207   001A60  E1FD               	bnz	clear_0
   208                           
   209                           ; Clear objects allocated to BANK0 (60 bytes)
   210   001A62  EE00  F0A0         	lfsr	0,__pbssBANK0
   211   001A66  0E3C               	movlw	60
   212   001A68                     clear_1:
   213   001A68  6AEE               	clrf	postinc0,c
   214   001A6A  06E8               	decf	wreg,f,c
   215   001A6C  E1FD               	bnz	clear_1
   216                           
   217                           ; Clear objects allocated to COMRAM (1 bytes)
   218   001A6E  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   219   001A70                     end_of_initialization:
   220                           	callstack 0
   221   001A70                     __end_of__initialization:
   222                           	callstack 0
   223   001A70  0E00               	movlw	low (__Lsmallconst shr (0+16))
   224   001A72  6EF8               	movwf	tblptru,c
   225   001A74  0E0E               	movlw	high __Lsmallconst
   226   001A76  6EF7               	movwf	tblptrh,c
   227   001A78  0100               	movlb	0
   228   001A7A  EF1A  F00B         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   00005F                     __pbssCOMRAM:
   232                           	callstack 0
   233   00005F                     _TxBufWriteCnt:
   234                           	callstack 0
   235   00005F                     	ds	1
   236                           
   237                           	psect	bssBANK0
   238   0000A0                     __pbssBANK0:
   239                           	callstack 0
   240   0000A0                     _EUSART4RXbuf:
   241                           	callstack 0
   242   0000A0                     	ds	20
   243   0000B4                     _width:
   244                           	callstack 0
   245   0000B4                     	ds	2
   246   0000B6                     _prec:
   247                           	callstack 0
   248   0000B6                     	ds	2
   249   0000B8                     _flags:
   250                           	callstack 0
   251   0000B8                     	ds	1
   252   0000B9                     _TxBufReadCnt:
   253                           	callstack 0
   254   0000B9                     	ds	1
   255   0000BA                     _RxBufReadCnt:
   256                           	callstack 0
   257   0000BA                     	ds	1
   258   0000BB                     _RxBufWriteCnt:
   259                           	callstack 0
   260   0000BB                     	ds	1
   261   0000BC                     _dbuf:
   262                           	callstack 0
   263   0000BC                     	ds	32
   264                           
   265                           	psect	dataBANK0
   266   0000DC                     __pdataBANK0:
   267                           	callstack 0
   268   0000DC                     main@F14639:
   269                           	callstack 0
   270   0000DC                     	ds	9
   271                           
   272                           	psect	bssBANK1
   273   000100                     __pbssBANK1:
   274                           	callstack 0
   275   000100                     _EUSART4TXbuf:
   276                           	callstack 0
   277   000100                     	ds	60
   278                           
   279                           	psect	cstackBANK0
   280   000060                     __pcstackBANK0:
   281                           	callstack 0
   282   000060                     sprintf@ap:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x0
   286   000060                     	ds	2
   287   000062                     sprintf@f:
   288                           	callstack 0
   289                           
   290                           ; 11 bytes @ 0x2
   291   000062                     	ds	11
   292   00006D                     main@master_closeness:
   293                           	callstack 0
   294                           
   295                           ; 9 bytes @ 0xD
   296   00006D                     	ds	9
   297   000076                     main@buf:
   298                           	callstack 0
   299                           
   300                           ; 20 bytes @ 0x16
   301   000076                     	ds	20
   302   00008A                     main@green_read:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x2A
   306   00008A                     	ds	1
   307   00008B                     main@blue_read:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x2B
   311   00008B                     	ds	1
   312   00008C                     main@PWMcycle:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x2C
   316   00008C                     	ds	1
   317   00008D                     main@red_read:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x2D
   321   00008D                     	ds	1
   322   00008E                     main@motorL:
   323                           	callstack 0
   324                           
   325                           ; 9 bytes @ 0x2E
   326   00008E                     	ds	9
   327   000097                     main@motorR:
   328                           	callstack 0
   329                           
   330                           ; 9 bytes @ 0x37
   331   000097                     	ds	9
   332                           
   333                           	psect	cstackCOMRAM
   334   000001                     __pcstackCOMRAM:
   335                           	callstack 0
   336   000001                     ??_I2C_2_Master_Idle:
   337   000001                     ?___wmul:
   338                           	callstack 0
   339   000001                     ?___aodiv:
   340                           	callstack 0
   341   000001                     ?___aomod:
   342                           	callstack 0
   343   000001                     sendCharSerial4@charToSend:
   344                           	callstack 0
   345   000001                     ___wmul@multiplier:
   346                           	callstack 0
   347   000001                     fputc@c:
   348                           	callstack 0
   349   000001                     ___aodiv@dividend:
   350                           	callstack 0
   351   000001                     ___aomod@dividend:
   352                           	callstack 0
   353                           
   354                           ; 8 bytes @ 0x0
   355   000001                     	ds	1
   356   000002                     ??_I2C_2_Master_Read:
   357   000002                     I2C_2_Master_Write@data_byte:
   358                           	callstack 0
   359   000002                     sendStringSerial4@string:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x1
   363   000002                     	ds	1
   364   000003                     color_writetoaddr@value:
   365                           	callstack 0
   366   000003                     I2C_2_Master_Read@ack:
   367                           	callstack 0
   368   000003                     ___wmul@multiplicand:
   369                           	callstack 0
   370   000003                     fputc@fp:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x2
   374   000003                     	ds	1
   375   000004                     color_writetoaddr@address:
   376                           	callstack 0
   377   000004                     I2C_2_Master_Read@tmp:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x3
   381   000004                     	ds	1
   382   000005                     ??_fputc:
   383   000005                     ??_color_click_init:
   384   000005                     ?_color_read_Red:
   385                           	callstack 0
   386   000005                     ___wmul@product:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x4
   390   000005                     	ds	2
   391   000007                     ??_color_read_Red:
   392   000007                     ?___lwdiv:
   393                           	callstack 0
   394   000007                     ___lwdiv@dividend:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x6
   398   000007                     	ds	2
   399   000009                     ___lwdiv@divisor:
   400                           	callstack 0
   401   000009                     ___aodiv@divisor:
   402                           	callstack 0
   403   000009                     ___aomod@divisor:
   404                           	callstack 0
   405                           
   406                           ; 8 bytes @ 0x8
   407   000009                     	ds	1
   408   00000A                     color_read_Red@tmp:
   409                           	callstack 0
   410   00000A                     fputs@s:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x9
   414   00000A                     	ds	1
   415   00000B                     ___lwdiv@quotient:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xA
   419   00000B                     	ds	1
   420   00000C                     fputs@fp:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0xB
   424   00000C                     	ds	1
   425   00000D                     ___lwdiv@counter:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0xC
   429   00000D                     	ds	1
   430   00000E                     fputs@c:
   431                           	callstack 0
   432   00000E                     setMotorPWM@m:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xD
   436   00000E                     	ds	1
   437   00000F                     fputs@i:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0xE
   441   00000F                     	ds	1
   442   000010                     ??_setMotorPWM:
   443                           
   444                           ; 1 bytes @ 0xF
   445   000010                     	ds	1
   446   000011                     ___aodiv@counter:
   447                           	callstack 0
   448   000011                     ___aomod@counter:
   449                           	callstack 0
   450   000011                     pad@fp:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x10
   454   000011                     	ds	1
   455   000012                     setMotorPWM@posDuty:
   456                           	callstack 0
   457   000012                     ___aodiv@sign:
   458                           	callstack 0
   459   000012                     ___aomod@sign:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x11
   463   000012                     	ds	1
   464   000013                     ?_abs:
   465                           	callstack 0
   466   000013                     setMotorPWM@negDuty:
   467                           	callstack 0
   468   000013                     pad@buf:
   469                           	callstack 0
   470   000013                     abs@a:
   471                           	callstack 0
   472   000013                     ___aodiv@quotient:
   473                           	callstack 0
   474                           
   475                           ; 8 bytes @ 0x12
   476   000013                     	ds	2
   477   000015                     ??_abs:
   478   000015                     pad@p:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x14
   482   000015                     	ds	2
   483   000017                     ??_pad:
   484                           
   485                           ; 1 bytes @ 0x16
   486   000017                     	ds	1
   487   000018                     pad@i:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x17
   491   000018                     	ds	2
   492   00001A                     pad@w:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x19
   496   00001A                     	ds	2
   497   00001C                     dtoa@fp:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x1B
   501   00001C                     	ds	2
   502   00001E                     dtoa@d:
   503                           	callstack 0
   504                           
   505                           ; 8 bytes @ 0x1D
   506   00001E                     	ds	8
   507   000026                     ??_dtoa:
   508                           
   509                           ; 1 bytes @ 0x25
   510   000026                     	ds	8
   511   00002E                     _dtoa$2078:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x2D
   515   00002E                     	ds	2
   516   000030                     dtoa@p:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x2F
   520   000030                     	ds	2
   521   000032                     dtoa@w:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x31
   525   000032                     	ds	2
   526   000034                     dtoa@n:
   527                           	callstack 0
   528                           
   529                           ; 8 bytes @ 0x33
   530   000034                     	ds	8
   531   00003C                     dtoa@i:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x3B
   535   00003C                     	ds	2
   536   00003E                     dtoa@s:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x3D
   540   00003E                     	ds	1
   541   00003F                     vfpfcnvrt@fp:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x3E
   545   00003F                     	ds	2
   546   000041                     vfpfcnvrt@fmt:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x40
   550   000041                     	ds	2
   551   000043                     vfpfcnvrt@ap:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x42
   555   000043                     	ds	2
   556   000045                     ??_vfpfcnvrt:
   557                           
   558                           ; 1 bytes @ 0x44
   559   000045                     	ds	2
   560   000047                     vfpfcnvrt@convarg:
   561                           	callstack 0
   562                           
   563                           ; 8 bytes @ 0x46
   564   000047                     	ds	8
   565   00004F                     vfpfcnvrt@cp:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x4E
   569   00004F                     	ds	2
   570   000051                     ?_vfprintf:
   571                           	callstack 0
   572   000051                     vfprintf@fp:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x50
   576   000051                     	ds	2
   577   000053                     vfprintf@fmt:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x52
   581   000053                     	ds	2
   582   000055                     vfprintf@ap:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x54
   586   000055                     	ds	2
   587   000057                     vfprintf@cfmt:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x56
   591   000057                     	ds	2
   592   000059                     ?_sprintf:
   593                           	callstack 0
   594   000059                     sprintf@s:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x58
   598   000059                     	ds	2
   599   00005B                     sprintf@fmt:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x5A
   603   00005B                     	ds	4
   604   00005F                     
   605                           ; 1 bytes @ 0x5E
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 20 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  normalised_v   24    0        unsigned char [3][8]
   616 ;;  expected_val   24    0        unsigned char [3][8]
   617 ;;  buf            20   22[BANK0 ] unsigned char [20]
   618 ;;  motorR          9   55[BANK0 ] struct DC_motor
   619 ;;  motorL          9   46[BANK0 ] struct DC_motor
   620 ;;  master_close    9   13[BANK0 ] unsigned char [9]
   621 ;;  PWMcycle        1   44[BANK0 ] unsigned char 
   622 ;;  red_read        1   45[BANK0 ] volatile unsigned char 
   623 ;;  blue_read       1   43[BANK0 ] volatile unsigned char 
   624 ;;  green_read      1   42[BANK0 ] volatile unsigned char 
   625 ;;  card            1    0        enum E14575
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   636 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   638 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   639 ;;Total ram usage:       51 bytes
   640 ;; Hardware stack levels required when called: 8
   641 ;; This function calls:
   642 ;;		_I2C_2_Master_Init
   643 ;;		_LEDSon_init
   644 ;;		_color_click_init
   645 ;;		_color_read_Red
   646 ;;		_initDCmotorsPWM
   647 ;;		_initUSART4
   648 ;;		_sendStringSerial4
   649 ;;		_setMotorPWM
   650 ;;		_sprintf
   651 ;; This function is called by:
   652 ;;		Startup code after reset
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text0
   657   001634                     __ptext0:
   658                           	callstack 0
   659   001634                     _main:
   660                           	callstack 23
   661   001634                     
   662                           ;main.c: 25:     LEDSon_init();
   663   001634  EC10  F00E         	call	_LEDSon_init	;wreg free
   664   001638                     
   665                           ;main.c: 26:     I2C_2_Master_Init();
   666   001638  ECD4  F00D         	call	_I2C_2_Master_Init	;wreg free
   667   00163C                     
   668                           ;main.c: 27:     color_click_init();
   669   00163C  ECA2  F00D         	call	_color_click_init	;wreg free
   670   001640                     
   671                           ;main.c: 28:     initDCmotorsPWM();
   672   001640  ECE8  F00B         	call	_initDCmotorsPWM	;wreg free
   673   001644                     
   674                           ;main.c: 29:     initUSART4();
   675   001644  EC21  F00E         	call	_initUSART4	;wreg free
   676   001648                     
   677                           ;main.c: 37:     unsigned char PWMcycle = T2PR;
   678   001648  CFBC F08C          	movff	4028,main@PWMcycle	;volatile
   679   00164C                     
   680                           ;main.c: 39:     struct DC_motor motorL, motorR;;main.c: 41:     motorL.power=0;
   681   00164C  0E00               	movlw	0
   682   00164E  0100               	movlb	0	; () banked
   683   001650  6F8E               	movwf	main@motorL& (0+255),b
   684   001652                     
   685                           ; BSR set to: 0
   686                           ;main.c: 42:     motorL.direction=1;
   687   001652  0E01               	movlw	1
   688   001654  6F8F               	movwf	(main@motorL+1)& (0+255),b
   689   001656                     
   690                           ; BSR set to: 0
   691                           ;main.c: 43:     motorL.brakemode=1;
   692   001656  0E01               	movlw	1
   693   001658  6F90               	movwf	(main@motorL+2)& (0+255),b
   694   00165A                     
   695                           ; BSR set to: 0
   696                           ;main.c: 44:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   697   00165A  0EAA               	movlw	170
   698   00165C  6F93               	movwf	(main@motorL+5)& (0+255),b
   699   00165E  0E0F               	movlw	15
   700   001660  6F94               	movwf	(main@motorL+6)& (0+255),b
   701   001662                     
   702                           ; BSR set to: 0
   703                           ;main.c: 45:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   704   001662  0EA6               	movlw	166
   705   001664  6F95               	movwf	(main@motorL+7)& (0+255),b
   706   001666  0E0F               	movlw	15
   707   001668  6F96               	movwf	(main@motorL+8)& (0+255),b
   708   00166A                     
   709                           ; BSR set to: 0
   710                           ;main.c: 46:     motorL.PWMperiod=PWMcycle;
   711   00166A  C08C  F091         	movff	main@PWMcycle,main@motorL+3
   712   00166E  6B92               	clrf	(main@motorL+4)& (0+255),b
   713   001670                     
   714                           ; BSR set to: 0
   715                           ;main.c: 48:     motorR.power=0;
   716   001670  0E00               	movlw	0
   717   001672  6F97               	movwf	main@motorR& (0+255),b
   718   001674                     
   719                           ; BSR set to: 0
   720                           ;main.c: 49:     motorR.direction=1;
   721   001674  0E01               	movlw	1
   722   001676  6F98               	movwf	(main@motorR+1)& (0+255),b
   723   001678                     
   724                           ; BSR set to: 0
   725                           ;main.c: 50:     motorR.brakemode=1;
   726   001678  0E01               	movlw	1
   727   00167A  6F99               	movwf	(main@motorR+2)& (0+255),b
   728   00167C                     
   729                           ; BSR set to: 0
   730                           ;main.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   731   00167C  0E25               	movlw	37
   732   00167E  6F9C               	movwf	(main@motorR+5)& (0+255),b
   733   001680  0E0F               	movlw	15
   734   001682  6F9D               	movwf	(main@motorR+6)& (0+255),b
   735   001684                     
   736                           ; BSR set to: 0
   737                           ;main.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   738   001684  0E21               	movlw	33
   739   001686  6F9E               	movwf	(main@motorR+7)& (0+255),b
   740   001688  0E0F               	movlw	15
   741   00168A  6F9F               	movwf	(main@motorR+8)& (0+255),b
   742   00168C                     
   743                           ; BSR set to: 0
   744                           ;main.c: 53:     motorR.PWMperiod=PWMcycle;
   745   00168C  C08C  F09A         	movff	main@PWMcycle,main@motorR+3
   746   001690  6B9B               	clrf	(main@motorR+4)& (0+255),b
   747   001692                     
   748                           ; BSR set to: 0
   749                           ;main.c: 55:     setMotorPWM(&motorL);
   750   001692  0E8E               	movlw	low main@motorL
   751   001694  6E0E               	movwf	setMotorPWM@m^0,c
   752   001696  0E00               	movlw	high main@motorL
   753   001698  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   754   00169A  EC0B  F009         	call	_setMotorPWM	;wreg free
   755   00169E                     
   756                           ;main.c: 56:     setMotorPWM(&motorR);
   757   00169E  0E97               	movlw	low main@motorR
   758   0016A0  6E0E               	movwf	setMotorPWM@m^0,c
   759   0016A2  0E00               	movlw	high main@motorR
   760   0016A4  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   761   0016A6  EC0B  F009         	call	_setMotorPWM	;wreg free
   762   0016AA                     
   763                           ;main.c: 62:     unsigned char expected_values[8][3];;main.c: 63:     unsigned char norm
      +                          alised_values[8][3];;main.c: 64:     unsigned char master_closeness[9] = {17, 2, 12, 12,
      +                           10, 11, 12, 14, 16};
   764   0016AA  EE20  F0DC         	lfsr	2,main@F14639
   765   0016AE  EE10  F06D         	lfsr	1,main@master_closeness
   766   0016B2  0E08               	movlw	8
   767   0016B4                     u1181:
   768   0016B4  CFDB FFE3          	movff	plusw2,plusw1
   769   0016B8  06E8               	decf	wreg,f,c
   770   0016BA  E2FC               	bc	u1181
   771   0016BC                     
   772                           ;main.c: 66:     volatile unsigned char red_read = 0;
   773   0016BC  0E00               	movlw	0
   774   0016BE  0100               	movlb	0	; () banked
   775   0016C0  6F8D               	movwf	main@red_read& (0+255),b	;volatile
   776   0016C2                     
   777                           ; BSR set to: 0
   778                           ;main.c: 67:     volatile unsigned char green_read = 0;
   779   0016C2  0E00               	movlw	0
   780   0016C4  6F8A               	movwf	main@green_read& (0+255),b	;volatile
   781   0016C6                     
   782                           ; BSR set to: 0
   783                           ;main.c: 68:     volatile unsigned char blue_read = 0;
   784   0016C6  0E00               	movlw	0
   785   0016C8  6F8B               	movwf	main@blue_read& (0+255),b	;volatile
   786   0016CA                     
   787                           ; BSR set to: 0
   788                           ;main.c: 114:     LATDbits.LATD7=0;
   789   0016CA  9E7C               	bcf	124,7,c	;volatile
   790   0016CC                     
   791                           ; BSR set to: 0
   792                           ;main.c: 115:     TRISDbits.TRISD7=0;
   793   0016CC  9E84               	bcf	132,7,c	;volatile
   794   0016CE                     l2255:
   795                           
   796                           ;main.c: 121:         red_read = color_read_Red();
   797   0016CE  ECCC  F00C         	call	_color_read_Red	;wreg free
   798   0016D2  5005               	movf	?_color_read_Red^0,w,c
   799   0016D4  0100               	movlb	0	; () banked
   800   0016D6  6F8D               	movwf	main@red_read& (0+255),b	;volatile
   801   0016D8                     
   802                           ; BSR set to: 0
   803                           ;main.c: 126:         sprintf(buf, "Red read = %d \n", red_read);
   804   0016D8  0E76               	movlw	low main@buf
   805   0016DA  6E59               	movwf	sprintf@s^0,c
   806   0016DC  0E00               	movlw	high main@buf
   807   0016DE  6E5A               	movwf	(sprintf@s+1)^0,c
   808   0016E0  0E01               	movlw	low STR_1
   809   0016E2  6E5B               	movwf	sprintf@fmt^0,c
   810   0016E4  0E0E               	movlw	high STR_1
   811   0016E6  6E5C               	movwf	(sprintf@fmt+1)^0,c
   812   0016E8  C08D  F05D         	movff	main@red_read,?_sprintf+4	;volatile
   813   0016EC  6A5E               	clrf	(?_sprintf+5)^0,c
   814   0016EE  ECA3  F00C         	call	_sprintf	;wreg free
   815   0016F2                     
   816                           ;main.c: 127:         sendStringSerial4(buf);
   817   0016F2  0E76               	movlw	low main@buf
   818   0016F4  6E02               	movwf	sendStringSerial4@string^0,c
   819   0016F6  0E00               	movlw	high main@buf
   820   0016F8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   821   0016FA  ECBC  F00D         	call	_sendStringSerial4	;wreg free
   822   0016FE  EF67  F00B         	goto	l2255
   823   001702  EF01  F000         	goto	start
   824   001706                     __end_of_main:
   825                           	callstack 0
   826                           
   827 ;; *************** function _sprintf *****************
   828 ;; Defined at:
   829 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  s               2   88[COMRAM] PTR unsigned char 
   832 ;;		 -> main@buf(20), 
   833 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
   834 ;;		 -> STR_1(16), 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  f              11    2[BANK0 ] struct _IO_FILE
   837 ;;  ap              2    0[BANK0 ] PTR void [1]
   838 ;;		 -> ?_sprintf(2), 
   839 ;;  ret             2    0        int 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  2   88[COMRAM] int 
   842 ;; Registers used:
   843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   849 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   850 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   852 ;;      Totals:         6      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   853 ;;Total ram usage:       19 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 7
   856 ;; This function calls:
   857 ;;		_vfprintf
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text1
   864   001946                     __ptext1:
   865                           	callstack 0
   866   001946                     _sprintf:
   867                           	callstack 23
   868   001946  0E5D               	movlw	low (?_sprintf+4)
   869   001948  0100               	movlb	0	; () banked
   870   00194A  6F60               	movwf	sprintf@ap& (0+255),b
   871   00194C  0E00               	movlw	high (?_sprintf+4)
   872   00194E  6F61               	movwf	(sprintf@ap+1)& (0+255),b
   873   001950  C059  F062         	movff	sprintf@s,sprintf@f
   874   001954  C05A  F063         	movff	sprintf@s+1,sprintf@f+1
   875   001958                     
   876                           ; BSR set to: 0
   877   001958  0E00               	movlw	0
   878   00195A  6F66               	movwf	(sprintf@f+4)& (0+255),b
   879   00195C  0E00               	movlw	0
   880   00195E  6F65               	movwf	(sprintf@f+3)& (0+255),b
   881   001960                     
   882                           ; BSR set to: 0
   883   001960  0E00               	movlw	0
   884   001962  6F6C               	movwf	(sprintf@f+10)& (0+255),b
   885   001964  0E00               	movlw	0
   886   001966  6F6B               	movwf	(sprintf@f+9)& (0+255),b
   887   001968                     
   888                           ; BSR set to: 0
   889   001968  0E62               	movlw	low sprintf@f
   890   00196A  6E51               	movwf	vfprintf@fp^0,c
   891   00196C  0E00               	movlw	high sprintf@f
   892   00196E  6E52               	movwf	(vfprintf@fp+1)^0,c
   893   001970  C05B  F053         	movff	sprintf@fmt,vfprintf@fmt
   894   001974  C05C  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
   895   001978  0E60               	movlw	low sprintf@ap
   896   00197A  6E55               	movwf	vfprintf@ap^0,c
   897   00197C  0E00               	movlw	high sprintf@ap
   898   00197E  6E56               	movwf	(vfprintf@ap+1)^0,c
   899   001980  ECF4  F00C         	call	_vfprintf	;wreg free
   900   001984  0100               	movlb	0	; () banked
   901   001986  5165               	movf	(sprintf@f+3)& (0+255),w,b
   902   001988  2459               	addwf	sprintf@s^0,w,c
   903   00198A  6ED9               	movwf	fsr2l,c
   904   00198C  5166               	movf	(sprintf@f+4)& (0+255),w,b
   905   00198E  205A               	addwfc	(sprintf@s+1)^0,w,c
   906   001990  6EDA               	movwf	fsr2h,c
   907   001992  0E00               	movlw	0
   908   001994  6EDF               	movwf	indf2,c
   909   001996                     
   910                           ; BSR set to: 0
   911   001996  0012               	return		;funcret
   912   001998                     __end_of_sprintf:
   913                           	callstack 0
   914                           
   915 ;; *************** function _vfprintf *****************
   916 ;; Defined at:
   917 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
   920 ;;		 -> sprintf@f(11), 
   921 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
   922 ;;		 -> STR_1(16), 
   923 ;;  ap              2   84[COMRAM] PTR PTR void 
   924 ;;		 -> sprintf@ap(2), 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
   927 ;;		 -> STR_1(16), 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  2   80[COMRAM] int 
   930 ;; Registers used:
   931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   937 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   940 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   941 ;;Total ram usage:        8 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 6
   944 ;; This function calls:
   945 ;;		_vfpfcnvrt
   946 ;; This function is called by:
   947 ;;		_sprintf
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text2
   952   0019E8                     __ptext2:
   953                           	callstack 0
   954   0019E8                     _vfprintf:
   955                           	callstack 23
   956   0019E8                     
   957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   958   0019E8  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
   959   0019EC  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   960                           
   961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   962   0019F0  EF08  F00D         	goto	l1995
   963   0019F4                     l1993:
   964                           
   965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   966   0019F4  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
   967   0019F8  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   968   0019FC  0E57               	movlw	low vfprintf@cfmt
   969   0019FE  6E41               	movwf	vfpfcnvrt@fmt^0,c
   970   001A00  0E00               	movlw	high vfprintf@cfmt
   971   001A02  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
   972   001A04  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
   973   001A08  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   974   001A0C  EC73  F00A         	call	_vfpfcnvrt	;wreg free
   975   001A10                     l1995:
   976                           
   977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   978   001A10  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
   979   001A14  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   980   001A18                     	if	0	;tblptru may be non-zero
   981   001A18                     	endif
   982   001A18                     	if	0	;tblptru may be non-zero
   983   001A18                     	endif
   984   001A18  0008               	tblrd		*
   985   001A1A  50F5               	movf	tablat,w,c
   986   001A1C  0900               	iorlw	0
   987   001A1E  A4D8               	btfss	status,2,c
   988   001A20  EF14  F00D         	goto	u1051
   989   001A24  EF16  F00D         	goto	u1050
   990   001A28                     u1051:
   991   001A28  EFFA  F00C         	goto	l1993
   992   001A2C                     u1050:
   993   001A2C                     
   994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   995   001A2C  0E00               	movlw	0
   996   001A2E  6E52               	movwf	(?_vfprintf+1)^0,c
   997   001A30  0E00               	movlw	0
   998   001A32  6E51               	movwf	?_vfprintf^0,c
   999   001A34  0012               	return		;funcret
  1000   001A36                     __end_of_vfprintf:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function _vfpfcnvrt *****************
  1004 ;; Defined at:
  1005 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1008 ;;		 -> sprintf@f(11), 
  1009 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1010 ;;		 -> vfprintf@cfmt(2), 
  1011 ;;  ap              2   66[COMRAM] PTR PTR void 
  1012 ;;		 -> sprintf@ap(2), 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  convarg         8   70[COMRAM] struct .
  1015 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1016 ;;		 -> STR_1(16), 
  1017 ;;  i               2    0        int 
  1018 ;;  done            2    0        int 
  1019 ;;  c               1    0        unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1029 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1030 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;Total ram usage:       18 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 5
  1036 ;; This function calls:
  1037 ;;		_dtoa
  1038 ;;		_fputc
  1039 ;; This function is called by:
  1040 ;;		_vfprintf
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text3
  1045   0014E6                     __ptext3:
  1046                           	callstack 0
  1047   0014E6                     _vfpfcnvrt:
  1048                           	callstack 23
  1049   0014E6                     
  1050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1051   0014E6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1052   0014EA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1053   0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  1054   0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  1055   0014F6                     	if	0	;tblptru may be non-zero
  1056   0014F6                     	endif
  1057   0014F6                     	if	0	;tblptru may be non-zero
  1058   0014F6                     	endif
  1059   0014F6  0008               	tblrd		*
  1060   0014F8  50F5               	movf	tablat,w,c
  1061   0014FA  0A25               	xorlw	37
  1062   0014FC  A4D8               	btfss	status,2,c
  1063   0014FE  EF83  F00A         	goto	u961
  1064   001502  EF85  F00A         	goto	u960
  1065   001506                     u961:
  1066   001506  EF05  F00B         	goto	l1921
  1067   00150A                     u960:
  1068   00150A                     
  1069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1070   00150A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1071   00150E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1072   001512  2ADE               	incf	postinc2,f,c
  1073   001514  0E00               	movlw	0
  1074   001516  22DD               	addwfc	postdec2,f,c
  1075   001518                     
  1076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1077   001518  0E00               	movlw	0
  1078   00151A  0100               	movlb	0	; () banked
  1079   00151C  6FB5               	movwf	(_width+1)& (0+255),b
  1080   00151E  0E00               	movlw	0
  1081   001520  6FB4               	movwf	_width& (0+255),b
  1082   001522  C0B4  F0B8         	movff	_width,_flags
  1083   001526                     
  1084                           ; BSR set to: 0
  1085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1086   001526  69B6               	setf	_prec& (0+255),b
  1087   001528  69B7               	setf	(_prec+1)& (0+255),b
  1088   00152A                     
  1089                           ; BSR set to: 0
  1090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1091   00152A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1092   00152E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1093   001532  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1094   001536  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1095   00153A                     
  1096                           ; BSR set to: 0
  1097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1098   00153A  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1099   00153E  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1100   001542                     	if	0	;tblptru may be non-zero
  1101   001542                     	endif
  1102   001542                     	if	0	;tblptru may be non-zero
  1103   001542                     	endif
  1104   001542  0008               	tblrd		*
  1105   001544  50F5               	movf	tablat,w,c
  1106   001546  0A64               	xorlw	100
  1107   001548  B4D8               	btfsc	status,2,c
  1108   00154A  EFA9  F00A         	goto	u971
  1109   00154E  EFAB  F00A         	goto	u970
  1110   001552                     u971:
  1111   001552  EFB9  F00A         	goto	l1911
  1112   001556                     u970:
  1113   001556                     
  1114                           ; BSR set to: 0
  1115   001556  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1116   00155A  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1117   00155E                     	if	0	;tblptru may be non-zero
  1118   00155E                     	endif
  1119   00155E                     	if	0	;tblptru may be non-zero
  1120   00155E                     	endif
  1121   00155E  0008               	tblrd		*
  1122   001560  50F5               	movf	tablat,w,c
  1123   001562  0A69               	xorlw	105
  1124   001564  A4D8               	btfss	status,2,c
  1125   001566  EFB7  F00A         	goto	u981
  1126   00156A  EFB9  F00A         	goto	u980
  1127   00156E                     u981:
  1128   00156E  EFFC  F00A         	goto	l1917
  1129   001572                     u980:
  1130   001572                     l1911:
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1134   001572  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1135   001576  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1136   00157A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1137   00157E  0E02               	movlw	2
  1138   001580  26DE               	addwf	postinc2,f,c
  1139   001582  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1140   001586  0E00               	movlw	0
  1141   001588  22DD               	addwfc	postdec2,f,c
  1142   00158A  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1143   00158E  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1144   001592  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1145   001596  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1146   00159A  0E00               	movlw	0
  1147   00159C  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1148   00159E  0EFF               	movlw	-1
  1149   0015A0  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1150   0015A2  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1151   0015A4  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1152   0015A6  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1153   0015A8  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1154   0015AA  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1155                           
  1156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1157   0015AC  0E01               	movlw	1
  1158   0015AE  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1159   0015B0  6E45               	movwf	??_vfpfcnvrt^0,c
  1160   0015B2  0E00               	movlw	0
  1161   0015B4  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1162   0015B6  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1163   0015B8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1164   0015BC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1165   0015C0  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1166   0015C4  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1167   0015C8                     
  1168                           ; BSR set to: 0
  1169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1170   0015C8  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1171   0015CC  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1172   0015D0  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1173   0015D4  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1174   0015D8  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1175   0015DC  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1176   0015E0  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1177   0015E4  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1178   0015E8  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1179   0015EC  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1180   0015F0  EC09  F007         	call	_dtoa	;wreg free
  1181   0015F4  EF19  F00B         	goto	l1071
  1182   0015F8                     l1917:
  1183                           
  1184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1185   0015F8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1186   0015FC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1187   001600  2ADE               	incf	postinc2,f,c
  1188   001602  0E00               	movlw	0
  1189   001604  22DD               	addwfc	postdec2,f,c
  1190   001606  EF19  F00B         	goto	l1071
  1191   00160A                     l1921:
  1192                           
  1193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1194   00160A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1195   00160E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1196   001612  CFDE FFF6          	movff	postinc2,tblptrl
  1197   001616  CFDD FFF7          	movff	postdec2,tblptrh
  1198   00161A                     	if	0	;tblptru may be non-zero
  1199   00161A                     	endif
  1200   00161A                     	if	0	;tblptru may be non-zero
  1201   00161A                     	endif
  1202   00161A  0008               	tblrd		*
  1203   00161C  50F5               	movf	tablat,w,c
  1204   00161E  6E01               	movwf	fputc@c^0,c
  1205   001620  6A02               	clrf	(fputc@c+1)^0,c
  1206   001622  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1207   001626  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1208   00162A  EC83  F00B         	call	_fputc	;wreg free
  1209   00162E  EFFC  F00A         	goto	l1917
  1210   001632                     l1071:
  1211   001632  0012               	return		;funcret
  1212   001634                     __end_of_vfpfcnvrt:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _dtoa *****************
  1216 ;; Defined at:
  1217 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1220 ;;		 -> sprintf@f(11), 
  1221 ;;  d               8   29[COMRAM] long long 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  n               8   51[COMRAM] long long 
  1224 ;;  i               2   59[COMRAM] int 
  1225 ;;  w               2   49[COMRAM] int 
  1226 ;;  p               2   47[COMRAM] int 
  1227 ;;  s               1   61[COMRAM] unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1237 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1238 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1239 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1240 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1241 ;;Total ram usage:       35 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 4
  1244 ;; This function calls:
  1245 ;;		___aodiv
  1246 ;;		___aomod
  1247 ;;		_abs
  1248 ;;		_pad
  1249 ;; This function is called by:
  1250 ;;		_vfpfcnvrt
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text4
  1255   000E12                     __ptext4:
  1256                           	callstack 0
  1257   000E12                     _dtoa:
  1258                           	callstack 23
  1259   000E12                     
  1260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1261   000E12  C01E  F034         	movff	dtoa@d,dtoa@n
  1262   000E16  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1263   000E1A  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1264   000E1E  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1265   000E22  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1266   000E26  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1267   000E2A  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1268   000E2E  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1269   000E32                     
  1270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1271   000E32  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1272   000E34  EF1E  F007         	goto	u861
  1273   000E38  EF21  F007         	goto	u860
  1274   000E3C                     u861:
  1275   000E3C  0E01               	movlw	1
  1276   000E3E  EF22  F007         	goto	u870
  1277   000E42                     u860:
  1278   000E42  0E00               	movlw	0
  1279   000E44                     u870:
  1280   000E44  6E3E               	movwf	dtoa@s^0,c
  1281   000E46                     
  1282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1283   000E46  503E               	movf	dtoa@s^0,w,c
  1284   000E48  B4D8               	btfsc	status,2,c
  1285   000E4A  EF29  F007         	goto	u881
  1286   000E4E  EF2B  F007         	goto	u880
  1287   000E52                     u881:
  1288   000E52  EF3B  F007         	goto	l1841
  1289   000E56                     u880:
  1290   000E56                     
  1291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1292   000E56  1E3B               	comf	(dtoa@n+7)^0,f,c
  1293   000E58  1E3A               	comf	(dtoa@n+6)^0,f,c
  1294   000E5A  1E39               	comf	(dtoa@n+5)^0,f,c
  1295   000E5C  1E38               	comf	(dtoa@n+4)^0,f,c
  1296   000E5E  1E37               	comf	(dtoa@n+3)^0,f,c
  1297   000E60  1E36               	comf	(dtoa@n+2)^0,f,c
  1298   000E62  1E35               	comf	(dtoa@n+1)^0,f,c
  1299   000E64  6C34               	negf	dtoa@n^0,c
  1300   000E66  0E00               	movlw	0
  1301   000E68  2235               	addwfc	(dtoa@n+1)^0,f,c
  1302   000E6A  2236               	addwfc	(dtoa@n+2)^0,f,c
  1303   000E6C  2237               	addwfc	(dtoa@n+3)^0,f,c
  1304   000E6E  2238               	addwfc	(dtoa@n+4)^0,f,c
  1305   000E70  2239               	addwfc	(dtoa@n+5)^0,f,c
  1306   000E72  223A               	addwfc	(dtoa@n+6)^0,f,c
  1307   000E74  223B               	addwfc	(dtoa@n+7)^0,f,c
  1308   000E76                     l1841:
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1311   000E76  0100               	movlb	0	; () banked
  1312   000E78  BFB7               	btfsc	(_prec+1)& (0+255),7,b
  1313   000E7A  EF49  F007         	goto	u890
  1314   000E7E  51B7               	movf	(_prec+1)& (0+255),w,b
  1315   000E80  E106               	bnz	u891
  1316   000E82  05B6               	decf	_prec& (0+255),w,b
  1317   000E84  B0D8               	btfsc	status,0,c
  1318   000E86  EF47  F007         	goto	u891
  1319   000E8A  EF49  F007         	goto	u890
  1320   000E8E                     u891:
  1321   000E8E  EF4F  F007         	goto	l1050
  1322   000E92                     u890:
  1323   000E92                     
  1324                           ; BSR set to: 0
  1325   000E92  0E00               	movlw	0
  1326   000E94  6E31               	movwf	(dtoa@p+1)^0,c
  1327   000E96  0E01               	movlw	1
  1328   000E98  6E30               	movwf	dtoa@p^0,c
  1329   000E9A  EF53  F007         	goto	l1052
  1330   000E9E                     l1050:
  1331                           
  1332                           ; BSR set to: 0
  1333   000E9E  C0B6  F030         	movff	_prec,dtoa@p
  1334   000EA2  C0B7  F031         	movff	_prec+1,dtoa@p+1
  1335   000EA6                     l1052:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1339   000EA6  C0B4  F032         	movff	_width,dtoa@w
  1340   000EAA  C0B5  F033         	movff	_width+1,dtoa@w+1
  1341   000EAE                     
  1342                           ; BSR set to: 0
  1343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1344   000EAE  503E               	movf	dtoa@s^0,w,c
  1345   000EB0  B4D8               	btfsc	status,2,c
  1346   000EB2  EF5D  F007         	goto	u901
  1347   000EB6  EF5F  F007         	goto	u900
  1348   000EBA                     u901:
  1349   000EBA  EF76  F007         	goto	l1053
  1350   000EBE                     u900:
  1351   000EBE                     
  1352                           ; BSR set to: 0
  1353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1354   000EBE  0632               	decf	dtoa@w^0,f,c
  1355   000EC0  A0D8               	btfss	status,0,c
  1356   000EC2  0633               	decf	(dtoa@w+1)^0,f,c
  1357   000EC4                     
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1360   000EC4  503E               	movf	dtoa@s^0,w,c
  1361   000EC6  A4D8               	btfss	status,2,c
  1362   000EC8  EF68  F007         	goto	u911
  1363   000ECC  EF6A  F007         	goto	u910
  1364   000ED0                     u911:
  1365   000ED0  EF70  F007         	goto	l1853
  1366   000ED4                     u910:
  1367   000ED4                     
  1368                           ; BSR set to: 0
  1369   000ED4  0E00               	movlw	0
  1370   000ED6  6E2F               	movwf	(_dtoa$2078+1)^0,c
  1371   000ED8  0E2B               	movlw	43
  1372   000EDA  6E2E               	movwf	_dtoa$2078^0,c
  1373   000EDC  EF74  F007         	goto	l1855
  1374   000EE0                     l1853:
  1375                           
  1376                           ; BSR set to: 0
  1377   000EE0  0E00               	movlw	0
  1378   000EE2  6E2F               	movwf	(_dtoa$2078+1)^0,c
  1379   000EE4  0E2D               	movlw	45
  1380   000EE6  6E2E               	movwf	_dtoa$2078^0,c
  1381   000EE8                     l1855:
  1382                           
  1383                           ; BSR set to: 0
  1384   000EE8  C02E  F03E         	movff	_dtoa$2078,dtoa@s
  1385   000EEC                     l1053:
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1389   000EEC  0E00               	movlw	0
  1390   000EEE  6E3D               	movwf	(dtoa@i+1)^0,c
  1391   000EF0  0E1F               	movlw	31
  1392   000EF2  6E3C               	movwf	dtoa@i^0,c
  1393   000EF4                     
  1394                           ; BSR set to: 0
  1395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1396   000EF4  0E00               	movlw	0
  1397   000EF6  6FDB               	movwf	(_dbuf+31)& (0+255),b
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1400   000EF8  EFFA  F007         	goto	l1869
  1401   000EFC                     l1859:
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1404   000EFC  063C               	decf	dtoa@i^0,f,c
  1405   000EFE  A0D8               	btfss	status,0,c
  1406   000F00  063D               	decf	(dtoa@i+1)^0,f,c
  1407   000F02                     
  1408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1409   000F02  0EBC               	movlw	low _dbuf
  1410   000F04  243C               	addwf	dtoa@i^0,w,c
  1411   000F06  6ED9               	movwf	fsr2l,c
  1412   000F08  0E00               	movlw	high _dbuf
  1413   000F0A  203D               	addwfc	(dtoa@i+1)^0,w,c
  1414   000F0C  6EDA               	movwf	fsr2h,c
  1415   000F0E  C034  F001         	movff	dtoa@n,___aomod@dividend
  1416   000F12  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1417   000F16  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1418   000F1A  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1419   000F1E  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1420   000F22  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1421   000F26  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1422   000F2A  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1423   000F2E  0E0A               	movlw	10
  1424   000F30  6E09               	movwf	___aomod@divisor^0,c
  1425   000F32  0E00               	movlw	0
  1426   000F34  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1427   000F36  0E00               	movlw	0
  1428   000F38  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1429   000F3A  0E00               	movlw	0
  1430   000F3C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1431   000F3E  0E00               	movlw	0
  1432   000F40  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1433   000F42  0E00               	movlw	0
  1434   000F44  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1435   000F46  0E00               	movlw	0
  1436   000F48  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1437   000F4A  0E00               	movlw	0
  1438   000F4C  6E10               	movwf	(___aomod@divisor+7)^0,c
  1439   000F4E  ECC1  F009         	call	___aomod	;wreg free
  1440   000F52  C001  F026         	movff	?___aomod,??_dtoa
  1441   000F56  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1442   000F5A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1443   000F5E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1444   000F62  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1445   000F66  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1446   000F6A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1447   000F6E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1448   000F72  C026  F013         	movff	??_dtoa,abs@a
  1449   000F76  C027  F014         	movff	??_dtoa+1,abs@a+1
  1450   000F7A  EC82  F00D         	call	_abs	;wreg free
  1451   000F7E  5013               	movf	?_abs^0,w,c
  1452   000F80  0F30               	addlw	48
  1453   000F82  6EDF               	movwf	indf2,c
  1454   000F84                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1456   000F84  0630               	decf	dtoa@p^0,f,c
  1457   000F86  A0D8               	btfss	status,0,c
  1458   000F88  0631               	decf	(dtoa@p+1)^0,f,c
  1459   000F8A                     
  1460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1461   000F8A  0632               	decf	dtoa@w^0,f,c
  1462   000F8C  A0D8               	btfss	status,0,c
  1463   000F8E  0633               	decf	(dtoa@w+1)^0,f,c
  1464   000F90                     
  1465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1466   000F90  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1467   000F94  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1468   000F98  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1469   000F9C  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1470   000FA0  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1471   000FA4  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1472   000FA8  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1473   000FAC  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1474   000FB0  0E0A               	movlw	10
  1475   000FB2  6E09               	movwf	___aodiv@divisor^0,c
  1476   000FB4  0E00               	movlw	0
  1477   000FB6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1478   000FB8  0E00               	movlw	0
  1479   000FBA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1480   000FBC  0E00               	movlw	0
  1481   000FBE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1482   000FC0  0E00               	movlw	0
  1483   000FC2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1484   000FC4  0E00               	movlw	0
  1485   000FC6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1486   000FC8  0E00               	movlw	0
  1487   000FCA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1488   000FCC  0E00               	movlw	0
  1489   000FCE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1490   000FD0  EC47  F008         	call	___aodiv	;wreg free
  1491   000FD4  C001  F034         	movff	?___aodiv,dtoa@n
  1492   000FD8  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1493   000FDC  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1494   000FE0  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1495   000FE4  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1496   000FE8  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1497   000FEC  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1498   000FF0  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1499   000FF4                     l1869:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1502   000FF4  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1503   000FF6  EF05  F008         	goto	u921
  1504   000FFA  503D               	movf	(dtoa@i+1)^0,w,c
  1505   000FFC  E108               	bnz	u920
  1506   000FFE  043C               	decf	dtoa@i^0,w,c
  1507   001000  A0D8               	btfss	status,0,c
  1508   001002  EF05  F008         	goto	u921
  1509   001006  EF07  F008         	goto	u920
  1510   00100A                     u921:
  1511   00100A  EF23  F008         	goto	l1875
  1512   00100E                     u920:
  1513   00100E  5034               	movf	dtoa@n^0,w,c
  1514   001010  1035               	iorwf	(dtoa@n+1)^0,w,c
  1515   001012  1036               	iorwf	(dtoa@n+2)^0,w,c
  1516   001014  1037               	iorwf	(dtoa@n+3)^0,w,c
  1517   001016  1038               	iorwf	(dtoa@n+4)^0,w,c
  1518   001018  1039               	iorwf	(dtoa@n+5)^0,w,c
  1519   00101A  103A               	iorwf	(dtoa@n+6)^0,w,c
  1520   00101C  103B               	iorwf	(dtoa@n+7)^0,w,c
  1521   00101E  A4D8               	btfss	status,2,c
  1522   001020  EF14  F008         	goto	u931
  1523   001024  EF16  F008         	goto	u930
  1524   001028                     u931:
  1525   001028  EF7E  F007         	goto	l1859
  1526   00102C                     u930:
  1527   00102C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1528   00102E  EF23  F008         	goto	u940
  1529   001032  5031               	movf	(dtoa@p+1)^0,w,c
  1530   001034  E106               	bnz	u941
  1531   001036  0430               	decf	dtoa@p^0,w,c
  1532   001038  B0D8               	btfsc	status,0,c
  1533   00103A  EF21  F008         	goto	u941
  1534   00103E  EF23  F008         	goto	u940
  1535   001042                     u941:
  1536   001042  EF7E  F007         	goto	l1859
  1537   001046                     u940:
  1538   001046                     l1875:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1541   001046  503E               	movf	dtoa@s^0,w,c
  1542   001048  B4D8               	btfsc	status,2,c
  1543   00104A  EF29  F008         	goto	u951
  1544   00104E  EF2B  F008         	goto	u950
  1545   001052                     u951:
  1546   001052  EF36  F008         	goto	l1881
  1547   001056                     u950:
  1548   001056                     
  1549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1550   001056  063C               	decf	dtoa@i^0,f,c
  1551   001058  A0D8               	btfss	status,0,c
  1552   00105A  063D               	decf	(dtoa@i+1)^0,f,c
  1553   00105C                     
  1554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1555   00105C  0EBC               	movlw	low _dbuf
  1556   00105E  243C               	addwf	dtoa@i^0,w,c
  1557   001060  6ED9               	movwf	fsr2l,c
  1558   001062  0E00               	movlw	high _dbuf
  1559   001064  203D               	addwfc	(dtoa@i+1)^0,w,c
  1560   001066  6EDA               	movwf	fsr2h,c
  1561   001068  C03E  FFDF         	movff	dtoa@s,indf2
  1562   00106C                     l1881:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1565   00106C  C01C  F011         	movff	dtoa@fp,pad@fp
  1566   001070  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1567   001074  0EBC               	movlw	low _dbuf
  1568   001076  243C               	addwf	dtoa@i^0,w,c
  1569   001078  6E13               	movwf	pad@buf^0,c
  1570   00107A  0E00               	movlw	high _dbuf
  1571   00107C  203D               	addwfc	(dtoa@i+1)^0,w,c
  1572   00107E  6E14               	movwf	(pad@buf+1)^0,c
  1573   001080  C032  F015         	movff	dtoa@w,pad@p
  1574   001084  C033  F016         	movff	dtoa@w+1,pad@p+1
  1575   001088  EC2C  F00C         	call	_pad	;wreg free
  1576   00108C  0012               	return		;funcret
  1577   00108E                     __end_of_dtoa:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _pad *****************
  1581 ;; Defined at:
  1582 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1585 ;;		 -> sprintf@f(11), 
  1586 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1587 ;;		 -> dbuf(32), 
  1588 ;;  p               2   20[COMRAM] int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  w               2   25[COMRAM] int 
  1591 ;;  i               2   23[COMRAM] int 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1601 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;Total ram usage:       11 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 3
  1608 ;; This function calls:
  1609 ;;		_fputc
  1610 ;;		_fputs
  1611 ;; This function is called by:
  1612 ;;		_dtoa
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text5
  1617   001858                     __ptext5:
  1618                           	callstack 0
  1619   001858                     _pad:
  1620                           	callstack 23
  1621   001858                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1623   001858  BE16               	btfsc	(pad@p+1)^0,7,c
  1624   00185A  EF31  F00C         	goto	u811
  1625   00185E  EF33  F00C         	goto	u810
  1626   001862                     u811:
  1627   001862  EF39  F00C         	goto	l1815
  1628   001866                     u810:
  1629   001866  C015  F01A         	movff	pad@p,pad@w
  1630   00186A  C016  F01B         	movff	pad@p+1,pad@w+1
  1631   00186E  EF3D  F00C         	goto	l1041
  1632   001872                     l1815:
  1633   001872  0E00               	movlw	0
  1634   001874  6E1B               	movwf	(pad@w+1)^0,c
  1635   001876  0E00               	movlw	0
  1636   001878  6E1A               	movwf	pad@w^0,c
  1637   00187A                     l1041:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1640   00187A  0E00               	movlw	0
  1641   00187C  6E19               	movwf	(pad@i+1)^0,c
  1642   00187E  0E00               	movlw	0
  1643   001880  6E18               	movwf	pad@i^0,c
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1646   001882  EF4F  F00C         	goto	l1821
  1647   001886                     l1817:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1650   001886  0E00               	movlw	0
  1651   001888  6E02               	movwf	(fputc@c+1)^0,c
  1652   00188A  0E20               	movlw	32
  1653   00188C  6E01               	movwf	fputc@c^0,c
  1654   00188E  C011  F003         	movff	pad@fp,fputc@fp
  1655   001892  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1656   001896  EC83  F00B         	call	_fputc	;wreg free
  1657   00189A                     
  1658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1659   00189A  4A18               	infsnz	pad@i^0,f,c
  1660   00189C  2A19               	incf	(pad@i+1)^0,f,c
  1661   00189E                     l1821:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1664   00189E  501A               	movf	pad@w^0,w,c
  1665   0018A0  5C18               	subwf	pad@i^0,w,c
  1666   0018A2  5019               	movf	(pad@i+1)^0,w,c
  1667   0018A4  0A80               	xorlw	128
  1668   0018A6  6E17               	movwf	??_pad^0,c
  1669   0018A8  501B               	movf	(pad@w+1)^0,w,c
  1670   0018AA  0A80               	xorlw	128
  1671   0018AC  5817               	subwfb	??_pad^0,w,c
  1672   0018AE  A0D8               	btfss	status,0,c
  1673   0018B0  EF5C  F00C         	goto	u821
  1674   0018B4  EF5E  F00C         	goto	u820
  1675   0018B8                     u821:
  1676   0018B8  EF43  F00C         	goto	l1817
  1677   0018BC                     u820:
  1678   0018BC                     
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1680   0018BC  C013  F00A         	movff	pad@buf,fputs@s
  1681   0018C0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1682   0018C4  C011  F00C         	movff	pad@fp,fputs@fp
  1683   0018C8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1684   0018CC  EC3F  F00D         	call	_fputs	;wreg free
  1685   0018D0  0012               	return		;funcret
  1686   0018D2                     __end_of_pad:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _fputs *****************
  1690 ;; Defined at:
  1691 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1694 ;;		 -> dbuf(32), 
  1695 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1696 ;;		 -> sprintf@f(11), 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  i               2   14[COMRAM] int 
  1699 ;;  c               1   13[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2    9[COMRAM] int 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1710 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;Total ram usage:        7 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 2
  1716 ;; This function calls:
  1717 ;;		_fputc
  1718 ;; This function is called by:
  1719 ;;		_pad
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text6
  1724   001A7E                     __ptext6:
  1725                           	callstack 0
  1726   001A7E                     _fputs:
  1727                           	callstack 23
  1728   001A7E  0E00               	movlw	0
  1729   001A80  6E10               	movwf	(fputs@i+1)^0,c
  1730   001A82  0E00               	movlw	0
  1731   001A84  6E0F               	movwf	fputs@i^0,c
  1732   001A86  EF50  F00D         	goto	l1729
  1733   001A8A                     l1725:
  1734   001A8A  C00E  F001         	movff	fputs@c,fputc@c
  1735   001A8E  6A02               	clrf	(fputc@c+1)^0,c
  1736   001A90  C00C  F003         	movff	fputs@fp,fputc@fp
  1737   001A94  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1738   001A98  EC83  F00B         	call	_fputc	;wreg free
  1739   001A9C  4A0F               	infsnz	fputs@i^0,f,c
  1740   001A9E  2A10               	incf	(fputs@i+1)^0,f,c
  1741   001AA0                     l1729:
  1742   001AA0  500F               	movf	fputs@i^0,w,c
  1743   001AA2  240A               	addwf	fputs@s^0,w,c
  1744   001AA4  6ED9               	movwf	fsr2l,c
  1745   001AA6  5010               	movf	(fputs@i+1)^0,w,c
  1746   001AA8  200B               	addwfc	(fputs@s+1)^0,w,c
  1747   001AAA  6EDA               	movwf	fsr2h,c
  1748   001AAC  50DF               	movf	indf2,w,c
  1749   001AAE  6E0E               	movwf	fputs@c^0,c
  1750   001AB0  500E               	movf	fputs@c^0,w,c
  1751   001AB2  A4D8               	btfss	status,2,c
  1752   001AB4  EF5E  F00D         	goto	u671
  1753   001AB8  EF60  F00D         	goto	u670
  1754   001ABC                     u671:
  1755   001ABC  EF45  F00D         	goto	l1725
  1756   001AC0                     u670:
  1757   001AC0  0012               	return		;funcret
  1758   001AC2                     __end_of_fputs:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _fputc *****************
  1762 ;; Defined at:
  1763 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  c               2    0[COMRAM] int 
  1766 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1767 ;;		 -> sprintf@f(11), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  2    0[COMRAM] int 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;Total ram usage:        9 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 1
  1786 ;; This function calls:
  1787 ;;		_putch
  1788 ;; This function is called by:
  1789 ;;		_pad
  1790 ;;		_vfpfcnvrt
  1791 ;;		_fputs
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text7
  1796   001706                     __ptext7:
  1797                           	callstack 0
  1798   001706                     _fputc:
  1799                           	callstack 26
  1800   001706  5003               	movf	fputc@fp^0,w,c
  1801   001708  1004               	iorwf	(fputc@fp+1)^0,w,c
  1802   00170A  B4D8               	btfsc	status,2,c
  1803   00170C  EF8A  F00B         	goto	u631
  1804   001710  EF8C  F00B         	goto	u630
  1805   001714                     u631:
  1806   001714  EF95  F00B         	goto	l1713
  1807   001718                     u630:
  1808   001718  5003               	movf	fputc@fp^0,w,c
  1809   00171A  1004               	iorwf	(fputc@fp+1)^0,w,c
  1810   00171C  A4D8               	btfss	status,2,c
  1811   00171E  EF93  F00B         	goto	u641
  1812   001722  EF95  F00B         	goto	u640
  1813   001726                     u641:
  1814   001726  EF9A  F00B         	goto	l1715
  1815   00172A                     u640:
  1816   00172A                     l1713:
  1817   00172A  5001               	movf	fputc@c^0,w,c
  1818   00172C  EC67  F00E         	call	_putch
  1819   001730  EFE7  F00B         	goto	l1096
  1820   001734                     l1715:
  1821   001734  EE20 F009          	lfsr	2,9
  1822   001738  5003               	movf	fputc@fp^0,w,c
  1823   00173A  26D9               	addwf	fsr2l,f,c
  1824   00173C  5004               	movf	(fputc@fp+1)^0,w,c
  1825   00173E  22DA               	addwfc	fsr2h,f,c
  1826   001740  50DE               	movf	postinc2,w,c
  1827   001742  10DE               	iorwf	postinc2,w,c
  1828   001744  B4D8               	btfsc	status,2,c
  1829   001746  EFA7  F00B         	goto	u651
  1830   00174A  EFA9  F00B         	goto	u650
  1831   00174E                     u651:
  1832   00174E  EFC4  F00B         	goto	l1719
  1833   001752                     u650:
  1834   001752  EE20 F009          	lfsr	2,9
  1835   001756  5003               	movf	fputc@fp^0,w,c
  1836   001758  26D9               	addwf	fsr2l,f,c
  1837   00175A  5004               	movf	(fputc@fp+1)^0,w,c
  1838   00175C  22DA               	addwfc	fsr2h,f,c
  1839   00175E  EE10 F003          	lfsr	1,3
  1840   001762  5003               	movf	fputc@fp^0,w,c
  1841   001764  26E1               	addwf	fsr1l,f,c
  1842   001766  5004               	movf	(fputc@fp+1)^0,w,c
  1843   001768  22E2               	addwfc	fsr1h,f,c
  1844   00176A  50DE               	movf	postinc2,w,c
  1845   00176C  5CE6               	subwf	postinc1,w,c
  1846   00176E  50E6               	movf	postinc1,w,c
  1847   001770  0A80               	xorlw	128
  1848   001772  6E09               	movwf	(??_fputc+4)^0,c
  1849   001774  50DE               	movf	postinc2,w,c
  1850   001776  0A80               	xorlw	128
  1851   001778  5809               	subwfb	(??_fputc+4)^0,w,c
  1852   00177A  B0D8               	btfsc	status,0,c
  1853   00177C  EFC2  F00B         	goto	u661
  1854   001780  EFC4  F00B         	goto	u660
  1855   001784                     u661:
  1856   001784  EFE7  F00B         	goto	l1096
  1857   001788                     u660:
  1858   001788                     l1719:
  1859   001788  EE20 F003          	lfsr	2,3
  1860   00178C  5003               	movf	fputc@fp^0,w,c
  1861   00178E  26D9               	addwf	fsr2l,f,c
  1862   001790  5004               	movf	(fputc@fp+1)^0,w,c
  1863   001792  22DA               	addwfc	fsr2h,f,c
  1864   001794  CFDE F005          	movff	postinc2,??_fputc
  1865   001798  CFDD F006          	movff	postdec2,??_fputc+1
  1866   00179C  C003  FFD9         	movff	fputc@fp,fsr2l
  1867   0017A0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1868   0017A4  CFDE F007          	movff	postinc2,??_fputc+2
  1869   0017A8  CFDD F008          	movff	postdec2,??_fputc+3
  1870   0017AC  5005               	movf	??_fputc^0,w,c
  1871   0017AE  2407               	addwf	(??_fputc+2)^0,w,c
  1872   0017B0  6ED9               	movwf	fsr2l,c
  1873   0017B2  5006               	movf	(??_fputc+1)^0,w,c
  1874   0017B4  2008               	addwfc	(??_fputc+3)^0,w,c
  1875   0017B6  6EDA               	movwf	fsr2h,c
  1876   0017B8  C001  FFDF         	movff	fputc@c,indf2
  1877   0017BC  EE20 F003          	lfsr	2,3
  1878   0017C0  5003               	movf	fputc@fp^0,w,c
  1879   0017C2  26D9               	addwf	fsr2l,f,c
  1880   0017C4  5004               	movf	(fputc@fp+1)^0,w,c
  1881   0017C6  22DA               	addwfc	fsr2h,f,c
  1882   0017C8  2ADE               	incf	postinc2,f,c
  1883   0017CA  0E00               	movlw	0
  1884   0017CC  22DD               	addwfc	postdec2,f,c
  1885   0017CE                     l1096:
  1886   0017CE  0012               	return		;funcret
  1887   0017D0                     __end_of_fputc:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _putch *****************
  1891 ;; Defined at:
  1892 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  c               1    wreg     unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  c               1    0[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_fputc
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text8
  1920   001CCE                     __ptext8:
  1921                           	callstack 0
  1922   001CCE                     _putch:
  1923                           	callstack 26
  1924   001CCE  0012               	return		;funcret
  1925   001CD0                     __end_of_putch:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _abs *****************
  1929 ;; Defined at:
  1930 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  a               2   18[COMRAM] int 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  2   18[COMRAM] int 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;Total ram usage:        4 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_dtoa
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text9
  1958   001B04                     __ptext9:
  1959                           	callstack 0
  1960   001B04                     _abs:
  1961                           	callstack 26
  1962   001B04  BE14               	btfsc	(abs@a+1)^0,7,c
  1963   001B06  EF8F  F00D         	goto	u830
  1964   001B0A  5014               	movf	(abs@a+1)^0,w,c
  1965   001B0C  E106               	bnz	u831
  1966   001B0E  0413               	decf	abs@a^0,w,c
  1967   001B10  B0D8               	btfsc	status,0,c
  1968   001B12  EF8D  F00D         	goto	u831
  1969   001B16  EF8F  F00D         	goto	u830
  1970   001B1A                     u831:
  1971   001B1A  EF9D  F00D         	goto	l1081
  1972   001B1E                     u830:
  1973   001B1E  C013  F015         	movff	abs@a,??_abs
  1974   001B22  C014  F016         	movff	abs@a+1,??_abs+1
  1975   001B26  1E15               	comf	??_abs^0,f,c
  1976   001B28  1E16               	comf	(??_abs+1)^0,f,c
  1977   001B2A  4A15               	infsnz	??_abs^0,f,c
  1978   001B2C  2A16               	incf	(??_abs+1)^0,f,c
  1979   001B2E  C015  F013         	movff	??_abs,?_abs
  1980   001B32  C016  F014         	movff	??_abs+1,?_abs+1
  1981   001B36  EFA1  F00D         	goto	l1084
  1982   001B3A                     l1081:
  1983   001B3A  C013  F013         	movff	abs@a,?_abs
  1984   001B3E  C014  F014         	movff	abs@a+1,?_abs+1
  1985   001B42                     l1084:
  1986   001B42  0012               	return		;funcret
  1987   001B44                     __end_of_abs:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function ___aomod *****************
  1991 ;; Defined at:
  1992 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  dividend        8    0[COMRAM] long long 
  1995 ;;  divisor         8    8[COMRAM] long long 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  sign            1   17[COMRAM] unsigned char 
  1998 ;;  counter         1   16[COMRAM] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  8    0[COMRAM] long long 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2008 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;Total ram usage:       18 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_dtoa
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text10
  2022   001382                     __ptext10:
  2023                           	callstack 0
  2024   001382                     ___aomod:
  2025                           	callstack 26
  2026   001382  0E00               	movlw	0
  2027   001384  6E12               	movwf	___aomod@sign^0,c
  2028   001386  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2029   001388  EFCA  F009         	goto	u750
  2030   00138C  EFC8  F009         	goto	u751
  2031   001390                     u751:
  2032   001390  EFDC  F009         	goto	l1783
  2033   001394                     u750:
  2034   001394  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2035   001396  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2036   001398  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2037   00139A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2038   00139C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2039   00139E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2040   0013A0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2041   0013A2  6C01               	negf	___aomod@dividend^0,c
  2042   0013A4  0E00               	movlw	0
  2043   0013A6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2044   0013A8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2045   0013AA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2046   0013AC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2047   0013AE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2048   0013B0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2049   0013B2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2050   0013B4  0E01               	movlw	1
  2051   0013B6  6E12               	movwf	___aomod@sign^0,c
  2052   0013B8                     l1783:
  2053   0013B8  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2054   0013BA  EFE3  F009         	goto	u760
  2055   0013BE  EFE1  F009         	goto	u761
  2056   0013C2                     u761:
  2057   0013C2  EFF3  F009         	goto	l1787
  2058   0013C6                     u760:
  2059   0013C6  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2060   0013C8  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2061   0013CA  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2062   0013CC  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2063   0013CE  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2064   0013D0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2065   0013D2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2066   0013D4  6C09               	negf	___aomod@divisor^0,c
  2067   0013D6  0E00               	movlw	0
  2068   0013D8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2069   0013DA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2070   0013DC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2071   0013DE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2072   0013E0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2073   0013E2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2074   0013E4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2075   0013E6                     l1787:
  2076   0013E6  5009               	movf	___aomod@divisor^0,w,c
  2077   0013E8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2078   0013EA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2079   0013EC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2080   0013EE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2081   0013F0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2082   0013F2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2083   0013F4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2084   0013F6  B4D8               	btfsc	status,2,c
  2085   0013F8  EF00  F00A         	goto	u771
  2086   0013FC  EF02  F00A         	goto	u770
  2087   001400                     u771:
  2088   001400  EF4A  F00A         	goto	l1803
  2089   001404                     u770:
  2090   001404  0E01               	movlw	1
  2091   001406  6E11               	movwf	___aomod@counter^0,c
  2092   001408  EF10  F00A         	goto	l1793
  2093   00140C                     l1791:
  2094   00140C  90D8               	bcf	status,0,c
  2095   00140E  3609               	rlcf	___aomod@divisor^0,f,c
  2096   001410  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2097   001412  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2098   001414  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2099   001416  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2100   001418  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2101   00141A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2102   00141C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2103   00141E  2A11               	incf	___aomod@counter^0,f,c
  2104   001420                     l1793:
  2105   001420  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2106   001422  EF15  F00A         	goto	u781
  2107   001426  EF17  F00A         	goto	u780
  2108   00142A                     u781:
  2109   00142A  EF06  F00A         	goto	l1791
  2110   00142E                     u780:
  2111   00142E                     l1795:
  2112   00142E  5009               	movf	___aomod@divisor^0,w,c
  2113   001430  5C01               	subwf	___aomod@dividend^0,w,c
  2114   001432  500A               	movf	(___aomod@divisor+1)^0,w,c
  2115   001434  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2116   001436  500B               	movf	(___aomod@divisor+2)^0,w,c
  2117   001438  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2118   00143A  500C               	movf	(___aomod@divisor+3)^0,w,c
  2119   00143C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2120   00143E  500D               	movf	(___aomod@divisor+4)^0,w,c
  2121   001440  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2122   001442  500E               	movf	(___aomod@divisor+5)^0,w,c
  2123   001444  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2124   001446  500F               	movf	(___aomod@divisor+6)^0,w,c
  2125   001448  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2126   00144A  5010               	movf	(___aomod@divisor+7)^0,w,c
  2127   00144C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2128   00144E  A0D8               	btfss	status,0,c
  2129   001450  EF2C  F00A         	goto	u791
  2130   001454  EF2E  F00A         	goto	u790
  2131   001458                     u791:
  2132   001458  EF3E  F00A         	goto	l1799
  2133   00145C                     u790:
  2134   00145C  5009               	movf	___aomod@divisor^0,w,c
  2135   00145E  5E01               	subwf	___aomod@dividend^0,f,c
  2136   001460  500A               	movf	(___aomod@divisor+1)^0,w,c
  2137   001462  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2138   001464  500B               	movf	(___aomod@divisor+2)^0,w,c
  2139   001466  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2140   001468  500C               	movf	(___aomod@divisor+3)^0,w,c
  2141   00146A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2142   00146C  500D               	movf	(___aomod@divisor+4)^0,w,c
  2143   00146E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2144   001470  500E               	movf	(___aomod@divisor+5)^0,w,c
  2145   001472  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2146   001474  500F               	movf	(___aomod@divisor+6)^0,w,c
  2147   001476  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2148   001478  5010               	movf	(___aomod@divisor+7)^0,w,c
  2149   00147A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2150   00147C                     l1799:
  2151   00147C  90D8               	bcf	status,0,c
  2152   00147E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2153   001480  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2154   001482  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2155   001484  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2156   001486  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2157   001488  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2158   00148A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2159   00148C  3209               	rrcf	___aomod@divisor^0,f,c
  2160   00148E  2E11               	decfsz	___aomod@counter^0,f,c
  2161   001490  EF17  F00A         	goto	l1795
  2162   001494                     l1803:
  2163   001494  5012               	movf	___aomod@sign^0,w,c
  2164   001496  B4D8               	btfsc	status,2,c
  2165   001498  EF50  F00A         	goto	u801
  2166   00149C  EF52  F00A         	goto	u800
  2167   0014A0                     u801:
  2168   0014A0  EF62  F00A         	goto	l1807
  2169   0014A4                     u800:
  2170   0014A4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2171   0014A6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2172   0014A8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2173   0014AA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2174   0014AC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2175   0014AE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2176   0014B0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2177   0014B2  6C01               	negf	___aomod@dividend^0,c
  2178   0014B4  0E00               	movlw	0
  2179   0014B6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2180   0014B8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2181   0014BA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2182   0014BC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2183   0014BE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2184   0014C0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2185   0014C2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2186   0014C4                     l1807:
  2187   0014C4  C001  F001         	movff	___aomod@dividend,?___aomod
  2188   0014C8  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2189   0014CC  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2190   0014D0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2191   0014D4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2192   0014D8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2193   0014DC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2194   0014E0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2195   0014E4  0012               	return		;funcret
  2196   0014E6                     __end_of___aomod:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function ___aodiv *****************
  2200 ;; Defined at:
  2201 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  dividend        8    0[COMRAM] long long 
  2204 ;;  divisor         8    8[COMRAM] long long 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  quotient        8   18[COMRAM] long long 
  2207 ;;  sign            1   17[COMRAM] unsigned char 
  2208 ;;  counter         1   16[COMRAM] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  8    0[COMRAM] long long 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2218 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;Total ram usage:       26 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_dtoa
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text11
  2232   00108E                     __ptext11:
  2233                           	callstack 0
  2234   00108E                     ___aodiv:
  2235                           	callstack 26
  2236   00108E  0E00               	movlw	0
  2237   001090  6E12               	movwf	___aodiv@sign^0,c
  2238   001092  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2239   001094  EF50  F008         	goto	u680
  2240   001098  EF4E  F008         	goto	u681
  2241   00109C                     u681:
  2242   00109C  EF62  F008         	goto	l1739
  2243   0010A0                     u680:
  2244   0010A0  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2245   0010A2  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2246   0010A4  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2247   0010A6  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2248   0010A8  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2249   0010AA  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2250   0010AC  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2251   0010AE  6C09               	negf	___aodiv@divisor^0,c
  2252   0010B0  0E00               	movlw	0
  2253   0010B2  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2254   0010B4  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2255   0010B6  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2256   0010B8  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2257   0010BA  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2258   0010BC  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2259   0010BE  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2260   0010C0  0E01               	movlw	1
  2261   0010C2  6E12               	movwf	___aodiv@sign^0,c
  2262   0010C4                     l1739:
  2263   0010C4  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2264   0010C6  EF69  F008         	goto	u690
  2265   0010CA  EF67  F008         	goto	u691
  2266   0010CE                     u691:
  2267   0010CE  EF7B  F008         	goto	l1745
  2268   0010D2                     u690:
  2269   0010D2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2270   0010D4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2271   0010D6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2272   0010D8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2273   0010DA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2274   0010DC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2275   0010DE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2276   0010E0  6C01               	negf	___aodiv@dividend^0,c
  2277   0010E2  0E00               	movlw	0
  2278   0010E4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2279   0010E6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2280   0010E8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2281   0010EA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2282   0010EC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2283   0010EE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2284   0010F0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2285   0010F2  0E01               	movlw	1
  2286   0010F4  1A12               	xorwf	___aodiv@sign^0,f,c
  2287   0010F6                     l1745:
  2288   0010F6  EE20  F013         	lfsr	2,___aodiv@quotient
  2289   0010FA  0E07               	movlw	7
  2290   0010FC                     u701:
  2291   0010FC  6ADE               	clrf	postinc2,c
  2292   0010FE  06E8               	decf	wreg,f,c
  2293   001100  E2FD               	bc	u701
  2294   001102  5009               	movf	___aodiv@divisor^0,w,c
  2295   001104  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2296   001106  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2297   001108  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2298   00110A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2299   00110C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2300   00110E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2301   001110  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2302   001112  B4D8               	btfsc	status,2,c
  2303   001114  EF8E  F008         	goto	u711
  2304   001118  EF90  F008         	goto	u710
  2305   00111C                     u711:
  2306   00111C  EFE2  F008         	goto	l1767
  2307   001120                     u710:
  2308   001120  0E01               	movlw	1
  2309   001122  6E11               	movwf	___aodiv@counter^0,c
  2310   001124  EF9E  F008         	goto	l1753
  2311   001128                     l1751:
  2312   001128  90D8               	bcf	status,0,c
  2313   00112A  3609               	rlcf	___aodiv@divisor^0,f,c
  2314   00112C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2315   00112E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2316   001130  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2317   001132  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2318   001134  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2319   001136  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2320   001138  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2321   00113A  2A11               	incf	___aodiv@counter^0,f,c
  2322   00113C                     l1753:
  2323   00113C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2324   00113E  EFA3  F008         	goto	u721
  2325   001142  EFA5  F008         	goto	u720
  2326   001146                     u721:
  2327   001146  EF94  F008         	goto	l1751
  2328   00114A                     u720:
  2329   00114A                     l1755:
  2330   00114A  90D8               	bcf	status,0,c
  2331   00114C  3613               	rlcf	___aodiv@quotient^0,f,c
  2332   00114E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2333   001150  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2334   001152  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2335   001154  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2336   001156  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2337   001158  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2338   00115A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2339   00115C  5009               	movf	___aodiv@divisor^0,w,c
  2340   00115E  5C01               	subwf	___aodiv@dividend^0,w,c
  2341   001160  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2342   001162  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2343   001164  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2344   001166  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2345   001168  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2346   00116A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2347   00116C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2348   00116E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2349   001170  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2350   001172  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2351   001174  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2352   001176  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2353   001178  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2354   00117A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2355   00117C  A0D8               	btfss	status,0,c
  2356   00117E  EFC3  F008         	goto	u731
  2357   001182  EFC5  F008         	goto	u730
  2358   001186                     u731:
  2359   001186  EFD6  F008         	goto	l1763
  2360   00118A                     u730:
  2361   00118A  5009               	movf	___aodiv@divisor^0,w,c
  2362   00118C  5E01               	subwf	___aodiv@dividend^0,f,c
  2363   00118E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2364   001190  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2365   001192  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2366   001194  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2367   001196  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2368   001198  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2369   00119A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2370   00119C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2371   00119E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2372   0011A0  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2373   0011A2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2374   0011A4  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2375   0011A6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2376   0011A8  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2377   0011AA  8013               	bsf	___aodiv@quotient^0,0,c
  2378   0011AC                     l1763:
  2379   0011AC  90D8               	bcf	status,0,c
  2380   0011AE  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2381   0011B0  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2382   0011B2  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2383   0011B4  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2384   0011B6  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2385   0011B8  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2386   0011BA  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2387   0011BC  3209               	rrcf	___aodiv@divisor^0,f,c
  2388   0011BE  2E11               	decfsz	___aodiv@counter^0,f,c
  2389   0011C0  EFA5  F008         	goto	l1755
  2390   0011C4                     l1767:
  2391   0011C4  5012               	movf	___aodiv@sign^0,w,c
  2392   0011C6  B4D8               	btfsc	status,2,c
  2393   0011C8  EFE8  F008         	goto	u741
  2394   0011CC  EFEA  F008         	goto	u740
  2395   0011D0                     u741:
  2396   0011D0  EFFA  F008         	goto	l1771
  2397   0011D4                     u740:
  2398   0011D4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2399   0011D6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2400   0011D8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2401   0011DA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2402   0011DC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2403   0011DE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2404   0011E0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2405   0011E2  6C13               	negf	___aodiv@quotient^0,c
  2406   0011E4  0E00               	movlw	0
  2407   0011E6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2408   0011E8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2409   0011EA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2410   0011EC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2411   0011EE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2412   0011F0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2413   0011F2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2414   0011F4                     l1771:
  2415   0011F4  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2416   0011F8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2417   0011FC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2418   001200  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2419   001204  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2420   001208  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2421   00120C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2422   001210  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2423   001214  0012               	return		;funcret
  2424   001216                     __end_of___aodiv:
  2425                           	callstack 0
  2426                           
  2427 ;; *************** function _setMotorPWM *****************
  2428 ;; Defined at:
  2429 ;;		line 61 in file "dc_motor.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  m               2   13[COMRAM] PTR struct DC_motor
  2432 ;;		 -> main@motorR(9), main@motorL(9), 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  negDuty         1   18[COMRAM] unsigned char 
  2435 ;;  posDuty         1   17[COMRAM] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;Total ram usage:        6 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 1
  2452 ;; This function calls:
  2453 ;;		___lwdiv
  2454 ;;		___wmul
  2455 ;; This function is called by:
  2456 ;;		_main
  2457 ;;		_stop
  2458 ;;		_turnLeft45
  2459 ;;		_turnRight45
  2460 ;;		_fullSpeedAhead
  2461 ;;		_reverseFullSpeed
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text12
  2466   001216                     __ptext12:
  2467                           	callstack 0
  2468   001216                     _setMotorPWM:
  2469                           	callstack 29
  2470   001216                     
  2471                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2472   001216  EE20 F002          	lfsr	2,2
  2473   00121A  500E               	movf	setMotorPWM@m^0,w,c
  2474   00121C  26D9               	addwf	fsr2l,f,c
  2475   00121E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2476   001220  22DA               	addwfc	fsr2h,f,c
  2477   001222  50DF               	movf	indf2,w,c
  2478   001224  B4D8               	btfsc	status,2,c
  2479   001226  EF17  F009         	goto	u1061
  2480   00122A  EF19  F009         	goto	u1060
  2481   00122E                     u1061:
  2482   00122E  EF4D  F009         	goto	l2045
  2483   001232                     u1060:
  2484   001232                     
  2485                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2486   001232  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2487   001236  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2488   00123A  50DF               	movf	indf2,w,c
  2489   00123C  6E10               	movwf	??_setMotorPWM^0,c
  2490   00123E  5010               	movf	??_setMotorPWM^0,w,c
  2491   001240  6E01               	movwf	___wmul@multiplier^0,c
  2492   001242  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2493   001244  EE20 F003          	lfsr	2,3
  2494   001248  500E               	movf	setMotorPWM@m^0,w,c
  2495   00124A  26D9               	addwf	fsr2l,f,c
  2496   00124C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2497   00124E  22DA               	addwfc	fsr2h,f,c
  2498   001250  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2499   001254  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2500   001258  ECFD  F00D         	call	___wmul	;wreg free
  2501   00125C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2502   001260  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2503   001264  0E00               	movlw	0
  2504   001266  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2505   001268  0E64               	movlw	100
  2506   00126A  6E09               	movwf	___lwdiv@divisor^0,c
  2507   00126C  EC69  F00C         	call	___lwdiv	;wreg free
  2508   001270  EE20 F003          	lfsr	2,3
  2509   001274  500E               	movf	setMotorPWM@m^0,w,c
  2510   001276  26D9               	addwf	fsr2l,f,c
  2511   001278  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2512   00127A  22DA               	addwfc	fsr2h,f,c
  2513   00127C  50DF               	movf	indf2,w,c
  2514   00127E  6E11               	movwf	(??_setMotorPWM+1)^0,c
  2515   001280  5007               	movf	?___lwdiv^0,w,c
  2516   001282  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  2517   001284  6E12               	movwf	setMotorPWM@posDuty^0,c
  2518   001286                     
  2519                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2520   001286  EE20 F003          	lfsr	2,3
  2521   00128A  500E               	movf	setMotorPWM@m^0,w,c
  2522   00128C  26D9               	addwf	fsr2l,f,c
  2523   00128E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2524   001290  22DA               	addwfc	fsr2h,f,c
  2525   001292  50DF               	movf	indf2,w,c
  2526   001294  6E13               	movwf	setMotorPWM@negDuty^0,c
  2527                           
  2528                           ;dc_motor.c: 68:     }
  2529   001296  EF70  F009         	goto	l2049
  2530   00129A                     l2045:
  2531                           
  2532                           ;dc_motor.c: 70:         posDuty=0;
  2533   00129A  0E00               	movlw	0
  2534   00129C  6E12               	movwf	setMotorPWM@posDuty^0,c
  2535   00129E                     
  2536                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2537   00129E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2538   0012A2  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2539   0012A6  50DF               	movf	indf2,w,c
  2540   0012A8  6E10               	movwf	??_setMotorPWM^0,c
  2541   0012AA  5010               	movf	??_setMotorPWM^0,w,c
  2542   0012AC  6E01               	movwf	___wmul@multiplier^0,c
  2543   0012AE  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2544   0012B0  EE20 F003          	lfsr	2,3
  2545   0012B4  500E               	movf	setMotorPWM@m^0,w,c
  2546   0012B6  26D9               	addwf	fsr2l,f,c
  2547   0012B8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2548   0012BA  22DA               	addwfc	fsr2h,f,c
  2549   0012BC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2550   0012C0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2551   0012C4  ECFD  F00D         	call	___wmul	;wreg free
  2552   0012C8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2553   0012CC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2554   0012D0  0E00               	movlw	0
  2555   0012D2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2556   0012D4  0E64               	movlw	100
  2557   0012D6  6E09               	movwf	___lwdiv@divisor^0,c
  2558   0012D8  EC69  F00C         	call	___lwdiv	;wreg free
  2559   0012DC  5007               	movf	?___lwdiv^0,w,c
  2560   0012DE  6E13               	movwf	setMotorPWM@negDuty^0,c
  2561   0012E0                     l2049:
  2562                           
  2563                           ;dc_motor.c: 74:     if (m->direction) {
  2564   0012E0  EE20 F001          	lfsr	2,1
  2565   0012E4  500E               	movf	setMotorPWM@m^0,w,c
  2566   0012E6  26D9               	addwf	fsr2l,f,c
  2567   0012E8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2568   0012EA  22DA               	addwfc	fsr2h,f,c
  2569   0012EC  50DF               	movf	indf2,w,c
  2570   0012EE  B4D8               	btfsc	status,2,c
  2571   0012F0  EF7C  F009         	goto	u1071
  2572   0012F4  EF7E  F009         	goto	u1070
  2573   0012F8                     u1071:
  2574   0012F8  EFA0  F009         	goto	l2053
  2575   0012FC                     u1070:
  2576   0012FC                     
  2577                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2578   0012FC  EE20 F005          	lfsr	2,5
  2579   001300  500E               	movf	setMotorPWM@m^0,w,c
  2580   001302  26D9               	addwf	fsr2l,f,c
  2581   001304  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2582   001306  22DA               	addwfc	fsr2h,f,c
  2583   001308  CFDE F010          	movff	postinc2,??_setMotorPWM
  2584   00130C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2585   001310  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2586   001314  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2587   001318  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2588                           
  2589                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2590   00131C  EE20 F007          	lfsr	2,7
  2591   001320  500E               	movf	setMotorPWM@m^0,w,c
  2592   001322  26D9               	addwf	fsr2l,f,c
  2593   001324  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2594   001326  22DA               	addwfc	fsr2h,f,c
  2595   001328  CFDE F010          	movff	postinc2,??_setMotorPWM
  2596   00132C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2597   001330  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2598   001334  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2599   001338  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2600                           
  2601                           ;dc_motor.c: 77:     } else {
  2602   00133C  EFC0  F009         	goto	l95
  2603   001340                     l2053:
  2604                           
  2605                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2606   001340  EE20 F005          	lfsr	2,5
  2607   001344  500E               	movf	setMotorPWM@m^0,w,c
  2608   001346  26D9               	addwf	fsr2l,f,c
  2609   001348  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2610   00134A  22DA               	addwfc	fsr2h,f,c
  2611   00134C  CFDE F010          	movff	postinc2,??_setMotorPWM
  2612   001350  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2613   001354  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2614   001358  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2615   00135C  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2616                           
  2617                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2618   001360  EE20 F007          	lfsr	2,7
  2619   001364  500E               	movf	setMotorPWM@m^0,w,c
  2620   001366  26D9               	addwf	fsr2l,f,c
  2621   001368  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2622   00136A  22DA               	addwfc	fsr2h,f,c
  2623   00136C  CFDE F010          	movff	postinc2,??_setMotorPWM
  2624   001370  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2625   001374  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2626   001378  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2627   00137C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2628   001380                     l95:
  2629   001380  0012               	return		;funcret
  2630   001382                     __end_of_setMotorPWM:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function ___wmul *****************
  2634 ;; Defined at:
  2635 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  multiplier      2    0[COMRAM] unsigned int 
  2638 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  product         2    4[COMRAM] unsigned int 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  2    0[COMRAM] unsigned int 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0, prodl, prodh
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;Total ram usage:        6 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_setMotorPWM
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text13
  2664   001BFA                     __ptext13:
  2665                           	callstack 0
  2666   001BFA                     ___wmul:
  2667                           	callstack 29
  2668   001BFA  5001               	movf	___wmul@multiplier^0,w,c
  2669   001BFC  0203               	mulwf	___wmul@multiplicand^0,c
  2670   001BFE  CFF3 F005          	movff	prodl,___wmul@product
  2671   001C02  CFF4 F006          	movff	prodh,___wmul@product+1
  2672   001C06  5001               	movf	___wmul@multiplier^0,w,c
  2673   001C08  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2674   001C0A  50F3               	movf	243,w,c
  2675   001C0C  2606               	addwf	(___wmul@product+1)^0,f,c
  2676   001C0E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2677   001C10  0203               	mulwf	___wmul@multiplicand^0,c
  2678   001C12  50F3               	movf	243,w,c
  2679   001C14  2606               	addwf	(___wmul@product+1)^0,f,c
  2680   001C16  C005  F001         	movff	___wmul@product,?___wmul
  2681   001C1A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2682   001C1E  0012               	return		;funcret
  2683   001C20                     __end_of___wmul:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function ___lwdiv *****************
  2687 ;; Defined at:
  2688 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  dividend        2    6[COMRAM] unsigned int 
  2691 ;;  divisor         2    8[COMRAM] unsigned int 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  quotient        2   10[COMRAM] unsigned int 
  2694 ;;  counter         1   12[COMRAM] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    6[COMRAM] unsigned int 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2705 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;Total ram usage:        7 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_setMotorPWM
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text14
  2718   0018D2                     __ptext14:
  2719                           	callstack 0
  2720   0018D2                     ___lwdiv:
  2721                           	callstack 29
  2722   0018D2  0E00               	movlw	0
  2723   0018D4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2724   0018D6  0E00               	movlw	0
  2725   0018D8  6E0B               	movwf	___lwdiv@quotient^0,c
  2726   0018DA  5009               	movf	___lwdiv@divisor^0,w,c
  2727   0018DC  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2728   0018DE  B4D8               	btfsc	status,2,c
  2729   0018E0  EF74  F00C         	goto	u1021
  2730   0018E4  EF76  F00C         	goto	u1020
  2731   0018E8                     u1021:
  2732   0018E8  EF9E  F00C         	goto	l832
  2733   0018EC                     u1020:
  2734   0018EC  0E01               	movlw	1
  2735   0018EE  6E0D               	movwf	___lwdiv@counter^0,c
  2736   0018F0  EF7E  F00C         	goto	l1977
  2737   0018F4                     l1975:
  2738   0018F4  90D8               	bcf	status,0,c
  2739   0018F6  3609               	rlcf	___lwdiv@divisor^0,f,c
  2740   0018F8  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2741   0018FA  2A0D               	incf	___lwdiv@counter^0,f,c
  2742   0018FC                     l1977:
  2743   0018FC  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2744   0018FE  EF83  F00C         	goto	u1031
  2745   001902  EF85  F00C         	goto	u1030
  2746   001906                     u1031:
  2747   001906  EF7A  F00C         	goto	l1975
  2748   00190A                     u1030:
  2749   00190A                     l1979:
  2750   00190A  90D8               	bcf	status,0,c
  2751   00190C  360B               	rlcf	___lwdiv@quotient^0,f,c
  2752   00190E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2753   001910  5009               	movf	___lwdiv@divisor^0,w,c
  2754   001912  5C07               	subwf	___lwdiv@dividend^0,w,c
  2755   001914  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2756   001916  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2757   001918  A0D8               	btfss	status,0,c
  2758   00191A  EF91  F00C         	goto	u1041
  2759   00191E  EF93  F00C         	goto	u1040
  2760   001922                     u1041:
  2761   001922  EF98  F00C         	goto	l1987
  2762   001926                     u1040:
  2763   001926  5009               	movf	___lwdiv@divisor^0,w,c
  2764   001928  5E07               	subwf	___lwdiv@dividend^0,f,c
  2765   00192A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2766   00192C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2767   00192E  800B               	bsf	___lwdiv@quotient^0,0,c
  2768   001930                     l1987:
  2769   001930  90D8               	bcf	status,0,c
  2770   001932  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2771   001934  3209               	rrcf	___lwdiv@divisor^0,f,c
  2772   001936  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2773   001938  EF85  F00C         	goto	l1979
  2774   00193C                     l832:
  2775   00193C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  2776   001940  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2777   001944  0012               	return		;funcret
  2778   001946                     __end_of___lwdiv:
  2779                           	callstack 0
  2780                           
  2781 ;; *************** function _sendStringSerial4 *****************
  2782 ;; Defined at:
  2783 ;;		line 39 in file "serial.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  string          2    1[COMRAM] PTR unsigned char 
  2786 ;;		 -> main@buf(20), 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;Total ram usage:        2 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 1
  2805 ;; This function calls:
  2806 ;;		_sendCharSerial4
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text15
  2813   001B78                     __ptext15:
  2814                           	callstack 0
  2815   001B78                     _sendStringSerial4:
  2816                           	callstack 29
  2817   001B78                     
  2818                           ;serial.c: 40:  while(*string != 0) {
  2819   001B78  EFC7  F00D         	goto	l2089
  2820   001B7C                     l2085:
  2821                           
  2822                           ;serial.c: 41:         sendCharSerial4(*string++);
  2823   001B7C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2824   001B80  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2825   001B84  50DF               	movf	indf2,w,c
  2826   001B86  EC41  F00E         	call	_sendCharSerial4
  2827   001B8A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2828   001B8C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2829   001B8E                     l2089:
  2830                           
  2831                           ;serial.c: 40:  while(*string != 0) {
  2832   001B8E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2833   001B92  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2834   001B96  50DF               	movf	indf2,w,c
  2835   001B98  A4D8               	btfss	status,2,c
  2836   001B9A  EFD1  F00D         	goto	u1081
  2837   001B9E  EFD3  F00D         	goto	u1080
  2838   001BA2                     u1081:
  2839   001BA2  EFBE  F00D         	goto	l2085
  2840   001BA6                     u1080:
  2841   001BA6  0012               	return		;funcret
  2842   001BA8                     __end_of_sendStringSerial4:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function _sendCharSerial4 *****************
  2846 ;; Defined at:
  2847 ;;		line 32 in file "serial.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  charToSend      1    wreg     unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  charToSend      1    0[COMRAM] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;Total ram usage:        1 bytes
  2866 ;; Hardware stack levels used: 1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_sendStringSerial4
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text16
  2875   001C82                     __ptext16:
  2876                           	callstack 0
  2877   001C82                     _sendCharSerial4:
  2878                           	callstack 29
  2879                           
  2880                           ;incstack = 0
  2881                           ;sendCharSerial4@charToSend stored from wreg
  2882   001C82  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2883   001C84                     l297:
  2884   001C84  010E               	movlb	14	; () banked
  2885   001C86  A537               	btfss	55,2,b	;volatile
  2886   001C88  EF48  F00E         	goto	u1011
  2887   001C8C  EF4A  F00E         	goto	u1010
  2888   001C90                     u1011:
  2889   001C90  EF42  F00E         	goto	l297
  2890   001C94                     u1010:
  2891   001C94                     
  2892                           ; BSR set to: 14
  2893                           ;serial.c: 34:     TX4REG = charToSend;
  2894   001C94  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2895   001C98                     
  2896                           ; BSR set to: 14
  2897   001C98  0012               	return		;funcret
  2898   001C9A                     __end_of_sendCharSerial4:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _initUSART4 *****************
  2902 ;; Defined at:
  2903 ;;		line 6 in file "serial.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2921 ;;Total ram usage:        0 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_main
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text17
  2931   001C42                     __ptext17:
  2932                           	callstack 0
  2933   001C42                     _initUSART4:
  2934                           	callstack 30
  2935   001C42                     
  2936                           ;serial.c: 10:     RC0PPS = 0x12;
  2937   001C42  0E12               	movlw	18
  2938   001C44  010E               	movlb	14	; () banked
  2939   001C46  6F62               	movwf	98,b	;volatile
  2940                           
  2941                           ;serial.c: 11:     RX4PPS = 0x11;
  2942   001C48  0E11               	movlw	17
  2943   001C4A  6F15               	movwf	21,b	;volatile
  2944   001C4C                     
  2945                           ; BSR set to: 14
  2946                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  2947   001C4C  8283               	bsf	131,1,c	;volatile
  2948   001C4E                     
  2949                           ; BSR set to: 14
  2950                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  2951   001C4E  97E9               	bcf	233,3,b	;volatile
  2952   001C50                     
  2953                           ; BSR set to: 14
  2954                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  2955   001C50  95E8               	bcf	232,2,b	;volatile
  2956                           
  2957                           ;serial.c: 17:     SP4BRGL = 51;
  2958   001C52  0E33               	movlw	51
  2959   001C54  6FE5               	movwf	229,b	;volatile
  2960                           
  2961                           ;serial.c: 18:     SP4BRGH = 0;
  2962   001C56  0E00               	movlw	0
  2963   001C58  6FE6               	movwf	230,b	;volatile
  2964   001C5A                     
  2965                           ; BSR set to: 14
  2966                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  2967   001C5A  89E7               	bsf	231,4,b	;volatile
  2968   001C5C                     
  2969                           ; BSR set to: 14
  2970                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  2971   001C5C  8BE8               	bsf	232,5,b	;volatile
  2972   001C5E                     
  2973                           ; BSR set to: 14
  2974                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  2975   001C5E  8FE7               	bsf	231,7,b	;volatile
  2976   001C60                     
  2977                           ; BSR set to: 14
  2978   001C60  0012               	return		;funcret
  2979   001C62                     __end_of_initUSART4:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function _initDCmotorsPWM *****************
  2983 ;; Defined at:
  2984 ;;		line 6 in file "dc_motor.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text18
  3012   0017D0                     __ptext18:
  3013                           	callstack 0
  3014   0017D0                     _initDCmotorsPWM:
  3015                           	callstack 30
  3016   0017D0                     
  3017                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3018   0017D0  9485               	bcf	133,2,c	;volatile
  3019                           
  3020                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3021   0017D2  9885               	bcf	133,4,c	;volatile
  3022                           
  3023                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3024   0017D4  9E83               	bcf	131,7,c	;volatile
  3025                           
  3026                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3027   0017D6  9C87               	bcf	135,6,c	;volatile
  3028   0017D8                     
  3029                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3030   0017D8  0E05               	movlw	5
  3031   0017DA  010E               	movlb	14	; () banked
  3032   0017DC  6F74               	movwf	116,b	;volatile
  3033                           
  3034                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3035   0017DE  0E06               	movlw	6
  3036   0017E0  6F76               	movwf	118,b	;volatile
  3037                           
  3038                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3039   0017E2  0E07               	movlw	7
  3040   0017E4  6F69               	movwf	105,b	;volatile
  3041                           
  3042                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3043   0017E6  0E08               	movlw	8
  3044   0017E8  6F88               	movwf	136,b	;volatile
  3045                           
  3046                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3047   0017EA  50BD               	movf	189,w,c	;volatile
  3048   0017EC  0B8F               	andlw	-113
  3049   0017EE  0940               	iorlw	64
  3050   0017F0  6EBD               	movwf	189,c	;volatile
  3051                           
  3052                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3053   0017F2  0EE0               	movlw	-32
  3054   0017F4  16BE               	andwf	190,f,c	;volatile
  3055                           
  3056                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3057   0017F6  50BF               	movf	191,w,c	;volatile
  3058   0017F8  0BF0               	andlw	-16
  3059   0017FA  0901               	iorlw	1
  3060   0017FC  6EBF               	movwf	191,c	;volatile
  3061                           
  3062                           ;dc_motor.c: 26:     T2PR=99;
  3063   0017FE  0E63               	movlw	99
  3064   001800  6EBC               	movwf	188,c	;volatile
  3065   001802                     
  3066                           ; BSR set to: 14
  3067                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3068   001802  8EBD               	bsf	189,7,c	;volatile
  3069                           
  3070                           ;dc_motor.c: 31:     CCPR1H=0;
  3071   001804  0E00               	movlw	0
  3072   001806  6EAA               	movwf	170,c	;volatile
  3073                           
  3074                           ;dc_motor.c: 32:     CCPR2H=0;
  3075   001808  0E00               	movlw	0
  3076   00180A  6EA6               	movwf	166,c	;volatile
  3077                           
  3078                           ;dc_motor.c: 33:     CCPR3H=0;
  3079   00180C  0E00               	movlw	0
  3080   00180E  010F               	movlb	15	; () banked
  3081   001810  6F25               	movwf	37,b	;volatile
  3082                           
  3083                           ;dc_motor.c: 34:     CCPR4H=0;
  3084   001812  0E00               	movlw	0
  3085   001814  6F21               	movwf	33,b	;volatile
  3086                           
  3087                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3088   001816  0EFC               	movlw	-4
  3089   001818  16AD               	andwf	173,f,c	;volatile
  3090                           
  3091                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3092   00181A  0EF3               	movlw	-13
  3093   00181C  16AD               	andwf	173,f,c	;volatile
  3094                           
  3095                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3096   00181E  0ECF               	movlw	-49
  3097   001820  16AD               	andwf	173,f,c	;volatile
  3098                           
  3099                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3100   001822  0E3F               	movlw	-193
  3101   001824  16AD               	andwf	173,f,c	;volatile
  3102   001826                     
  3103                           ; BSR set to: 15
  3104                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3105   001826  88AB               	bsf	171,4,c	;volatile
  3106                           
  3107                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3108   001828  50AB               	movf	171,w,c	;volatile
  3109   00182A  0BF0               	andlw	-16
  3110   00182C  090C               	iorlw	12
  3111   00182E  6EAB               	movwf	171,c	;volatile
  3112   001830                     
  3113                           ; BSR set to: 15
  3114                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3115   001830  8EAB               	bsf	171,7,c	;volatile
  3116   001832                     
  3117                           ; BSR set to: 15
  3118                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3119   001832  88A7               	bsf	167,4,c	;volatile
  3120                           
  3121                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3122   001834  50A7               	movf	167,w,c	;volatile
  3123   001836  0BF0               	andlw	-16
  3124   001838  090C               	iorlw	12
  3125   00183A  6EA7               	movwf	167,c	;volatile
  3126   00183C                     
  3127                           ; BSR set to: 15
  3128                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3129   00183C  8EA7               	bsf	167,7,c	;volatile
  3130   00183E                     
  3131                           ; BSR set to: 15
  3132                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3133   00183E  8926               	bsf	38,4,b	;volatile
  3134                           
  3135                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3136   001840  5126               	movf	38,w,b	;volatile
  3137   001842  0BF0               	andlw	-16
  3138   001844  090C               	iorlw	12
  3139   001846  6F26               	movwf	38,b	;volatile
  3140   001848                     
  3141                           ; BSR set to: 15
  3142                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3143   001848  8F26               	bsf	38,7,b	;volatile
  3144   00184A                     
  3145                           ; BSR set to: 15
  3146                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3147   00184A  8922               	bsf	34,4,b	;volatile
  3148                           
  3149                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3150   00184C  5122               	movf	34,w,b	;volatile
  3151   00184E  0BF0               	andlw	-16
  3152   001850  090C               	iorlw	12
  3153   001852  6F22               	movwf	34,b	;volatile
  3154   001854                     
  3155                           ; BSR set to: 15
  3156                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3157   001854  8F22               	bsf	34,7,b	;volatile
  3158   001856                     
  3159                           ; BSR set to: 15
  3160   001856  0012               	return		;funcret
  3161   001858                     __end_of_initDCmotorsPWM:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _color_read_Red *****************
  3165 ;; Defined at:
  3166 ;;		line 29 in file "color.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  tmp             2    9[COMRAM] unsigned int 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  2    4[COMRAM] unsigned int 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;Total ram usage:        7 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 2
  3187 ;; This function calls:
  3188 ;;		_I2C_2_Master_Read
  3189 ;;		_I2C_2_Master_RepStart
  3190 ;;		_I2C_2_Master_Start
  3191 ;;		_I2C_2_Master_Stop
  3192 ;;		_I2C_2_Master_Write
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text19
  3199   001998                     __ptext19:
  3200                           	callstack 0
  3201   001998                     _color_read_Red:
  3202                           	callstack 28
  3203   001998                     
  3204                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  3205   001998  EC5D  F00E         	call	_I2C_2_Master_Start	;wreg free
  3206                           
  3207                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  3208   00199C  0E52               	movlw	82
  3209   00199E  EC4D  F00E         	call	_I2C_2_Master_Write
  3210                           
  3211                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  3212   0019A2  0EB6               	movlw	182
  3213   0019A4  EC4D  F00E         	call	_I2C_2_Master_Write
  3214                           
  3215                           ;color.c: 35:  I2C_2_Master_RepStart();
  3216   0019A8  EC53  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3217                           
  3218                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  3219   0019AC  0E53               	movlw	83
  3220   0019AE  EC4D  F00E         	call	_I2C_2_Master_Write
  3221                           
  3222                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  3223   0019B2  0E01               	movlw	1
  3224   0019B4  EC61  F00D         	call	_I2C_2_Master_Read
  3225   0019B8  6E07               	movwf	??_color_read_Red^0,c
  3226   0019BA  5007               	movf	??_color_read_Red^0,w,c
  3227   0019BC  6E0A               	movwf	color_read_Red@tmp^0,c
  3228   0019BE  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3229                           
  3230                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3231   0019C0  0E00               	movlw	0
  3232   0019C2  EC61  F00D         	call	_I2C_2_Master_Read
  3233   0019C6  6E07               	movwf	??_color_read_Red^0,c
  3234   0019C8  5007               	movf	??_color_read_Red^0,w,c
  3235   0019CA  6E09               	movwf	(??_color_read_Red+2)^0,c
  3236   0019CC  6A08               	clrf	(??_color_read_Red+1)^0,c
  3237   0019CE  500A               	movf	color_read_Red@tmp^0,w,c
  3238   0019D0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3239   0019D2  6E0A               	movwf	color_read_Red@tmp^0,c
  3240   0019D4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3241   0019D6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3242   0019D8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3243                           
  3244                           ;color.c: 39:  I2C_2_Master_Stop();
  3245   0019DA  EC58  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3246   0019DE                     
  3247                           ;color.c: 40:  return tmp;
  3248   0019DE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3249   0019E2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3250   0019E6  0012               	return		;funcret
  3251   0019E8                     __end_of_color_read_Red:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _I2C_2_Master_RepStart *****************
  3255 ;; Defined at:
  3256 ;;		line 33 in file "i2c.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 1
  3277 ;; This function calls:
  3278 ;;		_I2C_2_Master_Idle
  3279 ;; This function is called by:
  3280 ;;		_color_read_Red
  3281 ;;		_color_read_Green
  3282 ;;		_color_read_Blue
  3283 ;;		_color_read_Clear
  3284 ;;		_read_interrupt_status
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text20
  3289   001CA6                     __ptext20:
  3290                           	callstack 0
  3291   001CA6                     _I2C_2_Master_RepStart:
  3292                           	callstack 28
  3293   001CA6                     
  3294                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3295   001CA6  ECE9  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3296   001CAA                     
  3297                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3298   001CAA  010E               	movlb	14	; () banked
  3299   001CAC  83DA               	bsf	218,1,b	;volatile
  3300   001CAE                     
  3301                           ; BSR set to: 14
  3302   001CAE  0012               	return		;funcret
  3303   001CB0                     __end_of_I2C_2_Master_RepStart:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _I2C_2_Master_Read *****************
  3307 ;; Defined at:
  3308 ;;		line 51 in file "i2c.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  ack             1    wreg     unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  ack             1    2[COMRAM] unsigned char 
  3313 ;;  tmp             1    3[COMRAM] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;Total ram usage:        3 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; Hardware stack levels required when called: 1
  3330 ;; This function calls:
  3331 ;;		_I2C_2_Master_Idle
  3332 ;; This function is called by:
  3333 ;;		_color_read_Red
  3334 ;;		_color_read_Green
  3335 ;;		_color_read_Blue
  3336 ;;		_color_read_Clear
  3337 ;;		_read_interrupt_status
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text21
  3342   001AC2                     __ptext21:
  3343                           	callstack 0
  3344   001AC2                     _I2C_2_Master_Read:
  3345                           	callstack 28
  3346                           
  3347                           ; BSR set to: 14
  3348                           ;incstack = 0
  3349                           ;I2C_2_Master_Read@ack stored from wreg
  3350   001AC2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3351   001AC4                     
  3352                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3353   001AC4  ECE9  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3354   001AC8                     
  3355                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3356   001AC8  010E               	movlb	14	; () banked
  3357   001ACA  87DA               	bsf	218,3,b	;volatile
  3358                           
  3359                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3360   001ACC  ECE9  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3361   001AD0                     
  3362                           ;i2c.c: 57:   tmp = SSP2BUF;
  3363   001AD0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3364                           
  3365                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3366   001AD4  ECE9  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3367   001AD8                     
  3368                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3369   001AD8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3370   001ADA  B4D8               	btfsc	status,2,c
  3371   001ADC  EF72  F00D         	goto	u991
  3372   001AE0  EF76  F00D         	goto	u990
  3373   001AE4                     u991:
  3374   001AE4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3375   001AE6  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3376   001AE8  EF77  F00D         	goto	u1008
  3377   001AEC                     u990:
  3378   001AEC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3379   001AEE                     u1008:
  3380   001AEE  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3381   001AF0  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3382   001AF2  010E               	movlb	14	; () banked
  3383   001AF4  51DA               	movf	218,w,b	;volatile
  3384   001AF6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3385   001AF8  0BDF               	andlw	-33
  3386   001AFA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3387   001AFC  6FDA               	movwf	218,b	;volatile
  3388   001AFE                     
  3389                           ; BSR set to: 14
  3390                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3391   001AFE  89DA               	bsf	218,4,b	;volatile
  3392   001B00                     
  3393                           ; BSR set to: 14
  3394                           ;i2c.c: 61:   return tmp;
  3395   001B00  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3396   001B02                     
  3397                           ; BSR set to: 14
  3398   001B02  0012               	return		;funcret
  3399   001B04                     __end_of_I2C_2_Master_Read:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function _color_click_init *****************
  3403 ;; Defined at:
  3404 ;;		line 5 in file "color.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;Total ram usage:        1 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; Hardware stack levels required when called: 3
  3425 ;; This function calls:
  3426 ;;		_I2C_2_Master_Init
  3427 ;;		_color_writetoaddr
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text22
  3434   001B44                     __ptext22:
  3435                           	callstack 0
  3436   001B44                     _color_click_init:
  3437                           	callstack 27
  3438   001B44                     
  3439                           ;color.c: 8:     I2C_2_Master_Init();
  3440   001B44  ECD4  F00D         	call	_I2C_2_Master_Init	;wreg free
  3441   001B48                     
  3442                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3443   001B48  0E01               	movlw	1
  3444   001B4A  6E03               	movwf	color_writetoaddr@value^0,c
  3445   001B4C  0E00               	movlw	0
  3446   001B4E  EC31  F00E         	call	_color_writetoaddr
  3447   001B52                     
  3448                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3449   001B52  0E3F               	movlw	63
  3450   001B54  6E05               	movwf	??_color_click_init^0,c
  3451   001B56  0E55               	movlw	85
  3452   001B58                     u1247:
  3453   001B58  2EE8               	decfsz	wreg,f,c
  3454   001B5A  D7FE               	bra	u1247
  3455   001B5C  2E05               	decfsz	??_color_click_init^0,f,c
  3456   001B5E  D7FC               	bra	u1247
  3457   001B60  F000               	nop	
  3458   001B62                     
  3459                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3460   001B62  0E03               	movlw	3
  3461   001B64  6E03               	movwf	color_writetoaddr@value^0,c
  3462   001B66  0E00               	movlw	0
  3463   001B68  EC31  F00E         	call	_color_writetoaddr
  3464   001B6C                     
  3465                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3466   001B6C  0ED5               	movlw	213
  3467   001B6E  6E03               	movwf	color_writetoaddr@value^0,c
  3468   001B70  0E01               	movlw	1
  3469   001B72  EC31  F00E         	call	_color_writetoaddr
  3470   001B76  0012               	return		;funcret
  3471   001B78                     __end_of_color_click_init:
  3472                           	callstack 0
  3473                           
  3474 ;; *************** function _color_writetoaddr *****************
  3475 ;; Defined at:
  3476 ;;		line 21 in file "color.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  address         1    wreg     unsigned char 
  3479 ;;  value           1    2[COMRAM] unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  address         1    3[COMRAM] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3491 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3495 ;;Total ram usage:        2 bytes
  3496 ;; Hardware stack levels used: 1
  3497 ;; Hardware stack levels required when called: 2
  3498 ;; This function calls:
  3499 ;;		_I2C_2_Master_Start
  3500 ;;		_I2C_2_Master_Stop
  3501 ;;		_I2C_2_Master_Write
  3502 ;; This function is called by:
  3503 ;;		_color_click_init
  3504 ;;		_enable_color_interrupt
  3505 ;;		_set_interrupt_threshold
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text23
  3510   001C62                     __ptext23:
  3511                           	callstack 0
  3512   001C62                     _color_writetoaddr:
  3513                           	callstack 27
  3514                           
  3515                           ;incstack = 0
  3516                           ;color_writetoaddr@address stored from wreg
  3517   001C62  6E04               	movwf	color_writetoaddr@address^0,c
  3518   001C64                     
  3519                           ;color.c: 22:     I2C_2_Master_Start();
  3520   001C64  EC5D  F00E         	call	_I2C_2_Master_Start	;wreg free
  3521                           
  3522                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3523   001C68  0E52               	movlw	82
  3524   001C6A  EC4D  F00E         	call	_I2C_2_Master_Write
  3525                           
  3526                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3527   001C6E  5004               	movf	color_writetoaddr@address^0,w,c
  3528   001C70  0980               	iorlw	128
  3529   001C72  EC4D  F00E         	call	_I2C_2_Master_Write
  3530                           
  3531                           ;color.c: 25:     I2C_2_Master_Write(value);
  3532   001C76  5003               	movf	color_writetoaddr@value^0,w,c
  3533   001C78  EC4D  F00E         	call	_I2C_2_Master_Write
  3534                           
  3535                           ;color.c: 26:     I2C_2_Master_Stop();
  3536   001C7C  EC58  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3537   001C80  0012               	return		;funcret
  3538   001C82                     __end_of_color_writetoaddr:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function _I2C_2_Master_Write *****************
  3542 ;; Defined at:
  3543 ;;		line 45 in file "i2c.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  data_byte       1    wreg     unsigned char 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  data_byte       1    1[COMRAM] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3561 ;;Total ram usage:        1 bytes
  3562 ;; Hardware stack levels used: 1
  3563 ;; Hardware stack levels required when called: 1
  3564 ;; This function calls:
  3565 ;;		_I2C_2_Master_Idle
  3566 ;; This function is called by:
  3567 ;;		_color_writetoaddr
  3568 ;;		_color_read_Red
  3569 ;;		_color_read_Green
  3570 ;;		_color_read_Blue
  3571 ;;		_color_read_Clear
  3572 ;;		_read_interrupt_status
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text24
  3577   001C9A                     __ptext24:
  3578                           	callstack 0
  3579   001C9A                     _I2C_2_Master_Write:
  3580                           	callstack 28
  3581                           
  3582                           ;incstack = 0
  3583                           ;I2C_2_Master_Write@data_byte stored from wreg
  3584   001C9A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3585   001C9C                     
  3586                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3587   001C9C  ECE9  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3588   001CA0                     
  3589                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3590   001CA0  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3591   001CA4  0012               	return		;funcret
  3592   001CA6                     __end_of_I2C_2_Master_Write:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _I2C_2_Master_Stop *****************
  3596 ;; Defined at:
  3597 ;;		line 39 in file "i2c.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;Total ram usage:        0 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 1
  3618 ;; This function calls:
  3619 ;;		_I2C_2_Master_Idle
  3620 ;; This function is called by:
  3621 ;;		_color_writetoaddr
  3622 ;;		_color_read_Red
  3623 ;;		_color_read_Green
  3624 ;;		_color_read_Blue
  3625 ;;		_color_read_Clear
  3626 ;;		_read_interrupt_status
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text25
  3631   001CB0                     __ptext25:
  3632                           	callstack 0
  3633   001CB0                     _I2C_2_Master_Stop:
  3634                           	callstack 28
  3635   001CB0                     
  3636                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3637   001CB0  ECE9  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3638   001CB4                     
  3639                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3640   001CB4  010E               	movlb	14	; () banked
  3641   001CB6  85DA               	bsf	218,2,b	;volatile
  3642   001CB8                     
  3643                           ; BSR set to: 14
  3644   001CB8  0012               	return		;funcret
  3645   001CBA                     __end_of_I2C_2_Master_Stop:
  3646                           	callstack 0
  3647                           
  3648 ;; *************** function _I2C_2_Master_Start *****************
  3649 ;; Defined at:
  3650 ;;		line 27 in file "i2c.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3668 ;;Total ram usage:        0 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 1
  3671 ;; This function calls:
  3672 ;;		_I2C_2_Master_Idle
  3673 ;; This function is called by:
  3674 ;;		_color_writetoaddr
  3675 ;;		_color_read_Red
  3676 ;;		_color_read_Green
  3677 ;;		_color_read_Blue
  3678 ;;		_color_read_Clear
  3679 ;;		_read_interrupt_status
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text26
  3684   001CBA                     __ptext26:
  3685                           	callstack 0
  3686   001CBA                     _I2C_2_Master_Start:
  3687                           	callstack 28
  3688   001CBA                     
  3689                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3690   001CBA  ECE9  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3691   001CBE                     
  3692                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3693   001CBE  010E               	movlb	14	; () banked
  3694   001CC0  81DA               	bsf	218,0,b	;volatile
  3695   001CC2                     
  3696                           ; BSR set to: 14
  3697   001CC2  0012               	return		;funcret
  3698   001CC4                     __end_of_I2C_2_Master_Start:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _I2C_2_Master_Idle *****************
  3702 ;; Defined at:
  3703 ;;		line 22 in file "i2c.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;Total ram usage:        1 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_I2C_2_Master_Start
  3727 ;;		_I2C_2_Master_RepStart
  3728 ;;		_I2C_2_Master_Stop
  3729 ;;		_I2C_2_Master_Write
  3730 ;;		_I2C_2_Master_Read
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text27
  3735   001BD2                     __ptext27:
  3736                           	callstack 0
  3737   001BD2                     _I2C_2_Master_Idle:
  3738                           	callstack 28
  3739   001BD2                     l154:
  3740   001BD2  010E               	movlb	14	; () banked
  3741   001BD4  B5D8               	btfsc	216,2,b	;volatile
  3742   001BD6  EFEF  F00D         	goto	u841
  3743   001BDA  EFF1  F00D         	goto	u840
  3744   001BDE                     u841:
  3745   001BDE  EFE9  F00D         	goto	l154
  3746   001BE2                     u840:
  3747   001BE2                     
  3748                           ; BSR set to: 14
  3749   001BE2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3750   001BE6  0E1F               	movlw	31
  3751   001BE8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3752   001BEA  A4D8               	btfss	status,2,c
  3753   001BEC  EFFA  F00D         	goto	u851
  3754   001BF0  EFFC  F00D         	goto	u850
  3755   001BF4                     u851:
  3756   001BF4  EFE9  F00D         	goto	l154
  3757   001BF8                     u850:
  3758   001BF8                     
  3759                           ; BSR set to: 14
  3760   001BF8  0012               	return		;funcret
  3761   001BFA                     __end_of_I2C_2_Master_Idle:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _I2C_2_Master_Init *****************
  3765 ;; Defined at:
  3766 ;;		line 4 in file "i2c.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_color_click_init
  3790 ;;		_main
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text28
  3795   001BA8                     __ptext28:
  3796                           	callstack 0
  3797   001BA8                     _I2C_2_Master_Init:
  3798                           	callstack 29
  3799   001BA8                     
  3800                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3801   001BA8  010E               	movlb	14	; () banked
  3802   001BAA  51D9               	movf	217,w,b	;volatile
  3803   001BAC  0BF0               	andlw	-16
  3804   001BAE  0908               	iorlw	8
  3805   001BB0  6FD9               	movwf	217,b	;volatile
  3806   001BB2                     
  3807                           ; BSR set to: 14
  3808                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3809   001BB2  8BD9               	bsf	217,5,b	;volatile
  3810                           
  3811                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3812   001BB4  0E9F               	movlw	159
  3813   001BB6  6FD6               	movwf	214,b	;volatile
  3814   001BB8                     
  3815                           ; BSR set to: 14
  3816                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3817   001BB8  8A84               	bsf	132,5,c	;volatile
  3818   001BBA                     
  3819                           ; BSR set to: 14
  3820                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3821   001BBA  8C84               	bsf	132,6,c	;volatile
  3822   001BBC                     
  3823                           ; BSR set to: 14
  3824                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3825   001BBC  9BA7               	bcf	167,5,b	;volatile
  3826   001BBE                     
  3827                           ; BSR set to: 14
  3828                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3829   001BBE  9DA7               	bcf	167,6,b	;volatile
  3830                           
  3831                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3832   001BC0  0E1D               	movlw	29
  3833   001BC2  6F1D               	movwf	29,b	;volatile
  3834                           
  3835                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3836   001BC4  0E1E               	movlw	30
  3837   001BC6  6F1C               	movwf	28,b	;volatile
  3838                           
  3839                           ;i2c.c: 18:   RD5PPS=0x1C;
  3840   001BC8  0E1C               	movlw	28
  3841   001BCA  6F6F               	movwf	111,b	;volatile
  3842                           
  3843                           ;i2c.c: 19:   RD6PPS=0x1B;
  3844   001BCC  0E1B               	movlw	27
  3845   001BCE  6F70               	movwf	112,b	;volatile
  3846   001BD0                     
  3847                           ; BSR set to: 14
  3848   001BD0  0012               	return		;funcret
  3849   001BD2                     __end_of_I2C_2_Master_Init:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function _LEDSon_init *****************
  3853 ;; Defined at:
  3854 ;;		line 18 in file "LEDsOn.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		None
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text29
  3882   001C20                     __ptext29:
  3883                           	callstack 0
  3884   001C20                     _LEDSon_init:
  3885                           	callstack 30
  3886   001C20                     
  3887                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  3888   001C20  9288               	bcf	136,1,c	;volatile
  3889                           
  3890                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  3891   001C22  9088               	bcf	136,0,c	;volatile
  3892                           
  3893                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  3894   001C24  9884               	bcf	132,4,c	;volatile
  3895                           
  3896                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  3897   001C26  9684               	bcf	132,3,c	;volatile
  3898                           
  3899                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  3900   001C28  9086               	bcf	134,0,c	;volatile
  3901                           
  3902                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  3903   001C2A  9287               	bcf	135,1,c	;volatile
  3904                           
  3905                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  3906   001C2C  9E86               	bcf	134,7,c	;volatile
  3907                           
  3908                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  3909   001C2E  9881               	bcf	129,4,c	;volatile
  3910                           
  3911                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  3912   001C30  8E7E               	bsf	126,7,c	;volatile
  3913                           
  3914                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  3915   001C32  827F               	bsf	127,1,c	;volatile
  3916                           
  3917                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  3918   001C34  8879               	bsf	121,4,c	;volatile
  3919                           
  3920                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  3921   001C36  987C               	bcf	124,4,c	;volatile
  3922                           
  3923                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  3924   001C38  9280               	bcf	128,1,c	;volatile
  3925                           
  3926                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  3927   001C3A  907E               	bcf	126,0,c	;volatile
  3928                           
  3929                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  3930   001C3C  9080               	bcf	128,0,c	;volatile
  3931                           
  3932                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  3933   001C3E  967C               	bcf	124,3,c	;volatile
  3934   001C40  0012               	return		;funcret
  3935   001C42                     __end_of_LEDSon_init:
  3936                           	callstack 0
  3937                           
  3938                           	psect	rparam
  3939   000000                     
  3940                           	psect	idloc
  3941                           
  3942                           ;Config register IDLOC0 @ 0x200000
  3943                           ;	unspecified, using default values
  3944   200000                     	org	2097152
  3945   200000  0FFF               	dw	4095
  3946                           
  3947                           ;Config register IDLOC1 @ 0x200002
  3948                           ;	unspecified, using default values
  3949   200002                     	org	2097154
  3950   200002  0FFF               	dw	4095
  3951                           
  3952                           ;Config register IDLOC2 @ 0x200004
  3953                           ;	unspecified, using default values
  3954   200004                     	org	2097156
  3955   200004  0FFF               	dw	4095
  3956                           
  3957                           ;Config register IDLOC3 @ 0x200006
  3958                           ;	unspecified, using default values
  3959   200006                     	org	2097158
  3960   200006  0FFF               	dw	4095
  3961                           
  3962                           ;Config register IDLOC4 @ 0x200008
  3963                           ;	unspecified, using default values
  3964   200008                     	org	2097160
  3965   200008  0FFF               	dw	4095
  3966                           
  3967                           ;Config register IDLOC5 @ 0x20000A
  3968                           ;	unspecified, using default values
  3969   20000A                     	org	2097162
  3970   20000A  0FFF               	dw	4095
  3971                           
  3972                           ;Config register IDLOC6 @ 0x20000C
  3973                           ;	unspecified, using default values
  3974   20000C                     	org	2097164
  3975   20000C  0FFF               	dw	4095
  3976                           
  3977                           ;Config register IDLOC7 @ 0x20000E
  3978                           ;	unspecified, using default values
  3979   20000E                     	org	2097166
  3980   20000E  0FFF               	dw	4095
  3981                           
  3982                           	psect	config
  3983                           
  3984                           ;Config register CONFIG1L @ 0x300000
  3985                           ;	External Oscillator mode Selection bits
  3986                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3987                           ;	Power-up default value for COSC bits
  3988                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3989   300000                     	org	3145728
  3990   300000  AA                 	db	170
  3991                           
  3992                           ;Config register CONFIG1H @ 0x300001
  3993                           ;	unspecified, using default values
  3994                           ;	Clock Out Enable bit
  3995                           ;	CLKOUTEN = 0x1, unprogrammed default
  3996                           ;	Clock Switch Enable bit
  3997                           ;	CSWEN = 0x1, unprogrammed default
  3998                           ;	Fail-Safe Clock Monitor Enable bit
  3999                           ;	FCMEN = 0x1, unprogrammed default
  4000   300001                     	org	3145729
  4001   300001  FF                 	db	255
  4002                           
  4003                           ;Config register CONFIG2L @ 0x300002
  4004                           ;	unspecified, using default values
  4005                           ;	Master Clear Enable bit
  4006                           ;	MCLRE = 0x1, unprogrammed default
  4007                           ;	Power-up Timer Enable bit
  4008                           ;	PWRTE = 0x1, unprogrammed default
  4009                           ;	Low-power BOR enable bit
  4010                           ;	LPBOREN = 0x1, unprogrammed default
  4011                           ;	Brown-out Reset Enable bits
  4012                           ;	BOREN = 0x3, unprogrammed default
  4013   300002                     	org	3145730
  4014   300002  FF                 	db	255
  4015                           
  4016                           ;Config register CONFIG2H @ 0x300003
  4017                           ;	unspecified, using default values
  4018                           ;	Brown Out Reset Voltage selection bits
  4019                           ;	BORV = 0x3, unprogrammed default
  4020                           ;	ZCD Disable bit
  4021                           ;	ZCD = 0x1, unprogrammed default
  4022                           ;	PPSLOCK bit One-Way Set Enable bit
  4023                           ;	PPS1WAY = 0x1, unprogrammed default
  4024                           ;	Stack Full/Underflow Reset Enable bit
  4025                           ;	STVREN = 0x1, unprogrammed default
  4026                           ;	Debugger Enable bit
  4027                           ;	DEBUG = 0x1, unprogrammed default
  4028                           ;	Extended Instruction Set Enable bit
  4029                           ;	XINST = 0x1, unprogrammed default
  4030   300003                     	org	3145731
  4031   300003  FF                 	db	255
  4032                           
  4033                           ;Config register CONFIG3L @ 0x300004
  4034                           ;	WDT Period Select bits
  4035                           ;	WDTCPS = 0x1F, unprogrammed default
  4036                           ;	WDT operating mode
  4037                           ;	WDTE = OFF, WDT Disabled
  4038   300004                     	org	3145732
  4039   300004  9F                 	db	159
  4040                           
  4041                           ;Config register CONFIG3H @ 0x300005
  4042                           ;	unspecified, using default values
  4043                           ;	WDT Window Select bits
  4044                           ;	WDTCWS = 0x7, unprogrammed default
  4045                           ;	WDT input clock selector
  4046                           ;	WDTCCS = 0x7, unprogrammed default
  4047   300005                     	org	3145733
  4048   300005  FF                 	db	255
  4049                           
  4050                           ;Config register CONFIG4L @ 0x300006
  4051                           ;	unspecified, using default values
  4052                           ;	Write Protection Block 0
  4053                           ;	WRT0 = 0x1, unprogrammed default
  4054                           ;	Write Protection Block 1
  4055                           ;	WRT1 = 0x1, unprogrammed default
  4056                           ;	Write Protection Block 2
  4057                           ;	WRT2 = 0x1, unprogrammed default
  4058                           ;	Write Protection Block 3
  4059                           ;	WRT3 = 0x1, unprogrammed default
  4060                           ;	Write Protection Block 3
  4061                           ;	WRT4 = 0x1, unprogrammed default
  4062                           ;	Write Protection Block 3
  4063                           ;	WRT5 = 0x1, unprogrammed default
  4064                           ;	Write Protection Block 3
  4065                           ;	WRT6 = 0x1, unprogrammed default
  4066                           ;	Write Protection Block 3
  4067                           ;	WRT7 = 0x1, unprogrammed default
  4068   300006                     	org	3145734
  4069   300006  FF                 	db	255
  4070                           
  4071                           ;Config register CONFIG4H @ 0x300007
  4072                           ;	unspecified, using default values
  4073                           ;	Configuration Register Write Protection bit
  4074                           ;	WRTC = 0x1, unprogrammed default
  4075                           ;	Boot Block Write Protection bit
  4076                           ;	WRTB = 0x1, unprogrammed default
  4077                           ;	Data EEPROM Write Protection bit
  4078                           ;	WRTD = 0x1, unprogrammed default
  4079                           ;	Scanner Enable bit
  4080                           ;	SCANE = 0x1, unprogrammed default
  4081                           ;	Low Voltage Programming Enable bit
  4082                           ;	LVP = 0x1, unprogrammed default
  4083   300007                     	org	3145735
  4084   300007  FF                 	db	255
  4085                           
  4086                           ;Config register CONFIG5L @ 0x300008
  4087                           ;	unspecified, using default values
  4088                           ;	UserNVM Program Memory Code Protection bit
  4089                           ;	CP = 0x1, unprogrammed default
  4090                           ;	DataNVM Memory Code Protection bit
  4091                           ;	CPD = 0x1, unprogrammed default
  4092   300008                     	org	3145736
  4093   300008  FF                 	db	255
  4094                           
  4095                           ;Config register CONFIG5H @ 0x300009
  4096                           ;	unspecified, using default values
  4097   300009                     	org	3145737
  4098   300009  FF                 	db	255
  4099                           
  4100                           ;Config register CONFIG6L @ 0x30000A
  4101                           ;	unspecified, using default values
  4102                           ;	Table Read Protection Block 0
  4103                           ;	EBTR0 = 0x1, unprogrammed default
  4104                           ;	Table Read Protection Block 1
  4105                           ;	EBTR1 = 0x1, unprogrammed default
  4106                           ;	Table Read Protection Block 2
  4107                           ;	EBTR2 = 0x1, unprogrammed default
  4108                           ;	Table Read Protection Block 3
  4109                           ;	EBTR3 = 0x1, unprogrammed default
  4110                           ;	Table Read Protection Block 4
  4111                           ;	EBTR4 = 0x1, unprogrammed default
  4112                           ;	Table Read Protection Block 5
  4113                           ;	EBTR5 = 0x1, unprogrammed default
  4114                           ;	Table Read Protection Block 6
  4115                           ;	EBTR6 = 0x1, unprogrammed default
  4116                           ;	Table Read Protection Block 7
  4117                           ;	EBTR7 = 0x1, unprogrammed default
  4118   30000A                     	org	3145738
  4119   30000A  FF                 	db	255
  4120                           
  4121                           ;Config register CONFIG6H @ 0x30000B
  4122                           ;	unspecified, using default values
  4123                           ;	Boot Block Table Read Protection bit
  4124                           ;	EBTRB = 0x1, unprogrammed default
  4125   30000B                     	org	3145739
  4126   30000B  FF                 	db	255
  4127                           tosu	equ	0xFFF
  4128                           tosh	equ	0xFFE
  4129                           tosl	equ	0xFFD
  4130                           stkptr	equ	0xFFC
  4131                           pclatu	equ	0xFFB
  4132                           pclath	equ	0xFFA
  4133                           pcl	equ	0xFF9
  4134                           tblptru	equ	0xFF8
  4135                           tblptrh	equ	0xFF7
  4136                           tblptrl	equ	0xFF6
  4137                           tablat	equ	0xFF5
  4138                           prodh	equ	0xFF4
  4139                           prodl	equ	0xFF3
  4140                           indf0	equ	0xFEF
  4141                           postinc0	equ	0xFEE
  4142                           postdec0	equ	0xFED
  4143                           preinc0	equ	0xFEC
  4144                           plusw0	equ	0xFEB
  4145                           fsr0h	equ	0xFEA
  4146                           fsr0l	equ	0xFE9
  4147                           wreg	equ	0xFE8
  4148                           indf1	equ	0xFE7
  4149                           postinc1	equ	0xFE6
  4150                           postdec1	equ	0xFE5
  4151                           preinc1	equ	0xFE4
  4152                           plusw1	equ	0xFE3
  4153                           fsr1h	equ	0xFE2
  4154                           fsr1l	equ	0xFE1
  4155                           bsr	equ	0xFE0
  4156                           indf2	equ	0xFDF
  4157                           postinc2	equ	0xFDE
  4158                           postdec2	equ	0xFDD
  4159                           preinc2	equ	0xFDC
  4160                           plusw2	equ	0xFDB
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8

Data Sizes:
    Strings     16
    Constant    0
    Data        9
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     64     133
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2050$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1997$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1997$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S532DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S532DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               100   100      0    8838
                                             13 BANK0     51    51      0
                  _I2C_2_Master_Init
                        _LEDSon_init
                   _color_click_init
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    5570
                                             88 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     598
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     598
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Red
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      85       5       83.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllhhhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllhhhl     37      0       0      42        0.0%
BITBIGSFRllhhhl     2D      0       0      45        0.0%
BITBIGSFRllllhl     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllhhhl     1E      0       0      46        0.0%
BITBIGSFRhhlll      1D      0       0      36        0.0%
BITBIGSFRllhhl      11      0       0      47        0.0%
BITBIGSFRllllhl      F      0       0      54        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhl      9      0       0      53        0.0%
BITBIGSFRllhhhl      8      0       0      43        0.0%
BITBIGSFRlllllh      6      0       0      55        0.0%
BITBIGSFRllllhh      6      0       0      51        0.0%
BITBIGSFRlllhl       5      0       0      50        0.0%
BITBIGSFRlllhh       3      0       0      49        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRllhhhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhhhh      1      0       0      37        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhl      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllhl        1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120      57        0.0%
DATA                 0      0     120       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 14:11:56 2022

               _color_read_Red 1998                             l22 1C80                             l25 19E6  
                           l19 1B76                             l95 1380                             l88 1856  
          ___wmul@multiplicand 0003                            l300 1C98                            l151 1BD0  
                          l160 1CC2                            l154 1BD2                            l306 1BA6  
                          l163 1CAE                            l172 1B02                            l157 1BF8  
                          l341 1C1E                            l166 1CB8                            l249 1C40  
                          l169 1CA4                            l455 1214                            l288 1C60  
                          l297 1C84                            l468 14E4                            l832 193C  
                          l839 1944                            u701 10FC                            u710 1120  
                          u630 1718                            u711 111C                            u631 1714  
                          u720 114A                            u800 14A4                            u640 172A  
                          u721 1146                            u801 14A0                            u641 1726  
                          u730 118A                            u650 1752                            u810 1866  
                          u731 1186                            u651 174E                            u811 1862  
                          u740 11D4                            u660 1788                            u820 18BC  
                          u900 0EBE                            u741 11D0                            u661 1784  
                          u821 18B8                            u901 0EBA                            u750 1394  
                          u830 1B1E                            u670 1AC0                            u910 0ED4  
                          u751 1390                            u831 1B1A                            u671 1ABC  
                          u911 0ED0                            u840 1BE2                            u680 10A0  
                          u760 13C6                            u920 100E                            u841 1BDE  
                          u681 109C                            u761 13C2                            u921 100A  
                          u850 1BF8                            u690 10D2                            u770 1404  
                          u930 102C                            u851 1BF4                            u691 10CE  
                          u771 1400                            u931 1028                            u780 142E  
                          u940 1046                            u860 0E42                            u781 142A  
                          u941 1042                            u861 0E3C                            u790 145C  
                          u950 1056                            u870 0E44                            u791 1458  
                          u951 1052                            u880 0E56                            u960 150A  
                          u881 0E52                            u961 1506                            u890 0E92  
                          u970 1556                            u891 0E8E                            u971 1552  
                          u980 1572                            u981 156E                            u990 1AEC  
                          u991 1AE4                            _abs 1B04                            _pad 1858  
                          wreg 000FE8                           l1104 1AC0                           l2001 1B44  
                         l1041 187A                           l1050 0E9E                           l2003 1B48  
                         l2011 1998                           l1107 1CCE                           l1019 1996  
                         ?_abs 0013                           l1052 0EA6                           l2005 1B52  
                         l2013 19DE                           l2021 1802                           l1045 18D0  
                         l1053 0EEC                           l2007 1B62                           l2031 183E  
                         l2023 1826                           l1071 1632                           l1064 108C  
                         l2009 1B6C                           l2033 1848                           l2025 1830  
                         l2017 17D0                           l2041 1232                           l1081 1B3A  
                         l2201 1634                           l2035 184A                           l2027 1832  
                         l2019 17D8                           l2051 12FC                           l2043 1286  
                         l2211 1648                           l2203 1638                           l1084 1B42  
                         l2037 1854                           l2029 183C                           l2061 1C4E  
                         l2053 1340                           l2045 129A                           l1077 1A34  
                         l2221 1662                           l2213 164C                           l2205 163C  
                         l2055 1C20                           l2063 1C50                           l2047 129E  
                         l2039 1216                           l2071 1946                           l2231 167C  
                         l2223 166A                           l2215 1652                           l2207 1640  
                         l1096 17CE                           l2065 1C5A                           l2057 1C42  
                         l2049 12E0                           l2073 1958                           l2241 16AA  
                         l2233 1684                           l2225 1670                           l2217 1656  
                         l2209 1644                           l2067 1C5C                           l2059 1C4C  
                         l2083 1B78                           l2075 1960                           l2251 16CA  
                         l2243 16AA                           l2235 168C                           l2227 1674  
                         l2219 165A                           l2069 1C5E                           l2085 1B7C  
                         l2077 1968                           l2253 16CC                           l2245 16BC  
                         l2237 1692                           l2229 1678                           l2087 1B8A  
                         l1711 1718                           l2079 1984                           l2255 16CE  
                         l2247 16C2                           l2239 169E                           l2089 1B8E  
                         l1801 148E                           l1713 172A                           l2257 16D8  
                         l2249 16C6                           l1731 108E                           l1803 1494  
                         l1715 1734                           l1723 1A7E                           l1811 1858  
                         l2259 16F2                           l1741 10D2                           l1733 1092  
                         l1805 14A4                           l1717 1752                           l1709 1706  
                         l1725 1A8A                           l1821 189E                           l1813 1866  
                         l1901 1518                           l1831 1BE2                           l1751 1128  
                         l1743 10F2                           l1735 10A0                           l1807 14C4  
                         l1719 1788                           l1727 1A9C                           l1823 18BC  
                         l1815 1872                           l1911 1572                           l1903 1526  
                         l1761 11AA                           l1753 113C                           l1745 10F6  
                         l1737 10C0                           l1825 1B04                           l1729 1AA0  
                         l1817 1886                           l1841 0E76                           l1833 0E12  
                         l1913 15C8                           l1905 152A                           l1921 160A  
                         l1931 1BB8                           l1771 11F4                           l1763 11AC  
                         l1755 114A                           l1747 1102                           l1739 10C4  
                         l1827 1B1E                           l1819 189A                           l1851 0ED4  
                         l1843 0E92                           l1835 0E32                           l1907 153A  
                         l1933 1BBA                           l1829 1BD2                           l1941 1CA6  
                         l1765 11BE                           l1757 115C                           l1749 1120  
                         l1781 13B4                           l1861 0F02                           l1853 0EE0  
                         l1845 0EAE                           l1837 0E46                           l1917 15F8  
                         l1909 1556                           l1935 1BBC                           l1927 1BA8  
                         l1951 1AD8                           l1943 1CAA                           l1759 118A  
                         l1767 11C4                           l1791 140C                           l1783 13B8  
                         l1775 1382                           l1871 100E                           l1863 0F84  
                         l1855 0EE8                           l1847 0EBE                           l1839 0E56  
                         l1937 1BBE                           l1929 1BB2                           l1953 1AFE  
                         l1945 1AC4                           l1961 1C94                           l1769 11D4  
                         l1793 1420                           l1785 13C6                           l1777 1386  
                         l1881 106C                           l1873 102C                           l1865 0F8A  
                         l1857 0EF4                           l1849 0EC4                           l1891 1CA0  
                         l1939 1C64                           l1955 1B00                           l1947 1AC8  
                         l1971 18DA                           l1963 1BFA                           l1795 142E  
                         l1787 13E6                           l1779 1394                           l1875 1046  
                         l1867 0F90                           l1859 0EFC                           l1885 1CBA  
                         l1893 1CB0                           l1949 1AD0                           l1981 1910  
                         l1973 18EC                           l1965 1C16                           l1797 145C  
                         l1789 1404                           l1877 1056                           l1869 0FF4  
                         ?_pad 0011                           l1887 1CBE                           l1895 1CB4  
                         l1959 1C84                           l1983 1926                           l1975 18F4  
                         l1799 147C                           l1879 105C                           l1991 19E8  
                         l1889 1C9C                           l1985 192E                           l1977 18FC  
                         l1969 18D2                           l1897 14E6                           l1993 19F4  
                         l1987 1930                           l1979 190A                           l1899 150A  
                         l1995 1A10                           l1989 1936                           l1997 1A2C  
                         STR_1 0E01                           u1010 1C94                           u1011 1C90  
                         u1020 18EC                           u1021 18E8                           u1030 190A  
                         u1031 1906                           u1008 1AEE                           u1040 1926  
                         u1041 1922                           u1050 1A2C                           u1051 1A28  
                         u1060 1232                   ?_LEDSon_init 0001                           u1061 122E  
                         u1070 12FC                           u1071 12F8                           u1080 1BA6  
                         u1081 1BA2                           u1181 16B4                           u1247 1B58  
                 _BAUD4CONbits 000EE9                           _T2PR 000FBC                           abs@a 0013  
                         _dbuf 00BC                           _main 1634                           _dtoa 0E12  
                         _prec 00B6                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         prodh 000FF4                           prodl 000FF3                           start 0002  
       __end_of_color_read_Red 19E8                   ___param_bank 000000                          ??_abs 0015  
                        ??_pad 0017                __end_of___aodiv 1216                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 14E6                __end_of___lwdiv 1946  
                 vfpfcnvrt@fmt 0041                   main@red_read 008D        __end_of_sendCharSerial4 1C9A  
   __end_of_I2C_2_Master_Start 1CC4     __end_of_I2C_2_Master_Write 1CA6                          _flags 00B8  
                        _fputc 1706                          _fputs 1A7E                          pad@fp 0011  
                        _width 00B4                          _putch 1CCE                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
              __end_of_sprintf 1998          _I2C_2_Master_RepStart 1CA6                ?_color_read_Red 0005  
              __initialization 1A36                   __end_of_main 1706                   __end_of_dtoa 108E  
                       ??_main 005F                         ??_dtoa 0026                  __activetblptr 000001  
                main@blue_read 008B                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RD6PPS 000E70  
                       _RE4PPS 000E76                         _RG6PPS 000E88       __end_of_color_click_init 1B78  
                       _RX4PPS 000E15                         _TX4REG 000EE4                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 0057                      ??___aodiv 0011                      ??___aomod 0011  
                       ___wmul 1BFA                      ??___lwdiv 000B                         clear_0 1A5C  
                       clear_1 1A68                         isa$std 000001                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 1A36  
            ??_initDCmotorsPWM 0001                      ??_sprintf 005F                     __accesstop 0060  
      __end_of__initialization 1A70         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
               __pcstackCOMRAM 0001                   __pidataBANK0 1CC4                  __end_of_fputc 17D0  
                __end_of_fputs 1AC2                  __end_of_putch 1CD0                        ??_fputc 0005  
                      ??_fputs 000E                        ??_putch 0001                     __pbssBANK0 00A0  
                   __pbssBANK1 0100              _color_writetoaddr 1C62                   _T2CLKCONbits 000FBF  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_writetoaddr 0004  
               main@green_read 008A                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 1C82             _I2C_2_Master_Start 1CBA  
                   _initUSART4 1C42             _I2C_2_Master_Write 1C9A                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___aodiv 108E                        ___aomod 1382            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 18D2            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051  
                 __psmallconst 0E00                        __pcinit 1A36                        __ramtop 0E00  
                      __ptext0 1634                        __ptext1 1946                        __ptext2 19E8  
                      __ptext3 14E6                        __ptext4 0E12                        __ptext5 1858  
                      __ptext6 1A7E                        __ptext7 1706                        __ptext8 1CCE  
                      __ptext9 1B04                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 00BB                        main@buf 0076                        _sprintf 1946  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 1A70  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 1634                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     main@F14639 00DC  
                   ??_vfprintf 0057                _initDCmotorsPWM 17D0             setMotorPWM@negDuty 0013  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    _CCP1CONbits 000FAB                   _EUSART4RXbuf 00A0  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                   main@motorL 008E                     main@motorR 0097           main@master_closeness 006D  
                  vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F  
               __end_of___wmul 1C20            start_initialization 1A36                    __end_of_abs 1B44  
                  __end_of_pad 18D2                  _TxBufWriteCnt 005F                  ??_LEDSon_init 0001  
      __end_of_initDCmotorsPWM 1858                    vfprintf@fmt 0053                       ??___wmul 0005  
                  __pdataBANK0 00DC                    __pbssCOMRAM 005F                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001            __end_of_LEDSon_init 1C42               ___lwdiv@dividend 0007  
                    _dtoa$2078 002E                       ?___aodiv 0001                       ?___aomod 0001  
             ___aodiv@quotient 0013                       ?___lwdiv 0007           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 1BD2  
            _I2C_2_Master_Init 1BA8              _I2C_2_Master_Read 1AC2              _I2C_2_Master_Stop 1CB0  
                 _RxBufReadCnt 00BA             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B                       ?_sprintf 0059              _sendStringSerial4 1B78  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 14E6      __end_of_I2C_2_Master_Idle 1BFA      __end_of_I2C_2_Master_Init 1BD2  
    __end_of_I2C_2_Master_Read 1B04              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 1CBA  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002                   _TxBufReadCnt 00B9  
                    copy_data0 1A4A      __end_of_sendStringSerial4 1BA8                    _LEDSon_init 1C20  
__end_of_I2C_2_Master_RepStart 1CB0            __end_of_setMotorPWM 1382                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 0055                       __Lrparam 0000  
                   vfprintf@fp 0051                   __Lsmallconst 0E00                     ?_vfpfcnvrt 003F  
              ___aodiv@divisor 0009                ___aodiv@counter 0011                     _ANSELDbits 000EA7  
                   sprintf@fmt 005B                ___lwdiv@divisor 0009             __end_of_initUSART4 1C62  
              ___lwdiv@counter 000D                       __ptext10 1382                       __ptext11 108E  
                     __ptext20 1CA6                       __ptext12 1216                       __ptext21 1AC2  
                     __ptext13 1BFA                       __ptext22 1B44                       __ptext14 18D2  
                     __ptext23 1C62                       __ptext15 1B78                       __ptext24 1C9A  
                     __ptext16 1C82                       __ptext25 1CB0                       __ptext17 1C42  
                     __ptext26 1CBA                       __ptext18 17D0                       __ptext27 1BD2  
                     __ptext19 1998                       __ptext28 1BA8                       __ptext29 1C20  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       _vfprintf 19E8               ___aomod@dividend 0001  
                  _setMotorPWM 1216                      sprintf@ap 0060                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0045                ___aomod@counter 0011               _color_click_init 1B44  
                     sprintf@f 0062                       sprintf@s 0059                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 1C82                   ___aomod@sign 0012                   main@PWMcycle 008C  
