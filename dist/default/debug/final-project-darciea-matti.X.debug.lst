

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Nov 25 16:55:06 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	text11,global,reloc=2,class=CODE,delta=1
    19                           	psect	text12,global,reloc=2,class=CODE,delta=1
    20                           	psect	text13,global,reloc=2,class=CODE,delta=1
    21                           	psect	text14,global,reloc=2,class=CODE,delta=1
    22                           	psect	text15,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Version 2.35
    29                           ; Generated 05/05/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F67K40 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     _LATHbits	set	3968
    64   000000                     _LATGbits	set	3967
    65   000000                     _TRISFbits	set	3974
    66   000000                     _TRISDbits	set	3972
    67   000000                     _TRISGbits	set	3975
    68   000000                     _SSP2CON2bits	set	3802
    69   000000                     _SSP2CLKPPS	set	3612
    70   000000                     _SSP2DATPPS	set	3613
    71   000000                     _RC7PPS	set	3689
    72   000000                     _RE2PPS	set	3700
    73   000000                     _TRISCbits	set	3971
    74   000000                     _TRISEbits	set	3973
    75   000000                     _TRISHbits	set	3976
    76   000000                     _T2PR	set	4028
    77   000000                     _T2CONbits	set	4029
    78   000000                     _CCPR2H	set	4006
    79   000000                     _CCPR1H	set	4010
    80   000000                     _RE4PPS	set	3702
    81   000000                     _RG6PPS	set	3720
    82   000000                     _RD5PPS	set	3695
    83   000000                     _ANSELDbits	set	3751
    84   000000                     _SSP2ADD	set	3798
    85   000000                     _SSP2CON1bits	set	3801
    86   000000                     _CCPR4H	set	3873
    87   000000                     _CCPR3H	set	3877
    88   000000                     _T2CLKCONbits	set	4031
    89   000000                     _T2HLTbits	set	4030
    90   000000                     _CCP1CONbits	set	4011
    91   000000                     _CCPTMRS0bits	set	4013
    92   000000                     _CCP2CONbits	set	4007
    93   000000                     _LATAbits	set	3961
    94   000000                     _LATDbits	set	3964
    95   000000                     _CCP3CONbits	set	3878
    96   000000                     _CCP4CONbits	set	3874
    97   000000                     _SSP2CON2	set	3802
    98   000000                     _SSP2STAT	set	3800
    99   000000                     _SSP2BUF	set	3797
   100   000000                     _RD6PPS	set	3696
   101   000000                     _LATFbits	set	3966
   102   000000                     _TRISAbits	set	3969
   103                           
   104                           ; #config settings
   105                           
   106                           	psect	cinit
   107   01FB4C                     __pcinit:
   108                           	callstack 0
   109   01FB4C                     start_initialization:
   110                           	callstack 0
   111   01FB4C                     __initialization:
   112                           	callstack 0
   113   01FB4C                     end_of_initialization:
   114                           	callstack 0
   115   01FB4C                     __end_of__initialization:
   116                           	callstack 0
   117   01FB4C  0100               	movlb	0
   118   01FB4E  EFFC  F0FE         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	cstackCOMRAM
   121   000001                     __pcstackCOMRAM:
   122                           	callstack 0
   123   000001                     ??_I2C_2_Master_Idle:
   124   000001                     ?___wmul:
   125                           	callstack 0
   126   000001                     ___wmul@multiplier:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x0
   130   000001                     	ds	1
   131   000002                     ??_I2C_2_Master_Read:
   132   000002                     I2C_2_Master_Write@data_byte:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x1
   136   000002                     	ds	1
   137   000003                     color_writetoaddr@value:
   138                           	callstack 0
   139   000003                     I2C_2_Master_Read@ack:
   140                           	callstack 0
   141   000003                     ___wmul@multiplicand:
   142                           	callstack 0
   143                           
   144                           ; 2 bytes @ 0x2
   145   000003                     	ds	1
   146   000004                     color_writetoaddr@address:
   147                           	callstack 0
   148   000004                     I2C_2_Master_Read@tmp:
   149                           	callstack 0
   150                           
   151                           ; 1 bytes @ 0x3
   152   000004                     	ds	1
   153   000005                     ??_color_click_init:
   154   000005                     ?_color_read_Blue:
   155                           	callstack 0
   156   000005                     ___wmul@product:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x4
   160   000005                     	ds	2
   161   000007                     ??_color_read_Blue:
   162   000007                     ?___lwdiv:
   163                           	callstack 0
   164   000007                     ___lwdiv@dividend:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x6
   168   000007                     	ds	2
   169   000009                     ___lwdiv@divisor:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x8
   173   000009                     	ds	1
   174   00000A                     color_read_Blue@tmp:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x9
   178   00000A                     	ds	1
   179   00000B                     ___lwdiv@quotient:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0xA
   183   00000B                     	ds	2
   184   00000D                     ___lwdiv@counter:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0xC
   188   00000D                     	ds	1
   189   00000E                     setMotorPWM@m:
   190                           	callstack 0
   191                           
   192                           ; 2 bytes @ 0xD
   193   00000E                     	ds	2
   194   000010                     ??_setMotorPWM:
   195                           
   196                           ; 1 bytes @ 0xF
   197   000010                     	ds	2
   198   000012                     setMotorPWM@posDuty:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x11
   202   000012                     	ds	1
   203   000013                     setMotorPWM@negDuty:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x12
   207   000013                     	ds	1
   208   000014                     main@onoff:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x13
   212   000014                     	ds	2
   213   000016                     main@PWMcycle:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x15
   217   000016                     	ds	1
   218   000017                     main@motorL:
   219                           	callstack 0
   220                           
   221                           ; 9 bytes @ 0x16
   222   000017                     	ds	9
   223   000020                     main@motorR:
   224                           	callstack 0
   225                           
   226                           ; 9 bytes @ 0x1F
   227   000020                     	ds	9
   228                           
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 17 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  motorR          9   31[COMRAM] struct DC_motor
   239 ;;  motorL          9   22[COMRAM] struct DC_motor
   240 ;;  onoff           2   19[COMRAM] unsigned int 
   241 ;;  PWMcycle        1   21[COMRAM] unsigned char 
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   252 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   254 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   255 ;;Total ram usage:       21 bytes
   256 ;; Hardware stack levels required when called: 4
   257 ;; This function calls:
   258 ;;		_I2C_2_Master_Init
   259 ;;		_LEDSon_init
   260 ;;		_color_click_init
   261 ;;		_color_read_Blue
   262 ;;		_initDCmotorsPWM
   263 ;;		_setMotorPWM
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270   01FDF8                     __ptext0:
   271                           	callstack 0
   272   01FDF8                     _main:
   273                           	callstack 27
   274   01FDF8                     
   275                           ;main.c: 22:     LEDSon_init();
   276   01FDF8  ECCE  F0FD         	call	_LEDSon_init	;wreg free
   277   01FDFC                     
   278                           ;main.c: 23:     I2C_2_Master_Init();
   279   01FDFC  EC06  F0FE         	call	_I2C_2_Master_Init	;wreg free
   280   01FE00                     
   281                           ;main.c: 24:     color_click_init();
   282   01FE00  EC1B  F0FE         	call	_color_click_init	;wreg free
   283   01FE04                     
   284                           ;main.c: 25:     initDCmotorsPWM();
   285   01FE04  ECB8  F0FE         	call	_initDCmotorsPWM	;wreg free
   286   01FE08                     
   287                           ;main.c: 33:     unsigned char PWMcycle = T2PR;
   288   01FE08  CFBC F016          	movff	4028,main@PWMcycle	;volatile
   289   01FE0C                     
   290                           ;main.c: 35:     struct DC_motor motorL, motorR;;main.c: 37:     motorL.power=0;
   291   01FE0C  0E00               	movlw	0
   292   01FE0E  6E17               	movwf	main@motorL^0,c
   293   01FE10                     
   294                           ;main.c: 38:     motorL.direction=1;
   295   01FE10  0E01               	movlw	1
   296   01FE12  6E18               	movwf	(main@motorL+1)^0,c
   297   01FE14                     
   298                           ;main.c: 39:     motorL.brakemode=1;
   299   01FE14  0E01               	movlw	1
   300   01FE16  6E19               	movwf	(main@motorL+2)^0,c
   301   01FE18                     
   302                           ;main.c: 40:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   303   01FE18  0EAA               	movlw	170
   304   01FE1A  6E1C               	movwf	(main@motorL+5)^0,c
   305   01FE1C  0E0F               	movlw	15
   306   01FE1E  6E1D               	movwf	(main@motorL+6)^0,c
   307   01FE20                     
   308                           ;main.c: 41:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   309   01FE20  0EA6               	movlw	166
   310   01FE22  6E1E               	movwf	(main@motorL+7)^0,c
   311   01FE24  0E0F               	movlw	15
   312   01FE26  6E1F               	movwf	(main@motorL+8)^0,c
   313   01FE28                     
   314                           ;main.c: 42:     motorL.PWMperiod=PWMcycle;
   315   01FE28  C016  F01A         	movff	main@PWMcycle,main@motorL+3
   316   01FE2C  6A1B               	clrf	(main@motorL+4)^0,c
   317   01FE2E                     
   318                           ;main.c: 44:     motorR.power=0;
   319   01FE2E  0E00               	movlw	0
   320   01FE30  6E20               	movwf	main@motorR^0,c
   321   01FE32                     
   322                           ;main.c: 45:     motorR.direction=1;
   323   01FE32  0E01               	movlw	1
   324   01FE34  6E21               	movwf	(main@motorR+1)^0,c
   325   01FE36                     
   326                           ;main.c: 46:     motorR.brakemode=1;
   327   01FE36  0E01               	movlw	1
   328   01FE38  6E22               	movwf	(main@motorR+2)^0,c
   329                           
   330                           ;main.c: 47:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   331   01FE3A  0E25               	movlw	37
   332   01FE3C  6E25               	movwf	(main@motorR+5)^0,c
   333   01FE3E  0E0F               	movlw	15
   334   01FE40  6E26               	movwf	(main@motorR+6)^0,c
   335                           
   336                           ;main.c: 48:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   337   01FE42  0E21               	movlw	33
   338   01FE44  6E27               	movwf	(main@motorR+7)^0,c
   339   01FE46  0E0F               	movlw	15
   340   01FE48  6E28               	movwf	(main@motorR+8)^0,c
   341   01FE4A                     
   342                           ;main.c: 49:     motorR.PWMperiod=PWMcycle;
   343   01FE4A  C016  F023         	movff	main@PWMcycle,main@motorR+3
   344   01FE4E  6A24               	clrf	(main@motorR+4)^0,c
   345   01FE50                     
   346                           ;main.c: 51:     setMotorPWM(&motorL);
   347   01FE50  0E17               	movlw	low main@motorL
   348   01FE52  6E0E               	movwf	setMotorPWM@m^0,c
   349   01FE54  0E00               	movlw	high main@motorL
   350   01FE56  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   351   01FE58  EC4A  F0FF         	call	_setMotorPWM	;wreg free
   352   01FE5C                     
   353                           ;main.c: 52:     setMotorPWM(&motorR);
   354   01FE5C  0E20               	movlw	low main@motorR
   355   01FE5E  6E0E               	movwf	setMotorPWM@m^0,c
   356   01FE60  0E00               	movlw	high main@motorR
   357   01FE62  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   358   01FE64  EC4A  F0FF         	call	_setMotorPWM	;wreg free
   359   01FE68                     
   360                           ;main.c: 58:     LATDbits.LATD7=1;
   361   01FE68  8E7C               	bsf	124,7,c	;volatile
   362   01FE6A                     
   363                           ;main.c: 59:     TRISDbits.TRISD7=0;
   364   01FE6A  9E84               	bcf	132,7,c	;volatile
   365   01FE6C                     l1309:
   366                           
   367                           ;main.c: 61:         onoff = color_read_Blue();
   368   01FE6C  EC56  F0FE         	call	_color_read_Blue	;wreg free
   369   01FE70  C005  F014         	movff	?_color_read_Blue,main@onoff
   370   01FE74  C006  F015         	movff	?_color_read_Blue+1,main@onoff+1
   371   01FE78                     
   372                           ;main.c: 62:         if (onoff != 0) {LATDbits.LATD7 = 0;}
   373   01FE78  5014               	movf	main@onoff^0,w,c
   374   01FE7A  1015               	iorwf	(main@onoff+1)^0,w,c
   375   01FE7C  B4D8               	btfsc	status,2,c
   376   01FE7E  EF43  F0FF         	goto	u261
   377   01FE82  EF45  F0FF         	goto	u260
   378   01FE86                     u261:
   379   01FE86  EF36  F0FF         	goto	l1309
   380   01FE8A                     u260:
   381   01FE8A  9E7C               	bcf	124,7,c	;volatile
   382   01FE8C  EF36  F0FF         	goto	l1309
   383   01FE90  EF01  F000         	goto	start
   384   01FE94                     __end_of_main:
   385                           	callstack 0
   386                           
   387 ;; *************** function _setMotorPWM *****************
   388 ;; Defined at:
   389 ;;		line 61 in file "dc_motor.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;  m               2   13[COMRAM] PTR struct DC_motor
   392 ;;		 -> main@motorR(9), main@motorL(9), 
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  negDuty         1   18[COMRAM] unsigned char 
   395 ;;  posDuty         1   17[COMRAM] unsigned char 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   408 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   409 ;;Total ram usage:        6 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; Hardware stack levels required when called: 1
   412 ;; This function calls:
   413 ;;		___lwdiv
   414 ;;		___wmul
   415 ;; This function is called by:
   416 ;;		_main
   417 ;;		_stop
   418 ;;		_turnLeft
   419 ;;		_turnRight
   420 ;;		_fullSpeedAhead
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text1
   425   01FE94                     __ptext1:
   426                           	callstack 0
   427   01FE94                     _setMotorPWM:
   428                           	callstack 29
   429   01FE94                     
   430                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
   431   01FE94  EE20 F002          	lfsr	2,2
   432   01FE98  500E               	movf	setMotorPWM@m^0,w,c
   433   01FE9A  26D9               	addwf	fsr2l,f,c
   434   01FE9C  500F               	movf	(setMotorPWM@m+1)^0,w,c
   435   01FE9E  22DA               	addwfc	fsr2h,f,c
   436   01FEA0  50DF               	movf	indf2,w,c
   437   01FEA2  B4D8               	btfsc	status,2,c
   438   01FEA4  EF56  F0FF         	goto	u191
   439   01FEA8  EF58  F0FF         	goto	u190
   440   01FEAC                     u191:
   441   01FEAC  EF8C  F0FF         	goto	l1193
   442   01FEB0                     u190:
   443   01FEB0                     
   444                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
   445   01FEB0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
   446   01FEB4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
   447   01FEB8  50DF               	movf	indf2,w,c
   448   01FEBA  6E10               	movwf	??_setMotorPWM^0,c
   449   01FEBC  5010               	movf	??_setMotorPWM^0,w,c
   450   01FEBE  6E01               	movwf	___wmul@multiplier^0,c
   451   01FEC0  6A02               	clrf	(___wmul@multiplier+1)^0,c
   452   01FEC2  EE20 F003          	lfsr	2,3
   453   01FEC6  500E               	movf	setMotorPWM@m^0,w,c
   454   01FEC8  26D9               	addwf	fsr2l,f,c
   455   01FECA  500F               	movf	(setMotorPWM@m+1)^0,w,c
   456   01FECC  22DA               	addwfc	fsr2h,f,c
   457   01FECE  CFDE F003          	movff	postinc2,___wmul@multiplicand
   458   01FED2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
   459   01FED6  ECDF  F0FD         	call	___wmul	;wreg free
   460   01FEDA  C001  F007         	movff	?___wmul,___lwdiv@dividend
   461   01FEDE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
   462   01FEE2  0E00               	movlw	0
   463   01FEE4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
   464   01FEE6  0E64               	movlw	100
   465   01FEE8  6E09               	movwf	___lwdiv@divisor^0,c
   466   01FEEA  EC7E  F0FE         	call	___lwdiv	;wreg free
   467   01FEEE  EE20 F003          	lfsr	2,3
   468   01FEF2  500E               	movf	setMotorPWM@m^0,w,c
   469   01FEF4  26D9               	addwf	fsr2l,f,c
   470   01FEF6  500F               	movf	(setMotorPWM@m+1)^0,w,c
   471   01FEF8  22DA               	addwfc	fsr2h,f,c
   472   01FEFA  50DF               	movf	indf2,w,c
   473   01FEFC  6E11               	movwf	(??_setMotorPWM+1)^0,c
   474   01FEFE  5007               	movf	?___lwdiv^0,w,c
   475   01FF00  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
   476   01FF02  6E12               	movwf	setMotorPWM@posDuty^0,c
   477   01FF04                     
   478                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
   479   01FF04  EE20 F003          	lfsr	2,3
   480   01FF08  500E               	movf	setMotorPWM@m^0,w,c
   481   01FF0A  26D9               	addwf	fsr2l,f,c
   482   01FF0C  500F               	movf	(setMotorPWM@m+1)^0,w,c
   483   01FF0E  22DA               	addwfc	fsr2h,f,c
   484   01FF10  50DF               	movf	indf2,w,c
   485   01FF12  6E13               	movwf	setMotorPWM@negDuty^0,c
   486                           
   487                           ;dc_motor.c: 68:     }
   488   01FF14  EFAF  F0FF         	goto	l1197
   489   01FF18                     l1193:
   490                           
   491                           ;dc_motor.c: 70:         posDuty=0;
   492   01FF18  0E00               	movlw	0
   493   01FF1A  6E12               	movwf	setMotorPWM@posDuty^0,c
   494   01FF1C                     
   495                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
   496   01FF1C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
   497   01FF20  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
   498   01FF24  50DF               	movf	indf2,w,c
   499   01FF26  6E10               	movwf	??_setMotorPWM^0,c
   500   01FF28  5010               	movf	??_setMotorPWM^0,w,c
   501   01FF2A  6E01               	movwf	___wmul@multiplier^0,c
   502   01FF2C  6A02               	clrf	(___wmul@multiplier+1)^0,c
   503   01FF2E  EE20 F003          	lfsr	2,3
   504   01FF32  500E               	movf	setMotorPWM@m^0,w,c
   505   01FF34  26D9               	addwf	fsr2l,f,c
   506   01FF36  500F               	movf	(setMotorPWM@m+1)^0,w,c
   507   01FF38  22DA               	addwfc	fsr2h,f,c
   508   01FF3A  CFDE F003          	movff	postinc2,___wmul@multiplicand
   509   01FF3E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
   510   01FF42  ECDF  F0FD         	call	___wmul	;wreg free
   511   01FF46  C001  F007         	movff	?___wmul,___lwdiv@dividend
   512   01FF4A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
   513   01FF4E  0E00               	movlw	0
   514   01FF50  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
   515   01FF52  0E64               	movlw	100
   516   01FF54  6E09               	movwf	___lwdiv@divisor^0,c
   517   01FF56  EC7E  F0FE         	call	___lwdiv	;wreg free
   518   01FF5A  5007               	movf	?___lwdiv^0,w,c
   519   01FF5C  6E13               	movwf	setMotorPWM@negDuty^0,c
   520   01FF5E                     l1197:
   521                           
   522                           ;dc_motor.c: 74:     if (m->direction) {
   523   01FF5E  EE20 F001          	lfsr	2,1
   524   01FF62  500E               	movf	setMotorPWM@m^0,w,c
   525   01FF64  26D9               	addwf	fsr2l,f,c
   526   01FF66  500F               	movf	(setMotorPWM@m+1)^0,w,c
   527   01FF68  22DA               	addwfc	fsr2h,f,c
   528   01FF6A  50DF               	movf	indf2,w,c
   529   01FF6C  B4D8               	btfsc	status,2,c
   530   01FF6E  EFBB  F0FF         	goto	u201
   531   01FF72  EFBD  F0FF         	goto	u200
   532   01FF76                     u201:
   533   01FF76  EFDF  F0FF         	goto	l1201
   534   01FF7A                     u200:
   535   01FF7A                     
   536                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
   537   01FF7A  EE20 F005          	lfsr	2,5
   538   01FF7E  500E               	movf	setMotorPWM@m^0,w,c
   539   01FF80  26D9               	addwf	fsr2l,f,c
   540   01FF82  500F               	movf	(setMotorPWM@m+1)^0,w,c
   541   01FF84  22DA               	addwfc	fsr2h,f,c
   542   01FF86  CFDE F010          	movff	postinc2,??_setMotorPWM
   543   01FF8A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   544   01FF8E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   545   01FF92  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   546   01FF96  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
   547                           
   548                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
   549   01FF9A  EE20 F007          	lfsr	2,7
   550   01FF9E  500E               	movf	setMotorPWM@m^0,w,c
   551   01FFA0  26D9               	addwf	fsr2l,f,c
   552   01FFA2  500F               	movf	(setMotorPWM@m+1)^0,w,c
   553   01FFA4  22DA               	addwfc	fsr2h,f,c
   554   01FFA6  CFDE F010          	movff	postinc2,??_setMotorPWM
   555   01FFAA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   556   01FFAE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   557   01FFB2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   558   01FFB6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
   559                           
   560                           ;dc_motor.c: 77:     } else {
   561   01FFBA  EFFF  F0FF         	goto	l83
   562   01FFBE                     l1201:
   563                           
   564                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
   565   01FFBE  EE20 F005          	lfsr	2,5
   566   01FFC2  500E               	movf	setMotorPWM@m^0,w,c
   567   01FFC4  26D9               	addwf	fsr2l,f,c
   568   01FFC6  500F               	movf	(setMotorPWM@m+1)^0,w,c
   569   01FFC8  22DA               	addwfc	fsr2h,f,c
   570   01FFCA  CFDE F010          	movff	postinc2,??_setMotorPWM
   571   01FFCE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   572   01FFD2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   573   01FFD6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   574   01FFDA  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
   575                           
   576                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
   577   01FFDE  EE20 F007          	lfsr	2,7
   578   01FFE2  500E               	movf	setMotorPWM@m^0,w,c
   579   01FFE4  26D9               	addwf	fsr2l,f,c
   580   01FFE6  500F               	movf	(setMotorPWM@m+1)^0,w,c
   581   01FFE8  22DA               	addwfc	fsr2h,f,c
   582   01FFEA  CFDE F010          	movff	postinc2,??_setMotorPWM
   583   01FFEE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
   584   01FFF2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
   585   01FFF6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
   586   01FFFA  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
   587   01FFFE                     l83:
   588   01FFFE  0012               	return		;funcret
   589   020000                     __end_of_setMotorPWM:
   590                           	callstack 0
   591                           
   592 ;; *************** function ___wmul *****************
   593 ;; Defined at:
   594 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  multiplier      2    0[COMRAM] unsigned int 
   597 ;;  multiplicand    2    2[COMRAM] unsigned int 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  product         2    4[COMRAM] unsigned int 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  2    0[COMRAM] unsigned int 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, prodl, prodh
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   613 ;;Total ram usage:        6 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_setMotorPWM
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text2
   623   01FBBE                     __ptext2:
   624                           	callstack 0
   625   01FBBE                     ___wmul:
   626                           	callstack 29
   627   01FBBE  5001               	movf	___wmul@multiplier^0,w,c
   628   01FBC0  0203               	mulwf	___wmul@multiplicand^0,c
   629   01FBC2  CFF3 F005          	movff	prodl,___wmul@product
   630   01FBC6  CFF4 F006          	movff	prodh,___wmul@product+1
   631   01FBCA  5001               	movf	___wmul@multiplier^0,w,c
   632   01FBCC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
   633   01FBCE  50F3               	movf	243,w,c
   634   01FBD0  2606               	addwf	(___wmul@product+1)^0,f,c
   635   01FBD2  5002               	movf	(___wmul@multiplier+1)^0,w,c
   636   01FBD4  0203               	mulwf	___wmul@multiplicand^0,c
   637   01FBD6  50F3               	movf	243,w,c
   638   01FBD8  2606               	addwf	(___wmul@product+1)^0,f,c
   639   01FBDA  C005  F001         	movff	___wmul@product,?___wmul
   640   01FBDE  C006  F002         	movff	___wmul@product+1,?___wmul+1
   641   01FBE2  0012               	return		;funcret
   642   01FBE4                     __end_of___wmul:
   643                           	callstack 0
   644                           
   645 ;; *************** function ___lwdiv *****************
   646 ;; Defined at:
   647 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  dividend        2    6[COMRAM] unsigned int 
   650 ;;  divisor         2    8[COMRAM] unsigned int 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  quotient        2   10[COMRAM] unsigned int 
   653 ;;  counter         1   12[COMRAM] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  2    6[COMRAM] unsigned int 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   664 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   666 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   667 ;;Total ram usage:        7 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_setMotorPWM
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text3
   677   01FCFC                     __ptext3:
   678                           	callstack 0
   679   01FCFC                     ___lwdiv:
   680                           	callstack 29
   681   01FCFC  0E00               	movlw	0
   682   01FCFE  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
   683   01FD00  0E00               	movlw	0
   684   01FD02  6E0B               	movwf	___lwdiv@quotient^0,c
   685   01FD04  5009               	movf	___lwdiv@divisor^0,w,c
   686   01FD06  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
   687   01FD08  B4D8               	btfsc	status,2,c
   688   01FD0A  EF89  F0FE         	goto	u161
   689   01FD0E  EF8B  F0FE         	goto	u160
   690   01FD12                     u161:
   691   01FD12  EFB3  F0FE         	goto	l707
   692   01FD16                     u160:
   693   01FD16  0E01               	movlw	1
   694   01FD18  6E0D               	movwf	___lwdiv@counter^0,c
   695   01FD1A  EF93  F0FE         	goto	l1157
   696   01FD1E                     l1155:
   697   01FD1E  90D8               	bcf	status,0,c
   698   01FD20  3609               	rlcf	___lwdiv@divisor^0,f,c
   699   01FD22  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
   700   01FD24  2A0D               	incf	___lwdiv@counter^0,f,c
   701   01FD26                     l1157:
   702   01FD26  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
   703   01FD28  EF98  F0FE         	goto	u171
   704   01FD2C  EF9A  F0FE         	goto	u170
   705   01FD30                     u171:
   706   01FD30  EF8F  F0FE         	goto	l1155
   707   01FD34                     u170:
   708   01FD34                     l1159:
   709   01FD34  90D8               	bcf	status,0,c
   710   01FD36  360B               	rlcf	___lwdiv@quotient^0,f,c
   711   01FD38  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
   712   01FD3A  5009               	movf	___lwdiv@divisor^0,w,c
   713   01FD3C  5C07               	subwf	___lwdiv@dividend^0,w,c
   714   01FD3E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
   715   01FD40  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
   716   01FD42  A0D8               	btfss	status,0,c
   717   01FD44  EFA6  F0FE         	goto	u181
   718   01FD48  EFA8  F0FE         	goto	u180
   719   01FD4C                     u181:
   720   01FD4C  EFAD  F0FE         	goto	l1167
   721   01FD50                     u180:
   722   01FD50  5009               	movf	___lwdiv@divisor^0,w,c
   723   01FD52  5E07               	subwf	___lwdiv@dividend^0,f,c
   724   01FD54  500A               	movf	(___lwdiv@divisor+1)^0,w,c
   725   01FD56  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
   726   01FD58  800B               	bsf	___lwdiv@quotient^0,0,c
   727   01FD5A                     l1167:
   728   01FD5A  90D8               	bcf	status,0,c
   729   01FD5C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
   730   01FD5E  3209               	rrcf	___lwdiv@divisor^0,f,c
   731   01FD60  2E0D               	decfsz	___lwdiv@counter^0,f,c
   732   01FD62  EF9A  F0FE         	goto	l1159
   733   01FD66                     l707:
   734   01FD66  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
   735   01FD6A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
   736   01FD6E  0012               	return		;funcret
   737   01FD70                     __end_of___lwdiv:
   738                           	callstack 0
   739                           
   740 ;; *************** function _initDCmotorsPWM *****************
   741 ;; Defined at:
   742 ;;		line 6 in file "dc_motor.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text4
   770   01FD70                     __ptext4:
   771                           	callstack 0
   772   01FD70                     _initDCmotorsPWM:
   773                           	callstack 30
   774   01FD70                     
   775                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
   776   01FD70  9485               	bcf	133,2,c	;volatile
   777                           
   778                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
   779   01FD72  9885               	bcf	133,4,c	;volatile
   780                           
   781                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
   782   01FD74  9E83               	bcf	131,7,c	;volatile
   783                           
   784                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
   785   01FD76  9C87               	bcf	135,6,c	;volatile
   786   01FD78                     
   787                           ;dc_motor.c: 14:     RE2PPS=0x05;
   788   01FD78  0E05               	movlw	5
   789   01FD7A  010E               	movlb	14	; () banked
   790   01FD7C  6F74               	movwf	116,b	;volatile
   791                           
   792                           ;dc_motor.c: 15:     RE4PPS=0x06;
   793   01FD7E  0E06               	movlw	6
   794   01FD80  6F76               	movwf	118,b	;volatile
   795                           
   796                           ;dc_motor.c: 16:     RC7PPS=0x07;
   797   01FD82  0E07               	movlw	7
   798   01FD84  6F69               	movwf	105,b	;volatile
   799                           
   800                           ;dc_motor.c: 17:     RG6PPS=0x08;
   801   01FD86  0E08               	movlw	8
   802   01FD88  6F88               	movwf	136,b	;volatile
   803                           
   804                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
   805   01FD8A  50BD               	movf	189,w,c	;volatile
   806   01FD8C  0B8F               	andlw	-113
   807   01FD8E  0940               	iorlw	64
   808   01FD90  6EBD               	movwf	189,c	;volatile
   809                           
   810                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
   811   01FD92  0EE0               	movlw	-32
   812   01FD94  16BE               	andwf	190,f,c	;volatile
   813                           
   814                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
   815   01FD96  50BF               	movf	191,w,c	;volatile
   816   01FD98  0BF0               	andlw	-16
   817   01FD9A  0901               	iorlw	1
   818   01FD9C  6EBF               	movwf	191,c	;volatile
   819                           
   820                           ;dc_motor.c: 26:     T2PR=99;
   821   01FD9E  0E63               	movlw	99
   822   01FDA0  6EBC               	movwf	188,c	;volatile
   823   01FDA2                     
   824                           ; BSR set to: 14
   825                           ;dc_motor.c: 27:     T2CONbits.ON=1;
   826   01FDA2  8EBD               	bsf	189,7,c	;volatile
   827                           
   828                           ;dc_motor.c: 31:     CCPR1H=0;
   829   01FDA4  0E00               	movlw	0
   830   01FDA6  6EAA               	movwf	170,c	;volatile
   831                           
   832                           ;dc_motor.c: 32:     CCPR2H=0;
   833   01FDA8  0E00               	movlw	0
   834   01FDAA  6EA6               	movwf	166,c	;volatile
   835                           
   836                           ;dc_motor.c: 33:     CCPR3H=0;
   837   01FDAC  0E00               	movlw	0
   838   01FDAE  010F               	movlb	15	; () banked
   839   01FDB0  6F25               	movwf	37,b	;volatile
   840                           
   841                           ;dc_motor.c: 34:     CCPR4H=0;
   842   01FDB2  0E00               	movlw	0
   843   01FDB4  6F21               	movwf	33,b	;volatile
   844                           
   845                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
   846   01FDB6  0EFC               	movlw	-4
   847   01FDB8  16AD               	andwf	173,f,c	;volatile
   848                           
   849                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
   850   01FDBA  0EF3               	movlw	-13
   851   01FDBC  16AD               	andwf	173,f,c	;volatile
   852                           
   853                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
   854   01FDBE  0ECF               	movlw	-49
   855   01FDC0  16AD               	andwf	173,f,c	;volatile
   856                           
   857                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
   858   01FDC2  0E3F               	movlw	-193
   859   01FDC4  16AD               	andwf	173,f,c	;volatile
   860   01FDC6                     
   861                           ; BSR set to: 15
   862                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
   863   01FDC6  88AB               	bsf	171,4,c	;volatile
   864                           
   865                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
   866   01FDC8  50AB               	movf	171,w,c	;volatile
   867   01FDCA  0BF0               	andlw	-16
   868   01FDCC  090C               	iorlw	12
   869   01FDCE  6EAB               	movwf	171,c	;volatile
   870   01FDD0                     
   871                           ; BSR set to: 15
   872                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
   873   01FDD0  8EAB               	bsf	171,7,c	;volatile
   874   01FDD2                     
   875                           ; BSR set to: 15
   876                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
   877   01FDD2  88A7               	bsf	167,4,c	;volatile
   878                           
   879                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
   880   01FDD4  50A7               	movf	167,w,c	;volatile
   881   01FDD6  0BF0               	andlw	-16
   882   01FDD8  090C               	iorlw	12
   883   01FDDA  6EA7               	movwf	167,c	;volatile
   884   01FDDC                     
   885                           ; BSR set to: 15
   886                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
   887   01FDDC  8EA7               	bsf	167,7,c	;volatile
   888   01FDDE                     
   889                           ; BSR set to: 15
   890                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
   891   01FDDE  8926               	bsf	38,4,b	;volatile
   892                           
   893                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
   894   01FDE0  5126               	movf	38,w,b	;volatile
   895   01FDE2  0BF0               	andlw	-16
   896   01FDE4  090C               	iorlw	12
   897   01FDE6  6F26               	movwf	38,b	;volatile
   898   01FDE8                     
   899                           ; BSR set to: 15
   900                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
   901   01FDE8  8F26               	bsf	38,7,b	;volatile
   902   01FDEA                     
   903                           ; BSR set to: 15
   904                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
   905   01FDEA  8922               	bsf	34,4,b	;volatile
   906                           
   907                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
   908   01FDEC  5122               	movf	34,w,b	;volatile
   909   01FDEE  0BF0               	andlw	-16
   910   01FDF0  090C               	iorlw	12
   911   01FDF2  6F22               	movwf	34,b	;volatile
   912   01FDF4                     
   913                           ; BSR set to: 15
   914                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
   915   01FDF4  8F22               	bsf	34,7,b	;volatile
   916   01FDF6                     
   917                           ; BSR set to: 15
   918   01FDF6  0012               	return		;funcret
   919   01FDF8                     __end_of_initDCmotorsPWM:
   920                           	callstack 0
   921                           
   922 ;; *************** function _color_read_Blue *****************
   923 ;; Defined at:
   924 ;;		line 57 in file "color.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  tmp             2    9[COMRAM] unsigned int 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  2    4[COMRAM] unsigned int 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   940 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   941 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   942 ;;Total ram usage:        7 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; Hardware stack levels required when called: 2
   945 ;; This function calls:
   946 ;;		_I2C_2_Master_Read
   947 ;;		_I2C_2_Master_RepStart
   948 ;;		_I2C_2_Master_Start
   949 ;;		_I2C_2_Master_Stop
   950 ;;		_I2C_2_Master_Write
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text5
   957   01FCAC                     __ptext5:
   958                           	callstack 0
   959   01FCAC                     _color_read_Blue:
   960                           	callstack 28
   961   01FCAC                     
   962                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
   963   01FCAC  ECA9  F0FD         	call	_I2C_2_Master_Start	;wreg free
   964                           
   965                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
   966   01FCB0  0E52               	movlw	82
   967   01FCB2  ECB8  F0FD         	call	_I2C_2_Master_Write
   968                           
   969                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
   970   01FCB6  0EBA               	movlw	186
   971   01FCB8  ECB8  F0FD         	call	_I2C_2_Master_Write
   972                           
   973                           ;color.c: 63:  I2C_2_Master_RepStart();
   974   01FCBC  ECB3  F0FD         	call	_I2C_2_Master_RepStart	;wreg free
   975                           
   976                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
   977   01FCC0  0E53               	movlw	83
   978   01FCC2  ECB8  F0FD         	call	_I2C_2_Master_Write
   979                           
   980                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
   981   01FCC6  0E01               	movlw	1
   982   01FCC8  EC35  F0FE         	call	_I2C_2_Master_Read
   983   01FCCC  6E07               	movwf	??_color_read_Blue^0,c
   984   01FCCE  5007               	movf	??_color_read_Blue^0,w,c
   985   01FCD0  6E0A               	movwf	color_read_Blue@tmp^0,c
   986   01FCD2  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
   987                           
   988                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
   989   01FCD4  0E00               	movlw	0
   990   01FCD6  EC35  F0FE         	call	_I2C_2_Master_Read
   991   01FCDA  6E07               	movwf	??_color_read_Blue^0,c
   992   01FCDC  5007               	movf	??_color_read_Blue^0,w,c
   993   01FCDE  6E09               	movwf	(??_color_read_Blue+2)^0,c
   994   01FCE0  6A08               	clrf	(??_color_read_Blue+1)^0,c
   995   01FCE2  500A               	movf	color_read_Blue@tmp^0,w,c
   996   01FCE4  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
   997   01FCE6  6E0A               	movwf	color_read_Blue@tmp^0,c
   998   01FCE8  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
   999   01FCEA  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1000   01FCEC  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1001                           
  1002                           ;color.c: 67:  I2C_2_Master_Stop();
  1003   01FCEE  ECAE  F0FD         	call	_I2C_2_Master_Stop	;wreg free
  1004   01FCF2                     
  1005                           ;color.c: 68:  return tmp;
  1006   01FCF2  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1007   01FCF6  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1008   01FCFA  0012               	return		;funcret
  1009   01FCFC                     __end_of_color_read_Blue:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _I2C_2_Master_RepStart *****************
  1013 ;; Defined at:
  1014 ;;		line 33 in file "i2c.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; Hardware stack levels required when called: 1
  1035 ;; This function calls:
  1036 ;;		_I2C_2_Master_Idle
  1037 ;; This function is called by:
  1038 ;;		_color_read_Blue
  1039 ;;		_color_read_Red
  1040 ;;		_color_read_Green
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text6
  1045   01FB66                     __ptext6:
  1046                           	callstack 0
  1047   01FB66                     _I2C_2_Master_RepStart:
  1048                           	callstack 28
  1049   01FB66                     
  1050                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1051   01FB66  ECF2  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1052   01FB6A                     
  1053                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1054   01FB6A  010E               	movlb	14	; () banked
  1055   01FB6C  83DA               	bsf	218,1,b	;volatile
  1056   01FB6E                     
  1057                           ; BSR set to: 14
  1058   01FB6E  0012               	return		;funcret
  1059   01FB70                     __end_of_I2C_2_Master_RepStart:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _I2C_2_Master_Read *****************
  1063 ;; Defined at:
  1064 ;;		line 51 in file "i2c.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  ack             1    wreg     unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  ack             1    2[COMRAM] unsigned char 
  1069 ;;  tmp             1    3[COMRAM] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      unsigned char 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;Total ram usage:        3 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 1
  1086 ;; This function calls:
  1087 ;;		_I2C_2_Master_Idle
  1088 ;; This function is called by:
  1089 ;;		_color_read_Blue
  1090 ;;		_color_read_Red
  1091 ;;		_color_read_Green
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text7
  1096   01FC6A                     __ptext7:
  1097                           	callstack 0
  1098   01FC6A                     _I2C_2_Master_Read:
  1099                           	callstack 28
  1100                           
  1101                           ; BSR set to: 14
  1102                           ;incstack = 0
  1103                           ;I2C_2_Master_Read@ack stored from wreg
  1104   01FC6A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1105   01FC6C                     
  1106                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1107   01FC6C  ECF2  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1108   01FC70                     
  1109                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1110   01FC70  010E               	movlb	14	; () banked
  1111   01FC72  87DA               	bsf	218,3,b	;volatile
  1112                           
  1113                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1114   01FC74  ECF2  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1115   01FC78                     
  1116                           ;i2c.c: 57:   tmp = SSP2BUF;
  1117   01FC78  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1118                           
  1119                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1120   01FC7C  ECF2  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1121   01FC80                     
  1122                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1123   01FC80  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1124   01FC82  B4D8               	btfsc	status,2,c
  1125   01FC84  EF46  F0FE         	goto	u31
  1126   01FC88  EF4A  F0FE         	goto	u30
  1127   01FC8C                     u31:
  1128   01FC8C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1129   01FC8E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1130   01FC90  EF4B  F0FE         	goto	u48
  1131   01FC94                     u30:
  1132   01FC94  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1133   01FC96                     u48:
  1134   01FC96  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1135   01FC98  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1136   01FC9A  010E               	movlb	14	; () banked
  1137   01FC9C  51DA               	movf	218,w,b	;volatile
  1138   01FC9E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1139   01FCA0  0BDF               	andlw	-33
  1140   01FCA2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1141   01FCA4  6FDA               	movwf	218,b	;volatile
  1142   01FCA6                     
  1143                           ; BSR set to: 14
  1144                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1145   01FCA6  89DA               	bsf	218,4,b	;volatile
  1146   01FCA8                     
  1147                           ; BSR set to: 14
  1148                           ;i2c.c: 61:   return tmp;
  1149   01FCA8  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1150   01FCAA                     
  1151                           ; BSR set to: 14
  1152   01FCAA  0012               	return		;funcret
  1153   01FCAC                     __end_of_I2C_2_Master_Read:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _color_click_init *****************
  1157 ;; Defined at:
  1158 ;;		line 5 in file "color.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1176 ;;Total ram usage:        1 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 3
  1179 ;; This function calls:
  1180 ;;		_I2C_2_Master_Init
  1181 ;;		_color_writetoaddr
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text8
  1188   01FC36                     __ptext8:
  1189                           	callstack 0
  1190   01FC36                     _color_click_init:
  1191                           	callstack 27
  1192   01FC36                     
  1193                           ;color.c: 8:     I2C_2_Master_Init();
  1194   01FC36  EC06  F0FE         	call	_I2C_2_Master_Init	;wreg free
  1195   01FC3A                     
  1196                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1197   01FC3A  0E01               	movlw	1
  1198   01FC3C  6E03               	movwf	color_writetoaddr@value^0,c
  1199   01FC3E  0E00               	movlw	0
  1200   01FC40  ECBE  F0FD         	call	_color_writetoaddr
  1201   01FC44                     
  1202                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1203   01FC44  0E3F               	movlw	63
  1204   01FC46  6E05               	movwf	??_color_click_init^0,c
  1205   01FC48  0E55               	movlw	85
  1206   01FC4A                     u277:
  1207   01FC4A  2EE8               	decfsz	wreg,f,c
  1208   01FC4C  D7FE               	bra	u277
  1209   01FC4E  2E05               	decfsz	??_color_click_init^0,f,c
  1210   01FC50  D7FC               	bra	u277
  1211   01FC52  F000               	nop	
  1212   01FC54                     
  1213                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1214   01FC54  0E03               	movlw	3
  1215   01FC56  6E03               	movwf	color_writetoaddr@value^0,c
  1216   01FC58  0E00               	movlw	0
  1217   01FC5A  ECBE  F0FD         	call	_color_writetoaddr
  1218   01FC5E                     
  1219                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1220   01FC5E  0ED5               	movlw	213
  1221   01FC60  6E03               	movwf	color_writetoaddr@value^0,c
  1222   01FC62  0E01               	movlw	1
  1223   01FC64  ECBE  F0FD         	call	_color_writetoaddr
  1224   01FC68  0012               	return		;funcret
  1225   01FC6A                     __end_of_color_click_init:
  1226                           	callstack 0
  1227                           
  1228 ;; *************** function _color_writetoaddr *****************
  1229 ;; Defined at:
  1230 ;;		line 21 in file "color.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  address         1    wreg     unsigned char 
  1233 ;;  value           1    2[COMRAM] unsigned char 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  address         1    3[COMRAM] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1245 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;Total ram usage:        2 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 2
  1252 ;; This function calls:
  1253 ;;		_I2C_2_Master_Start
  1254 ;;		_I2C_2_Master_Stop
  1255 ;;		_I2C_2_Master_Write
  1256 ;; This function is called by:
  1257 ;;		_color_click_init
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text9
  1262   01FB7C                     __ptext9:
  1263                           	callstack 0
  1264   01FB7C                     _color_writetoaddr:
  1265                           	callstack 27
  1266                           
  1267                           ;incstack = 0
  1268                           ;color_writetoaddr@address stored from wreg
  1269   01FB7C  6E04               	movwf	color_writetoaddr@address^0,c
  1270   01FB7E                     
  1271                           ;color.c: 22:     I2C_2_Master_Start();
  1272   01FB7E  ECA9  F0FD         	call	_I2C_2_Master_Start	;wreg free
  1273                           
  1274                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1275   01FB82  0E52               	movlw	82
  1276   01FB84  ECB8  F0FD         	call	_I2C_2_Master_Write
  1277                           
  1278                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1279   01FB88  5004               	movf	color_writetoaddr@address^0,w,c
  1280   01FB8A  0980               	iorlw	128
  1281   01FB8C  ECB8  F0FD         	call	_I2C_2_Master_Write
  1282                           
  1283                           ;color.c: 25:     I2C_2_Master_Write(value);
  1284   01FB90  5003               	movf	color_writetoaddr@value^0,w,c
  1285   01FB92  ECB8  F0FD         	call	_I2C_2_Master_Write
  1286                           
  1287                           ;color.c: 26:     I2C_2_Master_Stop();
  1288   01FB96  ECAE  F0FD         	call	_I2C_2_Master_Stop	;wreg free
  1289   01FB9A  0012               	return		;funcret
  1290   01FB9C                     __end_of_color_writetoaddr:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _I2C_2_Master_Write *****************
  1294 ;; Defined at:
  1295 ;;		line 45 in file "i2c.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  data_byte       1    wreg     unsigned char 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  data_byte       1    1[COMRAM] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1312 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1313 ;;Total ram usage:        1 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; Hardware stack levels required when called: 1
  1316 ;; This function calls:
  1317 ;;		_I2C_2_Master_Idle
  1318 ;; This function is called by:
  1319 ;;		_color_writetoaddr
  1320 ;;		_color_read_Blue
  1321 ;;		_color_read_Red
  1322 ;;		_color_read_Green
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text10
  1327   01FB70                     __ptext10:
  1328                           	callstack 0
  1329   01FB70                     _I2C_2_Master_Write:
  1330                           	callstack 28
  1331                           
  1332                           ;incstack = 0
  1333                           ;I2C_2_Master_Write@data_byte stored from wreg
  1334   01FB70  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1335   01FB72                     
  1336                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1337   01FB72  ECF2  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1338   01FB76                     
  1339                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1340   01FB76  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1341   01FB7A  0012               	return		;funcret
  1342   01FB7C                     __end_of_I2C_2_Master_Write:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _I2C_2_Master_Stop *****************
  1346 ;; Defined at:
  1347 ;;		line 39 in file "i2c.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 1
  1368 ;; This function calls:
  1369 ;;		_I2C_2_Master_Idle
  1370 ;; This function is called by:
  1371 ;;		_color_writetoaddr
  1372 ;;		_color_read_Blue
  1373 ;;		_color_read_Red
  1374 ;;		_color_read_Green
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text11
  1379   01FB5C                     __ptext11:
  1380                           	callstack 0
  1381   01FB5C                     _I2C_2_Master_Stop:
  1382                           	callstack 28
  1383   01FB5C                     
  1384                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1385   01FB5C  ECF2  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1386   01FB60                     
  1387                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1388   01FB60  010E               	movlb	14	; () banked
  1389   01FB62  85DA               	bsf	218,2,b	;volatile
  1390   01FB64                     
  1391                           ; BSR set to: 14
  1392   01FB64  0012               	return		;funcret
  1393   01FB66                     __end_of_I2C_2_Master_Stop:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _I2C_2_Master_Start *****************
  1397 ;; Defined at:
  1398 ;;		line 27 in file "i2c.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 1
  1419 ;; This function calls:
  1420 ;;		_I2C_2_Master_Idle
  1421 ;; This function is called by:
  1422 ;;		_color_writetoaddr
  1423 ;;		_color_read_Blue
  1424 ;;		_color_read_Red
  1425 ;;		_color_read_Green
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text12
  1430   01FB52                     __ptext12:
  1431                           	callstack 0
  1432   01FB52                     _I2C_2_Master_Start:
  1433                           	callstack 28
  1434   01FB52                     
  1435                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1436   01FB52  ECF2  F0FD         	call	_I2C_2_Master_Idle	;wreg free
  1437   01FB56                     
  1438                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1439   01FB56  010E               	movlb	14	; () banked
  1440   01FB58  81DA               	bsf	218,0,b	;volatile
  1441   01FB5A                     
  1442                           ; BSR set to: 14
  1443   01FB5A  0012               	return		;funcret
  1444   01FB5C                     __end_of_I2C_2_Master_Start:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _I2C_2_Master_Idle *****************
  1448 ;; Defined at:
  1449 ;;		line 22 in file "i2c.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1466 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1467 ;;Total ram usage:        1 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_I2C_2_Master_Start
  1473 ;;		_I2C_2_Master_RepStart
  1474 ;;		_I2C_2_Master_Stop
  1475 ;;		_I2C_2_Master_Write
  1476 ;;		_I2C_2_Master_Read
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text13
  1481   01FBE4                     __ptext13:
  1482                           	callstack 0
  1483   01FBE4                     _I2C_2_Master_Idle:
  1484                           	callstack 28
  1485   01FBE4                     l137:
  1486   01FBE4  010E               	movlb	14	; () banked
  1487   01FBE6  B5D8               	btfsc	216,2,b	;volatile
  1488   01FBE8  EFF8  F0FD         	goto	u11
  1489   01FBEC  EFFA  F0FD         	goto	u10
  1490   01FBF0                     u11:
  1491   01FBF0  EFF2  F0FD         	goto	l137
  1492   01FBF4                     u10:
  1493   01FBF4                     
  1494                           ; BSR set to: 14
  1495   01FBF4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1496   01FBF8  0E1F               	movlw	31
  1497   01FBFA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  1498   01FBFC  A4D8               	btfss	status,2,c
  1499   01FBFE  EF03  F0FE         	goto	u21
  1500   01FC02  EF05  F0FE         	goto	u20
  1501   01FC06                     u21:
  1502   01FC06  EFF2  F0FD         	goto	l137
  1503   01FC0A                     u20:
  1504   01FC0A                     
  1505                           ; BSR set to: 14
  1506   01FC0A  0012               	return		;funcret
  1507   01FC0C                     __end_of_I2C_2_Master_Idle:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _I2C_2_Master_Init *****************
  1511 ;; Defined at:
  1512 ;;		line 4 in file "i2c.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_color_click_init
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text14
  1541   01FC0C                     __ptext14:
  1542                           	callstack 0
  1543   01FC0C                     _I2C_2_Master_Init:
  1544                           	callstack 29
  1545   01FC0C                     
  1546                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1547   01FC0C  010E               	movlb	14	; () banked
  1548   01FC0E  51D9               	movf	217,w,b	;volatile
  1549   01FC10  0BF0               	andlw	-16
  1550   01FC12  0908               	iorlw	8
  1551   01FC14  6FD9               	movwf	217,b	;volatile
  1552   01FC16                     
  1553                           ; BSR set to: 14
  1554                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1555   01FC16  8BD9               	bsf	217,5,b	;volatile
  1556                           
  1557                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1558   01FC18  0E9F               	movlw	159
  1559   01FC1A  6FD6               	movwf	214,b	;volatile
  1560   01FC1C                     
  1561                           ; BSR set to: 14
  1562                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1563   01FC1C  8A84               	bsf	132,5,c	;volatile
  1564   01FC1E                     
  1565                           ; BSR set to: 14
  1566                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1567   01FC1E  8C84               	bsf	132,6,c	;volatile
  1568   01FC20                     
  1569                           ; BSR set to: 14
  1570                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1571   01FC20  9BA7               	bcf	167,5,b	;volatile
  1572   01FC22                     
  1573                           ; BSR set to: 14
  1574                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1575   01FC22  9DA7               	bcf	167,6,b	;volatile
  1576                           
  1577                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1578   01FC24  0E1D               	movlw	29
  1579   01FC26  6F1D               	movwf	29,b	;volatile
  1580                           
  1581                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1582   01FC28  0E1E               	movlw	30
  1583   01FC2A  6F1C               	movwf	28,b	;volatile
  1584                           
  1585                           ;i2c.c: 18:   RD5PPS=0x1C;
  1586   01FC2C  0E1C               	movlw	28
  1587   01FC2E  6F6F               	movwf	111,b	;volatile
  1588                           
  1589                           ;i2c.c: 19:   RD6PPS=0x1B;
  1590   01FC30  0E1B               	movlw	27
  1591   01FC32  6F70               	movwf	112,b	;volatile
  1592   01FC34                     
  1593                           ; BSR set to: 14
  1594   01FC34  0012               	return		;funcret
  1595   01FC36                     __end_of_I2C_2_Master_Init:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function _LEDSon_init *****************
  1599 ;; Defined at:
  1600 ;;		line 18 in file "LEDsOn.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		None
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1618 ;;Total ram usage:        0 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text15
  1628   01FB9C                     __ptext15:
  1629                           	callstack 0
  1630   01FB9C                     _LEDSon_init:
  1631                           	callstack 30
  1632   01FB9C                     
  1633                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  1634   01FB9C  9288               	bcf	136,1,c	;volatile
  1635                           
  1636                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  1637   01FB9E  9088               	bcf	136,0,c	;volatile
  1638                           
  1639                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  1640   01FBA0  9884               	bcf	132,4,c	;volatile
  1641                           
  1642                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  1643   01FBA2  9684               	bcf	132,3,c	;volatile
  1644                           
  1645                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  1646   01FBA4  9086               	bcf	134,0,c	;volatile
  1647                           
  1648                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  1649   01FBA6  9287               	bcf	135,1,c	;volatile
  1650                           
  1651                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  1652   01FBA8  9E86               	bcf	134,7,c	;volatile
  1653                           
  1654                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  1655   01FBAA  9881               	bcf	129,4,c	;volatile
  1656                           
  1657                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  1658   01FBAC  8E7E               	bsf	126,7,c	;volatile
  1659                           
  1660                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  1661   01FBAE  827F               	bsf	127,1,c	;volatile
  1662                           
  1663                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  1664   01FBB0  8879               	bsf	121,4,c	;volatile
  1665                           
  1666                           ;LEDsOn.c: 36:     LATDbits.LATD4 = 0;
  1667   01FBB2  987C               	bcf	124,4,c	;volatile
  1668                           
  1669                           ;LEDsOn.c: 37:     LATHbits.LATH1 = 0;
  1670   01FBB4  9280               	bcf	128,1,c	;volatile
  1671                           
  1672                           ;LEDsOn.c: 38:     LATFbits.LATF0 = 0;
  1673   01FBB6  907E               	bcf	126,0,c	;volatile
  1674                           
  1675                           ;LEDsOn.c: 39:     LATHbits.LATH0 = 0;
  1676   01FBB8  9080               	bcf	128,0,c	;volatile
  1677                           
  1678                           ;LEDsOn.c: 40:     LATDbits.LATD3 = 0;
  1679   01FBBA  967C               	bcf	124,3,c	;volatile
  1680   01FBBC  0012               	return		;funcret
  1681   01FBBE                     __end_of_LEDSon_init:
  1682                           	callstack 0
  1683   000000                     
  1684                           	psect	rparam
  1685   000000                     
  1686                           	psect	idloc
  1687                           
  1688                           ;Config register IDLOC0 @ 0x200000
  1689                           ;	unspecified, using default values
  1690   200000                     	org	2097152
  1691   200000  0FFF               	dw	4095
  1692                           
  1693                           ;Config register IDLOC1 @ 0x200002
  1694                           ;	unspecified, using default values
  1695   200002                     	org	2097154
  1696   200002  0FFF               	dw	4095
  1697                           
  1698                           ;Config register IDLOC2 @ 0x200004
  1699                           ;	unspecified, using default values
  1700   200004                     	org	2097156
  1701   200004  0FFF               	dw	4095
  1702                           
  1703                           ;Config register IDLOC3 @ 0x200006
  1704                           ;	unspecified, using default values
  1705   200006                     	org	2097158
  1706   200006  0FFF               	dw	4095
  1707                           
  1708                           ;Config register IDLOC4 @ 0x200008
  1709                           ;	unspecified, using default values
  1710   200008                     	org	2097160
  1711   200008  0FFF               	dw	4095
  1712                           
  1713                           ;Config register IDLOC5 @ 0x20000A
  1714                           ;	unspecified, using default values
  1715   20000A                     	org	2097162
  1716   20000A  0FFF               	dw	4095
  1717                           
  1718                           ;Config register IDLOC6 @ 0x20000C
  1719                           ;	unspecified, using default values
  1720   20000C                     	org	2097164
  1721   20000C  0FFF               	dw	4095
  1722                           
  1723                           ;Config register IDLOC7 @ 0x20000E
  1724                           ;	unspecified, using default values
  1725   20000E                     	org	2097166
  1726   20000E  0FFF               	dw	4095
  1727                           
  1728                           	psect	config
  1729                           
  1730                           ;Config register CONFIG1L @ 0x300000
  1731                           ;	External Oscillator mode Selection bits
  1732                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1733                           ;	Power-up default value for COSC bits
  1734                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1735   300000                     	org	3145728
  1736   300000  AA                 	db	170
  1737                           
  1738                           ;Config register CONFIG1H @ 0x300001
  1739                           ;	unspecified, using default values
  1740                           ;	Clock Out Enable bit
  1741                           ;	CLKOUTEN = 0x1, unprogrammed default
  1742                           ;	Clock Switch Enable bit
  1743                           ;	CSWEN = 0x1, unprogrammed default
  1744                           ;	Fail-Safe Clock Monitor Enable bit
  1745                           ;	FCMEN = 0x1, unprogrammed default
  1746   300001                     	org	3145729
  1747   300001  FF                 	db	255
  1748                           
  1749                           ;Config register CONFIG2L @ 0x300002
  1750                           ;	unspecified, using default values
  1751                           ;	Master Clear Enable bit
  1752                           ;	MCLRE = 0x1, unprogrammed default
  1753                           ;	Power-up Timer Enable bit
  1754                           ;	PWRTE = 0x1, unprogrammed default
  1755                           ;	Low-power BOR enable bit
  1756                           ;	LPBOREN = 0x1, unprogrammed default
  1757                           ;	Brown-out Reset Enable bits
  1758                           ;	BOREN = 0x3, unprogrammed default
  1759   300002                     	org	3145730
  1760   300002  FF                 	db	255
  1761                           
  1762                           ;Config register CONFIG2H @ 0x300003
  1763                           ;	unspecified, using default values
  1764                           ;	Brown Out Reset Voltage selection bits
  1765                           ;	BORV = 0x3, unprogrammed default
  1766                           ;	ZCD Disable bit
  1767                           ;	ZCD = 0x1, unprogrammed default
  1768                           ;	PPSLOCK bit One-Way Set Enable bit
  1769                           ;	PPS1WAY = 0x1, unprogrammed default
  1770                           ;	Stack Full/Underflow Reset Enable bit
  1771                           ;	STVREN = 0x1, unprogrammed default
  1772                           ;	Debugger Enable bit
  1773                           ;	DEBUG = 0x1, unprogrammed default
  1774                           ;	Extended Instruction Set Enable bit
  1775                           ;	XINST = 0x1, unprogrammed default
  1776   300003                     	org	3145731
  1777   300003  FF                 	db	255
  1778                           
  1779                           ;Config register CONFIG3L @ 0x300004
  1780                           ;	WDT Period Select bits
  1781                           ;	WDTCPS = 0x1F, unprogrammed default
  1782                           ;	WDT operating mode
  1783                           ;	WDTE = OFF, WDT Disabled
  1784   300004                     	org	3145732
  1785   300004  9F                 	db	159
  1786                           
  1787                           ;Config register CONFIG3H @ 0x300005
  1788                           ;	unspecified, using default values
  1789                           ;	WDT Window Select bits
  1790                           ;	WDTCWS = 0x7, unprogrammed default
  1791                           ;	WDT input clock selector
  1792                           ;	WDTCCS = 0x7, unprogrammed default
  1793   300005                     	org	3145733
  1794   300005  FF                 	db	255
  1795                           
  1796                           ;Config register CONFIG4L @ 0x300006
  1797                           ;	unspecified, using default values
  1798                           ;	Write Protection Block 0
  1799                           ;	WRT0 = 0x1, unprogrammed default
  1800                           ;	Write Protection Block 1
  1801                           ;	WRT1 = 0x1, unprogrammed default
  1802                           ;	Write Protection Block 2
  1803                           ;	WRT2 = 0x1, unprogrammed default
  1804                           ;	Write Protection Block 3
  1805                           ;	WRT3 = 0x1, unprogrammed default
  1806                           ;	Write Protection Block 3
  1807                           ;	WRT4 = 0x1, unprogrammed default
  1808                           ;	Write Protection Block 3
  1809                           ;	WRT5 = 0x1, unprogrammed default
  1810                           ;	Write Protection Block 3
  1811                           ;	WRT6 = 0x1, unprogrammed default
  1812                           ;	Write Protection Block 3
  1813                           ;	WRT7 = 0x1, unprogrammed default
  1814   300006                     	org	3145734
  1815   300006  FF                 	db	255
  1816                           
  1817                           ;Config register CONFIG4H @ 0x300007
  1818                           ;	unspecified, using default values
  1819                           ;	Configuration Register Write Protection bit
  1820                           ;	WRTC = 0x1, unprogrammed default
  1821                           ;	Boot Block Write Protection bit
  1822                           ;	WRTB = 0x1, unprogrammed default
  1823                           ;	Data EEPROM Write Protection bit
  1824                           ;	WRTD = 0x1, unprogrammed default
  1825                           ;	Scanner Enable bit
  1826                           ;	SCANE = 0x1, unprogrammed default
  1827                           ;	Low Voltage Programming Enable bit
  1828                           ;	LVP = 0x1, unprogrammed default
  1829   300007                     	org	3145735
  1830   300007  FF                 	db	255
  1831                           
  1832                           ;Config register CONFIG5L @ 0x300008
  1833                           ;	unspecified, using default values
  1834                           ;	UserNVM Program Memory Code Protection bit
  1835                           ;	CP = 0x1, unprogrammed default
  1836                           ;	DataNVM Memory Code Protection bit
  1837                           ;	CPD = 0x1, unprogrammed default
  1838   300008                     	org	3145736
  1839   300008  FF                 	db	255
  1840                           
  1841                           ;Config register CONFIG5H @ 0x300009
  1842                           ;	unspecified, using default values
  1843   300009                     	org	3145737
  1844   300009  FF                 	db	255
  1845                           
  1846                           ;Config register CONFIG6L @ 0x30000A
  1847                           ;	unspecified, using default values
  1848                           ;	Table Read Protection Block 0
  1849                           ;	EBTR0 = 0x1, unprogrammed default
  1850                           ;	Table Read Protection Block 1
  1851                           ;	EBTR1 = 0x1, unprogrammed default
  1852                           ;	Table Read Protection Block 2
  1853                           ;	EBTR2 = 0x1, unprogrammed default
  1854                           ;	Table Read Protection Block 3
  1855                           ;	EBTR3 = 0x1, unprogrammed default
  1856                           ;	Table Read Protection Block 4
  1857                           ;	EBTR4 = 0x1, unprogrammed default
  1858                           ;	Table Read Protection Block 5
  1859                           ;	EBTR5 = 0x1, unprogrammed default
  1860                           ;	Table Read Protection Block 6
  1861                           ;	EBTR6 = 0x1, unprogrammed default
  1862                           ;	Table Read Protection Block 7
  1863                           ;	EBTR7 = 0x1, unprogrammed default
  1864   30000A                     	org	3145738
  1865   30000A  FF                 	db	255
  1866                           
  1867                           ;Config register CONFIG6H @ 0x30000B
  1868                           ;	unspecified, using default values
  1869                           ;	Boot Block Table Read Protection bit
  1870                           ;	EBTRB = 0x1, unprogrammed default
  1871   30000B                     	org	3145739
  1872   30000B  FF                 	db	255
  1873                           tosu	equ	0xFFF
  1874                           tosh	equ	0xFFE
  1875                           tosl	equ	0xFFD
  1876                           stkptr	equ	0xFFC
  1877                           pclatu	equ	0xFFB
  1878                           pclath	equ	0xFFA
  1879                           pcl	equ	0xFF9
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           prodh	equ	0xFF4
  1885                           prodl	equ	0xFF3
  1886                           indf0	equ	0xFEF
  1887                           postinc0	equ	0xFEE
  1888                           postdec0	equ	0xFED
  1889                           preinc0	equ	0xFEC
  1890                           plusw0	equ	0xFEB
  1891                           fsr0h	equ	0xFEA
  1892                           fsr0l	equ	0xFE9
  1893                           wreg	equ	0xFE8
  1894                           indf1	equ	0xFE7
  1895                           postinc1	equ	0xFE6
  1896                           postdec1	equ	0xFE5
  1897                           preinc1	equ	0xFE4
  1898                           plusw1	equ	0xFE3
  1899                           fsr1h	equ	0xFE2
  1900                           fsr1l	equ	0xFE1
  1901                           bsr	equ	0xFE0
  1902                           indf2	equ	0xFDF
  1903                           postinc2	equ	0xFDE
  1904                           postdec2	equ	0xFDD
  1905                           preinc2	equ	0xFDC
  1906                           plusw2	equ	0xFDB
  1907                           fsr2h	equ	0xFDA
  1908                           fsr2l	equ	0xFD9
  1909                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S523DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S523DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), main@motorL(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    2586
                                             19 COMRAM    21    21      0
                  _I2C_2_Master_Init
                        _LEDSon_init
                   _color_click_init
                    _color_read_Blue
                    _initDCmotorsPWM
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     28      28       1       42.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRhhlll      1D      0       0      36        0.0%
BITBIGSFRllhhhh      1      0       0      37        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRllhhhh     52      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      41        0.0%
BITBIGSFRllhhhl     46      0       0      42        0.0%
BITBIGSFRllhhhl      1      0       0      43        0.0%
BITBIGSFRllhhhl     2D      0       0      44        0.0%
BITBIGSFRllhhhl     1E      0       0      45        0.0%
BITBIGSFRllhhl      11      0       0      46        0.0%
BITBIGSFRllhl        1      0       0      47        0.0%
BITBIGSFRlllhh       3      0       0      48        0.0%
BITBIGSFRlllhl       5      0       0      49        0.0%
BITBIGSFRllllh      4B      0       0      50        0.0%
BITBIGSFRlllll      2D      0       0      51        0.0%
ABS                  0      0       0      52        0.0%
BIGRAM             DE9      0       0      53        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Nov 25 16:55:06 2022

              _color_read_Blue FCAC                             l22 FB9A                             l31 FCFA  
                           l19 FC68                             l83 FFFE                             l76 FDF6  
                           u10 FBF4                             u11 FBF0                             u20 FC0A  
                           u21 FC06                             u30 FC94                             u31 FC8C  
                           u48 FC96            ___wmul@multiplicand 0003                            l140 FC0A  
                          l213 FBBC                            l134 FC34                            l143 FB5A  
                          l152 FB7A                            l216 FBE2                            l137 FBE4  
                          l146 FB6E                            l155 FCAA                            l149 FB64  
                          l714 FD6E                            l707 FD66                            l901 FB5C  
                          l911 FC1E                            l903 FB60                            l913 FC20  
                          l905 FC0C                            l921 FB6A                            l915 FC22  
                          l907 FC16                            l931 FCA6                            l923 FC6C  
                          l909 FC1C                            l933 FCA8                            l925 FC70  
                          l927 FC78                            l919 FB66                            l929 FC80  
                          l891 FBF4                            l893 FB52                            l981 FD70  
                          l895 FB56                            l991 FDD2                            l983 FD78  
                          l889 FBE4                            l897 FB72                            l993 FDDC  
                          l985 FDA2                            l899 FB76                            l995 FDDE  
                          l987 FDC6                            l997 FDE8                            l989 FDD0  
                          l999 FDEA                            u200 FF7A                            u201 FF76  
                          u160 FD16                            u161 FD12                            u170 FD34  
                          u171 FD30                            u180 FD50                            u260 FE8A  
                          u181 FD4C                            u261 FE86                            u190 FEB0  
                          u191 FEAC                            u277 FC4A                            wreg 000FE8  
                         l1001 FDF4                           l1201 FFBE                           l1019 FB9C  
                         l1141 FB7E                           l1301 FE5C                           l1151 FD04  
                         l1143 FBBE                           l1311 FE78                           l1303 FE68  
                         l1161 FD3A                           l1153 FD16                           l1145 FBDA  
                         l1313 FE8A                           l1305 FE68                           l1171 FC36  
                         l1163 FD50                           l1155 FD1E                           l1307 FE6A  
                         l1173 FC3A                           l1181 FCAC                           l1165 FD58  
                         l1157 FD26                           l1149 FCFC                           l1309 FE6C  
                         l1175 FC44                           l1183 FCF2                           l1167 FD5A  
                         l1159 FD34                           l1191 FF04                           l1271 FDFC  
                         l1177 FC54                           l1169 FD60                           l1193 FF18  
                         l1281 FE10                           l1273 FE00                           l1179 FC5E  
                         l1195 FF1C                           l1187 FE94                           l1291 FE2E  
                         l1283 FE14                           l1275 FE04                           l1197 FF5E  
                         l1189 FEB0                           l1293 FE32                           l1285 FE18  
                         l1277 FE08                           l1269 FDF8                           l1199 FF7A  
                         l1295 FE36                           l1287 FE20                           l1279 FE0C  
                         l1297 FE4A                           l1289 FE28                           l1299 FE50  
                 ?_LEDSon_init 0001                           _T2PR 000FBC                           _main FDF8  
                         fsr2h 000FDA                           indf2 000FDF                           fsr2l 000FD9  
                         prodh 000FF4                           prodl 000FF3                           start 0002  
                 ___param_bank 000000                          ?_main 0001                __end_of___lwdiv FD70  
   __end_of_I2C_2_Master_Start FB5C     __end_of_I2C_2_Master_Write FB7C                          status 000FD8  
      __end_of_color_read_Blue FCFC          _I2C_2_Master_RepStart FB66                __initialization FB4C  
                 __end_of_main FE94                         ??_main 0014                  __activetblptr 000000  
                 ?_setMotorPWM 000E                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RD6PPS 000E70  
                       _RE4PPS 000E76                         _RG6PPS 000E88       __end_of_color_click_init FC6A  
                 _CCPTMRS0bits 000FAD                         ___wmul FBBE                      ??___lwdiv 000B  
                       isa$std 000001              ??_initDCmotorsPWM 0001                     __accesstop 0060  
      __end_of__initialization FB4C         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001              _color_writetoaddr FB7C  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0003                        ?___wmul 0001  
          ??_color_writetoaddr 0004                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
       color_writetoaddr@value 0003      __end_of_color_writetoaddr FB9C             _I2C_2_Master_Start FB52  
           _I2C_2_Master_Write FB70                        __Hparam 0000                        __Lparam 0000  
          ?_I2C_2_Master_Start 0001                        ___lwdiv FCFC            ?_I2C_2_Master_Write 0001  
                      __pcinit FB4C                        __ramtop 0E00                        __ptext0 FDF8  
                      __ptext1 FE94                        __ptext2 FBBE                        __ptext3 FCFC  
                      __ptext4 FD70                        __ptext5 FCAC                        __ptext6 FB66  
                      __ptext7 FC6A                        __ptext8 FC36                        __ptext9 FB7C  
                    _T2CONbits 000FBD                      _T2HLTbits 000FBE           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization FB4C              ?_color_click_init 0001  
           ??_color_click_init 0005                        postdec2 000FDD                        postinc2 000FDE  
              _initDCmotorsPWM FD70             setMotorPWM@negDuty 0013                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 000FAB                    _CCP2CONbits 000FA7                    _CCP3CONbits 000F26  
                  _CCP4CONbits 000F22                     main@motorL 0017                     main@motorR 0020  
               __end_of___wmul FBE4            start_initialization FB4C                  ??_LEDSon_init 0001  
      __end_of_initDCmotorsPWM FDF8                       ??___wmul 0005            __end_of_LEDSon_init FBBE  
             ___lwdiv@dividend 0007                       ?___lwdiv 0007           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004              _I2C_2_Master_Idle FBE4              _I2C_2_Master_Init FC0C  
            _I2C_2_Master_Read FC6A              _I2C_2_Master_Stop FB5C             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
             ?_initDCmotorsPWM 0001                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
    __end_of_I2C_2_Master_Idle FC0C      __end_of_I2C_2_Master_Init FC36      __end_of_I2C_2_Master_Read FCAC  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop FB66                   setMotorPWM@m 000E  
  I2C_2_Master_Write@data_byte 0002                      main@onoff 0014              ??_color_read_Blue 0007  
                  _LEDSon_init FB9C  __end_of_I2C_2_Master_RepStart FB70             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 0000                       __Hrparam 0000                       __Lrparam 0000  
                   _ANSELDbits 000EA7                ___lwdiv@divisor 0009                ___lwdiv@counter 000D  
                     __ptext10 FB70                       __ptext11 FB5C                       __ptext12 FB52  
                     __ptext13 FBE4                       __ptext14 FC0C                       __ptext15 FB9C  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                  _setMotorPWM FE94               _color_click_init FC36                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                   main@PWMcycle 0016  
