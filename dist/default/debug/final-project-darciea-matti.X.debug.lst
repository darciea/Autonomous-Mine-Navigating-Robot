

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 05 20:52:41 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Version 2.35
    57                           ; Generated 05/05/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F67K40 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92                           	psect	idataBANK1
    93   002822                     __pidataBANK1:
    94                           	callstack 0
    95                           
    96                           ;initializer for main@F14649
    97   002822  0064               	dw	100
    98   002824  00C8               	dw	200
    99   002826  012C               	dw	300
   100   002828  0190               	dw	400
   101   00282A  01F4               	dw	500
   102   00282C  0258               	dw	600
   103   00282E  02BC               	dw	700
   104   002830  0320               	dw	800
   105   002832  0384               	dw	900
   106   000000                     _TX4REG	set	3812
   107   000000                     _RC4STAbits	set	3815
   108   000000                     _SP4BRGH	set	3814
   109   000000                     _LATHbits	set	3968
   110   000000                     _LATGbits	set	3967
   111   000000                     _TRISAbits	set	3969
   112   000000                     _TRISFbits	set	3974
   113   000000                     _TRISDbits	set	3972
   114   000000                     _TRISGbits	set	3975
   115   000000                     _SSP2CON2bits	set	3802
   116   000000                     _RX4PPS	set	3605
   117   000000                     _SSP2CLKPPS	set	3612
   118   000000                     _SSP2DATPPS	set	3613
   119   000000                     _RC7PPS	set	3689
   120   000000                     _RE2PPS	set	3700
   121   000000                     _TRISCbits	set	3971
   122   000000                     _TRISEbits	set	3973
   123   000000                     _TRISHbits	set	3976
   124   000000                     _T2PR	set	4028
   125   000000                     _T2CONbits	set	4029
   126   000000                     _CCPR2H	set	4006
   127   000000                     _CCPR1H	set	4010
   128   000000                     _RE4PPS	set	3702
   129   000000                     _RG6PPS	set	3720
   130   000000                     _RD5PPS	set	3695
   131   000000                     _ANSELDbits	set	3751
   132   000000                     _SSP2ADD	set	3798
   133   000000                     _SSP2CON1bits	set	3801
   134   000000                     _CCPR4H	set	3873
   135   000000                     _CCPR3H	set	3877
   136   000000                     _T2CLKCONbits	set	4031
   137   000000                     _T2HLTbits	set	4030
   138   000000                     _CCP1CONbits	set	4011
   139   000000                     _CCPTMRS0bits	set	4013
   140   000000                     _CCP2CONbits	set	4007
   141   000000                     _LATAbits	set	3961
   142   000000                     _LATDbits	set	3964
   143   000000                     _LATFbits	set	3966
   144   000000                     _CCP3CONbits	set	3878
   145   000000                     _CCP4CONbits	set	3874
   146   000000                     _RC4REG	set	3811
   147   000000                     _SP4BRGL	set	3813
   148   000000                     _TX4STAbits	set	3816
   149   000000                     _BAUD4CONbits	set	3817
   150   000000                     _SSP2CON2	set	3802
   151   000000                     _SSP2STAT	set	3800
   152   000000                     _SSP2BUF	set	3797
   153   000000                     _PIE4bits	set	3629
   154   000000                     _PIR4bits	set	3639
   155   000000                     _RC0PPS	set	3682
   156   000000                     _RD6PPS	set	3696
   157                           
   158                           	psect	smallconst
   159   000E00                     __psmallconst:
   160                           	callstack 0
   161   000E00  00                 	db	0
   162   000E01                     STR_4:
   163   000E01  47                 	db	71	;'G'
   164   000E02  52                 	db	82	;'R'
   165   000E03  45                 	db	69	;'E'
   166   000E04  45                 	db	69	;'E'
   167   000E05  4E                 	db	78	;'N'
   168   000E06  3A                 	db	58	;':'
   169   000E07  20                 	db	32
   170   000E08  52                 	db	82	;'R'
   171   000E09  65                 	db	101	;'e'
   172   000E0A  61                 	db	97	;'a'
   173   000E0B  64                 	db	100	;'d'
   174   000E0C  20                 	db	32
   175   000E0D  25                 	db	37
   176   000E0E  64                 	db	100	;'d'
   177   000E0F  2C                 	db	44
   178   000E10  20                 	db	32
   179   000E11  65                 	db	101	;'e'
   180   000E12  78                 	db	120	;'x'
   181   000E13  70                 	db	112	;'p'
   182   000E14  65                 	db	101	;'e'
   183   000E15  63                 	db	99	;'c'
   184   000E16  74                 	db	116	;'t'
   185   000E17  65                 	db	101	;'e'
   186   000E18  64                 	db	100	;'d'
   187   000E19  20                 	db	32
   188   000E1A  25                 	db	37
   189   000E1B  64                 	db	100	;'d'
   190   000E1C  2C                 	db	44
   191   000E1D  20                 	db	32
   192   000E1E  64                 	db	100	;'d'
   193   000E1F  69                 	db	105	;'i'
   194   000E20  66                 	db	102	;'f'
   195   000E21  66                 	db	102	;'f'
   196   000E22  65                 	db	101	;'e'
   197   000E23  72                 	db	114	;'r'
   198   000E24  65                 	db	101	;'e'
   199   000E25  6E                 	db	110	;'n'
   200   000E26  63                 	db	99	;'c'
   201   000E27  65                 	db	101	;'e'
   202   000E28  20                 	db	32
   203   000E29  25                 	db	37
   204   000E2A  64                 	db	100	;'d'
   205   000E2B  2C                 	db	44
   206   000E2C  20                 	db	32
   207   000E2D  6E                 	db	110	;'n'
   208   000E2E  6F                 	db	111	;'o'
   209   000E2F  72                 	db	114	;'r'
   210   000E30  6D                 	db	109	;'m'
   211   000E31  61                 	db	97	;'a'
   212   000E32  6C                 	db	108	;'l'
   213   000E33  69                 	db	105	;'i'
   214   000E34  73                 	db	115	;'s'
   215   000E35  65                 	db	101	;'e'
   216   000E36  64                 	db	100	;'d'
   217   000E37  20                 	db	32
   218   000E38  25                 	db	37
   219   000E39  64                 	db	100	;'d'
   220   000E3A  20                 	db	32
   221   000E3B  0A                 	db	10
   222   000E3C  00                 	db	0
   223   000E3D                     STR_5:
   224   000E3D  42                 	db	66	;'B'
   225   000E3E  4C                 	db	76	;'L'
   226   000E3F  55                 	db	85	;'U'
   227   000E40  45                 	db	69	;'E'
   228   000E41  3A                 	db	58	;':'
   229   000E42  20                 	db	32
   230   000E43  52                 	db	82	;'R'
   231   000E44  65                 	db	101	;'e'
   232   000E45  61                 	db	97	;'a'
   233   000E46  64                 	db	100	;'d'
   234   000E47  20                 	db	32
   235   000E48  25                 	db	37
   236   000E49  64                 	db	100	;'d'
   237   000E4A  2C                 	db	44
   238   000E4B  20                 	db	32
   239   000E4C  65                 	db	101	;'e'
   240   000E4D  78                 	db	120	;'x'
   241   000E4E  70                 	db	112	;'p'
   242   000E4F  65                 	db	101	;'e'
   243   000E50  63                 	db	99	;'c'
   244   000E51  74                 	db	116	;'t'
   245   000E52  65                 	db	101	;'e'
   246   000E53  64                 	db	100	;'d'
   247   000E54  20                 	db	32
   248   000E55  25                 	db	37
   249   000E56  64                 	db	100	;'d'
   250   000E57  2C                 	db	44
   251   000E58  20                 	db	32
   252   000E59  64                 	db	100	;'d'
   253   000E5A  69                 	db	105	;'i'
   254   000E5B  66                 	db	102	;'f'
   255   000E5C  66                 	db	102	;'f'
   256   000E5D  65                 	db	101	;'e'
   257   000E5E  72                 	db	114	;'r'
   258   000E5F  65                 	db	101	;'e'
   259   000E60  6E                 	db	110	;'n'
   260   000E61  63                 	db	99	;'c'
   261   000E62  65                 	db	101	;'e'
   262   000E63  20                 	db	32
   263   000E64  25                 	db	37
   264   000E65  64                 	db	100	;'d'
   265   000E66  2C                 	db	44
   266   000E67  20                 	db	32
   267   000E68  6E                 	db	110	;'n'
   268   000E69  6F                 	db	111	;'o'
   269   000E6A  72                 	db	114	;'r'
   270   000E6B  6D                 	db	109	;'m'
   271   000E6C  61                 	db	97	;'a'
   272   000E6D  6C                 	db	108	;'l'
   273   000E6E  69                 	db	105	;'i'
   274   000E6F  73                 	db	115	;'s'
   275   000E70  65                 	db	101	;'e'
   276   000E71  64                 	db	100	;'d'
   277   000E72  20                 	db	32
   278   000E73  25                 	db	37
   279   000E74  64                 	db	100	;'d'
   280   000E75  20                 	db	32
   281   000E76  0A                 	db	10
   282   000E77  00                 	db	0
   283   000E78                     STR_3:
   284   000E78  52                 	db	82	;'R'
   285   000E79  45                 	db	69	;'E'
   286   000E7A  44                 	db	68	;'D'
   287   000E7B  3A                 	db	58	;':'
   288   000E7C  20                 	db	32
   289   000E7D  52                 	db	82	;'R'
   290   000E7E  65                 	db	101	;'e'
   291   000E7F  61                 	db	97	;'a'
   292   000E80  64                 	db	100	;'d'
   293   000E81  20                 	db	32
   294   000E82  25                 	db	37
   295   000E83  64                 	db	100	;'d'
   296   000E84  2C                 	db	44
   297   000E85  20                 	db	32
   298   000E86  65                 	db	101	;'e'
   299   000E87  78                 	db	120	;'x'
   300   000E88  70                 	db	112	;'p'
   301   000E89  65                 	db	101	;'e'
   302   000E8A  63                 	db	99	;'c'
   303   000E8B  74                 	db	116	;'t'
   304   000E8C  65                 	db	101	;'e'
   305   000E8D  64                 	db	100	;'d'
   306   000E8E  20                 	db	32
   307   000E8F  25                 	db	37
   308   000E90  64                 	db	100	;'d'
   309   000E91  2C                 	db	44
   310   000E92  20                 	db	32
   311   000E93  64                 	db	100	;'d'
   312   000E94  69                 	db	105	;'i'
   313   000E95  66                 	db	102	;'f'
   314   000E96  66                 	db	102	;'f'
   315   000E97  65                 	db	101	;'e'
   316   000E98  72                 	db	114	;'r'
   317   000E99  65                 	db	101	;'e'
   318   000E9A  6E                 	db	110	;'n'
   319   000E9B  63                 	db	99	;'c'
   320   000E9C  65                 	db	101	;'e'
   321   000E9D  20                 	db	32
   322   000E9E  25                 	db	37
   323   000E9F  64                 	db	100	;'d'
   324   000EA0  2C                 	db	44
   325   000EA1  20                 	db	32
   326   000EA2  6E                 	db	110	;'n'
   327   000EA3  6F                 	db	111	;'o'
   328   000EA4  72                 	db	114	;'r'
   329   000EA5  6D                 	db	109	;'m'
   330   000EA6  61                 	db	97	;'a'
   331   000EA7  6C                 	db	108	;'l'
   332   000EA8  69                 	db	105	;'i'
   333   000EA9  73                 	db	115	;'s'
   334   000EAA  65                 	db	101	;'e'
   335   000EAB  64                 	db	100	;'d'
   336   000EAC  20                 	db	32
   337   000EAD  25                 	db	37
   338   000EAE  64                 	db	100	;'d'
   339   000EAF  20                 	db	32
   340   000EB0  0A                 	db	10
   341   000EB1  00                 	db	0
   342   000EB2                     STR_1:
   343   000EB2  0A                 	db	10
   344   000EB3  20                 	db	32
   345   000EB4  41                 	db	65	;'A'
   346   000EB5  56                 	db	86	;'V'
   347   000EB6  47                 	db	71	;'G'
   348   000EB7  3A                 	db	58	;':'
   349   000EB8  20                 	db	32
   350   000EB9  52                 	db	82	;'R'
   351   000EBA  20                 	db	32
   352   000EBB  25                 	db	37
   353   000EBC  64                 	db	100	;'d'
   354   000EBD  2C                 	db	44
   355   000EBE  20                 	db	32
   356   000EBF  47                 	db	71	;'G'
   357   000EC0  20                 	db	32
   358   000EC1  25                 	db	37
   359   000EC2  64                 	db	100	;'d'
   360   000EC3  2C                 	db	44
   361   000EC4  20                 	db	32
   362   000EC5  42                 	db	66	;'B'
   363   000EC6  20                 	db	32
   364   000EC7  25                 	db	37
   365   000EC8  64                 	db	100	;'d'
   366   000EC9  20                 	db	32
   367   000ECA  0A                 	db	10
   368   000ECB  00                 	db	0
   369   000ECC                     STR_2:
   370   000ECC  0A                 	db	10
   371   000ECD  20                 	db	32
   372   000ECE  45                 	db	69	;'E'
   373   000ECF  78                 	db	120	;'x'
   374   000ED0  70                 	db	112	;'p'
   375   000ED1  65                 	db	101	;'e'
   376   000ED2  63                 	db	99	;'c'
   377   000ED3  74                 	db	116	;'t'
   378   000ED4  65                 	db	101	;'e'
   379   000ED5  64                 	db	100	;'d'
   380   000ED6  20                 	db	32
   381   000ED7  76                 	db	118	;'v'
   382   000ED8  61                 	db	97	;'a'
   383   000ED9  6C                 	db	108	;'l'
   384   000EDA  75                 	db	117	;'u'
   385   000EDB  65                 	db	101	;'e'
   386   000EDC  73                 	db	115	;'s'
   387   000EDD  3A                 	db	58	;':'
   388   000EDE  20                 	db	32
   389   000EDF  25                 	db	37
   390   000EE0  75                 	db	117	;'u'
   391   000EE1  20                 	db	32
   392   000EE2  0A                 	db	10
   393   000EE3  00                 	db	0
   394   000EE4  00                 	db	0	; dummy byte at the end
   395   000000                     
   396                           ; #config settings
   397                           
   398                           	psect	cinit
   399   0025C0                     __pcinit:
   400                           	callstack 0
   401   0025C0                     start_initialization:
   402                           	callstack 0
   403   0025C0                     __initialization:
   404                           	callstack 0
   405                           
   406                           ; Initialize objects allocated to BANK1 (18 bytes)
   407                           ; load TBLPTR registers with __pidataBANK1
   408   0025C0  0E22               	movlw	low __pidataBANK1
   409   0025C2  6EF6               	movwf	tblptrl,c
   410   0025C4  0E28               	movlw	high __pidataBANK1
   411   0025C6  6EF7               	movwf	tblptrh,c
   412   0025C8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   413   0025CA  6EF8               	movwf	tblptru,c
   414   0025CC  EE01  F070         	lfsr	0,__pdataBANK1
   415   0025D0  EE10 F012          	lfsr	1,18
   416   0025D4                     copy_data0:
   417   0025D4  0009               	tblrd		*+
   418   0025D6  CFF5 FFEE          	movff	tablat,postinc0
   419   0025DA  50E5               	movf	postdec1,w,c
   420   0025DC  50E1               	movf	fsr1l,w,c
   421   0025DE  E1FA               	bnz	copy_data0
   422                           
   423                           ; Clear objects allocated to BANK1 (112 bytes)
   424   0025E0  EE01  F000         	lfsr	0,__pbssBANK1
   425   0025E4  0E70               	movlw	112
   426   0025E6                     clear_0:
   427   0025E6  6AEE               	clrf	postinc0,c
   428   0025E8  06E8               	decf	wreg,f,c
   429   0025EA  E1FD               	bnz	clear_0
   430                           
   431                           ; Clear objects allocated to BANK0 (6 bytes)
   432   0025EC  0100               	movlb	0
   433   0025EE  6BEE               	clrf	(__pbssBANK0+5)& (0+255),b
   434   0025F0  6BED               	clrf	(__pbssBANK0+4)& (0+255),b
   435   0025F2  6BEC               	clrf	(__pbssBANK0+3)& (0+255),b
   436   0025F4  6BEB               	clrf	(__pbssBANK0+2)& (0+255),b
   437   0025F6  6BEA               	clrf	(__pbssBANK0+1)& (0+255),b
   438   0025F8  6BE9               	clrf	__pbssBANK0& (0+255),b
   439                           
   440                           ; Clear objects allocated to COMRAM (3 bytes)
   441   0025FA  6A5F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   442   0025FC  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   443   0025FE  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   444   002600                     end_of_initialization:
   445                           	callstack 0
   446   002600                     __end_of__initialization:
   447                           	callstack 0
   448   002600  0100               	movlb	0
   449   002602  EF74  F00B         	goto	_main	;jump to C main() function
   450                           
   451                           	psect	bssCOMRAM
   452   00005D                     __pbssCOMRAM:
   453                           	callstack 0
   454   00005D                     _TxBufReadCnt:
   455                           	callstack 0
   456   00005D                     	ds	1
   457   00005E                     _TxBufWriteCnt:
   458                           	callstack 0
   459   00005E                     	ds	1
   460   00005F                     _RxBufWriteCnt:
   461                           	callstack 0
   462   00005F                     	ds	1
   463                           
   464                           	psect	bssBANK0
   465   0000E9                     __pbssBANK0:
   466                           	callstack 0
   467   0000E9                     _width:
   468                           	callstack 0
   469   0000E9                     	ds	2
   470   0000EB                     _prec:
   471                           	callstack 0
   472   0000EB                     	ds	2
   473   0000ED                     _flags:
   474                           	callstack 0
   475   0000ED                     	ds	1
   476   0000EE                     _RxBufReadCnt:
   477                           	callstack 0
   478   0000EE                     	ds	1
   479                           
   480                           	psect	bssBANK1
   481   000100                     __pbssBANK1:
   482                           	callstack 0
   483   000100                     _EUSART4TXbuf:
   484                           	callstack 0
   485   000100                     	ds	60
   486   00013C                     _EUSART4RXbuf:
   487                           	callstack 0
   488   00013C                     	ds	20
   489   000150                     _dbuf:
   490                           	callstack 0
   491   000150                     	ds	32
   492                           
   493                           	psect	dataBANK1
   494   000170                     __pdataBANK1:
   495                           	callstack 0
   496   000170                     main@F14649:
   497                           	callstack 0
   498   000170                     	ds	18
   499                           
   500                           	psect	cstackBANK0
   501   000060                     __pcstackBANK0:
   502                           	callstack 0
   503   000060                     ?_sprintf:
   504                           	callstack 0
   505   000060                     sprintf@s:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x0
   509   000060                     	ds	2
   510   000062                     sprintf@fmt:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x2
   514   000062                     	ds	10
   515   00006C                     sprintf@ap:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0xC
   519   00006C                     	ds	2
   520   00006E                     sprintf@f:
   521                           	callstack 0
   522                           
   523                           ; 11 bytes @ 0xE
   524   00006E                     	ds	11
   525   000079                     normalise_readings@buf:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x19
   529   000079                     	ds	2
   530   00007B                     normalise_readings@red_read:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x1B
   534   00007B                     	ds	2
   535   00007D                     normalise_readings@green_read:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x1D
   539   00007D                     	ds	2
   540   00007F                     normalise_readings@blue_read:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x1F
   544   00007F                     	ds	2
   545   000081                     normalise_readings@expected_values:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x21
   549   000081                     	ds	2
   550   000083                     normalise_readings@normalised_values:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x23
   554   000083                     	ds	2
   555   000085                     ??_normalise_readings:
   556                           
   557                           ; 1 bytes @ 0x25
   558   000085                     	ds	6
   559   00008B                     normalise_readings@normalR:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x2B
   563   00008B                     	ds	2
   564   00008D                     normalise_readings@normalG:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x2D
   568   00008D                     	ds	2
   569   00008F                     normalise_readings@normalB:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x2F
   573   00008F                     	ds	2
   574   000091                     normalise_readings@differenceR:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x31
   578   000091                     	ds	2
   579   000093                     normalise_readings@differenceG:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x33
   583   000093                     	ds	2
   584   000095                     normalise_readings@differenceB:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x35
   588   000095                     	ds	2
   589   000097                     normalise_readings@i:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x37
   593   000097                     	ds	1
   594   000098                     main@normalised_values:
   595                           	callstack 0
   596                           
   597                           ; 18 bytes @ 0x38
   598   000098                     	ds	18
   599   0000AA                     main@buf:
   600                           	callstack 0
   601                           
   602                           ; 20 bytes @ 0x4A
   603   0000AA                     	ds	20
   604   0000BE                     main@expected_values:
   605                           	callstack 0
   606                           
   607                           ; 18 bytes @ 0x5E
   608   0000BE                     	ds	18
   609   0000D0                     main@PWMcycle:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x70
   613   0000D0                     	ds	1
   614   0000D1                     main@red_read:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x71
   618   0000D1                     	ds	2
   619   0000D3                     main@green_read:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x73
   623   0000D3                     	ds	2
   624   0000D5                     main@blue_read:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x75
   628   0000D5                     	ds	2
   629   0000D7                     main@motorL:
   630                           	callstack 0
   631                           
   632                           ; 9 bytes @ 0x77
   633   0000D7                     	ds	9
   634   0000E0                     main@motorR:
   635                           	callstack 0
   636                           
   637                           ; 9 bytes @ 0x80
   638   0000E0                     	ds	9
   639                           
   640                           	psect	cstackCOMRAM
   641   000001                     __pcstackCOMRAM:
   642                           	callstack 0
   643   000001                     ??_I2C_2_Master_Idle:
   644   000001                     ?___wmul:
   645                           	callstack 0
   646   000001                     ?___aodiv:
   647                           	callstack 0
   648   000001                     ?___aomod:
   649                           	callstack 0
   650   000001                     ?___lodiv:
   651                           	callstack 0
   652   000001                     ?___lomod:
   653                           	callstack 0
   654   000001                     sendCharSerial4@charToSend:
   655                           	callstack 0
   656   000001                     ___wmul@multiplier:
   657                           	callstack 0
   658   000001                     fputc@c:
   659                           	callstack 0
   660   000001                     ___aodiv@dividend:
   661                           	callstack 0
   662   000001                     ___aomod@dividend:
   663                           	callstack 0
   664   000001                     ___lodiv@dividend:
   665                           	callstack 0
   666   000001                     ___lomod@dividend:
   667                           	callstack 0
   668                           
   669                           ; 8 bytes @ 0x0
   670   000001                     	ds	1
   671   000002                     ??_I2C_2_Master_Read:
   672   000002                     I2C_2_Master_Write@data_byte:
   673                           	callstack 0
   674   000002                     sendStringSerial4@string:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x1
   678   000002                     	ds	1
   679   000003                     color_writetoaddr@value:
   680                           	callstack 0
   681   000003                     I2C_2_Master_Read@ack:
   682                           	callstack 0
   683   000003                     ___wmul@multiplicand:
   684                           	callstack 0
   685   000003                     fputc@fp:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x2
   689   000003                     	ds	1
   690   000004                     color_writetoaddr@address:
   691                           	callstack 0
   692   000004                     I2C_2_Master_Read@tmp:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x3
   696   000004                     	ds	1
   697   000005                     ??_fputc:
   698   000005                     ??_color_click_init:
   699   000005                     ?_color_read_Red:
   700                           	callstack 0
   701   000005                     ?_color_read_Green:
   702                           	callstack 0
   703   000005                     ?_color_read_Blue:
   704                           	callstack 0
   705   000005                     ___wmul@product:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x4
   709   000005                     	ds	2
   710   000007                     ??_color_read_Red:
   711   000007                     ??_color_read_Green:
   712   000007                     ??_color_read_Blue:
   713   000007                     ?___lwdiv:
   714                           	callstack 0
   715   000007                     ___lwdiv@dividend:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x6
   719   000007                     	ds	2
   720   000009                     ___lwdiv@divisor:
   721                           	callstack 0
   722   000009                     ___aodiv@divisor:
   723                           	callstack 0
   724   000009                     ___aomod@divisor:
   725                           	callstack 0
   726   000009                     ___lodiv@divisor:
   727                           	callstack 0
   728   000009                     ___lomod@divisor:
   729                           	callstack 0
   730                           
   731                           ; 8 bytes @ 0x8
   732   000009                     	ds	1
   733   00000A                     color_read_Red@tmp:
   734                           	callstack 0
   735   00000A                     color_read_Green@tmp:
   736                           	callstack 0
   737   00000A                     color_read_Blue@tmp:
   738                           	callstack 0
   739   00000A                     fputs@s:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x9
   743   00000A                     	ds	1
   744   00000B                     ___lwdiv@quotient:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0xA
   748   00000B                     	ds	1
   749   00000C                     fputs@fp:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0xB
   753   00000C                     	ds	1
   754   00000D                     ___lwdiv@counter:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0xC
   758   00000D                     	ds	1
   759   00000E                     fputs@c:
   760                           	callstack 0
   761   00000E                     setMotorPWM@m:
   762                           	callstack 0
   763   00000E                     collect_avg_readings@red_read:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0xD
   767   00000E                     	ds	1
   768   00000F                     fputs@i:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0xE
   772   00000F                     	ds	1
   773   000010                     ??_setMotorPWM:
   774   000010                     collect_avg_readings@green_read:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0xF
   778   000010                     	ds	1
   779   000011                     ___aodiv@counter:
   780                           	callstack 0
   781   000011                     ___aomod@counter:
   782                           	callstack 0
   783   000011                     ___lomod@counter:
   784                           	callstack 0
   785   000011                     pad@fp:
   786                           	callstack 0
   787   000011                     ___lodiv@quotient:
   788                           	callstack 0
   789                           
   790                           ; 8 bytes @ 0x10
   791   000011                     	ds	1
   792   000012                     setMotorPWM@posDuty:
   793                           	callstack 0
   794   000012                     ___aodiv@sign:
   795                           	callstack 0
   796   000012                     ___aomod@sign:
   797                           	callstack 0
   798   000012                     collect_avg_readings@blue_read:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x11
   802   000012                     	ds	1
   803   000013                     ?_abs:
   804                           	callstack 0
   805   000013                     setMotorPWM@negDuty:
   806                           	callstack 0
   807   000013                     abs@a:
   808                           	callstack 0
   809   000013                     pad@buf:
   810                           	callstack 0
   811   000013                     ___aodiv@quotient:
   812                           	callstack 0
   813                           
   814                           ; 8 bytes @ 0x12
   815   000013                     	ds	1
   816   000014                     ??_collect_avg_readings:
   817                           
   818                           ; 1 bytes @ 0x13
   819   000014                     	ds	1
   820   000015                     ??_abs:
   821   000015                     pad@p:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x14
   825   000015                     	ds	1
   826   000016                     collect_avg_readings@i:
   827                           	callstack 0
   828                           
   829                           ; 1 bytes @ 0x15
   830   000016                     	ds	1
   831   000017                     ??_pad:
   832   000017                     collect_avg_readings@i_1463:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x16
   836   000017                     	ds	1
   837   000018                     collect_avg_readings@i_1465:
   838                           	callstack 0
   839   000018                     pad@i:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x17
   843   000018                     	ds	1
   844   000019                     ___lodiv@counter:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x18
   848   000019                     	ds	1
   849   00001A                     pad@w:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x19
   853   00001A                     	ds	2
   854   00001C                     dtoa@fp:
   855                           	callstack 0
   856   00001C                     utoa@fp:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x1B
   860   00001C                     	ds	2
   861   00001E                     dtoa@d:
   862                           	callstack 0
   863   00001E                     utoa@d:
   864                           	callstack 0
   865                           
   866                           ; 8 bytes @ 0x1D
   867   00001E                     	ds	8
   868   000026                     ??_dtoa:
   869   000026                     ??_utoa:
   870                           
   871                           ; 1 bytes @ 0x25
   872   000026                     	ds	8
   873   00002E                     _dtoa$2197:
   874                           	callstack 0
   875   00002E                     utoa@w:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x2D
   879   00002E                     	ds	2
   880   000030                     dtoa@p:
   881                           	callstack 0
   882   000030                     utoa@p:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x2F
   886   000030                     	ds	2
   887   000032                     dtoa@w:
   888                           	callstack 0
   889   000032                     utoa@n:
   890                           	callstack 0
   891                           
   892                           ; 8 bytes @ 0x31
   893   000032                     	ds	2
   894   000034                     dtoa@n:
   895                           	callstack 0
   896                           
   897                           ; 8 bytes @ 0x33
   898   000034                     	ds	6
   899   00003A                     utoa@i:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x39
   903   00003A                     	ds	2
   904   00003C                     dtoa@i:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x3B
   908   00003C                     	ds	2
   909   00003E                     dtoa@s:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x3D
   913   00003E                     	ds	1
   914   00003F                     vfpfcnvrt@fp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x3E
   918   00003F                     	ds	2
   919   000041                     vfpfcnvrt@fmt:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x40
   923   000041                     	ds	2
   924   000043                     vfpfcnvrt@ap:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x42
   928   000043                     	ds	2
   929   000045                     ??_vfpfcnvrt:
   930                           
   931                           ; 1 bytes @ 0x44
   932   000045                     	ds	4
   933   000049                     vfpfcnvrt@convarg:
   934                           	callstack 0
   935                           
   936                           ; 8 bytes @ 0x48
   937   000049                     	ds	8
   938   000051                     vfpfcnvrt@cp:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x50
   942   000051                     	ds	2
   943   000053                     ?_vfprintf:
   944                           	callstack 0
   945   000053                     vfprintf@fp:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x52
   949   000053                     	ds	2
   950   000055                     vfprintf@fmt:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x54
   954   000055                     	ds	2
   955   000057                     vfprintf@ap:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x56
   959   000057                     	ds	2
   960   000059                     vfprintf@cfmt:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x58
   964   000059                     	ds	2
   965   00005B                     ??_main:
   966                           
   967                           ; 1 bytes @ 0x5A
   968   00005B                     	ds	2
   969                           
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 20 in file "main.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  buf            20   74[BANK0 ] unsigned char [20]
   980 ;;  expected_val   18   94[BANK0 ] volatile unsigned int [3
   981 ;;  normalised_v   18   56[BANK0 ] unsigned int [3][3]
   982 ;;  motorR          9  128[BANK0 ] struct DC_motor
   983 ;;  motorL          9  119[BANK0 ] struct DC_motor
   984 ;;  master_close    6    0        unsigned int [3]
   985 ;;  blue_read       2  117[BANK0 ] unsigned int 
   986 ;;  green_read      2  115[BANK0 ] unsigned int 
   987 ;;  red_read        2  113[BANK0 ] unsigned int 
   988 ;;  PWMcycle        1  112[BANK0 ] unsigned char 
   989 ;;  card            1    0        enum E14575
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;      Locals:         0      81       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1002 ;;      Totals:         2      81       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1003 ;;Total ram usage:       83 bytes
  1004 ;; Hardware stack levels required when called: 9
  1005 ;; This function calls:
  1006 ;;		_I2C_2_Master_Init
  1007 ;;		_LEDSon_init
  1008 ;;		_collect_avg_readings
  1009 ;;		_color_click_init
  1010 ;;		_initDCmotorsPWM
  1011 ;;		_initUSART4
  1012 ;;		_normalise_readings
  1013 ;;		_sendStringSerial4
  1014 ;;		_setMotorPWM
  1015 ;;		_sprintf
  1016 ;; This function is called by:
  1017 ;;		Startup code after reset
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text0
  1022   0016E8                     __ptext0:
  1023                           	callstack 0
  1024   0016E8                     _main:
  1025                           	callstack 22
  1026   0016E8                     
  1027                           ;main.c: 25:     LEDSon_init();
  1028   0016E8  ECD4  F013         	call	_LEDSon_init	;wreg free
  1029   0016EC                     
  1030                           ;main.c: 26:     I2C_2_Master_Init();
  1031   0016EC  EC98  F013         	call	_I2C_2_Master_Init	;wreg free
  1032   0016F0                     
  1033                           ;main.c: 27:     color_click_init();
  1034   0016F0  EC66  F013         	call	_color_click_init	;wreg free
  1035   0016F4                     
  1036                           ;main.c: 28:     initDCmotorsPWM();
  1037   0016F4  EC5B  F011         	call	_initDCmotorsPWM	;wreg free
  1038   0016F8                     
  1039                           ;main.c: 29:     initUSART4();
  1040   0016F8  ECE5  F013         	call	_initUSART4	;wreg free
  1041   0016FC                     
  1042                           ;main.c: 37:     unsigned char PWMcycle = T2PR;
  1043   0016FC  CFBC F0D0          	movff	4028,main@PWMcycle	;volatile
  1044   001700                     
  1045                           ;main.c: 39:     struct DC_motor motorL, motorR;;main.c: 41:     motorL.power=0;
  1046   001700  0E00               	movlw	0
  1047   001702  0100               	movlb	0	; () banked
  1048   001704  6FD7               	movwf	main@motorL& (0+255),b
  1049   001706                     
  1050                           ; BSR set to: 0
  1051                           ;main.c: 42:     motorL.direction=1;
  1052   001706  0E01               	movlw	1
  1053   001708  6FD8               	movwf	(main@motorL+1)& (0+255),b
  1054   00170A                     
  1055                           ; BSR set to: 0
  1056                           ;main.c: 43:     motorL.brakemode=1;
  1057   00170A  0E01               	movlw	1
  1058   00170C  6FD9               	movwf	(main@motorL+2)& (0+255),b
  1059   00170E                     
  1060                           ; BSR set to: 0
  1061                           ;main.c: 44:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1062   00170E  0EAA               	movlw	170
  1063   001710  6FDC               	movwf	(main@motorL+5)& (0+255),b
  1064   001712  0E0F               	movlw	15
  1065   001714  6FDD               	movwf	(main@motorL+6)& (0+255),b
  1066   001716                     
  1067                           ; BSR set to: 0
  1068                           ;main.c: 45:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1069   001716  0EA6               	movlw	166
  1070   001718  6FDE               	movwf	(main@motorL+7)& (0+255),b
  1071   00171A  0E0F               	movlw	15
  1072   00171C  6FDF               	movwf	(main@motorL+8)& (0+255),b
  1073   00171E                     
  1074                           ; BSR set to: 0
  1075                           ;main.c: 46:     motorL.PWMperiod=PWMcycle;
  1076   00171E  C0D0  F0DA         	movff	main@PWMcycle,main@motorL+3
  1077   001722  6BDB               	clrf	(main@motorL+4)& (0+255),b
  1078   001724                     
  1079                           ; BSR set to: 0
  1080                           ;main.c: 48:     motorR.power=0;
  1081   001724  0E00               	movlw	0
  1082   001726  6FE0               	movwf	main@motorR& (0+255),b
  1083   001728                     
  1084                           ; BSR set to: 0
  1085                           ;main.c: 49:     motorR.direction=1;
  1086   001728  0E01               	movlw	1
  1087   00172A  6FE1               	movwf	(main@motorR+1)& (0+255),b
  1088   00172C                     
  1089                           ; BSR set to: 0
  1090                           ;main.c: 50:     motorR.brakemode=1;
  1091   00172C  0E01               	movlw	1
  1092   00172E  6FE2               	movwf	(main@motorR+2)& (0+255),b
  1093   001730                     
  1094                           ; BSR set to: 0
  1095                           ;main.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1096   001730  0E25               	movlw	37
  1097   001732  6FE5               	movwf	(main@motorR+5)& (0+255),b
  1098   001734  0E0F               	movlw	15
  1099   001736  6FE6               	movwf	(main@motorR+6)& (0+255),b
  1100   001738                     
  1101                           ; BSR set to: 0
  1102                           ;main.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1103   001738  0E21               	movlw	33
  1104   00173A  6FE7               	movwf	(main@motorR+7)& (0+255),b
  1105   00173C  0E0F               	movlw	15
  1106   00173E  6FE8               	movwf	(main@motorR+8)& (0+255),b
  1107   001740                     
  1108                           ; BSR set to: 0
  1109                           ;main.c: 53:     motorR.PWMperiod=PWMcycle;
  1110   001740  C0D0  F0E3         	movff	main@PWMcycle,main@motorR+3
  1111   001744  6BE4               	clrf	(main@motorR+4)& (0+255),b
  1112   001746                     
  1113                           ; BSR set to: 0
  1114                           ;main.c: 55:     setMotorPWM(&motorL);
  1115   001746  0ED7               	movlw	low main@motorL
  1116   001748  6E0E               	movwf	setMotorPWM@m^0,c
  1117   00174A  0E00               	movlw	high main@motorL
  1118   00174C  6E0F               	movwf	(setMotorPWM@m+1)^0,c
  1119   00174E  EC08  F00E         	call	_setMotorPWM	;wreg free
  1120   001752                     
  1121                           ;main.c: 56:     setMotorPWM(&motorR);
  1122   001752  0EE0               	movlw	low main@motorR
  1123   001754  6E0E               	movwf	setMotorPWM@m^0,c
  1124   001756  0E00               	movlw	high main@motorR
  1125   001758  6E0F               	movwf	(setMotorPWM@m+1)^0,c
  1126   00175A  EC08  F00E         	call	_setMotorPWM	;wreg free
  1127   00175E                     
  1128                           ;main.c: 63:     unsigned int normalised_values[3][3];;main.c: 64:     unsigned int mast
      +                          er_closeness[3];;main.c: 66:     unsigned int red_read = 0;
  1129   00175E  0E00               	movlw	0
  1130   001760  0100               	movlb	0	; () banked
  1131   001762  6FD2               	movwf	(main@red_read+1)& (0+255),b
  1132   001764  0E00               	movlw	0
  1133   001766  6FD1               	movwf	main@red_read& (0+255),b
  1134   001768                     
  1135                           ; BSR set to: 0
  1136                           ;main.c: 67:     unsigned int green_read = 0;
  1137   001768  0E00               	movlw	0
  1138   00176A  6FD4               	movwf	(main@green_read+1)& (0+255),b
  1139   00176C  0E00               	movlw	0
  1140   00176E  6FD3               	movwf	main@green_read& (0+255),b
  1141   001770                     
  1142                           ; BSR set to: 0
  1143                           ;main.c: 68:     unsigned int blue_read = 0;
  1144   001770  0E00               	movlw	0
  1145   001772  6FD6               	movwf	(main@blue_read+1)& (0+255),b
  1146   001774  0E00               	movlw	0
  1147   001776  6FD5               	movwf	main@blue_read& (0+255),b
  1148   001778                     
  1149                           ; BSR set to: 0
  1150                           ;main.c: 113:     char buf[20];;main.c: 114:     volatile unsigned int expected_values[3
      +                          ][3] = {{100, 200, 300},{400, 500, 600},{700, 800, 900}};
  1151   001778  EE21  F070         	lfsr	2,main@F14649	;volatile
  1152   00177C  EE10  F0BE         	lfsr	1,main@expected_values	;volatile
  1153   001780  0E11               	movlw	17
  1154   001782                     u1511:
  1155   001782  CFDB FFE3          	movff	plusw2,plusw1
  1156   001786  06E8               	decf	wreg,f,c
  1157   001788  E2FC               	bc	u1511
  1158   00178A                     l2797:
  1159                           
  1160                           ;main.c: 120:         collect_avg_readings(&red_read, &green_read, &blue_read);
  1161   00178A  0ED1               	movlw	low main@red_read
  1162   00178C  6E0E               	movwf	collect_avg_readings@red_read^0,c
  1163   00178E  0E00               	movlw	high main@red_read
  1164   001790  6E0F               	movwf	(collect_avg_readings@red_read+1)^0,c
  1165   001792  0ED3               	movlw	low main@green_read
  1166   001794  6E10               	movwf	collect_avg_readings@green_read^0,c
  1167   001796  0E00               	movlw	high main@green_read
  1168   001798  6E11               	movwf	(collect_avg_readings@green_read+1)^0,c
  1169   00179A  0ED5               	movlw	low main@blue_read
  1170   00179C  6E12               	movwf	collect_avg_readings@blue_read^0,c
  1171   00179E  0E00               	movlw	high main@blue_read
  1172   0017A0  6E13               	movwf	(collect_avg_readings@blue_read+1)^0,c
  1173   0017A2  EC70  F00F         	call	_collect_avg_readings	;wreg free
  1174   0017A6                     
  1175                           ;main.c: 122:         sprintf(buf, "\n AVG: R %d, G %d, B %d \n", red_read, green_read, 
      +                          blue_read);
  1176   0017A6  0EAA               	movlw	low main@buf
  1177   0017A8  0100               	movlb	0	; () banked
  1178   0017AA  6F60               	movwf	sprintf@s& (0+255),b
  1179   0017AC  0E00               	movlw	high main@buf
  1180   0017AE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1181   0017B0  0EB2               	movlw	low STR_1
  1182   0017B2  6F62               	movwf	sprintf@fmt& (0+255),b
  1183   0017B4  0E0E               	movlw	high STR_1
  1184   0017B6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1185   0017B8  C0D1  F064         	movff	main@red_read,?_sprintf+4
  1186   0017BC  C0D2  F065         	movff	main@red_read+1,?_sprintf+5
  1187   0017C0  C0D3  F066         	movff	main@green_read,?_sprintf+6
  1188   0017C4  C0D4  F067         	movff	main@green_read+1,?_sprintf+7
  1189   0017C8  C0D5  F068         	movff	main@blue_read,?_sprintf+8
  1190   0017CC  C0D6  F069         	movff	main@blue_read+1,?_sprintf+9
  1191   0017D0  EC16  F012         	call	_sprintf	;wreg free
  1192   0017D4                     
  1193                           ;main.c: 123:         sendStringSerial4(buf);
  1194   0017D4  0EAA               	movlw	low main@buf
  1195   0017D6  6E02               	movwf	sendStringSerial4@string^0,c
  1196   0017D8  0E00               	movlw	high main@buf
  1197   0017DA  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1198   0017DC  EC80  F013         	call	_sendStringSerial4	;wreg free
  1199   0017E0                     
  1200                           ;main.c: 124:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1201   0017E0  0E52               	movlw	82
  1202   0017E2  6E5C               	movwf	(??_main+1)^0,c
  1203   0017E4  0E2B               	movlw	43
  1204   0017E6  6E5B               	movwf	??_main^0,c
  1205   0017E8  0E00               	movlw	0
  1206   0017EA                     u1577:
  1207   0017EA  2EE8               	decfsz	wreg,f,c
  1208   0017EC  D7FE               	bra	u1577
  1209   0017EE  2E5B               	decfsz	??_main^0,f,c
  1210   0017F0  D7FC               	bra	u1577
  1211   0017F2  2E5C               	decfsz	(??_main+1)^0,f,c
  1212   0017F4  D7FA               	bra	u1577
  1213   0017F6  D000               	nop2	
  1214   0017F8                     
  1215                           ;main.c: 125:         sprintf(buf, "\n Expected values: %u \n", expected_values[0][0]);
  1216   0017F8  0EAA               	movlw	low main@buf
  1217   0017FA  0100               	movlb	0	; () banked
  1218   0017FC  6F60               	movwf	sprintf@s& (0+255),b
  1219   0017FE  0E00               	movlw	high main@buf
  1220   001800  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1221   001802  0ECC               	movlw	low STR_2
  1222   001804  6F62               	movwf	sprintf@fmt& (0+255),b
  1223   001806  0E0E               	movlw	high STR_2
  1224   001808  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1225   00180A  C0BE  F064         	movff	main@expected_values,?_sprintf+4	;volatile
  1226   00180E  C0BF  F065         	movff	main@expected_values+1,?_sprintf+5	;volatile
  1227   001812  EC16  F012         	call	_sprintf	;wreg free
  1228   001816                     
  1229                           ;main.c: 126:         sendStringSerial4(buf);
  1230   001816  0EAA               	movlw	low main@buf
  1231   001818  6E02               	movwf	sendStringSerial4@string^0,c
  1232   00181A  0E00               	movlw	high main@buf
  1233   00181C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1234   00181E  EC80  F013         	call	_sendStringSerial4	;wreg free
  1235   001822                     
  1236                           ;main.c: 127:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1237   001822  0E52               	movlw	82
  1238   001824  6E5C               	movwf	(??_main+1)^0,c
  1239   001826  0E2B               	movlw	43
  1240   001828  6E5B               	movwf	??_main^0,c
  1241   00182A  0E00               	movlw	0
  1242   00182C                     u1587:
  1243   00182C  2EE8               	decfsz	wreg,f,c
  1244   00182E  D7FE               	bra	u1587
  1245   001830  2E5B               	decfsz	??_main^0,f,c
  1246   001832  D7FC               	bra	u1587
  1247   001834  2E5C               	decfsz	(??_main+1)^0,f,c
  1248   001836  D7FA               	bra	u1587
  1249   001838  D000               	nop2	
  1250   00183A                     
  1251                           ;main.c: 128:         LATFbits.LATF0 = 0;
  1252   00183A  907E               	bcf	126,0,c	;volatile
  1253   00183C                     
  1254                           ;main.c: 129:         normalise_readings(buf, red_read, green_read, blue_read, expected_
      +                          values, normalised_values);
  1255   00183C  0EAA               	movlw	low main@buf
  1256   00183E  0100               	movlb	0	; () banked
  1257   001840  6F79               	movwf	normalise_readings@buf& (0+255),b
  1258   001842  0E00               	movlw	high main@buf
  1259   001844  6F7A               	movwf	(normalise_readings@buf+1)& (0+255),b
  1260   001846  C0D1  F07B         	movff	main@red_read,normalise_readings@red_read
  1261   00184A  C0D2  F07C         	movff	main@red_read+1,normalise_readings@red_read+1
  1262   00184E  C0D3  F07D         	movff	main@green_read,normalise_readings@green_read
  1263   001852  C0D4  F07E         	movff	main@green_read+1,normalise_readings@green_read+1
  1264   001856  C0D5  F07F         	movff	main@blue_read,normalise_readings@blue_read
  1265   00185A  C0D6  F080         	movff	main@blue_read+1,normalise_readings@blue_read+1
  1266   00185E  0EBE               	movlw	low main@expected_values
  1267   001860  6F81               	movwf	normalise_readings@expected_values& (0+255),b
  1268   001862  0E00               	movlw	high main@expected_values
  1269   001864  6F82               	movwf	(normalise_readings@expected_values+1)& (0+255),b
  1270   001866  0E98               	movlw	low main@normalised_values
  1271   001868  6F83               	movwf	normalise_readings@normalised_values& (0+255),b
  1272   00186A  0E00               	movlw	high main@normalised_values
  1273   00186C  6F84               	movwf	(normalise_readings@normalised_values+1)& (0+255),b
  1274   00186E  EC73  F007         	call	_normalise_readings	;wreg free
  1275   001872                     
  1276                           ;main.c: 132:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1277   001872  0E52               	movlw	82
  1278   001874  6E5C               	movwf	(??_main+1)^0,c
  1279   001876  0E2B               	movlw	43
  1280   001878  6E5B               	movwf	??_main^0,c
  1281   00187A  0E00               	movlw	0
  1282   00187C                     u1597:
  1283   00187C  2EE8               	decfsz	wreg,f,c
  1284   00187E  D7FE               	bra	u1597
  1285   001880  2E5B               	decfsz	??_main^0,f,c
  1286   001882  D7FC               	bra	u1597
  1287   001884  2E5C               	decfsz	(??_main+1)^0,f,c
  1288   001886  D7FA               	bra	u1597
  1289   001888  D000               	nop2	
  1290   00188A                     
  1291                           ;main.c: 141:         LATFbits.LATF0 = 1;
  1292   00188A  807E               	bsf	126,0,c	;volatile
  1293   00188C                     
  1294                           ;main.c: 142:         LATDbits.LATD4 = 1;
  1295   00188C  887C               	bsf	124,4,c	;volatile
  1296   00188E                     
  1297                           ;main.c: 143:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1298   00188E  0EF4               	movlw	244
  1299   001890  6E5C               	movwf	(??_main+1)^0,c
  1300   001892  0E82               	movlw	130
  1301   001894  6E5B               	movwf	??_main^0,c
  1302   001896  0E05               	movlw	5
  1303   001898                     u1607:
  1304   001898  2EE8               	decfsz	wreg,f,c
  1305   00189A  D7FE               	bra	u1607
  1306   00189C  2E5B               	decfsz	??_main^0,f,c
  1307   00189E  D7FC               	bra	u1607
  1308   0018A0  2E5C               	decfsz	(??_main+1)^0,f,c
  1309   0018A2  D7FA               	bra	u1607
  1310   0018A4  F000               	nop	
  1311   0018A6                     
  1312                           ;main.c: 144:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1313   0018A6  0EF4               	movlw	244
  1314   0018A8  6E5C               	movwf	(??_main+1)^0,c
  1315   0018AA  0E82               	movlw	130
  1316   0018AC  6E5B               	movwf	??_main^0,c
  1317   0018AE  0E05               	movlw	5
  1318   0018B0                     u1617:
  1319   0018B0  2EE8               	decfsz	wreg,f,c
  1320   0018B2  D7FE               	bra	u1617
  1321   0018B4  2E5B               	decfsz	??_main^0,f,c
  1322   0018B6  D7FC               	bra	u1617
  1323   0018B8  2E5C               	decfsz	(??_main+1)^0,f,c
  1324   0018BA  D7FA               	bra	u1617
  1325   0018BC  F000               	nop	
  1326   0018BE  EFC5  F00B         	goto	l2797
  1327   0018C2  EF01  F000         	goto	start
  1328   0018C6                     __end_of_main:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _setMotorPWM *****************
  1332 ;; Defined at:
  1333 ;;		line 61 in file "dc_motor.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  m               2   13[COMRAM] PTR struct DC_motor
  1336 ;;		 -> main@motorR(9), main@motorL(9), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  negDuty         1   18[COMRAM] unsigned char 
  1339 ;;  posDuty         1   17[COMRAM] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1352 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1353 ;;Total ram usage:        6 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 1
  1356 ;; This function calls:
  1357 ;;		___lwdiv
  1358 ;;		___wmul
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;;		_stop
  1362 ;;		_turnLeft45
  1363 ;;		_turnRight45
  1364 ;;		_fullSpeedAhead
  1365 ;;		_reverseFullSpeed
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text1
  1370   001C10                     __ptext1:
  1371                           	callstack 0
  1372   001C10                     _setMotorPWM:
  1373                           	callstack 29
  1374   001C10                     
  1375                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  1376   001C10  EE20 F002          	lfsr	2,2
  1377   001C14  500E               	movf	setMotorPWM@m^0,w,c
  1378   001C16  26D9               	addwf	fsr2l,f,c
  1379   001C18  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1380   001C1A  22DA               	addwfc	fsr2h,f,c
  1381   001C1C  50DF               	movf	indf2,w,c
  1382   001C1E  B4D8               	btfsc	status,2,c
  1383   001C20  EF14  F00E         	goto	u1381
  1384   001C24  EF16  F00E         	goto	u1380
  1385   001C28                     u1381:
  1386   001C28  EF4A  F00E         	goto	l2541
  1387   001C2C                     u1380:
  1388   001C2C                     
  1389                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1390   001C2C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1391   001C30  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1392   001C34  50DF               	movf	indf2,w,c
  1393   001C36  6E10               	movwf	??_setMotorPWM^0,c
  1394   001C38  5010               	movf	??_setMotorPWM^0,w,c
  1395   001C3A  6E01               	movwf	___wmul@multiplier^0,c
  1396   001C3C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1397   001C3E  EE20 F003          	lfsr	2,3
  1398   001C42  500E               	movf	setMotorPWM@m^0,w,c
  1399   001C44  26D9               	addwf	fsr2l,f,c
  1400   001C46  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1401   001C48  22DA               	addwfc	fsr2h,f,c
  1402   001C4A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1403   001C4E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1404   001C52  ECC1  F013         	call	___wmul	;wreg free
  1405   001C56  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1406   001C5A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1407   001C5E  0E00               	movlw	0
  1408   001C60  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1409   001C62  0E64               	movlw	100
  1410   001C64  6E09               	movwf	___lwdiv@divisor^0,c
  1411   001C66  ECDC  F011         	call	___lwdiv	;wreg free
  1412   001C6A  EE20 F003          	lfsr	2,3
  1413   001C6E  500E               	movf	setMotorPWM@m^0,w,c
  1414   001C70  26D9               	addwf	fsr2l,f,c
  1415   001C72  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1416   001C74  22DA               	addwfc	fsr2h,f,c
  1417   001C76  50DF               	movf	indf2,w,c
  1418   001C78  6E11               	movwf	(??_setMotorPWM+1)^0,c
  1419   001C7A  5007               	movf	?___lwdiv^0,w,c
  1420   001C7C  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  1421   001C7E  6E12               	movwf	setMotorPWM@posDuty^0,c
  1422   001C80                     
  1423                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  1424   001C80  EE20 F003          	lfsr	2,3
  1425   001C84  500E               	movf	setMotorPWM@m^0,w,c
  1426   001C86  26D9               	addwf	fsr2l,f,c
  1427   001C88  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1428   001C8A  22DA               	addwfc	fsr2h,f,c
  1429   001C8C  50DF               	movf	indf2,w,c
  1430   001C8E  6E13               	movwf	setMotorPWM@negDuty^0,c
  1431                           
  1432                           ;dc_motor.c: 68:     }
  1433   001C90  EF6D  F00E         	goto	l2545
  1434   001C94                     l2541:
  1435                           
  1436                           ;dc_motor.c: 70:         posDuty=0;
  1437   001C94  0E00               	movlw	0
  1438   001C96  6E12               	movwf	setMotorPWM@posDuty^0,c
  1439   001C98                     
  1440                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  1441   001C98  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1442   001C9C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1443   001CA0  50DF               	movf	indf2,w,c
  1444   001CA2  6E10               	movwf	??_setMotorPWM^0,c
  1445   001CA4  5010               	movf	??_setMotorPWM^0,w,c
  1446   001CA6  6E01               	movwf	___wmul@multiplier^0,c
  1447   001CA8  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1448   001CAA  EE20 F003          	lfsr	2,3
  1449   001CAE  500E               	movf	setMotorPWM@m^0,w,c
  1450   001CB0  26D9               	addwf	fsr2l,f,c
  1451   001CB2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1452   001CB4  22DA               	addwfc	fsr2h,f,c
  1453   001CB6  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1454   001CBA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1455   001CBE  ECC1  F013         	call	___wmul	;wreg free
  1456   001CC2  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1457   001CC6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1458   001CCA  0E00               	movlw	0
  1459   001CCC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1460   001CCE  0E64               	movlw	100
  1461   001CD0  6E09               	movwf	___lwdiv@divisor^0,c
  1462   001CD2  ECDC  F011         	call	___lwdiv	;wreg free
  1463   001CD6  5007               	movf	?___lwdiv^0,w,c
  1464   001CD8  6E13               	movwf	setMotorPWM@negDuty^0,c
  1465   001CDA                     l2545:
  1466                           
  1467                           ;dc_motor.c: 74:     if (m->direction) {
  1468   001CDA  EE20 F001          	lfsr	2,1
  1469   001CDE  500E               	movf	setMotorPWM@m^0,w,c
  1470   001CE0  26D9               	addwf	fsr2l,f,c
  1471   001CE2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1472   001CE4  22DA               	addwfc	fsr2h,f,c
  1473   001CE6  50DF               	movf	indf2,w,c
  1474   001CE8  B4D8               	btfsc	status,2,c
  1475   001CEA  EF79  F00E         	goto	u1391
  1476   001CEE  EF7B  F00E         	goto	u1390
  1477   001CF2                     u1391:
  1478   001CF2  EF9D  F00E         	goto	l2549
  1479   001CF6                     u1390:
  1480   001CF6                     
  1481                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  1482   001CF6  EE20 F005          	lfsr	2,5
  1483   001CFA  500E               	movf	setMotorPWM@m^0,w,c
  1484   001CFC  26D9               	addwf	fsr2l,f,c
  1485   001CFE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1486   001D00  22DA               	addwfc	fsr2h,f,c
  1487   001D02  CFDE F010          	movff	postinc2,??_setMotorPWM
  1488   001D06  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1489   001D0A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1490   001D0E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1491   001D12  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1492                           
  1493                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  1494   001D16  EE20 F007          	lfsr	2,7
  1495   001D1A  500E               	movf	setMotorPWM@m^0,w,c
  1496   001D1C  26D9               	addwf	fsr2l,f,c
  1497   001D1E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1498   001D20  22DA               	addwfc	fsr2h,f,c
  1499   001D22  CFDE F010          	movff	postinc2,??_setMotorPWM
  1500   001D26  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1501   001D2A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1502   001D2E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1503   001D32  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1504                           
  1505                           ;dc_motor.c: 77:     } else {
  1506   001D36  EFBD  F00E         	goto	l95
  1507   001D3A                     l2549:
  1508                           
  1509                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  1510   001D3A  EE20 F005          	lfsr	2,5
  1511   001D3E  500E               	movf	setMotorPWM@m^0,w,c
  1512   001D40  26D9               	addwf	fsr2l,f,c
  1513   001D42  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1514   001D44  22DA               	addwfc	fsr2h,f,c
  1515   001D46  CFDE F010          	movff	postinc2,??_setMotorPWM
  1516   001D4A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1517   001D4E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1518   001D52  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1519   001D56  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1520                           
  1521                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  1522   001D5A  EE20 F007          	lfsr	2,7
  1523   001D5E  500E               	movf	setMotorPWM@m^0,w,c
  1524   001D60  26D9               	addwf	fsr2l,f,c
  1525   001D62  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1526   001D64  22DA               	addwfc	fsr2h,f,c
  1527   001D66  CFDE F010          	movff	postinc2,??_setMotorPWM
  1528   001D6A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1529   001D6E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1530   001D72  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1531   001D76  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1532   001D7A                     l95:
  1533   001D7A  0012               	return		;funcret
  1534   001D7C                     __end_of_setMotorPWM:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _normalise_readings *****************
  1538 ;; Defined at:
  1539 ;;		line 58 in file "colour_identify.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  buf             2   25[BANK0 ] PTR unsigned char 
  1542 ;;		 -> main@buf(20), 
  1543 ;;  red_read        2   27[BANK0 ] unsigned int 
  1544 ;;  green_read      2   29[BANK0 ] unsigned int 
  1545 ;;  blue_read       2   31[BANK0 ] unsigned int 
  1546 ;;  expected_val    2   33[BANK0 ] PTR unsigned int [3]
  1547 ;;		 -> main@expected_values(18), 
  1548 ;;  normalised_v    2   35[BANK0 ] PTR unsigned int [3]
  1549 ;;		 -> main@normalised_values(18), 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  differenceB     2   53[BANK0 ] unsigned int 
  1552 ;;  differenceG     2   51[BANK0 ] unsigned int 
  1553 ;;  differenceR     2   49[BANK0 ] unsigned int 
  1554 ;;  normalB         2   47[BANK0 ] unsigned int 
  1555 ;;  normalG         2   45[BANK0 ] unsigned int 
  1556 ;;  normalR         2   43[BANK0 ] unsigned int 
  1557 ;;  i               1   55[BANK0 ] enum E14551
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1567 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1568 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;Total ram usage:       31 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 8
  1574 ;; This function calls:
  1575 ;;		___lwdiv
  1576 ;;		___wmul
  1577 ;;		_abs
  1578 ;;		_sendStringSerial4
  1579 ;;		_sprintf
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text2
  1586   000EE6                     __ptext2:
  1587                           	callstack 0
  1588   000EE6                     _normalise_readings:
  1589                           	callstack 22
  1590   000EE6                     
  1591                           ;colour_identify.c: 65:     for(colour i = RED; i<= BLUE; i++){
  1592   000EE6  0E00               	movlw	0
  1593   000EE8  0100               	movlb	0	; () banked
  1594   000EEA  6F97               	movwf	normalise_readings@i& (0+255),b
  1595   000EEC                     l2685:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;colour_identify.c: 68:         unsigned int differenceR = abs(red_read - expected_value
      +                          s[i][RED]);
  1599   000EEC  5197               	movf	normalise_readings@i& (0+255),w,b
  1600   000EEE  0D06               	mullw	6
  1601   000EF0  CFF3 F085          	movff	prodl,??_normalise_readings
  1602   000EF4  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1603   000EF8  5185               	movf	??_normalise_readings& (0+255),w,b
  1604   000EFA  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1605   000EFC  6ED9               	movwf	fsr2l,c
  1606   000EFE  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1607   000F00  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1608   000F02  6EDA               	movwf	fsr2h,c
  1609   000F04  CFDE F087          	movff	postinc2,??_normalise_readings+2
  1610   000F08  CFDD F088          	movff	postdec2,??_normalise_readings+3
  1611   000F0C  5187               	movf	(??_normalise_readings+2)& (0+255),w,b
  1612   000F0E  5D7B               	subwf	normalise_readings@red_read& (0+255),w,b
  1613   000F10  6E13               	movwf	abs@a^0,c
  1614   000F12  5188               	movf	(??_normalise_readings+3)& (0+255),w,b
  1615   000F14  597C               	subwfb	(normalise_readings@red_read+1)& (0+255),w,b
  1616   000F16  6E14               	movwf	(abs@a+1)^0,c
  1617   000F18  EC46  F013         	call	_abs	;wreg free
  1618   000F1C  C013  F091         	movff	?_abs,normalise_readings@differenceR
  1619   000F20  C014  F092         	movff	?_abs+1,normalise_readings@differenceR+1
  1620                           
  1621                           ;colour_identify.c: 69:         unsigned int normalR = (differenceR*100) / expected_valu
      +                          es[i][RED];
  1622   000F24  C091  F001         	movff	normalise_readings@differenceR,___wmul@multiplier
  1623   000F28  C092  F002         	movff	normalise_readings@differenceR+1,___wmul@multiplier+1
  1624   000F2C  0E00               	movlw	0
  1625   000F2E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1626   000F30  0E64               	movlw	100
  1627   000F32  6E03               	movwf	___wmul@multiplicand^0,c
  1628   000F34  ECC1  F013         	call	___wmul	;wreg free
  1629   000F38  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1630   000F3C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1631   000F40  0100               	movlb	0	; () banked
  1632   000F42  5197               	movf	normalise_readings@i& (0+255),w,b
  1633   000F44  0D06               	mullw	6
  1634   000F46  CFF3 F085          	movff	prodl,??_normalise_readings
  1635   000F4A  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1636   000F4E  5185               	movf	??_normalise_readings& (0+255),w,b
  1637   000F50  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1638   000F52  6ED9               	movwf	fsr2l,c
  1639   000F54  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1640   000F56  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1641   000F58  6EDA               	movwf	fsr2h,c
  1642   000F5A  CFDE F009          	movff	postinc2,___lwdiv@divisor
  1643   000F5E  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  1644   000F62  ECDC  F011         	call	___lwdiv	;wreg free
  1645   000F66  C007  F08B         	movff	?___lwdiv,normalise_readings@normalR
  1646   000F6A  C008  F08C         	movff	?___lwdiv+1,normalise_readings@normalR+1
  1647   000F6E                     
  1648                           ;colour_identify.c: 71:         sprintf(buf, "RED: Read %d, expected %d, difference %d, 
      +                          normalised %d \n", red_read, expected_values[i][RED], differenceR, normalR);
  1649   000F6E  C079  F060         	movff	normalise_readings@buf,sprintf@s
  1650   000F72  C07A  F061         	movff	normalise_readings@buf+1,sprintf@s+1
  1651   000F76  0E78               	movlw	low STR_3
  1652   000F78  0100               	movlb	0	; () banked
  1653   000F7A  6F62               	movwf	sprintf@fmt& (0+255),b
  1654   000F7C  0E0E               	movlw	high STR_3
  1655   000F7E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1656   000F80  C07B  F064         	movff	normalise_readings@red_read,?_sprintf+4
  1657   000F84  C07C  F065         	movff	normalise_readings@red_read+1,?_sprintf+5
  1658   000F88  5197               	movf	normalise_readings@i& (0+255),w,b
  1659   000F8A  0D06               	mullw	6
  1660   000F8C  CFF3 F085          	movff	prodl,??_normalise_readings
  1661   000F90  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1662   000F94  5185               	movf	??_normalise_readings& (0+255),w,b
  1663   000F96  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1664   000F98  6ED9               	movwf	fsr2l,c
  1665   000F9A  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1666   000F9C  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1667   000F9E  6EDA               	movwf	fsr2h,c
  1668   000FA0  CFDE F066          	movff	postinc2,?_sprintf+6
  1669   000FA4  CFDD F067          	movff	postdec2,?_sprintf+7
  1670   000FA8  C091  F068         	movff	normalise_readings@differenceR,?_sprintf+8
  1671   000FAC  C092  F069         	movff	normalise_readings@differenceR+1,?_sprintf+9
  1672   000FB0  C08B  F06A         	movff	normalise_readings@normalR,?_sprintf+10
  1673   000FB4  C08C  F06B         	movff	normalise_readings@normalR+1,?_sprintf+11
  1674   000FB8  EC16  F012         	call	_sprintf	;wreg free
  1675   000FBC                     
  1676                           ;colour_identify.c: 72:         sendStringSerial4(buf);
  1677   000FBC  C079  F002         	movff	normalise_readings@buf,sendStringSerial4@string
  1678   000FC0  C07A  F003         	movff	normalise_readings@buf+1,sendStringSerial4@string+1
  1679   000FC4  EC80  F013         	call	_sendStringSerial4	;wreg free
  1680   000FC8                     
  1681                           ;colour_identify.c: 73:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1682   000FC8  0E52               	movlw	82
  1683   000FCA  0100               	movlb	0	; () banked
  1684   000FCC  6F86               	movwf	(??_normalise_readings+1)& (0+255),b
  1685   000FCE  0E2B               	movlw	43
  1686   000FD0  6F85               	movwf	??_normalise_readings& (0+255),b
  1687   000FD2  0E00               	movlw	0
  1688   000FD4                     u1627:
  1689   000FD4  2EE8               	decfsz	wreg,f,c
  1690   000FD6  D7FE               	bra	u1627
  1691   000FD8  2F85               	decfsz	??_normalise_readings& (0+255),f,b
  1692   000FDA  D7FC               	bra	u1627
  1693   000FDC  2F86               	decfsz	(??_normalise_readings+1)& (0+255),f,b
  1694   000FDE  D7FA               	bra	u1627
  1695   000FE0  F000               	nop	
  1696   000FE2                     
  1697                           ;colour_identify.c: 76:         unsigned int differenceG = abs(green_read - expected_val
      +                          ues[i][GREEN]);
  1698   000FE2  0100               	movlb	0	; () banked
  1699   000FE4  5197               	movf	normalise_readings@i& (0+255),w,b
  1700   000FE6  0D06               	mullw	6
  1701   000FE8  CFF3 F085          	movff	prodl,??_normalise_readings
  1702   000FEC  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1703   000FF0  5185               	movf	??_normalise_readings& (0+255),w,b
  1704   000FF2  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1705   000FF4  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1706   000FF6  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1707   000FF8  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1708   000FFA  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1709   000FFC  0E02               	movlw	2
  1710   000FFE  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1711   001000  6ED9               	movwf	fsr2l,c
  1712   001002  0E00               	movlw	0
  1713   001004  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1714   001006  6EDA               	movwf	fsr2h,c
  1715   001008  CFDE F089          	movff	postinc2,??_normalise_readings+4
  1716   00100C  CFDD F08A          	movff	postdec2,??_normalise_readings+5
  1717   001010  5189               	movf	(??_normalise_readings+4)& (0+255),w,b
  1718   001012  5D7D               	subwf	normalise_readings@green_read& (0+255),w,b
  1719   001014  6E13               	movwf	abs@a^0,c
  1720   001016  518A               	movf	(??_normalise_readings+5)& (0+255),w,b
  1721   001018  597E               	subwfb	(normalise_readings@green_read+1)& (0+255),w,b
  1722   00101A  6E14               	movwf	(abs@a+1)^0,c
  1723   00101C  EC46  F013         	call	_abs	;wreg free
  1724   001020  C013  F093         	movff	?_abs,normalise_readings@differenceG
  1725   001024  C014  F094         	movff	?_abs+1,normalise_readings@differenceG+1
  1726   001028                     
  1727                           ;colour_identify.c: 77:         unsigned int normalG = (differenceG*100) / expected_valu
      +                          es[i][GREEN];
  1728   001028  C093  F001         	movff	normalise_readings@differenceG,___wmul@multiplier
  1729   00102C  C094  F002         	movff	normalise_readings@differenceG+1,___wmul@multiplier+1
  1730   001030  0E00               	movlw	0
  1731   001032  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1732   001034  0E64               	movlw	100
  1733   001036  6E03               	movwf	___wmul@multiplicand^0,c
  1734   001038  ECC1  F013         	call	___wmul	;wreg free
  1735   00103C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1736   001040  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1737   001044  0100               	movlb	0	; () banked
  1738   001046  5197               	movf	normalise_readings@i& (0+255),w,b
  1739   001048  0D06               	mullw	6
  1740   00104A  CFF3 F085          	movff	prodl,??_normalise_readings
  1741   00104E  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1742   001052  5185               	movf	??_normalise_readings& (0+255),w,b
  1743   001054  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1744   001056  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1745   001058  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1746   00105A  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1747   00105C  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1748   00105E  0E02               	movlw	2
  1749   001060  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1750   001062  6ED9               	movwf	fsr2l,c
  1751   001064  0E00               	movlw	0
  1752   001066  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1753   001068  6EDA               	movwf	fsr2h,c
  1754   00106A  CFDE F009          	movff	postinc2,___lwdiv@divisor
  1755   00106E  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  1756   001072  ECDC  F011         	call	___lwdiv	;wreg free
  1757   001076  C007  F08D         	movff	?___lwdiv,normalise_readings@normalG
  1758   00107A  C008  F08E         	movff	?___lwdiv+1,normalise_readings@normalG+1
  1759   00107E                     
  1760                           ;colour_identify.c: 78:         sprintf(buf, "GREEN: Read %d, expected %d, difference %d
      +                          , normalised %d \n", green_read, expected_values[i][GREEN], differenceG, normalG);
  1761   00107E  C079  F060         	movff	normalise_readings@buf,sprintf@s
  1762   001082  C07A  F061         	movff	normalise_readings@buf+1,sprintf@s+1
  1763   001086  0E01               	movlw	low STR_4
  1764   001088  0100               	movlb	0	; () banked
  1765   00108A  6F62               	movwf	sprintf@fmt& (0+255),b
  1766   00108C  0E0E               	movlw	high STR_4
  1767   00108E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1768   001090  C07D  F064         	movff	normalise_readings@green_read,?_sprintf+4
  1769   001094  C07E  F065         	movff	normalise_readings@green_read+1,?_sprintf+5
  1770   001098  5197               	movf	normalise_readings@i& (0+255),w,b
  1771   00109A  0D06               	mullw	6
  1772   00109C  CFF3 F085          	movff	prodl,??_normalise_readings
  1773   0010A0  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1774   0010A4  5185               	movf	??_normalise_readings& (0+255),w,b
  1775   0010A6  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1776   0010A8  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1777   0010AA  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1778   0010AC  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1779   0010AE  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1780   0010B0  0E02               	movlw	2
  1781   0010B2  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1782   0010B4  6ED9               	movwf	fsr2l,c
  1783   0010B6  0E00               	movlw	0
  1784   0010B8  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1785   0010BA  6EDA               	movwf	fsr2h,c
  1786   0010BC  CFDE F066          	movff	postinc2,?_sprintf+6
  1787   0010C0  CFDD F067          	movff	postdec2,?_sprintf+7
  1788   0010C4  C093  F068         	movff	normalise_readings@differenceG,?_sprintf+8
  1789   0010C8  C094  F069         	movff	normalise_readings@differenceG+1,?_sprintf+9
  1790   0010CC  C08D  F06A         	movff	normalise_readings@normalG,?_sprintf+10
  1791   0010D0  C08E  F06B         	movff	normalise_readings@normalG+1,?_sprintf+11
  1792   0010D4  EC16  F012         	call	_sprintf	;wreg free
  1793   0010D8                     
  1794                           ;colour_identify.c: 79:         sendStringSerial4(buf);
  1795   0010D8  C079  F002         	movff	normalise_readings@buf,sendStringSerial4@string
  1796   0010DC  C07A  F003         	movff	normalise_readings@buf+1,sendStringSerial4@string+1
  1797   0010E0  EC80  F013         	call	_sendStringSerial4	;wreg free
  1798   0010E4                     
  1799                           ;colour_identify.c: 80:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1800   0010E4  0E52               	movlw	82
  1801   0010E6  0100               	movlb	0	; () banked
  1802   0010E8  6F86               	movwf	(??_normalise_readings+1)& (0+255),b
  1803   0010EA  0E2B               	movlw	43
  1804   0010EC  6F85               	movwf	??_normalise_readings& (0+255),b
  1805   0010EE  0E00               	movlw	0
  1806   0010F0                     u1637:
  1807   0010F0  2EE8               	decfsz	wreg,f,c
  1808   0010F2  D7FE               	bra	u1637
  1809   0010F4  2F85               	decfsz	??_normalise_readings& (0+255),f,b
  1810   0010F6  D7FC               	bra	u1637
  1811   0010F8  2F86               	decfsz	(??_normalise_readings+1)& (0+255),f,b
  1812   0010FA  D7FA               	bra	u1637
  1813   0010FC  F000               	nop	
  1814                           
  1815                           ;colour_identify.c: 83:         unsigned int differenceB = abs(blue_read - expected_valu
      +                          es[i][BLUE]);
  1816   0010FE  0100               	movlb	0	; () banked
  1817   001100  5197               	movf	normalise_readings@i& (0+255),w,b
  1818   001102  0D06               	mullw	6
  1819   001104  CFF3 F085          	movff	prodl,??_normalise_readings
  1820   001108  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1821   00110C  5185               	movf	??_normalise_readings& (0+255),w,b
  1822   00110E  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1823   001110  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1824   001112  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1825   001114  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1826   001116  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1827   001118  0E04               	movlw	4
  1828   00111A  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1829   00111C  6ED9               	movwf	fsr2l,c
  1830   00111E  0E00               	movlw	0
  1831   001120  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1832   001122  6EDA               	movwf	fsr2h,c
  1833   001124  CFDE F089          	movff	postinc2,??_normalise_readings+4
  1834   001128  CFDD F08A          	movff	postdec2,??_normalise_readings+5
  1835   00112C  5189               	movf	(??_normalise_readings+4)& (0+255),w,b
  1836   00112E  5D7F               	subwf	normalise_readings@blue_read& (0+255),w,b
  1837   001130  6E13               	movwf	abs@a^0,c
  1838   001132  518A               	movf	(??_normalise_readings+5)& (0+255),w,b
  1839   001134  5980               	subwfb	(normalise_readings@blue_read+1)& (0+255),w,b
  1840   001136  6E14               	movwf	(abs@a+1)^0,c
  1841   001138  EC46  F013         	call	_abs	;wreg free
  1842   00113C  C013  F095         	movff	?_abs,normalise_readings@differenceB
  1843   001140  C014  F096         	movff	?_abs+1,normalise_readings@differenceB+1
  1844                           
  1845                           ;colour_identify.c: 84:         unsigned int normalB = (differenceB*100) / expected_valu
      +                          es[i][BLUE];
  1846   001144  C095  F001         	movff	normalise_readings@differenceB,___wmul@multiplier
  1847   001148  C096  F002         	movff	normalise_readings@differenceB+1,___wmul@multiplier+1
  1848   00114C  0E00               	movlw	0
  1849   00114E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1850   001150  0E64               	movlw	100
  1851   001152  6E03               	movwf	___wmul@multiplicand^0,c
  1852   001154  ECC1  F013         	call	___wmul	;wreg free
  1853   001158  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1854   00115C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1855   001160  0100               	movlb	0	; () banked
  1856   001162  5197               	movf	normalise_readings@i& (0+255),w,b
  1857   001164  0D06               	mullw	6
  1858   001166  CFF3 F085          	movff	prodl,??_normalise_readings
  1859   00116A  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1860   00116E  5185               	movf	??_normalise_readings& (0+255),w,b
  1861   001170  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1862   001172  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1863   001174  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1864   001176  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1865   001178  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1866   00117A  0E04               	movlw	4
  1867   00117C  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1868   00117E  6ED9               	movwf	fsr2l,c
  1869   001180  0E00               	movlw	0
  1870   001182  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1871   001184  6EDA               	movwf	fsr2h,c
  1872   001186  CFDE F009          	movff	postinc2,___lwdiv@divisor
  1873   00118A  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  1874   00118E  ECDC  F011         	call	___lwdiv	;wreg free
  1875   001192  C007  F08F         	movff	?___lwdiv,normalise_readings@normalB
  1876   001196  C008  F090         	movff	?___lwdiv+1,normalise_readings@normalB+1
  1877   00119A                     
  1878                           ;colour_identify.c: 85:         sprintf(buf, "BLUE: Read %d, expected %d, difference %d,
      +                           normalised %d \n", blue_read, expected_values[i][BLUE], differenceB, normalB);
  1879   00119A  C079  F060         	movff	normalise_readings@buf,sprintf@s
  1880   00119E  C07A  F061         	movff	normalise_readings@buf+1,sprintf@s+1
  1881   0011A2  0E3D               	movlw	low STR_5
  1882   0011A4  0100               	movlb	0	; () banked
  1883   0011A6  6F62               	movwf	sprintf@fmt& (0+255),b
  1884   0011A8  0E0E               	movlw	high STR_5
  1885   0011AA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1886   0011AC  C07F  F064         	movff	normalise_readings@blue_read,?_sprintf+4
  1887   0011B0  C080  F065         	movff	normalise_readings@blue_read+1,?_sprintf+5
  1888   0011B4  5197               	movf	normalise_readings@i& (0+255),w,b
  1889   0011B6  0D06               	mullw	6
  1890   0011B8  CFF3 F085          	movff	prodl,??_normalise_readings
  1891   0011BC  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1892   0011C0  5185               	movf	??_normalise_readings& (0+255),w,b
  1893   0011C2  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1894   0011C4  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1895   0011C6  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1896   0011C8  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1897   0011CA  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1898   0011CC  0E04               	movlw	4
  1899   0011CE  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1900   0011D0  6ED9               	movwf	fsr2l,c
  1901   0011D2  0E00               	movlw	0
  1902   0011D4  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1903   0011D6  6EDA               	movwf	fsr2h,c
  1904   0011D8  CFDE F066          	movff	postinc2,?_sprintf+6
  1905   0011DC  CFDD F067          	movff	postdec2,?_sprintf+7
  1906   0011E0  C095  F068         	movff	normalise_readings@differenceB,?_sprintf+8
  1907   0011E4  C096  F069         	movff	normalise_readings@differenceB+1,?_sprintf+9
  1908   0011E8  C08F  F06A         	movff	normalise_readings@normalB,?_sprintf+10
  1909   0011EC  C090  F06B         	movff	normalise_readings@normalB+1,?_sprintf+11
  1910   0011F0  EC16  F012         	call	_sprintf	;wreg free
  1911   0011F4                     
  1912                           ;colour_identify.c: 86:         sendStringSerial4(buf);
  1913   0011F4  C079  F002         	movff	normalise_readings@buf,sendStringSerial4@string
  1914   0011F8  C07A  F003         	movff	normalise_readings@buf+1,sendStringSerial4@string+1
  1915   0011FC  EC80  F013         	call	_sendStringSerial4	;wreg free
  1916   001200                     
  1917                           ;colour_identify.c: 87:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1918   001200  0E52               	movlw	82
  1919   001202  0100               	movlb	0	; () banked
  1920   001204  6F86               	movwf	(??_normalise_readings+1)& (0+255),b
  1921   001206  0E2B               	movlw	43
  1922   001208  6F85               	movwf	??_normalise_readings& (0+255),b
  1923   00120A  0E00               	movlw	0
  1924   00120C                     u1647:
  1925   00120C  2EE8               	decfsz	wreg,f,c
  1926   00120E  D7FE               	bra	u1647
  1927   001210  2F85               	decfsz	??_normalise_readings& (0+255),f,b
  1928   001212  D7FC               	bra	u1647
  1929   001214  2F86               	decfsz	(??_normalise_readings+1)& (0+255),f,b
  1930   001216  D7FA               	bra	u1647
  1931   001218  F000               	nop	
  1932   00121A                     
  1933                           ;colour_identify.c: 88:     }
  1934   00121A  0100               	movlb	0	; () banked
  1935   00121C  2B97               	incf	normalise_readings@i& (0+255),f,b
  1936   00121E                     
  1937                           ; BSR set to: 0
  1938   00121E  0E02               	movlw	2
  1939   001220  6597               	cpfsgt	normalise_readings@i& (0+255),b
  1940   001222  EF15  F009         	goto	u1481
  1941   001226  EF17  F009         	goto	u1480
  1942   00122A                     u1481:
  1943   00122A  EF76  F007         	goto	l2685
  1944   00122E                     u1480:
  1945   00122E                     
  1946                           ; BSR set to: 0
  1947   00122E  0012               	return		;funcret
  1948   001230                     __end_of_normalise_readings:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _sprintf *****************
  1952 ;; Defined at:
  1953 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1956 ;;		 -> main@buf(20), 
  1957 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1958 ;;		 -> STR_5(59), STR_4(60), STR_3(58), STR_2(24), 
  1959 ;;		 -> STR_1(26), 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1962 ;;  ap              2   12[BANK0 ] PTR void [1]
  1963 ;;		 -> ?_sprintf(2), 
  1964 ;;  ret             2    0        int 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  2    0[BANK0 ] int 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1974 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1975 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1977 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;Total ram usage:       25 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; Hardware stack levels required when called: 7
  1981 ;; This function calls:
  1982 ;;		_vfprintf
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;;		_normalise_readings
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text3
  1990   00242C                     __ptext3:
  1991                           	callstack 0
  1992   00242C                     _sprintf:
  1993                           	callstack 23
  1994   00242C  0E64               	movlw	low (?_sprintf+4)
  1995   00242E  0100               	movlb	0	; () banked
  1996   002430  6F6C               	movwf	sprintf@ap& (0+255),b
  1997   002432  0E00               	movlw	high (?_sprintf+4)
  1998   002434  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1999   002436  C060  F06E         	movff	sprintf@s,sprintf@f
  2000   00243A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2001   00243E                     
  2002                           ; BSR set to: 0
  2003   00243E  0E00               	movlw	0
  2004   002440  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2005   002442  0E00               	movlw	0
  2006   002444  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2007   002446                     
  2008                           ; BSR set to: 0
  2009   002446  0E00               	movlw	0
  2010   002448  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2011   00244A  0E00               	movlw	0
  2012   00244C  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2013   00244E                     
  2014                           ; BSR set to: 0
  2015   00244E  0E6E               	movlw	low sprintf@f
  2016   002450  6E53               	movwf	vfprintf@fp^0,c
  2017   002452  0E00               	movlw	high sprintf@f
  2018   002454  6E54               	movwf	(vfprintf@fp+1)^0,c
  2019   002456  C062  F055         	movff	sprintf@fmt,vfprintf@fmt
  2020   00245A  C063  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2021   00245E  0E6C               	movlw	low sprintf@ap
  2022   002460  6E57               	movwf	vfprintf@ap^0,c
  2023   002462  0E00               	movlw	high sprintf@ap
  2024   002464  6E58               	movwf	(vfprintf@ap+1)^0,c
  2025   002466  EC3F  F012         	call	_vfprintf	;wreg free
  2026   00246A  0100               	movlb	0	; () banked
  2027   00246C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2028   00246E  2560               	addwf	sprintf@s& (0+255),w,b
  2029   002470  6ED9               	movwf	fsr2l,c
  2030   002472  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2031   002474  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2032   002476  6EDA               	movwf	fsr2h,c
  2033   002478  0E00               	movlw	0
  2034   00247A  6EDF               	movwf	indf2,c
  2035   00247C                     
  2036                           ; BSR set to: 0
  2037   00247C  0012               	return		;funcret
  2038   00247E                     __end_of_sprintf:
  2039                           	callstack 0
  2040                           
  2041 ;; *************** function _vfprintf *****************
  2042 ;; Defined at:
  2043 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  2046 ;;		 -> sprintf@f(11), 
  2047 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  2048 ;;		 -> STR_5(59), STR_4(60), STR_3(58), STR_2(24), 
  2049 ;;		 -> STR_1(26), 
  2050 ;;  ap              2   86[COMRAM] PTR PTR void 
  2051 ;;		 -> sprintf@ap(2), 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  2054 ;;		 -> STR_5(59), STR_4(60), STR_3(58), STR_2(24), 
  2055 ;;		 -> STR_1(26), 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  2   82[COMRAM] int 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2065 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2068 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2069 ;;Total ram usage:        8 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 6
  2072 ;; This function calls:
  2073 ;;		_vfpfcnvrt
  2074 ;; This function is called by:
  2075 ;;		_sprintf
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text4
  2080   00247E                     __ptext4:
  2081                           	callstack 0
  2082   00247E                     _vfprintf:
  2083                           	callstack 23
  2084   00247E                     
  2085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2086   00247E  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  2087   002482  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2090   002486  EF53  F012         	goto	l2417
  2091   00248A                     l2415:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2094   00248A  C053  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2095   00248E  C054  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2096   002492  0E59               	movlw	low vfprintf@cfmt
  2097   002494  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2098   002496  0E00               	movlw	high vfprintf@cfmt
  2099   002498  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2100   00249A  C057  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2101   00249E  C058  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2102   0024A2  EC57  F00A         	call	_vfpfcnvrt	;wreg free
  2103   0024A6                     l2417:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2106   0024A6  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  2107   0024AA  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2108   0024AE                     	if	0	;tblptru may be non-zero
  2109   0024AE                     	endif
  2110   0024AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2111   0024AE  0E00               	movlw	low (__mediumconst shr (0+16))
  2112   0024B0  6EF8               	movwf	tblptru,c
  2113   0024B2                     	endif
  2114   0024B2  0008               	tblrd		*
  2115   0024B4  50F5               	movf	tablat,w,c
  2116   0024B6  0900               	iorlw	0
  2117   0024B8  A4D8               	btfss	status,2,c
  2118   0024BA  EF61  F012         	goto	u1331
  2119   0024BE  EF63  F012         	goto	u1330
  2120   0024C2                     u1331:
  2121   0024C2  EF45  F012         	goto	l2415
  2122   0024C6                     u1330:
  2123   0024C6                     
  2124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2125   0024C6  0E00               	movlw	0
  2126   0024C8  6E54               	movwf	(?_vfprintf+1)^0,c
  2127   0024CA  0E00               	movlw	0
  2128   0024CC  6E53               	movwf	?_vfprintf^0,c
  2129   0024CE  0012               	return		;funcret
  2130   0024D0                     __end_of_vfprintf:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _vfpfcnvrt *****************
  2134 ;; Defined at:
  2135 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2138 ;;		 -> sprintf@f(11), 
  2139 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2140 ;;		 -> vfprintf@cfmt(2), 
  2141 ;;  ap              2   66[COMRAM] PTR PTR void 
  2142 ;;		 -> sprintf@ap(2), 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  convarg         8   72[COMRAM] struct .
  2145 ;;  cp              2   80[COMRAM] PTR unsigned char 
  2146 ;;		 -> STR_5(59), STR_4(60), STR_3(58), STR_2(24), 
  2147 ;;		 -> STR_1(26), 
  2148 ;;  i               2    0        int 
  2149 ;;  done            2    0        int 
  2150 ;;  c               1    0        unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2160 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2161 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2162 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2164 ;;Total ram usage:       20 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 5
  2167 ;; This function calls:
  2168 ;;		_dtoa
  2169 ;;		_fputc
  2170 ;;		_utoa
  2171 ;; This function is called by:
  2172 ;;		_vfprintf
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text5
  2177   0014AE                     __ptext5:
  2178                           	callstack 0
  2179   0014AE                     _vfpfcnvrt:
  2180                           	callstack 23
  2181   0014AE                     
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2183   0014AE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2184   0014B2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2185   0014B6  CFDE FFF6          	movff	postinc2,tblptrl
  2186   0014BA  CFDD FFF7          	movff	postdec2,tblptrh
  2187   0014BE                     	if	0	;tblptru may be non-zero
  2188   0014BE                     	endif
  2189   0014BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2190   0014BE  0E00               	movlw	low (__mediumconst shr (0+16))
  2191   0014C0  6EF8               	movwf	tblptru,c
  2192   0014C2                     	endif
  2193   0014C2  0008               	tblrd		*
  2194   0014C4  50F5               	movf	tablat,w,c
  2195   0014C6  0A25               	xorlw	37
  2196   0014C8  A4D8               	btfss	status,2,c
  2197   0014CA  EF69  F00A         	goto	u1261
  2198   0014CE  EF6B  F00A         	goto	u1260
  2199   0014D2                     u1261:
  2200   0014D2  EF5D  F00B         	goto	l2369
  2201   0014D6                     u1260:
  2202   0014D6                     
  2203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2204   0014D6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2205   0014DA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2206   0014DE  2ADE               	incf	postinc2,f,c
  2207   0014E0  0E00               	movlw	0
  2208   0014E2  22DD               	addwfc	postdec2,f,c
  2209   0014E4                     
  2210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2211   0014E4  0E00               	movlw	0
  2212   0014E6  0100               	movlb	0	; () banked
  2213   0014E8  6FEA               	movwf	(_width+1)& (0+255),b
  2214   0014EA  0E00               	movlw	0
  2215   0014EC  6FE9               	movwf	_width& (0+255),b
  2216   0014EE  C0E9  F0ED         	movff	_width,_flags
  2217   0014F2                     
  2218                           ; BSR set to: 0
  2219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2220   0014F2  69EB               	setf	_prec& (0+255),b
  2221   0014F4  69EC               	setf	(_prec+1)& (0+255),b
  2222   0014F6                     
  2223                           ; BSR set to: 0
  2224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2225   0014F6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2226   0014FA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2227   0014FE  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  2228   001502  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  2229   001506                     
  2230                           ; BSR set to: 0
  2231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2232   001506  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2233   00150A  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2234   00150E                     	if	0	;tblptru may be non-zero
  2235   00150E                     	endif
  2236   00150E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2237   00150E  0E00               	movlw	low (__mediumconst shr (0+16))
  2238   001510  6EF8               	movwf	tblptru,c
  2239   001512                     	endif
  2240   001512  0008               	tblrd		*
  2241   001514  50F5               	movf	tablat,w,c
  2242   001516  0A64               	xorlw	100
  2243   001518  B4D8               	btfsc	status,2,c
  2244   00151A  EF91  F00A         	goto	u1271
  2245   00151E  EF93  F00A         	goto	u1270
  2246   001522                     u1271:
  2247   001522  EFA3  F00A         	goto	l2347
  2248   001526                     u1270:
  2249   001526                     
  2250                           ; BSR set to: 0
  2251   001526  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2252   00152A  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2253   00152E                     	if	0	;tblptru may be non-zero
  2254   00152E                     	endif
  2255   00152E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2256   00152E  0E00               	movlw	low (__mediumconst shr (0+16))
  2257   001530  6EF8               	movwf	tblptru,c
  2258   001532                     	endif
  2259   001532  0008               	tblrd		*
  2260   001534  50F5               	movf	tablat,w,c
  2261   001536  0A69               	xorlw	105
  2262   001538  A4D8               	btfss	status,2,c
  2263   00153A  EFA1  F00A         	goto	u1281
  2264   00153E  EFA3  F00A         	goto	u1280
  2265   001542                     u1281:
  2266   001542  EFE6  F00A         	goto	l2353
  2267   001546                     u1280:
  2268   001546                     l2347:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2272   001546  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2273   00154A  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2274   00154E  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2275   001552  0E02               	movlw	2
  2276   001554  26DE               	addwf	postinc2,f,c
  2277   001556  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2278   00155A  0E00               	movlw	0
  2279   00155C  22DD               	addwfc	postdec2,f,c
  2280   00155E  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2281   001562  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2282   001566  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  2283   00156A  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  2284   00156E  0E00               	movlw	0
  2285   001570  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2286   001572  0EFF               	movlw	-1
  2287   001574  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2288   001576  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2289   001578  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2290   00157A  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2291   00157C  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2292   00157E  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2295   001580  0E01               	movlw	1
  2296   001582  2451               	addwf	vfpfcnvrt@cp^0,w,c
  2297   001584  6E45               	movwf	??_vfpfcnvrt^0,c
  2298   001586  0E00               	movlw	0
  2299   001588  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2300   00158A  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2301   00158C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2302   001590  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2303   001594  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2304   001598  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2305   00159C                     
  2306                           ; BSR set to: 0
  2307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2308   00159C  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2309   0015A0  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2310   0015A4  C049  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2311   0015A8  C04A  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2312   0015AC  C04B  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2313   0015B0  C04C  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2314   0015B4  C04D  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2315   0015B8  C04E  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2316   0015BC  C04F  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2317   0015C0  C050  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2318   0015C4  EC18  F009         	call	_dtoa	;wreg free
  2319   0015C8  EF73  F00B         	goto	l1162
  2320   0015CC                     l2353:
  2321                           
  2322                           ; BSR set to: 0
  2323   0015CC  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2324   0015D0  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2325   0015D4                     	if	0	;tblptru may be non-zero
  2326   0015D4                     	endif
  2327   0015D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2328   0015D4  0E00               	movlw	low (__mediumconst shr (0+16))
  2329   0015D6  6EF8               	movwf	tblptru,c
  2330   0015D8                     	endif
  2331   0015D8  0008               	tblrd		*
  2332   0015DA  50F5               	movf	tablat,w,c
  2333   0015DC  0A75               	xorlw	117
  2334   0015DE  A4D8               	btfss	status,2,c
  2335   0015E0  EFF4  F00A         	goto	u1291
  2336   0015E4  EFF6  F00A         	goto	u1290
  2337   0015E8                     u1291:
  2338   0015E8  EF54  F00B         	goto	l2365
  2339   0015EC                     u1290:
  2340   0015EC                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2343   0015EC  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2344   0015F0  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2345   0015F4  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2346   0015F8  0E02               	movlw	2
  2347   0015FA  26DE               	addwf	postinc2,f,c
  2348   0015FC  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2349   001600  0E00               	movlw	0
  2350   001602  22DD               	addwfc	postdec2,f,c
  2351   001604  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2352   001608  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2353   00160C  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  2354   001610  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  2355   001614  C047  F049         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2356   001618  C048  F04A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2357   00161C  6A4B               	clrf	(vfpfcnvrt@convarg+2)^0,c
  2358   00161E  6A4C               	clrf	(vfpfcnvrt@convarg+3)^0,c
  2359   001620  6A4D               	clrf	(vfpfcnvrt@convarg+4)^0,c
  2360   001622  6A4E               	clrf	(vfpfcnvrt@convarg+5)^0,c
  2361   001624  6A4F               	clrf	(vfpfcnvrt@convarg+6)^0,c
  2362   001626  6A50               	clrf	(vfpfcnvrt@convarg+7)^0,c
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2365   001628  0E01               	movlw	1
  2366   00162A  2451               	addwf	vfpfcnvrt@cp^0,w,c
  2367   00162C  6E45               	movwf	??_vfpfcnvrt^0,c
  2368   00162E  0E00               	movlw	0
  2369   001630  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2370   001632  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2371   001634  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2372   001638  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2373   00163C  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2374   001640  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2377   001644  EF3C  F00B         	goto	l2363
  2378   001648                     l2357:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2382   001648  C03F  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2383   00164C  C040  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2384   001650  C049  F01E         	movff	vfpfcnvrt@convarg,utoa@d
  2385   001654  C04A  F01F         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2386   001658  C04B  F020         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  2387   00165C  C04C  F021         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  2388   001660  C04D  F022         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  2389   001664  C04E  F023         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  2390   001668  C04F  F024         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  2391   00166C  C050  F025         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  2392   001670  EC63  F00C         	call	_utoa	;wreg free
  2393   001674  EF73  F00B         	goto	l1162
  2394   001678                     l2363:
  2395                           
  2396                           ; BSR set to: 0
  2397   001678  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2398   00167C  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2399   001680                     	if	0	;tblptru may be non-zero
  2400   001680                     	endif
  2401   001680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2402   001680  0E00               	movlw	low (__mediumconst shr (0+16))
  2403   001682  6EF8               	movwf	tblptru,c
  2404   001684                     	endif
  2405   001684  0008               	tblrd		*
  2406   001686  50F5               	movf	tablat,w,c
  2407   001688  6E45               	movwf	??_vfpfcnvrt^0,c
  2408   00168A  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  2409                           
  2410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2411                           ; Switch size 1, requested type "simple"
  2412                           ; Number of cases is 1, Range of values is 0 to 0
  2413                           ; switch strategies available:
  2414                           ; Name         Instructions Cycles
  2415                           ; simple_byte            4     3 (average)
  2416                           ;	Chosen strategy is simple_byte
  2417   00168C  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  2418   00168E  0A00               	xorlw	0	; case 0
  2419   001690  B4D8               	btfsc	status,2,c
  2420   001692  EF4D  F00B         	goto	l2947
  2421   001696  EF54  F00B         	goto	l2365
  2422   00169A                     l2947:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ; Switch size 1, requested type "simple"
  2426                           ; Number of cases is 1, Range of values is 117 to 117
  2427                           ; switch strategies available:
  2428                           ; Name         Instructions Cycles
  2429                           ; simple_byte            4     3 (average)
  2430                           ;	Chosen strategy is simple_byte
  2431   00169A  5045               	movf	??_vfpfcnvrt^0,w,c
  2432   00169C  0A75               	xorlw	117	; case 117
  2433   00169E  B4D8               	btfsc	status,2,c
  2434   0016A0  EF24  F00B         	goto	l2357
  2435   0016A4  EF54  F00B         	goto	l2365
  2436   0016A8                     l2365:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2439   0016A8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2440   0016AC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2441   0016B0  2ADE               	incf	postinc2,f,c
  2442   0016B2  0E00               	movlw	0
  2443   0016B4  22DD               	addwfc	postdec2,f,c
  2444   0016B6  EF73  F00B         	goto	l1162
  2445   0016BA                     l2369:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2448   0016BA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2449   0016BE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2450   0016C2  CFDE FFF6          	movff	postinc2,tblptrl
  2451   0016C6  CFDD FFF7          	movff	postdec2,tblptrh
  2452   0016CA                     	if	0	;tblptru may be non-zero
  2453   0016CA                     	endif
  2454   0016CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2455   0016CA  0E00               	movlw	low (__mediumconst shr (0+16))
  2456   0016CC  6EF8               	movwf	tblptru,c
  2457   0016CE                     	endif
  2458   0016CE  0008               	tblrd		*
  2459   0016D0  50F5               	movf	tablat,w,c
  2460   0016D2  6E01               	movwf	fputc@c^0,c
  2461   0016D4  6A02               	clrf	(fputc@c+1)^0,c
  2462   0016D6  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2463   0016DA  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2464   0016DE  ECF6  F010         	call	_fputc	;wreg free
  2465   0016E2  EF54  F00B         	goto	l2365
  2466   0016E6                     l1162:
  2467   0016E6  0012               	return		;funcret
  2468   0016E8                     __end_of_vfpfcnvrt:
  2469                           	callstack 0
  2470                           
  2471 ;; *************** function _utoa *****************
  2472 ;; Defined at:
  2473 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2476 ;;		 -> sprintf@f(11), 
  2477 ;;  d               8   29[COMRAM] unsigned long long 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  n               8   49[COMRAM] unsigned long long 
  2480 ;;  i               2   57[COMRAM] int 
  2481 ;;  p               2   47[COMRAM] int 
  2482 ;;  w               2   45[COMRAM] int 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2492 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;Total ram usage:       32 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 4
  2499 ;; This function calls:
  2500 ;;		___lodiv
  2501 ;;		___lomod
  2502 ;;		_pad
  2503 ;; This function is called by:
  2504 ;;		_vfpfcnvrt
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text6
  2509   0018C6                     __ptext6:
  2510                           	callstack 0
  2511   0018C6                     _utoa:
  2512                           	callstack 23
  2513   0018C6                     
  2514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  2515   0018C6  0100               	movlb	0	; () banked
  2516   0018C8  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  2517   0018CA  EF71  F00C         	goto	u1200
  2518   0018CE  51EC               	movf	(_prec+1)& (0+255),w,b
  2519   0018D0  E106               	bnz	u1201
  2520   0018D2  05EB               	decf	_prec& (0+255),w,b
  2521   0018D4  B0D8               	btfsc	status,0,c
  2522   0018D6  EF6F  F00C         	goto	u1201
  2523   0018DA  EF71  F00C         	goto	u1200
  2524   0018DE                     u1201:
  2525   0018DE  EF77  F00C         	goto	l1147
  2526   0018E2                     u1200:
  2527   0018E2                     
  2528                           ; BSR set to: 0
  2529   0018E2  0E00               	movlw	0
  2530   0018E4  6E31               	movwf	(utoa@p+1)^0,c
  2531   0018E6  0E01               	movlw	1
  2532   0018E8  6E30               	movwf	utoa@p^0,c
  2533   0018EA  EF7B  F00C         	goto	l1149
  2534   0018EE                     l1147:
  2535                           
  2536                           ; BSR set to: 0
  2537   0018EE  C0EB  F030         	movff	_prec,utoa@p
  2538   0018F2  C0EC  F031         	movff	_prec+1,utoa@p+1
  2539   0018F6                     l1149:
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  2543   0018F6  C0E9  F02E         	movff	_width,utoa@w
  2544   0018FA  C0EA  F02F         	movff	_width+1,utoa@w+1
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  2547   0018FE  C01E  F032         	movff	utoa@d,utoa@n
  2548   001902  C01F  F033         	movff	utoa@d+1,utoa@n+1
  2549   001906  C020  F034         	movff	utoa@d+2,utoa@n+2
  2550   00190A  C021  F035         	movff	utoa@d+3,utoa@n+3
  2551   00190E  C022  F036         	movff	utoa@d+4,utoa@n+4
  2552   001912  C023  F037         	movff	utoa@d+5,utoa@n+5
  2553   001916  C024  F038         	movff	utoa@d+6,utoa@n+6
  2554   00191A  C025  F039         	movff	utoa@d+7,utoa@n+7
  2555   00191E                     
  2556                           ; BSR set to: 0
  2557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  2558   00191E  0E00               	movlw	0
  2559   001920  6E3B               	movwf	(utoa@i+1)^0,c
  2560   001922  0E1F               	movlw	31
  2561   001924  6E3A               	movwf	utoa@i^0,c
  2562   001926                     
  2563                           ; BSR set to: 0
  2564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  2565   001926  0E00               	movlw	0
  2566   001928  0101               	movlb	1	; () banked
  2567   00192A  6F6F               	movwf	(_dbuf+31)& (0+255),b
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2570   00192C  EF0E  F00D         	goto	l2319
  2571   001930                     l2309:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  2574   001930  063A               	decf	utoa@i^0,f,c
  2575   001932  A0D8               	btfss	status,0,c
  2576   001934  063B               	decf	(utoa@i+1)^0,f,c
  2577   001936                     
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  2579   001936  0E50               	movlw	low _dbuf
  2580   001938  243A               	addwf	utoa@i^0,w,c
  2581   00193A  6ED9               	movwf	fsr2l,c
  2582   00193C  0E01               	movlw	high _dbuf
  2583   00193E  203B               	addwfc	(utoa@i+1)^0,w,c
  2584   001940  6EDA               	movwf	fsr2h,c
  2585   001942  C032  F001         	movff	utoa@n,___lomod@dividend
  2586   001946  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  2587   00194A  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  2588   00194E  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  2589   001952  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  2590   001956  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  2591   00195A  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  2592   00195E  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  2593   001962  0E0A               	movlw	10
  2594   001964  6E09               	movwf	___lomod@divisor^0,c
  2595   001966  0E00               	movlw	0
  2596   001968  6E0A               	movwf	(___lomod@divisor+1)^0,c
  2597   00196A  0E00               	movlw	0
  2598   00196C  6E0B               	movwf	(___lomod@divisor+2)^0,c
  2599   00196E  0E00               	movlw	0
  2600   001970  6E0C               	movwf	(___lomod@divisor+3)^0,c
  2601   001972  0E00               	movlw	0
  2602   001974  6E0D               	movwf	(___lomod@divisor+4)^0,c
  2603   001976  0E00               	movlw	0
  2604   001978  6E0E               	movwf	(___lomod@divisor+5)^0,c
  2605   00197A  0E00               	movlw	0
  2606   00197C  6E0F               	movwf	(___lomod@divisor+6)^0,c
  2607   00197E  0E00               	movlw	0
  2608   001980  6E10               	movwf	(___lomod@divisor+7)^0,c
  2609   001982  EC8E  F010         	call	___lomod	;wreg free
  2610   001986  C001  F026         	movff	?___lomod,??_utoa
  2611   00198A  C002  F027         	movff	?___lomod+1,??_utoa+1
  2612   00198E  C003  F028         	movff	?___lomod+2,??_utoa+2
  2613   001992  C004  F029         	movff	?___lomod+3,??_utoa+3
  2614   001996  C005  F02A         	movff	?___lomod+4,??_utoa+4
  2615   00199A  C006  F02B         	movff	?___lomod+5,??_utoa+5
  2616   00199E  C007  F02C         	movff	?___lomod+6,??_utoa+6
  2617   0019A2  C008  F02D         	movff	?___lomod+7,??_utoa+7
  2618   0019A6  5026               	movf	??_utoa^0,w,c
  2619   0019A8  0F30               	addlw	48
  2620   0019AA  6EDF               	movwf	indf2,c
  2621   0019AC                     
  2622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  2623   0019AC  0630               	decf	utoa@p^0,f,c
  2624   0019AE  A0D8               	btfss	status,0,c
  2625   0019B0  0631               	decf	(utoa@p+1)^0,f,c
  2626   0019B2                     
  2627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  2628   0019B2  062E               	decf	utoa@w^0,f,c
  2629   0019B4  A0D8               	btfss	status,0,c
  2630   0019B6  062F               	decf	(utoa@w+1)^0,f,c
  2631   0019B8                     
  2632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  2633   0019B8  C032  F001         	movff	utoa@n,___lodiv@dividend
  2634   0019BC  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  2635   0019C0  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  2636   0019C4  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  2637   0019C8  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  2638   0019CC  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  2639   0019D0  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  2640   0019D4  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  2641   0019D8  0E0A               	movlw	10
  2642   0019DA  6E09               	movwf	___lodiv@divisor^0,c
  2643   0019DC  0E00               	movlw	0
  2644   0019DE  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  2645   0019E0  0E00               	movlw	0
  2646   0019E2  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  2647   0019E4  0E00               	movlw	0
  2648   0019E6  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  2649   0019E8  0E00               	movlw	0
  2650   0019EA  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  2651   0019EC  0E00               	movlw	0
  2652   0019EE  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  2653   0019F0  0E00               	movlw	0
  2654   0019F2  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  2655   0019F4  0E00               	movlw	0
  2656   0019F6  6E10               	movwf	(___lodiv@divisor+7)^0,c
  2657   0019F8  EC16  F010         	call	___lodiv	;wreg free
  2658   0019FC  C001  F032         	movff	?___lodiv,utoa@n
  2659   001A00  C002  F033         	movff	?___lodiv+1,utoa@n+1
  2660   001A04  C003  F034         	movff	?___lodiv+2,utoa@n+2
  2661   001A08  C004  F035         	movff	?___lodiv+3,utoa@n+3
  2662   001A0C  C005  F036         	movff	?___lodiv+4,utoa@n+4
  2663   001A10  C006  F037         	movff	?___lodiv+5,utoa@n+5
  2664   001A14  C007  F038         	movff	?___lodiv+6,utoa@n+6
  2665   001A18  C008  F039         	movff	?___lodiv+7,utoa@n+7
  2666   001A1C                     l2319:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2669   001A1C  503A               	movf	utoa@i^0,w,c
  2670   001A1E  103B               	iorwf	(utoa@i+1)^0,w,c
  2671   001A20  B4D8               	btfsc	status,2,c
  2672   001A22  EF15  F00D         	goto	u1211
  2673   001A26  EF17  F00D         	goto	u1210
  2674   001A2A                     u1211:
  2675   001A2A  EF33  F00D         	goto	l2325
  2676   001A2E                     u1210:
  2677   001A2E  5032               	movf	utoa@n^0,w,c
  2678   001A30  1033               	iorwf	(utoa@n+1)^0,w,c
  2679   001A32  1034               	iorwf	(utoa@n+2)^0,w,c
  2680   001A34  1035               	iorwf	(utoa@n+3)^0,w,c
  2681   001A36  1036               	iorwf	(utoa@n+4)^0,w,c
  2682   001A38  1037               	iorwf	(utoa@n+5)^0,w,c
  2683   001A3A  1038               	iorwf	(utoa@n+6)^0,w,c
  2684   001A3C  1039               	iorwf	(utoa@n+7)^0,w,c
  2685   001A3E  A4D8               	btfss	status,2,c
  2686   001A40  EF24  F00D         	goto	u1221
  2687   001A44  EF26  F00D         	goto	u1220
  2688   001A48                     u1221:
  2689   001A48  EF98  F00C         	goto	l2309
  2690   001A4C                     u1220:
  2691   001A4C  BE31               	btfsc	(utoa@p+1)^0,7,c
  2692   001A4E  EF33  F00D         	goto	u1230
  2693   001A52  5031               	movf	(utoa@p+1)^0,w,c
  2694   001A54  E106               	bnz	u1231
  2695   001A56  0430               	decf	utoa@p^0,w,c
  2696   001A58  B0D8               	btfsc	status,0,c
  2697   001A5A  EF31  F00D         	goto	u1231
  2698   001A5E  EF33  F00D         	goto	u1230
  2699   001A62                     u1231:
  2700   001A62  EF98  F00C         	goto	l2309
  2701   001A66                     u1230:
  2702   001A66                     l2325:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2705   001A66  C01C  F011         	movff	utoa@fp,pad@fp
  2706   001A6A  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  2707   001A6E  0E50               	movlw	low _dbuf
  2708   001A70  243A               	addwf	utoa@i^0,w,c
  2709   001A72  6E13               	movwf	pad@buf^0,c
  2710   001A74  0E01               	movlw	high _dbuf
  2711   001A76  203B               	addwfc	(utoa@i+1)^0,w,c
  2712   001A78  6E14               	movwf	(pad@buf+1)^0,c
  2713   001A7A  C02E  F015         	movff	utoa@w,pad@p
  2714   001A7E  C02F  F016         	movff	utoa@w+1,pad@p+1
  2715   001A82  EC9F  F011         	call	_pad	;wreg free
  2716   001A86  0012               	return		;funcret
  2717   001A88                     __end_of_utoa:
  2718                           	callstack 0
  2719                           
  2720 ;; *************** function ___lomod *****************
  2721 ;; Defined at:
  2722 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  dividend        8    0[COMRAM] unsigned long long 
  2725 ;;  divisor         8    8[COMRAM] unsigned long long 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  counter         1   16[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  8    0[COMRAM] unsigned long long 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2737 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2740 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2741 ;;Total ram usage:       17 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_utoa
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text7
  2751   00211C                     __ptext7:
  2752                           	callstack 0
  2753   00211C                     ___lomod:
  2754                           	callstack 26
  2755   00211C  5009               	movf	___lomod@divisor^0,w,c
  2756   00211E  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2757   002120  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2758   002122  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2759   002124  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2760   002126  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2761   002128  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2762   00212A  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2763   00212C  B4D8               	btfsc	status,2,c
  2764   00212E  EF9B  F010         	goto	u1051
  2765   002132  EF9D  F010         	goto	u1050
  2766   002136                     u1051:
  2767   002136  EFE5  F010         	goto	l861
  2768   00213A                     u1050:
  2769   00213A  0E01               	movlw	1
  2770   00213C  6E11               	movwf	___lomod@counter^0,c
  2771   00213E  EFAB  F010         	goto	l2225
  2772   002142                     l2223:
  2773   002142  90D8               	bcf	status,0,c
  2774   002144  3609               	rlcf	___lomod@divisor^0,f,c
  2775   002146  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2776   002148  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2777   00214A  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2778   00214C  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2779   00214E  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2780   002150  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2781   002152  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2782   002154  2A11               	incf	___lomod@counter^0,f,c
  2783   002156                     l2225:
  2784   002156  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2785   002158  EFB0  F010         	goto	u1061
  2786   00215C  EFB2  F010         	goto	u1060
  2787   002160                     u1061:
  2788   002160  EFA1  F010         	goto	l2223
  2789   002164                     u1060:
  2790   002164                     l2227:
  2791   002164  5009               	movf	___lomod@divisor^0,w,c
  2792   002166  5C01               	subwf	___lomod@dividend^0,w,c
  2793   002168  500A               	movf	(___lomod@divisor+1)^0,w,c
  2794   00216A  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2795   00216C  500B               	movf	(___lomod@divisor+2)^0,w,c
  2796   00216E  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2797   002170  500C               	movf	(___lomod@divisor+3)^0,w,c
  2798   002172  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2799   002174  500D               	movf	(___lomod@divisor+4)^0,w,c
  2800   002176  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2801   002178  500E               	movf	(___lomod@divisor+5)^0,w,c
  2802   00217A  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2803   00217C  500F               	movf	(___lomod@divisor+6)^0,w,c
  2804   00217E  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2805   002180  5010               	movf	(___lomod@divisor+7)^0,w,c
  2806   002182  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2807   002184  A0D8               	btfss	status,0,c
  2808   002186  EFC7  F010         	goto	u1071
  2809   00218A  EFC9  F010         	goto	u1070
  2810   00218E                     u1071:
  2811   00218E  EFD9  F010         	goto	l2231
  2812   002192                     u1070:
  2813   002192  5009               	movf	___lomod@divisor^0,w,c
  2814   002194  5E01               	subwf	___lomod@dividend^0,f,c
  2815   002196  500A               	movf	(___lomod@divisor+1)^0,w,c
  2816   002198  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2817   00219A  500B               	movf	(___lomod@divisor+2)^0,w,c
  2818   00219C  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2819   00219E  500C               	movf	(___lomod@divisor+3)^0,w,c
  2820   0021A0  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2821   0021A2  500D               	movf	(___lomod@divisor+4)^0,w,c
  2822   0021A4  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2823   0021A6  500E               	movf	(___lomod@divisor+5)^0,w,c
  2824   0021A8  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2825   0021AA  500F               	movf	(___lomod@divisor+6)^0,w,c
  2826   0021AC  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2827   0021AE  5010               	movf	(___lomod@divisor+7)^0,w,c
  2828   0021B0  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2829   0021B2                     l2231:
  2830   0021B2  90D8               	bcf	status,0,c
  2831   0021B4  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2832   0021B6  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2833   0021B8  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2834   0021BA  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2835   0021BC  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2836   0021BE  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2837   0021C0  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2838   0021C2  3209               	rrcf	___lomod@divisor^0,f,c
  2839   0021C4  2E11               	decfsz	___lomod@counter^0,f,c
  2840   0021C6  EFB2  F010         	goto	l2227
  2841   0021CA                     l861:
  2842   0021CA  C001  F001         	movff	___lomod@dividend,?___lomod
  2843   0021CE  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2844   0021D2  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2845   0021D6  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2846   0021DA  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2847   0021DE  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2848   0021E2  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2849   0021E6  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2850   0021EA  0012               	return		;funcret
  2851   0021EC                     __end_of___lomod:
  2852                           	callstack 0
  2853                           
  2854 ;; *************** function ___lodiv *****************
  2855 ;; Defined at:
  2856 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  dividend        8    0[COMRAM] unsigned long long 
  2859 ;;  divisor         8    8[COMRAM] unsigned long long 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  quotient        8   16[COMRAM] unsigned long long 
  2862 ;;  counter         1   24[COMRAM] unsigned char 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  8    0[COMRAM] unsigned long long 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2872 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;Total ram usage:       25 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_utoa
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text8
  2886   00202C                     __ptext8:
  2887                           	callstack 0
  2888   00202C                     ___lodiv:
  2889                           	callstack 26
  2890   00202C  EE20  F011         	lfsr	2,___lodiv@quotient
  2891   002030  0E07               	movlw	7
  2892   002032                     u1011:
  2893   002032  6ADE               	clrf	postinc2,c
  2894   002034  06E8               	decf	wreg,f,c
  2895   002036  E2FD               	bc	u1011
  2896   002038  5009               	movf	___lodiv@divisor^0,w,c
  2897   00203A  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2898   00203C  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2899   00203E  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2900   002040  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2901   002042  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2902   002044  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2903   002046  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2904   002048  B4D8               	btfsc	status,2,c
  2905   00204A  EF29  F010         	goto	u1021
  2906   00204E  EF2B  F010         	goto	u1020
  2907   002052                     u1021:
  2908   002052  EF7D  F010         	goto	l851
  2909   002056                     u1020:
  2910   002056  0E01               	movlw	1
  2911   002058  6E19               	movwf	___lodiv@counter^0,c
  2912   00205A  EF39  F010         	goto	l2205
  2913   00205E                     l2203:
  2914   00205E  90D8               	bcf	status,0,c
  2915   002060  3609               	rlcf	___lodiv@divisor^0,f,c
  2916   002062  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2917   002064  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2918   002066  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2919   002068  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2920   00206A  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2921   00206C  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2922   00206E  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2923   002070  2A19               	incf	___lodiv@counter^0,f,c
  2924   002072                     l2205:
  2925   002072  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2926   002074  EF3E  F010         	goto	u1031
  2927   002078  EF40  F010         	goto	u1030
  2928   00207C                     u1031:
  2929   00207C  EF2F  F010         	goto	l2203
  2930   002080                     u1030:
  2931   002080                     l2207:
  2932   002080  90D8               	bcf	status,0,c
  2933   002082  3611               	rlcf	___lodiv@quotient^0,f,c
  2934   002084  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2935   002086  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2936   002088  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2937   00208A  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2938   00208C  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2939   00208E  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2940   002090  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2941   002092  5009               	movf	___lodiv@divisor^0,w,c
  2942   002094  5C01               	subwf	___lodiv@dividend^0,w,c
  2943   002096  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2944   002098  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2945   00209A  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2946   00209C  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2947   00209E  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2948   0020A0  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2949   0020A2  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2950   0020A4  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2951   0020A6  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2952   0020A8  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2953   0020AA  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2954   0020AC  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2955   0020AE  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2956   0020B0  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2957   0020B2  A0D8               	btfss	status,0,c
  2958   0020B4  EF5E  F010         	goto	u1041
  2959   0020B8  EF60  F010         	goto	u1040
  2960   0020BC                     u1041:
  2961   0020BC  EF71  F010         	goto	l2215
  2962   0020C0                     u1040:
  2963   0020C0  5009               	movf	___lodiv@divisor^0,w,c
  2964   0020C2  5E01               	subwf	___lodiv@dividend^0,f,c
  2965   0020C4  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2966   0020C6  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2967   0020C8  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2968   0020CA  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2969   0020CC  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2970   0020CE  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2971   0020D0  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2972   0020D2  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2973   0020D4  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2974   0020D6  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2975   0020D8  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2976   0020DA  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2977   0020DC  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2978   0020DE  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2979   0020E0  8011               	bsf	___lodiv@quotient^0,0,c
  2980   0020E2                     l2215:
  2981   0020E2  90D8               	bcf	status,0,c
  2982   0020E4  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2983   0020E6  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2984   0020E8  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2985   0020EA  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2986   0020EC  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2987   0020EE  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2988   0020F0  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2989   0020F2  3209               	rrcf	___lodiv@divisor^0,f,c
  2990   0020F4  2E19               	decfsz	___lodiv@counter^0,f,c
  2991   0020F6  EF40  F010         	goto	l2207
  2992   0020FA                     l851:
  2993   0020FA  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2994   0020FE  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2995   002102  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2996   002106  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2997   00210A  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2998   00210E  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2999   002112  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  3000   002116  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  3001   00211A  0012               	return		;funcret
  3002   00211C                     __end_of___lodiv:
  3003                           	callstack 0
  3004                           
  3005 ;; *************** function _dtoa *****************
  3006 ;; Defined at:
  3007 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3010 ;;		 -> sprintf@f(11), 
  3011 ;;  d               8   29[COMRAM] long long 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  n               8   51[COMRAM] long long 
  3014 ;;  i               2   59[COMRAM] int 
  3015 ;;  w               2   49[COMRAM] int 
  3016 ;;  p               2   47[COMRAM] int 
  3017 ;;  s               1   61[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3027 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;Total ram usage:       35 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 4
  3034 ;; This function calls:
  3035 ;;		___aodiv
  3036 ;;		___aomod
  3037 ;;		_abs
  3038 ;;		_pad
  3039 ;; This function is called by:
  3040 ;;		_vfpfcnvrt
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text9
  3045   001230                     __ptext9:
  3046                           	callstack 0
  3047   001230                     _dtoa:
  3048                           	callstack 23
  3049   001230                     
  3050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3051   001230  C01E  F034         	movff	dtoa@d,dtoa@n
  3052   001234  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  3053   001238  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  3054   00123C  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  3055   001240  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  3056   001244  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  3057   001248  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  3058   00124C  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  3059   001250                     
  3060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3061   001250  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  3062   001252  EF2D  F009         	goto	u1101
  3063   001256  EF30  F009         	goto	u1100
  3064   00125A                     u1101:
  3065   00125A  0E01               	movlw	1
  3066   00125C  EF31  F009         	goto	u1110
  3067   001260                     u1100:
  3068   001260  0E00               	movlw	0
  3069   001262                     u1110:
  3070   001262  6E3E               	movwf	dtoa@s^0,c
  3071   001264                     
  3072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3073   001264  503E               	movf	dtoa@s^0,w,c
  3074   001266  B4D8               	btfsc	status,2,c
  3075   001268  EF38  F009         	goto	u1121
  3076   00126C  EF3A  F009         	goto	u1120
  3077   001270                     u1121:
  3078   001270  EF4A  F009         	goto	l2257
  3079   001274                     u1120:
  3080   001274                     
  3081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3082   001274  1E3B               	comf	(dtoa@n+7)^0,f,c
  3083   001276  1E3A               	comf	(dtoa@n+6)^0,f,c
  3084   001278  1E39               	comf	(dtoa@n+5)^0,f,c
  3085   00127A  1E38               	comf	(dtoa@n+4)^0,f,c
  3086   00127C  1E37               	comf	(dtoa@n+3)^0,f,c
  3087   00127E  1E36               	comf	(dtoa@n+2)^0,f,c
  3088   001280  1E35               	comf	(dtoa@n+1)^0,f,c
  3089   001282  6C34               	negf	dtoa@n^0,c
  3090   001284  0E00               	movlw	0
  3091   001286  2235               	addwfc	(dtoa@n+1)^0,f,c
  3092   001288  2236               	addwfc	(dtoa@n+2)^0,f,c
  3093   00128A  2237               	addwfc	(dtoa@n+3)^0,f,c
  3094   00128C  2238               	addwfc	(dtoa@n+4)^0,f,c
  3095   00128E  2239               	addwfc	(dtoa@n+5)^0,f,c
  3096   001290  223A               	addwfc	(dtoa@n+6)^0,f,c
  3097   001292  223B               	addwfc	(dtoa@n+7)^0,f,c
  3098   001294                     l2257:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3101   001294  0100               	movlb	0	; () banked
  3102   001296  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  3103   001298  EF58  F009         	goto	u1130
  3104   00129C  51EC               	movf	(_prec+1)& (0+255),w,b
  3105   00129E  E106               	bnz	u1131
  3106   0012A0  05EB               	decf	_prec& (0+255),w,b
  3107   0012A2  B0D8               	btfsc	status,0,c
  3108   0012A4  EF56  F009         	goto	u1131
  3109   0012A8  EF58  F009         	goto	u1130
  3110   0012AC                     u1131:
  3111   0012AC  EF5E  F009         	goto	l1129
  3112   0012B0                     u1130:
  3113   0012B0                     
  3114                           ; BSR set to: 0
  3115   0012B0  0E00               	movlw	0
  3116   0012B2  6E31               	movwf	(dtoa@p+1)^0,c
  3117   0012B4  0E01               	movlw	1
  3118   0012B6  6E30               	movwf	dtoa@p^0,c
  3119   0012B8  EF62  F009         	goto	l1131
  3120   0012BC                     l1129:
  3121                           
  3122                           ; BSR set to: 0
  3123   0012BC  C0EB  F030         	movff	_prec,dtoa@p
  3124   0012C0  C0EC  F031         	movff	_prec+1,dtoa@p+1
  3125   0012C4                     l1131:
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3129   0012C4  C0E9  F032         	movff	_width,dtoa@w
  3130   0012C8  C0EA  F033         	movff	_width+1,dtoa@w+1
  3131   0012CC                     
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3134   0012CC  503E               	movf	dtoa@s^0,w,c
  3135   0012CE  B4D8               	btfsc	status,2,c
  3136   0012D0  EF6C  F009         	goto	u1141
  3137   0012D4  EF6E  F009         	goto	u1140
  3138   0012D8                     u1141:
  3139   0012D8  EF85  F009         	goto	l1132
  3140   0012DC                     u1140:
  3141   0012DC                     
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3144   0012DC  0632               	decf	dtoa@w^0,f,c
  3145   0012DE  A0D8               	btfss	status,0,c
  3146   0012E0  0633               	decf	(dtoa@w+1)^0,f,c
  3147   0012E2                     
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3150   0012E2  503E               	movf	dtoa@s^0,w,c
  3151   0012E4  A4D8               	btfss	status,2,c
  3152   0012E6  EF77  F009         	goto	u1151
  3153   0012EA  EF79  F009         	goto	u1150
  3154   0012EE                     u1151:
  3155   0012EE  EF7F  F009         	goto	l2269
  3156   0012F2                     u1150:
  3157   0012F2                     
  3158                           ; BSR set to: 0
  3159   0012F2  0E00               	movlw	0
  3160   0012F4  6E2F               	movwf	(_dtoa$2197+1)^0,c
  3161   0012F6  0E2B               	movlw	43
  3162   0012F8  6E2E               	movwf	_dtoa$2197^0,c
  3163   0012FA  EF83  F009         	goto	l2271
  3164   0012FE                     l2269:
  3165                           
  3166                           ; BSR set to: 0
  3167   0012FE  0E00               	movlw	0
  3168   001300  6E2F               	movwf	(_dtoa$2197+1)^0,c
  3169   001302  0E2D               	movlw	45
  3170   001304  6E2E               	movwf	_dtoa$2197^0,c
  3171   001306                     l2271:
  3172                           
  3173                           ; BSR set to: 0
  3174   001306  C02E  F03E         	movff	_dtoa$2197,dtoa@s
  3175   00130A                     l1132:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3179   00130A  0E00               	movlw	0
  3180   00130C  6E3D               	movwf	(dtoa@i+1)^0,c
  3181   00130E  0E1F               	movlw	31
  3182   001310  6E3C               	movwf	dtoa@i^0,c
  3183   001312                     
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3186   001312  0E00               	movlw	0
  3187   001314  0101               	movlb	1	; () banked
  3188   001316  6F6F               	movwf	(_dbuf+31)& (0+255),b
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3191   001318  EF0A  F00A         	goto	l2285
  3192   00131C                     l2275:
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3195   00131C  063C               	decf	dtoa@i^0,f,c
  3196   00131E  A0D8               	btfss	status,0,c
  3197   001320  063D               	decf	(dtoa@i+1)^0,f,c
  3198   001322                     
  3199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3200   001322  0E50               	movlw	low _dbuf
  3201   001324  243C               	addwf	dtoa@i^0,w,c
  3202   001326  6ED9               	movwf	fsr2l,c
  3203   001328  0E01               	movlw	high _dbuf
  3204   00132A  203D               	addwfc	(dtoa@i+1)^0,w,c
  3205   00132C  6EDA               	movwf	fsr2h,c
  3206   00132E  C034  F001         	movff	dtoa@n,___aomod@dividend
  3207   001332  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3208   001336  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3209   00133A  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3210   00133E  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3211   001342  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3212   001346  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3213   00134A  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3214   00134E  0E0A               	movlw	10
  3215   001350  6E09               	movwf	___aomod@divisor^0,c
  3216   001352  0E00               	movlw	0
  3217   001354  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3218   001356  0E00               	movlw	0
  3219   001358  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3220   00135A  0E00               	movlw	0
  3221   00135C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3222   00135E  0E00               	movlw	0
  3223   001360  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3224   001362  0E00               	movlw	0
  3225   001364  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3226   001366  0E00               	movlw	0
  3227   001368  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3228   00136A  0E00               	movlw	0
  3229   00136C  6E10               	movwf	(___aomod@divisor+7)^0,c
  3230   00136E  ECBE  F00E         	call	___aomod	;wreg free
  3231   001372  C001  F026         	movff	?___aomod,??_dtoa
  3232   001376  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3233   00137A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3234   00137E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3235   001382  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3236   001386  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3237   00138A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3238   00138E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3239   001392  C026  F013         	movff	??_dtoa,abs@a
  3240   001396  C027  F014         	movff	??_dtoa+1,abs@a+1
  3241   00139A  EC46  F013         	call	_abs	;wreg free
  3242   00139E  5013               	movf	?_abs^0,w,c
  3243   0013A0  0F30               	addlw	48
  3244   0013A2  6EDF               	movwf	indf2,c
  3245   0013A4                     
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3247   0013A4  0630               	decf	dtoa@p^0,f,c
  3248   0013A6  A0D8               	btfss	status,0,c
  3249   0013A8  0631               	decf	(dtoa@p+1)^0,f,c
  3250   0013AA                     
  3251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3252   0013AA  0632               	decf	dtoa@w^0,f,c
  3253   0013AC  A0D8               	btfss	status,0,c
  3254   0013AE  0633               	decf	(dtoa@w+1)^0,f,c
  3255   0013B0                     
  3256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3257   0013B0  C034  F001         	movff	dtoa@n,___aodiv@dividend
  3258   0013B4  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3259   0013B8  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3260   0013BC  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3261   0013C0  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3262   0013C4  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3263   0013C8  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3264   0013CC  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3265   0013D0  0E0A               	movlw	10
  3266   0013D2  6E09               	movwf	___aodiv@divisor^0,c
  3267   0013D4  0E00               	movlw	0
  3268   0013D6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3269   0013D8  0E00               	movlw	0
  3270   0013DA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3271   0013DC  0E00               	movlw	0
  3272   0013DE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3273   0013E0  0E00               	movlw	0
  3274   0013E2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3275   0013E4  0E00               	movlw	0
  3276   0013E6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3277   0013E8  0E00               	movlw	0
  3278   0013EA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3279   0013EC  0E00               	movlw	0
  3280   0013EE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3281   0013F0  EC44  F00D         	call	___aodiv	;wreg free
  3282   0013F4  C001  F034         	movff	?___aodiv,dtoa@n
  3283   0013F8  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  3284   0013FC  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  3285   001400  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  3286   001404  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  3287   001408  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  3288   00140C  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  3289   001410  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  3290   001414                     l2285:
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3293   001414  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  3294   001416  EF15  F00A         	goto	u1161
  3295   00141A  503D               	movf	(dtoa@i+1)^0,w,c
  3296   00141C  E108               	bnz	u1160
  3297   00141E  043C               	decf	dtoa@i^0,w,c
  3298   001420  A0D8               	btfss	status,0,c
  3299   001422  EF15  F00A         	goto	u1161
  3300   001426  EF17  F00A         	goto	u1160
  3301   00142A                     u1161:
  3302   00142A  EF33  F00A         	goto	l2291
  3303   00142E                     u1160:
  3304   00142E  5034               	movf	dtoa@n^0,w,c
  3305   001430  1035               	iorwf	(dtoa@n+1)^0,w,c
  3306   001432  1036               	iorwf	(dtoa@n+2)^0,w,c
  3307   001434  1037               	iorwf	(dtoa@n+3)^0,w,c
  3308   001436  1038               	iorwf	(dtoa@n+4)^0,w,c
  3309   001438  1039               	iorwf	(dtoa@n+5)^0,w,c
  3310   00143A  103A               	iorwf	(dtoa@n+6)^0,w,c
  3311   00143C  103B               	iorwf	(dtoa@n+7)^0,w,c
  3312   00143E  A4D8               	btfss	status,2,c
  3313   001440  EF24  F00A         	goto	u1171
  3314   001444  EF26  F00A         	goto	u1170
  3315   001448                     u1171:
  3316   001448  EF8E  F009         	goto	l2275
  3317   00144C                     u1170:
  3318   00144C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3319   00144E  EF33  F00A         	goto	u1180
  3320   001452  5031               	movf	(dtoa@p+1)^0,w,c
  3321   001454  E106               	bnz	u1181
  3322   001456  0430               	decf	dtoa@p^0,w,c
  3323   001458  B0D8               	btfsc	status,0,c
  3324   00145A  EF31  F00A         	goto	u1181
  3325   00145E  EF33  F00A         	goto	u1180
  3326   001462                     u1181:
  3327   001462  EF8E  F009         	goto	l2275
  3328   001466                     u1180:
  3329   001466                     l2291:
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3332   001466  503E               	movf	dtoa@s^0,w,c
  3333   001468  B4D8               	btfsc	status,2,c
  3334   00146A  EF39  F00A         	goto	u1191
  3335   00146E  EF3B  F00A         	goto	u1190
  3336   001472                     u1191:
  3337   001472  EF46  F00A         	goto	l2297
  3338   001476                     u1190:
  3339   001476                     
  3340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3341   001476  063C               	decf	dtoa@i^0,f,c
  3342   001478  A0D8               	btfss	status,0,c
  3343   00147A  063D               	decf	(dtoa@i+1)^0,f,c
  3344   00147C                     
  3345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3346   00147C  0E50               	movlw	low _dbuf
  3347   00147E  243C               	addwf	dtoa@i^0,w,c
  3348   001480  6ED9               	movwf	fsr2l,c
  3349   001482  0E01               	movlw	high _dbuf
  3350   001484  203D               	addwfc	(dtoa@i+1)^0,w,c
  3351   001486  6EDA               	movwf	fsr2h,c
  3352   001488  C03E  FFDF         	movff	dtoa@s,indf2
  3353   00148C                     l2297:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3356   00148C  C01C  F011         	movff	dtoa@fp,pad@fp
  3357   001490  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3358   001494  0E50               	movlw	low _dbuf
  3359   001496  243C               	addwf	dtoa@i^0,w,c
  3360   001498  6E13               	movwf	pad@buf^0,c
  3361   00149A  0E01               	movlw	high _dbuf
  3362   00149C  203D               	addwfc	(dtoa@i+1)^0,w,c
  3363   00149E  6E14               	movwf	(pad@buf+1)^0,c
  3364   0014A0  C032  F015         	movff	dtoa@w,pad@p
  3365   0014A4  C033  F016         	movff	dtoa@w+1,pad@p+1
  3366   0014A8  EC9F  F011         	call	_pad	;wreg free
  3367   0014AC  0012               	return		;funcret
  3368   0014AE                     __end_of_dtoa:
  3369                           	callstack 0
  3370                           
  3371 ;; *************** function _pad *****************
  3372 ;; Defined at:
  3373 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3376 ;;		 -> sprintf@f(11), 
  3377 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3378 ;;		 -> dbuf(32), 
  3379 ;;  p               2   20[COMRAM] int 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  w               2   25[COMRAM] int 
  3382 ;;  i               2   23[COMRAM] int 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3392 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3396 ;;Total ram usage:       11 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 3
  3399 ;; This function calls:
  3400 ;;		_fputc
  3401 ;;		_fputs
  3402 ;; This function is called by:
  3403 ;;		_dtoa
  3404 ;;		_utoa
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text10
  3409   00233E                     __ptext10:
  3410                           	callstack 0
  3411   00233E                     _pad:
  3412                           	callstack 23
  3413   00233E                     
  3414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3415   00233E  BE16               	btfsc	(pad@p+1)^0,7,c
  3416   002340  EFA4  F011         	goto	u1081
  3417   002344  EFA6  F011         	goto	u1080
  3418   002348                     u1081:
  3419   002348  EFAC  F011         	goto	l2239
  3420   00234C                     u1080:
  3421   00234C  C015  F01A         	movff	pad@p,pad@w
  3422   002350  C016  F01B         	movff	pad@p+1,pad@w+1
  3423   002354  EFB0  F011         	goto	l1120
  3424   002358                     l2239:
  3425   002358  0E00               	movlw	0
  3426   00235A  6E1B               	movwf	(pad@w+1)^0,c
  3427   00235C  0E00               	movlw	0
  3428   00235E  6E1A               	movwf	pad@w^0,c
  3429   002360                     l1120:
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3432   002360  0E00               	movlw	0
  3433   002362  6E19               	movwf	(pad@i+1)^0,c
  3434   002364  0E00               	movlw	0
  3435   002366  6E18               	movwf	pad@i^0,c
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3438   002368  EFC2  F011         	goto	l2245
  3439   00236C                     l2241:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3442   00236C  0E00               	movlw	0
  3443   00236E  6E02               	movwf	(fputc@c+1)^0,c
  3444   002370  0E20               	movlw	32
  3445   002372  6E01               	movwf	fputc@c^0,c
  3446   002374  C011  F003         	movff	pad@fp,fputc@fp
  3447   002378  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3448   00237C  ECF6  F010         	call	_fputc	;wreg free
  3449   002380                     
  3450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3451   002380  4A18               	infsnz	pad@i^0,f,c
  3452   002382  2A19               	incf	(pad@i+1)^0,f,c
  3453   002384                     l2245:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3456   002384  501A               	movf	pad@w^0,w,c
  3457   002386  5C18               	subwf	pad@i^0,w,c
  3458   002388  5019               	movf	(pad@i+1)^0,w,c
  3459   00238A  0A80               	xorlw	128
  3460   00238C  6E17               	movwf	??_pad^0,c
  3461   00238E  501B               	movf	(pad@w+1)^0,w,c
  3462   002390  0A80               	xorlw	128
  3463   002392  5817               	subwfb	??_pad^0,w,c
  3464   002394  A0D8               	btfss	status,0,c
  3465   002396  EFCF  F011         	goto	u1091
  3466   00239A  EFD1  F011         	goto	u1090
  3467   00239E                     u1091:
  3468   00239E  EFB6  F011         	goto	l2241
  3469   0023A2                     u1090:
  3470   0023A2                     
  3471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3472   0023A2  C013  F00A         	movff	pad@buf,fputs@s
  3473   0023A6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3474   0023AA  C011  F00C         	movff	pad@fp,fputs@fp
  3475   0023AE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3476   0023B2  EC03  F013         	call	_fputs	;wreg free
  3477   0023B6  0012               	return		;funcret
  3478   0023B8                     __end_of_pad:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _fputs *****************
  3482 ;; Defined at:
  3483 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3486 ;;		 -> dbuf(32), 
  3487 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3488 ;;		 -> sprintf@f(11), 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  i               2   14[COMRAM] int 
  3491 ;;  c               1   13[COMRAM] unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  2    9[COMRAM] int 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;Total ram usage:        7 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 2
  3508 ;; This function calls:
  3509 ;;		_fputc
  3510 ;; This function is called by:
  3511 ;;		_pad
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text11
  3516   002606                     __ptext11:
  3517                           	callstack 0
  3518   002606                     _fputs:
  3519                           	callstack 23
  3520   002606  0E00               	movlw	0
  3521   002608  6E10               	movwf	(fputs@i+1)^0,c
  3522   00260A  0E00               	movlw	0
  3523   00260C  6E0F               	movwf	fputs@i^0,c
  3524   00260E  EF14  F013         	goto	l2111
  3525   002612                     l2107:
  3526   002612  C00E  F001         	movff	fputs@c,fputc@c
  3527   002616  6A02               	clrf	(fputc@c+1)^0,c
  3528   002618  C00C  F003         	movff	fputs@fp,fputc@fp
  3529   00261C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3530   002620  ECF6  F010         	call	_fputc	;wreg free
  3531   002624  4A0F               	infsnz	fputs@i^0,f,c
  3532   002626  2A10               	incf	(fputs@i+1)^0,f,c
  3533   002628                     l2111:
  3534   002628  500F               	movf	fputs@i^0,w,c
  3535   00262A  240A               	addwf	fputs@s^0,w,c
  3536   00262C  6ED9               	movwf	fsr2l,c
  3537   00262E  5010               	movf	(fputs@i+1)^0,w,c
  3538   002630  200B               	addwfc	(fputs@s+1)^0,w,c
  3539   002632  6EDA               	movwf	fsr2h,c
  3540   002634  50DF               	movf	indf2,w,c
  3541   002636  6E0E               	movwf	fputs@c^0,c
  3542   002638  500E               	movf	fputs@c^0,w,c
  3543   00263A  A4D8               	btfss	status,2,c
  3544   00263C  EF22  F013         	goto	u861
  3545   002640  EF24  F013         	goto	u860
  3546   002644                     u861:
  3547   002644  EF09  F013         	goto	l2107
  3548   002648                     u860:
  3549   002648  0012               	return		;funcret
  3550   00264A                     __end_of_fputs:
  3551                           	callstack 0
  3552                           
  3553 ;; *************** function _fputc *****************
  3554 ;; Defined at:
  3555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  c               2    0[COMRAM] int 
  3558 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3559 ;;		 -> sprintf@f(11), 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;		None
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  2    0[COMRAM] int 
  3564 ;; Registers used:
  3565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;Total ram usage:        9 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 1
  3578 ;; This function calls:
  3579 ;;		_putch
  3580 ;; This function is called by:
  3581 ;;		_pad
  3582 ;;		_vfpfcnvrt
  3583 ;;		_fputs
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text12
  3588   0021EC                     __ptext12:
  3589                           	callstack 0
  3590   0021EC                     _fputc:
  3591                           	callstack 23
  3592   0021EC  5003               	movf	fputc@fp^0,w,c
  3593   0021EE  1004               	iorwf	(fputc@fp+1)^0,w,c
  3594   0021F0  B4D8               	btfsc	status,2,c
  3595   0021F2  EFFD  F010         	goto	u821
  3596   0021F6  EFFF  F010         	goto	u820
  3597   0021FA                     u821:
  3598   0021FA  EF08  F011         	goto	l2095
  3599   0021FE                     u820:
  3600   0021FE  5003               	movf	fputc@fp^0,w,c
  3601   002200  1004               	iorwf	(fputc@fp+1)^0,w,c
  3602   002202  A4D8               	btfss	status,2,c
  3603   002204  EF06  F011         	goto	u831
  3604   002208  EF08  F011         	goto	u830
  3605   00220C                     u831:
  3606   00220C  EF0D  F011         	goto	l2097
  3607   002210                     u830:
  3608   002210                     l2095:
  3609   002210  5001               	movf	fputc@c^0,w,c
  3610   002212  EC2F  F014         	call	_putch
  3611   002216  EF5A  F011         	goto	l1186
  3612   00221A                     l2097:
  3613   00221A  EE20 F009          	lfsr	2,9
  3614   00221E  5003               	movf	fputc@fp^0,w,c
  3615   002220  26D9               	addwf	fsr2l,f,c
  3616   002222  5004               	movf	(fputc@fp+1)^0,w,c
  3617   002224  22DA               	addwfc	fsr2h,f,c
  3618   002226  50DE               	movf	postinc2,w,c
  3619   002228  10DE               	iorwf	postinc2,w,c
  3620   00222A  B4D8               	btfsc	status,2,c
  3621   00222C  EF1A  F011         	goto	u841
  3622   002230  EF1C  F011         	goto	u840
  3623   002234                     u841:
  3624   002234  EF37  F011         	goto	l2101
  3625   002238                     u840:
  3626   002238  EE20 F009          	lfsr	2,9
  3627   00223C  5003               	movf	fputc@fp^0,w,c
  3628   00223E  26D9               	addwf	fsr2l,f,c
  3629   002240  5004               	movf	(fputc@fp+1)^0,w,c
  3630   002242  22DA               	addwfc	fsr2h,f,c
  3631   002244  EE10 F003          	lfsr	1,3
  3632   002248  5003               	movf	fputc@fp^0,w,c
  3633   00224A  26E1               	addwf	fsr1l,f,c
  3634   00224C  5004               	movf	(fputc@fp+1)^0,w,c
  3635   00224E  22E2               	addwfc	fsr1h,f,c
  3636   002250  50DE               	movf	postinc2,w,c
  3637   002252  5CE6               	subwf	postinc1,w,c
  3638   002254  50E6               	movf	postinc1,w,c
  3639   002256  0A80               	xorlw	128
  3640   002258  6E09               	movwf	(??_fputc+4)^0,c
  3641   00225A  50DE               	movf	postinc2,w,c
  3642   00225C  0A80               	xorlw	128
  3643   00225E  5809               	subwfb	(??_fputc+4)^0,w,c
  3644   002260  B0D8               	btfsc	status,0,c
  3645   002262  EF35  F011         	goto	u851
  3646   002266  EF37  F011         	goto	u850
  3647   00226A                     u851:
  3648   00226A  EF5A  F011         	goto	l1186
  3649   00226E                     u850:
  3650   00226E                     l2101:
  3651   00226E  EE20 F003          	lfsr	2,3
  3652   002272  5003               	movf	fputc@fp^0,w,c
  3653   002274  26D9               	addwf	fsr2l,f,c
  3654   002276  5004               	movf	(fputc@fp+1)^0,w,c
  3655   002278  22DA               	addwfc	fsr2h,f,c
  3656   00227A  CFDE F005          	movff	postinc2,??_fputc
  3657   00227E  CFDD F006          	movff	postdec2,??_fputc+1
  3658   002282  C003  FFD9         	movff	fputc@fp,fsr2l
  3659   002286  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3660   00228A  CFDE F007          	movff	postinc2,??_fputc+2
  3661   00228E  CFDD F008          	movff	postdec2,??_fputc+3
  3662   002292  5005               	movf	??_fputc^0,w,c
  3663   002294  2407               	addwf	(??_fputc+2)^0,w,c
  3664   002296  6ED9               	movwf	fsr2l,c
  3665   002298  5006               	movf	(??_fputc+1)^0,w,c
  3666   00229A  2008               	addwfc	(??_fputc+3)^0,w,c
  3667   00229C  6EDA               	movwf	fsr2h,c
  3668   00229E  C001  FFDF         	movff	fputc@c,indf2
  3669   0022A2  EE20 F003          	lfsr	2,3
  3670   0022A6  5003               	movf	fputc@fp^0,w,c
  3671   0022A8  26D9               	addwf	fsr2l,f,c
  3672   0022AA  5004               	movf	(fputc@fp+1)^0,w,c
  3673   0022AC  22DA               	addwfc	fsr2h,f,c
  3674   0022AE  2ADE               	incf	postinc2,f,c
  3675   0022B0  0E00               	movlw	0
  3676   0022B2  22DD               	addwfc	postdec2,f,c
  3677   0022B4                     l1186:
  3678   0022B4  0012               	return		;funcret
  3679   0022B6                     __end_of_fputc:
  3680                           	callstack 0
  3681                           
  3682 ;; *************** function _putch *****************
  3683 ;; Defined at:
  3684 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  c               1    wreg     unsigned char 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  c               1    0[COMRAM] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3702 ;;Total ram usage:        0 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_fputc
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text13
  3712   00285E                     __ptext13:
  3713                           	callstack 0
  3714   00285E                     _putch:
  3715                           	callstack 23
  3716   00285E  0012               	return		;funcret
  3717   002860                     __end_of_putch:
  3718                           	callstack 0
  3719                           
  3720 ;; *************** function _abs *****************
  3721 ;; Defined at:
  3722 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  a               2   18[COMRAM] int 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  2   18[COMRAM] int 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;Total ram usage:        4 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_normalise_readings
  3746 ;;		_dtoa
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text14
  3751   00268C                     __ptext14:
  3752                           	callstack 0
  3753   00268C                     _abs:
  3754                           	callstack 26
  3755   00268C  BE14               	btfsc	(abs@a+1)^0,7,c
  3756   00268E  EF53  F013         	goto	u870
  3757   002692  5014               	movf	(abs@a+1)^0,w,c
  3758   002694  E106               	bnz	u871
  3759   002696  0413               	decf	abs@a^0,w,c
  3760   002698  B0D8               	btfsc	status,0,c
  3761   00269A  EF51  F013         	goto	u871
  3762   00269E  EF53  F013         	goto	u870
  3763   0026A2                     u871:
  3764   0026A2  EF61  F013         	goto	l1088
  3765   0026A6                     u870:
  3766   0026A6  C013  F015         	movff	abs@a,??_abs
  3767   0026AA  C014  F016         	movff	abs@a+1,??_abs+1
  3768   0026AE  1E15               	comf	??_abs^0,f,c
  3769   0026B0  1E16               	comf	(??_abs+1)^0,f,c
  3770   0026B2  4A15               	infsnz	??_abs^0,f,c
  3771   0026B4  2A16               	incf	(??_abs+1)^0,f,c
  3772   0026B6  C015  F013         	movff	??_abs,?_abs
  3773   0026BA  C016  F014         	movff	??_abs+1,?_abs+1
  3774   0026BE  EF65  F013         	goto	l1091
  3775   0026C2                     l1088:
  3776   0026C2  C013  F013         	movff	abs@a,?_abs
  3777   0026C6  C014  F014         	movff	abs@a+1,?_abs+1
  3778   0026CA                     l1091:
  3779   0026CA  0012               	return		;funcret
  3780   0026CC                     __end_of_abs:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function ___aomod *****************
  3784 ;; Defined at:
  3785 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  dividend        8    0[COMRAM] long long 
  3788 ;;  divisor         8    8[COMRAM] long long 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  sign            1   17[COMRAM] unsigned char 
  3791 ;;  counter         1   16[COMRAM] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  8    0[COMRAM] long long 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3801 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;Total ram usage:       18 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_dtoa
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text15
  3815   001D7C                     __ptext15:
  3816                           	callstack 0
  3817   001D7C                     ___aomod:
  3818                           	callstack 26
  3819   001D7C  0E00               	movlw	0
  3820   001D7E  6E12               	movwf	___aomod@sign^0,c
  3821   001D80  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3822   001D82  EFC7  F00E         	goto	u950
  3823   001D86  EFC5  F00E         	goto	u951
  3824   001D8A                     u951:
  3825   001D8A  EFD9  F00E         	goto	l2169
  3826   001D8E                     u950:
  3827   001D8E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3828   001D90  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3829   001D92  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3830   001D94  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3831   001D96  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3832   001D98  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3833   001D9A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3834   001D9C  6C01               	negf	___aomod@dividend^0,c
  3835   001D9E  0E00               	movlw	0
  3836   001DA0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3837   001DA2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3838   001DA4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3839   001DA6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3840   001DA8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3841   001DAA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3842   001DAC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3843   001DAE  0E01               	movlw	1
  3844   001DB0  6E12               	movwf	___aomod@sign^0,c
  3845   001DB2                     l2169:
  3846   001DB2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3847   001DB4  EFE0  F00E         	goto	u960
  3848   001DB8  EFDE  F00E         	goto	u961
  3849   001DBC                     u961:
  3850   001DBC  EFF0  F00E         	goto	l2173
  3851   001DC0                     u960:
  3852   001DC0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3853   001DC2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3854   001DC4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3855   001DC6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3856   001DC8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3857   001DCA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3858   001DCC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3859   001DCE  6C09               	negf	___aomod@divisor^0,c
  3860   001DD0  0E00               	movlw	0
  3861   001DD2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3862   001DD4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3863   001DD6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3864   001DD8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3865   001DDA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3866   001DDC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3867   001DDE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3868   001DE0                     l2173:
  3869   001DE0  5009               	movf	___aomod@divisor^0,w,c
  3870   001DE2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3871   001DE4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3872   001DE6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3873   001DE8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3874   001DEA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3875   001DEC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3876   001DEE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3877   001DF0  B4D8               	btfsc	status,2,c
  3878   001DF2  EFFD  F00E         	goto	u971
  3879   001DF6  EFFF  F00E         	goto	u970
  3880   001DFA                     u971:
  3881   001DFA  EF47  F00F         	goto	l2189
  3882   001DFE                     u970:
  3883   001DFE  0E01               	movlw	1
  3884   001E00  6E11               	movwf	___aomod@counter^0,c
  3885   001E02  EF0D  F00F         	goto	l2179
  3886   001E06                     l2177:
  3887   001E06  90D8               	bcf	status,0,c
  3888   001E08  3609               	rlcf	___aomod@divisor^0,f,c
  3889   001E0A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3890   001E0C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3891   001E0E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3892   001E10  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3893   001E12  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3894   001E14  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3895   001E16  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3896   001E18  2A11               	incf	___aomod@counter^0,f,c
  3897   001E1A                     l2179:
  3898   001E1A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3899   001E1C  EF12  F00F         	goto	u981
  3900   001E20  EF14  F00F         	goto	u980
  3901   001E24                     u981:
  3902   001E24  EF03  F00F         	goto	l2177
  3903   001E28                     u980:
  3904   001E28                     l2181:
  3905   001E28  5009               	movf	___aomod@divisor^0,w,c
  3906   001E2A  5C01               	subwf	___aomod@dividend^0,w,c
  3907   001E2C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3908   001E2E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3909   001E30  500B               	movf	(___aomod@divisor+2)^0,w,c
  3910   001E32  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3911   001E34  500C               	movf	(___aomod@divisor+3)^0,w,c
  3912   001E36  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3913   001E38  500D               	movf	(___aomod@divisor+4)^0,w,c
  3914   001E3A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3915   001E3C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3916   001E3E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3917   001E40  500F               	movf	(___aomod@divisor+6)^0,w,c
  3918   001E42  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3919   001E44  5010               	movf	(___aomod@divisor+7)^0,w,c
  3920   001E46  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3921   001E48  A0D8               	btfss	status,0,c
  3922   001E4A  EF29  F00F         	goto	u991
  3923   001E4E  EF2B  F00F         	goto	u990
  3924   001E52                     u991:
  3925   001E52  EF3B  F00F         	goto	l2185
  3926   001E56                     u990:
  3927   001E56  5009               	movf	___aomod@divisor^0,w,c
  3928   001E58  5E01               	subwf	___aomod@dividend^0,f,c
  3929   001E5A  500A               	movf	(___aomod@divisor+1)^0,w,c
  3930   001E5C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3931   001E5E  500B               	movf	(___aomod@divisor+2)^0,w,c
  3932   001E60  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3933   001E62  500C               	movf	(___aomod@divisor+3)^0,w,c
  3934   001E64  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3935   001E66  500D               	movf	(___aomod@divisor+4)^0,w,c
  3936   001E68  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3937   001E6A  500E               	movf	(___aomod@divisor+5)^0,w,c
  3938   001E6C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3939   001E6E  500F               	movf	(___aomod@divisor+6)^0,w,c
  3940   001E70  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3941   001E72  5010               	movf	(___aomod@divisor+7)^0,w,c
  3942   001E74  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3943   001E76                     l2185:
  3944   001E76  90D8               	bcf	status,0,c
  3945   001E78  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3946   001E7A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3947   001E7C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3948   001E7E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3949   001E80  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3950   001E82  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3951   001E84  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3952   001E86  3209               	rrcf	___aomod@divisor^0,f,c
  3953   001E88  2E11               	decfsz	___aomod@counter^0,f,c
  3954   001E8A  EF14  F00F         	goto	l2181
  3955   001E8E                     l2189:
  3956   001E8E  5012               	movf	___aomod@sign^0,w,c
  3957   001E90  B4D8               	btfsc	status,2,c
  3958   001E92  EF4D  F00F         	goto	u1001
  3959   001E96  EF4F  F00F         	goto	u1000
  3960   001E9A                     u1001:
  3961   001E9A  EF5F  F00F         	goto	l2193
  3962   001E9E                     u1000:
  3963   001E9E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3964   001EA0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3965   001EA2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3966   001EA4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3967   001EA6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3968   001EA8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3969   001EAA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3970   001EAC  6C01               	negf	___aomod@dividend^0,c
  3971   001EAE  0E00               	movlw	0
  3972   001EB0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3973   001EB2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3974   001EB4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3975   001EB6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3976   001EB8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3977   001EBA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3978   001EBC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3979   001EBE                     l2193:
  3980   001EBE  C001  F001         	movff	___aomod@dividend,?___aomod
  3981   001EC2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3982   001EC6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3983   001ECA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3984   001ECE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3985   001ED2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3986   001ED6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3987   001EDA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3988   001EDE  0012               	return		;funcret
  3989   001EE0                     __end_of___aomod:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function ___aodiv *****************
  3993 ;; Defined at:
  3994 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  dividend        8    0[COMRAM] long long 
  3997 ;;  divisor         8    8[COMRAM] long long 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  quotient        8   18[COMRAM] long long 
  4000 ;;  sign            1   17[COMRAM] unsigned char 
  4001 ;;  counter         1   16[COMRAM] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  8    0[COMRAM] long long 
  4004 ;; Registers used:
  4005 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4011 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;Total ram usage:       26 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_dtoa
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text16
  4025   001A88                     __ptext16:
  4026                           	callstack 0
  4027   001A88                     ___aodiv:
  4028                           	callstack 26
  4029   001A88  0E00               	movlw	0
  4030   001A8A  6E12               	movwf	___aodiv@sign^0,c
  4031   001A8C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4032   001A8E  EF4D  F00D         	goto	u880
  4033   001A92  EF4B  F00D         	goto	u881
  4034   001A96                     u881:
  4035   001A96  EF5F  F00D         	goto	l2125
  4036   001A9A                     u880:
  4037   001A9A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4038   001A9C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4039   001A9E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4040   001AA0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4041   001AA2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4042   001AA4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4043   001AA6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4044   001AA8  6C09               	negf	___aodiv@divisor^0,c
  4045   001AAA  0E00               	movlw	0
  4046   001AAC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4047   001AAE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4048   001AB0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4049   001AB2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4050   001AB4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4051   001AB6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4052   001AB8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4053   001ABA  0E01               	movlw	1
  4054   001ABC  6E12               	movwf	___aodiv@sign^0,c
  4055   001ABE                     l2125:
  4056   001ABE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4057   001AC0  EF66  F00D         	goto	u890
  4058   001AC4  EF64  F00D         	goto	u891
  4059   001AC8                     u891:
  4060   001AC8  EF78  F00D         	goto	l2131
  4061   001ACC                     u890:
  4062   001ACC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4063   001ACE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4064   001AD0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4065   001AD2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4066   001AD4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4067   001AD6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4068   001AD8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4069   001ADA  6C01               	negf	___aodiv@dividend^0,c
  4070   001ADC  0E00               	movlw	0
  4071   001ADE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4072   001AE0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4073   001AE2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4074   001AE4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4075   001AE6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4076   001AE8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4077   001AEA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4078   001AEC  0E01               	movlw	1
  4079   001AEE  1A12               	xorwf	___aodiv@sign^0,f,c
  4080   001AF0                     l2131:
  4081   001AF0  EE20  F013         	lfsr	2,___aodiv@quotient
  4082   001AF4  0E07               	movlw	7
  4083   001AF6                     u901:
  4084   001AF6  6ADE               	clrf	postinc2,c
  4085   001AF8  06E8               	decf	wreg,f,c
  4086   001AFA  E2FD               	bc	u901
  4087   001AFC  5009               	movf	___aodiv@divisor^0,w,c
  4088   001AFE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4089   001B00  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4090   001B02  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4091   001B04  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4092   001B06  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4093   001B08  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4094   001B0A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4095   001B0C  B4D8               	btfsc	status,2,c
  4096   001B0E  EF8B  F00D         	goto	u911
  4097   001B12  EF8D  F00D         	goto	u910
  4098   001B16                     u911:
  4099   001B16  EFDF  F00D         	goto	l2153
  4100   001B1A                     u910:
  4101   001B1A  0E01               	movlw	1
  4102   001B1C  6E11               	movwf	___aodiv@counter^0,c
  4103   001B1E  EF9B  F00D         	goto	l2139
  4104   001B22                     l2137:
  4105   001B22  90D8               	bcf	status,0,c
  4106   001B24  3609               	rlcf	___aodiv@divisor^0,f,c
  4107   001B26  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4108   001B28  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4109   001B2A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4110   001B2C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4111   001B2E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4112   001B30  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4113   001B32  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4114   001B34  2A11               	incf	___aodiv@counter^0,f,c
  4115   001B36                     l2139:
  4116   001B36  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4117   001B38  EFA0  F00D         	goto	u921
  4118   001B3C  EFA2  F00D         	goto	u920
  4119   001B40                     u921:
  4120   001B40  EF91  F00D         	goto	l2137
  4121   001B44                     u920:
  4122   001B44                     l2141:
  4123   001B44  90D8               	bcf	status,0,c
  4124   001B46  3613               	rlcf	___aodiv@quotient^0,f,c
  4125   001B48  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4126   001B4A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4127   001B4C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4128   001B4E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4129   001B50  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4130   001B52  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4131   001B54  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4132   001B56  5009               	movf	___aodiv@divisor^0,w,c
  4133   001B58  5C01               	subwf	___aodiv@dividend^0,w,c
  4134   001B5A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4135   001B5C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4136   001B5E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4137   001B60  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4138   001B62  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4139   001B64  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4140   001B66  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4141   001B68  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4142   001B6A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4143   001B6C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4144   001B6E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4145   001B70  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4146   001B72  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4147   001B74  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4148   001B76  A0D8               	btfss	status,0,c
  4149   001B78  EFC0  F00D         	goto	u931
  4150   001B7C  EFC2  F00D         	goto	u930
  4151   001B80                     u931:
  4152   001B80  EFD3  F00D         	goto	l2149
  4153   001B84                     u930:
  4154   001B84  5009               	movf	___aodiv@divisor^0,w,c
  4155   001B86  5E01               	subwf	___aodiv@dividend^0,f,c
  4156   001B88  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4157   001B8A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4158   001B8C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4159   001B8E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4160   001B90  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4161   001B92  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4162   001B94  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4163   001B96  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4164   001B98  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4165   001B9A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4166   001B9C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4167   001B9E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4168   001BA0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4169   001BA2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4170   001BA4  8013               	bsf	___aodiv@quotient^0,0,c
  4171   001BA6                     l2149:
  4172   001BA6  90D8               	bcf	status,0,c
  4173   001BA8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4174   001BAA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4175   001BAC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4176   001BAE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4177   001BB0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4178   001BB2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4179   001BB4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4180   001BB6  3209               	rrcf	___aodiv@divisor^0,f,c
  4181   001BB8  2E11               	decfsz	___aodiv@counter^0,f,c
  4182   001BBA  EFA2  F00D         	goto	l2141
  4183   001BBE                     l2153:
  4184   001BBE  5012               	movf	___aodiv@sign^0,w,c
  4185   001BC0  B4D8               	btfsc	status,2,c
  4186   001BC2  EFE5  F00D         	goto	u941
  4187   001BC6  EFE7  F00D         	goto	u940
  4188   001BCA                     u941:
  4189   001BCA  EFF7  F00D         	goto	l2157
  4190   001BCE                     u940:
  4191   001BCE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4192   001BD0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4193   001BD2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4194   001BD4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4195   001BD6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4196   001BD8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4197   001BDA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4198   001BDC  6C13               	negf	___aodiv@quotient^0,c
  4199   001BDE  0E00               	movlw	0
  4200   001BE0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4201   001BE2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4202   001BE4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4203   001BE6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4204   001BE8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4205   001BEA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4206   001BEC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4207   001BEE                     l2157:
  4208   001BEE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4209   001BF2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4210   001BF6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4211   001BFA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4212   001BFE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4213   001C02  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4214   001C06  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4215   001C0A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4216   001C0E  0012               	return		;funcret
  4217   001C10                     __end_of___aodiv:
  4218                           	callstack 0
  4219                           
  4220 ;; *************** function _sendStringSerial4 *****************
  4221 ;; Defined at:
  4222 ;;		line 39 in file "serial.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  string          2    1[COMRAM] PTR unsigned char 
  4225 ;;		 -> main@buf(20), 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;Total ram usage:        2 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 1
  4244 ;; This function calls:
  4245 ;;		_sendCharSerial4
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;;		_normalise_readings
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text17
  4253   002700                     __ptext17:
  4254                           	callstack 0
  4255   002700                     _sendStringSerial4:
  4256                           	callstack 29
  4257   002700                     
  4258                           ;serial.c: 40:  while(*string != 0) {
  4259   002700  EF8B  F013         	goto	l2473
  4260   002704                     l2469:
  4261                           
  4262                           ;serial.c: 41:         sendCharSerial4(*string++);
  4263   002704  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4264   002708  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4265   00270C  50DF               	movf	indf2,w,c
  4266   00270E  EC05  F014         	call	_sendCharSerial4
  4267   002712  4A02               	infsnz	sendStringSerial4@string^0,f,c
  4268   002714  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  4269   002716                     l2473:
  4270                           
  4271                           ;serial.c: 40:  while(*string != 0) {
  4272   002716  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4273   00271A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4274   00271E  50DF               	movf	indf2,w,c
  4275   002720  A4D8               	btfss	status,2,c
  4276   002722  EF95  F013         	goto	u1341
  4277   002726  EF97  F013         	goto	u1340
  4278   00272A                     u1341:
  4279   00272A  EF82  F013         	goto	l2469
  4280   00272E                     u1340:
  4281   00272E  0012               	return		;funcret
  4282   002730                     __end_of_sendStringSerial4:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _sendCharSerial4 *****************
  4286 ;; Defined at:
  4287 ;;		line 32 in file "serial.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  charToSend      1    wreg     unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  charToSend      1    0[COMRAM] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4305 ;;Total ram usage:        1 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_sendStringSerial4
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text18
  4315   00280A                     __ptext18:
  4316                           	callstack 0
  4317   00280A                     _sendCharSerial4:
  4318                           	callstack 29
  4319                           
  4320                           ;incstack = 0
  4321                           ;sendCharSerial4@charToSend stored from wreg
  4322   00280A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4323   00280C                     l369:
  4324   00280C  010E               	movlb	14	; () banked
  4325   00280E  A537               	btfss	55,2,b	;volatile
  4326   002810  EF0C  F014         	goto	u1321
  4327   002814  EF0E  F014         	goto	u1320
  4328   002818                     u1321:
  4329   002818  EF06  F014         	goto	l369
  4330   00281C                     u1320:
  4331   00281C                     
  4332                           ; BSR set to: 14
  4333                           ;serial.c: 34:     TX4REG = charToSend;
  4334   00281C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4335   002820                     
  4336                           ; BSR set to: 14
  4337   002820  0012               	return		;funcret
  4338   002822                     __end_of_sendCharSerial4:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function ___wmul *****************
  4342 ;; Defined at:
  4343 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  multiplier      2    0[COMRAM] unsigned int 
  4346 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  product         2    4[COMRAM] unsigned int 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2    0[COMRAM] unsigned int 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, prodl, prodh
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;Total ram usage:        6 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_setMotorPWM
  4368 ;;		_normalise_readings
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text19
  4373   002782                     __ptext19:
  4374                           	callstack 0
  4375   002782                     ___wmul:
  4376                           	callstack 29
  4377   002782  5001               	movf	___wmul@multiplier^0,w,c
  4378   002784  0203               	mulwf	___wmul@multiplicand^0,c
  4379   002786  CFF3 F005          	movff	prodl,___wmul@product
  4380   00278A  CFF4 F006          	movff	prodh,___wmul@product+1
  4381   00278E  5001               	movf	___wmul@multiplier^0,w,c
  4382   002790  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4383   002792  50F3               	movf	243,w,c
  4384   002794  2606               	addwf	(___wmul@product+1)^0,f,c
  4385   002796  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4386   002798  0203               	mulwf	___wmul@multiplicand^0,c
  4387   00279A  50F3               	movf	243,w,c
  4388   00279C  2606               	addwf	(___wmul@product+1)^0,f,c
  4389   00279E  C005  F001         	movff	___wmul@product,?___wmul
  4390   0027A2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4391   0027A6  0012               	return		;funcret
  4392   0027A8                     __end_of___wmul:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function _initUSART4 *****************
  4396 ;; Defined at:
  4397 ;;		line 6 in file "serial.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4415 ;;Total ram usage:        0 bytes
  4416 ;; Hardware stack levels used: 1
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_main
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text20
  4425   0027CA                     __ptext20:
  4426                           	callstack 0
  4427   0027CA                     _initUSART4:
  4428                           	callstack 30
  4429   0027CA                     
  4430                           ;serial.c: 10:     RC0PPS = 0x12;
  4431   0027CA  0E12               	movlw	18
  4432   0027CC  010E               	movlb	14	; () banked
  4433   0027CE  6F62               	movwf	98,b	;volatile
  4434                           
  4435                           ;serial.c: 11:     RX4PPS = 0x11;
  4436   0027D0  0E11               	movlw	17
  4437   0027D2  6F15               	movwf	21,b	;volatile
  4438   0027D4                     
  4439                           ; BSR set to: 14
  4440                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  4441   0027D4  8283               	bsf	131,1,c	;volatile
  4442   0027D6                     
  4443                           ; BSR set to: 14
  4444                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  4445   0027D6  97E9               	bcf	233,3,b	;volatile
  4446   0027D8                     
  4447                           ; BSR set to: 14
  4448                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  4449   0027D8  95E8               	bcf	232,2,b	;volatile
  4450                           
  4451                           ;serial.c: 17:     SP4BRGL = 51;
  4452   0027DA  0E33               	movlw	51
  4453   0027DC  6FE5               	movwf	229,b	;volatile
  4454                           
  4455                           ;serial.c: 18:     SP4BRGH = 0;
  4456   0027DE  0E00               	movlw	0
  4457   0027E0  6FE6               	movwf	230,b	;volatile
  4458   0027E2                     
  4459                           ; BSR set to: 14
  4460                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  4461   0027E2  89E7               	bsf	231,4,b	;volatile
  4462   0027E4                     
  4463                           ; BSR set to: 14
  4464                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  4465   0027E4  8BE8               	bsf	232,5,b	;volatile
  4466   0027E6                     
  4467                           ; BSR set to: 14
  4468                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  4469   0027E6  8FE7               	bsf	231,7,b	;volatile
  4470   0027E8                     
  4471                           ; BSR set to: 14
  4472   0027E8  0012               	return		;funcret
  4473   0027EA                     __end_of_initUSART4:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _initDCmotorsPWM *****************
  4477 ;; Defined at:
  4478 ;;		line 6 in file "dc_motor.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_main
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text21
  4506   0022B6                     __ptext21:
  4507                           	callstack 0
  4508   0022B6                     _initDCmotorsPWM:
  4509                           	callstack 30
  4510   0022B6                     
  4511                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  4512   0022B6  9485               	bcf	133,2,c	;volatile
  4513                           
  4514                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  4515   0022B8  9885               	bcf	133,4,c	;volatile
  4516                           
  4517                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  4518   0022BA  9E83               	bcf	131,7,c	;volatile
  4519                           
  4520                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  4521   0022BC  9C87               	bcf	135,6,c	;volatile
  4522   0022BE                     
  4523                           ;dc_motor.c: 14:     RE2PPS=0x05;
  4524   0022BE  0E05               	movlw	5
  4525   0022C0  010E               	movlb	14	; () banked
  4526   0022C2  6F74               	movwf	116,b	;volatile
  4527                           
  4528                           ;dc_motor.c: 15:     RE4PPS=0x06;
  4529   0022C4  0E06               	movlw	6
  4530   0022C6  6F76               	movwf	118,b	;volatile
  4531                           
  4532                           ;dc_motor.c: 16:     RC7PPS=0x07;
  4533   0022C8  0E07               	movlw	7
  4534   0022CA  6F69               	movwf	105,b	;volatile
  4535                           
  4536                           ;dc_motor.c: 17:     RG6PPS=0x08;
  4537   0022CC  0E08               	movlw	8
  4538   0022CE  6F88               	movwf	136,b	;volatile
  4539                           
  4540                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  4541   0022D0  50BD               	movf	189,w,c	;volatile
  4542   0022D2  0B8F               	andlw	-113
  4543   0022D4  0940               	iorlw	64
  4544   0022D6  6EBD               	movwf	189,c	;volatile
  4545                           
  4546                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  4547   0022D8  0EE0               	movlw	-32
  4548   0022DA  16BE               	andwf	190,f,c	;volatile
  4549                           
  4550                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  4551   0022DC  50BF               	movf	191,w,c	;volatile
  4552   0022DE  0BF0               	andlw	-16
  4553   0022E0  0901               	iorlw	1
  4554   0022E2  6EBF               	movwf	191,c	;volatile
  4555                           
  4556                           ;dc_motor.c: 26:     T2PR=99;
  4557   0022E4  0E63               	movlw	99
  4558   0022E6  6EBC               	movwf	188,c	;volatile
  4559   0022E8                     
  4560                           ; BSR set to: 14
  4561                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  4562   0022E8  8EBD               	bsf	189,7,c	;volatile
  4563                           
  4564                           ;dc_motor.c: 31:     CCPR1H=0;
  4565   0022EA  0E00               	movlw	0
  4566   0022EC  6EAA               	movwf	170,c	;volatile
  4567                           
  4568                           ;dc_motor.c: 32:     CCPR2H=0;
  4569   0022EE  0E00               	movlw	0
  4570   0022F0  6EA6               	movwf	166,c	;volatile
  4571                           
  4572                           ;dc_motor.c: 33:     CCPR3H=0;
  4573   0022F2  0E00               	movlw	0
  4574   0022F4  010F               	movlb	15	; () banked
  4575   0022F6  6F25               	movwf	37,b	;volatile
  4576                           
  4577                           ;dc_motor.c: 34:     CCPR4H=0;
  4578   0022F8  0E00               	movlw	0
  4579   0022FA  6F21               	movwf	33,b	;volatile
  4580                           
  4581                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  4582   0022FC  0EFC               	movlw	-4
  4583   0022FE  16AD               	andwf	173,f,c	;volatile
  4584                           
  4585                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  4586   002300  0EF3               	movlw	-13
  4587   002302  16AD               	andwf	173,f,c	;volatile
  4588                           
  4589                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  4590   002304  0ECF               	movlw	-49
  4591   002306  16AD               	andwf	173,f,c	;volatile
  4592                           
  4593                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  4594   002308  0E3F               	movlw	-193
  4595   00230A  16AD               	andwf	173,f,c	;volatile
  4596   00230C                     
  4597                           ; BSR set to: 15
  4598                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  4599   00230C  88AB               	bsf	171,4,c	;volatile
  4600                           
  4601                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  4602   00230E  50AB               	movf	171,w,c	;volatile
  4603   002310  0BF0               	andlw	-16
  4604   002312  090C               	iorlw	12
  4605   002314  6EAB               	movwf	171,c	;volatile
  4606   002316                     
  4607                           ; BSR set to: 15
  4608                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  4609   002316  8EAB               	bsf	171,7,c	;volatile
  4610   002318                     
  4611                           ; BSR set to: 15
  4612                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  4613   002318  88A7               	bsf	167,4,c	;volatile
  4614                           
  4615                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  4616   00231A  50A7               	movf	167,w,c	;volatile
  4617   00231C  0BF0               	andlw	-16
  4618   00231E  090C               	iorlw	12
  4619   002320  6EA7               	movwf	167,c	;volatile
  4620   002322                     
  4621                           ; BSR set to: 15
  4622                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  4623   002322  8EA7               	bsf	167,7,c	;volatile
  4624   002324                     
  4625                           ; BSR set to: 15
  4626                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  4627   002324  8926               	bsf	38,4,b	;volatile
  4628                           
  4629                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  4630   002326  5126               	movf	38,w,b	;volatile
  4631   002328  0BF0               	andlw	-16
  4632   00232A  090C               	iorlw	12
  4633   00232C  6F26               	movwf	38,b	;volatile
  4634   00232E                     
  4635                           ; BSR set to: 15
  4636                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  4637   00232E  8F26               	bsf	38,7,b	;volatile
  4638   002330                     
  4639                           ; BSR set to: 15
  4640                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  4641   002330  8922               	bsf	34,4,b	;volatile
  4642                           
  4643                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  4644   002332  5122               	movf	34,w,b	;volatile
  4645   002334  0BF0               	andlw	-16
  4646   002336  090C               	iorlw	12
  4647   002338  6F22               	movwf	34,b	;volatile
  4648   00233A                     
  4649                           ; BSR set to: 15
  4650                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  4651   00233A  8F22               	bsf	34,7,b	;volatile
  4652   00233C                     
  4653                           ; BSR set to: 15
  4654   00233C  0012               	return		;funcret
  4655   00233E                     __end_of_initDCmotorsPWM:
  4656                           	callstack 0
  4657                           
  4658 ;; *************** function _color_click_init *****************
  4659 ;; Defined at:
  4660 ;;		line 5 in file "color.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;Total ram usage:        1 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; Hardware stack levels required when called: 3
  4681 ;; This function calls:
  4682 ;;		_I2C_2_Master_Init
  4683 ;;		_color_writetoaddr
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text22
  4690   0026CC                     __ptext22:
  4691                           	callstack 0
  4692   0026CC                     _color_click_init:
  4693                           	callstack 27
  4694   0026CC                     
  4695                           ;color.c: 8:     I2C_2_Master_Init();
  4696   0026CC  EC98  F013         	call	_I2C_2_Master_Init	;wreg free
  4697   0026D0                     
  4698                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  4699   0026D0  0E01               	movlw	1
  4700   0026D2  6E03               	movwf	color_writetoaddr@value^0,c
  4701   0026D4  0E00               	movlw	0
  4702   0026D6  ECF5  F013         	call	_color_writetoaddr
  4703   0026DA                     
  4704                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4705   0026DA  0E3F               	movlw	63
  4706   0026DC  6E05               	movwf	??_color_click_init^0,c
  4707   0026DE  0E55               	movlw	85
  4708   0026E0                     u1657:
  4709   0026E0  2EE8               	decfsz	wreg,f,c
  4710   0026E2  D7FE               	bra	u1657
  4711   0026E4  2E05               	decfsz	??_color_click_init^0,f,c
  4712   0026E6  D7FC               	bra	u1657
  4713   0026E8  F000               	nop	
  4714   0026EA                     
  4715                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  4716   0026EA  0E03               	movlw	3
  4717   0026EC  6E03               	movwf	color_writetoaddr@value^0,c
  4718   0026EE  0E00               	movlw	0
  4719   0026F0  ECF5  F013         	call	_color_writetoaddr
  4720   0026F4                     
  4721                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  4722   0026F4  0ED5               	movlw	213
  4723   0026F6  6E03               	movwf	color_writetoaddr@value^0,c
  4724   0026F8  0E01               	movlw	1
  4725   0026FA  ECF5  F013         	call	_color_writetoaddr
  4726   0026FE  0012               	return		;funcret
  4727   002700                     __end_of_color_click_init:
  4728                           	callstack 0
  4729                           
  4730 ;; *************** function _color_writetoaddr *****************
  4731 ;; Defined at:
  4732 ;;		line 21 in file "color.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  address         1    wreg     unsigned char 
  4735 ;;  value           1    2[COMRAM] unsigned char 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  address         1    3[COMRAM] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      void 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4747 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;Total ram usage:        2 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; Hardware stack levels required when called: 2
  4754 ;; This function calls:
  4755 ;;		_I2C_2_Master_Start
  4756 ;;		_I2C_2_Master_Stop
  4757 ;;		_I2C_2_Master_Write
  4758 ;; This function is called by:
  4759 ;;		_color_click_init
  4760 ;;		_enable_color_interrupt
  4761 ;;		_set_interrupt_threshold
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text23
  4766   0027EA                     __ptext23:
  4767                           	callstack 0
  4768   0027EA                     _color_writetoaddr:
  4769                           	callstack 27
  4770                           
  4771                           ;incstack = 0
  4772                           ;color_writetoaddr@address stored from wreg
  4773   0027EA  6E04               	movwf	color_writetoaddr@address^0,c
  4774   0027EC                     
  4775                           ;color.c: 22:     I2C_2_Master_Start();
  4776   0027EC  EC25  F014         	call	_I2C_2_Master_Start	;wreg free
  4777                           
  4778                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4779   0027F0  0E52               	movlw	82
  4780   0027F2  EC1A  F014         	call	_I2C_2_Master_Write
  4781                           
  4782                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4783   0027F6  5004               	movf	color_writetoaddr@address^0,w,c
  4784   0027F8  0980               	iorlw	128
  4785   0027FA  EC1A  F014         	call	_I2C_2_Master_Write
  4786                           
  4787                           ;color.c: 25:     I2C_2_Master_Write(value);
  4788   0027FE  5003               	movf	color_writetoaddr@value^0,w,c
  4789   002800  EC1A  F014         	call	_I2C_2_Master_Write
  4790                           
  4791                           ;color.c: 26:     I2C_2_Master_Stop();
  4792   002804  EC20  F014         	call	_I2C_2_Master_Stop	;wreg free
  4793   002808  0012               	return		;funcret
  4794   00280A                     __end_of_color_writetoaddr:
  4795                           	callstack 0
  4796                           
  4797 ;; *************** function _I2C_2_Master_Init *****************
  4798 ;; Defined at:
  4799 ;;		line 4 in file "i2c.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;		None
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4817 ;;Total ram usage:        0 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_color_click_init
  4823 ;;		_main
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text24
  4828   002730                     __ptext24:
  4829                           	callstack 0
  4830   002730                     _I2C_2_Master_Init:
  4831                           	callstack 29
  4832   002730                     
  4833                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4834   002730  010E               	movlb	14	; () banked
  4835   002732  51D9               	movf	217,w,b	;volatile
  4836   002734  0BF0               	andlw	-16
  4837   002736  0908               	iorlw	8
  4838   002738  6FD9               	movwf	217,b	;volatile
  4839   00273A                     
  4840                           ; BSR set to: 14
  4841                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4842   00273A  8BD9               	bsf	217,5,b	;volatile
  4843                           
  4844                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4845   00273C  0E9F               	movlw	159
  4846   00273E  6FD6               	movwf	214,b	;volatile
  4847   002740                     
  4848                           ; BSR set to: 14
  4849                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4850   002740  8A84               	bsf	132,5,c	;volatile
  4851   002742                     
  4852                           ; BSR set to: 14
  4853                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4854   002742  8C84               	bsf	132,6,c	;volatile
  4855   002744                     
  4856                           ; BSR set to: 14
  4857                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4858   002744  9BA7               	bcf	167,5,b	;volatile
  4859   002746                     
  4860                           ; BSR set to: 14
  4861                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4862   002746  9DA7               	bcf	167,6,b	;volatile
  4863                           
  4864                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4865   002748  0E1D               	movlw	29
  4866   00274A  6F1D               	movwf	29,b	;volatile
  4867                           
  4868                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4869   00274C  0E1E               	movlw	30
  4870   00274E  6F1C               	movwf	28,b	;volatile
  4871                           
  4872                           ;i2c.c: 18:   RD5PPS=0x1C;
  4873   002750  0E1C               	movlw	28
  4874   002752  6F6F               	movwf	111,b	;volatile
  4875                           
  4876                           ;i2c.c: 19:   RD6PPS=0x1B;
  4877   002754  0E1B               	movlw	27
  4878   002756  6F70               	movwf	112,b	;volatile
  4879   002758                     
  4880                           ; BSR set to: 14
  4881   002758  0012               	return		;funcret
  4882   00275A                     __end_of_I2C_2_Master_Init:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _collect_avg_readings *****************
  4886 ;; Defined at:
  4887 ;;		line 25 in file "colour_identify.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  red_read        2   13[COMRAM] PTR unsigned int 
  4890 ;;		 -> main@red_read(2), 
  4891 ;;  green_read      2   15[COMRAM] PTR unsigned int 
  4892 ;;		 -> main@green_read(2), 
  4893 ;;  blue_read       2   17[COMRAM] PTR unsigned int 
  4894 ;;		 -> main@blue_read(2), 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  i               1   23[COMRAM] enum E14551
  4897 ;;  i               1   22[COMRAM] enum E14551
  4898 ;;  i               1   21[COMRAM] enum E14551
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4908 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;Total ram usage:       11 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 3
  4915 ;; This function calls:
  4916 ;;		___lwdiv
  4917 ;;		_color_read_Blue
  4918 ;;		_color_read_Green
  4919 ;;		_color_read_Red
  4920 ;; This function is called by:
  4921 ;;		_main
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text25
  4926   001EE0                     __ptext25:
  4927                           	callstack 0
  4928   001EE0                     _collect_avg_readings:
  4929                           	callstack 27
  4930   001EE0                     
  4931                           ;colour_identify.c: 25: void collect_avg_readings( unsigned int *red_read, unsigned int 
      +                          *green_read, unsigned int *blue_read);colour_identify.c: 26: {;colour_identify.c: 29:   
      +                            for(colour i = 1; i <= 3; i++){
  4932   001EE0  0E01               	movlw	1
  4933   001EE2  6E16               	movwf	collect_avg_readings@i^0,c
  4934   001EE4                     l2637:
  4935                           
  4936                           ;colour_identify.c: 30:         *red_read += color_read_Red();
  4937   001EE4  EC68  F012         	call	_color_read_Red	;wreg free
  4938   001EE8  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4939   001EEC  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4940   001EF0  5005               	movf	?_color_read_Red^0,w,c
  4941   001EF2  26DE               	addwf	postinc2,f,c
  4942   001EF4  5006               	movf	(?_color_read_Red+1)^0,w,c
  4943   001EF6  22DD               	addwfc	postdec2,f,c
  4944   001EF8                     
  4945                           ;colour_identify.c: 31:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4946   001EF8  0E11               	movlw	17
  4947   001EFA  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4948   001EFC  0E3C               	movlw	60
  4949   001EFE  6E14               	movwf	??_collect_avg_readings^0,c
  4950   001F00  0ECB               	movlw	203
  4951   001F02                     u1667:
  4952   001F02  2EE8               	decfsz	wreg,f,c
  4953   001F04  D7FE               	bra	u1667
  4954   001F06  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4955   001F08  D7FC               	bra	u1667
  4956   001F0A  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4957   001F0C  D7FA               	bra	u1667
  4958   001F0E  F000               	nop	
  4959   001F10                     
  4960                           ;colour_identify.c: 32:     }
  4961   001F10  2A16               	incf	collect_avg_readings@i^0,f,c
  4962   001F12  0E03               	movlw	3
  4963   001F14  6416               	cpfsgt	collect_avg_readings@i^0,c
  4964   001F16  EF8F  F00F         	goto	u1451
  4965   001F1A  EF91  F00F         	goto	u1450
  4966   001F1E                     u1451:
  4967   001F1E  EF72  F00F         	goto	l2637
  4968   001F22                     u1450:
  4969   001F22                     
  4970                           ;colour_identify.c: 33:     *red_read = *red_read/3;
  4971   001F22  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4972   001F26  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4973   001F2A  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4974   001F2E  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4975   001F32  0E00               	movlw	0
  4976   001F34  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4977   001F36  0E03               	movlw	3
  4978   001F38  6E09               	movwf	___lwdiv@divisor^0,c
  4979   001F3A  ECDC  F011         	call	___lwdiv	;wreg free
  4980   001F3E  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4981   001F42  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4982   001F46  C007  FFDE         	movff	?___lwdiv,postinc2
  4983   001F4A  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4984   001F4E                     
  4985                           ;colour_identify.c: 38:     for(colour i = 1; i <= 3; i++){
  4986   001F4E  0E01               	movlw	1
  4987   001F50  6E17               	movwf	collect_avg_readings@i_1463^0,c
  4988   001F52                     l2653:
  4989                           
  4990                           ;colour_identify.c: 39:         *green_read += color_read_Green();
  4991   001F52  EC90  F012         	call	_color_read_Green	;wreg free
  4992   001F56  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4993   001F5A  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4994   001F5E  5005               	movf	?_color_read_Green^0,w,c
  4995   001F60  26DE               	addwf	postinc2,f,c
  4996   001F62  5006               	movf	(?_color_read_Green+1)^0,w,c
  4997   001F64  22DD               	addwfc	postdec2,f,c
  4998   001F66                     
  4999                           ;colour_identify.c: 40:         _delay((unsigned long)((200)*(64000000/4000.0)));
  5000   001F66  0E11               	movlw	17
  5001   001F68  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  5002   001F6A  0E3C               	movlw	60
  5003   001F6C  6E14               	movwf	??_collect_avg_readings^0,c
  5004   001F6E  0ECB               	movlw	203
  5005   001F70                     u1677:
  5006   001F70  2EE8               	decfsz	wreg,f,c
  5007   001F72  D7FE               	bra	u1677
  5008   001F74  2E14               	decfsz	??_collect_avg_readings^0,f,c
  5009   001F76  D7FC               	bra	u1677
  5010   001F78  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  5011   001F7A  D7FA               	bra	u1677
  5012   001F7C  F000               	nop	
  5013   001F7E                     
  5014                           ;colour_identify.c: 41:     }
  5015   001F7E  2A17               	incf	collect_avg_readings@i_1463^0,f,c
  5016   001F80  0E03               	movlw	3
  5017   001F82  6417               	cpfsgt	collect_avg_readings@i_1463^0,c
  5018   001F84  EFC6  F00F         	goto	u1461
  5019   001F88  EFC8  F00F         	goto	u1460
  5020   001F8C                     u1461:
  5021   001F8C  EFA9  F00F         	goto	l2653
  5022   001F90                     u1460:
  5023   001F90                     
  5024                           ;colour_identify.c: 42:     *green_read = *green_read/3;
  5025   001F90  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  5026   001F94  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  5027   001F98  CFDE F007          	movff	postinc2,___lwdiv@dividend
  5028   001F9C  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  5029   001FA0  0E00               	movlw	0
  5030   001FA2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  5031   001FA4  0E03               	movlw	3
  5032   001FA6  6E09               	movwf	___lwdiv@divisor^0,c
  5033   001FA8  ECDC  F011         	call	___lwdiv	;wreg free
  5034   001FAC  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  5035   001FB0  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  5036   001FB4  C007  FFDE         	movff	?___lwdiv,postinc2
  5037   001FB8  C008  FFDD         	movff	?___lwdiv+1,postdec2
  5038   001FBC                     
  5039                           ;colour_identify.c: 47:     for(colour i = 1; i <= 3; i++){
  5040   001FBC  0E01               	movlw	1
  5041   001FBE  6E18               	movwf	collect_avg_readings@i_1465^0,c
  5042   001FC0                     l2669:
  5043                           
  5044                           ;colour_identify.c: 48:         *blue_read += color_read_Blue();
  5045   001FC0  ECB8  F012         	call	_color_read_Blue	;wreg free
  5046   001FC4  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  5047   001FC8  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  5048   001FCC  5005               	movf	?_color_read_Blue^0,w,c
  5049   001FCE  26DE               	addwf	postinc2,f,c
  5050   001FD0  5006               	movf	(?_color_read_Blue+1)^0,w,c
  5051   001FD2  22DD               	addwfc	postdec2,f,c
  5052   001FD4                     
  5053                           ;colour_identify.c: 49:         _delay((unsigned long)((200)*(64000000/4000.0)));
  5054   001FD4  0E11               	movlw	17
  5055   001FD6  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  5056   001FD8  0E3C               	movlw	60
  5057   001FDA  6E14               	movwf	??_collect_avg_readings^0,c
  5058   001FDC  0ECB               	movlw	203
  5059   001FDE                     u1687:
  5060   001FDE  2EE8               	decfsz	wreg,f,c
  5061   001FE0  D7FE               	bra	u1687
  5062   001FE2  2E14               	decfsz	??_collect_avg_readings^0,f,c
  5063   001FE4  D7FC               	bra	u1687
  5064   001FE6  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  5065   001FE8  D7FA               	bra	u1687
  5066   001FEA  F000               	nop	
  5067   001FEC                     
  5068                           ;colour_identify.c: 50:     }
  5069   001FEC  2A18               	incf	collect_avg_readings@i_1465^0,f,c
  5070   001FEE  0E03               	movlw	3
  5071   001FF0  6418               	cpfsgt	collect_avg_readings@i_1465^0,c
  5072   001FF2  EFFD  F00F         	goto	u1471
  5073   001FF6  EFFF  F00F         	goto	u1470
  5074   001FFA                     u1471:
  5075   001FFA  EFE0  F00F         	goto	l2669
  5076   001FFE                     u1470:
  5077   001FFE                     
  5078                           ;colour_identify.c: 51:     *blue_read = *blue_read/3;
  5079   001FFE  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  5080   002002  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  5081   002006  CFDE F007          	movff	postinc2,___lwdiv@dividend
  5082   00200A  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  5083   00200E  0E00               	movlw	0
  5084   002010  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  5085   002012  0E03               	movlw	3
  5086   002014  6E09               	movwf	___lwdiv@divisor^0,c
  5087   002016  ECDC  F011         	call	___lwdiv	;wreg free
  5088   00201A  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  5089   00201E  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  5090   002022  C007  FFDE         	movff	?___lwdiv,postinc2
  5091   002026  C008  FFDD         	movff	?___lwdiv+1,postdec2
  5092   00202A  0012               	return		;funcret
  5093   00202C                     __end_of_collect_avg_readings:
  5094                           	callstack 0
  5095                           
  5096 ;; *************** function _color_read_Red *****************
  5097 ;; Defined at:
  5098 ;;		line 29 in file "color.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;		None
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  tmp             2    9[COMRAM] unsigned int 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  2    4[COMRAM] unsigned int 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0, cstack
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5114 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5115 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5116 ;;Total ram usage:        7 bytes
  5117 ;; Hardware stack levels used: 1
  5118 ;; Hardware stack levels required when called: 2
  5119 ;; This function calls:
  5120 ;;		_I2C_2_Master_Read
  5121 ;;		_I2C_2_Master_RepStart
  5122 ;;		_I2C_2_Master_Start
  5123 ;;		_I2C_2_Master_Stop
  5124 ;;		_I2C_2_Master_Write
  5125 ;; This function is called by:
  5126 ;;		_collect_avg_readings
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text26
  5131   0024D0                     __ptext26:
  5132                           	callstack 0
  5133   0024D0                     _color_read_Red:
  5134                           	callstack 27
  5135   0024D0                     
  5136                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  5137   0024D0  EC25  F014         	call	_I2C_2_Master_Start	;wreg free
  5138                           
  5139                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  5140   0024D4  0E52               	movlw	82
  5141   0024D6  EC1A  F014         	call	_I2C_2_Master_Write
  5142                           
  5143                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  5144   0024DA  0EB6               	movlw	182
  5145   0024DC  EC1A  F014         	call	_I2C_2_Master_Write
  5146                           
  5147                           ;color.c: 35:  I2C_2_Master_RepStart();
  5148   0024E0  EC2A  F014         	call	_I2C_2_Master_RepStart	;wreg free
  5149                           
  5150                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  5151   0024E4  0E53               	movlw	83
  5152   0024E6  EC1A  F014         	call	_I2C_2_Master_Write
  5153                           
  5154                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  5155   0024EA  0E01               	movlw	1
  5156   0024EC  EC25  F013         	call	_I2C_2_Master_Read
  5157   0024F0  6E07               	movwf	??_color_read_Red^0,c
  5158   0024F2  5007               	movf	??_color_read_Red^0,w,c
  5159   0024F4  6E0A               	movwf	color_read_Red@tmp^0,c
  5160   0024F6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5161                           
  5162                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5163   0024F8  0E00               	movlw	0
  5164   0024FA  EC25  F013         	call	_I2C_2_Master_Read
  5165   0024FE  6E07               	movwf	??_color_read_Red^0,c
  5166   002500  5007               	movf	??_color_read_Red^0,w,c
  5167   002502  6E09               	movwf	(??_color_read_Red+2)^0,c
  5168   002504  6A08               	clrf	(??_color_read_Red+1)^0,c
  5169   002506  500A               	movf	color_read_Red@tmp^0,w,c
  5170   002508  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5171   00250A  6E0A               	movwf	color_read_Red@tmp^0,c
  5172   00250C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5173   00250E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5174   002510  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5175                           
  5176                           ;color.c: 39:  I2C_2_Master_Stop();
  5177   002512  EC20  F014         	call	_I2C_2_Master_Stop	;wreg free
  5178   002516                     
  5179                           ;color.c: 40:  return tmp;
  5180   002516  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5181   00251A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5182   00251E  0012               	return		;funcret
  5183   002520                     __end_of_color_read_Red:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _color_read_Green *****************
  5187 ;; Defined at:
  5188 ;;		line 43 in file "color.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  tmp             2    9[COMRAM] unsigned int 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  2    4[COMRAM] unsigned int 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5204 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5205 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5206 ;;Total ram usage:        7 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 2
  5209 ;; This function calls:
  5210 ;;		_I2C_2_Master_Read
  5211 ;;		_I2C_2_Master_RepStart
  5212 ;;		_I2C_2_Master_Start
  5213 ;;		_I2C_2_Master_Stop
  5214 ;;		_I2C_2_Master_Write
  5215 ;; This function is called by:
  5216 ;;		_collect_avg_readings
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text27
  5221   002520                     __ptext27:
  5222                           	callstack 0
  5223   002520                     _color_read_Green:
  5224                           	callstack 27
  5225   002520                     
  5226                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  5227   002520  EC25  F014         	call	_I2C_2_Master_Start	;wreg free
  5228                           
  5229                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  5230   002524  0E52               	movlw	82
  5231   002526  EC1A  F014         	call	_I2C_2_Master_Write
  5232                           
  5233                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  5234   00252A  0EB8               	movlw	184
  5235   00252C  EC1A  F014         	call	_I2C_2_Master_Write
  5236                           
  5237                           ;color.c: 49:  I2C_2_Master_RepStart();
  5238   002530  EC2A  F014         	call	_I2C_2_Master_RepStart	;wreg free
  5239                           
  5240                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  5241   002534  0E53               	movlw	83
  5242   002536  EC1A  F014         	call	_I2C_2_Master_Write
  5243                           
  5244                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  5245   00253A  0E01               	movlw	1
  5246   00253C  EC25  F013         	call	_I2C_2_Master_Read
  5247   002540  6E07               	movwf	??_color_read_Green^0,c
  5248   002542  5007               	movf	??_color_read_Green^0,w,c
  5249   002544  6E0A               	movwf	color_read_Green@tmp^0,c
  5250   002546  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5251                           
  5252                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5253   002548  0E00               	movlw	0
  5254   00254A  EC25  F013         	call	_I2C_2_Master_Read
  5255   00254E  6E07               	movwf	??_color_read_Green^0,c
  5256   002550  5007               	movf	??_color_read_Green^0,w,c
  5257   002552  6E09               	movwf	(??_color_read_Green+2)^0,c
  5258   002554  6A08               	clrf	(??_color_read_Green+1)^0,c
  5259   002556  500A               	movf	color_read_Green@tmp^0,w,c
  5260   002558  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5261   00255A  6E0A               	movwf	color_read_Green@tmp^0,c
  5262   00255C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5263   00255E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5264   002560  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5265                           
  5266                           ;color.c: 53:  I2C_2_Master_Stop();
  5267   002562  EC20  F014         	call	_I2C_2_Master_Stop	;wreg free
  5268   002566                     
  5269                           ;color.c: 54:  return tmp;
  5270   002566  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5271   00256A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5272   00256E  0012               	return		;funcret
  5273   002570                     __end_of_color_read_Green:
  5274                           	callstack 0
  5275                           
  5276 ;; *************** function _color_read_Blue *****************
  5277 ;; Defined at:
  5278 ;;		line 57 in file "color.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  tmp             2    9[COMRAM] unsigned int 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  2    4[COMRAM] unsigned int 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5294 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5295 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5296 ;;Total ram usage:        7 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 2
  5299 ;; This function calls:
  5300 ;;		_I2C_2_Master_Read
  5301 ;;		_I2C_2_Master_RepStart
  5302 ;;		_I2C_2_Master_Start
  5303 ;;		_I2C_2_Master_Stop
  5304 ;;		_I2C_2_Master_Write
  5305 ;; This function is called by:
  5306 ;;		_collect_avg_readings
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text28
  5311   002570                     __ptext28:
  5312                           	callstack 0
  5313   002570                     _color_read_Blue:
  5314                           	callstack 27
  5315   002570                     
  5316                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  5317   002570  EC25  F014         	call	_I2C_2_Master_Start	;wreg free
  5318                           
  5319                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  5320   002574  0E52               	movlw	82
  5321   002576  EC1A  F014         	call	_I2C_2_Master_Write
  5322                           
  5323                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  5324   00257A  0EBA               	movlw	186
  5325   00257C  EC1A  F014         	call	_I2C_2_Master_Write
  5326                           
  5327                           ;color.c: 63:  I2C_2_Master_RepStart();
  5328   002580  EC2A  F014         	call	_I2C_2_Master_RepStart	;wreg free
  5329                           
  5330                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  5331   002584  0E53               	movlw	83
  5332   002586  EC1A  F014         	call	_I2C_2_Master_Write
  5333                           
  5334                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  5335   00258A  0E01               	movlw	1
  5336   00258C  EC25  F013         	call	_I2C_2_Master_Read
  5337   002590  6E07               	movwf	??_color_read_Blue^0,c
  5338   002592  5007               	movf	??_color_read_Blue^0,w,c
  5339   002594  6E0A               	movwf	color_read_Blue@tmp^0,c
  5340   002596  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5341                           
  5342                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5343   002598  0E00               	movlw	0
  5344   00259A  EC25  F013         	call	_I2C_2_Master_Read
  5345   00259E  6E07               	movwf	??_color_read_Blue^0,c
  5346   0025A0  5007               	movf	??_color_read_Blue^0,w,c
  5347   0025A2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5348   0025A4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5349   0025A6  500A               	movf	color_read_Blue@tmp^0,w,c
  5350   0025A8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5351   0025AA  6E0A               	movwf	color_read_Blue@tmp^0,c
  5352   0025AC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5353   0025AE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5354   0025B0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5355                           
  5356                           ;color.c: 67:  I2C_2_Master_Stop();
  5357   0025B2  EC20  F014         	call	_I2C_2_Master_Stop	;wreg free
  5358   0025B6                     
  5359                           ;color.c: 68:  return tmp;
  5360   0025B6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5361   0025BA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5362   0025BE  0012               	return		;funcret
  5363   0025C0                     __end_of_color_read_Blue:
  5364                           	callstack 0
  5365                           
  5366 ;; *************** function _I2C_2_Master_Write *****************
  5367 ;; Defined at:
  5368 ;;		line 45 in file "i2c.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  data_byte       1    wreg     unsigned char 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  data_byte       1    1[COMRAM] unsigned char 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5385 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5386 ;;Total ram usage:        1 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; Hardware stack levels required when called: 1
  5389 ;; This function calls:
  5390 ;;		_I2C_2_Master_Idle
  5391 ;; This function is called by:
  5392 ;;		_color_writetoaddr
  5393 ;;		_color_read_Red
  5394 ;;		_color_read_Green
  5395 ;;		_color_read_Blue
  5396 ;;		_color_read_Clear
  5397 ;;		_read_interrupt_status
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text29
  5402   002834                     __ptext29:
  5403                           	callstack 0
  5404   002834                     _I2C_2_Master_Write:
  5405                           	callstack 27
  5406                           
  5407                           ;incstack = 0
  5408                           ;I2C_2_Master_Write@data_byte stored from wreg
  5409   002834  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  5410   002836                     
  5411                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5412   002836  ECAD  F013         	call	_I2C_2_Master_Idle	;wreg free
  5413   00283A                     
  5414                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5415   00283A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5416   00283E  0012               	return		;funcret
  5417   002840                     __end_of_I2C_2_Master_Write:
  5418                           	callstack 0
  5419                           
  5420 ;; *************** function _I2C_2_Master_Stop *****************
  5421 ;; Defined at:
  5422 ;;		line 39 in file "i2c.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      void 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5440 ;;Total ram usage:        0 bytes
  5441 ;; Hardware stack levels used: 1
  5442 ;; Hardware stack levels required when called: 1
  5443 ;; This function calls:
  5444 ;;		_I2C_2_Master_Idle
  5445 ;; This function is called by:
  5446 ;;		_color_writetoaddr
  5447 ;;		_color_read_Red
  5448 ;;		_color_read_Green
  5449 ;;		_color_read_Blue
  5450 ;;		_color_read_Clear
  5451 ;;		_read_interrupt_status
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text30
  5456   002840                     __ptext30:
  5457                           	callstack 0
  5458   002840                     _I2C_2_Master_Stop:
  5459                           	callstack 27
  5460   002840                     
  5461                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5462   002840  ECAD  F013         	call	_I2C_2_Master_Idle	;wreg free
  5463   002844                     
  5464                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5465   002844  010E               	movlb	14	; () banked
  5466   002846  85DA               	bsf	218,2,b	;volatile
  5467   002848                     
  5468                           ; BSR set to: 14
  5469   002848  0012               	return		;funcret
  5470   00284A                     __end_of_I2C_2_Master_Stop:
  5471                           	callstack 0
  5472                           
  5473 ;; *************** function _I2C_2_Master_Start *****************
  5474 ;; Defined at:
  5475 ;;		line 27 in file "i2c.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5493 ;;Total ram usage:        0 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 1
  5496 ;; This function calls:
  5497 ;;		_I2C_2_Master_Idle
  5498 ;; This function is called by:
  5499 ;;		_color_writetoaddr
  5500 ;;		_color_read_Red
  5501 ;;		_color_read_Green
  5502 ;;		_color_read_Blue
  5503 ;;		_color_read_Clear
  5504 ;;		_read_interrupt_status
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text31
  5509   00284A                     __ptext31:
  5510                           	callstack 0
  5511   00284A                     _I2C_2_Master_Start:
  5512                           	callstack 27
  5513   00284A                     
  5514                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5515   00284A  ECAD  F013         	call	_I2C_2_Master_Idle	;wreg free
  5516   00284E                     
  5517                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5518   00284E  010E               	movlb	14	; () banked
  5519   002850  81DA               	bsf	218,0,b	;volatile
  5520   002852                     
  5521                           ; BSR set to: 14
  5522   002852  0012               	return		;funcret
  5523   002854                     __end_of_I2C_2_Master_Start:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function _I2C_2_Master_RepStart *****************
  5527 ;; Defined at:
  5528 ;;		line 33 in file "i2c.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;		None
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      void 
  5535 ;; Registers used:
  5536 ;;		wreg, status,2, status,0, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5546 ;;Total ram usage:        0 bytes
  5547 ;; Hardware stack levels used: 1
  5548 ;; Hardware stack levels required when called: 1
  5549 ;; This function calls:
  5550 ;;		_I2C_2_Master_Idle
  5551 ;; This function is called by:
  5552 ;;		_color_read_Red
  5553 ;;		_color_read_Green
  5554 ;;		_color_read_Blue
  5555 ;;		_color_read_Clear
  5556 ;;		_read_interrupt_status
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text32
  5561   002854                     __ptext32:
  5562                           	callstack 0
  5563   002854                     _I2C_2_Master_RepStart:
  5564                           	callstack 27
  5565   002854                     
  5566                           ;i2c.c: 35:   I2C_2_Master_Idle();
  5567   002854  ECAD  F013         	call	_I2C_2_Master_Idle	;wreg free
  5568   002858                     
  5569                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5570   002858  010E               	movlb	14	; () banked
  5571   00285A  83DA               	bsf	218,1,b	;volatile
  5572   00285C                     
  5573                           ; BSR set to: 14
  5574   00285C  0012               	return		;funcret
  5575   00285E                     __end_of_I2C_2_Master_RepStart:
  5576                           	callstack 0
  5577                           
  5578 ;; *************** function _I2C_2_Master_Read *****************
  5579 ;; Defined at:
  5580 ;;		line 51 in file "i2c.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  ack             1    wreg     unsigned char 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  ack             1    2[COMRAM] unsigned char 
  5585 ;;  tmp             1    3[COMRAM] unsigned char 
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      unsigned char 
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;Total ram usage:        3 bytes
  5600 ;; Hardware stack levels used: 1
  5601 ;; Hardware stack levels required when called: 1
  5602 ;; This function calls:
  5603 ;;		_I2C_2_Master_Idle
  5604 ;; This function is called by:
  5605 ;;		_color_read_Red
  5606 ;;		_color_read_Green
  5607 ;;		_color_read_Blue
  5608 ;;		_color_read_Clear
  5609 ;;		_read_interrupt_status
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text33
  5614   00264A                     __ptext33:
  5615                           	callstack 0
  5616   00264A                     _I2C_2_Master_Read:
  5617                           	callstack 27
  5618                           
  5619                           ; BSR set to: 14
  5620                           ;incstack = 0
  5621                           ;I2C_2_Master_Read@ack stored from wreg
  5622   00264A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5623   00264C                     
  5624                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5625   00264C  ECAD  F013         	call	_I2C_2_Master_Idle	;wreg free
  5626   002650                     
  5627                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5628   002650  010E               	movlb	14	; () banked
  5629   002652  87DA               	bsf	218,3,b	;volatile
  5630                           
  5631                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5632   002654  ECAD  F013         	call	_I2C_2_Master_Idle	;wreg free
  5633   002658                     
  5634                           ;i2c.c: 57:   tmp = SSP2BUF;
  5635   002658  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5636                           
  5637                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5638   00265C  ECAD  F013         	call	_I2C_2_Master_Idle	;wreg free
  5639   002660                     
  5640                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5641   002660  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  5642   002662  B4D8               	btfsc	status,2,c
  5643   002664  EF36  F013         	goto	u1301
  5644   002668  EF3A  F013         	goto	u1300
  5645   00266C                     u1301:
  5646   00266C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5647   00266E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  5648   002670  EF3B  F013         	goto	u1318
  5649   002674                     u1300:
  5650   002674  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5651   002676                     u1318:
  5652   002676  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  5653   002678  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  5654   00267A  010E               	movlb	14	; () banked
  5655   00267C  51DA               	movf	218,w,b	;volatile
  5656   00267E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5657   002680  0BDF               	andlw	-33
  5658   002682  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5659   002684  6FDA               	movwf	218,b	;volatile
  5660   002686                     
  5661                           ; BSR set to: 14
  5662                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5663   002686  89DA               	bsf	218,4,b	;volatile
  5664   002688                     
  5665                           ; BSR set to: 14
  5666                           ;i2c.c: 61:   return tmp;
  5667   002688  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5668   00268A                     
  5669                           ; BSR set to: 14
  5670   00268A  0012               	return		;funcret
  5671   00268C                     __end_of_I2C_2_Master_Read:
  5672                           	callstack 0
  5673                           
  5674 ;; *************** function _I2C_2_Master_Idle *****************
  5675 ;; Defined at:
  5676 ;;		line 22 in file "i2c.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;		None
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;Total ram usage:        1 bytes
  5695 ;; Hardware stack levels used: 1
  5696 ;; This function calls:
  5697 ;;		Nothing
  5698 ;; This function is called by:
  5699 ;;		_I2C_2_Master_Start
  5700 ;;		_I2C_2_Master_RepStart
  5701 ;;		_I2C_2_Master_Stop
  5702 ;;		_I2C_2_Master_Write
  5703 ;;		_I2C_2_Master_Read
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text34
  5708   00275A                     __ptext34:
  5709                           	callstack 0
  5710   00275A                     _I2C_2_Master_Idle:
  5711                           	callstack 27
  5712   00275A                     l154:
  5713   00275A  010E               	movlb	14	; () banked
  5714   00275C  B5D8               	btfsc	216,2,b	;volatile
  5715   00275E  EFB3  F013         	goto	u1241
  5716   002762  EFB5  F013         	goto	u1240
  5717   002766                     u1241:
  5718   002766  EFAD  F013         	goto	l154
  5719   00276A                     u1240:
  5720   00276A                     
  5721                           ; BSR set to: 14
  5722   00276A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5723   00276E  0E1F               	movlw	31
  5724   002770  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  5725   002772  A4D8               	btfss	status,2,c
  5726   002774  EFBE  F013         	goto	u1251
  5727   002778  EFC0  F013         	goto	u1250
  5728   00277C                     u1251:
  5729   00277C  EFAD  F013         	goto	l154
  5730   002780                     u1250:
  5731   002780                     
  5732                           ; BSR set to: 14
  5733   002780  0012               	return		;funcret
  5734   002782                     __end_of_I2C_2_Master_Idle:
  5735                           	callstack 0
  5736                           
  5737 ;; *************** function ___lwdiv *****************
  5738 ;; Defined at:
  5739 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;  dividend        2    6[COMRAM] unsigned int 
  5742 ;;  divisor         2    8[COMRAM] unsigned int 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  quotient        2   10[COMRAM] unsigned int 
  5745 ;;  counter         1   12[COMRAM] unsigned char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  2    6[COMRAM] unsigned int 
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5756 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5758 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5759 ;;Total ram usage:        7 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_setMotorPWM
  5765 ;;		_collect_avg_readings
  5766 ;;		_normalise_readings
  5767 ;;		_make_master_closeness
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text35
  5772   0023B8                     __ptext35:
  5773                           	callstack 0
  5774   0023B8                     ___lwdiv:
  5775                           	callstack 29
  5776   0023B8  0E00               	movlw	0
  5777   0023BA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  5778   0023BC  0E00               	movlw	0
  5779   0023BE  6E0B               	movwf	___lwdiv@quotient^0,c
  5780   0023C0  5009               	movf	___lwdiv@divisor^0,w,c
  5781   0023C2  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5782   0023C4  B4D8               	btfsc	status,2,c
  5783   0023C6  EFE7  F011         	goto	u1351
  5784   0023CA  EFE9  F011         	goto	u1350
  5785   0023CE                     u1351:
  5786   0023CE  EF11  F012         	goto	l904
  5787   0023D2                     u1350:
  5788   0023D2  0E01               	movlw	1
  5789   0023D4  6E0D               	movwf	___lwdiv@counter^0,c
  5790   0023D6  EFF1  F011         	goto	l2489
  5791   0023DA                     l2487:
  5792   0023DA  90D8               	bcf	status,0,c
  5793   0023DC  3609               	rlcf	___lwdiv@divisor^0,f,c
  5794   0023DE  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5795   0023E0  2A0D               	incf	___lwdiv@counter^0,f,c
  5796   0023E2                     l2489:
  5797   0023E2  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  5798   0023E4  EFF6  F011         	goto	u1361
  5799   0023E8  EFF8  F011         	goto	u1360
  5800   0023EC                     u1361:
  5801   0023EC  EFED  F011         	goto	l2487
  5802   0023F0                     u1360:
  5803   0023F0                     l2491:
  5804   0023F0  90D8               	bcf	status,0,c
  5805   0023F2  360B               	rlcf	___lwdiv@quotient^0,f,c
  5806   0023F4  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5807   0023F6  5009               	movf	___lwdiv@divisor^0,w,c
  5808   0023F8  5C07               	subwf	___lwdiv@dividend^0,w,c
  5809   0023FA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5810   0023FC  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5811   0023FE  A0D8               	btfss	status,0,c
  5812   002400  EF04  F012         	goto	u1371
  5813   002404  EF06  F012         	goto	u1370
  5814   002408                     u1371:
  5815   002408  EF0B  F012         	goto	l2499
  5816   00240C                     u1370:
  5817   00240C  5009               	movf	___lwdiv@divisor^0,w,c
  5818   00240E  5E07               	subwf	___lwdiv@dividend^0,f,c
  5819   002410  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5820   002412  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5821   002414  800B               	bsf	___lwdiv@quotient^0,0,c
  5822   002416                     l2499:
  5823   002416  90D8               	bcf	status,0,c
  5824   002418  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5825   00241A  3209               	rrcf	___lwdiv@divisor^0,f,c
  5826   00241C  2E0D               	decfsz	___lwdiv@counter^0,f,c
  5827   00241E  EFF8  F011         	goto	l2491
  5828   002422                     l904:
  5829   002422  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  5830   002426  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5831   00242A  0012               	return		;funcret
  5832   00242C                     __end_of___lwdiv:
  5833                           	callstack 0
  5834                           
  5835 ;; *************** function _LEDSon_init *****************
  5836 ;; Defined at:
  5837 ;;		line 18 in file "LEDsOn.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      void 
  5844 ;; Registers used:
  5845 ;;		None
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;Total ram usage:        0 bytes
  5856 ;; Hardware stack levels used: 1
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_main
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text36
  5865   0027A8                     __ptext36:
  5866                           	callstack 0
  5867   0027A8                     _LEDSon_init:
  5868                           	callstack 30
  5869   0027A8                     
  5870                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  5871   0027A8  9288               	bcf	136,1,c	;volatile
  5872                           
  5873                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  5874   0027AA  9088               	bcf	136,0,c	;volatile
  5875                           
  5876                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  5877   0027AC  9884               	bcf	132,4,c	;volatile
  5878                           
  5879                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  5880   0027AE  9684               	bcf	132,3,c	;volatile
  5881                           
  5882                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  5883   0027B0  9086               	bcf	134,0,c	;volatile
  5884                           
  5885                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  5886   0027B2  9287               	bcf	135,1,c	;volatile
  5887                           
  5888                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  5889   0027B4  9E86               	bcf	134,7,c	;volatile
  5890                           
  5891                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  5892   0027B6  9881               	bcf	129,4,c	;volatile
  5893                           
  5894                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  5895   0027B8  8E7E               	bsf	126,7,c	;volatile
  5896                           
  5897                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  5898   0027BA  827F               	bsf	127,1,c	;volatile
  5899                           
  5900                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  5901   0027BC  8879               	bsf	121,4,c	;volatile
  5902                           
  5903                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  5904   0027BE  987C               	bcf	124,4,c	;volatile
  5905                           
  5906                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  5907   0027C0  9280               	bcf	128,1,c	;volatile
  5908                           
  5909                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  5910   0027C2  907E               	bcf	126,0,c	;volatile
  5911                           
  5912                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  5913   0027C4  9080               	bcf	128,0,c	;volatile
  5914                           
  5915                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  5916   0027C6  967C               	bcf	124,3,c	;volatile
  5917   0027C8  0012               	return		;funcret
  5918   0027CA                     __end_of_LEDSon_init:
  5919                           	callstack 0
  5920                           
  5921                           	psect	rparam
  5922   000000                     
  5923                           	psect	idloc
  5924                           
  5925                           ;Config register IDLOC0 @ 0x200000
  5926                           ;	unspecified, using default values
  5927   200000                     	org	2097152
  5928   200000  0FFF               	dw	4095
  5929                           
  5930                           ;Config register IDLOC1 @ 0x200002
  5931                           ;	unspecified, using default values
  5932   200002                     	org	2097154
  5933   200002  0FFF               	dw	4095
  5934                           
  5935                           ;Config register IDLOC2 @ 0x200004
  5936                           ;	unspecified, using default values
  5937   200004                     	org	2097156
  5938   200004  0FFF               	dw	4095
  5939                           
  5940                           ;Config register IDLOC3 @ 0x200006
  5941                           ;	unspecified, using default values
  5942   200006                     	org	2097158
  5943   200006  0FFF               	dw	4095
  5944                           
  5945                           ;Config register IDLOC4 @ 0x200008
  5946                           ;	unspecified, using default values
  5947   200008                     	org	2097160
  5948   200008  0FFF               	dw	4095
  5949                           
  5950                           ;Config register IDLOC5 @ 0x20000A
  5951                           ;	unspecified, using default values
  5952   20000A                     	org	2097162
  5953   20000A  0FFF               	dw	4095
  5954                           
  5955                           ;Config register IDLOC6 @ 0x20000C
  5956                           ;	unspecified, using default values
  5957   20000C                     	org	2097164
  5958   20000C  0FFF               	dw	4095
  5959                           
  5960                           ;Config register IDLOC7 @ 0x20000E
  5961                           ;	unspecified, using default values
  5962   20000E                     	org	2097166
  5963   20000E  0FFF               	dw	4095
  5964                           
  5965                           	psect	config
  5966                           
  5967                           ;Config register CONFIG1L @ 0x300000
  5968                           ;	External Oscillator mode Selection bits
  5969                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5970                           ;	Power-up default value for COSC bits
  5971                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5972   300000                     	org	3145728
  5973   300000  AA                 	db	170
  5974                           
  5975                           ;Config register CONFIG1H @ 0x300001
  5976                           ;	unspecified, using default values
  5977                           ;	Clock Out Enable bit
  5978                           ;	CLKOUTEN = 0x1, unprogrammed default
  5979                           ;	Clock Switch Enable bit
  5980                           ;	CSWEN = 0x1, unprogrammed default
  5981                           ;	Fail-Safe Clock Monitor Enable bit
  5982                           ;	FCMEN = 0x1, unprogrammed default
  5983   300001                     	org	3145729
  5984   300001  FF                 	db	255
  5985                           
  5986                           ;Config register CONFIG2L @ 0x300002
  5987                           ;	unspecified, using default values
  5988                           ;	Master Clear Enable bit
  5989                           ;	MCLRE = 0x1, unprogrammed default
  5990                           ;	Power-up Timer Enable bit
  5991                           ;	PWRTE = 0x1, unprogrammed default
  5992                           ;	Low-power BOR enable bit
  5993                           ;	LPBOREN = 0x1, unprogrammed default
  5994                           ;	Brown-out Reset Enable bits
  5995                           ;	BOREN = 0x3, unprogrammed default
  5996   300002                     	org	3145730
  5997   300002  FF                 	db	255
  5998                           
  5999                           ;Config register CONFIG2H @ 0x300003
  6000                           ;	unspecified, using default values
  6001                           ;	Brown Out Reset Voltage selection bits
  6002                           ;	BORV = 0x3, unprogrammed default
  6003                           ;	ZCD Disable bit
  6004                           ;	ZCD = 0x1, unprogrammed default
  6005                           ;	PPSLOCK bit One-Way Set Enable bit
  6006                           ;	PPS1WAY = 0x1, unprogrammed default
  6007                           ;	Stack Full/Underflow Reset Enable bit
  6008                           ;	STVREN = 0x1, unprogrammed default
  6009                           ;	Debugger Enable bit
  6010                           ;	DEBUG = 0x1, unprogrammed default
  6011                           ;	Extended Instruction Set Enable bit
  6012                           ;	XINST = 0x1, unprogrammed default
  6013   300003                     	org	3145731
  6014   300003  FF                 	db	255
  6015                           
  6016                           ;Config register CONFIG3L @ 0x300004
  6017                           ;	WDT Period Select bits
  6018                           ;	WDTCPS = 0x1F, unprogrammed default
  6019                           ;	WDT operating mode
  6020                           ;	WDTE = OFF, WDT Disabled
  6021   300004                     	org	3145732
  6022   300004  9F                 	db	159
  6023                           
  6024                           ;Config register CONFIG3H @ 0x300005
  6025                           ;	unspecified, using default values
  6026                           ;	WDT Window Select bits
  6027                           ;	WDTCWS = 0x7, unprogrammed default
  6028                           ;	WDT input clock selector
  6029                           ;	WDTCCS = 0x7, unprogrammed default
  6030   300005                     	org	3145733
  6031   300005  FF                 	db	255
  6032                           
  6033                           ;Config register CONFIG4L @ 0x300006
  6034                           ;	unspecified, using default values
  6035                           ;	Write Protection Block 0
  6036                           ;	WRT0 = 0x1, unprogrammed default
  6037                           ;	Write Protection Block 1
  6038                           ;	WRT1 = 0x1, unprogrammed default
  6039                           ;	Write Protection Block 2
  6040                           ;	WRT2 = 0x1, unprogrammed default
  6041                           ;	Write Protection Block 3
  6042                           ;	WRT3 = 0x1, unprogrammed default
  6043                           ;	Write Protection Block 3
  6044                           ;	WRT4 = 0x1, unprogrammed default
  6045                           ;	Write Protection Block 3
  6046                           ;	WRT5 = 0x1, unprogrammed default
  6047                           ;	Write Protection Block 3
  6048                           ;	WRT6 = 0x1, unprogrammed default
  6049                           ;	Write Protection Block 3
  6050                           ;	WRT7 = 0x1, unprogrammed default
  6051   300006                     	org	3145734
  6052   300006  FF                 	db	255
  6053                           
  6054                           ;Config register CONFIG4H @ 0x300007
  6055                           ;	unspecified, using default values
  6056                           ;	Configuration Register Write Protection bit
  6057                           ;	WRTC = 0x1, unprogrammed default
  6058                           ;	Boot Block Write Protection bit
  6059                           ;	WRTB = 0x1, unprogrammed default
  6060                           ;	Data EEPROM Write Protection bit
  6061                           ;	WRTD = 0x1, unprogrammed default
  6062                           ;	Scanner Enable bit
  6063                           ;	SCANE = 0x1, unprogrammed default
  6064                           ;	Low Voltage Programming Enable bit
  6065                           ;	LVP = 0x1, unprogrammed default
  6066   300007                     	org	3145735
  6067   300007  FF                 	db	255
  6068                           
  6069                           ;Config register CONFIG5L @ 0x300008
  6070                           ;	unspecified, using default values
  6071                           ;	UserNVM Program Memory Code Protection bit
  6072                           ;	CP = 0x1, unprogrammed default
  6073                           ;	DataNVM Memory Code Protection bit
  6074                           ;	CPD = 0x1, unprogrammed default
  6075   300008                     	org	3145736
  6076   300008  FF                 	db	255
  6077                           
  6078                           ;Config register CONFIG5H @ 0x300009
  6079                           ;	unspecified, using default values
  6080   300009                     	org	3145737
  6081   300009  FF                 	db	255
  6082                           
  6083                           ;Config register CONFIG6L @ 0x30000A
  6084                           ;	unspecified, using default values
  6085                           ;	Table Read Protection Block 0
  6086                           ;	EBTR0 = 0x1, unprogrammed default
  6087                           ;	Table Read Protection Block 1
  6088                           ;	EBTR1 = 0x1, unprogrammed default
  6089                           ;	Table Read Protection Block 2
  6090                           ;	EBTR2 = 0x1, unprogrammed default
  6091                           ;	Table Read Protection Block 3
  6092                           ;	EBTR3 = 0x1, unprogrammed default
  6093                           ;	Table Read Protection Block 4
  6094                           ;	EBTR4 = 0x1, unprogrammed default
  6095                           ;	Table Read Protection Block 5
  6096                           ;	EBTR5 = 0x1, unprogrammed default
  6097                           ;	Table Read Protection Block 6
  6098                           ;	EBTR6 = 0x1, unprogrammed default
  6099                           ;	Table Read Protection Block 7
  6100                           ;	EBTR7 = 0x1, unprogrammed default
  6101   30000A                     	org	3145738
  6102   30000A  FF                 	db	255
  6103                           
  6104                           ;Config register CONFIG6H @ 0x30000B
  6105                           ;	unspecified, using default values
  6106                           ;	Boot Block Table Read Protection bit
  6107                           ;	EBTRB = 0x1, unprogrammed default
  6108   30000B                     	org	3145739
  6109   30000B  FF                 	db	255
  6110                           tosu	equ	0xFFF
  6111                           tosh	equ	0xFFE
  6112                           tosl	equ	0xFFD
  6113                           stkptr	equ	0xFFC
  6114                           pclatu	equ	0xFFB
  6115                           pclath	equ	0xFFA
  6116                           pcl	equ	0xFF9
  6117                           tblptru	equ	0xFF8
  6118                           tblptrh	equ	0xFF7
  6119                           tblptrl	equ	0xFF6
  6120                           tablat	equ	0xFF5
  6121                           prodh	equ	0xFF4
  6122                           prodl	equ	0xFF3
  6123                           indf0	equ	0xFEF
  6124                           postinc0	equ	0xFEE
  6125                           postdec0	equ	0xFED
  6126                           preinc0	equ	0xFEC
  6127                           plusw0	equ	0xFEB
  6128                           fsr0h	equ	0xFEA
  6129                           fsr0l	equ	0xFE9
  6130                           wreg	equ	0xFE8
  6131                           indf1	equ	0xFE7
  6132                           postinc1	equ	0xFE6
  6133                           postdec1	equ	0xFE5
  6134                           preinc1	equ	0xFE4
  6135                           plusw1	equ	0xFE3
  6136                           fsr1h	equ	0xFE2
  6137                           fsr1l	equ	0xFE1
  6138                           bsr	equ	0xFE0
  6139                           indf2	equ	0xFDF
  6140                           postinc2	equ	0xFDE
  6141                           postdec2	equ	0xFDD
  6142                           preinc2	equ	0xFDC
  6143                           plusw2	equ	0xFDB
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8

Data Sizes:
    Strings     227
    Constant    0
    Data        18
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     92      95
    BANK0           160    137     143
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    normalise_readings@normalised_values	PTR unsigned int [3] size(2) Largest target is 18
		 -> main@normalised_values(BANK0[18]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_5(CODE[59]), STR_4(CODE[60]), STR_3(CODE[58]), STR_2(CODE[24]), 
		 -> STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 60
		 -> STR_5(CODE[59]), STR_4(CODE[60]), STR_3(CODE[58]), STR_2(CODE[24]), 
		 -> STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 60
		 -> STR_5(CODE[59]), STR_4(CODE[60]), STR_3(CODE[58]), STR_2(CODE[24]), 
		 -> STR_1(CODE[26]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2169$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_5(CODE[59]), STR_4(CODE[60]), STR_3(CODE[58]), STR_2(CODE[24]), 
		 -> STR_1(CODE[26]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2120$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2120$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    normalise_readings@buf	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    normalise_readings@expected_values	PTR unsigned int [3] size(2) Largest target is 18
		 -> main@expected_values(BANK0[18]), 

    collect_avg_readings@blue_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@blue_read(BANK0[2]), 

    collect_avg_readings@green_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@green_read(BANK0[2]), 

    collect_avg_readings@red_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@red_read(BANK0[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S532DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S532DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 


Critical Paths under _main in COMRAM

    _setMotorPWM->___lwdiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _collect_avg_readings->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_normalise_readings
    _normalise_readings->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                90    90      0   31661
                                             90 COMRAM     2     2      0
                                             56 BANK0     81    81      0
                  _I2C_2_Master_Init
                        _LEDSon_init
               _collect_avg_readings
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                 _normalise_readings
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3339
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _normalise_readings                                  31    19     12   14302
                                             25 BANK0     31    19     12
                            ___lwdiv
                             ___wmul
                                _abs
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   10048
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9087
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6    8735
                                             62 COMRAM    20    14      6
                               _dtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3255
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4105
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2227
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     370
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     598
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     598
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _collect_avg_readings                                11     5      6    2163
                                             13 COMRAM    11     5      6
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1260
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _collect_avg_readings
     ___lwdiv
       ___wmul (ARG)
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _normalise_readings
     ___lwdiv
     ___wmul
     _abs
       ___aomod (ARG)
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _utoa
             ___lodiv
             ___lomod
             _pad
   _sendStringSerial4
   _setMotorPWM
     ___lwdiv
     ___wmul
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     89      8F       5       89.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5C      5F       1      100.0%
BITBIGSFRllhhhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllhhhl     37      0       0      42        0.0%
BITBIGSFRllhhhl     2D      0       0      45        0.0%
BITBIGSFRllllhl     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllhhhl     1E      0       0      46        0.0%
BITBIGSFRhhlll      1D      0       0      36        0.0%
BITBIGSFRllhhl      11      0       0      47        0.0%
BITBIGSFRllllhl      F      0       0      54        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhl      9      0       0      53        0.0%
BITBIGSFRllhhhl      8      0       0      43        0.0%
BITBIGSFRlllllh      6      0       0      55        0.0%
BITBIGSFRllllhh      6      0       0      51        0.0%
BITBIGSFRlllhl       5      0       0      50        0.0%
BITBIGSFRlllhh       3      0       0      49        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRllhhhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhhhh      1      0       0      37        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhl      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllhl        1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     170      57        0.0%
DATA                 0      0     170       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 05 20:52:41 2022

                     _color_read_Red 24D0                      _color_read_Blue 2570  
                                 l22 2808                                   l31 25BE  
                                 l25 251E                                   l19 26FE  
                                 l28 256E                                   l95 1D7A  
                                 l88 233C                  ___wmul@multiplicand 0003  
                   _color_read_Green 2520                                  l301 122E  
                                l151 2758                                  l160 2852  
                                l154 275A                                  l163 285C  
                                l172 268A                                  l253 27C8  
                                l157 2780                                  l413 27A6  
                                l166 2848                                  l360 27E8  
                                l169 283E                                  l372 2820  
                                l540 1EDE                                  l527 1C0E  
                                l296 202A                                  l369 280C  
                                l378 272E                                  l911 242A  
                                l904 2422                                  l851 20FA  
                                l861 21CA                                  l858 211A  
                                l868 21EA                                  u820 21FE  
                                u901 1AF6                                  u821 21FA  
                                u910 1B1A                                  u830 2210  
                                u911 1B16                                  u831 220C  
                                u920 1B44                                  u840 2238  
                                u921 1B40                                  u841 2234  
                                u930 1B84                                  u850 226E  
                                u931 1B80                                  u851 226A  
                                u940 1BCE                                  u860 2648  
                                u941 1BCA                                  u861 2644  
                                u950 1D8E                                  u870 26A6  
                                u951 1D8A                                  u871 26A2  
                                u880 1A9A                                  u960 1DC0  
                                u881 1A96                                  u961 1DBC  
                                u890 1ACC                                  u970 1DFE  
                                u891 1AC8                                  u971 1DFA  
                                u980 1E28                                  u981 1E24  
                                u990 1E56                                  u991 1E52  
normalise_readings@normalised_values 0083                                  _abs 268C  
                                _pad 233E                                  wreg 000FE8  
                               l1120 2360                                 l1131 12C4  
                               ?_abs 0013                                 l1124 23B6  
                               l1132 130A                                 l2101 226E  
                               l2111 2628                                 l1143 14AC  
                               l2121 1A9A                                 l2113 268C  
                               l2105 2606                                 l1129 12BC  
                               l2201 2056                                 l1162 16E6  
                               l2131 1AF0                                 l2123 1ABA  
                               l1091 26CA                                 l2115 26A6  
                               l2107 2612                                 l2211 20C0  
                               l2203 205E                                 l1155 1A86  
                               l1147 18EE                                 l2141 1B44  
                               l2133 1AFC                                 l2125 1ABE  
                               l2117 1A88                                 l2109 2624  
                               l2213 20E0                                 l2205 2072  
                               l2221 213A                                 l1149 18F6  
                               l2301 18C6                                 l1174 24CE  
                               l2151 1BB8                                 l2143 1B56  
                               l2135 1B1A                                 l2127 1ACC  
                               l2119 1A8C                                 l2215 20E2  
                               l2207 2080                                 l2231 21B2  
                               l2223 2142                                 l2311 1936  
                               l2303 18E2                                 l1088 26C2  
                               l2401 2660                                 l2145 1B84  
                               l2137 1B22                                 l2153 1BBE  
                               l2129 1AEC                                 l2161 1D7C  
                               l2241 236C                                 l2217 20F4  
                               l2209 2092                                 l2233 21C4  
                               l2225 2156                                 l2321 1A2E  
                               l2313 19AC                                 l2305 191E  
                               l1186 22B4                                 l1194 2648  
                               l1098 247C                                 l2331 276A  
                               l2403 2686                                 l2411 281C  
                               l2155 1BCE                                 l2147 1BA4  
                               l2139 1B36                                 l2171 1DC0  
                               l2163 1D80                                 l2091 21EC  
                               l2243 2380                                 l2235 233E  
                               l2251 1250                                 l2227 2164  
                               l2219 211C                                 l2323 1A4C  
                               l2315 19B2                                 l2307 1926  
                               l2501 241C                                 l2405 2688  
                               l2157 1BEE                                 l2149 1BA6  
                               l2181 1E28                                 l2173 1DE0  
                               l2165 1D8E                                 l1197 285E  
                               l2093 21FE                                 l2245 2384  
                               l2237 234C                                 l2261 12CC  
                               l2253 1264                                 l2229 2192  
                               l2325 1A66                                 l2317 19B8  
                               l2309 1930                                 l2341 14F6  
                               l2333 14AE                                 l2413 247E  
                               l2431 2744                                 l2423 2730  
                               l2511 26F4                                 l2503 26CC  
                               l2191 1E9E                                 l2183 1E56  
                               l2175 1DFE                                 l2167 1DAE  
                               l2095 2210                                 l2247 23A2  
                               l2239 2358                                 l2271 1306  
                               l2263 12DC                                 l2255 1274  
                               l2319 1A1C                                 l2343 1506  
                               l2335 14D6                                 l2415 248A  
                               l2329 275A                                 l2433 2746  
                               l2425 273A                                 l2505 26D0  
                               l2521 2316                                 l2513 22B6  
                               l2409 280C                                 l2193 1EBE  
                               l2185 1E76                                 l2177 1E06  
                               l2169 1DB2                                 l2097 221A  
                               l2281 13AA                                 l2273 1312  
                               l2265 12E2                                 l2257 1294  
                               l2249 1230                                 l2353 15CC  
                               l2345 1526                                 l2337 14E4  
                               l2417 24A6                                 l2451 25B6  
                               l2443 2520                                 l2427 2740  
                               l2435 27EC                                 l2507 26DA  
                               l2531 2330                                 l2523 2318  
                               l2515 22BE                                 l2187 1E88  
                               l2179 1E1A                                 l2099 2238  
                               l2291 1466                                 l2283 13B0  
                               l2275 131C                                 l2267 12F2  
                               l2259 12B0                                 l2363 1678  
                               l2355 15EC                                 l2347 1546  
                               l2339 14F2                                 l2419 24C6  
                               l2381 284E                                 l2445 2566  
                               l2437 24D0                                 l2429 2742  
                               l2509 26EA                                 l2533 233A  
                               l2525 2322                                 l2517 22E8  
                               l2621 27D6                                 l2189 1E8E  
                               l2293 1476                                 l2277 1322  
                               l2285 1414                                 l2269 12FE  
                               l2197 202C                                 l2357 1648  
                               l2365 16A8                                 l2349 159C  
                               l2461 244E                                 l2701 10E4  
                               l2541 1C94                                 l2615 27A8  
                               l2391 2854                                 l2383 2836  
                               l2439 2516                                 l2631 1EE0  
                               l2527 2324                                 l2519 230C  
                               l2623 27D8                                 l2471 2712  
                               l2295 147C                                 l2287 142E  
                               l2279 13A4                                 l2199 2038  
                               l2463 246A                                 l2455 242C  
                               l2711 121E                                 l2703 119A  
                               l2543 1C98                                 l2535 1C10  
                               l2481 23B8                                 l2393 2858  
                               l2385 283A                                 l2449 2570  
                               l2641 1F10                                 l2529 232E  
                               l2625 27E2                                 l2617 27CA  
                               l2473 2716                                 l2297 148C  
                               l2289 144C                                 l2369 16BA  
                               l2457 243E                                 l2705 11F4  
                               l2545 1CDA                                 l2537 1C2C  
                               l2801 17D4                                 l2491 23F0  
                               l2483 23C0                                 l2395 264C  
                               l2379 284A                                 l2387 2840  
                               l2643 1F12                                 l2627 27E4  
                               l2619 27D4                                 l2475 2782  
                               l2467 2700                                 l2459 2446  
                               l2707 1200                                 l2547 1CF6  
                               l2539 1C80                                 l2811 183A  
                               l2803 17E0                                 l2493 23F6  
                               l2485 23D2                                 l2397 2650  
                               l2389 2844                                 l2661 1F90  
                               l2653 1F52                                 l2645 1F22  
                               l2637 1EE4                                 l2629 27E6  
                               l2477 279E                                 l2469 2704  
                               l2709 121A                                 l2549 1D3A  
                               l2821 188E                                 l2813 183C  
                               l2805 17F8                                 l2495 240C  
                               l2487 23DA                                 l2399 2658  
                               l2671 1FD4                                 l2663 1FBC  
                               l2655 1F66                                 l2647 1F4E  
                               l2639 1EF8                                 l2823 18A6  
                               l2815 1872                                 l2807 1816  
                               l2751 16F0                                 l2497 2414  
                               l2489 23E2                                 l2673 1FEC  
                               l2657 1F7E                                 l2817 188A  
                               l2809 1822                                 l2761 1706  
                               l2753 16F4                                 l2499 2416  
                               l2675 1FEE                                 l2659 1F80  
                               l2691 0FC8                                 l2819 188C  
                               l2771 1724                                 l2763 170A  
                               l2755 16F8                                 l2747 16E8  
                               l2677 1FFE                                 l2669 1FC0  
                               l2693 0FE2                                 l2685 0EEC  
                               l2781 1740                                 l2773 1728  
                               l2765 170E                                 l2757 16FC  
                               l2749 16EC                                 ?_pad 0011  
                               l2695 1028                                 l2687 0F6E  
                               l2679 0EE6                                 l2791 1768  
                               l2783 1746                                 l2775 172C  
                               l2767 1716                                 l2759 1700  
                               l2697 107E                                 l2689 0FBC  
                               l2793 1770                                 l2785 1752  
                               l2777 1730                                 l2769 171E  
                               l2947 169A                                 l2699 10D8  
                               l2795 1778                                 l2787 175E  
                               l2779 1738                                 l2797 178A  
                               l2789 175E                                 l2799 17A6  
                               STR_1 0EB2                                 STR_2 0ECC  
                               STR_3 0E78                                 STR_4 0E01  
                               STR_5 0E3D                                 u1000 1E9E  
                               u1001 1E9A                                 u1011 2032  
                               u1100 1260                                 u1020 2056  
                               u1101 125A                                 u1021 2052  
                               u1110 1262                                 u1030 2080  
                               u1031 207C                                 u1120 1274  
                               u1040 20C0                                 u1200 18E2  
                               u1121 1270                                 u1041 20BC  
                               u1201 18DE                                 u1130 12B0  
                               u1050 213A                                 u1210 1A2E  
                               u1131 12AC                                 u1051 2136  
                               u1211 1A2A                                 u1300 2674  
                               u1140 12DC                                 u1060 2164  
                               u1220 1A4C                         ?_LEDSon_init 0001  
                               u1301 266C                                 u1141 12D8  
                               u1061 2160                                 u1221 1A48  
                               u1150 12F2                                 u1070 2192  
                               u1230 1A66                                 u1151 12EE  
                               u1071 218E                                 u1231 1A62  
                               u1240 276A                                 u1320 281C  
                               u1080 234C                                 u1160 142E  
                               u1241 2766                                 u1321 2818  
                               u1081 2348                                 u1161 142A  
                               u1250 2780                                 u1090 23A2  
                               u1170 144C                                 u1330 24C6  
                               u1251 277C                                 u1091 239E  
                               u1171 1448                                 u1331 24C2  
                               u1340 272E                                 u1180 1466  
                               u1260 14D6                                 u1341 272A  
                               u1181 1462                                 u1261 14D2  
                               u1350 23D2                                 u1318 2676  
                               u1190 1476                                 u1270 1526  
                               u1351 23CE                                 u1191 1472  
                               u1271 1522                                 u1511 1782  
                               u1360 23F0                                 u1280 1546  
                       _BAUD4CONbits 000EE9                                 u1361 23EC  
                               u1281 1542                                 u1370 240C  
                               u1450 1F22                                 u1290 15EC  
                               u1371 2408                                 u1451 1F1E  
                               u1291 15E8                                 u1460 1F90  
                               u1380 1C2C                                 u1461 1F8C  
                               u1381 1C28                                 u1470 1FFE  
                               u1390 1CF6                                 u1471 1FFA  
                               u1391 1CF2                                 u1607 1898  
                               u1480 122E                                 u1481 122A  
                               u1617 18B0                                 _T2PR 000FBC  
                               u1627 0FD4                                 u1637 10F0  
                               u1647 120C                                 u1657 26E0  
                               u1577 17EA                                 u1667 1F02  
                               u1587 182C                                 u1677 1F70  
                               u1597 187C                                 u1687 1FDE  
         normalise_readings@red_read 007B                                 abs@a 0013  
                               _dbuf 0150                                 _main 16E8  
                               _dtoa 1230                                 _prec 00EB  
                               pad@i 0018                                 pad@p 0015  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf2 000FDF                                 fsr1l 000FE1  
                               pad@w 001A                                 fsr2l 000FD9  
                               _utoa 18C6                                 prodh 000FF4  
                               prodl 000FF3                                 start 0002  
             __end_of_color_read_Red 2520          normalise_readings@blue_read 007F  
                       ___param_bank 000000                                ??_abs 0015  
                              ??_pad 0017                      __end_of___aodiv 1C10  
                              ?_main 0001                                ?_dtoa 001C  
                    __end_of___aomod 1EE0                                ?_utoa 001C  
                    __end_of___lodiv 211C                      __end_of___lomod 21EC  
                    __end_of___lwdiv 242C                         vfpfcnvrt@fmt 0041  
                       main@red_read 00D1              __end_of_sendCharSerial4 2822  
         __end_of_I2C_2_Master_Start 2854           __end_of_I2C_2_Master_Write 2840  
                              _flags 00ED                                _fputc 21EC  
                              _fputs 2606                                pad@fp 0011  
                              _width 00E9                                _putch 285E  
                              dtoa@d 001E                                dtoa@i 003C  
                              dtoa@n 0034                                dtoa@p 0030  
                              dtoa@s 003E                                dtoa@w 0032  
                normalise_readings@i 0097                                tablat 000FF5  
                              plusw1 000FE3                                plusw2 000FDB  
                              utoa@d 001E                                utoa@i 003A  
                              utoa@n 0032                                utoa@p 0030  
                              utoa@w 002E                                status 000FD8  
                    __end_of_sprintf 247E                     ___lodiv@dividend 0001  
            __end_of_color_read_Blue 25C0                _I2C_2_Master_RepStart 2854  
                    ?_color_read_Red 0005                      __initialization 25C0  
                       __end_of_main 18C6                         __end_of_dtoa 14AE  
                       __end_of_utoa 1A88                               ??_main 005B  
                             ??_dtoa 0026                               ??_utoa 0026  
                      __activetblptr 000003                        main@blue_read 00D5  
                   ___lodiv@quotient 0011                         ?_setMotorPWM 000E  
                             ?_fputc 0001                               ?_fputs 000A  
                             _CCPR1H 000FAA                               _CCPR2H 000FA6  
                             _CCPR3H 000F25                               _CCPR4H 000F21  
       collect_avg_readings@red_read 000E                               ?_putch 0001  
                             _RC0PPS 000E62                               _RC4REG 000EE3  
                             _RE2PPS 000E74                               _RD5PPS 000E6F  
                             _RC7PPS 000E69                               _RD6PPS 000E70  
                             _RE4PPS 000E76                               _RG6PPS 000E88  
           __end_of_color_click_init 2700                               _RX4PPS 000E15  
                             _TX4REG 000EE4                         _CCPTMRS0bits 000FAD  
                       vfprintf@cfmt 0059                            ??___aodiv 0011  
                          ??___aomod 0011                               ___wmul 2782  
                 _normalise_readings 0EE6                            ??___lodiv 0011  
                          ??___lomod 0011                            ??___lwdiv 000B  
                             clear_0 25E6                               isa$std 000001  
                             pad@buf 0013                               dtoa@fp 001C  
                ?_normalise_readings 0079                               fputc@c 0001  
                             fputs@c 000E                               fputs@i 000F  
                             fputs@s 000A                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     ?_sendCharSerial4 0001  
                             putch@c 0001                     __end_of_vfprintf 24D0  
                             utoa@fp 001C                    ??_initDCmotorsPWM 0001  
                          ??_sprintf 005B                           __accesstop 0060  
            __end_of__initialization 2600             __end_of_color_read_Green 2570  
             ?_I2C_2_Master_RepStart 0001                 ??_normalise_readings 0085  
                      ___rparam_used 000001                     ?_color_read_Blue 0005  
       __end_of_collect_avg_readings 202C                       __pcstackCOMRAM 0001  
                       __pidataBANK1 2822           collect_avg_readings@i_1463 0017  
         collect_avg_readings@i_1465 0018                        __end_of_fputc 22B6  
                      __end_of_fputs 264A                        __end_of_putch 2860  
              main@normalised_values 0098                              ??_fputc 0005  
                            ??_fputs 000E                              ??_putch 0001  
                         __pbssBANK0 00E9                           __pbssBANK1 0100  
                  _color_writetoaddr 27EA                         _T2CLKCONbits 000FBF  
                 ?_color_writetoaddr 0003                              ?___wmul 0001  
                ??_color_writetoaddr 0004                       main@green_read 00D3  
                            _SP4BRGH 000EE6                              _SP4BRGL 000EE5  
                            _SSP2ADD 000ED6                              _SSP2BUF 000ED5  
                   ___lomod@dividend 0001               color_writetoaddr@value 0003  
                   ??_color_read_Red 0007            __end_of_color_writetoaddr 280A  
                 _I2C_2_Master_Start 284A                           _initUSART4 27CA  
                 _I2C_2_Master_Write 2834                              __Hparam 0000  
                            __Lparam 0000                    color_read_Red@tmp 000A  
            sendStringSerial4@string 0002                              ___aodiv 1A88  
                            ___aomod 1D7C                              ___lodiv 202C  
                ?_I2C_2_Master_Start 0001                              ___lomod 211C  
                            ___lwdiv 23B8                  ?_I2C_2_Master_Write 0001  
                          ?_vfprintf 0053                         __psmallconst 0E00  
                            __pcinit 25C0                              __ramtop 0E00  
                            __ptext0 16E8                              __ptext1 1C10  
                            __ptext2 0EE6                              __ptext3 242C  
                            __ptext4 247E                              __ptext5 14AE  
                            __ptext6 18C6                              __ptext7 211C  
                            __ptext8 202C                              __ptext9 1230  
                          _T2CONbits 000FBD                            _T2HLTbits 000FBE  
                      _RxBufWriteCnt 005F                 _collect_avg_readings 1EE0  
                            main@buf 00AA                              _sprintf 242C  
               ??_I2C_2_Master_Start 0002                 ??_I2C_2_Master_Write 0002  
               end_of_initialization 2600       collect_avg_readings@green_read 0010  
              normalise_readings@buf 0079                              fputc@fp 0003  
                            fputs@fp 000C                    ?_color_click_init 0001  
                 ??_color_click_init 0005                    __end_of_vfpfcnvrt 16E8  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                     vfpfcnvrt@convarg 0049  
                         main@F14649 0170                           ??_vfprintf 0059  
                    _initDCmotorsPWM 22B6                   setMotorPWM@negDuty 0013  
  normalise_readings@expected_values 0081                            _TRISAbits 000F81  
                 setMotorPWM@posDuty 0012                            _TRISCbits 000F83  
                          _TRISDbits 000F84                            _TRISEbits 000F85  
                          _TRISFbits 000F86                            _TRISGbits 000F87  
                          _TRISHbits 000F88                ?_collect_avg_readings 000E  
                main@expected_values 00BE             color_writetoaddr@address 0004  
            ??_I2C_2_Master_RepStart 0002                          _CCP1CONbits 000FAB  
                       _EUSART4RXbuf 013C                         _EUSART4TXbuf 0100  
                        _CCP2CONbits 000FA7                    ?_color_read_Green 0005  
                        _CCP3CONbits 000F26                          ?_initUSART4 0001  
                        _CCP4CONbits 000F22            sendCharSerial4@charToSend 0001  
                         main@motorL 00D7                           main@motorR 00E0  
                 ??_color_read_Green 0007                          vfpfcnvrt@ap 0043  
                        vfpfcnvrt@cp 0051                          vfpfcnvrt@fp 003F  
                     __end_of___wmul 27A8                  start_initialization 25C0  
                    ___lodiv@divisor 0009                      ___lodiv@counter 0019  
                        __end_of_abs 26CC                          __end_of_pad 23B8  
                      _TxBufWriteCnt 005E                        ??_LEDSon_init 0001  
                color_read_Green@tmp 000A              __end_of_initDCmotorsPWM 233E  
                        vfprintf@fmt 0055                             ??___wmul 0005  
                        __pdataBANK1 0170                          __pbssCOMRAM 005D  
             ??_collect_avg_readings 0014                        __pcstackBANK0 0060  
                   ___aodiv@dividend 0001                  __end_of_LEDSon_init 27CA  
                   ___lwdiv@dividend 0007                            _dtoa$2197 002E  
                           ?___aodiv 0001                             ?___aomod 0001  
                   ___aodiv@quotient 0013                             ?___lodiv 0001  
                           ?___lomod 0001                             ?___lwdiv 0007  
               I2C_2_Master_Read@ack 0003                 I2C_2_Master_Read@tmp 0004  
                    ___lomod@divisor 0009                          __smallconst 0E00  
                    ___lomod@counter 0011                    _I2C_2_Master_Idle 275A  
                  _I2C_2_Master_Init 2730                    _I2C_2_Master_Read 264A  
                  _I2C_2_Master_Stop 2840                         _RxBufReadCnt 00EE  
                 ?_I2C_2_Master_Idle 0001                   ?_I2C_2_Master_Init 0001  
                 ?_I2C_2_Master_Read 0001                        ??_setMotorPWM 0010  
                 ?_I2C_2_Master_Stop 0001                     ___lwdiv@quotient 000B  
                           ?_sprintf 0060                    _sendStringSerial4 2700  
                ??_I2C_2_Master_Idle 0001                  ??_I2C_2_Master_Init 0001  
                ??_I2C_2_Master_Read 0002                       ___wmul@product 0005  
                           _LATAbits 000F79                  ??_I2C_2_Master_Stop 0002  
                           _LATDbits 000F7C                             _LATFbits 000F7E  
                           _LATGbits 000F7F                             _LATHbits 000F80  
                 ?_sendStringSerial4 0002                             _PIE4bits 000E2D  
                           _PIR4bits 000E37                     ?_initDCmotorsPWM 0001  
          normalise_readings@normalB 008F            normalise_readings@normalG 008D  
          normalise_readings@normalR 008B                    ??_sendCharSerial4 0001  
                           _SSP2CON2 000EDA                  ??_sendStringSerial4 0004  
                           _SSP2STAT 000ED8                            _vfpfcnvrt 14AE  
          __end_of_I2C_2_Master_Idle 2782            __end_of_I2C_2_Master_Init 275A  
          __end_of_I2C_2_Master_Read 268C                    ___wmul@multiplier 0001  
          __end_of_I2C_2_Master_Stop 284A                         setMotorPWM@m 000E  
        I2C_2_Master_Write@data_byte 0002         normalise_readings@green_read 007D  
                  ??_color_read_Blue 0007                         _TxBufReadCnt 005D  
                          copy_data0 25D4            __end_of_sendStringSerial4 2730  
                        _LEDSon_init 27A8        __end_of_I2C_2_Master_RepStart 285E  
                 color_read_Blue@tmp 000A                  __end_of_setMotorPWM 1D7C  
                       ??_initUSART4 0001                             __Hrparam 0000  
                         vfprintf@ap 0057                             __Lrparam 0000  
                         vfprintf@fp 0053                           ?_vfpfcnvrt 003F  
                    ___aodiv@divisor 0009                      ___aodiv@counter 0011  
                         _ANSELDbits 000EA7                           sprintf@fmt 0062  
                    ___lwdiv@divisor 0009                   __end_of_initUSART4 27EA  
                    ___lwdiv@counter 000D                             __ptext10 233E  
                           __ptext11 2606                             __ptext20 27CA  
                           __ptext12 21EC                             __ptext21 22B6  
                           __ptext13 285E                             __ptext30 2840  
                           __ptext22 26CC                             __ptext14 268C  
                           __ptext31 284A                             __ptext23 27EA  
                           __ptext15 1D7C                             __ptext32 2854  
                           __ptext24 2730                             __ptext16 1A88  
                           __ptext33 264A                             __ptext25 1EE0  
                           __ptext17 2700                             __ptext34 275A  
                           __ptext26 24D0                             __ptext18 280A  
                           __ptext35 23B8                             __ptext27 2520  
                           __ptext19 2782                             __ptext36 27A8  
                           __ptext28 2570                             __ptext29 2834  
                       _SSP2CON1bits 000ED9                         _SSP2CON2bits 000EDA  
                           isa$xinst 000000                           _RC4STAbits 000EE7  
                           _vfprintf 247E                     ___aomod@dividend 0001  
              collect_avg_readings@i 0016                          _setMotorPWM 1C10  
      collect_avg_readings@blue_read 0012                            sprintf@ap 006C  
         __end_of_normalise_readings 1230                      ___aomod@divisor 0009  
                        ??_vfpfcnvrt 0045                      ___aomod@counter 0011  
                   _color_click_init 26CC                             sprintf@f 006E  
                           sprintf@s 0060                           _SSP2DATPPS 000E1D  
                         _SSP2CLKPPS 000E1C                           _TX4STAbits 000EE8  
                       ___aodiv@sign 0012                      _sendCharSerial4 280A  
      normalise_readings@differenceB 0095        normalise_readings@differenceG 0093  
      normalise_readings@differenceR 0091                         ___aomod@sign 0012  
                       main@PWMcycle 00D0  
