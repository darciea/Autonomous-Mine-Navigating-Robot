

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 09 11:13:41 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Version 2.35
    65                           ; Generated 05/05/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F67K40 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	idataBANK1
   101   001F2E                     __pidataBANK1:
   102                           	callstack 0
   103                           
   104                           ;initializer for main@F14645
   105   001F2E  32C8               	dw	13000
   106   001F30  0A28               	dw	2600
   107   001F32  0708               	dw	1800
   108   001F34  20D0               	dw	8400
   109   001F36  1964               	dw	6500
   110   001F38  1388               	dw	5000
   111   001F3A  1130               	dw	4400
   112   001F3C  0708               	dw	1800
   113   001F3E  0AF0               	dw	2800
   114   000000                     _TRISBbits	set	3970
   115   000000                     _TX4REG	set	3812
   116   000000                     _RC4STAbits	set	3815
   117   000000                     _SP4BRGH	set	3814
   118   000000                     _LATGbits	set	3967
   119   000000                     _TRISAbits	set	3969
   120   000000                     _TRISFbits	set	3974
   121   000000                     _TRISDbits	set	3972
   122   000000                     _TRISGbits	set	3975
   123   000000                     _SSP2CON2bits	set	3802
   124   000000                     _INT1PPS	set	3569
   125   000000                     _RX4PPS	set	3605
   126   000000                     _SSP2CLKPPS	set	3612
   127   000000                     _SSP2DATPPS	set	3613
   128   000000                     _RC7PPS	set	3689
   129   000000                     _RE2PPS	set	3700
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _TRISHbits	set	3976
   133   000000                     _T2PR	set	4028
   134   000000                     _T2CONbits	set	4029
   135   000000                     _CCPR2H	set	4006
   136   000000                     _CCPR1H	set	4010
   137   000000                     _RE4PPS	set	3702
   138   000000                     _RG6PPS	set	3720
   139   000000                     _RD5PPS	set	3695
   140   000000                     _ANSELBbits	set	3738
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _CCPR4H	set	3873
   145   000000                     _CCPR3H	set	3877
   146   000000                     _INTCONbits	set	4082
   147   000000                     _T2CLKCONbits	set	4031
   148   000000                     _T2HLTbits	set	4030
   149   000000                     _CCP1CONbits	set	4011
   150   000000                     _CCPTMRS0bits	set	4013
   151   000000                     _CCP2CONbits	set	4007
   152   000000                     _LATAbits	set	3961
   153   000000                     _LATDbits	set	3964
   154   000000                     _LATHbits	set	3968
   155   000000                     _CCP3CONbits	set	3878
   156   000000                     _CCP4CONbits	set	3874
   157   000000                     _RC4REG	set	3811
   158   000000                     _SP4BRGL	set	3813
   159   000000                     _TX4STAbits	set	3816
   160   000000                     _BAUD4CONbits	set	3817
   161   000000                     _SSP2CON2	set	3802
   162   000000                     _SSP2STAT	set	3800
   163   000000                     _SSP2BUF	set	3797
   164   000000                     _IPR0bits	set	3615
   165   000000                     _PIE0bits	set	3625
   166   000000                     _PIE4bits	set	3629
   167   000000                     _PIR4bits	set	3639
   168   000000                     _RC0PPS	set	3682
   169   000000                     _RD6PPS	set	3696
   170   000000                     _LATFbits	set	3966
   171   000000                     _PIR0bits	set	3635
   172                           
   173                           	psect	smallconst
   174   000E00                     __psmallconst:
   175                           	callstack 0
   176   000E00  00                 	db	0
   177   000E01                     STR_1:
   178                           
   179                           ; BSR set to: 14
   180   000E01  52                 	db	82	;'R'
   181   000E02  61                 	db	97	;'a'
   182   000E03  77                 	db	119	;'w'
   183   000E04  20                 	db	32
   184   000E05  25                 	db	37
   185   000E06  64                 	db	100	;'d'
   186   000E07  2C                 	db	44
   187   000E08  20                 	db	32
   188   000E09  25                 	db	37
   189   000E0A  64                 	db	100	;'d'
   190   000E0B  2C                 	db	44
   191   000E0C  20                 	db	32
   192   000E0D  25                 	db	37
   193   000E0E  64                 	db	100	;'d'
   194   000E0F  2C                 	db	44
   195   000E10  20                 	db	32
   196   000E11  25                 	db	37
   197   000E12  64                 	db	100	;'d'
   198   000E13  20                 	db	32
   199   000E14  0A                 	db	10
   200   000E15  00                 	db	0
   201   000E16  00                 	db	0	; dummy byte at the end
   202   000000                     
   203                           ; #config settings
   204                           
   205                           	psect	cinit
   206   001C34                     __pcinit:
   207                           	callstack 0
   208   001C34                     start_initialization:
   209                           	callstack 0
   210   001C34                     __initialization:
   211                           	callstack 0
   212                           
   213                           ; Initialize objects allocated to BANK1 (18 bytes)
   214                           ; load TBLPTR registers with __pidataBANK1
   215   001C34  0E2E               	movlw	low __pidataBANK1
   216   001C36  6EF6               	movwf	tblptrl,c
   217   001C38  0E1F               	movlw	high __pidataBANK1
   218   001C3A  6EF7               	movwf	tblptrh,c
   219   001C3C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   220   001C3E  6EF8               	movwf	tblptru,c
   221   001C40  EE01  F0B9         	lfsr	0,__pdataBANK1
   222   001C44  EE10 F012          	lfsr	1,18
   223   001C48                     copy_data0:
   224   001C48  0009               	tblrd		*+
   225   001C4A  CFF5 FFEE          	movff	tablat,postinc0
   226   001C4E  50E5               	movf	postdec1,w,c
   227   001C50  50E1               	movf	fsr1l,w,c
   228   001C52  E1FA               	bnz	copy_data0
   229                           
   230                           ; Clear objects allocated to BANK2 (120 bytes)
   231   001C54  EE02  F000         	lfsr	0,__pbssBANK2
   232   001C58  0E78               	movlw	120
   233   001C5A                     clear_0:
   234   001C5A  6AEE               	clrf	postinc0,c
   235   001C5C  06E8               	decf	wreg,f,c
   236   001C5E  E1FD               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to BANK0 (125 bytes)
   239   001C60  EE00  F060         	lfsr	0,__pbssBANK0
   240   001C64  0E7D               	movlw	125
   241   001C66                     clear_1:
   242   001C66  6AEE               	clrf	postinc0,c
   243   001C68  06E8               	decf	wreg,f,c
   244   001C6A  E1FD               	bnz	clear_1
   245                           
   246                           ; Clear objects allocated to COMRAM (4 bytes)
   247   001C6C  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   248   001C6E  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   249   001C70  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   250   001C72  6A57               	clrf	__pbssCOMRAM& (0+255),c
   251   001C74                     end_of_initialization:
   252                           	callstack 0
   253   001C74                     __end_of__initialization:
   254                           	callstack 0
   255   001C74  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   256   001C76  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   257   001C78  0100               	movlb	0
   258   001C7A  EF25  F00B         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMRAM
   261   000057                     __pbssCOMRAM:
   262                           	callstack 0
   263   000057                     _TxBufReadCnt:
   264                           	callstack 0
   265   000057                     	ds	1
   266   000058                     _TxBufWriteCnt:
   267                           	callstack 0
   268   000058                     	ds	1
   269   000059                     _RxBufReadCnt:
   270                           	callstack 0
   271   000059                     	ds	1
   272   00005A                     _RxBufWriteCnt:
   273                           	callstack 0
   274   00005A                     	ds	1
   275                           
   276                           	psect	bssBANK0
   277   000060                     __pbssBANK0:
   278                           	callstack 0
   279   000060                     _EUSART4TXbuf:
   280                           	callstack 0
   281   000060                     	ds	60
   282   00009C                     _EUSART4RXbuf:
   283                           	callstack 0
   284   00009C                     	ds	20
   285   0000B0                     _width:
   286                           	callstack 0
   287   0000B0                     	ds	2
   288   0000B2                     _prec:
   289                           	callstack 0
   290   0000B2                     	ds	2
   291   0000B4                     _card_seen:
   292                           	callstack 0
   293   0000B4                     	ds	2
   294   0000B6                     _card_detected:
   295                           	callstack 0
   296   0000B6                     	ds	2
   297   0000B8                     _response_in_progress:
   298                           	callstack 0
   299   0000B8                     	ds	2
   300   0000BA                     _TimerFlag:
   301                           	callstack 0
   302   0000BA                     	ds	2
   303   0000BC                     _flags:
   304                           	callstack 0
   305   0000BC                     	ds	1
   306   0000BD                     _dbuf:
   307                           	callstack 0
   308   0000BD                     	ds	32
   309                           
   310                           	psect	dataBANK1
   311   0001B9                     __pdataBANK1:
   312                           	callstack 0
   313   0001B9                     main@F14645:
   314                           	callstack 0
   315   0001B9                     	ds	18
   316                           
   317                           	psect	bssBANK2
   318   000200                     __pbssBANK2:
   319                           	callstack 0
   320   000200                     	ds	120
   321                           
   322                           	psect	cstackBANK1
   323   000100                     __pcstackBANK1:
   324                           	callstack 0
   325   000100                     main@ReturnHomeArray:
   326                           	callstack 0
   327                           
   328                           ; 120 bytes @ 0x0
   329   000100                     	ds	120
   330   000178                     main@expected_values:
   331                           	callstack 0
   332                           
   333                           ; 18 bytes @ 0x78
   334   000178                     	ds	18
   335   00018A                     main@buf:
   336                           	callstack 0
   337                           
   338                           ; 20 bytes @ 0x8A
   339   00018A                     	ds	20
   340   00019E                     main@red_read:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x9E
   344   00019E                     	ds	2
   345   0001A0                     main@green_read:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xA0
   349   0001A0                     	ds	2
   350   0001A2                     main@blue_read:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xA2
   354   0001A2                     	ds	2
   355   0001A4                     main@clear_read:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xA4
   359   0001A4                     	ds	2
   360   0001A6                     main@PWMcycle:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xA6
   364   0001A6                     	ds	1
   365   0001A7                     main@motorL:
   366                           	callstack 0
   367                           
   368                           ; 9 bytes @ 0xA7
   369   0001A7                     	ds	9
   370   0001B0                     main@motorR:
   371                           	callstack 0
   372                           
   373                           ; 9 bytes @ 0xB0
   374   0001B0                     	ds	9
   375                           
   376                           	psect	cstackBANK0
   377   0000DD                     __pcstackBANK0:
   378                           	callstack 0
   379   0000DD                     ?_vfprintf:
   380                           	callstack 0
   381   0000DD                     vfprintf@fp:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x0
   385   0000DD                     	ds	2
   386   0000DF                     vfprintf@fmt:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x2
   390   0000DF                     	ds	2
   391   0000E1                     vfprintf@ap:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x4
   395   0000E1                     	ds	2
   396   0000E3                     ?_sprintf:
   397                           	callstack 0
   398   0000E3                     sprintf@s:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x6
   402   0000E3                     	ds	2
   403   0000E5                     sprintf@fmt:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x8
   407   0000E5                     	ds	10
   408   0000EF                     sprintf@ap:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x12
   412   0000EF                     	ds	2
   413   0000F1                     sprintf@f:
   414                           	callstack 0
   415                           
   416                           ; 11 bytes @ 0x14
   417   0000F1                     	ds	11
   418   0000FC                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x1F
   421   0000FC                     	ds	2
   422                           
   423                           	psect	cstackCOMRAM
   424   000001                     __pcstackCOMRAM:
   425                           	callstack 0
   426   000001                     ??i2_I2C_2_Master_Idle:
   427   000001                     
   428                           ; 1 bytes @ 0x0
   429   000001                     	ds	1
   430   000002                     i2I2C_2_Master_Write@data_byte:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x1
   434   000002                     	ds	1
   435   000003                     ??_HighISR:
   436   000003                     
   437                           ; 1 bytes @ 0x2
   438   000003                     	ds	2
   439   000005                     ??_I2C_2_Master_Idle:
   440   000005                     ?___wmul:
   441                           	callstack 0
   442   000005                     ?___aodiv:
   443                           	callstack 0
   444   000005                     ?___aomod:
   445                           	callstack 0
   446   000005                     sendCharSerial4@charToSend:
   447                           	callstack 0
   448   000005                     ___wmul@multiplier:
   449                           	callstack 0
   450   000005                     fputc@c:
   451                           	callstack 0
   452   000005                     ___aodiv@dividend:
   453                           	callstack 0
   454   000005                     ___aomod@dividend:
   455                           	callstack 0
   456                           
   457                           ; 8 bytes @ 0x4
   458   000005                     	ds	1
   459   000006                     ??_I2C_2_Master_Read:
   460   000006                     I2C_2_Master_Write@data_byte:
   461                           	callstack 0
   462   000006                     sendStringSerial4@string:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x5
   466   000006                     	ds	1
   467   000007                     color_writetoaddr@value:
   468                           	callstack 0
   469   000007                     I2C_2_Master_Read@ack:
   470                           	callstack 0
   471   000007                     ___wmul@multiplicand:
   472                           	callstack 0
   473   000007                     fputc@fp:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x6
   477   000007                     	ds	1
   478   000008                     color_writetoaddr@address:
   479                           	callstack 0
   480   000008                     I2C_2_Master_Read@tmp:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x7
   484   000008                     	ds	1
   485   000009                     ??_fputc:
   486   000009                     ??_color_click_init:
   487   000009                     ?_color_read_Red:
   488                           	callstack 0
   489   000009                     ?_color_read_Green:
   490                           	callstack 0
   491   000009                     ?_color_read_Blue:
   492                           	callstack 0
   493   000009                     ?_color_read_Clear:
   494                           	callstack 0
   495   000009                     set_interrupt_threshold@AILT:
   496                           	callstack 0
   497   000009                     ___wmul@product:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x8
   501   000009                     	ds	2
   502   00000B                     ??_color_read_Red:
   503   00000B                     ??_color_read_Green:
   504   00000B                     ??_color_read_Blue:
   505   00000B                     ??_color_read_Clear:
   506   00000B                     ?___lwdiv:
   507                           	callstack 0
   508   00000B                     set_interrupt_threshold@AIHT:
   509                           	callstack 0
   510   00000B                     ___lwdiv@dividend:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0xA
   514   00000B                     	ds	2
   515   00000D                     set_interrupt_threshold@persistence:
   516                           	callstack 0
   517   00000D                     ___lwdiv@divisor:
   518                           	callstack 0
   519   00000D                     ___aodiv@divisor:
   520                           	callstack 0
   521   00000D                     ___aomod@divisor:
   522                           	callstack 0
   523                           
   524                           ; 8 bytes @ 0xC
   525   00000D                     	ds	1
   526   00000E                     color_read_Red@tmp:
   527                           	callstack 0
   528   00000E                     color_read_Green@tmp:
   529                           	callstack 0
   530   00000E                     color_read_Blue@tmp:
   531                           	callstack 0
   532   00000E                     color_read_Clear@tmp:
   533                           	callstack 0
   534   00000E                     fputs@s:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0xD
   538   00000E                     	ds	1
   539   00000F                     _set_interrupt_threshold$1927:
   540                           	callstack 0
   541   00000F                     ___lwdiv@quotient:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0xE
   545   00000F                     	ds	1
   546   000010                     _set_interrupt_threshold$1928:
   547                           	callstack 0
   548   000010                     fputs@fp:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0xF
   552   000010                     	ds	1
   553   000011                     ___lwdiv@counter:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x10
   557   000011                     	ds	1
   558   000012                     fputs@c:
   559                           	callstack 0
   560   000012                     setMotorPWM@m:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x11
   564   000012                     	ds	1
   565   000013                     fputs@i:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x12
   569   000013                     	ds	1
   570   000014                     ??_setMotorPWM:
   571                           
   572                           ; 1 bytes @ 0x13
   573   000014                     	ds	1
   574   000015                     ___aodiv@counter:
   575                           	callstack 0
   576   000015                     ___aomod@counter:
   577                           	callstack 0
   578   000015                     pad@fp:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x14
   582   000015                     	ds	1
   583   000016                     setMotorPWM@posDuty:
   584                           	callstack 0
   585   000016                     ___aodiv@sign:
   586                           	callstack 0
   587   000016                     ___aomod@sign:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x15
   591   000016                     	ds	1
   592   000017                     ?_abs:
   593                           	callstack 0
   594   000017                     setMotorPWM@negDuty:
   595                           	callstack 0
   596   000017                     abs@a:
   597                           	callstack 0
   598   000017                     pad@buf:
   599                           	callstack 0
   600   000017                     ___aodiv@quotient:
   601                           	callstack 0
   602                           
   603                           ; 8 bytes @ 0x16
   604   000017                     	ds	2
   605   000019                     ??_abs:
   606   000019                     pad@p:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x18
   610   000019                     	ds	2
   611   00001B                     ??_pad:
   612                           
   613                           ; 1 bytes @ 0x1A
   614   00001B                     	ds	1
   615   00001C                     pad@i:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x1B
   619   00001C                     	ds	2
   620   00001E                     pad@w:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x1D
   624   00001E                     	ds	2
   625   000020                     dtoa@fp:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x1F
   629   000020                     	ds	2
   630   000022                     dtoa@d:
   631                           	callstack 0
   632                           
   633                           ; 8 bytes @ 0x21
   634   000022                     	ds	8
   635   00002A                     ??_dtoa:
   636                           
   637                           ; 1 bytes @ 0x29
   638   00002A                     	ds	8
   639   000032                     _dtoa$2446:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x31
   643   000032                     	ds	2
   644   000034                     dtoa@p:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x33
   648   000034                     	ds	2
   649   000036                     dtoa@w:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x35
   653   000036                     	ds	2
   654   000038                     dtoa@n:
   655                           	callstack 0
   656                           
   657                           ; 8 bytes @ 0x37
   658   000038                     	ds	8
   659   000040                     dtoa@s:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x3F
   663   000040                     	ds	1
   664   000041                     dtoa@i:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x40
   668   000041                     	ds	2
   669   000043                     vfpfcnvrt@fp:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x42
   673   000043                     	ds	2
   674   000045                     vfpfcnvrt@fmt:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x44
   678   000045                     	ds	2
   679   000047                     vfpfcnvrt@ap:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x46
   683   000047                     	ds	2
   684   000049                     ??_vfpfcnvrt:
   685                           
   686                           ; 1 bytes @ 0x48
   687   000049                     	ds	2
   688   00004B                     vfpfcnvrt@convarg:
   689                           	callstack 0
   690                           
   691                           ; 8 bytes @ 0x4A
   692   00004B                     	ds	8
   693   000053                     vfpfcnvrt@cp:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x52
   697   000053                     	ds	2
   698   000055                     vfprintf@cfmt:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x54
   702   000055                     	ds	2
   703   000057                     
   704                           ; 1 bytes @ 0x56
   705 ;;
   706 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   707 ;;
   708 ;; *************** function _main *****************
   709 ;; Defined at:
   710 ;;		line 23 in file "main.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  ReturnHomeAr  120    0[BANK1 ] unsigned int [30][2]
   715 ;;  buf            20  138[BANK1 ] unsigned char [20]
   716 ;;  expected_val   18  120[BANK1 ] unsigned int [3][3]
   717 ;;  normalised_v   18    0        unsigned int [3][3]
   718 ;;  motorR          9  176[BANK1 ] struct DC_motor
   719 ;;  motorL          9  167[BANK1 ] struct DC_motor
   720 ;;  master_close    6    0        unsigned int [3]
   721 ;;  clear_read      2  164[BANK1 ] unsigned int 
   722 ;;  blue_read       2  162[BANK1 ] unsigned int 
   723 ;;  green_read      2  160[BANK1 ] unsigned int 
   724 ;;  red_read        2  158[BANK1 ] unsigned int 
   725 ;;  CardCount       2    0        unsigned int 
   726 ;;  TimerCount      2    0        unsigned int 
   727 ;;  PWMcycle        1  166[BANK1 ] unsigned char 
   728 ;;  card            1    0        enum E14569
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   739 ;;      Locals:         0       0     185       0       0       0       0       0       0       0       0       0       
      +0       0       0
   740 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   741 ;;      Totals:         0       2     185       0       0       0       0       0       0       0       0       0       
      +0       0       0
   742 ;;Total ram usage:      187 bytes
   743 ;; Hardware stack levels required when called: 12
   744 ;; This function calls:
   745 ;;		_I2C_2_Master_Init
   746 ;;		_Interrupts_init
   747 ;;		_LEDSon_init
   748 ;;		_color_click_init
   749 ;;		_color_read_Blue
   750 ;;		_color_read_Clear
   751 ;;		_color_read_Green
   752 ;;		_color_read_Red
   753 ;;		_initDCmotorsPWM
   754 ;;		_initUSART4
   755 ;;		_sendStringSerial4
   756 ;;		_setMotorPWM
   757 ;;		_sprintf
   758 ;; This function is called by:
   759 ;;		Startup code after reset
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text0
   764   00164A                     __ptext0:
   765                           	callstack 0
   766   00164A                     _main:
   767                           	callstack 19
   768   00164A                     
   769                           ;main.c: 28:     LEDSon_init();
   770   00164A  EC44  F00F         	call	_LEDSon_init	;wreg free
   771   00164E                     
   772                           ;main.c: 29:     I2C_2_Master_Init();
   773   00164E  ECF4  F00E         	call	_I2C_2_Master_Init	;wreg free
   774   001652                     
   775                           ;main.c: 30:     color_click_init();
   776   001652  ECC2  F00E         	call	_color_click_init	;wreg free
   777   001656                     
   778                           ;main.c: 31:     initDCmotorsPWM();
   779   001656  EC38  F00C         	call	_initDCmotorsPWM	;wreg free
   780   00165A                     
   781                           ;main.c: 32:     initUSART4();
   782   00165A  EC55  F00F         	call	_initUSART4	;wreg free
   783   00165E                     
   784                           ;main.c: 33:     Interrupts_init();
   785   00165E  ECA2  F00E         	call	_Interrupts_init	;wreg free
   786   001662                     
   787                           ;main.c: 41:     unsigned char PWMcycle = T2PR;
   788   001662  CFBC F1A6          	movff	4028,main@PWMcycle	;volatile
   789                           
   790                           ;main.c: 43:     struct DC_motor motorL, motorR;;main.c: 45:     motorL.power=0;
   791   001666  0E00               	movlw	0
   792   001668  0101               	movlb	1	; () banked
   793   00166A  6FA7               	movwf	main@motorL& (0+255),b
   794                           
   795                           ;main.c: 46:     motorL.direction=1;
   796   00166C  0E01               	movlw	1
   797   00166E  6FA8               	movwf	(main@motorL+1)& (0+255),b
   798                           
   799                           ;main.c: 47:     motorL.brakemode=1;
   800   001670  0E01               	movlw	1
   801   001672  6FA9               	movwf	(main@motorL+2)& (0+255),b
   802   001674                     
   803                           ; BSR set to: 1
   804                           ;main.c: 48:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   805   001674  0EAA               	movlw	170
   806   001676  6FAC               	movwf	(main@motorL+5)& (0+255),b
   807   001678  0E0F               	movlw	15
   808   00167A  6FAD               	movwf	(main@motorL+6)& (0+255),b
   809   00167C                     
   810                           ; BSR set to: 1
   811                           ;main.c: 49:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   812   00167C  0EA6               	movlw	166
   813   00167E  6FAE               	movwf	(main@motorL+7)& (0+255),b
   814   001680  0E0F               	movlw	15
   815   001682  6FAF               	movwf	(main@motorL+8)& (0+255),b
   816   001684                     
   817                           ; BSR set to: 1
   818                           ;main.c: 50:     motorL.PWMperiod=PWMcycle;
   819   001684  C1A6  F1AA         	movff	main@PWMcycle,main@motorL+3
   820   001688  6BAB               	clrf	(main@motorL+4)& (0+255),b
   821                           
   822                           ;main.c: 52:     motorR.power=0;
   823   00168A  0E00               	movlw	0
   824   00168C  6FB0               	movwf	main@motorR& (0+255),b
   825                           
   826                           ;main.c: 53:     motorR.direction=1;
   827   00168E  0E01               	movlw	1
   828   001690  6FB1               	movwf	(main@motorR+1)& (0+255),b
   829                           
   830                           ;main.c: 54:     motorR.brakemode=1;
   831   001692  0E01               	movlw	1
   832   001694  6FB2               	movwf	(main@motorR+2)& (0+255),b
   833   001696                     
   834                           ; BSR set to: 1
   835                           ;main.c: 55:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   836   001696  0E25               	movlw	37
   837   001698  6FB5               	movwf	(main@motorR+5)& (0+255),b
   838   00169A  0E0F               	movlw	15
   839   00169C  6FB6               	movwf	(main@motorR+6)& (0+255),b
   840   00169E                     
   841                           ; BSR set to: 1
   842                           ;main.c: 56:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   843   00169E  0E21               	movlw	33
   844   0016A0  6FB7               	movwf	(main@motorR+7)& (0+255),b
   845   0016A2  0E0F               	movlw	15
   846   0016A4  6FB8               	movwf	(main@motorR+8)& (0+255),b
   847   0016A6                     
   848                           ; BSR set to: 1
   849                           ;main.c: 57:     motorR.PWMperiod=PWMcycle;
   850   0016A6  C1A6  F1B3         	movff	main@PWMcycle,main@motorR+3
   851   0016AA  6BB4               	clrf	(main@motorR+4)& (0+255),b
   852   0016AC                     
   853                           ; BSR set to: 1
   854                           ;main.c: 59:     setMotorPWM(&motorL);
   855   0016AC  0EA7               	movlw	low main@motorL
   856   0016AE  6E12               	movwf	setMotorPWM@m^0,c
   857   0016B0  0E01               	movlw	high main@motorL
   858   0016B2  6E13               	movwf	(setMotorPWM@m+1)^0,c
   859   0016B4  EC0E  F009         	call	_setMotorPWM	;wreg free
   860   0016B8                     
   861                           ;main.c: 60:     setMotorPWM(&motorR);
   862   0016B8  0EB0               	movlw	low main@motorR
   863   0016BA  6E12               	movwf	setMotorPWM@m^0,c
   864   0016BC  0E01               	movlw	high main@motorR
   865   0016BE  6E13               	movwf	(setMotorPWM@m+1)^0,c
   866   0016C0  EC0E  F009         	call	_setMotorPWM	;wreg free
   867   0016C4                     
   868                           ;main.c: 66:     unsigned int expected_values[3][3] = {{13000, 2600, 1800},{8400, 6500, 
      +                          5000},{4400, 1800, 2800}};
   869   0016C4  EE21  F0B9         	lfsr	2,main@F14645
   870   0016C8  EE11  F078         	lfsr	1,main@expected_values
   871   0016CC  0E11               	movlw	17
   872   0016CE                     u1861:
   873   0016CE  CFDB FFE3          	movff	plusw2,plusw1
   874   0016D2  06E8               	decf	wreg,f,c
   875   0016D4  E2FC               	bc	u1861
   876   0016D6                     
   877                           ;main.c: 78:     unsigned int ReturnHomeArray[2][30] = {0};
   878   0016D6  EE21  F000         	lfsr	2,main@ReturnHomeArray
   879   0016DA  0E77               	movlw	119
   880   0016DC                     u1871:
   881   0016DC  6ADE               	clrf	postinc2,c
   882   0016DE  06E8               	decf	wreg,f,c
   883   0016E0  E2FD               	bc	u1871
   884   0016E2                     
   885                           ;main.c: 136:     LATHbits.LATH3=0;
   886   0016E2  9680               	bcf	128,3,c	;volatile
   887   0016E4                     
   888                           ;main.c: 137:     TRISHbits.TRISH3=0;
   889   0016E4  9688               	bcf	136,3,c	;volatile
   890   0016E6                     
   891                           ;main.c: 139:     char buf[20];;main.c: 141:     LATDbits.LATD7=0;
   892   0016E6  9E7C               	bcf	124,7,c	;volatile
   893   0016E8                     
   894                           ;main.c: 142:     TRISDbits.TRISD7=0;
   895   0016E8  9E84               	bcf	132,7,c	;volatile
   896   0016EA                     l3304:
   897                           
   898                           ;main.c: 171:         red_read = color_read_Red();
   899   0016EA  EC7A  F00D         	call	_color_read_Red	;wreg free
   900   0016EE  C009  F19E         	movff	?_color_read_Red,main@red_read
   901   0016F2  C00A  F19F         	movff	?_color_read_Red+1,main@red_read+1
   902   0016F6                     
   903                           ;main.c: 172:         blue_read = color_read_Blue();
   904   0016F6  ECF2  F00D         	call	_color_read_Blue	;wreg free
   905   0016FA  C009  F1A2         	movff	?_color_read_Blue,main@blue_read
   906   0016FE  C00A  F1A3         	movff	?_color_read_Blue+1,main@blue_read+1
   907   001702                     
   908                           ;main.c: 173:         green_read = color_read_Green();
   909   001702  ECA2  F00D         	call	_color_read_Green	;wreg free
   910   001706  C009  F1A0         	movff	?_color_read_Green,main@green_read
   911   00170A  C00A  F1A1         	movff	?_color_read_Green+1,main@green_read+1
   912   00170E                     
   913                           ;main.c: 174:         clear_read = color_read_Clear();
   914   00170E  ECCA  F00D         	call	_color_read_Clear	;wreg free
   915   001712  C009  F1A4         	movff	?_color_read_Clear,main@clear_read
   916   001716  C00A  F1A5         	movff	?_color_read_Clear+1,main@clear_read+1
   917   00171A                     
   918                           ;main.c: 177:         sprintf(buf, "Raw %d, %d, %d, %d \n", red_read, green_read, blue_r
      +                          ead, clear_read);
   919   00171A  0E8A               	movlw	low main@buf
   920   00171C  0100               	movlb	0	; () banked
   921   00171E  6FE3               	movwf	sprintf@s& (0+255),b
   922   001720  0E01               	movlw	high main@buf
   923   001722  6FE4               	movwf	(sprintf@s+1)& (0+255),b
   924   001724  0E01               	movlw	low STR_1
   925   001726  6FE5               	movwf	sprintf@fmt& (0+255),b
   926   001728  0E0E               	movlw	high STR_1
   927   00172A  6FE6               	movwf	(sprintf@fmt+1)& (0+255),b
   928   00172C  C19E  F0E7         	movff	main@red_read,?_sprintf+4
   929   001730  C19F  F0E8         	movff	main@red_read+1,?_sprintf+5
   930   001734  C1A0  F0E9         	movff	main@green_read,?_sprintf+6
   931   001738  C1A1  F0EA         	movff	main@green_read+1,?_sprintf+7
   932   00173C  C1A2  F0EB         	movff	main@blue_read,?_sprintf+8
   933   001740  C1A3  F0EC         	movff	main@blue_read+1,?_sprintf+9
   934   001744  C1A4  F0ED         	movff	main@clear_read,?_sprintf+10
   935   001748  C1A5  F0EE         	movff	main@clear_read+1,?_sprintf+11
   936   00174C  EC51  F00D         	call	_sprintf	;wreg free
   937   001750                     
   938                           ;main.c: 178:         sendStringSerial4(buf);
   939   001750  0E8A               	movlw	low main@buf
   940   001752  6E06               	movwf	sendStringSerial4@string^0,c
   941   001754  0E01               	movlw	high main@buf
   942   001756  6E07               	movwf	(sendStringSerial4@string+1)^0,c
   943   001758  ECDC  F00E         	call	_sendStringSerial4	;wreg free
   944   00175C                     
   945                           ;main.c: 179:         _delay((unsigned long)((100)*(64000000/4000.0)));
   946   00175C  0E09               	movlw	9
   947   00175E  0100               	movlb	0	; () banked
   948   001760  6FFD               	movwf	(??_main+1)& (0+255),b
   949   001762  0E1E               	movlw	30
   950   001764  6FFC               	movwf	??_main& (0+255),b
   951   001766  0EE4               	movlw	228
   952   001768                     u1917:
   953   001768  2EE8               	decfsz	wreg,f,c
   954   00176A  D7FE               	bra	u1917
   955   00176C  2FFC               	decfsz	??_main& (0+255),f,b
   956   00176E  D7FC               	bra	u1917
   957   001770  2FFD               	decfsz	(??_main+1)& (0+255),f,b
   958   001772  D7FA               	bra	u1917
   959   001774  F000               	nop	
   960   001776                     
   961                           ;main.c: 180:          LATHbits.LATH3=!LATHbits.LATH3;
   962   001776  A680               	btfss	128,3,c	;volatile
   963   001778  EFC0  F00B         	goto	u1881
   964   00177C  EFC5  F00B         	goto	u1880
   965   001780                     u1881:
   966   001780  0100               	movlb	0	; () banked
   967   001782  6BFC               	clrf	??_main& (0+255),b
   968   001784  2BFC               	incf	??_main& (0+255),f,b
   969   001786  EFC7  F00B         	goto	u1898
   970   00178A                     u1880:
   971   00178A  0100               	movlb	0	; () banked
   972   00178C  6BFC               	clrf	??_main& (0+255),b
   973   00178E                     u1898:
   974   00178E  47FC               	rlncf	??_main& (0+255),f,b
   975   001790  47FC               	rlncf	??_main& (0+255),f,b
   976   001792  47FC               	rlncf	??_main& (0+255),f,b
   977   001794  5080               	movf	128,w,c	;volatile
   978   001796  19FC               	xorwf	??_main& (0+255),w,b
   979   001798  0BF7               	andlw	-9
   980   00179A  19FC               	xorwf	??_main& (0+255),w,b
   981   00179C  6E80               	movwf	128,c	;volatile
   982   00179E  EF75  F00B         	goto	l3304
   983   0017A2  EF3B  F000         	goto	start
   984   0017A6                     __end_of_main:
   985                           	callstack 0
   986                           
   987 ;; *************** function _sprintf *****************
   988 ;; Defined at:
   989 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  s               2    6[BANK0 ] PTR unsigned char 
   992 ;;		 -> main@buf(20), 
   993 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   994 ;;		 -> STR_1(21), 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  f              11   20[BANK0 ] struct _IO_FILE
   997 ;;  ap              2   18[BANK0 ] PTR void [1]
   998 ;;		 -> ?_sprintf(2), 
   999 ;;  ret             2    0        int 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  2    6[BANK0 ] int 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1009 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1012 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1013 ;;Total ram usage:       25 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 11
  1016 ;; This function calls:
  1017 ;;		_vfprintf
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text1
  1024   001AA2                     __ptext1:
  1025                           	callstack 0
  1026   001AA2                     _sprintf:
  1027                           	callstack 19
  1028   001AA2  0EE7               	movlw	low (?_sprintf+4)
  1029   001AA4  0100               	movlb	0	; () banked
  1030   001AA6  6FEF               	movwf	sprintf@ap& (0+255),b
  1031   001AA8  0E00               	movlw	high (?_sprintf+4)
  1032   001AAA  6FF0               	movwf	(sprintf@ap+1)& (0+255),b
  1033   001AAC  C0E3  F0F1         	movff	sprintf@s,sprintf@f
  1034   001AB0  C0E4  F0F2         	movff	sprintf@s+1,sprintf@f+1
  1035   001AB4                     
  1036                           ; BSR set to: 0
  1037   001AB4  0E00               	movlw	0
  1038   001AB6  6FF5               	movwf	(sprintf@f+4)& (0+255),b
  1039   001AB8  0E00               	movlw	0
  1040   001ABA  6FF4               	movwf	(sprintf@f+3)& (0+255),b
  1041   001ABC                     
  1042                           ; BSR set to: 0
  1043   001ABC  0E00               	movlw	0
  1044   001ABE  6FFB               	movwf	(sprintf@f+10)& (0+255),b
  1045   001AC0  0E00               	movlw	0
  1046   001AC2  6FFA               	movwf	(sprintf@f+9)& (0+255),b
  1047   001AC4                     
  1048                           ; BSR set to: 0
  1049   001AC4  0EF1               	movlw	low sprintf@f
  1050   001AC6  6FDD               	movwf	vfprintf@fp& (0+255),b
  1051   001AC8  0E00               	movlw	high sprintf@f
  1052   001ACA  6FDE               	movwf	(vfprintf@fp+1)& (0+255),b
  1053   001ACC  C0E5  F0DF         	movff	sprintf@fmt,vfprintf@fmt
  1054   001AD0  C0E6  F0E0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1055   001AD4  0EEF               	movlw	low sprintf@ap
  1056   001AD6  6FE1               	movwf	vfprintf@ap& (0+255),b
  1057   001AD8  0E00               	movlw	high sprintf@ap
  1058   001ADA  6FE2               	movwf	(vfprintf@ap+1)& (0+255),b
  1059   001ADC  EC27  F00D         	call	_vfprintf	;wreg free
  1060   001AE0  0100               	movlb	0	; () banked
  1061   001AE2  51F4               	movf	(sprintf@f+3)& (0+255),w,b
  1062   001AE4  25E3               	addwf	sprintf@s& (0+255),w,b
  1063   001AE6  6ED9               	movwf	fsr2l,c
  1064   001AE8  51F5               	movf	(sprintf@f+4)& (0+255),w,b
  1065   001AEA  21E4               	addwfc	(sprintf@s+1)& (0+255),w,b
  1066   001AEC  6EDA               	movwf	fsr2h,c
  1067   001AEE  0E00               	movlw	0
  1068   001AF0  6EDF               	movwf	indf2,c
  1069   001AF2                     
  1070                           ; BSR set to: 0
  1071   001AF2  0012               	return		;funcret
  1072   001AF4                     __end_of_sprintf:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _vfprintf *****************
  1076 ;; Defined at:
  1077 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1080 ;;		 -> sprintf@f(11), 
  1081 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1082 ;;		 -> STR_1(21), 
  1083 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1084 ;;		 -> sprintf@ap(2), 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  1087 ;;		 -> STR_1(21), 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2    0[BANK0 ] int 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1097 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1100 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1101 ;;Total ram usage:        8 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 10
  1104 ;; This function calls:
  1105 ;;		_vfpfcnvrt
  1106 ;; This function is called by:
  1107 ;;		_sprintf
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text2
  1112   001A4E                     __ptext2:
  1113                           	callstack 0
  1114   001A4E                     _vfprintf:
  1115                           	callstack 19
  1116   001A4E                     
  1117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1118   001A4E  C0DF  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  1119   001A52  C0E0  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1122   001A56  EF3B  F00D         	goto	l3232
  1123   001A5A                     l3230:
  1124                           
  1125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1126   001A5A  C0DD  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1127   001A5E  C0DE  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1128   001A62  0E55               	movlw	low vfprintf@cfmt
  1129   001A64  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1130   001A66  0E00               	movlw	high vfprintf@cfmt
  1131   001A68  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1132   001A6A  C0E1  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1133   001A6E  C0E2  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1134   001A72  EC76  F00A         	call	_vfpfcnvrt	;wreg free
  1135   001A76                     l3232:
  1136                           
  1137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1138   001A76  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  1139   001A7A  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1140   001A7E                     	if	0	;tblptru may be non-zero
  1141   001A7E                     	endif
  1142   001A7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1143   001A7E  0E00               	movlw	low (__mediumconst shr (0+16))
  1144   001A80  6EF8               	movwf	tblptru,c
  1145   001A82                     	endif
  1146   001A82  0008               	tblrd		*
  1147   001A84  50F5               	movf	tablat,w,c
  1148   001A86  0900               	iorlw	0
  1149   001A88  A4D8               	btfss	status,2,c
  1150   001A8A  EF49  F00D         	goto	u1851
  1151   001A8E  EF4B  F00D         	goto	u1850
  1152   001A92                     u1851:
  1153   001A92  EF2D  F00D         	goto	l3230
  1154   001A96                     u1850:
  1155   001A96                     
  1156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1157   001A96  0E00               	movlw	0
  1158   001A98  0100               	movlb	0	; () banked
  1159   001A9A  6FDE               	movwf	(?_vfprintf+1)& (0+255),b
  1160   001A9C  0E00               	movlw	0
  1161   001A9E  6FDD               	movwf	?_vfprintf& (0+255),b
  1162   001AA0                     
  1163                           ; BSR set to: 0
  1164   001AA0  0012               	return		;funcret
  1165   001AA2                     __end_of_vfprintf:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _vfpfcnvrt *****************
  1169 ;; Defined at:
  1170 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1173 ;;		 -> sprintf@f(11), 
  1174 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1175 ;;		 -> vfprintf@cfmt(2), 
  1176 ;;  ap              2   70[COMRAM] PTR PTR void 
  1177 ;;		 -> sprintf@ap(2), 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  convarg         8   74[COMRAM] struct .
  1180 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1181 ;;		 -> STR_1(21), 
  1182 ;;  i               2    0        int 
  1183 ;;  done            2    0        int 
  1184 ;;  c               1    0        unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1197 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1198 ;;Total ram usage:       18 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 9
  1201 ;; This function calls:
  1202 ;;		_dtoa
  1203 ;;		_fputc
  1204 ;; This function is called by:
  1205 ;;		_vfprintf
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text3
  1210   0014EC                     __ptext3:
  1211                           	callstack 0
  1212   0014EC                     _vfpfcnvrt:
  1213                           	callstack 19
  1214   0014EC                     
  1215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1216   0014EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1217   0014F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1218   0014F4  CFDE FFF6          	movff	postinc2,tblptrl
  1219   0014F8  CFDD FFF7          	movff	postdec2,tblptrh
  1220   0014FC                     	if	0	;tblptru may be non-zero
  1221   0014FC                     	endif
  1222   0014FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1223   0014FC  0E00               	movlw	low (__mediumconst shr (0+16))
  1224   0014FE  6EF8               	movwf	tblptru,c
  1225   001500                     	endif
  1226   001500  0008               	tblrd		*
  1227   001502  50F5               	movf	tablat,w,c
  1228   001504  0A25               	xorlw	37
  1229   001506  A4D8               	btfss	status,2,c
  1230   001508  EF88  F00A         	goto	u1821
  1231   00150C  EF8A  F00A         	goto	u1820
  1232   001510                     u1821:
  1233   001510  EF0E  F00B         	goto	l3222
  1234   001514                     u1820:
  1235   001514                     
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1237   001514  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1238   001518  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1239   00151C  2ADE               	incf	postinc2,f,c
  1240   00151E  0E00               	movlw	0
  1241   001520  22DD               	addwfc	postdec2,f,c
  1242   001522                     
  1243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1244   001522  0E00               	movlw	0
  1245   001524  0100               	movlb	0	; () banked
  1246   001526  6FB1               	movwf	(_width+1)& (0+255),b
  1247   001528  0E00               	movlw	0
  1248   00152A  6FB0               	movwf	_width& (0+255),b
  1249   00152C  C0B0  F0BC         	movff	_width,_flags
  1250   001530                     
  1251                           ; BSR set to: 0
  1252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1253   001530  69B2               	setf	_prec& (0+255),b
  1254   001532  69B3               	setf	(_prec+1)& (0+255),b
  1255   001534                     
  1256                           ; BSR set to: 0
  1257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1258   001534  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1259   001538  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1260   00153C  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1261   001540  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1262   001544                     
  1263                           ; BSR set to: 0
  1264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1265   001544  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1266   001548  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1267   00154C                     	if	0	;tblptru may be non-zero
  1268   00154C                     	endif
  1269   00154C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1270   00154C  0E00               	movlw	low (__mediumconst shr (0+16))
  1271   00154E  6EF8               	movwf	tblptru,c
  1272   001550                     	endif
  1273   001550  0008               	tblrd		*
  1274   001552  50F5               	movf	tablat,w,c
  1275   001554  0A64               	xorlw	100
  1276   001556  B4D8               	btfsc	status,2,c
  1277   001558  EFB0  F00A         	goto	u1831
  1278   00155C  EFB2  F00A         	goto	u1830
  1279   001560                     u1831:
  1280   001560  EFC2  F00A         	goto	l3212
  1281   001564                     u1830:
  1282   001564                     
  1283                           ; BSR set to: 0
  1284   001564  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1285   001568  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1286   00156C                     	if	0	;tblptru may be non-zero
  1287   00156C                     	endif
  1288   00156C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1289   00156C  0E00               	movlw	low (__mediumconst shr (0+16))
  1290   00156E  6EF8               	movwf	tblptru,c
  1291   001570                     	endif
  1292   001570  0008               	tblrd		*
  1293   001572  50F5               	movf	tablat,w,c
  1294   001574  0A69               	xorlw	105
  1295   001576  A4D8               	btfss	status,2,c
  1296   001578  EFC0  F00A         	goto	u1841
  1297   00157C  EFC2  F00A         	goto	u1840
  1298   001580                     u1841:
  1299   001580  EF05  F00B         	goto	l3218
  1300   001584                     u1840:
  1301   001584                     l3212:
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1305   001584  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1306   001588  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1307   00158C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1308   001590  0E02               	movlw	2
  1309   001592  26DE               	addwf	postinc2,f,c
  1310   001594  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1311   001598  0E00               	movlw	0
  1312   00159A  22DD               	addwfc	postdec2,f,c
  1313   00159C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1314   0015A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1315   0015A4  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1316   0015A8  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1317   0015AC  0E00               	movlw	0
  1318   0015AE  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1319   0015B0  0EFF               	movlw	-1
  1320   0015B2  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1321   0015B4  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1322   0015B6  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1323   0015B8  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1324   0015BA  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1325   0015BC  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1328   0015BE  0E01               	movlw	1
  1329   0015C0  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1330   0015C2  6E49               	movwf	??_vfpfcnvrt^0,c
  1331   0015C4  0E00               	movlw	0
  1332   0015C6  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1333   0015C8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1334   0015CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335   0015CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336   0015D2  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1337   0015D6  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1338   0015DA                     
  1339                           ; BSR set to: 0
  1340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1341   0015DA  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1342   0015DE  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1343   0015E2  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1344   0015E6  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1345   0015EA  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1346   0015EE  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1347   0015F2  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1348   0015F6  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1349   0015FA  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1350   0015FE  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1351   001602  EC0C  F007         	call	_dtoa	;wreg free
  1352   001606  EF24  F00B         	goto	l1223
  1353   00160A                     l3218:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1356   00160A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1357   00160E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1358   001612  2ADE               	incf	postinc2,f,c
  1359   001614  0E00               	movlw	0
  1360   001616  22DD               	addwfc	postdec2,f,c
  1361   001618  EF24  F00B         	goto	l1223
  1362   00161C                     l3222:
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1365   00161C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1366   001620  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1367   001624  CFDE FFF6          	movff	postinc2,tblptrl
  1368   001628  CFDD FFF7          	movff	postdec2,tblptrh
  1369   00162C                     	if	0	;tblptru may be non-zero
  1370   00162C                     	endif
  1371   00162C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1372   00162C  0E00               	movlw	low (__mediumconst shr (0+16))
  1373   00162E  6EF8               	movwf	tblptru,c
  1374   001630                     	endif
  1375   001630  0008               	tblrd		*
  1376   001632  50F5               	movf	tablat,w,c
  1377   001634  6E05               	movwf	fputc@c^0,c
  1378   001636  6A06               	clrf	(fputc@c+1)^0,c
  1379   001638  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1380   00163C  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1381   001640  ECD3  F00B         	call	_fputc	;wreg free
  1382   001644  EF05  F00B         	goto	l3218
  1383   001648                     l1223:
  1384   001648  0012               	return		;funcret
  1385   00164A                     __end_of_vfpfcnvrt:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _dtoa *****************
  1389 ;; Defined at:
  1390 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1393 ;;		 -> sprintf@f(11), 
  1394 ;;  d               8   33[COMRAM] long long 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  n               8   55[COMRAM] long long 
  1397 ;;  i               2   64[COMRAM] int 
  1398 ;;  w               2   53[COMRAM] int 
  1399 ;;  p               2   51[COMRAM] int 
  1400 ;;  s               1   63[COMRAM] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1410 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1411 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1413 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1414 ;;Total ram usage:       35 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 8
  1417 ;; This function calls:
  1418 ;;		___aodiv
  1419 ;;		___aomod
  1420 ;;		_abs
  1421 ;;		_pad
  1422 ;; This function is called by:
  1423 ;;		_vfpfcnvrt
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text4
  1428   000E18                     __ptext4:
  1429                           	callstack 0
  1430   000E18                     _dtoa:
  1431                           	callstack 19
  1432   000E18                     
  1433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1434   000E18  C022  F038         	movff	dtoa@d,dtoa@n
  1435   000E1C  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1436   000E20  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1437   000E24  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1438   000E28  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1439   000E2C  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1440   000E30  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1441   000E34  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1442   000E38                     
  1443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1444   000E38  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1445   000E3A  EF21  F007         	goto	u1721
  1446   000E3E  EF24  F007         	goto	u1720
  1447   000E42                     u1721:
  1448   000E42  0E01               	movlw	1
  1449   000E44  EF25  F007         	goto	u1730
  1450   000E48                     u1720:
  1451   000E48  0E00               	movlw	0
  1452   000E4A                     u1730:
  1453   000E4A  6E40               	movwf	dtoa@s^0,c
  1454   000E4C                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1456   000E4C  5040               	movf	dtoa@s^0,w,c
  1457   000E4E  B4D8               	btfsc	status,2,c
  1458   000E50  EF2C  F007         	goto	u1741
  1459   000E54  EF2E  F007         	goto	u1740
  1460   000E58                     u1741:
  1461   000E58  EF3E  F007         	goto	l3154
  1462   000E5C                     u1740:
  1463   000E5C                     
  1464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1465   000E5C  1E3F               	comf	(dtoa@n+7)^0,f,c
  1466   000E5E  1E3E               	comf	(dtoa@n+6)^0,f,c
  1467   000E60  1E3D               	comf	(dtoa@n+5)^0,f,c
  1468   000E62  1E3C               	comf	(dtoa@n+4)^0,f,c
  1469   000E64  1E3B               	comf	(dtoa@n+3)^0,f,c
  1470   000E66  1E3A               	comf	(dtoa@n+2)^0,f,c
  1471   000E68  1E39               	comf	(dtoa@n+1)^0,f,c
  1472   000E6A  6C38               	negf	dtoa@n^0,c
  1473   000E6C  0E00               	movlw	0
  1474   000E6E  2239               	addwfc	(dtoa@n+1)^0,f,c
  1475   000E70  223A               	addwfc	(dtoa@n+2)^0,f,c
  1476   000E72  223B               	addwfc	(dtoa@n+3)^0,f,c
  1477   000E74  223C               	addwfc	(dtoa@n+4)^0,f,c
  1478   000E76  223D               	addwfc	(dtoa@n+5)^0,f,c
  1479   000E78  223E               	addwfc	(dtoa@n+6)^0,f,c
  1480   000E7A  223F               	addwfc	(dtoa@n+7)^0,f,c
  1481   000E7C                     l3154:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1484   000E7C  0100               	movlb	0	; () banked
  1485   000E7E  BFB3               	btfsc	(_prec+1)& (0+255),7,b
  1486   000E80  EF4C  F007         	goto	u1750
  1487   000E84  51B3               	movf	(_prec+1)& (0+255),w,b
  1488   000E86  E106               	bnz	u1751
  1489   000E88  05B2               	decf	_prec& (0+255),w,b
  1490   000E8A  B0D8               	btfsc	status,0,c
  1491   000E8C  EF4A  F007         	goto	u1751
  1492   000E90  EF4C  F007         	goto	u1750
  1493   000E94                     u1751:
  1494   000E94  EF52  F007         	goto	l1202
  1495   000E98                     u1750:
  1496   000E98                     
  1497                           ; BSR set to: 0
  1498   000E98  0E00               	movlw	0
  1499   000E9A  6E35               	movwf	(dtoa@p+1)^0,c
  1500   000E9C  0E01               	movlw	1
  1501   000E9E  6E34               	movwf	dtoa@p^0,c
  1502   000EA0  EF56  F007         	goto	l1204
  1503   000EA4                     l1202:
  1504                           
  1505                           ; BSR set to: 0
  1506   000EA4  C0B2  F034         	movff	_prec,dtoa@p
  1507   000EA8  C0B3  F035         	movff	_prec+1,dtoa@p+1
  1508   000EAC                     l1204:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1512   000EAC  C0B0  F036         	movff	_width,dtoa@w
  1513   000EB0  C0B1  F037         	movff	_width+1,dtoa@w+1
  1514   000EB4                     
  1515                           ; BSR set to: 0
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1517   000EB4  5040               	movf	dtoa@s^0,w,c
  1518   000EB6  B4D8               	btfsc	status,2,c
  1519   000EB8  EF60  F007         	goto	u1761
  1520   000EBC  EF62  F007         	goto	u1760
  1521   000EC0                     u1761:
  1522   000EC0  EF79  F007         	goto	l1205
  1523   000EC4                     u1760:
  1524   000EC4                     
  1525                           ; BSR set to: 0
  1526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1527   000EC4  0636               	decf	dtoa@w^0,f,c
  1528   000EC6  A0D8               	btfss	status,0,c
  1529   000EC8  0637               	decf	(dtoa@w+1)^0,f,c
  1530   000ECA                     
  1531                           ; BSR set to: 0
  1532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1533   000ECA  5040               	movf	dtoa@s^0,w,c
  1534   000ECC  A4D8               	btfss	status,2,c
  1535   000ECE  EF6B  F007         	goto	u1771
  1536   000ED2  EF6D  F007         	goto	u1770
  1537   000ED6                     u1771:
  1538   000ED6  EF73  F007         	goto	l3166
  1539   000EDA                     u1770:
  1540   000EDA                     
  1541                           ; BSR set to: 0
  1542   000EDA  0E00               	movlw	0
  1543   000EDC  6E33               	movwf	(_dtoa$2446+1)^0,c
  1544   000EDE  0E2B               	movlw	43
  1545   000EE0  6E32               	movwf	_dtoa$2446^0,c
  1546   000EE2  EF77  F007         	goto	l3168
  1547   000EE6                     l3166:
  1548                           
  1549                           ; BSR set to: 0
  1550   000EE6  0E00               	movlw	0
  1551   000EE8  6E33               	movwf	(_dtoa$2446+1)^0,c
  1552   000EEA  0E2D               	movlw	45
  1553   000EEC  6E32               	movwf	_dtoa$2446^0,c
  1554   000EEE                     l3168:
  1555                           
  1556                           ; BSR set to: 0
  1557   000EEE  C032  F040         	movff	_dtoa$2446,dtoa@s
  1558   000EF2                     l1205:
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1562   000EF2  0E00               	movlw	0
  1563   000EF4  6E42               	movwf	(dtoa@i+1)^0,c
  1564   000EF6  0E1F               	movlw	31
  1565   000EF8  6E41               	movwf	dtoa@i^0,c
  1566   000EFA                     
  1567                           ; BSR set to: 0
  1568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1569   000EFA  0E00               	movlw	0
  1570   000EFC  6FDC               	movwf	(_dbuf+31)& (0+255),b
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1573   000EFE  EFFD  F007         	goto	l3182
  1574   000F02                     l3172:
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1577   000F02  0641               	decf	dtoa@i^0,f,c
  1578   000F04  A0D8               	btfss	status,0,c
  1579   000F06  0642               	decf	(dtoa@i+1)^0,f,c
  1580   000F08                     
  1581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1582   000F08  0EBD               	movlw	low _dbuf
  1583   000F0A  2441               	addwf	dtoa@i^0,w,c
  1584   000F0C  6ED9               	movwf	fsr2l,c
  1585   000F0E  0E00               	movlw	high _dbuf
  1586   000F10  2042               	addwfc	(dtoa@i+1)^0,w,c
  1587   000F12  6EDA               	movwf	fsr2h,c
  1588   000F14  C038  F005         	movff	dtoa@n,___aomod@dividend
  1589   000F18  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1590   000F1C  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1591   000F20  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1592   000F24  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1593   000F28  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1594   000F2C  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1595   000F30  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1596   000F34  0E0A               	movlw	10
  1597   000F36  6E0D               	movwf	___aomod@divisor^0,c
  1598   000F38  0E00               	movlw	0
  1599   000F3A  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1600   000F3C  0E00               	movlw	0
  1601   000F3E  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1602   000F40  0E00               	movlw	0
  1603   000F42  6E10               	movwf	(___aomod@divisor+3)^0,c
  1604   000F44  0E00               	movlw	0
  1605   000F46  6E11               	movwf	(___aomod@divisor+4)^0,c
  1606   000F48  0E00               	movlw	0
  1607   000F4A  6E12               	movwf	(___aomod@divisor+5)^0,c
  1608   000F4C  0E00               	movlw	0
  1609   000F4E  6E13               	movwf	(___aomod@divisor+6)^0,c
  1610   000F50  0E00               	movlw	0
  1611   000F52  6E14               	movwf	(___aomod@divisor+7)^0,c
  1612   000F54  ECC4  F009         	call	___aomod	;wreg free
  1613   000F58  C005  F02A         	movff	?___aomod,??_dtoa
  1614   000F5C  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1615   000F60  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1616   000F64  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1617   000F68  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1618   000F6C  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1619   000F70  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1620   000F74  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1621   000F78  C02A  F017         	movff	??_dtoa,abs@a
  1622   000F7C  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1623   000F80  EC82  F00E         	call	_abs	;wreg free
  1624   000F84  5017               	movf	?_abs^0,w,c
  1625   000F86  0F30               	addlw	48
  1626   000F88  6EDF               	movwf	indf2,c
  1627   000F8A                     
  1628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1629   000F8A  0634               	decf	dtoa@p^0,f,c
  1630   000F8C  A0D8               	btfss	status,0,c
  1631   000F8E  0635               	decf	(dtoa@p+1)^0,f,c
  1632   000F90                     
  1633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1634   000F90  0636               	decf	dtoa@w^0,f,c
  1635   000F92  A0D8               	btfss	status,0,c
  1636   000F94  0637               	decf	(dtoa@w+1)^0,f,c
  1637   000F96                     
  1638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1639   000F96  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1640   000F9A  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1641   000F9E  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1642   000FA2  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1643   000FA6  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1644   000FAA  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1645   000FAE  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1646   000FB2  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1647   000FB6  0E0A               	movlw	10
  1648   000FB8  6E0D               	movwf	___aodiv@divisor^0,c
  1649   000FBA  0E00               	movlw	0
  1650   000FBC  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1651   000FBE  0E00               	movlw	0
  1652   000FC0  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1653   000FC2  0E00               	movlw	0
  1654   000FC4  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1655   000FC6  0E00               	movlw	0
  1656   000FC8  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1657   000FCA  0E00               	movlw	0
  1658   000FCC  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1659   000FCE  0E00               	movlw	0
  1660   000FD0  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1661   000FD2  0E00               	movlw	0
  1662   000FD4  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1663   000FD6  EC4A  F008         	call	___aodiv	;wreg free
  1664   000FDA  C005  F038         	movff	?___aodiv,dtoa@n
  1665   000FDE  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1666   000FE2  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1667   000FE6  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1668   000FEA  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1669   000FEE  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1670   000FF2  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1671   000FF6  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1672   000FFA                     l3182:
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1675   000FFA  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1676   000FFC  EF08  F008         	goto	u1781
  1677   001000  5042               	movf	(dtoa@i+1)^0,w,c
  1678   001002  E108               	bnz	u1780
  1679   001004  0441               	decf	dtoa@i^0,w,c
  1680   001006  A0D8               	btfss	status,0,c
  1681   001008  EF08  F008         	goto	u1781
  1682   00100C  EF0A  F008         	goto	u1780
  1683   001010                     u1781:
  1684   001010  EF26  F008         	goto	l3188
  1685   001014                     u1780:
  1686   001014  5038               	movf	dtoa@n^0,w,c
  1687   001016  1039               	iorwf	(dtoa@n+1)^0,w,c
  1688   001018  103A               	iorwf	(dtoa@n+2)^0,w,c
  1689   00101A  103B               	iorwf	(dtoa@n+3)^0,w,c
  1690   00101C  103C               	iorwf	(dtoa@n+4)^0,w,c
  1691   00101E  103D               	iorwf	(dtoa@n+5)^0,w,c
  1692   001020  103E               	iorwf	(dtoa@n+6)^0,w,c
  1693   001022  103F               	iorwf	(dtoa@n+7)^0,w,c
  1694   001024  A4D8               	btfss	status,2,c
  1695   001026  EF17  F008         	goto	u1791
  1696   00102A  EF19  F008         	goto	u1790
  1697   00102E                     u1791:
  1698   00102E  EF81  F007         	goto	l3172
  1699   001032                     u1790:
  1700   001032  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1701   001034  EF26  F008         	goto	u1800
  1702   001038  5035               	movf	(dtoa@p+1)^0,w,c
  1703   00103A  E106               	bnz	u1801
  1704   00103C  0434               	decf	dtoa@p^0,w,c
  1705   00103E  B0D8               	btfsc	status,0,c
  1706   001040  EF24  F008         	goto	u1801
  1707   001044  EF26  F008         	goto	u1800
  1708   001048                     u1801:
  1709   001048  EF81  F007         	goto	l3172
  1710   00104C                     u1800:
  1711   00104C                     l3188:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1714   00104C  5040               	movf	dtoa@s^0,w,c
  1715   00104E  B4D8               	btfsc	status,2,c
  1716   001050  EF2C  F008         	goto	u1811
  1717   001054  EF2E  F008         	goto	u1810
  1718   001058                     u1811:
  1719   001058  EF39  F008         	goto	l3194
  1720   00105C                     u1810:
  1721   00105C                     
  1722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1723   00105C  0641               	decf	dtoa@i^0,f,c
  1724   00105E  A0D8               	btfss	status,0,c
  1725   001060  0642               	decf	(dtoa@i+1)^0,f,c
  1726   001062                     
  1727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1728   001062  0EBD               	movlw	low _dbuf
  1729   001064  2441               	addwf	dtoa@i^0,w,c
  1730   001066  6ED9               	movwf	fsr2l,c
  1731   001068  0E00               	movlw	high _dbuf
  1732   00106A  2042               	addwfc	(dtoa@i+1)^0,w,c
  1733   00106C  6EDA               	movwf	fsr2h,c
  1734   00106E  C040  FFDF         	movff	dtoa@s,indf2
  1735   001072                     l3194:
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1738   001072  C020  F015         	movff	dtoa@fp,pad@fp
  1739   001076  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1740   00107A  0EBD               	movlw	low _dbuf
  1741   00107C  2441               	addwf	dtoa@i^0,w,c
  1742   00107E  6E17               	movwf	pad@buf^0,c
  1743   001080  0E00               	movlw	high _dbuf
  1744   001082  2042               	addwfc	(dtoa@i+1)^0,w,c
  1745   001084  6E18               	movwf	(pad@buf+1)^0,c
  1746   001086  C036  F019         	movff	dtoa@w,pad@p
  1747   00108A  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1748   00108E  EC7C  F00C         	call	_pad	;wreg free
  1749   001092  0012               	return		;funcret
  1750   001094                     __end_of_dtoa:
  1751                           	callstack 0
  1752                           
  1753 ;; *************** function _pad *****************
  1754 ;; Defined at:
  1755 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1758 ;;		 -> sprintf@f(11), 
  1759 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1760 ;;		 -> dbuf(32), 
  1761 ;;  p               2   24[COMRAM] int 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  w               2   29[COMRAM] int 
  1764 ;;  i               2   27[COMRAM] int 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1774 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;Total ram usage:       11 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 7
  1781 ;; This function calls:
  1782 ;;		_fputc
  1783 ;;		_fputs
  1784 ;; This function is called by:
  1785 ;;		_dtoa
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text5
  1790   0018F8                     __ptext5:
  1791                           	callstack 0
  1792   0018F8                     _pad:
  1793                           	callstack 19
  1794   0018F8                     
  1795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1796   0018F8  BE1A               	btfsc	(pad@p+1)^0,7,c
  1797   0018FA  EF81  F00C         	goto	u1701
  1798   0018FE  EF83  F00C         	goto	u1700
  1799   001902                     u1701:
  1800   001902  EF89  F00C         	goto	l3136
  1801   001906                     u1700:
  1802   001906  C019  F01E         	movff	pad@p,pad@w
  1803   00190A  C01A  F01F         	movff	pad@p+1,pad@w+1
  1804   00190E  EF8D  F00C         	goto	l1193
  1805   001912                     l3136:
  1806   001912  0E00               	movlw	0
  1807   001914  6E1F               	movwf	(pad@w+1)^0,c
  1808   001916  0E00               	movlw	0
  1809   001918  6E1E               	movwf	pad@w^0,c
  1810   00191A                     l1193:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1813   00191A  0E00               	movlw	0
  1814   00191C  6E1D               	movwf	(pad@i+1)^0,c
  1815   00191E  0E00               	movlw	0
  1816   001920  6E1C               	movwf	pad@i^0,c
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1819   001922  EF9F  F00C         	goto	l3142
  1820   001926                     l3138:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1823   001926  0E00               	movlw	0
  1824   001928  6E06               	movwf	(fputc@c+1)^0,c
  1825   00192A  0E20               	movlw	32
  1826   00192C  6E05               	movwf	fputc@c^0,c
  1827   00192E  C015  F007         	movff	pad@fp,fputc@fp
  1828   001932  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1829   001936  ECD3  F00B         	call	_fputc	;wreg free
  1830   00193A                     
  1831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1832   00193A  4A1C               	infsnz	pad@i^0,f,c
  1833   00193C  2A1D               	incf	(pad@i+1)^0,f,c
  1834   00193E                     l3142:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1837   00193E  501E               	movf	pad@w^0,w,c
  1838   001940  5C1C               	subwf	pad@i^0,w,c
  1839   001942  501D               	movf	(pad@i+1)^0,w,c
  1840   001944  0A80               	xorlw	128
  1841   001946  6E1B               	movwf	??_pad^0,c
  1842   001948  501F               	movf	(pad@w+1)^0,w,c
  1843   00194A  0A80               	xorlw	128
  1844   00194C  581B               	subwfb	??_pad^0,w,c
  1845   00194E  A0D8               	btfss	status,0,c
  1846   001950  EFAC  F00C         	goto	u1711
  1847   001954  EFAE  F00C         	goto	u1710
  1848   001958                     u1711:
  1849   001958  EF93  F00C         	goto	l3138
  1850   00195C                     u1710:
  1851   00195C                     
  1852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1853   00195C  C017  F00E         	movff	pad@buf,fputs@s
  1854   001960  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1855   001964  C015  F010         	movff	pad@fp,fputs@fp
  1856   001968  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1857   00196C  EC3F  F00E         	call	_fputs	;wreg free
  1858   001970  0012               	return		;funcret
  1859   001972                     __end_of_pad:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function _fputs *****************
  1863 ;; Defined at:
  1864 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1867 ;;		 -> dbuf(32), 
  1868 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1869 ;;		 -> sprintf@f(11), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  i               2   18[COMRAM] int 
  1872 ;;  c               1   17[COMRAM] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2   13[COMRAM] int 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1883 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;Total ram usage:        7 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 6
  1889 ;; This function calls:
  1890 ;;		_fputc
  1891 ;; This function is called by:
  1892 ;;		_pad
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text6
  1897   001C7E                     __ptext6:
  1898                           	callstack 0
  1899   001C7E                     _fputs:
  1900                           	callstack 19
  1901   001C7E  0E00               	movlw	0
  1902   001C80  6E14               	movwf	(fputs@i+1)^0,c
  1903   001C82  0E00               	movlw	0
  1904   001C84  6E13               	movwf	fputs@i^0,c
  1905   001C86  EF50  F00E         	goto	l3046
  1906   001C8A                     l3042:
  1907   001C8A  C012  F005         	movff	fputs@c,fputc@c
  1908   001C8E  6A06               	clrf	(fputc@c+1)^0,c
  1909   001C90  C010  F007         	movff	fputs@fp,fputc@fp
  1910   001C94  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1911   001C98  ECD3  F00B         	call	_fputc	;wreg free
  1912   001C9C  4A13               	infsnz	fputs@i^0,f,c
  1913   001C9E  2A14               	incf	(fputs@i+1)^0,f,c
  1914   001CA0                     l3046:
  1915   001CA0  5013               	movf	fputs@i^0,w,c
  1916   001CA2  240E               	addwf	fputs@s^0,w,c
  1917   001CA4  6ED9               	movwf	fsr2l,c
  1918   001CA6  5014               	movf	(fputs@i+1)^0,w,c
  1919   001CA8  200F               	addwfc	(fputs@s+1)^0,w,c
  1920   001CAA  6EDA               	movwf	fsr2h,c
  1921   001CAC  50DF               	movf	indf2,w,c
  1922   001CAE  6E12               	movwf	fputs@c^0,c
  1923   001CB0  5012               	movf	fputs@c^0,w,c
  1924   001CB2  A4D8               	btfss	status,2,c
  1925   001CB4  EF5E  F00E         	goto	u1551
  1926   001CB8  EF60  F00E         	goto	u1550
  1927   001CBC                     u1551:
  1928   001CBC  EF45  F00E         	goto	l3042
  1929   001CC0                     u1550:
  1930   001CC0  0012               	return		;funcret
  1931   001CC2                     __end_of_fputs:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _fputc *****************
  1935 ;; Defined at:
  1936 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  c               2    4[COMRAM] int 
  1939 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1940 ;;		 -> sprintf@f(11), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2    4[COMRAM] int 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;Total ram usage:        9 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 5
  1959 ;; This function calls:
  1960 ;;		_putch
  1961 ;; This function is called by:
  1962 ;;		_pad
  1963 ;;		_vfpfcnvrt
  1964 ;;		_fputs
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text7
  1969   0017A6                     __ptext7:
  1970                           	callstack 0
  1971   0017A6                     _fputc:
  1972                           	callstack 22
  1973   0017A6  5007               	movf	fputc@fp^0,w,c
  1974   0017A8  1008               	iorwf	(fputc@fp+1)^0,w,c
  1975   0017AA  B4D8               	btfsc	status,2,c
  1976   0017AC  EFDA  F00B         	goto	u1511
  1977   0017B0  EFDC  F00B         	goto	u1510
  1978   0017B4                     u1511:
  1979   0017B4  EFE5  F00B         	goto	l3030
  1980   0017B8                     u1510:
  1981   0017B8  5007               	movf	fputc@fp^0,w,c
  1982   0017BA  1008               	iorwf	(fputc@fp+1)^0,w,c
  1983   0017BC  A4D8               	btfss	status,2,c
  1984   0017BE  EFE3  F00B         	goto	u1521
  1985   0017C2  EFE5  F00B         	goto	u1520
  1986   0017C6                     u1521:
  1987   0017C6  EFEA  F00B         	goto	l3032
  1988   0017CA                     u1520:
  1989   0017CA                     l3030:
  1990   0017CA  5005               	movf	fputc@c^0,w,c
  1991   0017CC  ECCD  F00F         	call	_putch
  1992   0017D0  EF37  F00C         	goto	l1241
  1993   0017D4                     l3032:
  1994   0017D4  EE20 F009          	lfsr	2,9
  1995   0017D8  5007               	movf	fputc@fp^0,w,c
  1996   0017DA  26D9               	addwf	fsr2l,f,c
  1997   0017DC  5008               	movf	(fputc@fp+1)^0,w,c
  1998   0017DE  22DA               	addwfc	fsr2h,f,c
  1999   0017E0  50DE               	movf	postinc2,w,c
  2000   0017E2  10DE               	iorwf	postinc2,w,c
  2001   0017E4  B4D8               	btfsc	status,2,c
  2002   0017E6  EFF7  F00B         	goto	u1531
  2003   0017EA  EFF9  F00B         	goto	u1530
  2004   0017EE                     u1531:
  2005   0017EE  EF14  F00C         	goto	l3036
  2006   0017F2                     u1530:
  2007   0017F2  EE20 F009          	lfsr	2,9
  2008   0017F6  5007               	movf	fputc@fp^0,w,c
  2009   0017F8  26D9               	addwf	fsr2l,f,c
  2010   0017FA  5008               	movf	(fputc@fp+1)^0,w,c
  2011   0017FC  22DA               	addwfc	fsr2h,f,c
  2012   0017FE  EE10 F003          	lfsr	1,3
  2013   001802  5007               	movf	fputc@fp^0,w,c
  2014   001804  26E1               	addwf	fsr1l,f,c
  2015   001806  5008               	movf	(fputc@fp+1)^0,w,c
  2016   001808  22E2               	addwfc	fsr1h,f,c
  2017   00180A  50DE               	movf	postinc2,w,c
  2018   00180C  5CE6               	subwf	postinc1,w,c
  2019   00180E  50E6               	movf	postinc1,w,c
  2020   001810  0A80               	xorlw	128
  2021   001812  6E0D               	movwf	(??_fputc+4)^0,c
  2022   001814  50DE               	movf	postinc2,w,c
  2023   001816  0A80               	xorlw	128
  2024   001818  580D               	subwfb	(??_fputc+4)^0,w,c
  2025   00181A  B0D8               	btfsc	status,0,c
  2026   00181C  EF12  F00C         	goto	u1541
  2027   001820  EF14  F00C         	goto	u1540
  2028   001824                     u1541:
  2029   001824  EF37  F00C         	goto	l1241
  2030   001828                     u1540:
  2031   001828                     l3036:
  2032   001828  EE20 F003          	lfsr	2,3
  2033   00182C  5007               	movf	fputc@fp^0,w,c
  2034   00182E  26D9               	addwf	fsr2l,f,c
  2035   001830  5008               	movf	(fputc@fp+1)^0,w,c
  2036   001832  22DA               	addwfc	fsr2h,f,c
  2037   001834  CFDE F009          	movff	postinc2,??_fputc
  2038   001838  CFDD F00A          	movff	postdec2,??_fputc+1
  2039   00183C  C007  FFD9         	movff	fputc@fp,fsr2l
  2040   001840  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2041   001844  CFDE F00B          	movff	postinc2,??_fputc+2
  2042   001848  CFDD F00C          	movff	postdec2,??_fputc+3
  2043   00184C  5009               	movf	??_fputc^0,w,c
  2044   00184E  240B               	addwf	(??_fputc+2)^0,w,c
  2045   001850  6ED9               	movwf	fsr2l,c
  2046   001852  500A               	movf	(??_fputc+1)^0,w,c
  2047   001854  200C               	addwfc	(??_fputc+3)^0,w,c
  2048   001856  6EDA               	movwf	fsr2h,c
  2049   001858  C005  FFDF         	movff	fputc@c,indf2
  2050   00185C  EE20 F003          	lfsr	2,3
  2051   001860  5007               	movf	fputc@fp^0,w,c
  2052   001862  26D9               	addwf	fsr2l,f,c
  2053   001864  5008               	movf	(fputc@fp+1)^0,w,c
  2054   001866  22DA               	addwfc	fsr2h,f,c
  2055   001868  2ADE               	incf	postinc2,f,c
  2056   00186A  0E00               	movlw	0
  2057   00186C  22DD               	addwfc	postdec2,f,c
  2058   00186E                     l1241:
  2059   00186E  0012               	return		;funcret
  2060   001870                     __end_of_fputc:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _putch *****************
  2064 ;; Defined at:
  2065 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  c               1    wreg     unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  c               1    0[COMRAM] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 4
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_fputc
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text8
  2094   001F9A                     __ptext8:
  2095                           	callstack 0
  2096   001F9A                     _putch:
  2097                           	callstack 22
  2098   001F9A  0012               	return		;funcret
  2099   001F9C                     __end_of_putch:
  2100                           	callstack 0
  2101                           
  2102 ;; *************** function _abs *****************
  2103 ;; Defined at:
  2104 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  a               2   22[COMRAM] int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2   22[COMRAM] int 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;Total ram usage:        4 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; Hardware stack levels required when called: 4
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_dtoa
  2129 ;;		_normalise_readings
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text9
  2134   001D04                     __ptext9:
  2135                           	callstack 0
  2136   001D04                     _abs:
  2137                           	callstack 22
  2138   001D04  BE18               	btfsc	(abs@a+1)^0,7,c
  2139   001D06  EF8F  F00E         	goto	u1560
  2140   001D0A  5018               	movf	(abs@a+1)^0,w,c
  2141   001D0C  E106               	bnz	u1561
  2142   001D0E  0417               	decf	abs@a^0,w,c
  2143   001D10  B0D8               	btfsc	status,0,c
  2144   001D12  EF8D  F00E         	goto	u1561
  2145   001D16  EF8F  F00E         	goto	u1560
  2146   001D1A                     u1561:
  2147   001D1A  EF9D  F00E         	goto	l1161
  2148   001D1E                     u1560:
  2149   001D1E  C017  F019         	movff	abs@a,??_abs
  2150   001D22  C018  F01A         	movff	abs@a+1,??_abs+1
  2151   001D26  1E19               	comf	??_abs^0,f,c
  2152   001D28  1E1A               	comf	(??_abs+1)^0,f,c
  2153   001D2A  4A19               	infsnz	??_abs^0,f,c
  2154   001D2C  2A1A               	incf	(??_abs+1)^0,f,c
  2155   001D2E  C019  F017         	movff	??_abs,?_abs
  2156   001D32  C01A  F018         	movff	??_abs+1,?_abs+1
  2157   001D36  EFA1  F00E         	goto	l1164
  2158   001D3A                     l1161:
  2159   001D3A  C017  F017         	movff	abs@a,?_abs
  2160   001D3E  C018  F018         	movff	abs@a+1,?_abs+1
  2161   001D42                     l1164:
  2162   001D42  0012               	return		;funcret
  2163   001D44                     __end_of_abs:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function ___aomod *****************
  2167 ;; Defined at:
  2168 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  dividend        8    4[COMRAM] long long 
  2171 ;;  divisor         8   12[COMRAM] long long 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  sign            1   21[COMRAM] unsigned char 
  2174 ;;  counter         1   20[COMRAM] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  8    4[COMRAM] long long 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2184 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2187 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;Total ram usage:       18 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 4
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_dtoa
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text10
  2199   001388                     __ptext10:
  2200                           	callstack 0
  2201   001388                     ___aomod:
  2202                           	callstack 22
  2203   001388  0E00               	movlw	0
  2204   00138A  6E16               	movwf	___aomod@sign^0,c
  2205   00138C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2206   00138E  EFCD  F009         	goto	u1640
  2207   001392  EFCB  F009         	goto	u1641
  2208   001396                     u1641:
  2209   001396  EFDF  F009         	goto	l3104
  2210   00139A                     u1640:
  2211   00139A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2212   00139C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2213   00139E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2214   0013A0  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2215   0013A2  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2216   0013A4  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2217   0013A6  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2218   0013A8  6C05               	negf	___aomod@dividend^0,c
  2219   0013AA  0E00               	movlw	0
  2220   0013AC  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2221   0013AE  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2222   0013B0  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2223   0013B2  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2224   0013B4  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2225   0013B6  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2226   0013B8  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2227   0013BA  0E01               	movlw	1
  2228   0013BC  6E16               	movwf	___aomod@sign^0,c
  2229   0013BE                     l3104:
  2230   0013BE  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2231   0013C0  EFE6  F009         	goto	u1650
  2232   0013C4  EFE4  F009         	goto	u1651
  2233   0013C8                     u1651:
  2234   0013C8  EFF6  F009         	goto	l3108
  2235   0013CC                     u1650:
  2236   0013CC  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2237   0013CE  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2238   0013D0  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2239   0013D2  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2240   0013D4  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2241   0013D6  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2242   0013D8  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2243   0013DA  6C0D               	negf	___aomod@divisor^0,c
  2244   0013DC  0E00               	movlw	0
  2245   0013DE  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2246   0013E0  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2247   0013E2  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2248   0013E4  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2249   0013E6  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2250   0013E8  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2251   0013EA  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2252   0013EC                     l3108:
  2253   0013EC  500D               	movf	___aomod@divisor^0,w,c
  2254   0013EE  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2255   0013F0  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2256   0013F2  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2257   0013F4  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2258   0013F6  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2259   0013F8  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2260   0013FA  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2261   0013FC  B4D8               	btfsc	status,2,c
  2262   0013FE  EF03  F00A         	goto	u1661
  2263   001402  EF05  F00A         	goto	u1660
  2264   001406                     u1661:
  2265   001406  EF4D  F00A         	goto	l3124
  2266   00140A                     u1660:
  2267   00140A  0E01               	movlw	1
  2268   00140C  6E15               	movwf	___aomod@counter^0,c
  2269   00140E  EF13  F00A         	goto	l3114
  2270   001412                     l3112:
  2271   001412  90D8               	bcf	status,0,c
  2272   001414  360D               	rlcf	___aomod@divisor^0,f,c
  2273   001416  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2274   001418  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2275   00141A  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2276   00141C  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2277   00141E  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2278   001420  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2279   001422  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2280   001424  2A15               	incf	___aomod@counter^0,f,c
  2281   001426                     l3114:
  2282   001426  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2283   001428  EF18  F00A         	goto	u1671
  2284   00142C  EF1A  F00A         	goto	u1670
  2285   001430                     u1671:
  2286   001430  EF09  F00A         	goto	l3112
  2287   001434                     u1670:
  2288   001434                     l3116:
  2289   001434  500D               	movf	___aomod@divisor^0,w,c
  2290   001436  5C05               	subwf	___aomod@dividend^0,w,c
  2291   001438  500E               	movf	(___aomod@divisor+1)^0,w,c
  2292   00143A  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2293   00143C  500F               	movf	(___aomod@divisor+2)^0,w,c
  2294   00143E  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2295   001440  5010               	movf	(___aomod@divisor+3)^0,w,c
  2296   001442  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2297   001444  5011               	movf	(___aomod@divisor+4)^0,w,c
  2298   001446  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2299   001448  5012               	movf	(___aomod@divisor+5)^0,w,c
  2300   00144A  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2301   00144C  5013               	movf	(___aomod@divisor+6)^0,w,c
  2302   00144E  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2303   001450  5014               	movf	(___aomod@divisor+7)^0,w,c
  2304   001452  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2305   001454  A0D8               	btfss	status,0,c
  2306   001456  EF2F  F00A         	goto	u1681
  2307   00145A  EF31  F00A         	goto	u1680
  2308   00145E                     u1681:
  2309   00145E  EF41  F00A         	goto	l3120
  2310   001462                     u1680:
  2311   001462  500D               	movf	___aomod@divisor^0,w,c
  2312   001464  5E05               	subwf	___aomod@dividend^0,f,c
  2313   001466  500E               	movf	(___aomod@divisor+1)^0,w,c
  2314   001468  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2315   00146A  500F               	movf	(___aomod@divisor+2)^0,w,c
  2316   00146C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2317   00146E  5010               	movf	(___aomod@divisor+3)^0,w,c
  2318   001470  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2319   001472  5011               	movf	(___aomod@divisor+4)^0,w,c
  2320   001474  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2321   001476  5012               	movf	(___aomod@divisor+5)^0,w,c
  2322   001478  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2323   00147A  5013               	movf	(___aomod@divisor+6)^0,w,c
  2324   00147C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2325   00147E  5014               	movf	(___aomod@divisor+7)^0,w,c
  2326   001480  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2327   001482                     l3120:
  2328   001482  90D8               	bcf	status,0,c
  2329   001484  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2330   001486  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2331   001488  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2332   00148A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2333   00148C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2334   00148E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2335   001490  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2336   001492  320D               	rrcf	___aomod@divisor^0,f,c
  2337   001494  2E15               	decfsz	___aomod@counter^0,f,c
  2338   001496  EF1A  F00A         	goto	l3116
  2339   00149A                     l3124:
  2340   00149A  5016               	movf	___aomod@sign^0,w,c
  2341   00149C  B4D8               	btfsc	status,2,c
  2342   00149E  EF53  F00A         	goto	u1691
  2343   0014A2  EF55  F00A         	goto	u1690
  2344   0014A6                     u1691:
  2345   0014A6  EF65  F00A         	goto	l3128
  2346   0014AA                     u1690:
  2347   0014AA  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2348   0014AC  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2349   0014AE  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2350   0014B0  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2351   0014B2  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2352   0014B4  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2353   0014B6  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2354   0014B8  6C05               	negf	___aomod@dividend^0,c
  2355   0014BA  0E00               	movlw	0
  2356   0014BC  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2357   0014BE  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2358   0014C0  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2359   0014C2  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2360   0014C4  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2361   0014C6  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2362   0014C8  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2363   0014CA                     l3128:
  2364   0014CA  C005  F005         	movff	___aomod@dividend,?___aomod
  2365   0014CE  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2366   0014D2  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2367   0014D6  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2368   0014DA  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2369   0014DE  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2370   0014E2  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2371   0014E6  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2372   0014EA  0012               	return		;funcret
  2373   0014EC                     __end_of___aomod:
  2374                           	callstack 0
  2375                           
  2376 ;; *************** function ___aodiv *****************
  2377 ;; Defined at:
  2378 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  dividend        8    4[COMRAM] long long 
  2381 ;;  divisor         8   12[COMRAM] long long 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  quotient        8   22[COMRAM] long long 
  2384 ;;  sign            1   21[COMRAM] unsigned char 
  2385 ;;  counter         1   20[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  8    4[COMRAM] long long 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2395 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2396 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2398 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2399 ;;Total ram usage:       26 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 4
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_dtoa
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text11
  2410   001094                     __ptext11:
  2411                           	callstack 0
  2412   001094                     ___aodiv:
  2413                           	callstack 22
  2414   001094  0E00               	movlw	0
  2415   001096  6E16               	movwf	___aodiv@sign^0,c
  2416   001098  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2417   00109A  EF53  F008         	goto	u1570
  2418   00109E  EF51  F008         	goto	u1571
  2419   0010A2                     u1571:
  2420   0010A2  EF65  F008         	goto	l3060
  2421   0010A6                     u1570:
  2422   0010A6  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2423   0010A8  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2424   0010AA  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2425   0010AC  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2426   0010AE  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2427   0010B0  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2428   0010B2  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2429   0010B4  6C0D               	negf	___aodiv@divisor^0,c
  2430   0010B6  0E00               	movlw	0
  2431   0010B8  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2432   0010BA  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2433   0010BC  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2434   0010BE  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2435   0010C0  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2436   0010C2  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2437   0010C4  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2438   0010C6  0E01               	movlw	1
  2439   0010C8  6E16               	movwf	___aodiv@sign^0,c
  2440   0010CA                     l3060:
  2441   0010CA  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2442   0010CC  EF6C  F008         	goto	u1580
  2443   0010D0  EF6A  F008         	goto	u1581
  2444   0010D4                     u1581:
  2445   0010D4  EF7E  F008         	goto	l3066
  2446   0010D8                     u1580:
  2447   0010D8  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2448   0010DA  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2449   0010DC  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2450   0010DE  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2451   0010E0  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2452   0010E2  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2453   0010E4  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2454   0010E6  6C05               	negf	___aodiv@dividend^0,c
  2455   0010E8  0E00               	movlw	0
  2456   0010EA  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2457   0010EC  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2458   0010EE  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2459   0010F0  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2460   0010F2  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2461   0010F4  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2462   0010F6  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2463   0010F8  0E01               	movlw	1
  2464   0010FA  1A16               	xorwf	___aodiv@sign^0,f,c
  2465   0010FC                     l3066:
  2466   0010FC  EE20  F017         	lfsr	2,___aodiv@quotient
  2467   001100  0E07               	movlw	7
  2468   001102                     u1591:
  2469   001102  6ADE               	clrf	postinc2,c
  2470   001104  06E8               	decf	wreg,f,c
  2471   001106  E2FD               	bc	u1591
  2472   001108  500D               	movf	___aodiv@divisor^0,w,c
  2473   00110A  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2474   00110C  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2475   00110E  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2476   001110  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2477   001112  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2478   001114  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2479   001116  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2480   001118  B4D8               	btfsc	status,2,c
  2481   00111A  EF91  F008         	goto	u1601
  2482   00111E  EF93  F008         	goto	u1600
  2483   001122                     u1601:
  2484   001122  EFE5  F008         	goto	l3088
  2485   001126                     u1600:
  2486   001126  0E01               	movlw	1
  2487   001128  6E15               	movwf	___aodiv@counter^0,c
  2488   00112A  EFA1  F008         	goto	l3074
  2489   00112E                     l3072:
  2490   00112E  90D8               	bcf	status,0,c
  2491   001130  360D               	rlcf	___aodiv@divisor^0,f,c
  2492   001132  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2493   001134  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2494   001136  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2495   001138  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2496   00113A  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2497   00113C  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2498   00113E  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2499   001140  2A15               	incf	___aodiv@counter^0,f,c
  2500   001142                     l3074:
  2501   001142  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2502   001144  EFA6  F008         	goto	u1611
  2503   001148  EFA8  F008         	goto	u1610
  2504   00114C                     u1611:
  2505   00114C  EF97  F008         	goto	l3072
  2506   001150                     u1610:
  2507   001150                     l3076:
  2508   001150  90D8               	bcf	status,0,c
  2509   001152  3617               	rlcf	___aodiv@quotient^0,f,c
  2510   001154  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2511   001156  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2512   001158  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2513   00115A  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2514   00115C  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2515   00115E  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2516   001160  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2517   001162  500D               	movf	___aodiv@divisor^0,w,c
  2518   001164  5C05               	subwf	___aodiv@dividend^0,w,c
  2519   001166  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2520   001168  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2521   00116A  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2522   00116C  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2523   00116E  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2524   001170  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2525   001172  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2526   001174  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2527   001176  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2528   001178  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2529   00117A  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2530   00117C  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2531   00117E  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2532   001180  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2533   001182  A0D8               	btfss	status,0,c
  2534   001184  EFC6  F008         	goto	u1621
  2535   001188  EFC8  F008         	goto	u1620
  2536   00118C                     u1621:
  2537   00118C  EFD9  F008         	goto	l3084
  2538   001190                     u1620:
  2539   001190  500D               	movf	___aodiv@divisor^0,w,c
  2540   001192  5E05               	subwf	___aodiv@dividend^0,f,c
  2541   001194  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2542   001196  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2543   001198  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2544   00119A  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2545   00119C  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2546   00119E  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2547   0011A0  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2548   0011A2  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2549   0011A4  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2550   0011A6  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2551   0011A8  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2552   0011AA  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2553   0011AC  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2554   0011AE  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2555   0011B0  8017               	bsf	___aodiv@quotient^0,0,c
  2556   0011B2                     l3084:
  2557   0011B2  90D8               	bcf	status,0,c
  2558   0011B4  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2559   0011B6  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2560   0011B8  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2561   0011BA  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2562   0011BC  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2563   0011BE  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2564   0011C0  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2565   0011C2  320D               	rrcf	___aodiv@divisor^0,f,c
  2566   0011C4  2E15               	decfsz	___aodiv@counter^0,f,c
  2567   0011C6  EFA8  F008         	goto	l3076
  2568   0011CA                     l3088:
  2569   0011CA  5016               	movf	___aodiv@sign^0,w,c
  2570   0011CC  B4D8               	btfsc	status,2,c
  2571   0011CE  EFEB  F008         	goto	u1631
  2572   0011D2  EFED  F008         	goto	u1630
  2573   0011D6                     u1631:
  2574   0011D6  EFFD  F008         	goto	l3092
  2575   0011DA                     u1630:
  2576   0011DA  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2577   0011DC  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2578   0011DE  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2579   0011E0  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2580   0011E2  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2581   0011E4  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2582   0011E6  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2583   0011E8  6C17               	negf	___aodiv@quotient^0,c
  2584   0011EA  0E00               	movlw	0
  2585   0011EC  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2586   0011EE  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2587   0011F0  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2588   0011F2  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2589   0011F4  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2590   0011F6  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2591   0011F8  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2592   0011FA                     l3092:
  2593   0011FA  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2594   0011FE  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2595   001202  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2596   001206  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2597   00120A  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2598   00120E  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2599   001212  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2600   001216  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2601   00121A  0012               	return		;funcret
  2602   00121C                     __end_of___aodiv:
  2603                           	callstack 0
  2604                           
  2605 ;; *************** function _setMotorPWM *****************
  2606 ;; Defined at:
  2607 ;;		line 61 in file "dc_motor.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  m               2   17[COMRAM] PTR struct DC_motor
  2610 ;;		 -> main@motorR(9), main@motorL(9), 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  negDuty         1   22[COMRAM] unsigned char 
  2613 ;;  posDuty         1   21[COMRAM] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;Total ram usage:        6 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 5
  2630 ;; This function calls:
  2631 ;;		___lwdiv
  2632 ;;		___wmul
  2633 ;; This function is called by:
  2634 ;;		_main
  2635 ;;		_stop
  2636 ;;		_turnLeft45
  2637 ;;		_turnRight45
  2638 ;;		_fullSpeedAhead
  2639 ;;		_reverseFullSpeed
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text12
  2644   00121C                     __ptext12:
  2645                           	callstack 0
  2646   00121C                     _setMotorPWM:
  2647                           	callstack 25
  2648   00121C                     
  2649                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2650   00121C  EE20 F002          	lfsr	2,2
  2651   001220  5012               	movf	setMotorPWM@m^0,w,c
  2652   001222  26D9               	addwf	fsr2l,f,c
  2653   001224  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2654   001226  22DA               	addwfc	fsr2h,f,c
  2655   001228  50DF               	movf	indf2,w,c
  2656   00122A  B4D8               	btfsc	status,2,c
  2657   00122C  EF1A  F009         	goto	u1261
  2658   001230  EF1C  F009         	goto	u1260
  2659   001234                     u1261:
  2660   001234  EF50  F009         	goto	l2550
  2661   001238                     u1260:
  2662   001238                     
  2663                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2664   001238  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  2665   00123C  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2666   001240  50DF               	movf	indf2,w,c
  2667   001242  6E14               	movwf	??_setMotorPWM^0,c
  2668   001244  5014               	movf	??_setMotorPWM^0,w,c
  2669   001246  6E05               	movwf	___wmul@multiplier^0,c
  2670   001248  6A06               	clrf	(___wmul@multiplier+1)^0,c
  2671   00124A  EE20 F003          	lfsr	2,3
  2672   00124E  5012               	movf	setMotorPWM@m^0,w,c
  2673   001250  26D9               	addwf	fsr2l,f,c
  2674   001252  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2675   001254  22DA               	addwfc	fsr2h,f,c
  2676   001256  CFDE F007          	movff	postinc2,___wmul@multiplicand
  2677   00125A  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  2678   00125E  EC31  F00F         	call	___wmul	;wreg free
  2679   001262  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2680   001266  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2681   00126A  0E00               	movlw	0
  2682   00126C  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  2683   00126E  0E64               	movlw	100
  2684   001270  6E0D               	movwf	___lwdiv@divisor^0,c
  2685   001272  ECB9  F00C         	call	___lwdiv	;wreg free
  2686   001276  EE20 F003          	lfsr	2,3
  2687   00127A  5012               	movf	setMotorPWM@m^0,w,c
  2688   00127C  26D9               	addwf	fsr2l,f,c
  2689   00127E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2690   001280  22DA               	addwfc	fsr2h,f,c
  2691   001282  50DF               	movf	indf2,w,c
  2692   001284  6E15               	movwf	(??_setMotorPWM+1)^0,c
  2693   001286  500B               	movf	?___lwdiv^0,w,c
  2694   001288  5C15               	subwf	(??_setMotorPWM+1)^0,w,c
  2695   00128A  6E16               	movwf	setMotorPWM@posDuty^0,c
  2696   00128C                     
  2697                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2698   00128C  EE20 F003          	lfsr	2,3
  2699   001290  5012               	movf	setMotorPWM@m^0,w,c
  2700   001292  26D9               	addwf	fsr2l,f,c
  2701   001294  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2702   001296  22DA               	addwfc	fsr2h,f,c
  2703   001298  50DF               	movf	indf2,w,c
  2704   00129A  6E17               	movwf	setMotorPWM@negDuty^0,c
  2705                           
  2706                           ;dc_motor.c: 68:     }
  2707   00129C  EF73  F009         	goto	l2554
  2708   0012A0                     l2550:
  2709                           
  2710                           ;dc_motor.c: 70:         posDuty=0;
  2711   0012A0  0E00               	movlw	0
  2712   0012A2  6E16               	movwf	setMotorPWM@posDuty^0,c
  2713   0012A4                     
  2714                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2715   0012A4  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  2716   0012A8  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2717   0012AC  50DF               	movf	indf2,w,c
  2718   0012AE  6E14               	movwf	??_setMotorPWM^0,c
  2719   0012B0  5014               	movf	??_setMotorPWM^0,w,c
  2720   0012B2  6E05               	movwf	___wmul@multiplier^0,c
  2721   0012B4  6A06               	clrf	(___wmul@multiplier+1)^0,c
  2722   0012B6  EE20 F003          	lfsr	2,3
  2723   0012BA  5012               	movf	setMotorPWM@m^0,w,c
  2724   0012BC  26D9               	addwf	fsr2l,f,c
  2725   0012BE  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2726   0012C0  22DA               	addwfc	fsr2h,f,c
  2727   0012C2  CFDE F007          	movff	postinc2,___wmul@multiplicand
  2728   0012C6  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  2729   0012CA  EC31  F00F         	call	___wmul	;wreg free
  2730   0012CE  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2731   0012D2  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2732   0012D6  0E00               	movlw	0
  2733   0012D8  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  2734   0012DA  0E64               	movlw	100
  2735   0012DC  6E0D               	movwf	___lwdiv@divisor^0,c
  2736   0012DE  ECB9  F00C         	call	___lwdiv	;wreg free
  2737   0012E2  500B               	movf	?___lwdiv^0,w,c
  2738   0012E4  6E17               	movwf	setMotorPWM@negDuty^0,c
  2739   0012E6                     l2554:
  2740                           
  2741                           ;dc_motor.c: 74:     if (m->direction) {
  2742   0012E6  EE20 F001          	lfsr	2,1
  2743   0012EA  5012               	movf	setMotorPWM@m^0,w,c
  2744   0012EC  26D9               	addwf	fsr2l,f,c
  2745   0012EE  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2746   0012F0  22DA               	addwfc	fsr2h,f,c
  2747   0012F2  50DF               	movf	indf2,w,c
  2748   0012F4  B4D8               	btfsc	status,2,c
  2749   0012F6  EF7F  F009         	goto	u1271
  2750   0012FA  EF81  F009         	goto	u1270
  2751   0012FE                     u1271:
  2752   0012FE  EFA3  F009         	goto	l2558
  2753   001302                     u1270:
  2754   001302                     
  2755                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2756   001302  EE20 F005          	lfsr	2,5
  2757   001306  5012               	movf	setMotorPWM@m^0,w,c
  2758   001308  26D9               	addwf	fsr2l,f,c
  2759   00130A  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2760   00130C  22DA               	addwfc	fsr2h,f,c
  2761   00130E  CFDE F014          	movff	postinc2,??_setMotorPWM
  2762   001312  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2763   001316  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2764   00131A  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2765   00131E  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  2766                           
  2767                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2768   001322  EE20 F007          	lfsr	2,7
  2769   001326  5012               	movf	setMotorPWM@m^0,w,c
  2770   001328  26D9               	addwf	fsr2l,f,c
  2771   00132A  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2772   00132C  22DA               	addwfc	fsr2h,f,c
  2773   00132E  CFDE F014          	movff	postinc2,??_setMotorPWM
  2774   001332  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2775   001336  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2776   00133A  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2777   00133E  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  2778                           
  2779                           ;dc_motor.c: 77:     } else {
  2780   001342  EFC3  F009         	goto	l86
  2781   001346                     l2558:
  2782                           
  2783                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2784   001346  EE20 F005          	lfsr	2,5
  2785   00134A  5012               	movf	setMotorPWM@m^0,w,c
  2786   00134C  26D9               	addwf	fsr2l,f,c
  2787   00134E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2788   001350  22DA               	addwfc	fsr2h,f,c
  2789   001352  CFDE F014          	movff	postinc2,??_setMotorPWM
  2790   001356  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2791   00135A  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2792   00135E  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2793   001362  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  2794                           
  2795                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2796   001366  EE20 F007          	lfsr	2,7
  2797   00136A  5012               	movf	setMotorPWM@m^0,w,c
  2798   00136C  26D9               	addwf	fsr2l,f,c
  2799   00136E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2800   001370  22DA               	addwfc	fsr2h,f,c
  2801   001372  CFDE F014          	movff	postinc2,??_setMotorPWM
  2802   001376  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2803   00137A  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2804   00137E  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2805   001382  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  2806   001386                     l86:
  2807   001386  0012               	return		;funcret
  2808   001388                     __end_of_setMotorPWM:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function ___wmul *****************
  2812 ;; Defined at:
  2813 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  multiplier      2    4[COMRAM] unsigned int 
  2816 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  product         2    8[COMRAM] unsigned int 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  2    4[COMRAM] unsigned int 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, prodl, prodh
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2831 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;Total ram usage:        6 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 4
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_setMotorPWM
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text13
  2843   001E62                     __ptext13:
  2844                           	callstack 0
  2845   001E62                     ___wmul:
  2846                           	callstack 25
  2847   001E62  5005               	movf	___wmul@multiplier^0,w,c
  2848   001E64  0207               	mulwf	___wmul@multiplicand^0,c
  2849   001E66  CFF3 F009          	movff	prodl,___wmul@product
  2850   001E6A  CFF4 F00A          	movff	prodh,___wmul@product+1
  2851   001E6E  5005               	movf	___wmul@multiplier^0,w,c
  2852   001E70  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  2853   001E72  50F3               	movf	243,w,c
  2854   001E74  260A               	addwf	(___wmul@product+1)^0,f,c
  2855   001E76  5006               	movf	(___wmul@multiplier+1)^0,w,c
  2856   001E78  0207               	mulwf	___wmul@multiplicand^0,c
  2857   001E7A  50F3               	movf	243,w,c
  2858   001E7C  260A               	addwf	(___wmul@product+1)^0,f,c
  2859   001E7E  C009  F005         	movff	___wmul@product,?___wmul
  2860   001E82  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  2861   001E86  0012               	return		;funcret
  2862   001E88                     __end_of___wmul:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function ___lwdiv *****************
  2866 ;; Defined at:
  2867 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  dividend        2   10[COMRAM] unsigned int 
  2870 ;;  divisor         2   12[COMRAM] unsigned int 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  quotient        2   14[COMRAM] unsigned int 
  2873 ;;  counter         1   16[COMRAM] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2   10[COMRAM] unsigned int 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;Total ram usage:        7 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 4
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_setMotorPWM
  2894 ;;		_collect_avg_readings
  2895 ;;		_normalise_readings
  2896 ;;		_make_master_closeness
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text14
  2901   001972                     __ptext14:
  2902                           	callstack 0
  2903   001972                     ___lwdiv:
  2904                           	callstack 25
  2905   001972  0E00               	movlw	0
  2906   001974  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  2907   001976  0E00               	movlw	0
  2908   001978  6E0F               	movwf	___lwdiv@quotient^0,c
  2909   00197A  500D               	movf	___lwdiv@divisor^0,w,c
  2910   00197C  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2911   00197E  B4D8               	btfsc	status,2,c
  2912   001980  EFC4  F00C         	goto	u1221
  2913   001984  EFC6  F00C         	goto	u1220
  2914   001988                     u1221:
  2915   001988  EFEE  F00C         	goto	l977
  2916   00198C                     u1220:
  2917   00198C  0E01               	movlw	1
  2918   00198E  6E11               	movwf	___lwdiv@counter^0,c
  2919   001990  EFCE  F00C         	goto	l2452
  2920   001994                     l2450:
  2921   001994  90D8               	bcf	status,0,c
  2922   001996  360D               	rlcf	___lwdiv@divisor^0,f,c
  2923   001998  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2924   00199A  2A11               	incf	___lwdiv@counter^0,f,c
  2925   00199C                     l2452:
  2926   00199C  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  2927   00199E  EFD3  F00C         	goto	u1231
  2928   0019A2  EFD5  F00C         	goto	u1230
  2929   0019A6                     u1231:
  2930   0019A6  EFCA  F00C         	goto	l2450
  2931   0019AA                     u1230:
  2932   0019AA                     l2454:
  2933   0019AA  90D8               	bcf	status,0,c
  2934   0019AC  360F               	rlcf	___lwdiv@quotient^0,f,c
  2935   0019AE  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2936   0019B0  500D               	movf	___lwdiv@divisor^0,w,c
  2937   0019B2  5C0B               	subwf	___lwdiv@dividend^0,w,c
  2938   0019B4  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  2939   0019B6  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2940   0019B8  A0D8               	btfss	status,0,c
  2941   0019BA  EFE1  F00C         	goto	u1241
  2942   0019BE  EFE3  F00C         	goto	u1240
  2943   0019C2                     u1241:
  2944   0019C2  EFE8  F00C         	goto	l2462
  2945   0019C6                     u1240:
  2946   0019C6  500D               	movf	___lwdiv@divisor^0,w,c
  2947   0019C8  5E0B               	subwf	___lwdiv@dividend^0,f,c
  2948   0019CA  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  2949   0019CC  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2950   0019CE  800F               	bsf	___lwdiv@quotient^0,0,c
  2951   0019D0                     l2462:
  2952   0019D0  90D8               	bcf	status,0,c
  2953   0019D2  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2954   0019D4  320D               	rrcf	___lwdiv@divisor^0,f,c
  2955   0019D6  2E11               	decfsz	___lwdiv@counter^0,f,c
  2956   0019D8  EFD5  F00C         	goto	l2454
  2957   0019DC                     l977:
  2958   0019DC  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  2959   0019E0  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2960   0019E4  0012               	return		;funcret
  2961   0019E6                     __end_of___lwdiv:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function _sendStringSerial4 *****************
  2965 ;; Defined at:
  2966 ;;		line 39 in file "serial.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  string          2    5[COMRAM] PTR unsigned char 
  2969 ;;		 -> main@buf(20), 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2984 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;Total ram usage:        2 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 5
  2988 ;; This function calls:
  2989 ;;		_sendCharSerial4
  2990 ;; This function is called by:
  2991 ;;		_main
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text15
  2996   001DB8                     __ptext15:
  2997                           	callstack 0
  2998   001DB8                     _sendStringSerial4:
  2999                           	callstack 25
  3000   001DB8                     
  3001                           ;serial.c: 40:  while(*string != 0) {
  3002   001DB8  EFE7  F00E         	goto	l2682
  3003   001DBC                     l2678:
  3004                           
  3005                           ;serial.c: 41:         sendCharSerial4(*string++);
  3006   001DBC  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  3007   001DC0  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3008   001DC4  50DF               	movf	indf2,w,c
  3009   001DC6  EC75  F00F         	call	_sendCharSerial4
  3010   001DCA  4A06               	infsnz	sendStringSerial4@string^0,f,c
  3011   001DCC  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  3012   001DCE                     l2682:
  3013                           
  3014                           ;serial.c: 40:  while(*string != 0) {
  3015   001DCE  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  3016   001DD2  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3017   001DD6  50DF               	movf	indf2,w,c
  3018   001DD8  A4D8               	btfss	status,2,c
  3019   001DDA  EFF1  F00E         	goto	u1331
  3020   001DDE  EFF3  F00E         	goto	u1330
  3021   001DE2                     u1331:
  3022   001DE2  EFDE  F00E         	goto	l2678
  3023   001DE6                     u1330:
  3024   001DE6  0012               	return		;funcret
  3025   001DE8                     __end_of_sendStringSerial4:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function _sendCharSerial4 *****************
  3029 ;; Defined at:
  3030 ;;		line 32 in file "serial.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  charToSend      1    wreg     unsigned char 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  charToSend      1    4[COMRAM] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;Total ram usage:        1 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 4
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_sendStringSerial4
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text16
  3059   001EEA                     __ptext16:
  3060                           	callstack 0
  3061   001EEA                     _sendCharSerial4:
  3062                           	callstack 25
  3063                           
  3064                           ;incstack = 0
  3065                           ;sendCharSerial4@charToSend stored from wreg
  3066   001EEA  6E05               	movwf	sendCharSerial4@charToSend^0,c
  3067   001EEC                     l382:
  3068   001EEC  010E               	movlb	14	; () banked
  3069   001EEE  A537               	btfss	55,2,b	;volatile
  3070   001EF0  EF7C  F00F         	goto	u1191
  3071   001EF4  EF7E  F00F         	goto	u1190
  3072   001EF8                     u1191:
  3073   001EF8  EF76  F00F         	goto	l382
  3074   001EFC                     u1190:
  3075   001EFC                     
  3076                           ; BSR set to: 14
  3077                           ;serial.c: 34:     TX4REG = charToSend;
  3078   001EFC  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3079   001F00                     
  3080                           ; BSR set to: 14
  3081   001F00  0012               	return		;funcret
  3082   001F02                     __end_of_sendCharSerial4:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _initUSART4 *****************
  3086 ;; Defined at:
  3087 ;;		line 6 in file "serial.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;Total ram usage:        0 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 4
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text17
  3116   001EAA                     __ptext17:
  3117                           	callstack 0
  3118   001EAA                     _initUSART4:
  3119                           	callstack 26
  3120   001EAA                     
  3121                           ;serial.c: 10:     RC0PPS = 0x12;
  3122   001EAA  0E12               	movlw	18
  3123   001EAC  010E               	movlb	14	; () banked
  3124   001EAE  6F62               	movwf	98,b	;volatile
  3125                           
  3126                           ;serial.c: 11:     RX4PPS = 0x11;
  3127   001EB0  0E11               	movlw	17
  3128   001EB2  6F15               	movwf	21,b	;volatile
  3129   001EB4                     
  3130                           ; BSR set to: 14
  3131                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3132   001EB4  8283               	bsf	131,1,c	;volatile
  3133   001EB6                     
  3134                           ; BSR set to: 14
  3135                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3136   001EB6  97E9               	bcf	233,3,b	;volatile
  3137   001EB8                     
  3138                           ; BSR set to: 14
  3139                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3140   001EB8  95E8               	bcf	232,2,b	;volatile
  3141                           
  3142                           ;serial.c: 17:     SP4BRGL = 51;
  3143   001EBA  0E33               	movlw	51
  3144   001EBC  6FE5               	movwf	229,b	;volatile
  3145                           
  3146                           ;serial.c: 18:     SP4BRGH = 0;
  3147   001EBE  0E00               	movlw	0
  3148   001EC0  6FE6               	movwf	230,b	;volatile
  3149   001EC2                     
  3150                           ; BSR set to: 14
  3151                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3152   001EC2  89E7               	bsf	231,4,b	;volatile
  3153   001EC4                     
  3154                           ; BSR set to: 14
  3155                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3156   001EC4  8BE8               	bsf	232,5,b	;volatile
  3157   001EC6                     
  3158                           ; BSR set to: 14
  3159                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3160   001EC6  8FE7               	bsf	231,7,b	;volatile
  3161   001EC8                     
  3162                           ; BSR set to: 14
  3163   001EC8  0012               	return		;funcret
  3164   001ECA                     __end_of_initUSART4:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _initDCmotorsPWM *****************
  3168 ;; Defined at:
  3169 ;;		line 6 in file "dc_motor.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 4
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text18
  3198   001870                     __ptext18:
  3199                           	callstack 0
  3200   001870                     _initDCmotorsPWM:
  3201                           	callstack 26
  3202   001870                     
  3203                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3204   001870  9485               	bcf	133,2,c	;volatile
  3205                           
  3206                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3207   001872  9885               	bcf	133,4,c	;volatile
  3208                           
  3209                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3210   001874  9E83               	bcf	131,7,c	;volatile
  3211                           
  3212                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3213   001876  9C87               	bcf	135,6,c	;volatile
  3214   001878                     
  3215                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3216   001878  0E05               	movlw	5
  3217   00187A  010E               	movlb	14	; () banked
  3218   00187C  6F74               	movwf	116,b	;volatile
  3219                           
  3220                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3221   00187E  0E06               	movlw	6
  3222   001880  6F76               	movwf	118,b	;volatile
  3223                           
  3224                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3225   001882  0E07               	movlw	7
  3226   001884  6F69               	movwf	105,b	;volatile
  3227                           
  3228                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3229   001886  0E08               	movlw	8
  3230   001888  6F88               	movwf	136,b	;volatile
  3231                           
  3232                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3233   00188A  50BD               	movf	189,w,c	;volatile
  3234   00188C  0B8F               	andlw	-113
  3235   00188E  0940               	iorlw	64
  3236   001890  6EBD               	movwf	189,c	;volatile
  3237                           
  3238                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3239   001892  0EE0               	movlw	-32
  3240   001894  16BE               	andwf	190,f,c	;volatile
  3241                           
  3242                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3243   001896  50BF               	movf	191,w,c	;volatile
  3244   001898  0BF0               	andlw	-16
  3245   00189A  0901               	iorlw	1
  3246   00189C  6EBF               	movwf	191,c	;volatile
  3247                           
  3248                           ;dc_motor.c: 26:     T2PR=99;
  3249   00189E  0E63               	movlw	99
  3250   0018A0  6EBC               	movwf	188,c	;volatile
  3251   0018A2                     
  3252                           ; BSR set to: 14
  3253                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3254   0018A2  8EBD               	bsf	189,7,c	;volatile
  3255                           
  3256                           ;dc_motor.c: 31:     CCPR1H=0;
  3257   0018A4  0E00               	movlw	0
  3258   0018A6  6EAA               	movwf	170,c	;volatile
  3259                           
  3260                           ;dc_motor.c: 32:     CCPR2H=0;
  3261   0018A8  0E00               	movlw	0
  3262   0018AA  6EA6               	movwf	166,c	;volatile
  3263                           
  3264                           ;dc_motor.c: 33:     CCPR3H=0;
  3265   0018AC  0E00               	movlw	0
  3266   0018AE  010F               	movlb	15	; () banked
  3267   0018B0  6F25               	movwf	37,b	;volatile
  3268                           
  3269                           ;dc_motor.c: 34:     CCPR4H=0;
  3270   0018B2  0E00               	movlw	0
  3271   0018B4  6F21               	movwf	33,b	;volatile
  3272                           
  3273                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3274   0018B6  0EFC               	movlw	-4
  3275   0018B8  16AD               	andwf	173,f,c	;volatile
  3276                           
  3277                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3278   0018BA  0EF3               	movlw	-13
  3279   0018BC  16AD               	andwf	173,f,c	;volatile
  3280                           
  3281                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3282   0018BE  0ECF               	movlw	-49
  3283   0018C0  16AD               	andwf	173,f,c	;volatile
  3284                           
  3285                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3286   0018C2  0E3F               	movlw	-193
  3287   0018C4  16AD               	andwf	173,f,c	;volatile
  3288   0018C6                     
  3289                           ; BSR set to: 15
  3290                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3291   0018C6  88AB               	bsf	171,4,c	;volatile
  3292                           
  3293                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3294   0018C8  50AB               	movf	171,w,c	;volatile
  3295   0018CA  0BF0               	andlw	-16
  3296   0018CC  090C               	iorlw	12
  3297   0018CE  6EAB               	movwf	171,c	;volatile
  3298   0018D0                     
  3299                           ; BSR set to: 15
  3300                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3301   0018D0  8EAB               	bsf	171,7,c	;volatile
  3302   0018D2                     
  3303                           ; BSR set to: 15
  3304                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3305   0018D2  88A7               	bsf	167,4,c	;volatile
  3306                           
  3307                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3308   0018D4  50A7               	movf	167,w,c	;volatile
  3309   0018D6  0BF0               	andlw	-16
  3310   0018D8  090C               	iorlw	12
  3311   0018DA  6EA7               	movwf	167,c	;volatile
  3312   0018DC                     
  3313                           ; BSR set to: 15
  3314                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3315   0018DC  8EA7               	bsf	167,7,c	;volatile
  3316   0018DE                     
  3317                           ; BSR set to: 15
  3318                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3319   0018DE  8926               	bsf	38,4,b	;volatile
  3320                           
  3321                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3322   0018E0  5126               	movf	38,w,b	;volatile
  3323   0018E2  0BF0               	andlw	-16
  3324   0018E4  090C               	iorlw	12
  3325   0018E6  6F26               	movwf	38,b	;volatile
  3326   0018E8                     
  3327                           ; BSR set to: 15
  3328                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3329   0018E8  8F26               	bsf	38,7,b	;volatile
  3330   0018EA                     
  3331                           ; BSR set to: 15
  3332                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3333   0018EA  8922               	bsf	34,4,b	;volatile
  3334                           
  3335                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3336   0018EC  5122               	movf	34,w,b	;volatile
  3337   0018EE  0BF0               	andlw	-16
  3338   0018F0  090C               	iorlw	12
  3339   0018F2  6F22               	movwf	34,b	;volatile
  3340   0018F4                     
  3341                           ; BSR set to: 15
  3342                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3343   0018F4  8F22               	bsf	34,7,b	;volatile
  3344   0018F6                     
  3345                           ; BSR set to: 15
  3346   0018F6  0012               	return		;funcret
  3347   0018F8                     __end_of_initDCmotorsPWM:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _color_read_Red *****************
  3351 ;; Defined at:
  3352 ;;		line 29 in file "color.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  tmp             2   13[COMRAM] unsigned int 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2    8[COMRAM] unsigned int 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;Total ram usage:        7 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 6
  3373 ;; This function calls:
  3374 ;;		_I2C_2_Master_Read
  3375 ;;		_I2C_2_Master_RepStart
  3376 ;;		_I2C_2_Master_Start
  3377 ;;		_I2C_2_Master_Stop
  3378 ;;		_I2C_2_Master_Write
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;;		_collect_avg_readings
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text19
  3386   001AF4                     __ptext19:
  3387                           	callstack 0
  3388   001AF4                     _color_read_Red:
  3389                           	callstack 24
  3390   001AF4                     
  3391                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  3392   001AF4  ECBE  F00F         	call	_I2C_2_Master_Start	;wreg free
  3393                           
  3394                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  3395   001AF8  0E52               	movlw	82
  3396   001AFA  ECA8  F00F         	call	_I2C_2_Master_Write
  3397                           
  3398                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  3399   001AFE  0EB6               	movlw	182
  3400   001B00  ECA8  F00F         	call	_I2C_2_Master_Write
  3401                           
  3402                           ;color.c: 35:  I2C_2_Master_RepStart();
  3403   001B04  ECB4  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3404                           
  3405                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  3406   001B08  0E53               	movlw	83
  3407   001B0A  ECA8  F00F         	call	_I2C_2_Master_Write
  3408                           
  3409                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  3410   001B0E  0E01               	movlw	1
  3411   001B10  EC61  F00E         	call	_I2C_2_Master_Read
  3412   001B14  6E0B               	movwf	??_color_read_Red^0,c
  3413   001B16  500B               	movf	??_color_read_Red^0,w,c
  3414   001B18  6E0E               	movwf	color_read_Red@tmp^0,c
  3415   001B1A  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  3416                           
  3417                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3418   001B1C  0E00               	movlw	0
  3419   001B1E  EC61  F00E         	call	_I2C_2_Master_Read
  3420   001B22  6E0B               	movwf	??_color_read_Red^0,c
  3421   001B24  500B               	movf	??_color_read_Red^0,w,c
  3422   001B26  6E0D               	movwf	(??_color_read_Red+2)^0,c
  3423   001B28  6A0C               	clrf	(??_color_read_Red+1)^0,c
  3424   001B2A  500E               	movf	color_read_Red@tmp^0,w,c
  3425   001B2C  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  3426   001B2E  6E0E               	movwf	color_read_Red@tmp^0,c
  3427   001B30  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  3428   001B32  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  3429   001B34  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  3430                           
  3431                           ;color.c: 39:  I2C_2_Master_Stop();
  3432   001B36  ECB9  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3433   001B3A                     
  3434                           ;color.c: 40:  return tmp;
  3435   001B3A  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  3436   001B3E  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3437   001B42  0012               	return		;funcret
  3438   001B44                     __end_of_color_read_Red:
  3439                           	callstack 0
  3440                           
  3441 ;; *************** function _color_read_Green *****************
  3442 ;; Defined at:
  3443 ;;		line 43 in file "color.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  tmp             2   13[COMRAM] unsigned int 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  2    8[COMRAM] unsigned int 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;Total ram usage:        7 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 6
  3464 ;; This function calls:
  3465 ;;		_I2C_2_Master_Read
  3466 ;;		_I2C_2_Master_RepStart
  3467 ;;		_I2C_2_Master_Start
  3468 ;;		_I2C_2_Master_Stop
  3469 ;;		_I2C_2_Master_Write
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;;		_collect_avg_readings
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text20
  3477   001B44                     __ptext20:
  3478                           	callstack 0
  3479   001B44                     _color_read_Green:
  3480                           	callstack 24
  3481   001B44                     
  3482                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  3483   001B44  ECBE  F00F         	call	_I2C_2_Master_Start	;wreg free
  3484                           
  3485                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3486   001B48  0E52               	movlw	82
  3487   001B4A  ECA8  F00F         	call	_I2C_2_Master_Write
  3488                           
  3489                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  3490   001B4E  0EB8               	movlw	184
  3491   001B50  ECA8  F00F         	call	_I2C_2_Master_Write
  3492                           
  3493                           ;color.c: 49:  I2C_2_Master_RepStart();
  3494   001B54  ECB4  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3495                           
  3496                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3497   001B58  0E53               	movlw	83
  3498   001B5A  ECA8  F00F         	call	_I2C_2_Master_Write
  3499                           
  3500                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  3501   001B5E  0E01               	movlw	1
  3502   001B60  EC61  F00E         	call	_I2C_2_Master_Read
  3503   001B64  6E0B               	movwf	??_color_read_Green^0,c
  3504   001B66  500B               	movf	??_color_read_Green^0,w,c
  3505   001B68  6E0E               	movwf	color_read_Green@tmp^0,c
  3506   001B6A  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  3507                           
  3508                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3509   001B6C  0E00               	movlw	0
  3510   001B6E  EC61  F00E         	call	_I2C_2_Master_Read
  3511   001B72  6E0B               	movwf	??_color_read_Green^0,c
  3512   001B74  500B               	movf	??_color_read_Green^0,w,c
  3513   001B76  6E0D               	movwf	(??_color_read_Green+2)^0,c
  3514   001B78  6A0C               	clrf	(??_color_read_Green+1)^0,c
  3515   001B7A  500E               	movf	color_read_Green@tmp^0,w,c
  3516   001B7C  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  3517   001B7E  6E0E               	movwf	color_read_Green@tmp^0,c
  3518   001B80  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  3519   001B82  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  3520   001B84  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  3521                           
  3522                           ;color.c: 53:  I2C_2_Master_Stop();
  3523   001B86  ECB9  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3524   001B8A                     
  3525                           ;color.c: 54:  return tmp;
  3526   001B8A  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  3527   001B8E  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3528   001B92  0012               	return		;funcret
  3529   001B94                     __end_of_color_read_Green:
  3530                           	callstack 0
  3531                           
  3532 ;; *************** function _color_read_Clear *****************
  3533 ;; Defined at:
  3534 ;;		line 71 in file "color.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  tmp             2   13[COMRAM] unsigned int 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  2    8[COMRAM] unsigned int 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;Total ram usage:        7 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 6
  3555 ;; This function calls:
  3556 ;;		_I2C_2_Master_Read
  3557 ;;		_I2C_2_Master_RepStart
  3558 ;;		_I2C_2_Master_Start
  3559 ;;		_I2C_2_Master_Stop
  3560 ;;		_I2C_2_Master_Write
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text21
  3567   001B94                     __ptext21:
  3568                           	callstack 0
  3569   001B94                     _color_read_Clear:
  3570                           	callstack 24
  3571   001B94                     
  3572                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3573   001B94  ECBE  F00F         	call	_I2C_2_Master_Start	;wreg free
  3574                           
  3575                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3576   001B98  0E52               	movlw	82
  3577   001B9A  ECA8  F00F         	call	_I2C_2_Master_Write
  3578                           
  3579                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  3580   001B9E  0EB4               	movlw	180
  3581   001BA0  ECA8  F00F         	call	_I2C_2_Master_Write
  3582                           
  3583                           ;color.c: 77:  I2C_2_Master_RepStart();
  3584   001BA4  ECB4  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3585                           
  3586                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3587   001BA8  0E53               	movlw	83
  3588   001BAA  ECA8  F00F         	call	_I2C_2_Master_Write
  3589                           
  3590                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  3591   001BAE  0E01               	movlw	1
  3592   001BB0  EC61  F00E         	call	_I2C_2_Master_Read
  3593   001BB4  6E0B               	movwf	??_color_read_Clear^0,c
  3594   001BB6  500B               	movf	??_color_read_Clear^0,w,c
  3595   001BB8  6E0E               	movwf	color_read_Clear@tmp^0,c
  3596   001BBA  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3597                           
  3598                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3599   001BBC  0E00               	movlw	0
  3600   001BBE  EC61  F00E         	call	_I2C_2_Master_Read
  3601   001BC2  6E0B               	movwf	??_color_read_Clear^0,c
  3602   001BC4  500B               	movf	??_color_read_Clear^0,w,c
  3603   001BC6  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3604   001BC8  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3605   001BCA  500E               	movf	color_read_Clear@tmp^0,w,c
  3606   001BCC  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3607   001BCE  6E0E               	movwf	color_read_Clear@tmp^0,c
  3608   001BD0  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3609   001BD2  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3610   001BD4  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3611                           
  3612                           ;color.c: 81:  I2C_2_Master_Stop();
  3613   001BD6  ECB9  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3614   001BDA                     
  3615                           ;color.c: 82:  return tmp;
  3616   001BDA  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3617   001BDE  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3618   001BE2  0012               	return		;funcret
  3619   001BE4                     __end_of_color_read_Clear:
  3620                           	callstack 0
  3621                           
  3622 ;; *************** function _color_read_Blue *****************
  3623 ;; Defined at:
  3624 ;;		line 57 in file "color.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  tmp             2   13[COMRAM] unsigned int 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  2    8[COMRAM] unsigned int 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;Total ram usage:        7 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 6
  3645 ;; This function calls:
  3646 ;;		_I2C_2_Master_Read
  3647 ;;		_I2C_2_Master_RepStart
  3648 ;;		_I2C_2_Master_Start
  3649 ;;		_I2C_2_Master_Stop
  3650 ;;		_I2C_2_Master_Write
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;;		_collect_avg_readings
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text22
  3658   001BE4                     __ptext22:
  3659                           	callstack 0
  3660   001BE4                     _color_read_Blue:
  3661                           	callstack 24
  3662   001BE4                     
  3663                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  3664   001BE4  ECBE  F00F         	call	_I2C_2_Master_Start	;wreg free
  3665                           
  3666                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  3667   001BE8  0E52               	movlw	82
  3668   001BEA  ECA8  F00F         	call	_I2C_2_Master_Write
  3669                           
  3670                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  3671   001BEE  0EBA               	movlw	186
  3672   001BF0  ECA8  F00F         	call	_I2C_2_Master_Write
  3673                           
  3674                           ;color.c: 63:  I2C_2_Master_RepStart();
  3675   001BF4  ECB4  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3676                           
  3677                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  3678   001BF8  0E53               	movlw	83
  3679   001BFA  ECA8  F00F         	call	_I2C_2_Master_Write
  3680                           
  3681                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  3682   001BFE  0E01               	movlw	1
  3683   001C00  EC61  F00E         	call	_I2C_2_Master_Read
  3684   001C04  6E0B               	movwf	??_color_read_Blue^0,c
  3685   001C06  500B               	movf	??_color_read_Blue^0,w,c
  3686   001C08  6E0E               	movwf	color_read_Blue@tmp^0,c
  3687   001C0A  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3688                           
  3689                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3690   001C0C  0E00               	movlw	0
  3691   001C0E  EC61  F00E         	call	_I2C_2_Master_Read
  3692   001C12  6E0B               	movwf	??_color_read_Blue^0,c
  3693   001C14  500B               	movf	??_color_read_Blue^0,w,c
  3694   001C16  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3695   001C18  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3696   001C1A  500E               	movf	color_read_Blue@tmp^0,w,c
  3697   001C1C  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3698   001C1E  6E0E               	movwf	color_read_Blue@tmp^0,c
  3699   001C20  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3700   001C22  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3701   001C24  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3702                           
  3703                           ;color.c: 67:  I2C_2_Master_Stop();
  3704   001C26  ECB9  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3705   001C2A                     
  3706                           ;color.c: 68:  return tmp;
  3707   001C2A  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3708   001C2E  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3709   001C32  0012               	return		;funcret
  3710   001C34                     __end_of_color_read_Blue:
  3711                           	callstack 0
  3712                           
  3713 ;; *************** function _I2C_2_Master_RepStart *****************
  3714 ;; Defined at:
  3715 ;;		line 33 in file "i2c.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3733 ;;Total ram usage:        0 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 5
  3736 ;; This function calls:
  3737 ;;		_I2C_2_Master_Idle
  3738 ;; This function is called by:
  3739 ;;		_color_read_Red
  3740 ;;		_color_read_Green
  3741 ;;		_color_read_Blue
  3742 ;;		_color_read_Clear
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text23
  3747   001F68                     __ptext23:
  3748                           	callstack 0
  3749   001F68                     _I2C_2_Master_RepStart:
  3750                           	callstack 24
  3751   001F68                     
  3752                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3753   001F68  EC09  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3754   001F6C                     
  3755                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3756   001F6C  010E               	movlb	14	; () banked
  3757   001F6E  83DA               	bsf	218,1,b	;volatile
  3758   001F70                     
  3759                           ; BSR set to: 14
  3760   001F70  0012               	return		;funcret
  3761   001F72                     __end_of_I2C_2_Master_RepStart:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _I2C_2_Master_Read *****************
  3765 ;; Defined at:
  3766 ;;		line 51 in file "i2c.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  ack             1    wreg     unsigned char 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  ack             1    6[COMRAM] unsigned char 
  3771 ;;  tmp             1    7[COMRAM] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      unsigned char 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, status,0, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3784 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;Total ram usage:        3 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 5
  3788 ;; This function calls:
  3789 ;;		_I2C_2_Master_Idle
  3790 ;; This function is called by:
  3791 ;;		_color_read_Red
  3792 ;;		_color_read_Green
  3793 ;;		_color_read_Blue
  3794 ;;		_color_read_Clear
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text24
  3799   001CC2                     __ptext24:
  3800                           	callstack 0
  3801   001CC2                     _I2C_2_Master_Read:
  3802                           	callstack 24
  3803                           
  3804                           ; BSR set to: 14
  3805                           ;incstack = 0
  3806                           ;I2C_2_Master_Read@ack stored from wreg
  3807   001CC2  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3808   001CC4                     
  3809                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3810   001CC4  EC09  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3811   001CC8                     
  3812                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3813   001CC8  010E               	movlb	14	; () banked
  3814   001CCA  87DA               	bsf	218,3,b	;volatile
  3815                           
  3816                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3817   001CCC  EC09  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3818   001CD0                     
  3819                           ;i2c.c: 57:   tmp = SSP2BUF;
  3820   001CD0  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3821                           
  3822                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3823   001CD4  EC09  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3824   001CD8                     
  3825                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3826   001CD8  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3827   001CDA  B4D8               	btfsc	status,2,c
  3828   001CDC  EF72  F00E         	goto	u1171
  3829   001CE0  EF76  F00E         	goto	u1170
  3830   001CE4                     u1171:
  3831   001CE4  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3832   001CE6  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3833   001CE8  EF77  F00E         	goto	u1188
  3834   001CEC                     u1170:
  3835   001CEC  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3836   001CEE                     u1188:
  3837   001CEE  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3838   001CF0  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3839   001CF2  010E               	movlb	14	; () banked
  3840   001CF4  51DA               	movf	218,w,b	;volatile
  3841   001CF6  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3842   001CF8  0BDF               	andlw	-33
  3843   001CFA  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3844   001CFC  6FDA               	movwf	218,b	;volatile
  3845   001CFE                     
  3846                           ; BSR set to: 14
  3847                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3848   001CFE  89DA               	bsf	218,4,b	;volatile
  3849   001D00                     
  3850                           ; BSR set to: 14
  3851                           ;i2c.c: 61:   return tmp;
  3852   001D00  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3853   001D02                     
  3854                           ; BSR set to: 14
  3855   001D02  0012               	return		;funcret
  3856   001D04                     __end_of_I2C_2_Master_Read:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _color_click_init *****************
  3860 ;; Defined at:
  3861 ;;		line 5 in file "color.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;Total ram usage:        1 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; Hardware stack levels required when called: 7
  3882 ;; This function calls:
  3883 ;;		_I2C_2_Master_Init
  3884 ;;		_color_writetoaddr
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text25
  3891   001D84                     __ptext25:
  3892                           	callstack 0
  3893   001D84                     _color_click_init:
  3894                           	callstack 23
  3895   001D84                     
  3896                           ;color.c: 8:     I2C_2_Master_Init();
  3897   001D84  ECF4  F00E         	call	_I2C_2_Master_Init	;wreg free
  3898   001D88                     
  3899                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3900   001D88  0E01               	movlw	1
  3901   001D8A  6E07               	movwf	color_writetoaddr@value^0,c
  3902   001D8C  0E00               	movlw	0
  3903   001D8E  EC65  F00F         	call	_color_writetoaddr
  3904   001D92                     
  3905                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3906   001D92  0E3F               	movlw	63
  3907   001D94  6E09               	movwf	??_color_click_init^0,c
  3908   001D96  0E55               	movlw	85
  3909   001D98                     u1927:
  3910   001D98  2EE8               	decfsz	wreg,f,c
  3911   001D9A  D7FE               	bra	u1927
  3912   001D9C  2E09               	decfsz	??_color_click_init^0,f,c
  3913   001D9E  D7FC               	bra	u1927
  3914   001DA0  F000               	nop	
  3915   001DA2                     
  3916                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3917   001DA2  0E03               	movlw	3
  3918   001DA4  6E07               	movwf	color_writetoaddr@value^0,c
  3919   001DA6  0E00               	movlw	0
  3920   001DA8  EC65  F00F         	call	_color_writetoaddr
  3921   001DAC                     
  3922                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3923   001DAC  0ED5               	movlw	213
  3924   001DAE  6E07               	movwf	color_writetoaddr@value^0,c
  3925   001DB0  0E01               	movlw	1
  3926   001DB2  EC65  F00F         	call	_color_writetoaddr
  3927   001DB6  0012               	return		;funcret
  3928   001DB8                     __end_of_color_click_init:
  3929                           	callstack 0
  3930                           
  3931 ;; *************** function _I2C_2_Master_Init *****************
  3932 ;; Defined at:
  3933 ;;		line 4 in file "i2c.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used: 1
  3953 ;; Hardware stack levels required when called: 4
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_color_click_init
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text26
  3963   001DE8                     __ptext26:
  3964                           	callstack 0
  3965   001DE8                     _I2C_2_Master_Init:
  3966                           	callstack 25
  3967   001DE8                     
  3968                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3969   001DE8  010E               	movlb	14	; () banked
  3970   001DEA  51D9               	movf	217,w,b	;volatile
  3971   001DEC  0BF0               	andlw	-16
  3972   001DEE  0908               	iorlw	8
  3973   001DF0  6FD9               	movwf	217,b	;volatile
  3974   001DF2                     
  3975                           ; BSR set to: 14
  3976                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3977   001DF2  8BD9               	bsf	217,5,b	;volatile
  3978                           
  3979                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3980   001DF4  0E9F               	movlw	159
  3981   001DF6  6FD6               	movwf	214,b	;volatile
  3982   001DF8                     
  3983                           ; BSR set to: 14
  3984                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3985   001DF8  8A84               	bsf	132,5,c	;volatile
  3986   001DFA                     
  3987                           ; BSR set to: 14
  3988                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3989   001DFA  8C84               	bsf	132,6,c	;volatile
  3990   001DFC                     
  3991                           ; BSR set to: 14
  3992                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3993   001DFC  9BA7               	bcf	167,5,b	;volatile
  3994   001DFE                     
  3995                           ; BSR set to: 14
  3996                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3997   001DFE  9DA7               	bcf	167,6,b	;volatile
  3998                           
  3999                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4000   001E00  0E1D               	movlw	29
  4001   001E02  6F1D               	movwf	29,b	;volatile
  4002                           
  4003                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4004   001E04  0E1E               	movlw	30
  4005   001E06  6F1C               	movwf	28,b	;volatile
  4006                           
  4007                           ;i2c.c: 18:   RD5PPS=0x1C;
  4008   001E08  0E1C               	movlw	28
  4009   001E0A  6F6F               	movwf	111,b	;volatile
  4010                           
  4011                           ;i2c.c: 19:   RD6PPS=0x1B;
  4012   001E0C  0E1B               	movlw	27
  4013   001E0E  6F70               	movwf	112,b	;volatile
  4014   001E10                     
  4015                           ; BSR set to: 14
  4016   001E10  0012               	return		;funcret
  4017   001E12                     __end_of_I2C_2_Master_Init:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _LEDSon_init *****************
  4021 ;; Defined at:
  4022 ;;		line 18 in file "LEDsOn.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		None
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 4
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_main
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text27
  4051   001E88                     __ptext27:
  4052                           	callstack 0
  4053   001E88                     _LEDSon_init:
  4054                           	callstack 26
  4055   001E88                     
  4056                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  4057   001E88  9288               	bcf	136,1,c	;volatile
  4058                           
  4059                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  4060   001E8A  9088               	bcf	136,0,c	;volatile
  4061                           
  4062                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  4063   001E8C  9884               	bcf	132,4,c	;volatile
  4064                           
  4065                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  4066   001E8E  9684               	bcf	132,3,c	;volatile
  4067                           
  4068                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  4069   001E90  9086               	bcf	134,0,c	;volatile
  4070                           
  4071                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  4072   001E92  9287               	bcf	135,1,c	;volatile
  4073                           
  4074                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  4075   001E94  9E86               	bcf	134,7,c	;volatile
  4076                           
  4077                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  4078   001E96  9881               	bcf	129,4,c	;volatile
  4079                           
  4080                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 0;
  4081   001E98  9E7E               	bcf	126,7,c	;volatile
  4082                           
  4083                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 0;
  4084   001E9A  927F               	bcf	127,1,c	;volatile
  4085                           
  4086                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 0;
  4087   001E9C  9879               	bcf	121,4,c	;volatile
  4088                           
  4089                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  4090   001E9E  987C               	bcf	124,4,c	;volatile
  4091                           
  4092                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  4093   001EA0  9280               	bcf	128,1,c	;volatile
  4094                           
  4095                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  4096   001EA2  907E               	bcf	126,0,c	;volatile
  4097                           
  4098                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  4099   001EA4  9080               	bcf	128,0,c	;volatile
  4100                           
  4101                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  4102   001EA6  967C               	bcf	124,3,c	;volatile
  4103   001EA8  0012               	return		;funcret
  4104   001EAA                     __end_of_LEDSon_init:
  4105                           	callstack 0
  4106                           
  4107 ;; *************** function _Interrupts_init *****************
  4108 ;; Defined at:
  4109 ;;		line 7 in file "interrupts.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4127 ;;Total ram usage:        0 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; Hardware stack levels required when called: 8
  4130 ;; This function calls:
  4131 ;;		_enable_color_interrupt
  4132 ;;		_set_interrupt_threshold
  4133 ;; This function is called by:
  4134 ;;		_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text28
  4139   001D44                     __ptext28:
  4140                           	callstack 0
  4141   001D44                     _Interrupts_init:
  4142                           	callstack 22
  4143   001D44                     
  4144                           ;interrupts.c: 10:     enable_color_interrupt();
  4145   001D44  ECA0  F00F         	call	_enable_color_interrupt	;wreg free
  4146                           
  4147                           ;interrupts.c: 11:     set_interrupt_threshold(1, 2000, 0b0100);
  4148   001D48  0E00               	movlw	0
  4149   001D4A  6E0A               	movwf	(set_interrupt_threshold@AILT+1)^0,c
  4150   001D4C  0E01               	movlw	1
  4151   001D4E  6E09               	movwf	set_interrupt_threshold@AILT^0,c
  4152   001D50  0E07               	movlw	7
  4153   001D52  6E0C               	movwf	(set_interrupt_threshold@AIHT+1)^0,c
  4154   001D54  0ED0               	movlw	208
  4155   001D56  6E0B               	movwf	set_interrupt_threshold@AIHT^0,c
  4156   001D58  0E00               	movlw	0
  4157   001D5A  6E0E               	movwf	(set_interrupt_threshold@persistence+1)^0,c
  4158   001D5C  0E04               	movlw	4
  4159   001D5E  6E0D               	movwf	set_interrupt_threshold@persistence^0,c
  4160   001D60  ECF3  F00C         	call	_set_interrupt_threshold	;wreg free
  4161   001D64                     
  4162                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 0;
  4163   001D64  9282               	bcf	130,1,c	;volatile
  4164   001D66                     
  4165                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  4166   001D66  010E               	movlb	14	; () banked
  4167   001D68  939A               	bcf	154,1,b	;volatile
  4168   001D6A                     
  4169                           ; BSR set to: 14
  4170                           ;interrupts.c: 15:     INT1PPS=0x09;
  4171   001D6A  0E09               	movlw	9
  4172   001D6C  010D               	movlb	13	; () banked
  4173   001D6E  6FF1               	movwf	241,b	;volatile
  4174   001D70                     
  4175                           ; BSR set to: 13
  4176                           ;interrupts.c: 16:     PIE0bits.INT1IE = 1;
  4177   001D70  010E               	movlb	14	; () banked
  4178   001D72  8329               	bsf	41,1,b	;volatile
  4179   001D74                     
  4180                           ; BSR set to: 14
  4181                           ;interrupts.c: 17:     IPR0bits.INT1IP = 1;
  4182   001D74  831F               	bsf	31,1,b	;volatile
  4183   001D76                     
  4184                           ; BSR set to: 14
  4185                           ;interrupts.c: 18:     INTCONbits.INT1EDG = 0;
  4186   001D76  92F2               	bcf	242,1,c	;volatile
  4187   001D78                     
  4188                           ; BSR set to: 14
  4189                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  4190   001D78  8CF2               	bsf	242,6,c	;volatile
  4191   001D7A                     
  4192                           ; BSR set to: 14
  4193                           ;interrupts.c: 20:     INTCONbits.IPEN = 1;
  4194   001D7A  8AF2               	bsf	242,5,c	;volatile
  4195   001D7C                     
  4196                           ; BSR set to: 14
  4197                           ;interrupts.c: 21:     PIR0bits.INT1IF = 0;
  4198   001D7C  9333               	bcf	51,1,b	;volatile
  4199   001D7E                     
  4200                           ; BSR set to: 14
  4201                           ;interrupts.c: 35:     INTCONbits.GIEL = 1;
  4202   001D7E  8CF2               	bsf	242,6,c	;volatile
  4203   001D80                     
  4204                           ; BSR set to: 14
  4205                           ;interrupts.c: 36:     INTCONbits.GIEH=1;}
  4206   001D80  8EF2               	bsf	242,7,c	;volatile
  4207   001D82                     
  4208                           ; BSR set to: 14
  4209   001D82  0012               	return		;funcret
  4210   001D84                     __end_of_Interrupts_init:
  4211                           	callstack 0
  4212                           
  4213 ;; *************** function _set_interrupt_threshold *****************
  4214 ;; Defined at:
  4215 ;;		line 59 in file "interrupts.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  AILT            2    8[COMRAM] unsigned int 
  4218 ;;  AIHT            2   10[COMRAM] unsigned int 
  4219 ;;  persistence     2   12[COMRAM] unsigned int 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4231 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;Total ram usage:        8 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 7
  4238 ;; This function calls:
  4239 ;;		_color_writetoaddr
  4240 ;; This function is called by:
  4241 ;;		_Interrupts_init
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text29
  4246   0019E6                     __ptext29:
  4247                           	callstack 0
  4248   0019E6                     _set_interrupt_threshold:
  4249                           	callstack 22
  4250   0019E6                     
  4251                           ;interrupts.c: 61:     color_writetoaddr(0x0C, persistence);
  4252   0019E6  C00D  F007         	movff	set_interrupt_threshold@persistence,color_writetoaddr@value
  4253   0019EA  0E0C               	movlw	12
  4254   0019EC  EC65  F00F         	call	_color_writetoaddr
  4255                           
  4256                           ;interrupts.c: 62:     color_writetoaddr(0x05, AILT >> 8);
  4257   0019F0  500A               	movf	(set_interrupt_threshold@AILT+1)^0,w,c
  4258   0019F2  6E07               	movwf	color_writetoaddr@value^0,c
  4259   0019F4  0E05               	movlw	5
  4260   0019F6  EC65  F00F         	call	_color_writetoaddr
  4261   0019FA                     
  4262                           ;interrupts.c: 63:     color_writetoaddr(0x04, AILT && 0b0000000011111111);
  4263   0019FA  0E00               	movlw	0
  4264   0019FC  6E0F               	movwf	_set_interrupt_threshold$1927^0,c
  4265   0019FE  5009               	movf	set_interrupt_threshold@AILT^0,w,c
  4266   001A00  100A               	iorwf	(set_interrupt_threshold@AILT+1)^0,w,c
  4267   001A02  B4D8               	btfsc	status,2,c
  4268   001A04  EF06  F00D         	goto	u1201
  4269   001A08  EF08  F00D         	goto	u1200
  4270   001A0C                     u1201:
  4271   001A0C  EF0A  F00D         	goto	l2428
  4272   001A10                     u1200:
  4273   001A10  0E01               	movlw	1
  4274   001A12  6E0F               	movwf	_set_interrupt_threshold$1927^0,c
  4275   001A14                     l2428:
  4276   001A14  C00F  F007         	movff	_set_interrupt_threshold$1927,color_writetoaddr@value
  4277   001A18  0E04               	movlw	4
  4278   001A1A  EC65  F00F         	call	_color_writetoaddr
  4279   001A1E                     
  4280                           ;interrupts.c: 64:     color_writetoaddr(0x07, AIHT >> 8);
  4281   001A1E  500C               	movf	(set_interrupt_threshold@AIHT+1)^0,w,c
  4282   001A20  6E07               	movwf	color_writetoaddr@value^0,c
  4283   001A22  0E07               	movlw	7
  4284   001A24  EC65  F00F         	call	_color_writetoaddr
  4285                           
  4286                           ;interrupts.c: 65:     color_writetoaddr(0x06, AIHT && 0b0000000011111111);
  4287   001A28  0E00               	movlw	0
  4288   001A2A  6E10               	movwf	_set_interrupt_threshold$1928^0,c
  4289   001A2C  500B               	movf	set_interrupt_threshold@AIHT^0,w,c
  4290   001A2E  100C               	iorwf	(set_interrupt_threshold@AIHT+1)^0,w,c
  4291   001A30  B4D8               	btfsc	status,2,c
  4292   001A32  EF1D  F00D         	goto	u1211
  4293   001A36  EF1F  F00D         	goto	u1210
  4294   001A3A                     u1211:
  4295   001A3A  EF21  F00D         	goto	l2436
  4296   001A3E                     u1210:
  4297   001A3E  0E01               	movlw	1
  4298   001A40  6E10               	movwf	_set_interrupt_threshold$1928^0,c
  4299   001A42                     l2436:
  4300   001A42  C010  F007         	movff	_set_interrupt_threshold$1928,color_writetoaddr@value
  4301   001A46  0E06               	movlw	6
  4302   001A48  EC65  F00F         	call	_color_writetoaddr
  4303   001A4C  0012               	return		;funcret
  4304   001A4E                     __end_of_set_interrupt_threshold:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _enable_color_interrupt *****************
  4308 ;; Defined at:
  4309 ;;		line 54 in file "interrupts.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 7
  4330 ;; This function calls:
  4331 ;;		_clear_interrupt_flag
  4332 ;;		_color_writetoaddr
  4333 ;; This function is called by:
  4334 ;;		_Interrupts_init
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text30
  4339   001F40                     __ptext30:
  4340                           	callstack 0
  4341   001F40                     _enable_color_interrupt:
  4342                           	callstack 22
  4343   001F40                     
  4344                           ;interrupts.c: 55:     clear_interrupt_flag();
  4345   001F40  EC81  F00F         	call	_clear_interrupt_flag	;wreg free
  4346                           
  4347                           ;interrupts.c: 56:  color_writetoaddr(0x00, 0b10011);
  4348   001F44  0E13               	movlw	19
  4349   001F46  6E07               	movwf	color_writetoaddr@value^0,c
  4350   001F48  0E00               	movlw	0
  4351   001F4A  EC65  F00F         	call	_color_writetoaddr
  4352   001F4E  0012               	return		;funcret
  4353   001F50                     __end_of_enable_color_interrupt:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function _color_writetoaddr *****************
  4357 ;; Defined at:
  4358 ;;		line 21 in file "color.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  address         1    wreg     unsigned char 
  4361 ;;  value           1    6[COMRAM] unsigned char 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  address         1    7[COMRAM] unsigned char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4373 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4377 ;;Total ram usage:        2 bytes
  4378 ;; Hardware stack levels used: 1
  4379 ;; Hardware stack levels required when called: 6
  4380 ;; This function calls:
  4381 ;;		_I2C_2_Master_Start
  4382 ;;		_I2C_2_Master_Stop
  4383 ;;		_I2C_2_Master_Write
  4384 ;; This function is called by:
  4385 ;;		_color_click_init
  4386 ;;		_enable_color_interrupt
  4387 ;;		_set_interrupt_threshold
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text31
  4392   001ECA                     __ptext31:
  4393                           	callstack 0
  4394   001ECA                     _color_writetoaddr:
  4395                           	callstack 23
  4396                           
  4397                           ;incstack = 0
  4398                           ;color_writetoaddr@address stored from wreg
  4399   001ECA  6E08               	movwf	color_writetoaddr@address^0,c
  4400   001ECC                     
  4401                           ;color.c: 22:     I2C_2_Master_Start();
  4402   001ECC  ECBE  F00F         	call	_I2C_2_Master_Start	;wreg free
  4403                           
  4404                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4405   001ED0  0E52               	movlw	82
  4406   001ED2  ECA8  F00F         	call	_I2C_2_Master_Write
  4407                           
  4408                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4409   001ED6  5008               	movf	color_writetoaddr@address^0,w,c
  4410   001ED8  0980               	iorlw	128
  4411   001EDA  ECA8  F00F         	call	_I2C_2_Master_Write
  4412                           
  4413                           ;color.c: 25:     I2C_2_Master_Write(value);
  4414   001EDE  5007               	movf	color_writetoaddr@value^0,w,c
  4415   001EE0  ECA8  F00F         	call	_I2C_2_Master_Write
  4416                           
  4417                           ;color.c: 26:     I2C_2_Master_Stop();
  4418   001EE4  ECB9  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4419   001EE8  0012               	return		;funcret
  4420   001EEA                     __end_of_color_writetoaddr:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _clear_interrupt_flag *****************
  4424 ;; Defined at:
  4425 ;;		line 68 in file "interrupts.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used: 1
  4445 ;; Hardware stack levels required when called: 6
  4446 ;; This function calls:
  4447 ;;		_I2C_2_Master_Start
  4448 ;;		_I2C_2_Master_Stop
  4449 ;;		_I2C_2_Master_Write
  4450 ;; This function is called by:
  4451 ;;		_enable_color_interrupt
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text32
  4456   001F02                     __ptext32:
  4457                           	callstack 0
  4458   001F02                     _clear_interrupt_flag:
  4459                           	callstack 22
  4460   001F02                     
  4461                           ;interrupts.c: 69:     I2C_2_Master_Start();
  4462   001F02  ECBE  F00F         	call	_I2C_2_Master_Start	;wreg free
  4463                           
  4464                           ;interrupts.c: 70:     I2C_2_Master_Write(0x52 | 0x00);
  4465   001F06  0E52               	movlw	82
  4466   001F08  ECA8  F00F         	call	_I2C_2_Master_Write
  4467                           
  4468                           ;interrupts.c: 71:     I2C_2_Master_Write(0b11100110);
  4469   001F0C  0EE6               	movlw	230
  4470   001F0E  ECA8  F00F         	call	_I2C_2_Master_Write
  4471                           
  4472                           ;interrupts.c: 72:     I2C_2_Master_Stop();
  4473   001F12  ECB9  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4474   001F16  0012               	return		;funcret
  4475   001F18                     __end_of_clear_interrupt_flag:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _I2C_2_Master_Write *****************
  4479 ;; Defined at:
  4480 ;;		line 45 in file "i2c.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  data_byte       1    wreg     unsigned char 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  data_byte       1    5[COMRAM] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;Total ram usage:        1 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 5
  4501 ;; This function calls:
  4502 ;;		_I2C_2_Master_Idle
  4503 ;; This function is called by:
  4504 ;;		_color_writetoaddr
  4505 ;;		_color_read_Red
  4506 ;;		_color_read_Green
  4507 ;;		_color_read_Blue
  4508 ;;		_color_read_Clear
  4509 ;;		_clear_interrupt_flag
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text33
  4514   001F50                     __ptext33:
  4515                           	callstack 0
  4516   001F50                     _I2C_2_Master_Write:
  4517                           	callstack 24
  4518                           
  4519                           ;incstack = 0
  4520                           ;I2C_2_Master_Write@data_byte stored from wreg
  4521   001F50  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  4522   001F52                     
  4523                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4524   001F52  EC09  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4525   001F56                     
  4526                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4527   001F56  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4528   001F5A  0012               	return		;funcret
  4529   001F5C                     __end_of_I2C_2_Master_Write:
  4530                           	callstack 0
  4531                           
  4532 ;; *************** function _I2C_2_Master_Stop *****************
  4533 ;; Defined at:
  4534 ;;		line 39 in file "i2c.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 5
  4555 ;; This function calls:
  4556 ;;		_I2C_2_Master_Idle
  4557 ;; This function is called by:
  4558 ;;		_color_writetoaddr
  4559 ;;		_color_read_Red
  4560 ;;		_color_read_Green
  4561 ;;		_color_read_Blue
  4562 ;;		_color_read_Clear
  4563 ;;		_clear_interrupt_flag
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text34
  4568   001F72                     __ptext34:
  4569                           	callstack 0
  4570   001F72                     _I2C_2_Master_Stop:
  4571                           	callstack 24
  4572   001F72                     
  4573                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4574   001F72  EC09  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4575   001F76                     
  4576                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4577   001F76  010E               	movlb	14	; () banked
  4578   001F78  85DA               	bsf	218,2,b	;volatile
  4579   001F7A                     
  4580                           ; BSR set to: 14
  4581   001F7A  0012               	return		;funcret
  4582   001F7C                     __end_of_I2C_2_Master_Stop:
  4583                           	callstack 0
  4584                           
  4585 ;; *************** function _I2C_2_Master_Start *****************
  4586 ;; Defined at:
  4587 ;;		line 27 in file "i2c.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0, cstack
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4605 ;;Total ram usage:        0 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; Hardware stack levels required when called: 5
  4608 ;; This function calls:
  4609 ;;		_I2C_2_Master_Idle
  4610 ;; This function is called by:
  4611 ;;		_color_writetoaddr
  4612 ;;		_color_read_Red
  4613 ;;		_color_read_Green
  4614 ;;		_color_read_Blue
  4615 ;;		_color_read_Clear
  4616 ;;		_clear_interrupt_flag
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text35
  4621   001F7C                     __ptext35:
  4622                           	callstack 0
  4623   001F7C                     _I2C_2_Master_Start:
  4624                           	callstack 24
  4625   001F7C                     
  4626                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4627   001F7C  EC09  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4628   001F80                     
  4629                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4630   001F80  010E               	movlb	14	; () banked
  4631   001F82  81DA               	bsf	218,0,b	;volatile
  4632   001F84                     
  4633                           ; BSR set to: 14
  4634   001F84  0012               	return		;funcret
  4635   001F86                     __end_of_I2C_2_Master_Start:
  4636                           	callstack 0
  4637                           
  4638 ;; *************** function _I2C_2_Master_Idle *****************
  4639 ;; Defined at:
  4640 ;;		line 22 in file "i2c.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;		None
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4658 ;;Total ram usage:        1 bytes
  4659 ;; Hardware stack levels used: 1
  4660 ;; Hardware stack levels required when called: 4
  4661 ;; This function calls:
  4662 ;;		Nothing
  4663 ;; This function is called by:
  4664 ;;		_I2C_2_Master_Start
  4665 ;;		_I2C_2_Master_RepStart
  4666 ;;		_I2C_2_Master_Stop
  4667 ;;		_I2C_2_Master_Write
  4668 ;;		_I2C_2_Master_Read
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text36
  4673   001E12                     __ptext36:
  4674                           	callstack 0
  4675   001E12                     _I2C_2_Master_Idle:
  4676                           	callstack 24
  4677   001E12                     l145:
  4678   001E12  010E               	movlb	14	; () banked
  4679   001E14  B5D8               	btfsc	216,2,b	;volatile
  4680   001E16  EF0F  F00F         	goto	u841
  4681   001E1A  EF11  F00F         	goto	u840
  4682   001E1E                     u841:
  4683   001E1E  EF09  F00F         	goto	l145
  4684   001E22                     u840:
  4685   001E22                     
  4686                           ; BSR set to: 14
  4687   001E22  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4688   001E26  0E1F               	movlw	31
  4689   001E28  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  4690   001E2A  A4D8               	btfss	status,2,c
  4691   001E2C  EF1A  F00F         	goto	u851
  4692   001E30  EF1C  F00F         	goto	u850
  4693   001E34                     u851:
  4694   001E34  EF09  F00F         	goto	l145
  4695   001E38                     u850:
  4696   001E38                     
  4697                           ; BSR set to: 14
  4698   001E38  0012               	return		;funcret
  4699   001E3A                     __end_of_I2C_2_Master_Idle:
  4700                           	callstack 0
  4701                           
  4702 ;; *************** function _HighISR *****************
  4703 ;; Defined at:
  4704 ;;		line 40 in file "interrupts.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;Total ram usage:        2 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 3
  4725 ;; This function calls:
  4726 ;;		i2_clear_interrupt_flag
  4727 ;; This function is called by:
  4728 ;;		Interrupt level 2
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	intcode
  4733   000008                     __pintcode:
  4734                           	callstack 0
  4735   000008                     _HighISR:
  4736                           	callstack 19
  4737                           
  4738                           ; BSR set to: 14
  4739                           ;incstack = 0
  4740   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4741   00000A                     
  4742                           ;interrupts.c: 43:     if(PIR0bits.INT1IF == 1 && response_in_progress == 0) {
  4743   00000A  010E               	movlb	14	; () banked
  4744   00000C  A333               	btfss	51,1,b	;volatile
  4745   00000E  EF0B  F000         	goto	i2u149_41
  4746   000012  EF0D  F000         	goto	i2u149_40
  4747   000016                     i2u149_41:
  4748   000016  EF39  F000         	goto	i2l470
  4749   00001A                     i2u149_40:
  4750   00001A                     
  4751                           ; BSR set to: 14
  4752   00001A  0100               	movlb	0	; () banked
  4753   00001C  51B8               	movf	_response_in_progress& (0+255),w,b
  4754   00001E  11B9               	iorwf	(_response_in_progress+1)& (0+255),w,b
  4755   000020  A4D8               	btfss	status,2,c
  4756   000022  EF15  F000         	goto	i2u150_41
  4757   000026  EF17  F000         	goto	i2u150_40
  4758   00002A                     i2u150_41:
  4759   00002A  EF39  F000         	goto	i2l470
  4760   00002E                     i2u150_40:
  4761   00002E                     
  4762                           ; BSR set to: 0
  4763                           ;interrupts.c: 44:         card_detected = 1;
  4764   00002E  0E00               	movlw	0
  4765   000030  6FB7               	movwf	(_card_detected+1)& (0+255),b
  4766   000032  0E01               	movlw	1
  4767   000034  6FB6               	movwf	_card_detected& (0+255),b
  4768   000036                     
  4769                           ; BSR set to: 0
  4770                           ;interrupts.c: 45:         LATDbits.LATD7=1;
  4771   000036  8E7C               	bsf	124,7,c	;volatile
  4772   000038                     
  4773                           ; BSR set to: 0
  4774                           ;interrupts.c: 46:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4775   000038  0E05               	movlw	5
  4776   00003A  6E04               	movwf	(??_HighISR+1)^0,c
  4777   00003C  0E0F               	movlw	15
  4778   00003E  6E03               	movwf	??_HighISR^0,c
  4779   000040  0EF1               	movlw	241
  4780   000042                     i2u193_47:
  4781   000042  2EE8               	decfsz	wreg,f,c
  4782   000044  D7FE               	bra	i2u193_47
  4783   000046  2E03               	decfsz	??_HighISR^0,f,c
  4784   000048  D7FC               	bra	i2u193_47
  4785   00004A  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4786   00004C  D7FA               	bra	i2u193_47
  4787   00004E  F000               	nop	
  4788   000050                     
  4789                           ;interrupts.c: 47:         LATDbits.LATD7=0;
  4790   000050  9E7C               	bcf	124,7,c	;volatile
  4791   000052                     
  4792                           ;interrupts.c: 48:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4793   000052  0E05               	movlw	5
  4794   000054  6E04               	movwf	(??_HighISR+1)^0,c
  4795   000056  0E0F               	movlw	15
  4796   000058  6E03               	movwf	??_HighISR^0,c
  4797   00005A  0EF1               	movlw	241
  4798   00005C                     i2u194_47:
  4799   00005C  2EE8               	decfsz	wreg,f,c
  4800   00005E  D7FE               	bra	i2u194_47
  4801   000060  2E03               	decfsz	??_HighISR^0,f,c
  4802   000062  D7FC               	bra	i2u194_47
  4803   000064  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4804   000066  D7FA               	bra	i2u194_47
  4805   000068  F000               	nop	
  4806   00006A                     
  4807                           ;interrupts.c: 49:         clear_interrupt_flag();
  4808   00006A  EC8C  F00F         	call	i2_clear_interrupt_flag	;wreg free
  4809   00006E                     
  4810                           ;interrupts.c: 50:         PIR0bits.INT1IF = 0;
  4811   00006E  010E               	movlb	14	; () banked
  4812   000070  9333               	bcf	51,1,b	;volatile
  4813   000072                     i2l470:
  4814   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4815   000074  0011               	retfie		f
  4816   000076                     __end_of_HighISR:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function i2_clear_interrupt_flag *****************
  4820 ;; Defined at:
  4821 ;;		line 68 in file "interrupts.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; Hardware stack levels required when called: 2
  4842 ;; This function calls:
  4843 ;;		i2_I2C_2_Master_Start
  4844 ;;		i2_I2C_2_Master_Stop
  4845 ;;		i2_I2C_2_Master_Write
  4846 ;; This function is called by:
  4847 ;;		_HighISR
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text38
  4852   001F18                     __ptext38:
  4853                           	callstack 0
  4854   001F18                     i2_clear_interrupt_flag:
  4855                           	callstack 19
  4856   001F18                     
  4857                           ;interrupts.c: 69:     I2C_2_Master_Start();
  4858   001F18  ECC8  F00F         	call	i2_I2C_2_Master_Start	;wreg free
  4859                           
  4860                           ;interrupts.c: 70:     I2C_2_Master_Write(0x52 | 0x00);
  4861   001F1C  0E52               	movlw	82
  4862   001F1E  ECAE  F00F         	call	i2_I2C_2_Master_Write
  4863                           
  4864                           ;interrupts.c: 71:     I2C_2_Master_Write(0b11100110);
  4865   001F22  0EE6               	movlw	230
  4866   001F24  ECAE  F00F         	call	i2_I2C_2_Master_Write
  4867                           
  4868                           ;interrupts.c: 72:     I2C_2_Master_Stop();
  4869   001F28  ECC3  F00F         	call	i2_I2C_2_Master_Stop	;wreg free
  4870   001F2C  0012               	return		;funcret
  4871   001F2E                     __end_ofi2_clear_interrupt_flag:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function i2_I2C_2_Master_Write *****************
  4875 ;; Defined at:
  4876 ;;		line 45 in file "i2c.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  data_byte       1    wreg     unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  data_byte       1    1[COMRAM] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;Total ram usage:        1 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 1
  4897 ;; This function calls:
  4898 ;;		i2_I2C_2_Master_Idle
  4899 ;; This function is called by:
  4900 ;;		i2_clear_interrupt_flag
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text39
  4905   001F5C                     __ptext39:
  4906                           	callstack 0
  4907   001F5C                     i2_I2C_2_Master_Write:
  4908                           	callstack 19
  4909                           
  4910                           ;incstack = 0
  4911                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  4912   001F5C  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  4913   001F5E                     
  4914                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4915   001F5E  EC1D  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4916   001F62                     
  4917                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4918   001F62  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  4919   001F66  0012               	return		;funcret
  4920   001F68                     __end_ofi2_I2C_2_Master_Write:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function i2_I2C_2_Master_Stop *****************
  4924 ;; Defined at:
  4925 ;;		line 39 in file "i2c.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4943 ;;Total ram usage:        0 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 1
  4946 ;; This function calls:
  4947 ;;		i2_I2C_2_Master_Idle
  4948 ;; This function is called by:
  4949 ;;		i2_clear_interrupt_flag
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text40
  4954   001F86                     __ptext40:
  4955                           	callstack 0
  4956   001F86                     i2_I2C_2_Master_Stop:
  4957                           	callstack 19
  4958   001F86                     
  4959                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4960   001F86  EC1D  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4961   001F8A                     
  4962                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4963   001F8A  010E               	movlb	14	; () banked
  4964   001F8C  85DA               	bsf	218,2,b	;volatile
  4965   001F8E                     
  4966                           ; BSR set to: 14
  4967   001F8E  0012               	return		;funcret
  4968   001F90                     __end_ofi2_I2C_2_Master_Stop:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function i2_I2C_2_Master_Start *****************
  4972 ;; Defined at:
  4973 ;;		line 27 in file "i2c.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; Hardware stack levels required when called: 1
  4994 ;; This function calls:
  4995 ;;		i2_I2C_2_Master_Idle
  4996 ;; This function is called by:
  4997 ;;		i2_clear_interrupt_flag
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text41
  5002   001F90                     __ptext41:
  5003                           	callstack 0
  5004   001F90                     i2_I2C_2_Master_Start:
  5005                           	callstack 19
  5006   001F90                     
  5007                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5008   001F90  EC1D  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  5009   001F94                     
  5010                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5011   001F94  010E               	movlb	14	; () banked
  5012   001F96  81DA               	bsf	218,0,b	;volatile
  5013   001F98                     
  5014                           ; BSR set to: 14
  5015   001F98  0012               	return		;funcret
  5016   001F9A                     __end_ofi2_I2C_2_Master_Start:
  5017                           	callstack 0
  5018                           
  5019 ;; *************** function i2_I2C_2_Master_Idle *****************
  5020 ;; Defined at:
  5021 ;;		line 22 in file "i2c.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5039 ;;Total ram usage:        1 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		i2_I2C_2_Master_Start
  5045 ;;		i2_I2C_2_Master_Stop
  5046 ;;		i2_I2C_2_Master_Write
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text42
  5051   001E3A                     __ptext42:
  5052                           	callstack 0
  5053   001E3A                     i2_I2C_2_Master_Idle:
  5054                           	callstack 19
  5055   001E3A                     i2l145:
  5056   001E3A  010E               	movlb	14	; () banked
  5057   001E3C  B5D8               	btfsc	216,2,b	;volatile
  5058   001E3E  EF23  F00F         	goto	i2u115_41
  5059   001E42  EF25  F00F         	goto	i2u115_40
  5060   001E46                     i2u115_41:
  5061   001E46  EF1D  F00F         	goto	i2l145
  5062   001E4A                     i2u115_40:
  5063   001E4A                     
  5064                           ; BSR set to: 14
  5065   001E4A  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5066   001E4E  0E1F               	movlw	31
  5067   001E50  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5068   001E52  A4D8               	btfss	status,2,c
  5069   001E54  EF2E  F00F         	goto	i2u116_41
  5070   001E58  EF30  F00F         	goto	i2u116_40
  5071   001E5C                     i2u116_41:
  5072   001E5C  EF1D  F00F         	goto	i2l145
  5073   001E60                     i2u116_40:
  5074   001E60                     
  5075                           ; BSR set to: 14
  5076   001E60  0012               	return		;funcret
  5077   001E62                     __end_ofi2_I2C_2_Master_Idle:
  5078                           	callstack 0
  5079                           
  5080                           	psect	rparam
  5081   000000                     
  5082                           	psect	temp
  5083   00005B                     btemp:
  5084                           	callstack 0
  5085   00005B                     	ds	1
  5086   000000                     int$flags	set	btemp
  5087   000000                     wtemp8	set	btemp+1
  5088   000000                     ttemp5	set	btemp+1
  5089   000000                     ttemp6	set	btemp+4
  5090   000000                     ttemp7	set	btemp+8
  5091                           
  5092                           	psect	idloc
  5093                           
  5094                           ;Config register IDLOC0 @ 0x200000
  5095                           ;	unspecified, using default values
  5096   200000                     	org	2097152
  5097   200000  0FFF               	dw	4095
  5098                           
  5099                           ;Config register IDLOC1 @ 0x200002
  5100                           ;	unspecified, using default values
  5101   200002                     	org	2097154
  5102   200002  0FFF               	dw	4095
  5103                           
  5104                           ;Config register IDLOC2 @ 0x200004
  5105                           ;	unspecified, using default values
  5106   200004                     	org	2097156
  5107   200004  0FFF               	dw	4095
  5108                           
  5109                           ;Config register IDLOC3 @ 0x200006
  5110                           ;	unspecified, using default values
  5111   200006                     	org	2097158
  5112   200006  0FFF               	dw	4095
  5113                           
  5114                           ;Config register IDLOC4 @ 0x200008
  5115                           ;	unspecified, using default values
  5116   200008                     	org	2097160
  5117   200008  0FFF               	dw	4095
  5118                           
  5119                           ;Config register IDLOC5 @ 0x20000A
  5120                           ;	unspecified, using default values
  5121   20000A                     	org	2097162
  5122   20000A  0FFF               	dw	4095
  5123                           
  5124                           ;Config register IDLOC6 @ 0x20000C
  5125                           ;	unspecified, using default values
  5126   20000C                     	org	2097164
  5127   20000C  0FFF               	dw	4095
  5128                           
  5129                           ;Config register IDLOC7 @ 0x20000E
  5130                           ;	unspecified, using default values
  5131   20000E                     	org	2097166
  5132   20000E  0FFF               	dw	4095
  5133                           
  5134                           	psect	config
  5135                           
  5136                           ;Config register CONFIG1L @ 0x300000
  5137                           ;	External Oscillator mode Selection bits
  5138                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5139                           ;	Power-up default value for COSC bits
  5140                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5141   300000                     	org	3145728
  5142   300000  AA                 	db	170
  5143                           
  5144                           ;Config register CONFIG1H @ 0x300001
  5145                           ;	unspecified, using default values
  5146                           ;	Clock Out Enable bit
  5147                           ;	CLKOUTEN = 0x1, unprogrammed default
  5148                           ;	Clock Switch Enable bit
  5149                           ;	CSWEN = 0x1, unprogrammed default
  5150                           ;	Fail-Safe Clock Monitor Enable bit
  5151                           ;	FCMEN = 0x1, unprogrammed default
  5152   300001                     	org	3145729
  5153   300001  FF                 	db	255
  5154                           
  5155                           ;Config register CONFIG2L @ 0x300002
  5156                           ;	unspecified, using default values
  5157                           ;	Master Clear Enable bit
  5158                           ;	MCLRE = 0x1, unprogrammed default
  5159                           ;	Power-up Timer Enable bit
  5160                           ;	PWRTE = 0x1, unprogrammed default
  5161                           ;	Low-power BOR enable bit
  5162                           ;	LPBOREN = 0x1, unprogrammed default
  5163                           ;	Brown-out Reset Enable bits
  5164                           ;	BOREN = 0x3, unprogrammed default
  5165   300002                     	org	3145730
  5166   300002  FF                 	db	255
  5167                           
  5168                           ;Config register CONFIG2H @ 0x300003
  5169                           ;	unspecified, using default values
  5170                           ;	Brown Out Reset Voltage selection bits
  5171                           ;	BORV = 0x3, unprogrammed default
  5172                           ;	ZCD Disable bit
  5173                           ;	ZCD = 0x1, unprogrammed default
  5174                           ;	PPSLOCK bit One-Way Set Enable bit
  5175                           ;	PPS1WAY = 0x1, unprogrammed default
  5176                           ;	Stack Full/Underflow Reset Enable bit
  5177                           ;	STVREN = 0x1, unprogrammed default
  5178                           ;	Debugger Enable bit
  5179                           ;	DEBUG = 0x1, unprogrammed default
  5180                           ;	Extended Instruction Set Enable bit
  5181                           ;	XINST = 0x1, unprogrammed default
  5182   300003                     	org	3145731
  5183   300003  FF                 	db	255
  5184                           
  5185                           ;Config register CONFIG3L @ 0x300004
  5186                           ;	WDT Period Select bits
  5187                           ;	WDTCPS = 0x1F, unprogrammed default
  5188                           ;	WDT operating mode
  5189                           ;	WDTE = OFF, WDT Disabled
  5190   300004                     	org	3145732
  5191   300004  9F                 	db	159
  5192                           
  5193                           ;Config register CONFIG3H @ 0x300005
  5194                           ;	unspecified, using default values
  5195                           ;	WDT Window Select bits
  5196                           ;	WDTCWS = 0x7, unprogrammed default
  5197                           ;	WDT input clock selector
  5198                           ;	WDTCCS = 0x7, unprogrammed default
  5199   300005                     	org	3145733
  5200   300005  FF                 	db	255
  5201                           
  5202                           ;Config register CONFIG4L @ 0x300006
  5203                           ;	unspecified, using default values
  5204                           ;	Write Protection Block 0
  5205                           ;	WRT0 = 0x1, unprogrammed default
  5206                           ;	Write Protection Block 1
  5207                           ;	WRT1 = 0x1, unprogrammed default
  5208                           ;	Write Protection Block 2
  5209                           ;	WRT2 = 0x1, unprogrammed default
  5210                           ;	Write Protection Block 3
  5211                           ;	WRT3 = 0x1, unprogrammed default
  5212                           ;	Write Protection Block 3
  5213                           ;	WRT4 = 0x1, unprogrammed default
  5214                           ;	Write Protection Block 3
  5215                           ;	WRT5 = 0x1, unprogrammed default
  5216                           ;	Write Protection Block 3
  5217                           ;	WRT6 = 0x1, unprogrammed default
  5218                           ;	Write Protection Block 3
  5219                           ;	WRT7 = 0x1, unprogrammed default
  5220   300006                     	org	3145734
  5221   300006  FF                 	db	255
  5222                           
  5223                           ;Config register CONFIG4H @ 0x300007
  5224                           ;	unspecified, using default values
  5225                           ;	Configuration Register Write Protection bit
  5226                           ;	WRTC = 0x1, unprogrammed default
  5227                           ;	Boot Block Write Protection bit
  5228                           ;	WRTB = 0x1, unprogrammed default
  5229                           ;	Data EEPROM Write Protection bit
  5230                           ;	WRTD = 0x1, unprogrammed default
  5231                           ;	Scanner Enable bit
  5232                           ;	SCANE = 0x1, unprogrammed default
  5233                           ;	Low Voltage Programming Enable bit
  5234                           ;	LVP = 0x1, unprogrammed default
  5235   300007                     	org	3145735
  5236   300007  FF                 	db	255
  5237                           
  5238                           ;Config register CONFIG5L @ 0x300008
  5239                           ;	unspecified, using default values
  5240                           ;	UserNVM Program Memory Code Protection bit
  5241                           ;	CP = 0x1, unprogrammed default
  5242                           ;	DataNVM Memory Code Protection bit
  5243                           ;	CPD = 0x1, unprogrammed default
  5244   300008                     	org	3145736
  5245   300008  FF                 	db	255
  5246                           
  5247                           ;Config register CONFIG5H @ 0x300009
  5248                           ;	unspecified, using default values
  5249   300009                     	org	3145737
  5250   300009  FF                 	db	255
  5251                           
  5252                           ;Config register CONFIG6L @ 0x30000A
  5253                           ;	unspecified, using default values
  5254                           ;	Table Read Protection Block 0
  5255                           ;	EBTR0 = 0x1, unprogrammed default
  5256                           ;	Table Read Protection Block 1
  5257                           ;	EBTR1 = 0x1, unprogrammed default
  5258                           ;	Table Read Protection Block 2
  5259                           ;	EBTR2 = 0x1, unprogrammed default
  5260                           ;	Table Read Protection Block 3
  5261                           ;	EBTR3 = 0x1, unprogrammed default
  5262                           ;	Table Read Protection Block 4
  5263                           ;	EBTR4 = 0x1, unprogrammed default
  5264                           ;	Table Read Protection Block 5
  5265                           ;	EBTR5 = 0x1, unprogrammed default
  5266                           ;	Table Read Protection Block 6
  5267                           ;	EBTR6 = 0x1, unprogrammed default
  5268                           ;	Table Read Protection Block 7
  5269                           ;	EBTR7 = 0x1, unprogrammed default
  5270   30000A                     	org	3145738
  5271   30000A  FF                 	db	255
  5272                           
  5273                           ;Config register CONFIG6H @ 0x30000B
  5274                           ;	unspecified, using default values
  5275                           ;	Boot Block Table Read Protection bit
  5276                           ;	EBTRB = 0x1, unprogrammed default
  5277   30000B                     	org	3145739
  5278   30000B  FF                 	db	255
  5279                           tosu	equ	0xFFF
  5280                           tosh	equ	0xFFE
  5281                           tosl	equ	0xFFD
  5282                           stkptr	equ	0xFFC
  5283                           pclatu	equ	0xFFB
  5284                           pclath	equ	0xFFA
  5285                           pcl	equ	0xFF9
  5286                           tblptru	equ	0xFF8
  5287                           tblptrh	equ	0xFF7
  5288                           tblptrl	equ	0xFF6
  5289                           tablat	equ	0xFF5
  5290                           prodh	equ	0xFF4
  5291                           prodl	equ	0xFF3
  5292                           indf0	equ	0xFEF
  5293                           postinc0	equ	0xFEE
  5294                           postdec0	equ	0xFED
  5295                           preinc0	equ	0xFEC
  5296                           plusw0	equ	0xFEB
  5297                           fsr0h	equ	0xFEA
  5298                           fsr0l	equ	0xFE9
  5299                           wreg	equ	0xFE8
  5300                           indf1	equ	0xFE7
  5301                           postinc1	equ	0xFE6
  5302                           postdec1	equ	0xFE5
  5303                           preinc1	equ	0xFE4
  5304                           plusw1	equ	0xFE3
  5305                           fsr1h	equ	0xFE2
  5306                           fsr1l	equ	0xFE1
  5307                           bsr	equ	0xFE0
  5308                           indf2	equ	0xFDF
  5309                           postinc2	equ	0xFDE
  5310                           postdec2	equ	0xFDD
  5311                           preinc2	equ	0xFDC
  5312                           plusw2	equ	0xFDB
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        18
    BSS         249
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     33     158
    BANK1           256    185     203
    BANK2           256      0     120
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2418$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2369$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2369$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK1[20]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S525DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S525DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _Interrupts_init->_set_interrupt_threshold
    _set_interrupt_threshold->_color_writetoaddr
    _enable_color_interrupt->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _clear_interrupt_flag->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    i2_clear_interrupt_flag->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               216   216      0   14702
                                             31 BANK0      2     2      0
                                              0 BANK1    185   185      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _LEDSon_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7586
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7100
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6639
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5072
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     453
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3045
                                             17 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1422
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0    1908
             _enable_color_interrupt
            _set_interrupt_threshold
 ---------------------------------------------------------------------------------
 (2) _set_interrupt_threshold                              8     2      6    1136
                                              8 COMRAM     8     2      6
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _enable_color_interrupt                               0     0      0     772
               _clear_interrupt_flag
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _clear_interrupt_flag                                 0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
             i2_clear_interrupt_flag
 ---------------------------------------------------------------------------------
 (10) i2_clear_interrupt_flag                              0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
     _enable_color_interrupt
       _clear_interrupt_flag
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _set_interrupt_threshold
       _color_writetoaddr
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   i2_clear_interrupt_flag
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      78       9       46.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B9      CB       7       79.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRllhhhh     52      0       0      40        0.0%
BITBIGSFRllhhhl     37      0       0      42        0.0%
BITBIGSFRhhhl       32      0       0      33        0.0%
BITBIGSFRllhhhl     2D      0       0      45        0.0%
BITBIGSFRllllhl     2A      0       0      53        0.0%
BITBIGSFRllllll     23      0       0      60        0.0%
BITBIGSFRhhlll      1D      0       0      37        0.0%
BITBIGSFRllhhhl     11      0       0      47        0.0%
BITBIGSFRllhhl      11      0       0      48        0.0%
BITBIGSFRhhlhh       E      0       0      34        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllhhhl      C      0       0      46        0.0%
BITBIGSFRllllhl      9      0       0      57        0.0%
BITBIGSFRllhhhl      8      0       0      43        0.0%
BITBIGSFRlllllh      6      0       0      59        0.0%
BITBIGSFRllllhh      6      0       0      52        0.0%
BITBIGSFRllllhl      5      0       0      55        0.0%
BITBIGSFRlllhl       5      0       0      51        0.0%
BITBIGSFRllllhl      3      0       0      54        0.0%
BITBIGSFRllllhl      3      0       0      56        0.0%
BITBIGSFRlllhh       3      0       0      50        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRllhhhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      36        0.0%
BITBIGSFRllllll      2      0       0      61        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllllhl      1      0       0      58        0.0%
BITBIGSFRllhhhl      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      35        0.0%
BITBIGSFRllhl        1      0       0      49        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     23B      62        0.0%
DATA                 0      0     23B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 09 11:13:41 2022

                    _color_read_Red 1AF4                     _color_read_Blue 1BE4  
                                l22 1EE8                                  l31 1C32  
                                l25 1B42                                  l34 1BE2  
                                l19 1DB6                                  l28 1B92  
                                l86 1386                                  l79 18F6  
               ___wmul@multiplicand 0007                    _color_read_Clear 1B94  
                  _color_read_Green 1B44                   ??_Interrupts_init 0011  
                               l142 1E10                                 l151 1F84  
                               l160 1F5A                                 l145 1E12  
                               l154 1F70                                 l163 1D02  
                               l148 1E38                                 l157 1F7A  
                               l264 1EA8                                 l600 121A  
                               l373 1EC8                                 l613 14EA  
                               l382 1EEC                                 l391 1DE6  
                               l480 1A4C                                 l464 1D82  
                               l473 1F4E                                 l385 1F00  
                               l483 1F16                                 l486 1E86  
                               l984 19E4                                 l977 19DC  
                               u840 1E22                                 u841 1E1E  
                               u850 1E38                                 u851 1E34  
                               _abs 1D04                                 _pad 18F8  
                               wreg 000FE8                                l1202 0EA4  
                              ?_abs 0017                                l1204 0EAC  
                              l1205 0EF2                                l1223 1648  
                              l1216 1092                                l1161 1D3A  
                              l1241 186E                                l1171 1AF2  
                              l3100 139A                                l1164 1D42  
                              l1252 1F9A                                l1229 1AA0  
                              l3110 140A                                l3102 13BA  
                              l3030 17CA                                l2400 1CC4  
                              l3120 1482                                l3112 1412  
                              l3104 13BE                                l3032 17D4  
                              l3040 1C7E                                l3200 1514  
                              l1249 1CC0                                l1193 191A  
                              l2410 1D00                                l2402 1CC8  
                              l3122 1494                                l3114 1426  
                              l3106 13CC                                l3050 1D1E  
                              l3034 17F2                                l3026 17A6  
                              l3042 1C8A                                l3210 1564  
                              l3202 1522                                l2180 1E12  
                              l2420 19E6                                l2404 1CD0  
                              l2500 1B3A                                l3060 10CA  
                              l3052 1094                                l3116 1434  
                              l3124 149A                                l3108 13EC  
                              l3036 1828                                l3028 17B8  
                              l3044 1C9C                                l3140 193A  
                              l3132 18F8                                l3212 1584  
                              l3204 1530                                l3300 16E6  
                              l1197 1970                                l2182 1E22  
                              l2430 1A1E                                l2422 19FA  
                              l2406 1CD8                                l2510 1BE4  
                              l2414 1EEC                                l3070 1126  
                              l3062 10D8                                l3054 1098  
                              l3126 14AA                                l3118 1462  
                              l3046 1CA0                                l3142 193E  
                              l3134 1906                                l3150 0E4C  
                              l3214 15DA                                l3206 1534  
                              l3222 161C                                l3230 1A5A  
                              l3310 170E                                l3302 16E8  
                              l2432 1A2C                                l2424 19FE  
                              l2408 1CFE                                l2512 1C2A  
                              l2504 1B44                                l2416 1EFC  
                              l2440 1E7E                                l3080 1190  
                              l3072 112E                                l3064 10F8  
                              l3056 10A6                                l3128 14CA  
                              l3048 1D04                                l3144 195C  
                              l3136 1912                                l3160 0EC4  
                              l3152 0E5C                                l3208 1544  
                              l3232 1A76                                l3240 1AB4  
                              l3312 171A                                l3304 16EA  
                              l2282 1F7C                                l2290 1F72  
                              l2346 1ECC                                l2418 1F40  
                              l2434 1A3E                                l2426 1A10  
                              l2506 1B8A                                l2530 18D0  
                              l2522 1870                                l2450 1994  
                              l3090 11DA                                l3082 11B0  
                              l3074 1142                                l3066 10FC  
                              l3058 10C6                                l3138 1926  
                              l3170 0EFA                                l3162 0ECA  
                              l3154 0E7C                                l3146 0E18  
                              l3218 160A                                l3234 1A96  
                              l3242 1ABC                                l3314 1750  
                              l3306 16F6                                l3250 164A  
                              l2284 1F80                                l2292 1F76  
                              l2348 1F02                                l2436 1A42  
                              l2428 1A14                                l2516 1B94  
                              l2540 18EA                                l2532 18D2  
                              l2524 1878                                l2460 19CE  
                              l2452 199C                                l2444 1972  
                              l3092 11FA                                l3084 11B2  
                              l3076 1150                                l3068 1108  
                              l3180 0F96                                l3172 0F02  
                              l3164 0EDA                                l3156 0E98  
                              l3148 0E38                                l3228 1A4E  
                              l3244 1AC4                                l3316 175C  
                              l3308 1702                                l3260 165E  
                              l3252 164E                                l2286 1F52  
                              l2390 1DFA                                l2518 1BDA  
                              l2542 18F4                                l2534 18DC  
                              l2526 18A2                                l2630 1EB6  
                              l2462 19D0                                l2454 19AA  
                              l2446 197A                                l2438 1E62  
                              l2550 12A0                                l3086 11C4  
                              l3078 1162                                l3190 105C  
                              l3174 0F08                                l3182 0FFA  
                              l3166 0EE6                                l3158 0EB4  
                              l3246 1AE0                                l3238 1AA2  
                              l3318 1776                                l3270 1696  
                              l3262 1662                                l3254 1652  
                              l2288 1F56                                l2640 1D44  
                              l2624 1E88                                l2392 1DFC  
                              l2384 1DE8                                l2536 18DE  
                              l2528 18C6                                l2632 1EB8  
                              l2464 19D6                                l2456 19B0  
                              l2448 198C                                l2552 12A4  
                              l2544 121C                                l3088 11CA  
                              l3096 1388                                l3192 1062  
                              l3184 1014                                l3176 0F8A  
                              l3168 0EEE                                l3280 16C4  
                              l3272 169E                                l3264 1674  
                              l3256 1656                                l2650 1D74  
                              l2642 1D64                                l2394 1DFE  
                              l2386 1DF2                                l2490 1D88  
                              l2538 18E8                                l2634 1EC2  
                              l2626 1EAA                                l2458 19C6  
                              l2554 12E6                                l2546 1238  
                              l3098 138C                                l3194 1072  
                              l3186 1032                                l3178 0F90  
                              l3290 16D6                                l3282 16D6  
                              l3274 16A6                                l3266 167C  
                              l3258 165A                                l2660 1D7E  
                              l2652 1D76                                l2644 1D66  
                              l2388 1DF8                                l2492 1D92  
                              l2396 1F68                                l2636 1EC4  
                              l2628 1EB4                                l2556 1302  
                              l2548 128C                                l3188 104C  
                              l3292 16D6                                l3284 16D6  
                              l3276 16AC                                l3268 1684  
                              l2662 1D80                                l2654 1D78  
                              l2646 1D6A                                l2494 1DA2  
                              l2398 1F6C                                l2638 1EC6  
                              l2558 1346                                l3198 14EC  
                              l3294 16D6                                l3286 16D6  
                              l3278 16B8                                l2656 1D7A  
                              l2648 1D70                                l2496 1DAC  
                              l2488 1D84                                l2680 1DCA  
                              l3296 16E2                                l3288 16D6  
                              l2658 1D7C                                l2498 1AF4  
                              l2682 1DCE                                l3298 16E4  
                              l2676 1DB8                                l2678 1DBC  
                              ?_pad 0015                                STR_1 0E01  
                              u1200 1A10                                u1201 1A0C  
                              u1210 1A3E                                u1211 1A3A  
                              u1220 198C                        ?_LEDSon_init 0001  
                              u1221 1988                                u1230 19AA  
                              u1231 19A6                                u1240 19C6  
                              u1241 19C2                                u1170 1CEC  
                              u1330 1DE6                                u1171 1CE4  
                              u1331 1DE2                                u1260 1238  
                              u1261 1234                                u1190 1EFC  
                              u1270 1302                                u1510 17B8  
                              u1191 1EF8                                u1271 12FE  
                              u1511 17B4                                u1600 1126  
                              u1520 17CA                        _BAUD4CONbits 000EE9  
                              u1601 1122                                u1521 17C6  
                              u1610 1150                                u1530 17F2  
                              u1611 114C                                u1531 17EE  
                              u1188 1CEE                                u1620 1190  
                              u1540 1828                                u1700 1906  
                              u1621 118C                                u1541 1824  
                              u1701 1902                                u1630 11DA  
                              u1550 1CC0                                u1710 195C  
                              u1631 11D6                                u1551 1CBC  
                              u1711 1958                                u1640 139A  
                              u1560 1D1E                                u1800 104C  
                              u1720 0E48                                u1641 1396  
                              u1561 1D1A                                u1801 1048  
                              u1721 0E42                                u1570 10A6  
                              u1650 13CC                                u1810 105C  
                              u1730 0E4A                                _T2PR 000FBC  
                              u1571 10A2                                u1651 13C8  
                              u1811 1058                                u1580 10D8  
                              u1660 140A                                u1740 0E5C  
                              u1820 1514                                u1581 10D4  
                              u1661 1406                                u1741 0E58  
                              u1821 1510                                u1670 1434  
                              u1750 0E98                                u1830 1564  
                              u1591 1102                                u1671 1430  
                              u1751 0E94                                u1831 1560  
                              u1680 1462                                u1760 0EC4  
                              u1840 1584                                u1681 145E  
                              u1761 0EC0                                u1841 1580  
                              u1690 14AA                                u1770 0EDA  
                              u1850 1A96                                u1691 14A6  
                              u1771 0ED6                                u1851 1A92  
                              u1780 1014                                u1781 1010  
                              u1917 1768                                u1861 16CE  
                              u1790 1032                                u1927 1D98  
                              u1791 102E                                u1871 16DC  
                              u1880 178A                                u1881 1780  
                              u1898 178E                                abs@a 0017  
                              _dbuf 00BD                                _main 164A  
                              _dtoa 0E18                                _prec 00B2  
                              pad@i 001C                                pad@p 0019  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 001E                                fsr2l 000FD9  
                              btemp 005B                                prodh 000FF4  
                              prodl 000FF3                                start 0076  
            __end_of_color_read_Red 1B44                     __end_of_HighISR 0076  
              _response_in_progress 00B8                        ___param_bank 000000  
                             ??_abs 0019                               ??_pad 001B  
                   __end_of___aodiv 121C                               ?_main 0001  
                             ?_dtoa 0020                     __end_of___aomod 14EC  
                   __end_of___lwdiv 19E6                               i2l151 1F98  
                             i2l160 1F66                               i2l145 1E3A  
                             i2l148 1E60                               i2l157 1F8E  
                             i2l470 0072                               i2l483 1F2C  
                      vfpfcnvrt@fmt 0045             ?_enable_color_interrupt 0001  
                      main@red_read 019E             __end_of_sendCharSerial4 1F02  
        __end_of_I2C_2_Master_Start 1F86          __end_of_I2C_2_Master_Write 1F5C  
                             _flags 00BC                               _fputc 17A6  
                             _fputs 1C7E                               pad@fp 0015  
                             _width 00B0                               _putch 1F9A  
                             dtoa@d 0022                               dtoa@i 0041  
                             dtoa@n 0038                               dtoa@p 0034  
                             dtoa@s 0040                               dtoa@w 0036  
                             tablat 000FF5                               plusw1 000FE3  
                             plusw2 000FDB                               ttemp5 005C  
                             ttemp6 005F                               ttemp7 0063  
                             status 000FD8                               wtemp8 005C  
                   __end_of_sprintf 1AF4             __end_of_color_read_Blue 1C34  
             _I2C_2_Master_RepStart 1F68                     ?_color_read_Red 0009  
                   __initialization 1C34                        __end_of_main 17A6  
                      __end_of_dtoa 1094      __end_of_enable_color_interrupt 1F50  
                            ??_main 00FC                              ??_dtoa 002A  
                     __activetblptr 000003                       main@blue_read 01A2  
                      ?_setMotorPWM 0012                              ?_fputc 0005  
                            ?_fputs 000E                              _CCPR1H 000FAA  
                            _CCPR2H 000FA6                              _CCPR3H 000F25  
                            _CCPR4H 000F21                              ?_putch 0001  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            _RE4PPS 000E76                              i2l3010 001A  
                            i2l3020 0052                              i2l3012 002E  
                            i2l3022 006A                              i2l3014 0036  
                            i2l3024 006E                              i2l3016 0038  
                            i2l3008 000A                              i2l3018 0050  
                            i2l2380 1E3A                              i2l2382 1E4A  
                            i2l2480 1F86                              i2l2482 1F8A  
                            i2l2476 1F90                              i2l2484 1F5E  
                            i2l2478 1F94                              i2l2486 1F62  
                            i2l2692 1F18                              _RG6PPS 000E88  
                         ??_HighISR 0003            __end_of_color_click_init 1DB8  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                      _CCPTMRS0bits 000FAD                        vfprintf@cfmt 0055  
                         ??___aodiv 0015                           ??___aomod 0015  
                            ___wmul 1E62                           ??___lwdiv 000F  
                            clear_0 1C5A                              clear_1 1C66  
                            isa$std 000001                              pad@buf 0017  
                            dtoa@fp 0020        __end_of_clear_interrupt_flag 1F18  
                            fputc@c 0005                              fputs@c 0012  
                            fputs@i 0013                              fputs@s 000E  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                  ?_sendCharSerial4 0001                              putch@c 0001  
                  __end_of_vfprintf 1AA2                   ??_initDCmotorsPWM 0005  
                         ??_sprintf 0057             ?i2_clear_interrupt_flag 0001  
                        __accesstop 0060             __end_of__initialization 1C74  
          __end_of_color_read_Clear 1BE4            __end_of_color_read_Green 1B94  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                  ?_color_read_Blue 0009                     _Interrupts_init 1D44  
                    __pcstackCOMRAM 0001                        __pidataBANK1 1F2E  
           _set_interrupt_threshold 19E6                       __end_of_fputc 1870  
                     __end_of_fputs 1CC2                       __end_of_putch 1F9C  
                    main@clear_read 01A4      __end_ofi2_clear_interrupt_flag 1F2E  
                           ??_fputc 0009                             ??_fputs 0012  
                           ??_putch 0005                          __pbssBANK0 0060  
                        __pbssBANK2 0200                   _color_writetoaddr 1ECA  
                      _T2CLKCONbits 000FBF                  ?_color_writetoaddr 0007  
                           ?___wmul 0005                 ??_color_writetoaddr 0008  
                           _INT1PPS 000DF1                      main@green_read 01A0  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
       set_interrupt_threshold@AIHT 000B         set_interrupt_threshold@AILT 0009  
           __end_of_Interrupts_init 1D84              color_writetoaddr@value 0007  
                  ??_color_read_Red 000B                             _HighISR 0008  
         __end_of_color_writetoaddr 1EEA                _clear_interrupt_flag 1F02  
                _I2C_2_Master_Start 1F7C                          _initUSART4 1EAA  
               i2_I2C_2_Master_Idle 1E3A                  _I2C_2_Master_Write 1F50  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 1F86  
                           __Lparam 0000                   color_read_Red@tmp 000E  
         ??_set_interrupt_threshold 000F             sendStringSerial4@string 0006  
                           ___aodiv 1094                             ___aomod 1388  
               ?_I2C_2_Master_Start 0001                             ___lwdiv 1972  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 00DD  
                      __psmallconst 0E00                             __pcinit 1C34  
                           __ramtop 0E00                             __ptext0 164A  
                           __ptext1 1AA2                             __ptext2 1A4E  
                           __ptext3 14EC                             __ptext4 0E18  
                           __ptext5 18F8                             __ptext6 1C7E  
                           __ptext7 17A6                             __ptext8 1F9A  
                           __ptext9 1D04                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                ?i2_I2C_2_Master_Stop 0001  
                         _T2HLTbits 000FBE                       _RxBufWriteCnt 005A  
                           main@buf 018A                             _sprintf 1AA2  
              ??_I2C_2_Master_Start 0006                ??_I2C_2_Master_Write 0006  
              end_of_initialization 1C74                             fputc@fp 0007  
                           fputs@fp 0010                   ?_color_click_init 0001  
             ?_clear_interrupt_flag 0001                  ??_color_click_init 0009  
                     _card_detected 00B6                   __end_of_vfpfcnvrt 164A  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                    vfpfcnvrt@convarg 004B  
                        main@F14645 01B9                          main@F14658 0200  
                        ??_vfprintf 0055                     _initDCmotorsPWM 1870  
                setMotorPWM@negDuty 0017               ??i2_I2C_2_Master_Idle 0001  
             ??i2_I2C_2_Master_Stop 0002     __end_of_set_interrupt_threshold 1A4E  
                         _TRISAbits 000F81                  setMotorPWM@posDuty 0016  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                 main@expected_values 0178  
          color_writetoaddr@address 0008             ??_I2C_2_Master_RepStart 0006  
                  ?_Interrupts_init 0001                         _CCP1CONbits 000FAB  
                 ?_color_read_Clear 0009                        _EUSART4RXbuf 009C  
                      _EUSART4TXbuf 0060                         _CCP2CONbits 000FA7  
                 ?_color_read_Green 0009                         _CCP3CONbits 000F26  
                       ?_initUSART4 0001                         _CCP4CONbits 000F22  
         sendCharSerial4@charToSend 0005                          main@motorL 01A7  
                        main@motorR 01B0                  ??_color_read_Clear 000B  
                ??_color_read_Green 000B                         vfpfcnvrt@ap 0047  
                       vfpfcnvrt@cp 0053                         vfpfcnvrt@fp 0043  
                    __end_of___wmul 1E88                 color_read_Clear@tmp 000E  
               start_initialization 1C34                         __end_of_abs 1D44  
                       __end_of_pad 1972                       _TxBufWriteCnt 0058  
                     ??_LEDSon_init 0005              ??_clear_interrupt_flag 0007  
               color_read_Green@tmp 000E             __end_of_initDCmotorsPWM 18F8  
                       vfprintf@fmt 00DF                           _TimerFlag 00BA  
          ??_enable_color_interrupt 0009                            ??___wmul 0009  
                       __pdataBANK1 01B9       i2I2C_2_Master_Write@data_byte 0002  
      __end_ofi2_I2C_2_Master_Start 1F9A        __end_ofi2_I2C_2_Master_Write 1F68  
                       __pbssCOMRAM 0057                       __pcstackBANK0 00DD  
                     __pcstackBANK1 0100                    ___aodiv@dividend 0005  
                          ?_HighISR 0001                           _card_seen 00B4  
               __end_of_LEDSon_init 1EAA                    ___lwdiv@dividend 000B  
                         _dtoa$2446 0032                           __pintcode 0008  
                          ?___aodiv 0005                            ?___aomod 0005  
                  ___aodiv@quotient 0017                            ?___lwdiv 000B  
              I2C_2_Master_Read@ack 0007                I2C_2_Master_Read@tmp 0008  
                       __smallconst 0E00                   _I2C_2_Master_Idle 1E12  
                 _I2C_2_Master_Init 1DE8                   _I2C_2_Master_Read 1CC2  
                 _I2C_2_Master_Stop 1F72                        _RxBufReadCnt 0059  
               main@ReturnHomeArray 0100                  ?_I2C_2_Master_Idle 0001  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                     ??_setMotorPWM 0014                  ?_I2C_2_Master_Stop 0001  
                  ___lwdiv@quotient 000F                            ?_sprintf 00E3  
                 _sendStringSerial4 1DB8                 ??_I2C_2_Master_Idle 0005  
               ??_I2C_2_Master_Init 0005                 ??_I2C_2_Master_Read 0006  
set_interrupt_threshold@persistence 000D                      ___wmul@product 0009  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0006  
                          _LATDbits 000F7C                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _IPR0bits 000E1F                            _PIE0bits 000E29  
                ?_sendStringSerial4 0006                            _PIE4bits 000E2D  
                          i2u115_40 1E4A                            i2u115_41 1E46  
                          i2u116_40 1E60                            i2u116_41 1E5C  
                          i2u150_40 002E                            i2u150_41 002A  
                          i2u149_40 001A                            i2u149_41 0016  
                          _PIR0bits 000E33                            i2u193_47 0042  
                          i2u194_47 005C                            _PIR4bits 000E37  
                  ?_initDCmotorsPWM 0001                   ??_sendCharSerial4 0005  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 0008  
                          _SSP2STAT 000ED8                           _vfpfcnvrt 14EC  
         __end_of_I2C_2_Master_Idle 1E3A           __end_of_I2C_2_Master_Init 1E12  
         __end_of_I2C_2_Master_Read 1D04                   ___wmul@multiplier 0005  
         __end_of_I2C_2_Master_Stop 1F7C            ??i2_clear_interrupt_flag 0003  
                      setMotorPWM@m 0012         I2C_2_Master_Write@data_byte 0006  
                 ??_color_read_Blue 000B                        _TxBufReadCnt 0057  
                         copy_data0 1C48           __end_of_sendStringSerial4 1DE8  
                       _LEDSon_init 1E88       __end_of_I2C_2_Master_RepStart 1F72  
                color_read_Blue@tmp 000E            ?_set_interrupt_threshold 0009  
               __end_of_setMotorPWM 1388                        ??_initUSART4 0005  
              i2_I2C_2_Master_Start 1F90                i2_I2C_2_Master_Write 1F5C  
                          __Hrparam 0000                          vfprintf@ap 00E1  
                          __Lrparam 0000                          vfprintf@fp 00DD  
       __end_ofi2_I2C_2_Master_Idle 1E62         __end_ofi2_I2C_2_Master_Stop 1F90  
                        ?_vfpfcnvrt 0043                     ___aodiv@divisor 000D  
                   ___aodiv@counter 0015                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                          sprintf@fmt 00E5  
                   ___lwdiv@divisor 000D                  __end_of_initUSART4 1ECA  
                   ___lwdiv@counter 0011                            __ptext10 1388  
                          __ptext11 1094                            __ptext20 1B44  
                          __ptext12 121C                            __ptext21 1B94  
                          __ptext13 1E62              _enable_color_interrupt 1F40  
                          __ptext30 1F40                            __ptext22 1BE4  
                          __ptext14 1972                            __ptext31 1ECA  
                          __ptext23 1F68                            __ptext15 1DB8  
                          __ptext40 1F86                            __ptext32 1F02  
                          __ptext24 1CC2                            __ptext16 1EEA  
                          __ptext41 1F90                            __ptext33 1F50  
                          __ptext25 1D84                            __ptext17 1EAA  
                          __ptext42 1E3A                            __ptext34 1F72  
                          __ptext26 1DE8                            __ptext18 1870  
                          __ptext35 1F7C                            __ptext27 1E88  
                          __ptext19 1AF4                            __ptext36 1E12  
                          __ptext28 1D44                            __ptext29 19E6  
                          __ptext38 1F18                            __ptext39 1F5C  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 005B                            _vfprintf 1A4E  
                  ___aomod@dividend 0005                          _INTCONbits 000FF2  
      _set_interrupt_threshold$1927 000F        _set_interrupt_threshold$1928 0010  
                       _setMotorPWM 121C                            intlevel2 0000  
                         sprintf@ap 00EF                     ___aomod@divisor 000D  
                       ??_vfpfcnvrt 0049                     ___aomod@counter 0015  
                  _color_click_init 1D84                            sprintf@f 00F1  
                          sprintf@s 00E3                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C                          _TX4STAbits 000EE8  
                      ___aodiv@sign 0016                     _sendCharSerial4 1EEA  
            ??i2_I2C_2_Master_Start 0002              ??i2_I2C_2_Master_Write 0002  
            i2_clear_interrupt_flag 1F18                        ___aomod@sign 0016  
                      main@PWMcycle 01A6  
