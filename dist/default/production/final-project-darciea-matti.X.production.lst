

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 05 22:30:26 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Version 2.35
    59                           ; Generated 05/05/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataBANK1
    95   011B8C                     __pidataBANK1:
    96                           	callstack 0
    97                           
    98                           ;initializer for main@F14643
    99   011B8C  0001               	dw	1
   100   011B8E  0002               	dw	2
   101   011B90  0003               	dw	3
   102   011B92  0004               	dw	4
   103   011B94  0005               	dw	5
   104   011B96  0006               	dw	6
   105   011B98  0007               	dw	7
   106   011B9A  0008               	dw	8
   107   011B9C  0009               	dw	9
   108   000000                     _TX4REG	set	3812
   109   000000                     _RC4STAbits	set	3815
   110   000000                     _SP4BRGH	set	3814
   111   000000                     _LATHbits	set	3968
   112   000000                     _LATGbits	set	3967
   113   000000                     _TRISAbits	set	3969
   114   000000                     _TRISFbits	set	3974
   115   000000                     _TRISDbits	set	3972
   116   000000                     _TRISGbits	set	3975
   117   000000                     _SSP2CON2bits	set	3802
   118   000000                     _RX4PPS	set	3605
   119   000000                     _SSP2CLKPPS	set	3612
   120   000000                     _SSP2DATPPS	set	3613
   121   000000                     _RC7PPS	set	3689
   122   000000                     _RE2PPS	set	3700
   123   000000                     _TRISCbits	set	3971
   124   000000                     _TRISEbits	set	3973
   125   000000                     _TRISHbits	set	3976
   126   000000                     _T2PR	set	4028
   127   000000                     _T2CONbits	set	4029
   128   000000                     _CCPR2H	set	4006
   129   000000                     _CCPR1H	set	4010
   130   000000                     _RE4PPS	set	3702
   131   000000                     _RG6PPS	set	3720
   132   000000                     _RD5PPS	set	3695
   133   000000                     _ANSELDbits	set	3751
   134   000000                     _SSP2ADD	set	3798
   135   000000                     _SSP2CON1bits	set	3801
   136   000000                     _CCPR4H	set	3873
   137   000000                     _CCPR3H	set	3877
   138   000000                     _T2CLKCONbits	set	4031
   139   000000                     _T2HLTbits	set	4030
   140   000000                     _CCP1CONbits	set	4011
   141   000000                     _CCPTMRS0bits	set	4013
   142   000000                     _CCP2CONbits	set	4007
   143   000000                     _LATAbits	set	3961
   144   000000                     _LATDbits	set	3964
   145   000000                     _LATFbits	set	3966
   146   000000                     _CCP3CONbits	set	3878
   147   000000                     _CCP4CONbits	set	3874
   148   000000                     _RC4REG	set	3811
   149   000000                     _SP4BRGL	set	3813
   150   000000                     _TX4STAbits	set	3816
   151   000000                     _BAUD4CONbits	set	3817
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _SSP2STAT	set	3800
   154   000000                     _SSP2BUF	set	3797
   155   000000                     _PIE4bits	set	3629
   156   000000                     _PIR4bits	set	3639
   157   000000                     _RC0PPS	set	3682
   158   000000                     _RD6PPS	set	3696
   159                           
   160                           	psect	mediumconst
   161   00FEE0                     __pmediumconst:
   162                           	callstack 0
   163   00FEE0  00                 	db	0
   164   00FEE1                     STR_4:
   165   00FEE1  47                 	db	71	;'G'
   166   00FEE2  52                 	db	82	;'R'
   167   00FEE3  45                 	db	69	;'E'
   168   00FEE4  45                 	db	69	;'E'
   169   00FEE5  4E                 	db	78	;'N'
   170   00FEE6  3A                 	db	58	;':'
   171   00FEE7  20                 	db	32
   172   00FEE8  52                 	db	82	;'R'
   173   00FEE9  65                 	db	101	;'e'
   174   00FEEA  61                 	db	97	;'a'
   175   00FEEB  64                 	db	100	;'d'
   176   00FEEC  20                 	db	32
   177   00FEED  25                 	db	37
   178   00FEEE  64                 	db	100	;'d'
   179   00FEEF  2C                 	db	44
   180   00FEF0  20                 	db	32
   181   00FEF1  65                 	db	101	;'e'
   182   00FEF2  78                 	db	120	;'x'
   183   00FEF3  70                 	db	112	;'p'
   184   00FEF4  65                 	db	101	;'e'
   185   00FEF5  63                 	db	99	;'c'
   186   00FEF6  74                 	db	116	;'t'
   187   00FEF7  65                 	db	101	;'e'
   188   00FEF8  64                 	db	100	;'d'
   189   00FEF9  20                 	db	32
   190   00FEFA  25                 	db	37
   191   00FEFB  64                 	db	100	;'d'
   192   00FEFC  2C                 	db	44
   193   00FEFD  20                 	db	32
   194   00FEFE  64                 	db	100	;'d'
   195   00FEFF  69                 	db	105	;'i'
   196   00FF00  66                 	db	102	;'f'
   197   00FF01  66                 	db	102	;'f'
   198   00FF02  65                 	db	101	;'e'
   199   00FF03  72                 	db	114	;'r'
   200   00FF04  65                 	db	101	;'e'
   201   00FF05  6E                 	db	110	;'n'
   202   00FF06  63                 	db	99	;'c'
   203   00FF07  65                 	db	101	;'e'
   204   00FF08  20                 	db	32
   205   00FF09  25                 	db	37
   206   00FF0A  64                 	db	100	;'d'
   207   00FF0B  2C                 	db	44
   208   00FF0C  20                 	db	32
   209   00FF0D  6E                 	db	110	;'n'
   210   00FF0E  6F                 	db	111	;'o'
   211   00FF0F  72                 	db	114	;'r'
   212   00FF10  6D                 	db	109	;'m'
   213   00FF11  61                 	db	97	;'a'
   214   00FF12  6C                 	db	108	;'l'
   215   00FF13  69                 	db	105	;'i'
   216   00FF14  73                 	db	115	;'s'
   217   00FF15  65                 	db	101	;'e'
   218   00FF16  64                 	db	100	;'d'
   219   00FF17  20                 	db	32
   220   00FF18  25                 	db	37
   221   00FF19  64                 	db	100	;'d'
   222   00FF1A  20                 	db	32
   223   00FF1B  0A                 	db	10
   224   00FF1C  00                 	db	0
   225   00FF1D                     STR_5:
   226   00FF1D  42                 	db	66	;'B'
   227   00FF1E  4C                 	db	76	;'L'
   228   00FF1F  55                 	db	85	;'U'
   229   00FF20  45                 	db	69	;'E'
   230   00FF21  3A                 	db	58	;':'
   231   00FF22  20                 	db	32
   232   00FF23  52                 	db	82	;'R'
   233   00FF24  65                 	db	101	;'e'
   234   00FF25  61                 	db	97	;'a'
   235   00FF26  64                 	db	100	;'d'
   236   00FF27  20                 	db	32
   237   00FF28  25                 	db	37
   238   00FF29  64                 	db	100	;'d'
   239   00FF2A  2C                 	db	44
   240   00FF2B  20                 	db	32
   241   00FF2C  65                 	db	101	;'e'
   242   00FF2D  78                 	db	120	;'x'
   243   00FF2E  70                 	db	112	;'p'
   244   00FF2F  65                 	db	101	;'e'
   245   00FF30  63                 	db	99	;'c'
   246   00FF31  74                 	db	116	;'t'
   247   00FF32  65                 	db	101	;'e'
   248   00FF33  64                 	db	100	;'d'
   249   00FF34  20                 	db	32
   250   00FF35  25                 	db	37
   251   00FF36  64                 	db	100	;'d'
   252   00FF37  2C                 	db	44
   253   00FF38  20                 	db	32
   254   00FF39  64                 	db	100	;'d'
   255   00FF3A  69                 	db	105	;'i'
   256   00FF3B  66                 	db	102	;'f'
   257   00FF3C  66                 	db	102	;'f'
   258   00FF3D  65                 	db	101	;'e'
   259   00FF3E  72                 	db	114	;'r'
   260   00FF3F  65                 	db	101	;'e'
   261   00FF40  6E                 	db	110	;'n'
   262   00FF41  63                 	db	99	;'c'
   263   00FF42  65                 	db	101	;'e'
   264   00FF43  20                 	db	32
   265   00FF44  25                 	db	37
   266   00FF45  64                 	db	100	;'d'
   267   00FF46  2C                 	db	44
   268   00FF47  20                 	db	32
   269   00FF48  6E                 	db	110	;'n'
   270   00FF49  6F                 	db	111	;'o'
   271   00FF4A  72                 	db	114	;'r'
   272   00FF4B  6D                 	db	109	;'m'
   273   00FF4C  61                 	db	97	;'a'
   274   00FF4D  6C                 	db	108	;'l'
   275   00FF4E  69                 	db	105	;'i'
   276   00FF4F  73                 	db	115	;'s'
   277   00FF50  65                 	db	101	;'e'
   278   00FF51  64                 	db	100	;'d'
   279   00FF52  20                 	db	32
   280   00FF53  25                 	db	37
   281   00FF54  64                 	db	100	;'d'
   282   00FF55  20                 	db	32
   283   00FF56  0A                 	db	10
   284   00FF57  00                 	db	0
   285   00FF58                     STR_6:
   286   00FF58  4D                 	db	77	;'M'
   287   00FF59  43                 	db	67	;'C'
   288   00FF5A  20                 	db	32
   289   00FF5B  41                 	db	65	;'A'
   290   00FF5C  76                 	db	118	;'v'
   291   00FF5D  67                 	db	103	;'g'
   292   00FF5E  3A                 	db	58	;':'
   293   00FF5F  20                 	db	32
   294   00FF60  6E                 	db	110	;'n'
   295   00FF61  6F                 	db	111	;'o'
   296   00FF62  72                 	db	114	;'r'
   297   00FF63  6D                 	db	109	;'m'
   298   00FF64  52                 	db	82	;'R'
   299   00FF65  45                 	db	69	;'E'
   300   00FF66  44                 	db	68	;'D'
   301   00FF67  20                 	db	32
   302   00FF68  25                 	db	37
   303   00FF69  64                 	db	100	;'d'
   304   00FF6A  2C                 	db	44
   305   00FF6B  20                 	db	32
   306   00FF6C  6E                 	db	110	;'n'
   307   00FF6D  6F                 	db	111	;'o'
   308   00FF6E  72                 	db	114	;'r'
   309   00FF6F  6D                 	db	109	;'m'
   310   00FF70  47                 	db	71	;'G'
   311   00FF71  52                 	db	82	;'R'
   312   00FF72  45                 	db	69	;'E'
   313   00FF73  45                 	db	69	;'E'
   314   00FF74  4E                 	db	78	;'N'
   315   00FF75  20                 	db	32
   316   00FF76  25                 	db	37
   317   00FF77  64                 	db	100	;'d'
   318   00FF78  2C                 	db	44
   319   00FF79  20                 	db	32
   320   00FF7A  6E                 	db	110	;'n'
   321   00FF7B  6F                 	db	111	;'o'
   322   00FF7C  72                 	db	114	;'r'
   323   00FF7D  6D                 	db	109	;'m'
   324   00FF7E  42                 	db	66	;'B'
   325   00FF7F  4C                 	db	76	;'L'
   326   00FF80  55                 	db	85	;'U'
   327   00FF81  45                 	db	69	;'E'
   328   00FF82  20                 	db	32
   329   00FF83  25                 	db	37
   330   00FF84  64                 	db	100	;'d'
   331   00FF85  2C                 	db	44
   332   00FF86  20                 	db	32
   333   00FF87  6D                 	db	109	;'m'
   334   00FF88  61                 	db	97	;'a'
   335   00FF89  73                 	db	115	;'s'
   336   00FF8A  74                 	db	116	;'t'
   337   00FF8B  65                 	db	101	;'e'
   338   00FF8C  72                 	db	114	;'r'
   339   00FF8D  20                 	db	32
   340   00FF8E  25                 	db	37
   341   00FF8F  64                 	db	100	;'d'
   342   00FF90  20                 	db	32
   343   00FF91  0A                 	db	10
   344   00FF92  00                 	db	0
   345   00FF93                     STR_3:
   346   00FF93  52                 	db	82	;'R'
   347   00FF94  45                 	db	69	;'E'
   348   00FF95  44                 	db	68	;'D'
   349   00FF96  3A                 	db	58	;':'
   350   00FF97  20                 	db	32
   351   00FF98  52                 	db	82	;'R'
   352   00FF99  65                 	db	101	;'e'
   353   00FF9A  61                 	db	97	;'a'
   354   00FF9B  64                 	db	100	;'d'
   355   00FF9C  20                 	db	32
   356   00FF9D  25                 	db	37
   357   00FF9E  64                 	db	100	;'d'
   358   00FF9F  2C                 	db	44
   359   00FFA0  20                 	db	32
   360   00FFA1  65                 	db	101	;'e'
   361   00FFA2  78                 	db	120	;'x'
   362   00FFA3  70                 	db	112	;'p'
   363   00FFA4  65                 	db	101	;'e'
   364   00FFA5  63                 	db	99	;'c'
   365   00FFA6  74                 	db	116	;'t'
   366   00FFA7  65                 	db	101	;'e'
   367   00FFA8  64                 	db	100	;'d'
   368   00FFA9  20                 	db	32
   369   00FFAA  25                 	db	37
   370   00FFAB  64                 	db	100	;'d'
   371   00FFAC  2C                 	db	44
   372   00FFAD  20                 	db	32
   373   00FFAE  64                 	db	100	;'d'
   374   00FFAF  69                 	db	105	;'i'
   375   00FFB0  66                 	db	102	;'f'
   376   00FFB1  66                 	db	102	;'f'
   377   00FFB2  65                 	db	101	;'e'
   378   00FFB3  72                 	db	114	;'r'
   379   00FFB4  65                 	db	101	;'e'
   380   00FFB5  6E                 	db	110	;'n'
   381   00FFB6  63                 	db	99	;'c'
   382   00FFB7  65                 	db	101	;'e'
   383   00FFB8  20                 	db	32
   384   00FFB9  25                 	db	37
   385   00FFBA  64                 	db	100	;'d'
   386   00FFBB  2C                 	db	44
   387   00FFBC  20                 	db	32
   388   00FFBD  6E                 	db	110	;'n'
   389   00FFBE  6F                 	db	111	;'o'
   390   00FFBF  72                 	db	114	;'r'
   391   00FFC0  6D                 	db	109	;'m'
   392   00FFC1  61                 	db	97	;'a'
   393   00FFC2  6C                 	db	108	;'l'
   394   00FFC3  69                 	db	105	;'i'
   395   00FFC4  73                 	db	115	;'s'
   396   00FFC5  65                 	db	101	;'e'
   397   00FFC6  64                 	db	100	;'d'
   398   00FFC7  20                 	db	32
   399   00FFC8  25                 	db	37
   400   00FFC9  64                 	db	100	;'d'
   401   00FFCA  20                 	db	32
   402   00FFCB  0A                 	db	10
   403   00FFCC  00                 	db	0
   404   00FFCD                     STR_1:
   405   00FFCD  0A                 	db	10
   406   00FFCE  20                 	db	32
   407   00FFCF  41                 	db	65	;'A'
   408   00FFD0  56                 	db	86	;'V'
   409   00FFD1  47                 	db	71	;'G'
   410   00FFD2  3A                 	db	58	;':'
   411   00FFD3  20                 	db	32
   412   00FFD4  52                 	db	82	;'R'
   413   00FFD5  20                 	db	32
   414   00FFD6  25                 	db	37
   415   00FFD7  64                 	db	100	;'d'
   416   00FFD8  2C                 	db	44
   417   00FFD9  20                 	db	32
   418   00FFDA  47                 	db	71	;'G'
   419   00FFDB  20                 	db	32
   420   00FFDC  25                 	db	37
   421   00FFDD  64                 	db	100	;'d'
   422   00FFDE  2C                 	db	44
   423   00FFDF  20                 	db	32
   424   00FFE0  42                 	db	66	;'B'
   425   00FFE1  20                 	db	32
   426   00FFE2  25                 	db	37
   427   00FFE3  64                 	db	100	;'d'
   428   00FFE4  20                 	db	32
   429   00FFE5  0A                 	db	10
   430   00FFE6  00                 	db	0
   431   00FFE7                     STR_2:
   432   00FFE7  0A                 	db	10
   433   00FFE8  20                 	db	32
   434   00FFE9  45                 	db	69	;'E'
   435   00FFEA  78                 	db	120	;'x'
   436   00FFEB  70                 	db	112	;'p'
   437   00FFEC  65                 	db	101	;'e'
   438   00FFED  63                 	db	99	;'c'
   439   00FFEE  74                 	db	116	;'t'
   440   00FFEF  65                 	db	101	;'e'
   441   00FFF0  64                 	db	100	;'d'
   442   00FFF1  20                 	db	32
   443   00FFF2  76                 	db	118	;'v'
   444   00FFF3  61                 	db	97	;'a'
   445   00FFF4  6C                 	db	108	;'l'
   446   00FFF5  75                 	db	117	;'u'
   447   00FFF6  65                 	db	101	;'e'
   448   00FFF7  73                 	db	115	;'s'
   449   00FFF8  3A                 	db	58	;':'
   450   00FFF9  20                 	db	32
   451   00FFFA  25                 	db	37
   452   00FFFB  75                 	db	117	;'u'
   453   00FFFC  20                 	db	32
   454   00FFFD  0A                 	db	10
   455   00FFFE  00                 	db	0
   456   00FFFF  00                 	db	0	; dummy byte at the end
   457   000000                     
   458                           ; #config settings
   459                           
   460                           	psect	cinit
   461   011972                     __pcinit:
   462                           	callstack 0
   463   011972                     start_initialization:
   464                           	callstack 0
   465   011972                     __initialization:
   466                           	callstack 0
   467                           
   468                           ; Initialize objects allocated to BANK1 (18 bytes)
   469                           ; load TBLPTR registers with __pidataBANK1
   470   011972  0E8C               	movlw	low __pidataBANK1
   471   011974  6EF6               	movwf	tblptrl,c
   472   011976  0E1B               	movlw	high __pidataBANK1
   473   011978  6EF7               	movwf	tblptrh,c
   474   01197A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   475   01197C  6EF8               	movwf	tblptru,c
   476   01197E  EE01  F070         	lfsr	0,__pdataBANK1
   477   011982  EE10 F012          	lfsr	1,18
   478   011986                     copy_data0:
   479   011986  0009               	tblrd		*+
   480   011988  CFF5 FFEE          	movff	tablat,postinc0
   481   01198C  50E5               	movf	postdec1,w,c
   482   01198E  50E1               	movf	fsr1l,w,c
   483   011990  E1FA               	bnz	copy_data0
   484                           
   485                           ; Clear objects allocated to BANK1 (112 bytes)
   486   011992  EE01  F000         	lfsr	0,__pbssBANK1
   487   011996  0E70               	movlw	112
   488   011998                     clear_0:
   489   011998  6AEE               	clrf	postinc0,c
   490   01199A  06E8               	decf	wreg,f,c
   491   01199C  E1FD               	bnz	clear_0
   492                           
   493                           ; Clear objects allocated to BANK0 (7 bytes)
   494   01199E  EE00  F0EF         	lfsr	0,__pbssBANK0
   495   0119A2  0E07               	movlw	7
   496   0119A4                     clear_1:
   497   0119A4  6AEE               	clrf	postinc0,c
   498   0119A6  06E8               	decf	wreg,f,c
   499   0119A8  E1FD               	bnz	clear_1
   500                           
   501                           ; Clear objects allocated to COMRAM (2 bytes)
   502   0119AA  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   503   0119AC  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   504   0119AE                     end_of_initialization:
   505                           	callstack 0
   506   0119AE                     __end_of__initialization:
   507                           	callstack 0
   508   0119AE  0100               	movlb	0
   509   0119B0  EF01  F084         	goto	_main	;jump to C main() function
   510                           
   511                           	psect	bssCOMRAM
   512   00005E                     __pbssCOMRAM:
   513                           	callstack 0
   514   00005E                     _TxBufReadCnt:
   515                           	callstack 0
   516   00005E                     	ds	1
   517   00005F                     _TxBufWriteCnt:
   518                           	callstack 0
   519   00005F                     	ds	1
   520                           
   521                           	psect	bssBANK0
   522   0000EF                     __pbssBANK0:
   523                           	callstack 0
   524   0000EF                     _width:
   525                           	callstack 0
   526   0000EF                     	ds	2
   527   0000F1                     _prec:
   528                           	callstack 0
   529   0000F1                     	ds	2
   530   0000F3                     _flags:
   531                           	callstack 0
   532   0000F3                     	ds	1
   533   0000F4                     _RxBufReadCnt:
   534                           	callstack 0
   535   0000F4                     	ds	1
   536   0000F5                     _RxBufWriteCnt:
   537                           	callstack 0
   538   0000F5                     	ds	1
   539                           
   540                           	psect	bssBANK1
   541   000100                     __pbssBANK1:
   542                           	callstack 0
   543   000100                     _EUSART4TXbuf:
   544                           	callstack 0
   545   000100                     	ds	60
   546   00013C                     _EUSART4RXbuf:
   547                           	callstack 0
   548   00013C                     	ds	20
   549   000150                     _dbuf:
   550                           	callstack 0
   551   000150                     	ds	32
   552                           
   553                           	psect	dataBANK1
   554   000170                     __pdataBANK1:
   555                           	callstack 0
   556   000170                     main@F14643:
   557                           	callstack 0
   558   000170                     	ds	18
   559                           
   560                           	psect	cstackBANK0
   561   000060                     __pcstackBANK0:
   562                           	callstack 0
   563   000060                     ?_sprintf:
   564                           	callstack 0
   565   000060                     sprintf@s:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x0
   569   000060                     	ds	2
   570   000062                     sprintf@fmt:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x2
   574   000062                     	ds	10
   575   00006C                     sprintf@ap:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0xC
   579   00006C                     	ds	2
   580   00006E                     sprintf@f:
   581                           	callstack 0
   582                           
   583                           ; 11 bytes @ 0xE
   584   00006E                     	ds	11
   585   000079                     normalise_readings@buf:
   586                           	callstack 0
   587   000079                     make_master_closeness@buf:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x19
   591   000079                     	ds	2
   592   00007B                     normalise_readings@red_read:
   593                           	callstack 0
   594   00007B                     make_master_closeness@normalised_values:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x1B
   598   00007B                     	ds	2
   599   00007D                     normalise_readings@green_read:
   600                           	callstack 0
   601   00007D                     make_master_closeness@master_closeness:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x1D
   605   00007D                     	ds	2
   606   00007F                     ??_make_master_closeness:
   607   00007F                     normalise_readings@blue_read:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x1F
   611   00007F                     	ds	2
   612   000081                     normalise_readings@expected_values:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x21
   616   000081                     	ds	2
   617   000083                     normalise_readings@normalised_values:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x23
   621   000083                     	ds	2
   622   000085                     ??_normalise_readings:
   623                           
   624                           ; 1 bytes @ 0x25
   625   000085                     	ds	6
   626   00008B                     normalise_readings@normalR:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x2B
   630   00008B                     	ds	2
   631   00008D                     normalise_readings@normalG:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x2D
   635   00008D                     	ds	2
   636   00008F                     normalise_readings@normalB:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x2F
   640   00008F                     	ds	2
   641   000091                     normalise_readings@differenceR:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x31
   645   000091                     	ds	2
   646   000093                     normalise_readings@differenceG:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x33
   650   000093                     	ds	2
   651   000095                     normalise_readings@differenceB:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x35
   655   000095                     	ds	2
   656   000097                     normalise_readings@i:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x37
   660   000097                     	ds	1
   661   000098                     main@buf:
   662                           	callstack 0
   663                           
   664                           ; 20 bytes @ 0x38
   665   000098                     	ds	20
   666   0000AC                     main@normalised_values:
   667                           	callstack 0
   668                           
   669                           ; 18 bytes @ 0x4C
   670   0000AC                     	ds	18
   671   0000BE                     main@expected_values:
   672                           	callstack 0
   673                           
   674                           ; 18 bytes @ 0x5E
   675   0000BE                     	ds	18
   676   0000D0                     main@master_closeness:
   677                           	callstack 0
   678                           
   679                           ; 6 bytes @ 0x70
   680   0000D0                     	ds	6
   681   0000D6                     main@PWMcycle:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x76
   685   0000D6                     	ds	1
   686   0000D7                     main@red_read:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x77
   690   0000D7                     	ds	2
   691   0000D9                     main@green_read:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x79
   695   0000D9                     	ds	2
   696   0000DB                     main@blue_read:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x7B
   700   0000DB                     	ds	2
   701   0000DD                     main@motorL:
   702                           	callstack 0
   703                           
   704                           ; 9 bytes @ 0x7D
   705   0000DD                     	ds	9
   706   0000E6                     main@motorR:
   707                           	callstack 0
   708                           
   709                           ; 9 bytes @ 0x86
   710   0000E6                     	ds	9
   711                           
   712                           	psect	cstackCOMRAM
   713   000001                     __pcstackCOMRAM:
   714                           	callstack 0
   715   000001                     ??_I2C_2_Master_Idle:
   716   000001                     ?___wmul:
   717                           	callstack 0
   718   000001                     ?___aodiv:
   719                           	callstack 0
   720   000001                     ?___aomod:
   721                           	callstack 0
   722   000001                     ?___lodiv:
   723                           	callstack 0
   724   000001                     ?___lomod:
   725                           	callstack 0
   726   000001                     sendCharSerial4@charToSend:
   727                           	callstack 0
   728   000001                     determine_card@master_closeness:
   729                           	callstack 0
   730   000001                     ___wmul@multiplier:
   731                           	callstack 0
   732   000001                     fputc@c:
   733                           	callstack 0
   734   000001                     ___aodiv@dividend:
   735                           	callstack 0
   736   000001                     ___aomod@dividend:
   737                           	callstack 0
   738   000001                     ___lodiv@dividend:
   739                           	callstack 0
   740   000001                     ___lomod@dividend:
   741                           	callstack 0
   742                           
   743                           ; 8 bytes @ 0x0
   744   000001                     	ds	1
   745   000002                     ??_I2C_2_Master_Read:
   746   000002                     I2C_2_Master_Write@data_byte:
   747                           	callstack 0
   748   000002                     sendStringSerial4@string:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x1
   752   000002                     	ds	1
   753   000003                     ??_determine_card:
   754   000003                     color_writetoaddr@value:
   755                           	callstack 0
   756   000003                     I2C_2_Master_Read@ack:
   757                           	callstack 0
   758   000003                     ___wmul@multiplicand:
   759                           	callstack 0
   760   000003                     fputc@fp:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x2
   764   000003                     	ds	1
   765   000004                     color_writetoaddr@address:
   766                           	callstack 0
   767   000004                     I2C_2_Master_Read@tmp:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x3
   771   000004                     	ds	1
   772   000005                     ??_fputc:
   773   000005                     ??_color_click_init:
   774   000005                     ?_color_read_Red:
   775                           	callstack 0
   776   000005                     ?_color_read_Green:
   777                           	callstack 0
   778   000005                     ?_color_read_Blue:
   779                           	callstack 0
   780   000005                     ___wmul@product:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x4
   784   000005                     	ds	2
   785   000007                     ??_color_read_Red:
   786   000007                     ??_color_read_Green:
   787   000007                     ??_color_read_Blue:
   788   000007                     ?___lwdiv:
   789                           	callstack 0
   790   000007                     determine_card@current_smallest:
   791                           	callstack 0
   792   000007                     ___lwdiv@dividend:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x6
   796   000007                     	ds	2
   797   000009                     determine_card@predicted_colour:
   798                           	callstack 0
   799   000009                     ___lwdiv@divisor:
   800                           	callstack 0
   801   000009                     ___aodiv@divisor:
   802                           	callstack 0
   803   000009                     ___aomod@divisor:
   804                           	callstack 0
   805   000009                     ___lodiv@divisor:
   806                           	callstack 0
   807   000009                     ___lomod@divisor:
   808                           	callstack 0
   809                           
   810                           ; 8 bytes @ 0x8
   811   000009                     	ds	1
   812   00000A                     determine_card@i:
   813                           	callstack 0
   814   00000A                     color_read_Red@tmp:
   815                           	callstack 0
   816   00000A                     color_read_Green@tmp:
   817                           	callstack 0
   818   00000A                     color_read_Blue@tmp:
   819                           	callstack 0
   820   00000A                     fputs@s:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x9
   824   00000A                     	ds	1
   825   00000B                     ___lwdiv@quotient:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0xA
   829   00000B                     	ds	1
   830   00000C                     fputs@fp:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0xB
   834   00000C                     	ds	1
   835   00000D                     ___lwdiv@counter:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0xC
   839   00000D                     	ds	1
   840   00000E                     fputs@c:
   841                           	callstack 0
   842   00000E                     setMotorPWM@m:
   843                           	callstack 0
   844   00000E                     collect_avg_readings@red_read:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0xD
   848   00000E                     	ds	1
   849   00000F                     fputs@i:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0xE
   853   00000F                     	ds	1
   854   000010                     ??_setMotorPWM:
   855   000010                     collect_avg_readings@green_read:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0xF
   859   000010                     	ds	1
   860   000011                     ___aodiv@counter:
   861                           	callstack 0
   862   000011                     ___aomod@counter:
   863                           	callstack 0
   864   000011                     ___lomod@counter:
   865                           	callstack 0
   866   000011                     pad@fp:
   867                           	callstack 0
   868   000011                     ___lodiv@quotient:
   869                           	callstack 0
   870                           
   871                           ; 8 bytes @ 0x10
   872   000011                     	ds	1
   873   000012                     setMotorPWM@posDuty:
   874                           	callstack 0
   875   000012                     ___aodiv@sign:
   876                           	callstack 0
   877   000012                     ___aomod@sign:
   878                           	callstack 0
   879   000012                     collect_avg_readings@blue_read:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x11
   883   000012                     	ds	1
   884   000013                     ?_abs:
   885                           	callstack 0
   886   000013                     setMotorPWM@negDuty:
   887                           	callstack 0
   888   000013                     abs@a:
   889                           	callstack 0
   890   000013                     pad@buf:
   891                           	callstack 0
   892   000013                     ___aodiv@quotient:
   893                           	callstack 0
   894                           
   895                           ; 8 bytes @ 0x12
   896   000013                     	ds	1
   897   000014                     ??_collect_avg_readings:
   898                           
   899                           ; 1 bytes @ 0x13
   900   000014                     	ds	1
   901   000015                     ??_abs:
   902   000015                     pad@p:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x14
   906   000015                     	ds	1
   907   000016                     collect_avg_readings@i:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x15
   911   000016                     	ds	1
   912   000017                     ??_pad:
   913   000017                     collect_avg_readings@i_1475:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x16
   917   000017                     	ds	1
   918   000018                     collect_avg_readings@i_1477:
   919                           	callstack 0
   920   000018                     pad@i:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x17
   924   000018                     	ds	1
   925   000019                     ___lodiv@counter:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x18
   929   000019                     	ds	1
   930   00001A                     pad@w:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x19
   934   00001A                     	ds	2
   935   00001C                     dtoa@fp:
   936                           	callstack 0
   937   00001C                     utoa@fp:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x1B
   941   00001C                     	ds	2
   942   00001E                     dtoa@d:
   943                           	callstack 0
   944   00001E                     utoa@d:
   945                           	callstack 0
   946                           
   947                           ; 8 bytes @ 0x1D
   948   00001E                     	ds	8
   949   000026                     ??_dtoa:
   950   000026                     ??_utoa:
   951                           
   952                           ; 1 bytes @ 0x25
   953   000026                     	ds	8
   954   00002E                     _dtoa$2211:
   955                           	callstack 0
   956   00002E                     utoa@w:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x2D
   960   00002E                     	ds	2
   961   000030                     dtoa@p:
   962                           	callstack 0
   963   000030                     utoa@p:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x2F
   967   000030                     	ds	2
   968   000032                     dtoa@w:
   969                           	callstack 0
   970   000032                     utoa@n:
   971                           	callstack 0
   972                           
   973                           ; 8 bytes @ 0x31
   974   000032                     	ds	2
   975   000034                     dtoa@n:
   976                           	callstack 0
   977                           
   978                           ; 8 bytes @ 0x33
   979   000034                     	ds	6
   980   00003A                     utoa@i:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x39
   984   00003A                     	ds	2
   985   00003C                     dtoa@i:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x3B
   989   00003C                     	ds	2
   990   00003E                     dtoa@s:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x3D
   994   00003E                     	ds	1
   995   00003F                     vfpfcnvrt@fp:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x3E
   999   00003F                     	ds	2
  1000   000041                     vfpfcnvrt@fmt:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x40
  1004   000041                     	ds	2
  1005   000043                     vfpfcnvrt@ap:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x42
  1009   000043                     	ds	2
  1010   000045                     ??_vfpfcnvrt:
  1011                           
  1012                           ; 1 bytes @ 0x44
  1013   000045                     	ds	4
  1014   000049                     vfpfcnvrt@convarg:
  1015                           	callstack 0
  1016                           
  1017                           ; 8 bytes @ 0x48
  1018   000049                     	ds	8
  1019   000051                     vfpfcnvrt@cp:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x50
  1023   000051                     	ds	2
  1024   000053                     ?_vfprintf:
  1025                           	callstack 0
  1026   000053                     vfprintf@fp:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x52
  1030   000053                     	ds	2
  1031   000055                     vfprintf@fmt:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x54
  1035   000055                     	ds	2
  1036   000057                     vfprintf@ap:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x56
  1040   000057                     	ds	2
  1041   000059                     vfprintf@cfmt:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x58
  1045   000059                     	ds	2
  1046   00005B                     make_master_closeness@i:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x5A
  1050   00005B                     	ds	1
  1051   00005C                     ??_main:
  1052                           
  1053                           ; 1 bytes @ 0x5B
  1054   00005C                     	ds	2
  1055                           
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 20 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  buf            20   56[BANK0 ] unsigned char [20]
  1066 ;;  expected_val   18   94[BANK0 ] unsigned int [3][3]
  1067 ;;  normalised_v   18   76[BANK0 ] unsigned int [3][3]
  1068 ;;  motorR          9  134[BANK0 ] struct DC_motor
  1069 ;;  motorL          9  125[BANK0 ] struct DC_motor
  1070 ;;  master_close    6  112[BANK0 ] unsigned int [3]
  1071 ;;  blue_read       2  123[BANK0 ] unsigned int 
  1072 ;;  green_read      2  121[BANK0 ] unsigned int 
  1073 ;;  red_read        2  119[BANK0 ] unsigned int 
  1074 ;;  PWMcycle        1  118[BANK0 ] unsigned char 
  1075 ;;  card            1    0        enum E14575
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1086 ;;      Locals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Totals:         2      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;Total ram usage:       89 bytes
  1090 ;; Hardware stack levels required when called: 9
  1091 ;; This function calls:
  1092 ;;		_I2C_2_Master_Init
  1093 ;;		_LEDSon_init
  1094 ;;		_collect_avg_readings
  1095 ;;		_color_click_init
  1096 ;;		_determine_card
  1097 ;;		_initDCmotorsPWM
  1098 ;;		_initUSART4
  1099 ;;		_make_master_closeness
  1100 ;;		_normalise_readings
  1101 ;;		_sendStringSerial4
  1102 ;;		_setMotorPWM
  1103 ;;		_sprintf
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text0
  1110   010802                     __ptext0:
  1111                           	callstack 0
  1112   010802                     _main:
  1113                           	callstack 22
  1114   010802                     
  1115                           ;main.c: 25:     LEDSon_init();
  1116   010802  EC89  F08D         	call	_LEDSon_init	;wreg free
  1117   010806                     
  1118                           ;main.c: 26:     I2C_2_Master_Init();
  1119   010806  EC4D  F08D         	call	_I2C_2_Master_Init	;wreg free
  1120   01080A                     
  1121                           ;main.c: 27:     color_click_init();
  1122   01080A  EC1B  F08D         	call	_color_click_init	;wreg free
  1123   01080E                     
  1124                           ;main.c: 28:     initDCmotorsPWM();
  1125   01080E  ECD2  F08A         	call	_initDCmotorsPWM	;wreg free
  1126   010812                     
  1127                           ;main.c: 29:     initUSART4();
  1128   010812  EC9A  F08D         	call	_initUSART4	;wreg free
  1129   010816                     
  1130                           ;main.c: 37:     unsigned char PWMcycle = T2PR;
  1131   010816  CFBC F0D6          	movff	4028,main@PWMcycle	;volatile
  1132   01081A                     
  1133                           ;main.c: 39:     struct DC_motor motorL, motorR;;main.c: 41:     motorL.power=0;
  1134   01081A  0E00               	movlw	0
  1135   01081C  0100               	movlb	0	; () banked
  1136   01081E  6FDD               	movwf	main@motorL& (0+255),b
  1137   010820                     
  1138                           ; BSR set to: 0
  1139                           ;main.c: 42:     motorL.direction=1;
  1140   010820  0E01               	movlw	1
  1141   010822  6FDE               	movwf	(main@motorL+1)& (0+255),b
  1142   010824                     
  1143                           ; BSR set to: 0
  1144                           ;main.c: 43:     motorL.brakemode=1;
  1145   010824  0E01               	movlw	1
  1146   010826  6FDF               	movwf	(main@motorL+2)& (0+255),b
  1147   010828                     
  1148                           ; BSR set to: 0
  1149                           ;main.c: 44:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1150   010828  0EAA               	movlw	170
  1151   01082A  6FE2               	movwf	(main@motorL+5)& (0+255),b
  1152   01082C  0E0F               	movlw	15
  1153   01082E  6FE3               	movwf	(main@motorL+6)& (0+255),b
  1154   010830                     
  1155                           ; BSR set to: 0
  1156                           ;main.c: 45:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1157   010830  0EA6               	movlw	166
  1158   010832  6FE4               	movwf	(main@motorL+7)& (0+255),b
  1159   010834  0E0F               	movlw	15
  1160   010836  6FE5               	movwf	(main@motorL+8)& (0+255),b
  1161   010838                     
  1162                           ; BSR set to: 0
  1163                           ;main.c: 46:     motorL.PWMperiod=PWMcycle;
  1164   010838  C0D6  F0E0         	movff	main@PWMcycle,main@motorL+3
  1165   01083C  6BE1               	clrf	(main@motorL+4)& (0+255),b
  1166   01083E                     
  1167                           ; BSR set to: 0
  1168                           ;main.c: 48:     motorR.power=0;
  1169   01083E  0E00               	movlw	0
  1170   010840  6FE6               	movwf	main@motorR& (0+255),b
  1171   010842                     
  1172                           ; BSR set to: 0
  1173                           ;main.c: 49:     motorR.direction=1;
  1174   010842  0E01               	movlw	1
  1175   010844  6FE7               	movwf	(main@motorR+1)& (0+255),b
  1176   010846                     
  1177                           ; BSR set to: 0
  1178                           ;main.c: 50:     motorR.brakemode=1;
  1179   010846  0E01               	movlw	1
  1180   010848  6FE8               	movwf	(main@motorR+2)& (0+255),b
  1181   01084A                     
  1182                           ; BSR set to: 0
  1183                           ;main.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1184   01084A  0E25               	movlw	37
  1185   01084C  6FEB               	movwf	(main@motorR+5)& (0+255),b
  1186   01084E  0E0F               	movlw	15
  1187   010850  6FEC               	movwf	(main@motorR+6)& (0+255),b
  1188   010852                     
  1189                           ; BSR set to: 0
  1190                           ;main.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1191   010852  0E21               	movlw	33
  1192   010854  6FED               	movwf	(main@motorR+7)& (0+255),b
  1193   010856  0E0F               	movlw	15
  1194   010858  6FEE               	movwf	(main@motorR+8)& (0+255),b
  1195   01085A                     
  1196                           ; BSR set to: 0
  1197                           ;main.c: 53:     motorR.PWMperiod=PWMcycle;
  1198   01085A  C0D6  F0E9         	movff	main@PWMcycle,main@motorR+3
  1199   01085E  6BEA               	clrf	(main@motorR+4)& (0+255),b
  1200   010860                     
  1201                           ; BSR set to: 0
  1202                           ;main.c: 55:     setMotorPWM(&motorL);
  1203   010860  0EDD               	movlw	low main@motorL
  1204   010862  6E0E               	movwf	setMotorPWM@m^0,c
  1205   010864  0E00               	movlw	high main@motorL
  1206   010866  6E0F               	movwf	(setMotorPWM@m+1)^0,c
  1207   010868  EC7F  F087         	call	_setMotorPWM	;wreg free
  1208   01086C                     
  1209                           ;main.c: 56:     setMotorPWM(&motorR);
  1210   01086C  0EE6               	movlw	low main@motorR
  1211   01086E  6E0E               	movwf	setMotorPWM@m^0,c
  1212   010870  0E00               	movlw	high main@motorR
  1213   010872  6E0F               	movwf	(setMotorPWM@m+1)^0,c
  1214   010874  EC7F  F087         	call	_setMotorPWM	;wreg free
  1215   010878                     
  1216                           ;main.c: 62:     unsigned int expected_values[3][3] = {
  1217   010878  EE21  F070         	lfsr	2,main@F14643
  1218   01087C  EE10  F0BE         	lfsr	1,main@expected_values
  1219   010880  0E11               	movlw	17
  1220   010882                     u1541:
  1221   010882  CFDB FFE3          	movff	plusw2,plusw1
  1222   010886  06E8               	decf	wreg,f,c
  1223   010888  E2FC               	bc	u1541
  1224   01088A                     
  1225                           ;main.c: 67:     unsigned int normalised_values[3][3];;main.c: 68:     unsigned int mast
      +                          er_closeness[3];;main.c: 69:     unsigned int red_read = 0;
  1226   01088A  0E00               	movlw	0
  1227   01088C  0100               	movlb	0	; () banked
  1228   01088E  6FD8               	movwf	(main@red_read+1)& (0+255),b
  1229   010890  0E00               	movlw	0
  1230   010892  6FD7               	movwf	main@red_read& (0+255),b
  1231   010894                     
  1232                           ; BSR set to: 0
  1233                           ;main.c: 70:     unsigned int green_read = 0;
  1234   010894  0E00               	movlw	0
  1235   010896  6FDA               	movwf	(main@green_read+1)& (0+255),b
  1236   010898  0E00               	movlw	0
  1237   01089A  6FD9               	movwf	main@green_read& (0+255),b
  1238   01089C                     
  1239                           ; BSR set to: 0
  1240                           ;main.c: 71:     unsigned int blue_read = 0;
  1241   01089C  0E00               	movlw	0
  1242   01089E  6FDC               	movwf	(main@blue_read+1)& (0+255),b
  1243   0108A0  0E00               	movlw	0
  1244   0108A2  6FDB               	movwf	main@blue_read& (0+255),b
  1245   0108A4                     l2857:
  1246                           
  1247                           ;main.c: 123:         collect_avg_readings(&red_read, &green_read, &blue_read);
  1248   0108A4  0ED7               	movlw	low main@red_read
  1249   0108A6  6E0E               	movwf	collect_avg_readings@red_read^0,c
  1250   0108A8  0E00               	movlw	high main@red_read
  1251   0108AA  6E0F               	movwf	(collect_avg_readings@red_read+1)^0,c
  1252   0108AC  0ED9               	movlw	low main@green_read
  1253   0108AE  6E10               	movwf	collect_avg_readings@green_read^0,c
  1254   0108B0  0E00               	movlw	high main@green_read
  1255   0108B2  6E11               	movwf	(collect_avg_readings@green_read+1)^0,c
  1256   0108B4  0EDB               	movlw	low main@blue_read
  1257   0108B6  6E12               	movwf	collect_avg_readings@blue_read^0,c
  1258   0108B8  0E00               	movlw	high main@blue_read
  1259   0108BA  6E13               	movwf	(collect_avg_readings@blue_read+1)^0,c
  1260   0108BC  ECE7  F088         	call	_collect_avg_readings	;wreg free
  1261   0108C0                     
  1262                           ;main.c: 125:         sprintf(buf, "\n AVG: R %d, G %d, B %d \n", red_read, green_read, 
      +                          blue_read);
  1263   0108C0  0E98               	movlw	low main@buf
  1264   0108C2  0100               	movlb	0	; () banked
  1265   0108C4  6F60               	movwf	sprintf@s& (0+255),b
  1266   0108C6  0E00               	movlw	high main@buf
  1267   0108C8  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1268   0108CA  0ECD               	movlw	low STR_1
  1269   0108CC  6F62               	movwf	sprintf@fmt& (0+255),b
  1270   0108CE  0EFF               	movlw	high STR_1
  1271   0108D0  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1272   0108D2  C0D7  F064         	movff	main@red_read,?_sprintf+4
  1273   0108D6  C0D8  F065         	movff	main@red_read+1,?_sprintf+5
  1274   0108DA  C0D9  F066         	movff	main@green_read,?_sprintf+6
  1275   0108DE  C0DA  F067         	movff	main@green_read+1,?_sprintf+7
  1276   0108E2  C0DB  F068         	movff	main@blue_read,?_sprintf+8
  1277   0108E6  C0DC  F069         	movff	main@blue_read+1,?_sprintf+9
  1278   0108EA  ECCD  F08B         	call	_sprintf	;wreg free
  1279   0108EE                     
  1280                           ;main.c: 126:         sendStringSerial4(buf);
  1281   0108EE  0E98               	movlw	low main@buf
  1282   0108F0  6E02               	movwf	sendStringSerial4@string^0,c
  1283   0108F2  0E00               	movlw	high main@buf
  1284   0108F4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1285   0108F6  EC35  F08D         	call	_sendStringSerial4	;wreg free
  1286   0108FA                     
  1287                           ;main.c: 127:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1288   0108FA  0E52               	movlw	82
  1289   0108FC  6E5D               	movwf	(??_main+1)^0,c
  1290   0108FE  0E2B               	movlw	43
  1291   010900  6E5C               	movwf	??_main^0,c
  1292   010902  0E00               	movlw	0
  1293   010904                     u1597:
  1294   010904  2EE8               	decfsz	wreg,f,c
  1295   010906  D7FE               	bra	u1597
  1296   010908  2E5C               	decfsz	??_main^0,f,c
  1297   01090A  D7FC               	bra	u1597
  1298   01090C  2E5D               	decfsz	(??_main+1)^0,f,c
  1299   01090E  D7FA               	bra	u1597
  1300   010910  D000               	nop2	
  1301   010912                     
  1302                           ;main.c: 128:         sprintf(buf, "\n Expected values: %u \n", expected_values[1][1]);
  1303   010912  0E98               	movlw	low main@buf
  1304   010914  0100               	movlb	0	; () banked
  1305   010916  6F60               	movwf	sprintf@s& (0+255),b
  1306   010918  0E00               	movlw	high main@buf
  1307   01091A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1308   01091C  0EE7               	movlw	low STR_2
  1309   01091E  6F62               	movwf	sprintf@fmt& (0+255),b
  1310   010920  0EFF               	movlw	high STR_2
  1311   010922  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1312   010924  C0C6  F064         	movff	main@expected_values+8,?_sprintf+4
  1313   010928  C0C7  F065         	movff	main@expected_values+9,?_sprintf+5
  1314   01092C  ECCD  F08B         	call	_sprintf	;wreg free
  1315   010930                     
  1316                           ;main.c: 129:         sendStringSerial4(buf);
  1317   010930  0E98               	movlw	low main@buf
  1318   010932  6E02               	movwf	sendStringSerial4@string^0,c
  1319   010934  0E00               	movlw	high main@buf
  1320   010936  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1321   010938  EC35  F08D         	call	_sendStringSerial4	;wreg free
  1322   01093C                     
  1323                           ;main.c: 130:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1324   01093C  0E52               	movlw	82
  1325   01093E  6E5D               	movwf	(??_main+1)^0,c
  1326   010940  0E2B               	movlw	43
  1327   010942  6E5C               	movwf	??_main^0,c
  1328   010944  0E00               	movlw	0
  1329   010946                     u1607:
  1330   010946  2EE8               	decfsz	wreg,f,c
  1331   010948  D7FE               	bra	u1607
  1332   01094A  2E5C               	decfsz	??_main^0,f,c
  1333   01094C  D7FC               	bra	u1607
  1334   01094E  2E5D               	decfsz	(??_main+1)^0,f,c
  1335   010950  D7FA               	bra	u1607
  1336   010952  D000               	nop2	
  1337   010954                     
  1338                           ;main.c: 131:         LATFbits.LATF0 = 0;
  1339   010954  907E               	bcf	126,0,c	;volatile
  1340   010956                     
  1341                           ;main.c: 134:         normalise_readings(buf, red_read, green_read, blue_read, expected_
      +                          values, normalised_values);
  1342   010956  0E98               	movlw	low main@buf
  1343   010958  0100               	movlb	0	; () banked
  1344   01095A  6F79               	movwf	normalise_readings@buf& (0+255),b
  1345   01095C  0E00               	movlw	high main@buf
  1346   01095E  6F7A               	movwf	(normalise_readings@buf+1)& (0+255),b
  1347   010960  C0D7  F07B         	movff	main@red_read,normalise_readings@red_read
  1348   010964  C0D8  F07C         	movff	main@red_read+1,normalise_readings@red_read+1
  1349   010968  C0D9  F07D         	movff	main@green_read,normalise_readings@green_read
  1350   01096C  C0DA  F07E         	movff	main@green_read+1,normalise_readings@green_read+1
  1351   010970  C0DB  F07F         	movff	main@blue_read,normalise_readings@blue_read
  1352   010974  C0DC  F080         	movff	main@blue_read+1,normalise_readings@blue_read+1
  1353   010978  0EBE               	movlw	low main@expected_values
  1354   01097A  6F81               	movwf	normalise_readings@expected_values& (0+255),b
  1355   01097C  0E00               	movlw	high main@expected_values
  1356   01097E  6F82               	movwf	(normalise_readings@expected_values+1)& (0+255),b
  1357   010980  0EAC               	movlw	low main@normalised_values
  1358   010982  6F83               	movwf	normalise_readings@normalised_values& (0+255),b
  1359   010984  0E00               	movlw	high main@normalised_values
  1360   010986  6F84               	movwf	(normalise_readings@normalised_values+1)& (0+255),b
  1361   010988  EC00  F080         	call	_normalise_readings	;wreg free
  1362   01098C                     
  1363                           ;main.c: 137:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1364   01098C  0E52               	movlw	82
  1365   01098E  6E5D               	movwf	(??_main+1)^0,c
  1366   010990  0E2B               	movlw	43
  1367   010992  6E5C               	movwf	??_main^0,c
  1368   010994  0E00               	movlw	0
  1369   010996                     u1617:
  1370   010996  2EE8               	decfsz	wreg,f,c
  1371   010998  D7FE               	bra	u1617
  1372   01099A  2E5C               	decfsz	??_main^0,f,c
  1373   01099C  D7FC               	bra	u1617
  1374   01099E  2E5D               	decfsz	(??_main+1)^0,f,c
  1375   0109A0  D7FA               	bra	u1617
  1376   0109A2  D000               	nop2	
  1377   0109A4                     
  1378                           ;main.c: 140:         make_master_closeness(buf, normalised_values,master_closeness);
  1379   0109A4  0E98               	movlw	low main@buf
  1380   0109A6  0100               	movlb	0	; () banked
  1381   0109A8  6F79               	movwf	make_master_closeness@buf& (0+255),b
  1382   0109AA  0E00               	movlw	high main@buf
  1383   0109AC  6F7A               	movwf	(make_master_closeness@buf+1)& (0+255),b
  1384   0109AE  0EAC               	movlw	low main@normalised_values
  1385   0109B0  6F7B               	movwf	make_master_closeness@normalised_values& (0+255),b
  1386   0109B2  0E00               	movlw	high main@normalised_values
  1387   0109B4  6F7C               	movwf	(make_master_closeness@normalised_values+1)& (0+255),b
  1388   0109B6  0ED0               	movlw	low main@master_closeness
  1389   0109B8  6F7D               	movwf	make_master_closeness@master_closeness& (0+255),b
  1390   0109BA  0E00               	movlw	high main@master_closeness
  1391   0109BC  6F7E               	movwf	(make_master_closeness@master_closeness+1)& (0+255),b
  1392   0109BE  ECE6  F085         	call	_make_master_closeness	;wreg free
  1393   0109C2  0ED0               	movlw	low main@master_closeness
  1394   0109C4  6E01               	movwf	determine_card@master_closeness^0,c
  1395   0109C6  0E00               	movlw	high main@master_closeness
  1396   0109C8  6E02               	movwf	(determine_card@master_closeness+1)^0,c
  1397   0109CA  EC16  F08B         	call	_determine_card	;wreg free
  1398   0109CE                     
  1399                           ;main.c: 146:         LATFbits.LATF0 = 1;
  1400   0109CE  807E               	bsf	126,0,c	;volatile
  1401   0109D0                     
  1402                           ;main.c: 147:         LATDbits.LATD4 = 1;
  1403   0109D0  887C               	bsf	124,4,c	;volatile
  1404   0109D2                     
  1405                           ;main.c: 148:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1406   0109D2  0EF4               	movlw	244
  1407   0109D4  6E5D               	movwf	(??_main+1)^0,c
  1408   0109D6  0E82               	movlw	130
  1409   0109D8  6E5C               	movwf	??_main^0,c
  1410   0109DA  0E05               	movlw	5
  1411   0109DC                     u1627:
  1412   0109DC  2EE8               	decfsz	wreg,f,c
  1413   0109DE  D7FE               	bra	u1627
  1414   0109E0  2E5C               	decfsz	??_main^0,f,c
  1415   0109E2  D7FC               	bra	u1627
  1416   0109E4  2E5D               	decfsz	(??_main+1)^0,f,c
  1417   0109E6  D7FA               	bra	u1627
  1418   0109E8  F000               	nop	
  1419   0109EA                     
  1420                           ;main.c: 149:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1421   0109EA  0EF4               	movlw	244
  1422   0109EC  6E5D               	movwf	(??_main+1)^0,c
  1423   0109EE  0E82               	movlw	130
  1424   0109F0  6E5C               	movwf	??_main^0,c
  1425   0109F2  0E05               	movlw	5
  1426   0109F4                     u1637:
  1427   0109F4  2EE8               	decfsz	wreg,f,c
  1428   0109F6  D7FE               	bra	u1637
  1429   0109F8  2E5C               	decfsz	??_main^0,f,c
  1430   0109FA  D7FC               	bra	u1637
  1431   0109FC  2E5D               	decfsz	(??_main+1)^0,f,c
  1432   0109FE  D7FA               	bra	u1637
  1433   010A00  F000               	nop	
  1434   010A02  EF52  F084         	goto	l2857
  1435   010A06  EF00  F000         	goto	start
  1436   010A0A                     __end_of_main:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function _setMotorPWM *****************
  1440 ;; Defined at:
  1441 ;;		line 61 in file "dc_motor.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  m               2   13[COMRAM] PTR struct DC_motor
  1444 ;;		 -> main@motorR(9), main@motorL(9), 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  negDuty         1   18[COMRAM] unsigned char 
  1447 ;;  posDuty         1   17[COMRAM] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1461 ;;Total ram usage:        6 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 1
  1464 ;; This function calls:
  1465 ;;		___lwdiv
  1466 ;;		___wmul
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;;		_stop
  1470 ;;		_turnLeft45
  1471 ;;		_turnRight45
  1472 ;;		_fullSpeedAhead
  1473 ;;		_reverseFullSpeed
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text1
  1478   010EFE                     __ptext1:
  1479                           	callstack 0
  1480   010EFE                     _setMotorPWM:
  1481                           	callstack 29
  1482   010EFE                     
  1483                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  1484   010EFE  EE20 F002          	lfsr	2,2
  1485   010F02  500E               	movf	setMotorPWM@m^0,w,c
  1486   010F04  26D9               	addwf	fsr2l,f,c
  1487   010F06  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1488   010F08  22DA               	addwfc	fsr2h,f,c
  1489   010F0A  50DF               	movf	indf2,w,c
  1490   010F0C  B4D8               	btfsc	status,2,c
  1491   010F0E  EF8B  F087         	goto	u1381
  1492   010F12  EF8D  F087         	goto	u1380
  1493   010F16                     u1381:
  1494   010F16  EFC1  F087         	goto	l2559
  1495   010F1A                     u1380:
  1496   010F1A                     
  1497                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1498   010F1A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1499   010F1E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1500   010F22  50DF               	movf	indf2,w,c
  1501   010F24  6E10               	movwf	??_setMotorPWM^0,c
  1502   010F26  5010               	movf	??_setMotorPWM^0,w,c
  1503   010F28  6E01               	movwf	___wmul@multiplier^0,c
  1504   010F2A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1505   010F2C  EE20 F003          	lfsr	2,3
  1506   010F30  500E               	movf	setMotorPWM@m^0,w,c
  1507   010F32  26D9               	addwf	fsr2l,f,c
  1508   010F34  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1509   010F36  22DA               	addwfc	fsr2h,f,c
  1510   010F38  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1511   010F3C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1512   010F40  EC76  F08D         	call	___wmul	;wreg free
  1513   010F44  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1514   010F48  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1515   010F4C  0E00               	movlw	0
  1516   010F4E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1517   010F50  0E64               	movlw	100
  1518   010F52  6E09               	movwf	___lwdiv@divisor^0,c
  1519   010F54  EC93  F08B         	call	___lwdiv	;wreg free
  1520   010F58  EE20 F003          	lfsr	2,3
  1521   010F5C  500E               	movf	setMotorPWM@m^0,w,c
  1522   010F5E  26D9               	addwf	fsr2l,f,c
  1523   010F60  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1524   010F62  22DA               	addwfc	fsr2h,f,c
  1525   010F64  50DF               	movf	indf2,w,c
  1526   010F66  6E11               	movwf	(??_setMotorPWM+1)^0,c
  1527   010F68  5007               	movf	?___lwdiv^0,w,c
  1528   010F6A  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  1529   010F6C  6E12               	movwf	setMotorPWM@posDuty^0,c
  1530   010F6E                     
  1531                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  1532   010F6E  EE20 F003          	lfsr	2,3
  1533   010F72  500E               	movf	setMotorPWM@m^0,w,c
  1534   010F74  26D9               	addwf	fsr2l,f,c
  1535   010F76  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1536   010F78  22DA               	addwfc	fsr2h,f,c
  1537   010F7A  50DF               	movf	indf2,w,c
  1538   010F7C  6E13               	movwf	setMotorPWM@negDuty^0,c
  1539                           
  1540                           ;dc_motor.c: 68:     }
  1541   010F7E  EFE4  F087         	goto	l2563
  1542   010F82                     l2559:
  1543                           
  1544                           ;dc_motor.c: 70:         posDuty=0;
  1545   010F82  0E00               	movlw	0
  1546   010F84  6E12               	movwf	setMotorPWM@posDuty^0,c
  1547   010F86                     
  1548                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  1549   010F86  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1550   010F8A  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1551   010F8E  50DF               	movf	indf2,w,c
  1552   010F90  6E10               	movwf	??_setMotorPWM^0,c
  1553   010F92  5010               	movf	??_setMotorPWM^0,w,c
  1554   010F94  6E01               	movwf	___wmul@multiplier^0,c
  1555   010F96  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1556   010F98  EE20 F003          	lfsr	2,3
  1557   010F9C  500E               	movf	setMotorPWM@m^0,w,c
  1558   010F9E  26D9               	addwf	fsr2l,f,c
  1559   010FA0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1560   010FA2  22DA               	addwfc	fsr2h,f,c
  1561   010FA4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1562   010FA8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1563   010FAC  EC76  F08D         	call	___wmul	;wreg free
  1564   010FB0  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1565   010FB4  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1566   010FB8  0E00               	movlw	0
  1567   010FBA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1568   010FBC  0E64               	movlw	100
  1569   010FBE  6E09               	movwf	___lwdiv@divisor^0,c
  1570   010FC0  EC93  F08B         	call	___lwdiv	;wreg free
  1571   010FC4  5007               	movf	?___lwdiv^0,w,c
  1572   010FC6  6E13               	movwf	setMotorPWM@negDuty^0,c
  1573   010FC8                     l2563:
  1574                           
  1575                           ;dc_motor.c: 74:     if (m->direction) {
  1576   010FC8  EE20 F001          	lfsr	2,1
  1577   010FCC  500E               	movf	setMotorPWM@m^0,w,c
  1578   010FCE  26D9               	addwf	fsr2l,f,c
  1579   010FD0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1580   010FD2  22DA               	addwfc	fsr2h,f,c
  1581   010FD4  50DF               	movf	indf2,w,c
  1582   010FD6  B4D8               	btfsc	status,2,c
  1583   010FD8  EFF0  F087         	goto	u1391
  1584   010FDC  EFF2  F087         	goto	u1390
  1585   010FE0                     u1391:
  1586   010FE0  EF14  F088         	goto	l2567
  1587   010FE4                     u1390:
  1588   010FE4                     
  1589                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  1590   010FE4  EE20 F005          	lfsr	2,5
  1591   010FE8  500E               	movf	setMotorPWM@m^0,w,c
  1592   010FEA  26D9               	addwf	fsr2l,f,c
  1593   010FEC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1594   010FEE  22DA               	addwfc	fsr2h,f,c
  1595   010FF0  CFDE F010          	movff	postinc2,??_setMotorPWM
  1596   010FF4  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1597   010FF8  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1598   010FFC  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1599   011000  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1600                           
  1601                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  1602   011004  EE20 F007          	lfsr	2,7
  1603   011008  500E               	movf	setMotorPWM@m^0,w,c
  1604   01100A  26D9               	addwf	fsr2l,f,c
  1605   01100C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1606   01100E  22DA               	addwfc	fsr2h,f,c
  1607   011010  CFDE F010          	movff	postinc2,??_setMotorPWM
  1608   011014  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1609   011018  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1610   01101C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1611   011020  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1612                           
  1613                           ;dc_motor.c: 77:     } else {
  1614   011024  EF34  F088         	goto	l95
  1615   011028                     l2567:
  1616                           
  1617                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  1618   011028  EE20 F005          	lfsr	2,5
  1619   01102C  500E               	movf	setMotorPWM@m^0,w,c
  1620   01102E  26D9               	addwf	fsr2l,f,c
  1621   011030  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1622   011032  22DA               	addwfc	fsr2h,f,c
  1623   011034  CFDE F010          	movff	postinc2,??_setMotorPWM
  1624   011038  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1625   01103C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1626   011040  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1627   011044  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1628                           
  1629                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  1630   011048  EE20 F007          	lfsr	2,7
  1631   01104C  500E               	movf	setMotorPWM@m^0,w,c
  1632   01104E  26D9               	addwf	fsr2l,f,c
  1633   011050  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1634   011052  22DA               	addwfc	fsr2h,f,c
  1635   011054  CFDE F010          	movff	postinc2,??_setMotorPWM
  1636   011058  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1637   01105C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1638   011060  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1639   011064  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1640   011068                     l95:
  1641   011068  0012               	return		;funcret
  1642   01106A                     __end_of_setMotorPWM:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _normalise_readings *****************
  1646 ;; Defined at:
  1647 ;;		line 58 in file "colour_identify.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  buf             2   25[BANK0 ] PTR unsigned char 
  1650 ;;		 -> main@buf(20), 
  1651 ;;  red_read        2   27[BANK0 ] unsigned int 
  1652 ;;  green_read      2   29[BANK0 ] unsigned int 
  1653 ;;  blue_read       2   31[BANK0 ] unsigned int 
  1654 ;;  expected_val    2   33[BANK0 ] PTR unsigned int [3]
  1655 ;;		 -> main@expected_values(18), 
  1656 ;;  normalised_v    2   35[BANK0 ] PTR unsigned int [3]
  1657 ;;		 -> main@normalised_values(18), 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  differenceB     2   53[BANK0 ] unsigned int 
  1660 ;;  differenceG     2   51[BANK0 ] unsigned int 
  1661 ;;  differenceR     2   49[BANK0 ] unsigned int 
  1662 ;;  normalB         2   47[BANK0 ] unsigned int 
  1663 ;;  normalG         2   45[BANK0 ] unsigned int 
  1664 ;;  normalR         2   43[BANK0 ] unsigned int 
  1665 ;;  i               1   55[BANK0 ] enum E14551
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1675 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;Total ram usage:       31 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 8
  1682 ;; This function calls:
  1683 ;;		___lwdiv
  1684 ;;		___wmul
  1685 ;;		_abs
  1686 ;;		_sendStringSerial4
  1687 ;;		_sprintf
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text2
  1694   010000                     __ptext2:
  1695                           	callstack 0
  1696   010000                     _normalise_readings:
  1697                           	callstack 22
  1698   010000                     
  1699                           ;colour_identify.c: 65:     for(colour i = RED; i<= BLUE; i++){
  1700   010000  0E00               	movlw	0
  1701   010002  0100               	movlb	0	; () banked
  1702   010004  6F97               	movwf	normalise_readings@i& (0+255),b
  1703   010006                     l2703:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;colour_identify.c: 68:         unsigned int differenceR = abs(red_read - expected_value
      +                          s[i][RED]);
  1707   010006  5197               	movf	normalise_readings@i& (0+255),w,b
  1708   010008  0D06               	mullw	6
  1709   01000A  CFF3 F085          	movff	prodl,??_normalise_readings
  1710   01000E  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1711   010012  5185               	movf	??_normalise_readings& (0+255),w,b
  1712   010014  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1713   010016  6ED9               	movwf	fsr2l,c
  1714   010018  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1715   01001A  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1716   01001C  6EDA               	movwf	fsr2h,c
  1717   01001E  CFDE F087          	movff	postinc2,??_normalise_readings+2
  1718   010022  CFDD F088          	movff	postdec2,??_normalise_readings+3
  1719   010026  5187               	movf	(??_normalise_readings+2)& (0+255),w,b
  1720   010028  5D7B               	subwf	normalise_readings@red_read& (0+255),w,b
  1721   01002A  6E13               	movwf	abs@a^0,c
  1722   01002C  5188               	movf	(??_normalise_readings+3)& (0+255),w,b
  1723   01002E  597C               	subwfb	(normalise_readings@red_read+1)& (0+255),w,b
  1724   010030  6E14               	movwf	(abs@a+1)^0,c
  1725   010032  ECFB  F08C         	call	_abs	;wreg free
  1726   010036  C013  F091         	movff	?_abs,normalise_readings@differenceR
  1727   01003A  C014  F092         	movff	?_abs+1,normalise_readings@differenceR+1
  1728                           
  1729                           ;colour_identify.c: 69:         unsigned int normalR = (differenceR*100) / expected_valu
      +                          es[i][RED];
  1730   01003E  C091  F001         	movff	normalise_readings@differenceR,___wmul@multiplier
  1731   010042  C092  F002         	movff	normalise_readings@differenceR+1,___wmul@multiplier+1
  1732   010046  0E00               	movlw	0
  1733   010048  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1734   01004A  0E64               	movlw	100
  1735   01004C  6E03               	movwf	___wmul@multiplicand^0,c
  1736   01004E  EC76  F08D         	call	___wmul	;wreg free
  1737   010052  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1738   010056  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1739   01005A  0100               	movlb	0	; () banked
  1740   01005C  5197               	movf	normalise_readings@i& (0+255),w,b
  1741   01005E  0D06               	mullw	6
  1742   010060  CFF3 F085          	movff	prodl,??_normalise_readings
  1743   010064  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1744   010068  5185               	movf	??_normalise_readings& (0+255),w,b
  1745   01006A  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1746   01006C  6ED9               	movwf	fsr2l,c
  1747   01006E  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1748   010070  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1749   010072  6EDA               	movwf	fsr2h,c
  1750   010074  CFDE F009          	movff	postinc2,___lwdiv@divisor
  1751   010078  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  1752   01007C  EC93  F08B         	call	___lwdiv	;wreg free
  1753   010080  C007  F08B         	movff	?___lwdiv,normalise_readings@normalR
  1754   010084  C008  F08C         	movff	?___lwdiv+1,normalise_readings@normalR+1
  1755   010088                     
  1756                           ;colour_identify.c: 71:         sprintf(buf, "RED: Read %d, expected %d, difference %d, 
      +                          normalised %d \n", red_read, expected_values[i][RED], differenceR, normalR);
  1757   010088  C079  F060         	movff	normalise_readings@buf,sprintf@s
  1758   01008C  C07A  F061         	movff	normalise_readings@buf+1,sprintf@s+1
  1759   010090  0E93               	movlw	low STR_3
  1760   010092  0100               	movlb	0	; () banked
  1761   010094  6F62               	movwf	sprintf@fmt& (0+255),b
  1762   010096  0EFF               	movlw	high STR_3
  1763   010098  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1764   01009A  C07B  F064         	movff	normalise_readings@red_read,?_sprintf+4
  1765   01009E  C07C  F065         	movff	normalise_readings@red_read+1,?_sprintf+5
  1766   0100A2  5197               	movf	normalise_readings@i& (0+255),w,b
  1767   0100A4  0D06               	mullw	6
  1768   0100A6  CFF3 F085          	movff	prodl,??_normalise_readings
  1769   0100AA  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1770   0100AE  5185               	movf	??_normalise_readings& (0+255),w,b
  1771   0100B0  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1772   0100B2  6ED9               	movwf	fsr2l,c
  1773   0100B4  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1774   0100B6  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1775   0100B8  6EDA               	movwf	fsr2h,c
  1776   0100BA  CFDE F066          	movff	postinc2,?_sprintf+6
  1777   0100BE  CFDD F067          	movff	postdec2,?_sprintf+7
  1778   0100C2  C091  F068         	movff	normalise_readings@differenceR,?_sprintf+8
  1779   0100C6  C092  F069         	movff	normalise_readings@differenceR+1,?_sprintf+9
  1780   0100CA  C08B  F06A         	movff	normalise_readings@normalR,?_sprintf+10
  1781   0100CE  C08C  F06B         	movff	normalise_readings@normalR+1,?_sprintf+11
  1782   0100D2  ECCD  F08B         	call	_sprintf	;wreg free
  1783   0100D6                     
  1784                           ;colour_identify.c: 72:         sendStringSerial4(buf);
  1785   0100D6  C079  F002         	movff	normalise_readings@buf,sendStringSerial4@string
  1786   0100DA  C07A  F003         	movff	normalise_readings@buf+1,sendStringSerial4@string+1
  1787   0100DE  EC35  F08D         	call	_sendStringSerial4	;wreg free
  1788   0100E2                     
  1789                           ;colour_identify.c: 73:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1790   0100E2  0E52               	movlw	82
  1791   0100E4  0100               	movlb	0	; () banked
  1792   0100E6  6F86               	movwf	(??_normalise_readings+1)& (0+255),b
  1793   0100E8  0E2B               	movlw	43
  1794   0100EA  6F85               	movwf	??_normalise_readings& (0+255),b
  1795   0100EC  0E00               	movlw	0
  1796   0100EE                     u1647:
  1797   0100EE  2EE8               	decfsz	wreg,f,c
  1798   0100F0  D7FE               	bra	u1647
  1799   0100F2  2F85               	decfsz	??_normalise_readings& (0+255),f,b
  1800   0100F4  D7FC               	bra	u1647
  1801   0100F6  2F86               	decfsz	(??_normalise_readings+1)& (0+255),f,b
  1802   0100F8  D7FA               	bra	u1647
  1803   0100FA  F000               	nop	
  1804   0100FC                     
  1805                           ;colour_identify.c: 76:         unsigned int differenceG = abs(green_read - expected_val
      +                          ues[i][GREEN]);
  1806   0100FC  0100               	movlb	0	; () banked
  1807   0100FE  5197               	movf	normalise_readings@i& (0+255),w,b
  1808   010100  0D06               	mullw	6
  1809   010102  CFF3 F085          	movff	prodl,??_normalise_readings
  1810   010106  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1811   01010A  5185               	movf	??_normalise_readings& (0+255),w,b
  1812   01010C  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1813   01010E  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1814   010110  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1815   010112  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1816   010114  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1817   010116  0E02               	movlw	2
  1818   010118  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1819   01011A  6ED9               	movwf	fsr2l,c
  1820   01011C  0E00               	movlw	0
  1821   01011E  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1822   010120  6EDA               	movwf	fsr2h,c
  1823   010122  CFDE F089          	movff	postinc2,??_normalise_readings+4
  1824   010126  CFDD F08A          	movff	postdec2,??_normalise_readings+5
  1825   01012A  5189               	movf	(??_normalise_readings+4)& (0+255),w,b
  1826   01012C  5D7D               	subwf	normalise_readings@green_read& (0+255),w,b
  1827   01012E  6E13               	movwf	abs@a^0,c
  1828   010130  518A               	movf	(??_normalise_readings+5)& (0+255),w,b
  1829   010132  597E               	subwfb	(normalise_readings@green_read+1)& (0+255),w,b
  1830   010134  6E14               	movwf	(abs@a+1)^0,c
  1831   010136  ECFB  F08C         	call	_abs	;wreg free
  1832   01013A  C013  F093         	movff	?_abs,normalise_readings@differenceG
  1833   01013E  C014  F094         	movff	?_abs+1,normalise_readings@differenceG+1
  1834   010142                     
  1835                           ;colour_identify.c: 77:         unsigned int normalG = (differenceG*100) / expected_valu
      +                          es[i][GREEN];
  1836   010142  C093  F001         	movff	normalise_readings@differenceG,___wmul@multiplier
  1837   010146  C094  F002         	movff	normalise_readings@differenceG+1,___wmul@multiplier+1
  1838   01014A  0E00               	movlw	0
  1839   01014C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1840   01014E  0E64               	movlw	100
  1841   010150  6E03               	movwf	___wmul@multiplicand^0,c
  1842   010152  EC76  F08D         	call	___wmul	;wreg free
  1843   010156  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1844   01015A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1845   01015E  0100               	movlb	0	; () banked
  1846   010160  5197               	movf	normalise_readings@i& (0+255),w,b
  1847   010162  0D06               	mullw	6
  1848   010164  CFF3 F085          	movff	prodl,??_normalise_readings
  1849   010168  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1850   01016C  5185               	movf	??_normalise_readings& (0+255),w,b
  1851   01016E  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1852   010170  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1853   010172  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1854   010174  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1855   010176  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1856   010178  0E02               	movlw	2
  1857   01017A  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1858   01017C  6ED9               	movwf	fsr2l,c
  1859   01017E  0E00               	movlw	0
  1860   010180  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1861   010182  6EDA               	movwf	fsr2h,c
  1862   010184  CFDE F009          	movff	postinc2,___lwdiv@divisor
  1863   010188  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  1864   01018C  EC93  F08B         	call	___lwdiv	;wreg free
  1865   010190  C007  F08D         	movff	?___lwdiv,normalise_readings@normalG
  1866   010194  C008  F08E         	movff	?___lwdiv+1,normalise_readings@normalG+1
  1867   010198                     
  1868                           ;colour_identify.c: 78:         sprintf(buf, "GREEN: Read %d, expected %d, difference %d
      +                          , normalised %d \n", green_read, expected_values[i][GREEN], differenceG, normalG);
  1869   010198  C079  F060         	movff	normalise_readings@buf,sprintf@s
  1870   01019C  C07A  F061         	movff	normalise_readings@buf+1,sprintf@s+1
  1871   0101A0  0EE1               	movlw	low STR_4
  1872   0101A2  0100               	movlb	0	; () banked
  1873   0101A4  6F62               	movwf	sprintf@fmt& (0+255),b
  1874   0101A6  0EFE               	movlw	high STR_4
  1875   0101A8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1876   0101AA  C07D  F064         	movff	normalise_readings@green_read,?_sprintf+4
  1877   0101AE  C07E  F065         	movff	normalise_readings@green_read+1,?_sprintf+5
  1878   0101B2  5197               	movf	normalise_readings@i& (0+255),w,b
  1879   0101B4  0D06               	mullw	6
  1880   0101B6  CFF3 F085          	movff	prodl,??_normalise_readings
  1881   0101BA  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1882   0101BE  5185               	movf	??_normalise_readings& (0+255),w,b
  1883   0101C0  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1884   0101C2  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1885   0101C4  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1886   0101C6  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1887   0101C8  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1888   0101CA  0E02               	movlw	2
  1889   0101CC  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1890   0101CE  6ED9               	movwf	fsr2l,c
  1891   0101D0  0E00               	movlw	0
  1892   0101D2  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1893   0101D4  6EDA               	movwf	fsr2h,c
  1894   0101D6  CFDE F066          	movff	postinc2,?_sprintf+6
  1895   0101DA  CFDD F067          	movff	postdec2,?_sprintf+7
  1896   0101DE  C093  F068         	movff	normalise_readings@differenceG,?_sprintf+8
  1897   0101E2  C094  F069         	movff	normalise_readings@differenceG+1,?_sprintf+9
  1898   0101E6  C08D  F06A         	movff	normalise_readings@normalG,?_sprintf+10
  1899   0101EA  C08E  F06B         	movff	normalise_readings@normalG+1,?_sprintf+11
  1900   0101EE  ECCD  F08B         	call	_sprintf	;wreg free
  1901   0101F2                     
  1902                           ;colour_identify.c: 79:         sendStringSerial4(buf);
  1903   0101F2  C079  F002         	movff	normalise_readings@buf,sendStringSerial4@string
  1904   0101F6  C07A  F003         	movff	normalise_readings@buf+1,sendStringSerial4@string+1
  1905   0101FA  EC35  F08D         	call	_sendStringSerial4	;wreg free
  1906   0101FE                     
  1907                           ;colour_identify.c: 80:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1908   0101FE  0E52               	movlw	82
  1909   010200  0100               	movlb	0	; () banked
  1910   010202  6F86               	movwf	(??_normalise_readings+1)& (0+255),b
  1911   010204  0E2B               	movlw	43
  1912   010206  6F85               	movwf	??_normalise_readings& (0+255),b
  1913   010208  0E00               	movlw	0
  1914   01020A                     u1657:
  1915   01020A  2EE8               	decfsz	wreg,f,c
  1916   01020C  D7FE               	bra	u1657
  1917   01020E  2F85               	decfsz	??_normalise_readings& (0+255),f,b
  1918   010210  D7FC               	bra	u1657
  1919   010212  2F86               	decfsz	(??_normalise_readings+1)& (0+255),f,b
  1920   010214  D7FA               	bra	u1657
  1921   010216  F000               	nop	
  1922                           
  1923                           ;colour_identify.c: 83:         unsigned int differenceB = abs(blue_read - expected_valu
      +                          es[i][BLUE]);
  1924   010218  0100               	movlb	0	; () banked
  1925   01021A  5197               	movf	normalise_readings@i& (0+255),w,b
  1926   01021C  0D06               	mullw	6
  1927   01021E  CFF3 F085          	movff	prodl,??_normalise_readings
  1928   010222  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1929   010226  5185               	movf	??_normalise_readings& (0+255),w,b
  1930   010228  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1931   01022A  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1932   01022C  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1933   01022E  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1934   010230  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1935   010232  0E04               	movlw	4
  1936   010234  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1937   010236  6ED9               	movwf	fsr2l,c
  1938   010238  0E00               	movlw	0
  1939   01023A  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1940   01023C  6EDA               	movwf	fsr2h,c
  1941   01023E  CFDE F089          	movff	postinc2,??_normalise_readings+4
  1942   010242  CFDD F08A          	movff	postdec2,??_normalise_readings+5
  1943   010246  5189               	movf	(??_normalise_readings+4)& (0+255),w,b
  1944   010248  5D7F               	subwf	normalise_readings@blue_read& (0+255),w,b
  1945   01024A  6E13               	movwf	abs@a^0,c
  1946   01024C  518A               	movf	(??_normalise_readings+5)& (0+255),w,b
  1947   01024E  5980               	subwfb	(normalise_readings@blue_read+1)& (0+255),w,b
  1948   010250  6E14               	movwf	(abs@a+1)^0,c
  1949   010252  ECFB  F08C         	call	_abs	;wreg free
  1950   010256  C013  F095         	movff	?_abs,normalise_readings@differenceB
  1951   01025A  C014  F096         	movff	?_abs+1,normalise_readings@differenceB+1
  1952                           
  1953                           ;colour_identify.c: 84:         unsigned int normalB = (differenceB*100) / expected_valu
      +                          es[i][BLUE];
  1954   01025E  C095  F001         	movff	normalise_readings@differenceB,___wmul@multiplier
  1955   010262  C096  F002         	movff	normalise_readings@differenceB+1,___wmul@multiplier+1
  1956   010266  0E00               	movlw	0
  1957   010268  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1958   01026A  0E64               	movlw	100
  1959   01026C  6E03               	movwf	___wmul@multiplicand^0,c
  1960   01026E  EC76  F08D         	call	___wmul	;wreg free
  1961   010272  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1962   010276  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1963   01027A  0100               	movlb	0	; () banked
  1964   01027C  5197               	movf	normalise_readings@i& (0+255),w,b
  1965   01027E  0D06               	mullw	6
  1966   010280  CFF3 F085          	movff	prodl,??_normalise_readings
  1967   010284  CFF4 F086          	movff	prodh,??_normalise_readings+1
  1968   010288  5185               	movf	??_normalise_readings& (0+255),w,b
  1969   01028A  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  1970   01028C  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  1971   01028E  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  1972   010290  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  1973   010292  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  1974   010294  0E04               	movlw	4
  1975   010296  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  1976   010298  6ED9               	movwf	fsr2l,c
  1977   01029A  0E00               	movlw	0
  1978   01029C  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  1979   01029E  6EDA               	movwf	fsr2h,c
  1980   0102A0  CFDE F009          	movff	postinc2,___lwdiv@divisor
  1981   0102A4  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  1982   0102A8  EC93  F08B         	call	___lwdiv	;wreg free
  1983   0102AC  C007  F08F         	movff	?___lwdiv,normalise_readings@normalB
  1984   0102B0  C008  F090         	movff	?___lwdiv+1,normalise_readings@normalB+1
  1985   0102B4                     
  1986                           ;colour_identify.c: 85:         sprintf(buf, "BLUE: Read %d, expected %d, difference %d,
      +                           normalised %d \n", blue_read, expected_values[i][BLUE], differenceB, normalB);
  1987   0102B4  C079  F060         	movff	normalise_readings@buf,sprintf@s
  1988   0102B8  C07A  F061         	movff	normalise_readings@buf+1,sprintf@s+1
  1989   0102BC  0E1D               	movlw	low STR_5
  1990   0102BE  0100               	movlb	0	; () banked
  1991   0102C0  6F62               	movwf	sprintf@fmt& (0+255),b
  1992   0102C2  0EFF               	movlw	high STR_5
  1993   0102C4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1994   0102C6  C07F  F064         	movff	normalise_readings@blue_read,?_sprintf+4
  1995   0102CA  C080  F065         	movff	normalise_readings@blue_read+1,?_sprintf+5
  1996   0102CE  5197               	movf	normalise_readings@i& (0+255),w,b
  1997   0102D0  0D06               	mullw	6
  1998   0102D2  CFF3 F085          	movff	prodl,??_normalise_readings
  1999   0102D6  CFF4 F086          	movff	prodh,??_normalise_readings+1
  2000   0102DA  5185               	movf	??_normalise_readings& (0+255),w,b
  2001   0102DC  2581               	addwf	normalise_readings@expected_values& (0+255),w,b
  2002   0102DE  6F87               	movwf	(??_normalise_readings+2)& (0+255),b
  2003   0102E0  5186               	movf	(??_normalise_readings+1)& (0+255),w,b
  2004   0102E2  2182               	addwfc	(normalise_readings@expected_values+1)& (0+255),w,b
  2005   0102E4  6F88               	movwf	(??_normalise_readings+3)& (0+255),b
  2006   0102E6  0E04               	movlw	4
  2007   0102E8  2587               	addwf	(??_normalise_readings+2)& (0+255),w,b
  2008   0102EA  6ED9               	movwf	fsr2l,c
  2009   0102EC  0E00               	movlw	0
  2010   0102EE  2188               	addwfc	(??_normalise_readings+3)& (0+255),w,b
  2011   0102F0  6EDA               	movwf	fsr2h,c
  2012   0102F2  CFDE F066          	movff	postinc2,?_sprintf+6
  2013   0102F6  CFDD F067          	movff	postdec2,?_sprintf+7
  2014   0102FA  C095  F068         	movff	normalise_readings@differenceB,?_sprintf+8
  2015   0102FE  C096  F069         	movff	normalise_readings@differenceB+1,?_sprintf+9
  2016   010302  C08F  F06A         	movff	normalise_readings@normalB,?_sprintf+10
  2017   010306  C090  F06B         	movff	normalise_readings@normalB+1,?_sprintf+11
  2018   01030A  ECCD  F08B         	call	_sprintf	;wreg free
  2019   01030E                     
  2020                           ;colour_identify.c: 86:         sendStringSerial4(buf);
  2021   01030E  C079  F002         	movff	normalise_readings@buf,sendStringSerial4@string
  2022   010312  C07A  F003         	movff	normalise_readings@buf+1,sendStringSerial4@string+1
  2023   010316  EC35  F08D         	call	_sendStringSerial4	;wreg free
  2024   01031A                     
  2025                           ;colour_identify.c: 87:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2026   01031A  0E52               	movlw	82
  2027   01031C  0100               	movlb	0	; () banked
  2028   01031E  6F86               	movwf	(??_normalise_readings+1)& (0+255),b
  2029   010320  0E2B               	movlw	43
  2030   010322  6F85               	movwf	??_normalise_readings& (0+255),b
  2031   010324  0E00               	movlw	0
  2032   010326                     u1667:
  2033   010326  2EE8               	decfsz	wreg,f,c
  2034   010328  D7FE               	bra	u1667
  2035   01032A  2F85               	decfsz	??_normalise_readings& (0+255),f,b
  2036   01032C  D7FC               	bra	u1667
  2037   01032E  2F86               	decfsz	(??_normalise_readings+1)& (0+255),f,b
  2038   010330  D7FA               	bra	u1667
  2039   010332  F000               	nop	
  2040   010334                     
  2041                           ;colour_identify.c: 88:     }
  2042   010334  0100               	movlb	0	; () banked
  2043   010336  2B97               	incf	normalise_readings@i& (0+255),f,b
  2044   010338                     
  2045                           ; BSR set to: 0
  2046   010338  0E02               	movlw	2
  2047   01033A  6597               	cpfsgt	normalise_readings@i& (0+255),b
  2048   01033C  EFA2  F081         	goto	u1481
  2049   010340  EFA4  F081         	goto	u1480
  2050   010344                     u1481:
  2051   010344  EF03  F080         	goto	l2703
  2052   010348                     u1480:
  2053   010348                     
  2054                           ; BSR set to: 0
  2055   010348  0012               	return		;funcret
  2056   01034A                     __end_of_normalise_readings:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function ___wmul *****************
  2060 ;; Defined at:
  2061 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  multiplier      2    0[COMRAM] unsigned int 
  2064 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  product         2    4[COMRAM] unsigned int 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  2    0[COMRAM] unsigned int 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, prodl, prodh
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;Total ram usage:        6 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_setMotorPWM
  2086 ;;		_normalise_readings
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text3
  2091   011AEC                     __ptext3:
  2092                           	callstack 0
  2093   011AEC                     ___wmul:
  2094                           	callstack 29
  2095   011AEC  5001               	movf	___wmul@multiplier^0,w,c
  2096   011AEE  0203               	mulwf	___wmul@multiplicand^0,c
  2097   011AF0  CFF3 F005          	movff	prodl,___wmul@product
  2098   011AF4  CFF4 F006          	movff	prodh,___wmul@product+1
  2099   011AF8  5001               	movf	___wmul@multiplier^0,w,c
  2100   011AFA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2101   011AFC  50F3               	movf	243,w,c
  2102   011AFE  2606               	addwf	(___wmul@product+1)^0,f,c
  2103   011B00  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2104   011B02  0203               	mulwf	___wmul@multiplicand^0,c
  2105   011B04  50F3               	movf	243,w,c
  2106   011B06  2606               	addwf	(___wmul@product+1)^0,f,c
  2107   011B08  C005  F001         	movff	___wmul@product,?___wmul
  2108   011B0C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2109   011B10  0012               	return		;funcret
  2110   011B12                     __end_of___wmul:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _make_master_closeness *****************
  2114 ;; Defined at:
  2115 ;;		line 92 in file "colour_identify.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  buf             2   25[BANK0 ] PTR unsigned char 
  2118 ;;		 -> main@buf(20), 
  2119 ;;  normalised_v    2   27[BANK0 ] PTR unsigned int [3]
  2120 ;;		 -> main@normalised_values(18), 
  2121 ;;  master_close    2   29[BANK0 ] PTR unsigned int 
  2122 ;;		 -> main@master_closeness(6), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  i               1   90[COMRAM] enum E14551
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2134 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Totals:         1      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;Total ram usage:       27 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 8
  2141 ;; This function calls:
  2142 ;;		___lwdiv
  2143 ;;		_sendStringSerial4
  2144 ;;		_sprintf
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text4
  2151   010BCC                     __ptext4:
  2152                           	callstack 0
  2153   010BCC                     _make_master_closeness:
  2154                           	callstack 22
  2155   010BCC                     
  2156                           ;colour_identify.c: 93:     for(colour i = RED; i<=BLACK; i++){
  2157   010BCC  0E00               	movlw	0
  2158   010BCE  6E5B               	movwf	make_master_closeness@i^0,c
  2159   010BD0                     l2737:
  2160                           
  2161                           ;colour_identify.c: 94:         master_closeness[i] = (normalised_values[i][RED] + norma
      +                          lised_values[i][GREEN] + normalised_values[i][BLUE])/3;
  2162   010BD0  505B               	movf	make_master_closeness@i^0,w,c
  2163   010BD2  0D06               	mullw	6
  2164   010BD4  CFF3 F07F          	movff	prodl,??_make_master_closeness
  2165   010BD8  CFF4 F080          	movff	prodh,??_make_master_closeness+1
  2166   010BDC  0100               	movlb	0	; () banked
  2167   010BDE  517F               	movf	??_make_master_closeness& (0+255),w,b
  2168   010BE0  257B               	addwf	make_master_closeness@normalised_values& (0+255),w,b
  2169   010BE2  6F81               	movwf	(??_make_master_closeness+2)& (0+255),b
  2170   010BE4  5180               	movf	(??_make_master_closeness+1)& (0+255),w,b
  2171   010BE6  217C               	addwfc	(make_master_closeness@normalised_values+1)& (0+255),w,b
  2172   010BE8  6F82               	movwf	(??_make_master_closeness+3)& (0+255),b
  2173   010BEA  0E04               	movlw	4
  2174   010BEC  2581               	addwf	(??_make_master_closeness+2)& (0+255),w,b
  2175   010BEE  6ED9               	movwf	fsr2l,c
  2176   010BF0  0E00               	movlw	0
  2177   010BF2  2182               	addwfc	(??_make_master_closeness+3)& (0+255),w,b
  2178   010BF4  6EDA               	movwf	fsr2h,c
  2179   010BF6  CFDE F083          	movff	postinc2,??_make_master_closeness+4
  2180   010BFA  CFDD F084          	movff	postdec2,??_make_master_closeness+5
  2181   010BFE  505B               	movf	make_master_closeness@i^0,w,c
  2182   010C00  0D06               	mullw	6
  2183   010C02  CFF3 F085          	movff	prodl,??_make_master_closeness+6
  2184   010C06  CFF4 F086          	movff	prodh,??_make_master_closeness+7
  2185   010C0A  5185               	movf	(??_make_master_closeness+6)& (0+255),w,b
  2186   010C0C  257B               	addwf	make_master_closeness@normalised_values& (0+255),w,b
  2187   010C0E  6F87               	movwf	(??_make_master_closeness+8)& (0+255),b
  2188   010C10  5186               	movf	(??_make_master_closeness+7)& (0+255),w,b
  2189   010C12  217C               	addwfc	(make_master_closeness@normalised_values+1)& (0+255),w,b
  2190   010C14  6F88               	movwf	(??_make_master_closeness+9)& (0+255),b
  2191   010C16  0E02               	movlw	2
  2192   010C18  2587               	addwf	(??_make_master_closeness+8)& (0+255),w,b
  2193   010C1A  6ED9               	movwf	fsr2l,c
  2194   010C1C  0E00               	movlw	0
  2195   010C1E  2188               	addwfc	(??_make_master_closeness+9)& (0+255),w,b
  2196   010C20  6EDA               	movwf	fsr2h,c
  2197   010C22  CFDE F089          	movff	postinc2,??_make_master_closeness+10
  2198   010C26  CFDD F08A          	movff	postdec2,??_make_master_closeness+11
  2199   010C2A  505B               	movf	make_master_closeness@i^0,w,c
  2200   010C2C  0D06               	mullw	6
  2201   010C2E  CFF3 F08B          	movff	prodl,??_make_master_closeness+12
  2202   010C32  CFF4 F08C          	movff	prodh,??_make_master_closeness+13
  2203   010C36  518B               	movf	(??_make_master_closeness+12)& (0+255),w,b
  2204   010C38  257B               	addwf	make_master_closeness@normalised_values& (0+255),w,b
  2205   010C3A  6ED9               	movwf	fsr2l,c
  2206   010C3C  518C               	movf	(??_make_master_closeness+13)& (0+255),w,b
  2207   010C3E  217C               	addwfc	(make_master_closeness@normalised_values+1)& (0+255),w,b
  2208   010C40  6EDA               	movwf	fsr2h,c
  2209   010C42  CFDE F08D          	movff	postinc2,??_make_master_closeness+14
  2210   010C46  CFDD F08E          	movff	postdec2,??_make_master_closeness+15
  2211   010C4A  5189               	movf	(??_make_master_closeness+10)& (0+255),w,b
  2212   010C4C  258D               	addwf	(??_make_master_closeness+14)& (0+255),w,b
  2213   010C4E  6F8F               	movwf	(??_make_master_closeness+16)& (0+255),b
  2214   010C50  518A               	movf	(??_make_master_closeness+11)& (0+255),w,b
  2215   010C52  218E               	addwfc	(??_make_master_closeness+15)& (0+255),w,b
  2216   010C54  6F90               	movwf	(??_make_master_closeness+17)& (0+255),b
  2217   010C56  5183               	movf	(??_make_master_closeness+4)& (0+255),w,b
  2218   010C58  258F               	addwf	(??_make_master_closeness+16)& (0+255),w,b
  2219   010C5A  6E07               	movwf	___lwdiv@dividend^0,c
  2220   010C5C  5184               	movf	(??_make_master_closeness+5)& (0+255),w,b
  2221   010C5E  2190               	addwfc	(??_make_master_closeness+17)& (0+255),w,b
  2222   010C60  6E08               	movwf	(___lwdiv@dividend+1)^0,c
  2223   010C62  0E00               	movlw	0
  2224   010C64  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2225   010C66  0E03               	movlw	3
  2226   010C68  6E09               	movwf	___lwdiv@divisor^0,c
  2227   010C6A  EC93  F08B         	call	___lwdiv	;wreg free
  2228   010C6E  505B               	movf	make_master_closeness@i^0,w,c
  2229   010C70  0D02               	mullw	2
  2230   010C72  CFF3 F091          	movff	prodl,??_make_master_closeness+18
  2231   010C76  CFF4 F092          	movff	prodh,??_make_master_closeness+19
  2232   010C7A  0100               	movlb	0	; () banked
  2233   010C7C  5191               	movf	(??_make_master_closeness+18)& (0+255),w,b
  2234   010C7E  257D               	addwf	make_master_closeness@master_closeness& (0+255),w,b
  2235   010C80  6ED9               	movwf	fsr2l,c
  2236   010C82  5192               	movf	(??_make_master_closeness+19)& (0+255),w,b
  2237   010C84  217E               	addwfc	(make_master_closeness@master_closeness+1)& (0+255),w,b
  2238   010C86  6EDA               	movwf	fsr2h,c
  2239   010C88  C007  FFDE         	movff	?___lwdiv,postinc2
  2240   010C8C  C008  FFDD         	movff	?___lwdiv+1,postdec2
  2241   010C90                     
  2242                           ; BSR set to: 0
  2243                           ;colour_identify.c: 95:         sprintf(buf, "MC Avg: normRED %d, normGREEN %d, normBLUE
      +                           %d, master %d \n", normalised_values[i][RED], normalised_values[i][GREEN],normalised_va
      +                          lues[i][BLUE], master_closeness[i]);
  2244   010C90  C079  F060         	movff	make_master_closeness@buf,sprintf@s
  2245   010C94  C07A  F061         	movff	make_master_closeness@buf+1,sprintf@s+1
  2246   010C98  0E58               	movlw	low STR_6
  2247   010C9A  6F62               	movwf	sprintf@fmt& (0+255),b
  2248   010C9C  0EFF               	movlw	high STR_6
  2249   010C9E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2250   010CA0  505B               	movf	make_master_closeness@i^0,w,c
  2251   010CA2  0D06               	mullw	6
  2252   010CA4  CFF3 F07F          	movff	prodl,??_make_master_closeness
  2253   010CA8  CFF4 F080          	movff	prodh,??_make_master_closeness+1
  2254   010CAC  517F               	movf	??_make_master_closeness& (0+255),w,b
  2255   010CAE  257B               	addwf	make_master_closeness@normalised_values& (0+255),w,b
  2256   010CB0  6ED9               	movwf	fsr2l,c
  2257   010CB2  5180               	movf	(??_make_master_closeness+1)& (0+255),w,b
  2258   010CB4  217C               	addwfc	(make_master_closeness@normalised_values+1)& (0+255),w,b
  2259   010CB6  6EDA               	movwf	fsr2h,c
  2260   010CB8  CFDE F064          	movff	postinc2,?_sprintf+4
  2261   010CBC  CFDD F065          	movff	postdec2,?_sprintf+5
  2262   010CC0  505B               	movf	make_master_closeness@i^0,w,c
  2263   010CC2  0D06               	mullw	6
  2264   010CC4  CFF3 F081          	movff	prodl,??_make_master_closeness+2
  2265   010CC8  CFF4 F082          	movff	prodh,??_make_master_closeness+3
  2266   010CCC  5181               	movf	(??_make_master_closeness+2)& (0+255),w,b
  2267   010CCE  257B               	addwf	make_master_closeness@normalised_values& (0+255),w,b
  2268   010CD0  6F83               	movwf	(??_make_master_closeness+4)& (0+255),b
  2269   010CD2  5182               	movf	(??_make_master_closeness+3)& (0+255),w,b
  2270   010CD4  217C               	addwfc	(make_master_closeness@normalised_values+1)& (0+255),w,b
  2271   010CD6  6F84               	movwf	(??_make_master_closeness+5)& (0+255),b
  2272   010CD8  0E02               	movlw	2
  2273   010CDA  2583               	addwf	(??_make_master_closeness+4)& (0+255),w,b
  2274   010CDC  6ED9               	movwf	fsr2l,c
  2275   010CDE  0E00               	movlw	0
  2276   010CE0  2184               	addwfc	(??_make_master_closeness+5)& (0+255),w,b
  2277   010CE2  6EDA               	movwf	fsr2h,c
  2278   010CE4  CFDE F066          	movff	postinc2,?_sprintf+6
  2279   010CE8  CFDD F067          	movff	postdec2,?_sprintf+7
  2280   010CEC  505B               	movf	make_master_closeness@i^0,w,c
  2281   010CEE  0D06               	mullw	6
  2282   010CF0  CFF3 F085          	movff	prodl,??_make_master_closeness+6
  2283   010CF4  CFF4 F086          	movff	prodh,??_make_master_closeness+7
  2284   010CF8  5185               	movf	(??_make_master_closeness+6)& (0+255),w,b
  2285   010CFA  257B               	addwf	make_master_closeness@normalised_values& (0+255),w,b
  2286   010CFC  6F87               	movwf	(??_make_master_closeness+8)& (0+255),b
  2287   010CFE  5186               	movf	(??_make_master_closeness+7)& (0+255),w,b
  2288   010D00  217C               	addwfc	(make_master_closeness@normalised_values+1)& (0+255),w,b
  2289   010D02  6F88               	movwf	(??_make_master_closeness+9)& (0+255),b
  2290   010D04  0E04               	movlw	4
  2291   010D06  2587               	addwf	(??_make_master_closeness+8)& (0+255),w,b
  2292   010D08  6ED9               	movwf	fsr2l,c
  2293   010D0A  0E00               	movlw	0
  2294   010D0C  2188               	addwfc	(??_make_master_closeness+9)& (0+255),w,b
  2295   010D0E  6EDA               	movwf	fsr2h,c
  2296   010D10  CFDE F068          	movff	postinc2,?_sprintf+8
  2297   010D14  CFDD F069          	movff	postdec2,?_sprintf+9
  2298   010D18  505B               	movf	make_master_closeness@i^0,w,c
  2299   010D1A  0D02               	mullw	2
  2300   010D1C  CFF3 F089          	movff	prodl,??_make_master_closeness+10
  2301   010D20  CFF4 F08A          	movff	prodh,??_make_master_closeness+11
  2302   010D24  5189               	movf	(??_make_master_closeness+10)& (0+255),w,b
  2303   010D26  257D               	addwf	make_master_closeness@master_closeness& (0+255),w,b
  2304   010D28  6ED9               	movwf	fsr2l,c
  2305   010D2A  518A               	movf	(??_make_master_closeness+11)& (0+255),w,b
  2306   010D2C  217E               	addwfc	(make_master_closeness@master_closeness+1)& (0+255),w,b
  2307   010D2E  6EDA               	movwf	fsr2h,c
  2308   010D30  CFDE F06A          	movff	postinc2,?_sprintf+10
  2309   010D34  CFDD F06B          	movff	postdec2,?_sprintf+11
  2310   010D38  ECCD  F08B         	call	_sprintf	;wreg free
  2311   010D3C                     
  2312                           ;colour_identify.c: 96:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2313   010D3C  0E52               	movlw	82
  2314   010D3E  0100               	movlb	0	; () banked
  2315   010D40  6F80               	movwf	(??_make_master_closeness+1)& (0+255),b
  2316   010D42  0E2B               	movlw	43
  2317   010D44  6F7F               	movwf	??_make_master_closeness& (0+255),b
  2318   010D46  0E00               	movlw	0
  2319   010D48                     u1677:
  2320   010D48  2EE8               	decfsz	wreg,f,c
  2321   010D4A  D7FE               	bra	u1677
  2322   010D4C  2F7F               	decfsz	??_make_master_closeness& (0+255),f,b
  2323   010D4E  D7FC               	bra	u1677
  2324   010D50  2F80               	decfsz	(??_make_master_closeness+1)& (0+255),f,b
  2325   010D52  D7FA               	bra	u1677
  2326   010D54  F000               	nop	
  2327   010D56                     
  2328                           ;colour_identify.c: 97:         sendStringSerial4(buf);
  2329   010D56  C079  F002         	movff	make_master_closeness@buf,sendStringSerial4@string
  2330   010D5A  C07A  F003         	movff	make_master_closeness@buf+1,sendStringSerial4@string+1
  2331   010D5E  EC35  F08D         	call	_sendStringSerial4	;wreg free
  2332   010D62                     
  2333                           ;colour_identify.c: 98:     }
  2334   010D62  2A5B               	incf	make_master_closeness@i^0,f,c
  2335   010D64  0E08               	movlw	8
  2336   010D66  645B               	cpfsgt	make_master_closeness@i^0,c
  2337   010D68  EFB8  F086         	goto	u1491
  2338   010D6C  EFBA  F086         	goto	u1490
  2339   010D70                     u1491:
  2340   010D70  EFE8  F085         	goto	l2737
  2341   010D74                     u1490:
  2342   010D74  0012               	return		;funcret
  2343   010D76                     __end_of_make_master_closeness:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function _sprintf *****************
  2347 ;; Defined at:
  2348 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2351 ;;		 -> main@buf(20), 
  2352 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2353 ;;		 -> STR_6(59), STR_5(59), STR_4(60), STR_3(58), 
  2354 ;;		 -> STR_2(24), STR_1(26), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2357 ;;  ap              2   12[BANK0 ] PTR void [1]
  2358 ;;		 -> ?_sprintf(2), 
  2359 ;;  ret             2    0        int 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2    0[BANK0 ] int 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2369 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;Total ram usage:       25 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 7
  2376 ;; This function calls:
  2377 ;;		_vfprintf
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;;		_normalise_readings
  2381 ;;		_make_master_closeness
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text5
  2386   01179A                     __ptext5:
  2387                           	callstack 0
  2388   01179A                     _sprintf:
  2389                           	callstack 23
  2390   01179A  0E64               	movlw	low (?_sprintf+4)
  2391   01179C  0100               	movlb	0	; () banked
  2392   01179E  6F6C               	movwf	sprintf@ap& (0+255),b
  2393   0117A0  0E00               	movlw	high (?_sprintf+4)
  2394   0117A2  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2395   0117A4  C060  F06E         	movff	sprintf@s,sprintf@f
  2396   0117A8  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2397   0117AC                     
  2398                           ; BSR set to: 0
  2399   0117AC  0E00               	movlw	0
  2400   0117AE  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2401   0117B0  0E00               	movlw	0
  2402   0117B2  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2403   0117B4                     
  2404                           ; BSR set to: 0
  2405   0117B4  0E00               	movlw	0
  2406   0117B6  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2407   0117B8  0E00               	movlw	0
  2408   0117BA  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2409   0117BC                     
  2410                           ; BSR set to: 0
  2411   0117BC  0E6E               	movlw	low sprintf@f
  2412   0117BE  6E53               	movwf	vfprintf@fp^0,c
  2413   0117C0  0E00               	movlw	high sprintf@f
  2414   0117C2  6E54               	movwf	(vfprintf@fp+1)^0,c
  2415   0117C4  C062  F055         	movff	sprintf@fmt,vfprintf@fmt
  2416   0117C8  C063  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2417   0117CC  0E6C               	movlw	low sprintf@ap
  2418   0117CE  6E57               	movwf	vfprintf@ap^0,c
  2419   0117D0  0E00               	movlw	high sprintf@ap
  2420   0117D2  6E58               	movwf	(vfprintf@ap+1)^0,c
  2421   0117D4  ECF6  F08B         	call	_vfprintf	;wreg free
  2422   0117D8  0100               	movlb	0	; () banked
  2423   0117DA  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2424   0117DC  2560               	addwf	sprintf@s& (0+255),w,b
  2425   0117DE  6ED9               	movwf	fsr2l,c
  2426   0117E0  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2427   0117E2  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2428   0117E4  6EDA               	movwf	fsr2h,c
  2429   0117E6  0E00               	movlw	0
  2430   0117E8  6EDF               	movwf	indf2,c
  2431   0117EA                     
  2432                           ; BSR set to: 0
  2433   0117EA  0012               	return		;funcret
  2434   0117EC                     __end_of_sprintf:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _vfprintf *****************
  2438 ;; Defined at:
  2439 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  2442 ;;		 -> sprintf@f(11), 
  2443 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  2444 ;;		 -> STR_6(59), STR_5(59), STR_4(60), STR_3(58), 
  2445 ;;		 -> STR_2(24), STR_1(26), 
  2446 ;;  ap              2   86[COMRAM] PTR PTR void 
  2447 ;;		 -> sprintf@ap(2), 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  2450 ;;		 -> STR_6(59), STR_5(59), STR_4(60), STR_3(58), 
  2451 ;;		 -> STR_2(24), STR_1(26), 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2   82[COMRAM] int 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2461 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;Total ram usage:        8 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 6
  2468 ;; This function calls:
  2469 ;;		_vfpfcnvrt
  2470 ;; This function is called by:
  2471 ;;		_sprintf
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text6
  2476   0117EC                     __ptext6:
  2477                           	callstack 0
  2478   0117EC                     _vfprintf:
  2479                           	callstack 23
  2480   0117EC                     
  2481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2482   0117EC  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  2483   0117F0  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2486   0117F4  EF0A  F08C         	goto	l2435
  2487   0117F8                     l2433:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2490   0117F8  C053  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2491   0117FC  C054  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2492   011800  0E59               	movlw	low vfprintf@cfmt
  2493   011802  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2494   011804  0E00               	movlw	high vfprintf@cfmt
  2495   011806  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2496   011808  C057  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2497   01180C  C058  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2498   011810  ECE4  F082         	call	_vfpfcnvrt	;wreg free
  2499   011814                     l2435:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2502   011814  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  2503   011818  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2504   01181C                     	if	0	;tblptru may be non-zero
  2505   01181C                     	endif
  2506   01181C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2507   01181C  0E00               	movlw	low (__mediumconst shr (0+16))
  2508   01181E  6EF8               	movwf	tblptru,c
  2509   011820                     	endif
  2510   011820  0008               	tblrd		*
  2511   011822  50F5               	movf	tablat,w,c
  2512   011824  0900               	iorlw	0
  2513   011826  A4D8               	btfss	status,2,c
  2514   011828  EF18  F08C         	goto	u1331
  2515   01182C  EF1A  F08C         	goto	u1330
  2516   011830                     u1331:
  2517   011830  EFFC  F08B         	goto	l2433
  2518   011834                     u1330:
  2519   011834                     
  2520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2521   011834  0E00               	movlw	0
  2522   011836  6E54               	movwf	(?_vfprintf+1)^0,c
  2523   011838  0E00               	movlw	0
  2524   01183A  6E53               	movwf	?_vfprintf^0,c
  2525   01183C  0012               	return		;funcret
  2526   01183E                     __end_of_vfprintf:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _vfpfcnvrt *****************
  2530 ;; Defined at:
  2531 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2534 ;;		 -> sprintf@f(11), 
  2535 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2536 ;;		 -> vfprintf@cfmt(2), 
  2537 ;;  ap              2   66[COMRAM] PTR PTR void 
  2538 ;;		 -> sprintf@ap(2), 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  convarg         8   72[COMRAM] struct .
  2541 ;;  cp              2   80[COMRAM] PTR unsigned char 
  2542 ;;		 -> STR_6(59), STR_5(59), STR_4(60), STR_3(58), 
  2543 ;;		 -> STR_2(24), STR_1(26), 
  2544 ;;  i               2    0        int 
  2545 ;;  done            2    0        int 
  2546 ;;  c               1    0        unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2556 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;Total ram usage:       20 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; Hardware stack levels required when called: 5
  2563 ;; This function calls:
  2564 ;;		_dtoa
  2565 ;;		_fputc
  2566 ;;		_utoa
  2567 ;; This function is called by:
  2568 ;;		_vfprintf
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text7
  2573   0105C8                     __ptext7:
  2574                           	callstack 0
  2575   0105C8                     _vfpfcnvrt:
  2576                           	callstack 23
  2577   0105C8                     
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2579   0105C8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2580   0105CC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2581   0105D0  CFDE FFF6          	movff	postinc2,tblptrl
  2582   0105D4  CFDD FFF7          	movff	postdec2,tblptrh
  2583   0105D8                     	if	0	;tblptru may be non-zero
  2584   0105D8                     	endif
  2585   0105D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2586   0105D8  0E00               	movlw	low (__mediumconst shr (0+16))
  2587   0105DA  6EF8               	movwf	tblptru,c
  2588   0105DC                     	endif
  2589   0105DC  0008               	tblrd		*
  2590   0105DE  50F5               	movf	tablat,w,c
  2591   0105E0  0A25               	xorlw	37
  2592   0105E2  A4D8               	btfss	status,2,c
  2593   0105E4  EFF6  F082         	goto	u1261
  2594   0105E8  EFF8  F082         	goto	u1260
  2595   0105EC                     u1261:
  2596   0105EC  EFEA  F083         	goto	l2387
  2597   0105F0                     u1260:
  2598   0105F0                     
  2599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2600   0105F0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2601   0105F4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2602   0105F8  2ADE               	incf	postinc2,f,c
  2603   0105FA  0E00               	movlw	0
  2604   0105FC  22DD               	addwfc	postdec2,f,c
  2605   0105FE                     
  2606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2607   0105FE  0E00               	movlw	0
  2608   010600  0100               	movlb	0	; () banked
  2609   010602  6FF0               	movwf	(_width+1)& (0+255),b
  2610   010604  0E00               	movlw	0
  2611   010606  6FEF               	movwf	_width& (0+255),b
  2612   010608  C0EF  F0F3         	movff	_width,_flags
  2613   01060C                     
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2616   01060C  69F1               	setf	_prec& (0+255),b
  2617   01060E  69F2               	setf	(_prec+1)& (0+255),b
  2618   010610                     
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2621   010610  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622   010614  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623   010618  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  2624   01061C  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  2625   010620                     
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2628   010620  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2629   010624  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2630   010628                     	if	0	;tblptru may be non-zero
  2631   010628                     	endif
  2632   010628                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2633   010628  0E00               	movlw	low (__mediumconst shr (0+16))
  2634   01062A  6EF8               	movwf	tblptru,c
  2635   01062C                     	endif
  2636   01062C  0008               	tblrd		*
  2637   01062E  50F5               	movf	tablat,w,c
  2638   010630  0A64               	xorlw	100
  2639   010632  B4D8               	btfsc	status,2,c
  2640   010634  EF1E  F083         	goto	u1271
  2641   010638  EF20  F083         	goto	u1270
  2642   01063C                     u1271:
  2643   01063C  EF30  F083         	goto	l2365
  2644   010640                     u1270:
  2645   010640                     
  2646                           ; BSR set to: 0
  2647   010640  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2648   010644  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2649   010648                     	if	0	;tblptru may be non-zero
  2650   010648                     	endif
  2651   010648                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2652   010648  0E00               	movlw	low (__mediumconst shr (0+16))
  2653   01064A  6EF8               	movwf	tblptru,c
  2654   01064C                     	endif
  2655   01064C  0008               	tblrd		*
  2656   01064E  50F5               	movf	tablat,w,c
  2657   010650  0A69               	xorlw	105
  2658   010652  A4D8               	btfss	status,2,c
  2659   010654  EF2E  F083         	goto	u1281
  2660   010658  EF30  F083         	goto	u1280
  2661   01065C                     u1281:
  2662   01065C  EF73  F083         	goto	l2371
  2663   010660                     u1280:
  2664   010660                     l2365:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2668   010660  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2669   010664  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2670   010668  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2671   01066C  0E02               	movlw	2
  2672   01066E  26DE               	addwf	postinc2,f,c
  2673   010670  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2674   010674  0E00               	movlw	0
  2675   010676  22DD               	addwfc	postdec2,f,c
  2676   010678  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2677   01067C  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2678   010680  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  2679   010684  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  2680   010688  0E00               	movlw	0
  2681   01068A  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2682   01068C  0EFF               	movlw	-1
  2683   01068E  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2684   010690  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2685   010692  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2686   010694  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2687   010696  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2688   010698  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2691   01069A  0E01               	movlw	1
  2692   01069C  2451               	addwf	vfpfcnvrt@cp^0,w,c
  2693   01069E  6E45               	movwf	??_vfpfcnvrt^0,c
  2694   0106A0  0E00               	movlw	0
  2695   0106A2  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2696   0106A4  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2697   0106A6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2698   0106AA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2699   0106AE  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2700   0106B2  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2701   0106B6                     
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2704   0106B6  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2705   0106BA  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2706   0106BE  C049  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2707   0106C2  C04A  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2708   0106C6  C04B  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2709   0106CA  C04C  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2710   0106CE  C04D  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2711   0106D2  C04E  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2712   0106D6  C04F  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2713   0106DA  C050  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2714   0106DE  ECA5  F081         	call	_dtoa	;wreg free
  2715   0106E2  EF00  F084         	goto	l1166
  2716   0106E6                     l2371:
  2717                           
  2718                           ; BSR set to: 0
  2719   0106E6  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2720   0106EA  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2721   0106EE                     	if	0	;tblptru may be non-zero
  2722   0106EE                     	endif
  2723   0106EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2724   0106EE  0E00               	movlw	low (__mediumconst shr (0+16))
  2725   0106F0  6EF8               	movwf	tblptru,c
  2726   0106F2                     	endif
  2727   0106F2  0008               	tblrd		*
  2728   0106F4  50F5               	movf	tablat,w,c
  2729   0106F6  0A75               	xorlw	117
  2730   0106F8  A4D8               	btfss	status,2,c
  2731   0106FA  EF81  F083         	goto	u1291
  2732   0106FE  EF83  F083         	goto	u1290
  2733   010702                     u1291:
  2734   010702  EFE1  F083         	goto	l2383
  2735   010706                     u1290:
  2736   010706                     
  2737                           ; BSR set to: 0
  2738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2739   010706  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2740   01070A  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2741   01070E  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2742   010712  0E02               	movlw	2
  2743   010714  26DE               	addwf	postinc2,f,c
  2744   010716  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2745   01071A  0E00               	movlw	0
  2746   01071C  22DD               	addwfc	postdec2,f,c
  2747   01071E  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2748   010722  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2749   010726  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  2750   01072A  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  2751   01072E  C047  F049         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2752   010732  C048  F04A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2753   010736  6A4B               	clrf	(vfpfcnvrt@convarg+2)^0,c
  2754   010738  6A4C               	clrf	(vfpfcnvrt@convarg+3)^0,c
  2755   01073A  6A4D               	clrf	(vfpfcnvrt@convarg+4)^0,c
  2756   01073C  6A4E               	clrf	(vfpfcnvrt@convarg+5)^0,c
  2757   01073E  6A4F               	clrf	(vfpfcnvrt@convarg+6)^0,c
  2758   010740  6A50               	clrf	(vfpfcnvrt@convarg+7)^0,c
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2761   010742  0E01               	movlw	1
  2762   010744  2451               	addwf	vfpfcnvrt@cp^0,w,c
  2763   010746  6E45               	movwf	??_vfpfcnvrt^0,c
  2764   010748  0E00               	movlw	0
  2765   01074A  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2766   01074C  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2767   01074E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2768   010752  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2769   010756  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2770   01075A  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2773   01075E  EFC9  F083         	goto	l2381
  2774   010762                     l2375:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2778   010762  C03F  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2779   010766  C040  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2780   01076A  C049  F01E         	movff	vfpfcnvrt@convarg,utoa@d
  2781   01076E  C04A  F01F         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2782   010772  C04B  F020         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  2783   010776  C04C  F021         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  2784   01077A  C04D  F022         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  2785   01077E  C04E  F023         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  2786   010782  C04F  F024         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  2787   010786  C050  F025         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  2788   01078A  EC05  F085         	call	_utoa	;wreg free
  2789   01078E  EF00  F084         	goto	l1166
  2790   010792                     l2381:
  2791                           
  2792                           ; BSR set to: 0
  2793   010792  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2794   010796  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2795   01079A                     	if	0	;tblptru may be non-zero
  2796   01079A                     	endif
  2797   01079A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2798   01079A  0E00               	movlw	low (__mediumconst shr (0+16))
  2799   01079C  6EF8               	movwf	tblptru,c
  2800   01079E                     	endif
  2801   01079E  0008               	tblrd		*
  2802   0107A0  50F5               	movf	tablat,w,c
  2803   0107A2  6E45               	movwf	??_vfpfcnvrt^0,c
  2804   0107A4  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  2805                           
  2806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2807                           ; Switch size 1, requested type "simple"
  2808                           ; Number of cases is 1, Range of values is 0 to 0
  2809                           ; switch strategies available:
  2810                           ; Name         Instructions Cycles
  2811                           ; simple_byte            4     3 (average)
  2812                           ;	Chosen strategy is simple_byte
  2813   0107A6  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  2814   0107A8  0A00               	xorlw	0	; case 0
  2815   0107AA  B4D8               	btfsc	status,2,c
  2816   0107AC  EFDA  F083         	goto	l2999
  2817   0107B0  EFE1  F083         	goto	l2383
  2818   0107B4                     l2999:
  2819                           
  2820                           ; BSR set to: 0
  2821                           ; Switch size 1, requested type "simple"
  2822                           ; Number of cases is 1, Range of values is 117 to 117
  2823                           ; switch strategies available:
  2824                           ; Name         Instructions Cycles
  2825                           ; simple_byte            4     3 (average)
  2826                           ;	Chosen strategy is simple_byte
  2827   0107B4  5045               	movf	??_vfpfcnvrt^0,w,c
  2828   0107B6  0A75               	xorlw	117	; case 117
  2829   0107B8  B4D8               	btfsc	status,2,c
  2830   0107BA  EFB1  F083         	goto	l2375
  2831   0107BE  EFE1  F083         	goto	l2383
  2832   0107C2                     l2383:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2835   0107C2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2836   0107C6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2837   0107CA  2ADE               	incf	postinc2,f,c
  2838   0107CC  0E00               	movlw	0
  2839   0107CE  22DD               	addwfc	postdec2,f,c
  2840   0107D0  EF00  F084         	goto	l1166
  2841   0107D4                     l2387:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2844   0107D4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2845   0107D8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2846   0107DC  CFDE FFF6          	movff	postinc2,tblptrl
  2847   0107E0  CFDD FFF7          	movff	postdec2,tblptrh
  2848   0107E4                     	if	0	;tblptru may be non-zero
  2849   0107E4                     	endif
  2850   0107E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2851   0107E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2852   0107E6  6EF8               	movwf	tblptru,c
  2853   0107E8                     	endif
  2854   0107E8  0008               	tblrd		*
  2855   0107EA  50F5               	movf	tablat,w,c
  2856   0107EC  6E01               	movwf	fputc@c^0,c
  2857   0107EE  6A02               	clrf	(fputc@c+1)^0,c
  2858   0107F0  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2859   0107F4  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2860   0107F8  EC6D  F08A         	call	_fputc	;wreg free
  2861   0107FC  EFE1  F083         	goto	l2383
  2862   010800                     l1166:
  2863   010800  0012               	return		;funcret
  2864   010802                     __end_of_vfpfcnvrt:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _utoa *****************
  2868 ;; Defined at:
  2869 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2872 ;;		 -> sprintf@f(11), 
  2873 ;;  d               8   29[COMRAM] unsigned long long 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  n               8   49[COMRAM] unsigned long long 
  2876 ;;  i               2   57[COMRAM] int 
  2877 ;;  p               2   47[COMRAM] int 
  2878 ;;  w               2   45[COMRAM] int 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2888 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;Total ram usage:       32 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 4
  2895 ;; This function calls:
  2896 ;;		___lodiv
  2897 ;;		___lomod
  2898 ;;		_pad
  2899 ;; This function is called by:
  2900 ;;		_vfpfcnvrt
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text8
  2905   010A0A                     __ptext8:
  2906                           	callstack 0
  2907   010A0A                     _utoa:
  2908                           	callstack 23
  2909   010A0A                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  2911   010A0A  0100               	movlb	0	; () banked
  2912   010A0C  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  2913   010A0E  EF13  F085         	goto	u1200
  2914   010A12  51F2               	movf	(_prec+1)& (0+255),w,b
  2915   010A14  E106               	bnz	u1201
  2916   010A16  05F1               	decf	_prec& (0+255),w,b
  2917   010A18  B0D8               	btfsc	status,0,c
  2918   010A1A  EF11  F085         	goto	u1201
  2919   010A1E  EF13  F085         	goto	u1200
  2920   010A22                     u1201:
  2921   010A22  EF19  F085         	goto	l1151
  2922   010A26                     u1200:
  2923   010A26                     
  2924                           ; BSR set to: 0
  2925   010A26  0E00               	movlw	0
  2926   010A28  6E31               	movwf	(utoa@p+1)^0,c
  2927   010A2A  0E01               	movlw	1
  2928   010A2C  6E30               	movwf	utoa@p^0,c
  2929   010A2E  EF1D  F085         	goto	l1153
  2930   010A32                     l1151:
  2931                           
  2932                           ; BSR set to: 0
  2933   010A32  C0F1  F030         	movff	_prec,utoa@p
  2934   010A36  C0F2  F031         	movff	_prec+1,utoa@p+1
  2935   010A3A                     l1153:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  2939   010A3A  C0EF  F02E         	movff	_width,utoa@w
  2940   010A3E  C0F0  F02F         	movff	_width+1,utoa@w+1
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  2943   010A42  C01E  F032         	movff	utoa@d,utoa@n
  2944   010A46  C01F  F033         	movff	utoa@d+1,utoa@n+1
  2945   010A4A  C020  F034         	movff	utoa@d+2,utoa@n+2
  2946   010A4E  C021  F035         	movff	utoa@d+3,utoa@n+3
  2947   010A52  C022  F036         	movff	utoa@d+4,utoa@n+4
  2948   010A56  C023  F037         	movff	utoa@d+5,utoa@n+5
  2949   010A5A  C024  F038         	movff	utoa@d+6,utoa@n+6
  2950   010A5E  C025  F039         	movff	utoa@d+7,utoa@n+7
  2951   010A62                     
  2952                           ; BSR set to: 0
  2953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  2954   010A62  0E00               	movlw	0
  2955   010A64  6E3B               	movwf	(utoa@i+1)^0,c
  2956   010A66  0E1F               	movlw	31
  2957   010A68  6E3A               	movwf	utoa@i^0,c
  2958   010A6A                     
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  2961   010A6A  0E00               	movlw	0
  2962   010A6C  0101               	movlb	1	; () banked
  2963   010A6E  6F6F               	movwf	(_dbuf+31)& (0+255),b
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2966   010A70  EFB0  F085         	goto	l2337
  2967   010A74                     l2327:
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  2970   010A74  063A               	decf	utoa@i^0,f,c
  2971   010A76  A0D8               	btfss	status,0,c
  2972   010A78  063B               	decf	(utoa@i+1)^0,f,c
  2973   010A7A                     
  2974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  2975   010A7A  0E50               	movlw	low _dbuf
  2976   010A7C  243A               	addwf	utoa@i^0,w,c
  2977   010A7E  6ED9               	movwf	fsr2l,c
  2978   010A80  0E01               	movlw	high _dbuf
  2979   010A82  203B               	addwfc	(utoa@i+1)^0,w,c
  2980   010A84  6EDA               	movwf	fsr2h,c
  2981   010A86  C032  F001         	movff	utoa@n,___lomod@dividend
  2982   010A8A  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  2983   010A8E  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  2984   010A92  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  2985   010A96  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  2986   010A9A  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  2987   010A9E  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  2988   010AA2  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  2989   010AA6  0E0A               	movlw	10
  2990   010AA8  6E09               	movwf	___lomod@divisor^0,c
  2991   010AAA  0E00               	movlw	0
  2992   010AAC  6E0A               	movwf	(___lomod@divisor+1)^0,c
  2993   010AAE  0E00               	movlw	0
  2994   010AB0  6E0B               	movwf	(___lomod@divisor+2)^0,c
  2995   010AB2  0E00               	movlw	0
  2996   010AB4  6E0C               	movwf	(___lomod@divisor+3)^0,c
  2997   010AB6  0E00               	movlw	0
  2998   010AB8  6E0D               	movwf	(___lomod@divisor+4)^0,c
  2999   010ABA  0E00               	movlw	0
  3000   010ABC  6E0E               	movwf	(___lomod@divisor+5)^0,c
  3001   010ABE  0E00               	movlw	0
  3002   010AC0  6E0F               	movwf	(___lomod@divisor+6)^0,c
  3003   010AC2  0E00               	movlw	0
  3004   010AC4  6E10               	movwf	(___lomod@divisor+7)^0,c
  3005   010AC6  EC05  F08A         	call	___lomod	;wreg free
  3006   010ACA  C001  F026         	movff	?___lomod,??_utoa
  3007   010ACE  C002  F027         	movff	?___lomod+1,??_utoa+1
  3008   010AD2  C003  F028         	movff	?___lomod+2,??_utoa+2
  3009   010AD6  C004  F029         	movff	?___lomod+3,??_utoa+3
  3010   010ADA  C005  F02A         	movff	?___lomod+4,??_utoa+4
  3011   010ADE  C006  F02B         	movff	?___lomod+5,??_utoa+5
  3012   010AE2  C007  F02C         	movff	?___lomod+6,??_utoa+6
  3013   010AE6  C008  F02D         	movff	?___lomod+7,??_utoa+7
  3014   010AEA  5026               	movf	??_utoa^0,w,c
  3015   010AEC  0F30               	addlw	48
  3016   010AEE  6EDF               	movwf	indf2,c
  3017   010AF0                     
  3018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  3019   010AF0  0630               	decf	utoa@p^0,f,c
  3020   010AF2  A0D8               	btfss	status,0,c
  3021   010AF4  0631               	decf	(utoa@p+1)^0,f,c
  3022   010AF6                     
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  3024   010AF6  062E               	decf	utoa@w^0,f,c
  3025   010AF8  A0D8               	btfss	status,0,c
  3026   010AFA  062F               	decf	(utoa@w+1)^0,f,c
  3027   010AFC                     
  3028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  3029   010AFC  C032  F001         	movff	utoa@n,___lodiv@dividend
  3030   010B00  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  3031   010B04  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  3032   010B08  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  3033   010B0C  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  3034   010B10  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  3035   010B14  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  3036   010B18  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  3037   010B1C  0E0A               	movlw	10
  3038   010B1E  6E09               	movwf	___lodiv@divisor^0,c
  3039   010B20  0E00               	movlw	0
  3040   010B22  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  3041   010B24  0E00               	movlw	0
  3042   010B26  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  3043   010B28  0E00               	movlw	0
  3044   010B2A  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  3045   010B2C  0E00               	movlw	0
  3046   010B2E  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  3047   010B30  0E00               	movlw	0
  3048   010B32  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  3049   010B34  0E00               	movlw	0
  3050   010B36  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  3051   010B38  0E00               	movlw	0
  3052   010B3A  6E10               	movwf	(___lodiv@divisor+7)^0,c
  3053   010B3C  EC8D  F089         	call	___lodiv	;wreg free
  3054   010B40  C001  F032         	movff	?___lodiv,utoa@n
  3055   010B44  C002  F033         	movff	?___lodiv+1,utoa@n+1
  3056   010B48  C003  F034         	movff	?___lodiv+2,utoa@n+2
  3057   010B4C  C004  F035         	movff	?___lodiv+3,utoa@n+3
  3058   010B50  C005  F036         	movff	?___lodiv+4,utoa@n+4
  3059   010B54  C006  F037         	movff	?___lodiv+5,utoa@n+5
  3060   010B58  C007  F038         	movff	?___lodiv+6,utoa@n+6
  3061   010B5C  C008  F039         	movff	?___lodiv+7,utoa@n+7
  3062   010B60                     l2337:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3065   010B60  503A               	movf	utoa@i^0,w,c
  3066   010B62  103B               	iorwf	(utoa@i+1)^0,w,c
  3067   010B64  B4D8               	btfsc	status,2,c
  3068   010B66  EFB7  F085         	goto	u1211
  3069   010B6A  EFB9  F085         	goto	u1210
  3070   010B6E                     u1211:
  3071   010B6E  EFD5  F085         	goto	l2343
  3072   010B72                     u1210:
  3073   010B72  5032               	movf	utoa@n^0,w,c
  3074   010B74  1033               	iorwf	(utoa@n+1)^0,w,c
  3075   010B76  1034               	iorwf	(utoa@n+2)^0,w,c
  3076   010B78  1035               	iorwf	(utoa@n+3)^0,w,c
  3077   010B7A  1036               	iorwf	(utoa@n+4)^0,w,c
  3078   010B7C  1037               	iorwf	(utoa@n+5)^0,w,c
  3079   010B7E  1038               	iorwf	(utoa@n+6)^0,w,c
  3080   010B80  1039               	iorwf	(utoa@n+7)^0,w,c
  3081   010B82  A4D8               	btfss	status,2,c
  3082   010B84  EFC6  F085         	goto	u1221
  3083   010B88  EFC8  F085         	goto	u1220
  3084   010B8C                     u1221:
  3085   010B8C  EF3A  F085         	goto	l2327
  3086   010B90                     u1220:
  3087   010B90  BE31               	btfsc	(utoa@p+1)^0,7,c
  3088   010B92  EFD5  F085         	goto	u1230
  3089   010B96  5031               	movf	(utoa@p+1)^0,w,c
  3090   010B98  E106               	bnz	u1231
  3091   010B9A  0430               	decf	utoa@p^0,w,c
  3092   010B9C  B0D8               	btfsc	status,0,c
  3093   010B9E  EFD3  F085         	goto	u1231
  3094   010BA2  EFD5  F085         	goto	u1230
  3095   010BA6                     u1231:
  3096   010BA6  EF3A  F085         	goto	l2327
  3097   010BAA                     u1230:
  3098   010BAA                     l2343:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3101   010BAA  C01C  F011         	movff	utoa@fp,pad@fp
  3102   010BAE  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  3103   010BB2  0E50               	movlw	low _dbuf
  3104   010BB4  243A               	addwf	utoa@i^0,w,c
  3105   010BB6  6E13               	movwf	pad@buf^0,c
  3106   010BB8  0E01               	movlw	high _dbuf
  3107   010BBA  203B               	addwfc	(utoa@i+1)^0,w,c
  3108   010BBC  6E14               	movwf	(pad@buf+1)^0,c
  3109   010BBE  C02E  F015         	movff	utoa@w,pad@p
  3110   010BC2  C02F  F016         	movff	utoa@w+1,pad@p+1
  3111   010BC6  EC56  F08B         	call	_pad	;wreg free
  3112   010BCA  0012               	return		;funcret
  3113   010BCC                     __end_of_utoa:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function ___lomod *****************
  3117 ;; Defined at:
  3118 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  dividend        8    0[COMRAM] unsigned long long 
  3121 ;;  divisor         8    8[COMRAM] unsigned long long 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  counter         1   16[COMRAM] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  8    0[COMRAM] unsigned long long 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3133 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;Total ram usage:       17 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_utoa
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text9
  3147   01140A                     __ptext9:
  3148                           	callstack 0
  3149   01140A                     ___lomod:
  3150                           	callstack 26
  3151   01140A  5009               	movf	___lomod@divisor^0,w,c
  3152   01140C  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  3153   01140E  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  3154   011410  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  3155   011412  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  3156   011414  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  3157   011416  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  3158   011418  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  3159   01141A  B4D8               	btfsc	status,2,c
  3160   01141C  EF12  F08A         	goto	u1051
  3161   011420  EF14  F08A         	goto	u1050
  3162   011424                     u1051:
  3163   011424  EF5C  F08A         	goto	l865
  3164   011428                     u1050:
  3165   011428  0E01               	movlw	1
  3166   01142A  6E11               	movwf	___lomod@counter^0,c
  3167   01142C  EF22  F08A         	goto	l2243
  3168   011430                     l2241:
  3169   011430  90D8               	bcf	status,0,c
  3170   011432  3609               	rlcf	___lomod@divisor^0,f,c
  3171   011434  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  3172   011436  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  3173   011438  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  3174   01143A  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  3175   01143C  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  3176   01143E  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  3177   011440  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  3178   011442  2A11               	incf	___lomod@counter^0,f,c
  3179   011444                     l2243:
  3180   011444  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  3181   011446  EF27  F08A         	goto	u1061
  3182   01144A  EF29  F08A         	goto	u1060
  3183   01144E                     u1061:
  3184   01144E  EF18  F08A         	goto	l2241
  3185   011452                     u1060:
  3186   011452                     l2245:
  3187   011452  5009               	movf	___lomod@divisor^0,w,c
  3188   011454  5C01               	subwf	___lomod@dividend^0,w,c
  3189   011456  500A               	movf	(___lomod@divisor+1)^0,w,c
  3190   011458  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  3191   01145A  500B               	movf	(___lomod@divisor+2)^0,w,c
  3192   01145C  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  3193   01145E  500C               	movf	(___lomod@divisor+3)^0,w,c
  3194   011460  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  3195   011462  500D               	movf	(___lomod@divisor+4)^0,w,c
  3196   011464  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  3197   011466  500E               	movf	(___lomod@divisor+5)^0,w,c
  3198   011468  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  3199   01146A  500F               	movf	(___lomod@divisor+6)^0,w,c
  3200   01146C  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  3201   01146E  5010               	movf	(___lomod@divisor+7)^0,w,c
  3202   011470  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  3203   011472  A0D8               	btfss	status,0,c
  3204   011474  EF3E  F08A         	goto	u1071
  3205   011478  EF40  F08A         	goto	u1070
  3206   01147C                     u1071:
  3207   01147C  EF50  F08A         	goto	l2249
  3208   011480                     u1070:
  3209   011480  5009               	movf	___lomod@divisor^0,w,c
  3210   011482  5E01               	subwf	___lomod@dividend^0,f,c
  3211   011484  500A               	movf	(___lomod@divisor+1)^0,w,c
  3212   011486  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  3213   011488  500B               	movf	(___lomod@divisor+2)^0,w,c
  3214   01148A  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  3215   01148C  500C               	movf	(___lomod@divisor+3)^0,w,c
  3216   01148E  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  3217   011490  500D               	movf	(___lomod@divisor+4)^0,w,c
  3218   011492  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  3219   011494  500E               	movf	(___lomod@divisor+5)^0,w,c
  3220   011496  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  3221   011498  500F               	movf	(___lomod@divisor+6)^0,w,c
  3222   01149A  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  3223   01149C  5010               	movf	(___lomod@divisor+7)^0,w,c
  3224   01149E  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  3225   0114A0                     l2249:
  3226   0114A0  90D8               	bcf	status,0,c
  3227   0114A2  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  3228   0114A4  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  3229   0114A6  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  3230   0114A8  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  3231   0114AA  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  3232   0114AC  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  3233   0114AE  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  3234   0114B0  3209               	rrcf	___lomod@divisor^0,f,c
  3235   0114B2  2E11               	decfsz	___lomod@counter^0,f,c
  3236   0114B4  EF29  F08A         	goto	l2245
  3237   0114B8                     l865:
  3238   0114B8  C001  F001         	movff	___lomod@dividend,?___lomod
  3239   0114BC  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  3240   0114C0  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  3241   0114C4  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  3242   0114C8  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  3243   0114CC  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  3244   0114D0  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  3245   0114D4  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  3246   0114D8  0012               	return		;funcret
  3247   0114DA                     __end_of___lomod:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function ___lodiv *****************
  3251 ;; Defined at:
  3252 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  dividend        8    0[COMRAM] unsigned long long 
  3255 ;;  divisor         8    8[COMRAM] unsigned long long 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  quotient        8   16[COMRAM] unsigned long long 
  3258 ;;  counter         1   24[COMRAM] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  8    0[COMRAM] unsigned long long 
  3261 ;; Registers used:
  3262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3268 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;Total ram usage:       25 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_utoa
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text10
  3282   01131A                     __ptext10:
  3283                           	callstack 0
  3284   01131A                     ___lodiv:
  3285                           	callstack 26
  3286   01131A  EE20  F011         	lfsr	2,___lodiv@quotient
  3287   01131E  0E07               	movlw	7
  3288   011320                     u1011:
  3289   011320  6ADE               	clrf	postinc2,c
  3290   011322  06E8               	decf	wreg,f,c
  3291   011324  E2FD               	bc	u1011
  3292   011326  5009               	movf	___lodiv@divisor^0,w,c
  3293   011328  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  3294   01132A  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  3295   01132C  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  3296   01132E  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  3297   011330  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  3298   011332  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  3299   011334  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  3300   011336  B4D8               	btfsc	status,2,c
  3301   011338  EFA0  F089         	goto	u1021
  3302   01133C  EFA2  F089         	goto	u1020
  3303   011340                     u1021:
  3304   011340  EFF4  F089         	goto	l855
  3305   011344                     u1020:
  3306   011344  0E01               	movlw	1
  3307   011346  6E19               	movwf	___lodiv@counter^0,c
  3308   011348  EFB0  F089         	goto	l2223
  3309   01134C                     l2221:
  3310   01134C  90D8               	bcf	status,0,c
  3311   01134E  3609               	rlcf	___lodiv@divisor^0,f,c
  3312   011350  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  3313   011352  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  3314   011354  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  3315   011356  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  3316   011358  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  3317   01135A  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  3318   01135C  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  3319   01135E  2A19               	incf	___lodiv@counter^0,f,c
  3320   011360                     l2223:
  3321   011360  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  3322   011362  EFB5  F089         	goto	u1031
  3323   011366  EFB7  F089         	goto	u1030
  3324   01136A                     u1031:
  3325   01136A  EFA6  F089         	goto	l2221
  3326   01136E                     u1030:
  3327   01136E                     l2225:
  3328   01136E  90D8               	bcf	status,0,c
  3329   011370  3611               	rlcf	___lodiv@quotient^0,f,c
  3330   011372  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  3331   011374  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  3332   011376  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  3333   011378  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  3334   01137A  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  3335   01137C  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  3336   01137E  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  3337   011380  5009               	movf	___lodiv@divisor^0,w,c
  3338   011382  5C01               	subwf	___lodiv@dividend^0,w,c
  3339   011384  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3340   011386  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  3341   011388  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3342   01138A  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  3343   01138C  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3344   01138E  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  3345   011390  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3346   011392  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  3347   011394  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3348   011396  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  3349   011398  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3350   01139A  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  3351   01139C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3352   01139E  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  3353   0113A0  A0D8               	btfss	status,0,c
  3354   0113A2  EFD5  F089         	goto	u1041
  3355   0113A6  EFD7  F089         	goto	u1040
  3356   0113AA                     u1041:
  3357   0113AA  EFE8  F089         	goto	l2233
  3358   0113AE                     u1040:
  3359   0113AE  5009               	movf	___lodiv@divisor^0,w,c
  3360   0113B0  5E01               	subwf	___lodiv@dividend^0,f,c
  3361   0113B2  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3362   0113B4  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  3363   0113B6  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3364   0113B8  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  3365   0113BA  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3366   0113BC  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  3367   0113BE  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3368   0113C0  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  3369   0113C2  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3370   0113C4  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  3371   0113C6  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3372   0113C8  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  3373   0113CA  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3374   0113CC  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  3375   0113CE  8011               	bsf	___lodiv@quotient^0,0,c
  3376   0113D0                     l2233:
  3377   0113D0  90D8               	bcf	status,0,c
  3378   0113D2  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  3379   0113D4  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  3380   0113D6  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  3381   0113D8  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  3382   0113DA  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  3383   0113DC  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  3384   0113DE  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  3385   0113E0  3209               	rrcf	___lodiv@divisor^0,f,c
  3386   0113E2  2E19               	decfsz	___lodiv@counter^0,f,c
  3387   0113E4  EFB7  F089         	goto	l2225
  3388   0113E8                     l855:
  3389   0113E8  C011  F001         	movff	___lodiv@quotient,?___lodiv
  3390   0113EC  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  3391   0113F0  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  3392   0113F4  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  3393   0113F8  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  3394   0113FC  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  3395   011400  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  3396   011404  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  3397   011408  0012               	return		;funcret
  3398   01140A                     __end_of___lodiv:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function _dtoa *****************
  3402 ;; Defined at:
  3403 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3406 ;;		 -> sprintf@f(11), 
  3407 ;;  d               8   29[COMRAM] long long 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  n               8   51[COMRAM] long long 
  3410 ;;  i               2   59[COMRAM] int 
  3411 ;;  w               2   49[COMRAM] int 
  3412 ;;  p               2   47[COMRAM] int 
  3413 ;;  s               1   61[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3423 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3424 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3426 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3427 ;;Total ram usage:       35 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 4
  3430 ;; This function calls:
  3431 ;;		___aodiv
  3432 ;;		___aomod
  3433 ;;		_abs
  3434 ;;		_pad
  3435 ;; This function is called by:
  3436 ;;		_vfpfcnvrt
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text11
  3441   01034A                     __ptext11:
  3442                           	callstack 0
  3443   01034A                     _dtoa:
  3444                           	callstack 23
  3445   01034A                     
  3446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3447   01034A  C01E  F034         	movff	dtoa@d,dtoa@n
  3448   01034E  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  3449   010352  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  3450   010356  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  3451   01035A  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  3452   01035E  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  3453   010362  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  3454   010366  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  3455   01036A                     
  3456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3457   01036A  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  3458   01036C  EFBA  F081         	goto	u1101
  3459   010370  EFBD  F081         	goto	u1100
  3460   010374                     u1101:
  3461   010374  0E01               	movlw	1
  3462   010376  EFBE  F081         	goto	u1110
  3463   01037A                     u1100:
  3464   01037A  0E00               	movlw	0
  3465   01037C                     u1110:
  3466   01037C  6E3E               	movwf	dtoa@s^0,c
  3467   01037E                     
  3468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3469   01037E  503E               	movf	dtoa@s^0,w,c
  3470   010380  B4D8               	btfsc	status,2,c
  3471   010382  EFC5  F081         	goto	u1121
  3472   010386  EFC7  F081         	goto	u1120
  3473   01038A                     u1121:
  3474   01038A  EFD7  F081         	goto	l2275
  3475   01038E                     u1120:
  3476   01038E                     
  3477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3478   01038E  1E3B               	comf	(dtoa@n+7)^0,f,c
  3479   010390  1E3A               	comf	(dtoa@n+6)^0,f,c
  3480   010392  1E39               	comf	(dtoa@n+5)^0,f,c
  3481   010394  1E38               	comf	(dtoa@n+4)^0,f,c
  3482   010396  1E37               	comf	(dtoa@n+3)^0,f,c
  3483   010398  1E36               	comf	(dtoa@n+2)^0,f,c
  3484   01039A  1E35               	comf	(dtoa@n+1)^0,f,c
  3485   01039C  6C34               	negf	dtoa@n^0,c
  3486   01039E  0E00               	movlw	0
  3487   0103A0  2235               	addwfc	(dtoa@n+1)^0,f,c
  3488   0103A2  2236               	addwfc	(dtoa@n+2)^0,f,c
  3489   0103A4  2237               	addwfc	(dtoa@n+3)^0,f,c
  3490   0103A6  2238               	addwfc	(dtoa@n+4)^0,f,c
  3491   0103A8  2239               	addwfc	(dtoa@n+5)^0,f,c
  3492   0103AA  223A               	addwfc	(dtoa@n+6)^0,f,c
  3493   0103AC  223B               	addwfc	(dtoa@n+7)^0,f,c
  3494   0103AE                     l2275:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3497   0103AE  0100               	movlb	0	; () banked
  3498   0103B0  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  3499   0103B2  EFE5  F081         	goto	u1130
  3500   0103B6  51F2               	movf	(_prec+1)& (0+255),w,b
  3501   0103B8  E106               	bnz	u1131
  3502   0103BA  05F1               	decf	_prec& (0+255),w,b
  3503   0103BC  B0D8               	btfsc	status,0,c
  3504   0103BE  EFE3  F081         	goto	u1131
  3505   0103C2  EFE5  F081         	goto	u1130
  3506   0103C6                     u1131:
  3507   0103C6  EFEB  F081         	goto	l1133
  3508   0103CA                     u1130:
  3509   0103CA                     
  3510                           ; BSR set to: 0
  3511   0103CA  0E00               	movlw	0
  3512   0103CC  6E31               	movwf	(dtoa@p+1)^0,c
  3513   0103CE  0E01               	movlw	1
  3514   0103D0  6E30               	movwf	dtoa@p^0,c
  3515   0103D2  EFEF  F081         	goto	l1135
  3516   0103D6                     l1133:
  3517                           
  3518                           ; BSR set to: 0
  3519   0103D6  C0F1  F030         	movff	_prec,dtoa@p
  3520   0103DA  C0F2  F031         	movff	_prec+1,dtoa@p+1
  3521   0103DE                     l1135:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3525   0103DE  C0EF  F032         	movff	_width,dtoa@w
  3526   0103E2  C0F0  F033         	movff	_width+1,dtoa@w+1
  3527   0103E6                     
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3530   0103E6  503E               	movf	dtoa@s^0,w,c
  3531   0103E8  B4D8               	btfsc	status,2,c
  3532   0103EA  EFF9  F081         	goto	u1141
  3533   0103EE  EFFB  F081         	goto	u1140
  3534   0103F2                     u1141:
  3535   0103F2  EF12  F082         	goto	l1136
  3536   0103F6                     u1140:
  3537   0103F6                     
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3540   0103F6  0632               	decf	dtoa@w^0,f,c
  3541   0103F8  A0D8               	btfss	status,0,c
  3542   0103FA  0633               	decf	(dtoa@w+1)^0,f,c
  3543   0103FC                     
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3546   0103FC  503E               	movf	dtoa@s^0,w,c
  3547   0103FE  A4D8               	btfss	status,2,c
  3548   010400  EF04  F082         	goto	u1151
  3549   010404  EF06  F082         	goto	u1150
  3550   010408                     u1151:
  3551   010408  EF0C  F082         	goto	l2287
  3552   01040C                     u1150:
  3553   01040C                     
  3554                           ; BSR set to: 0
  3555   01040C  0E00               	movlw	0
  3556   01040E  6E2F               	movwf	(_dtoa$2211+1)^0,c
  3557   010410  0E2B               	movlw	43
  3558   010412  6E2E               	movwf	_dtoa$2211^0,c
  3559   010414  EF10  F082         	goto	l2289
  3560   010418                     l2287:
  3561                           
  3562                           ; BSR set to: 0
  3563   010418  0E00               	movlw	0
  3564   01041A  6E2F               	movwf	(_dtoa$2211+1)^0,c
  3565   01041C  0E2D               	movlw	45
  3566   01041E  6E2E               	movwf	_dtoa$2211^0,c
  3567   010420                     l2289:
  3568                           
  3569                           ; BSR set to: 0
  3570   010420  C02E  F03E         	movff	_dtoa$2211,dtoa@s
  3571   010424                     l1136:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3575   010424  0E00               	movlw	0
  3576   010426  6E3D               	movwf	(dtoa@i+1)^0,c
  3577   010428  0E1F               	movlw	31
  3578   01042A  6E3C               	movwf	dtoa@i^0,c
  3579   01042C                     
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3582   01042C  0E00               	movlw	0
  3583   01042E  0101               	movlb	1	; () banked
  3584   010430  6F6F               	movwf	(_dbuf+31)& (0+255),b
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3587   010432  EF97  F082         	goto	l2303
  3588   010436                     l2293:
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3591   010436  063C               	decf	dtoa@i^0,f,c
  3592   010438  A0D8               	btfss	status,0,c
  3593   01043A  063D               	decf	(dtoa@i+1)^0,f,c
  3594   01043C                     
  3595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3596   01043C  0E50               	movlw	low _dbuf
  3597   01043E  243C               	addwf	dtoa@i^0,w,c
  3598   010440  6ED9               	movwf	fsr2l,c
  3599   010442  0E01               	movlw	high _dbuf
  3600   010444  203D               	addwfc	(dtoa@i+1)^0,w,c
  3601   010446  6EDA               	movwf	fsr2h,c
  3602   010448  C034  F001         	movff	dtoa@n,___aomod@dividend
  3603   01044C  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3604   010450  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3605   010454  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3606   010458  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3607   01045C  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3608   010460  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3609   010464  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3610   010468  0E0A               	movlw	10
  3611   01046A  6E09               	movwf	___aomod@divisor^0,c
  3612   01046C  0E00               	movlw	0
  3613   01046E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3614   010470  0E00               	movlw	0
  3615   010472  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3616   010474  0E00               	movlw	0
  3617   010476  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3618   010478  0E00               	movlw	0
  3619   01047A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3620   01047C  0E00               	movlw	0
  3621   01047E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3622   010480  0E00               	movlw	0
  3623   010482  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3624   010484  0E00               	movlw	0
  3625   010486  6E10               	movwf	(___aomod@divisor+7)^0,c
  3626   010488  EC35  F088         	call	___aomod	;wreg free
  3627   01048C  C001  F026         	movff	?___aomod,??_dtoa
  3628   010490  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3629   010494  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3630   010498  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3631   01049C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3632   0104A0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3633   0104A4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3634   0104A8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3635   0104AC  C026  F013         	movff	??_dtoa,abs@a
  3636   0104B0  C027  F014         	movff	??_dtoa+1,abs@a+1
  3637   0104B4  ECFB  F08C         	call	_abs	;wreg free
  3638   0104B8  5013               	movf	?_abs^0,w,c
  3639   0104BA  0F30               	addlw	48
  3640   0104BC  6EDF               	movwf	indf2,c
  3641   0104BE                     
  3642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3643   0104BE  0630               	decf	dtoa@p^0,f,c
  3644   0104C0  A0D8               	btfss	status,0,c
  3645   0104C2  0631               	decf	(dtoa@p+1)^0,f,c
  3646   0104C4                     
  3647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3648   0104C4  0632               	decf	dtoa@w^0,f,c
  3649   0104C6  A0D8               	btfss	status,0,c
  3650   0104C8  0633               	decf	(dtoa@w+1)^0,f,c
  3651   0104CA                     
  3652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3653   0104CA  C034  F001         	movff	dtoa@n,___aodiv@dividend
  3654   0104CE  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3655   0104D2  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3656   0104D6  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3657   0104DA  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3658   0104DE  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3659   0104E2  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3660   0104E6  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3661   0104EA  0E0A               	movlw	10
  3662   0104EC  6E09               	movwf	___aodiv@divisor^0,c
  3663   0104EE  0E00               	movlw	0
  3664   0104F0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3665   0104F2  0E00               	movlw	0
  3666   0104F4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3667   0104F6  0E00               	movlw	0
  3668   0104F8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3669   0104FA  0E00               	movlw	0
  3670   0104FC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3671   0104FE  0E00               	movlw	0
  3672   010500  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3673   010502  0E00               	movlw	0
  3674   010504  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3675   010506  0E00               	movlw	0
  3676   010508  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3677   01050A  ECBB  F086         	call	___aodiv	;wreg free
  3678   01050E  C001  F034         	movff	?___aodiv,dtoa@n
  3679   010512  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  3680   010516  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  3681   01051A  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  3682   01051E  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  3683   010522  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  3684   010526  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  3685   01052A  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  3686   01052E                     l2303:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3689   01052E  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  3690   010530  EFA2  F082         	goto	u1161
  3691   010534  503D               	movf	(dtoa@i+1)^0,w,c
  3692   010536  E108               	bnz	u1160
  3693   010538  043C               	decf	dtoa@i^0,w,c
  3694   01053A  A0D8               	btfss	status,0,c
  3695   01053C  EFA2  F082         	goto	u1161
  3696   010540  EFA4  F082         	goto	u1160
  3697   010544                     u1161:
  3698   010544  EFC0  F082         	goto	l2309
  3699   010548                     u1160:
  3700   010548  5034               	movf	dtoa@n^0,w,c
  3701   01054A  1035               	iorwf	(dtoa@n+1)^0,w,c
  3702   01054C  1036               	iorwf	(dtoa@n+2)^0,w,c
  3703   01054E  1037               	iorwf	(dtoa@n+3)^0,w,c
  3704   010550  1038               	iorwf	(dtoa@n+4)^0,w,c
  3705   010552  1039               	iorwf	(dtoa@n+5)^0,w,c
  3706   010554  103A               	iorwf	(dtoa@n+6)^0,w,c
  3707   010556  103B               	iorwf	(dtoa@n+7)^0,w,c
  3708   010558  A4D8               	btfss	status,2,c
  3709   01055A  EFB1  F082         	goto	u1171
  3710   01055E  EFB3  F082         	goto	u1170
  3711   010562                     u1171:
  3712   010562  EF1B  F082         	goto	l2293
  3713   010566                     u1170:
  3714   010566  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3715   010568  EFC0  F082         	goto	u1180
  3716   01056C  5031               	movf	(dtoa@p+1)^0,w,c
  3717   01056E  E106               	bnz	u1181
  3718   010570  0430               	decf	dtoa@p^0,w,c
  3719   010572  B0D8               	btfsc	status,0,c
  3720   010574  EFBE  F082         	goto	u1181
  3721   010578  EFC0  F082         	goto	u1180
  3722   01057C                     u1181:
  3723   01057C  EF1B  F082         	goto	l2293
  3724   010580                     u1180:
  3725   010580                     l2309:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3728   010580  503E               	movf	dtoa@s^0,w,c
  3729   010582  B4D8               	btfsc	status,2,c
  3730   010584  EFC6  F082         	goto	u1191
  3731   010588  EFC8  F082         	goto	u1190
  3732   01058C                     u1191:
  3733   01058C  EFD3  F082         	goto	l2315
  3734   010590                     u1190:
  3735   010590                     
  3736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3737   010590  063C               	decf	dtoa@i^0,f,c
  3738   010592  A0D8               	btfss	status,0,c
  3739   010594  063D               	decf	(dtoa@i+1)^0,f,c
  3740   010596                     
  3741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3742   010596  0E50               	movlw	low _dbuf
  3743   010598  243C               	addwf	dtoa@i^0,w,c
  3744   01059A  6ED9               	movwf	fsr2l,c
  3745   01059C  0E01               	movlw	high _dbuf
  3746   01059E  203D               	addwfc	(dtoa@i+1)^0,w,c
  3747   0105A0  6EDA               	movwf	fsr2h,c
  3748   0105A2  C03E  FFDF         	movff	dtoa@s,indf2
  3749   0105A6                     l2315:
  3750                           
  3751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3752   0105A6  C01C  F011         	movff	dtoa@fp,pad@fp
  3753   0105AA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3754   0105AE  0E50               	movlw	low _dbuf
  3755   0105B0  243C               	addwf	dtoa@i^0,w,c
  3756   0105B2  6E13               	movwf	pad@buf^0,c
  3757   0105B4  0E01               	movlw	high _dbuf
  3758   0105B6  203D               	addwfc	(dtoa@i+1)^0,w,c
  3759   0105B8  6E14               	movwf	(pad@buf+1)^0,c
  3760   0105BA  C032  F015         	movff	dtoa@w,pad@p
  3761   0105BE  C033  F016         	movff	dtoa@w+1,pad@p+1
  3762   0105C2  EC56  F08B         	call	_pad	;wreg free
  3763   0105C6  0012               	return		;funcret
  3764   0105C8                     __end_of_dtoa:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _pad *****************
  3768 ;; Defined at:
  3769 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3772 ;;		 -> sprintf@f(11), 
  3773 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3774 ;;		 -> dbuf(32), 
  3775 ;;  p               2   20[COMRAM] int 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  w               2   25[COMRAM] int 
  3778 ;;  i               2   23[COMRAM] int 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3788 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3790 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3791 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;Total ram usage:       11 bytes
  3793 ;; Hardware stack levels used: 1
  3794 ;; Hardware stack levels required when called: 3
  3795 ;; This function calls:
  3796 ;;		_fputc
  3797 ;;		_fputs
  3798 ;; This function is called by:
  3799 ;;		_dtoa
  3800 ;;		_utoa
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text12
  3805   0116AC                     __ptext12:
  3806                           	callstack 0
  3807   0116AC                     _pad:
  3808                           	callstack 23
  3809   0116AC                     
  3810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3811   0116AC  BE16               	btfsc	(pad@p+1)^0,7,c
  3812   0116AE  EF5B  F08B         	goto	u1081
  3813   0116B2  EF5D  F08B         	goto	u1080
  3814   0116B6                     u1081:
  3815   0116B6  EF63  F08B         	goto	l2257
  3816   0116BA                     u1080:
  3817   0116BA  C015  F01A         	movff	pad@p,pad@w
  3818   0116BE  C016  F01B         	movff	pad@p+1,pad@w+1
  3819   0116C2  EF67  F08B         	goto	l1124
  3820   0116C6                     l2257:
  3821   0116C6  0E00               	movlw	0
  3822   0116C8  6E1B               	movwf	(pad@w+1)^0,c
  3823   0116CA  0E00               	movlw	0
  3824   0116CC  6E1A               	movwf	pad@w^0,c
  3825   0116CE                     l1124:
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3828   0116CE  0E00               	movlw	0
  3829   0116D0  6E19               	movwf	(pad@i+1)^0,c
  3830   0116D2  0E00               	movlw	0
  3831   0116D4  6E18               	movwf	pad@i^0,c
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3834   0116D6  EF79  F08B         	goto	l2263
  3835   0116DA                     l2259:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3838   0116DA  0E00               	movlw	0
  3839   0116DC  6E02               	movwf	(fputc@c+1)^0,c
  3840   0116DE  0E20               	movlw	32
  3841   0116E0  6E01               	movwf	fputc@c^0,c
  3842   0116E2  C011  F003         	movff	pad@fp,fputc@fp
  3843   0116E6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3844   0116EA  EC6D  F08A         	call	_fputc	;wreg free
  3845   0116EE                     
  3846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3847   0116EE  4A18               	infsnz	pad@i^0,f,c
  3848   0116F0  2A19               	incf	(pad@i+1)^0,f,c
  3849   0116F2                     l2263:
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3852   0116F2  501A               	movf	pad@w^0,w,c
  3853   0116F4  5C18               	subwf	pad@i^0,w,c
  3854   0116F6  5019               	movf	(pad@i+1)^0,w,c
  3855   0116F8  0A80               	xorlw	128
  3856   0116FA  6E17               	movwf	??_pad^0,c
  3857   0116FC  501B               	movf	(pad@w+1)^0,w,c
  3858   0116FE  0A80               	xorlw	128
  3859   011700  5817               	subwfb	??_pad^0,w,c
  3860   011702  A0D8               	btfss	status,0,c
  3861   011704  EF86  F08B         	goto	u1091
  3862   011708  EF88  F08B         	goto	u1090
  3863   01170C                     u1091:
  3864   01170C  EF6D  F08B         	goto	l2259
  3865   011710                     u1090:
  3866   011710                     
  3867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3868   011710  C013  F00A         	movff	pad@buf,fputs@s
  3869   011714  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3870   011718  C011  F00C         	movff	pad@fp,fputs@fp
  3871   01171C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3872   011720  EC97  F08C         	call	_fputs	;wreg free
  3873   011724  0012               	return		;funcret
  3874   011726                     __end_of_pad:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _fputs *****************
  3878 ;; Defined at:
  3879 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3882 ;;		 -> dbuf(32), 
  3883 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3884 ;;		 -> sprintf@f(11), 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  i               2   14[COMRAM] int 
  3887 ;;  c               1   13[COMRAM] unsigned char 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2    9[COMRAM] int 
  3890 ;; Registers used:
  3891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3898 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3900 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3901 ;;Total ram usage:        7 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; Hardware stack levels required when called: 2
  3904 ;; This function calls:
  3905 ;;		_fputc
  3906 ;; This function is called by:
  3907 ;;		_pad
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text13
  3912   01192E                     __ptext13:
  3913                           	callstack 0
  3914   01192E                     _fputs:
  3915                           	callstack 23
  3916   01192E  0E00               	movlw	0
  3917   011930  6E10               	movwf	(fputs@i+1)^0,c
  3918   011932  0E00               	movlw	0
  3919   011934  6E0F               	movwf	fputs@i^0,c
  3920   011936  EFA8  F08C         	goto	l2129
  3921   01193A                     l2125:
  3922   01193A  C00E  F001         	movff	fputs@c,fputc@c
  3923   01193E  6A02               	clrf	(fputc@c+1)^0,c
  3924   011940  C00C  F003         	movff	fputs@fp,fputc@fp
  3925   011944  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3926   011948  EC6D  F08A         	call	_fputc	;wreg free
  3927   01194C  4A0F               	infsnz	fputs@i^0,f,c
  3928   01194E  2A10               	incf	(fputs@i+1)^0,f,c
  3929   011950                     l2129:
  3930   011950  500F               	movf	fputs@i^0,w,c
  3931   011952  240A               	addwf	fputs@s^0,w,c
  3932   011954  6ED9               	movwf	fsr2l,c
  3933   011956  5010               	movf	(fputs@i+1)^0,w,c
  3934   011958  200B               	addwfc	(fputs@s+1)^0,w,c
  3935   01195A  6EDA               	movwf	fsr2h,c
  3936   01195C  50DF               	movf	indf2,w,c
  3937   01195E  6E0E               	movwf	fputs@c^0,c
  3938   011960  500E               	movf	fputs@c^0,w,c
  3939   011962  A4D8               	btfss	status,2,c
  3940   011964  EFB6  F08C         	goto	u861
  3941   011968  EFB8  F08C         	goto	u860
  3942   01196C                     u861:
  3943   01196C  EF9D  F08C         	goto	l2125
  3944   011970                     u860:
  3945   011970  0012               	return		;funcret
  3946   011972                     __end_of_fputs:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _fputc *****************
  3950 ;; Defined at:
  3951 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  c               2    0[COMRAM] int 
  3954 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3955 ;;		 -> sprintf@f(11), 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;		None
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  2    0[COMRAM] int 
  3960 ;; Registers used:
  3961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3971 ;;Total ram usage:        9 bytes
  3972 ;; Hardware stack levels used: 1
  3973 ;; Hardware stack levels required when called: 1
  3974 ;; This function calls:
  3975 ;;		_putch
  3976 ;; This function is called by:
  3977 ;;		_pad
  3978 ;;		_vfpfcnvrt
  3979 ;;		_fputs
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text14
  3984   0114DA                     __ptext14:
  3985                           	callstack 0
  3986   0114DA                     _fputc:
  3987                           	callstack 23
  3988   0114DA  5003               	movf	fputc@fp^0,w,c
  3989   0114DC  1004               	iorwf	(fputc@fp+1)^0,w,c
  3990   0114DE  B4D8               	btfsc	status,2,c
  3991   0114E0  EF74  F08A         	goto	u821
  3992   0114E4  EF76  F08A         	goto	u820
  3993   0114E8                     u821:
  3994   0114E8  EF7F  F08A         	goto	l2113
  3995   0114EC                     u820:
  3996   0114EC  5003               	movf	fputc@fp^0,w,c
  3997   0114EE  1004               	iorwf	(fputc@fp+1)^0,w,c
  3998   0114F0  A4D8               	btfss	status,2,c
  3999   0114F2  EF7D  F08A         	goto	u831
  4000   0114F6  EF7F  F08A         	goto	u830
  4001   0114FA                     u831:
  4002   0114FA  EF84  F08A         	goto	l2115
  4003   0114FE                     u830:
  4004   0114FE                     l2113:
  4005   0114FE  5001               	movf	fputc@c^0,w,c
  4006   011500  ECE4  F08D         	call	_putch
  4007   011504  EFD1  F08A         	goto	l1190
  4008   011508                     l2115:
  4009   011508  EE20 F009          	lfsr	2,9
  4010   01150C  5003               	movf	fputc@fp^0,w,c
  4011   01150E  26D9               	addwf	fsr2l,f,c
  4012   011510  5004               	movf	(fputc@fp+1)^0,w,c
  4013   011512  22DA               	addwfc	fsr2h,f,c
  4014   011514  50DE               	movf	postinc2,w,c
  4015   011516  10DE               	iorwf	postinc2,w,c
  4016   011518  B4D8               	btfsc	status,2,c
  4017   01151A  EF91  F08A         	goto	u841
  4018   01151E  EF93  F08A         	goto	u840
  4019   011522                     u841:
  4020   011522  EFAE  F08A         	goto	l2119
  4021   011526                     u840:
  4022   011526  EE20 F009          	lfsr	2,9
  4023   01152A  5003               	movf	fputc@fp^0,w,c
  4024   01152C  26D9               	addwf	fsr2l,f,c
  4025   01152E  5004               	movf	(fputc@fp+1)^0,w,c
  4026   011530  22DA               	addwfc	fsr2h,f,c
  4027   011532  EE10 F003          	lfsr	1,3
  4028   011536  5003               	movf	fputc@fp^0,w,c
  4029   011538  26E1               	addwf	fsr1l,f,c
  4030   01153A  5004               	movf	(fputc@fp+1)^0,w,c
  4031   01153C  22E2               	addwfc	fsr1h,f,c
  4032   01153E  50DE               	movf	postinc2,w,c
  4033   011540  5CE6               	subwf	postinc1,w,c
  4034   011542  50E6               	movf	postinc1,w,c
  4035   011544  0A80               	xorlw	128
  4036   011546  6E09               	movwf	(??_fputc+4)^0,c
  4037   011548  50DE               	movf	postinc2,w,c
  4038   01154A  0A80               	xorlw	128
  4039   01154C  5809               	subwfb	(??_fputc+4)^0,w,c
  4040   01154E  B0D8               	btfsc	status,0,c
  4041   011550  EFAC  F08A         	goto	u851
  4042   011554  EFAE  F08A         	goto	u850
  4043   011558                     u851:
  4044   011558  EFD1  F08A         	goto	l1190
  4045   01155C                     u850:
  4046   01155C                     l2119:
  4047   01155C  EE20 F003          	lfsr	2,3
  4048   011560  5003               	movf	fputc@fp^0,w,c
  4049   011562  26D9               	addwf	fsr2l,f,c
  4050   011564  5004               	movf	(fputc@fp+1)^0,w,c
  4051   011566  22DA               	addwfc	fsr2h,f,c
  4052   011568  CFDE F005          	movff	postinc2,??_fputc
  4053   01156C  CFDD F006          	movff	postdec2,??_fputc+1
  4054   011570  C003  FFD9         	movff	fputc@fp,fsr2l
  4055   011574  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4056   011578  CFDE F007          	movff	postinc2,??_fputc+2
  4057   01157C  CFDD F008          	movff	postdec2,??_fputc+3
  4058   011580  5005               	movf	??_fputc^0,w,c
  4059   011582  2407               	addwf	(??_fputc+2)^0,w,c
  4060   011584  6ED9               	movwf	fsr2l,c
  4061   011586  5006               	movf	(??_fputc+1)^0,w,c
  4062   011588  2008               	addwfc	(??_fputc+3)^0,w,c
  4063   01158A  6EDA               	movwf	fsr2h,c
  4064   01158C  C001  FFDF         	movff	fputc@c,indf2
  4065   011590  EE20 F003          	lfsr	2,3
  4066   011594  5003               	movf	fputc@fp^0,w,c
  4067   011596  26D9               	addwf	fsr2l,f,c
  4068   011598  5004               	movf	(fputc@fp+1)^0,w,c
  4069   01159A  22DA               	addwfc	fsr2h,f,c
  4070   01159C  2ADE               	incf	postinc2,f,c
  4071   01159E  0E00               	movlw	0
  4072   0115A0  22DD               	addwfc	postdec2,f,c
  4073   0115A2                     l1190:
  4074   0115A2  0012               	return		;funcret
  4075   0115A4                     __end_of_fputc:
  4076                           	callstack 0
  4077                           
  4078 ;; *************** function _putch *****************
  4079 ;; Defined at:
  4080 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  c               1    wreg     unsigned char 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  c               1    0[COMRAM] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_fputc
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text15
  4108   011BC8                     __ptext15:
  4109                           	callstack 0
  4110   011BC8                     _putch:
  4111                           	callstack 23
  4112   011BC8  0012               	return		;funcret
  4113   011BCA                     __end_of_putch:
  4114                           	callstack 0
  4115                           
  4116 ;; *************** function _abs *****************
  4117 ;; Defined at:
  4118 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  a               2   18[COMRAM] int 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  2   18[COMRAM] int 
  4125 ;; Registers used:
  4126 ;;		wreg, status,2, status,0
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4136 ;;Total ram usage:        4 bytes
  4137 ;; Hardware stack levels used: 1
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_normalise_readings
  4142 ;;		_dtoa
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text16
  4147   0119F6                     __ptext16:
  4148                           	callstack 0
  4149   0119F6                     _abs:
  4150                           	callstack 26
  4151   0119F6  BE14               	btfsc	(abs@a+1)^0,7,c
  4152   0119F8  EF08  F08D         	goto	u870
  4153   0119FC  5014               	movf	(abs@a+1)^0,w,c
  4154   0119FE  E106               	bnz	u871
  4155   011A00  0413               	decf	abs@a^0,w,c
  4156   011A02  B0D8               	btfsc	status,0,c
  4157   011A04  EF06  F08D         	goto	u871
  4158   011A08  EF08  F08D         	goto	u870
  4159   011A0C                     u871:
  4160   011A0C  EF16  F08D         	goto	l1092
  4161   011A10                     u870:
  4162   011A10  C013  F015         	movff	abs@a,??_abs
  4163   011A14  C014  F016         	movff	abs@a+1,??_abs+1
  4164   011A18  1E15               	comf	??_abs^0,f,c
  4165   011A1A  1E16               	comf	(??_abs+1)^0,f,c
  4166   011A1C  4A15               	infsnz	??_abs^0,f,c
  4167   011A1E  2A16               	incf	(??_abs+1)^0,f,c
  4168   011A20  C015  F013         	movff	??_abs,?_abs
  4169   011A24  C016  F014         	movff	??_abs+1,?_abs+1
  4170   011A28  EF1A  F08D         	goto	l1095
  4171   011A2C                     l1092:
  4172   011A2C  C013  F013         	movff	abs@a,?_abs
  4173   011A30  C014  F014         	movff	abs@a+1,?_abs+1
  4174   011A34                     l1095:
  4175   011A34  0012               	return		;funcret
  4176   011A36                     __end_of_abs:
  4177                           	callstack 0
  4178                           
  4179 ;; *************** function ___aomod *****************
  4180 ;; Defined at:
  4181 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  dividend        8    0[COMRAM] long long 
  4184 ;;  divisor         8    8[COMRAM] long long 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  sign            1   17[COMRAM] unsigned char 
  4187 ;;  counter         1   16[COMRAM] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  8    0[COMRAM] long long 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4197 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4200 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4201 ;;Total ram usage:       18 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_dtoa
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text17
  4211   01106A                     __ptext17:
  4212                           	callstack 0
  4213   01106A                     ___aomod:
  4214                           	callstack 26
  4215   01106A  0E00               	movlw	0
  4216   01106C  6E12               	movwf	___aomod@sign^0,c
  4217   01106E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4218   011070  EF3E  F088         	goto	u950
  4219   011074  EF3C  F088         	goto	u951
  4220   011078                     u951:
  4221   011078  EF50  F088         	goto	l2187
  4222   01107C                     u950:
  4223   01107C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4224   01107E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4225   011080  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4226   011082  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4227   011084  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4228   011086  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4229   011088  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4230   01108A  6C01               	negf	___aomod@dividend^0,c
  4231   01108C  0E00               	movlw	0
  4232   01108E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4233   011090  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4234   011092  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4235   011094  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4236   011096  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4237   011098  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4238   01109A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4239   01109C  0E01               	movlw	1
  4240   01109E  6E12               	movwf	___aomod@sign^0,c
  4241   0110A0                     l2187:
  4242   0110A0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4243   0110A2  EF57  F088         	goto	u960
  4244   0110A6  EF55  F088         	goto	u961
  4245   0110AA                     u961:
  4246   0110AA  EF67  F088         	goto	l2191
  4247   0110AE                     u960:
  4248   0110AE  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4249   0110B0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4250   0110B2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4251   0110B4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4252   0110B6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4253   0110B8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4254   0110BA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4255   0110BC  6C09               	negf	___aomod@divisor^0,c
  4256   0110BE  0E00               	movlw	0
  4257   0110C0  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4258   0110C2  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4259   0110C4  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4260   0110C6  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4261   0110C8  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4262   0110CA  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4263   0110CC  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4264   0110CE                     l2191:
  4265   0110CE  5009               	movf	___aomod@divisor^0,w,c
  4266   0110D0  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4267   0110D2  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4268   0110D4  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4269   0110D6  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4270   0110D8  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4271   0110DA  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4272   0110DC  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4273   0110DE  B4D8               	btfsc	status,2,c
  4274   0110E0  EF74  F088         	goto	u971
  4275   0110E4  EF76  F088         	goto	u970
  4276   0110E8                     u971:
  4277   0110E8  EFBE  F088         	goto	l2207
  4278   0110EC                     u970:
  4279   0110EC  0E01               	movlw	1
  4280   0110EE  6E11               	movwf	___aomod@counter^0,c
  4281   0110F0  EF84  F088         	goto	l2197
  4282   0110F4                     l2195:
  4283   0110F4  90D8               	bcf	status,0,c
  4284   0110F6  3609               	rlcf	___aomod@divisor^0,f,c
  4285   0110F8  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4286   0110FA  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4287   0110FC  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4288   0110FE  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4289   011100  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4290   011102  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4291   011104  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4292   011106  2A11               	incf	___aomod@counter^0,f,c
  4293   011108                     l2197:
  4294   011108  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4295   01110A  EF89  F088         	goto	u981
  4296   01110E  EF8B  F088         	goto	u980
  4297   011112                     u981:
  4298   011112  EF7A  F088         	goto	l2195
  4299   011116                     u980:
  4300   011116                     l2199:
  4301   011116  5009               	movf	___aomod@divisor^0,w,c
  4302   011118  5C01               	subwf	___aomod@dividend^0,w,c
  4303   01111A  500A               	movf	(___aomod@divisor+1)^0,w,c
  4304   01111C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4305   01111E  500B               	movf	(___aomod@divisor+2)^0,w,c
  4306   011120  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4307   011122  500C               	movf	(___aomod@divisor+3)^0,w,c
  4308   011124  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4309   011126  500D               	movf	(___aomod@divisor+4)^0,w,c
  4310   011128  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4311   01112A  500E               	movf	(___aomod@divisor+5)^0,w,c
  4312   01112C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4313   01112E  500F               	movf	(___aomod@divisor+6)^0,w,c
  4314   011130  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4315   011132  5010               	movf	(___aomod@divisor+7)^0,w,c
  4316   011134  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4317   011136  A0D8               	btfss	status,0,c
  4318   011138  EFA0  F088         	goto	u991
  4319   01113C  EFA2  F088         	goto	u990
  4320   011140                     u991:
  4321   011140  EFB2  F088         	goto	l2203
  4322   011144                     u990:
  4323   011144  5009               	movf	___aomod@divisor^0,w,c
  4324   011146  5E01               	subwf	___aomod@dividend^0,f,c
  4325   011148  500A               	movf	(___aomod@divisor+1)^0,w,c
  4326   01114A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4327   01114C  500B               	movf	(___aomod@divisor+2)^0,w,c
  4328   01114E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4329   011150  500C               	movf	(___aomod@divisor+3)^0,w,c
  4330   011152  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4331   011154  500D               	movf	(___aomod@divisor+4)^0,w,c
  4332   011156  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4333   011158  500E               	movf	(___aomod@divisor+5)^0,w,c
  4334   01115A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4335   01115C  500F               	movf	(___aomod@divisor+6)^0,w,c
  4336   01115E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4337   011160  5010               	movf	(___aomod@divisor+7)^0,w,c
  4338   011162  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4339   011164                     l2203:
  4340   011164  90D8               	bcf	status,0,c
  4341   011166  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4342   011168  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4343   01116A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4344   01116C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4345   01116E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4346   011170  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4347   011172  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4348   011174  3209               	rrcf	___aomod@divisor^0,f,c
  4349   011176  2E11               	decfsz	___aomod@counter^0,f,c
  4350   011178  EF8B  F088         	goto	l2199
  4351   01117C                     l2207:
  4352   01117C  5012               	movf	___aomod@sign^0,w,c
  4353   01117E  B4D8               	btfsc	status,2,c
  4354   011180  EFC4  F088         	goto	u1001
  4355   011184  EFC6  F088         	goto	u1000
  4356   011188                     u1001:
  4357   011188  EFD6  F088         	goto	l2211
  4358   01118C                     u1000:
  4359   01118C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4360   01118E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4361   011190  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4362   011192  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4363   011194  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4364   011196  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4365   011198  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4366   01119A  6C01               	negf	___aomod@dividend^0,c
  4367   01119C  0E00               	movlw	0
  4368   01119E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4369   0111A0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4370   0111A2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4371   0111A4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4372   0111A6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4373   0111A8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4374   0111AA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4375   0111AC                     l2211:
  4376   0111AC  C001  F001         	movff	___aomod@dividend,?___aomod
  4377   0111B0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4378   0111B4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4379   0111B8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4380   0111BC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4381   0111C0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4382   0111C4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4383   0111C8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4384   0111CC  0012               	return		;funcret
  4385   0111CE                     __end_of___aomod:
  4386                           	callstack 0
  4387                           
  4388 ;; *************** function ___aodiv *****************
  4389 ;; Defined at:
  4390 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  dividend        8    0[COMRAM] long long 
  4393 ;;  divisor         8    8[COMRAM] long long 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  quotient        8   18[COMRAM] long long 
  4396 ;;  sign            1   17[COMRAM] unsigned char 
  4397 ;;  counter         1   16[COMRAM] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  8    0[COMRAM] long long 
  4400 ;; Registers used:
  4401 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4407 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4411 ;;Total ram usage:       26 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_dtoa
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text18
  4421   010D76                     __ptext18:
  4422                           	callstack 0
  4423   010D76                     ___aodiv:
  4424                           	callstack 26
  4425   010D76  0E00               	movlw	0
  4426   010D78  6E12               	movwf	___aodiv@sign^0,c
  4427   010D7A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4428   010D7C  EFC4  F086         	goto	u880
  4429   010D80  EFC2  F086         	goto	u881
  4430   010D84                     u881:
  4431   010D84  EFD6  F086         	goto	l2143
  4432   010D88                     u880:
  4433   010D88  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4434   010D8A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4435   010D8C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4436   010D8E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4437   010D90  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4438   010D92  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4439   010D94  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4440   010D96  6C09               	negf	___aodiv@divisor^0,c
  4441   010D98  0E00               	movlw	0
  4442   010D9A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4443   010D9C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4444   010D9E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4445   010DA0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4446   010DA2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4447   010DA4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4448   010DA6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4449   010DA8  0E01               	movlw	1
  4450   010DAA  6E12               	movwf	___aodiv@sign^0,c
  4451   010DAC                     l2143:
  4452   010DAC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4453   010DAE  EFDD  F086         	goto	u890
  4454   010DB2  EFDB  F086         	goto	u891
  4455   010DB6                     u891:
  4456   010DB6  EFEF  F086         	goto	l2149
  4457   010DBA                     u890:
  4458   010DBA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4459   010DBC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4460   010DBE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4461   010DC0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4462   010DC2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4463   010DC4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4464   010DC6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4465   010DC8  6C01               	negf	___aodiv@dividend^0,c
  4466   010DCA  0E00               	movlw	0
  4467   010DCC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4468   010DCE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4469   010DD0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4470   010DD2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4471   010DD4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4472   010DD6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4473   010DD8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4474   010DDA  0E01               	movlw	1
  4475   010DDC  1A12               	xorwf	___aodiv@sign^0,f,c
  4476   010DDE                     l2149:
  4477   010DDE  EE20  F013         	lfsr	2,___aodiv@quotient
  4478   010DE2  0E07               	movlw	7
  4479   010DE4                     u901:
  4480   010DE4  6ADE               	clrf	postinc2,c
  4481   010DE6  06E8               	decf	wreg,f,c
  4482   010DE8  E2FD               	bc	u901
  4483   010DEA  5009               	movf	___aodiv@divisor^0,w,c
  4484   010DEC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4485   010DEE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4486   010DF0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4487   010DF2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4488   010DF4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4489   010DF6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4490   010DF8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4491   010DFA  B4D8               	btfsc	status,2,c
  4492   010DFC  EF02  F087         	goto	u911
  4493   010E00  EF04  F087         	goto	u910
  4494   010E04                     u911:
  4495   010E04  EF56  F087         	goto	l2171
  4496   010E08                     u910:
  4497   010E08  0E01               	movlw	1
  4498   010E0A  6E11               	movwf	___aodiv@counter^0,c
  4499   010E0C  EF12  F087         	goto	l2157
  4500   010E10                     l2155:
  4501   010E10  90D8               	bcf	status,0,c
  4502   010E12  3609               	rlcf	___aodiv@divisor^0,f,c
  4503   010E14  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4504   010E16  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4505   010E18  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4506   010E1A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4507   010E1C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4508   010E1E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4509   010E20  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4510   010E22  2A11               	incf	___aodiv@counter^0,f,c
  4511   010E24                     l2157:
  4512   010E24  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4513   010E26  EF17  F087         	goto	u921
  4514   010E2A  EF19  F087         	goto	u920
  4515   010E2E                     u921:
  4516   010E2E  EF08  F087         	goto	l2155
  4517   010E32                     u920:
  4518   010E32                     l2159:
  4519   010E32  90D8               	bcf	status,0,c
  4520   010E34  3613               	rlcf	___aodiv@quotient^0,f,c
  4521   010E36  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4522   010E38  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4523   010E3A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4524   010E3C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4525   010E3E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4526   010E40  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4527   010E42  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4528   010E44  5009               	movf	___aodiv@divisor^0,w,c
  4529   010E46  5C01               	subwf	___aodiv@dividend^0,w,c
  4530   010E48  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4531   010E4A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4532   010E4C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4533   010E4E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4534   010E50  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4535   010E52  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4536   010E54  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4537   010E56  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4538   010E58  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4539   010E5A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4540   010E5C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4541   010E5E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4542   010E60  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4543   010E62  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4544   010E64  A0D8               	btfss	status,0,c
  4545   010E66  EF37  F087         	goto	u931
  4546   010E6A  EF39  F087         	goto	u930
  4547   010E6E                     u931:
  4548   010E6E  EF4A  F087         	goto	l2167
  4549   010E72                     u930:
  4550   010E72  5009               	movf	___aodiv@divisor^0,w,c
  4551   010E74  5E01               	subwf	___aodiv@dividend^0,f,c
  4552   010E76  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4553   010E78  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4554   010E7A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4555   010E7C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4556   010E7E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4557   010E80  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4558   010E82  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4559   010E84  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4560   010E86  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4561   010E88  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4562   010E8A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4563   010E8C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4564   010E8E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4565   010E90  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4566   010E92  8013               	bsf	___aodiv@quotient^0,0,c
  4567   010E94                     l2167:
  4568   010E94  90D8               	bcf	status,0,c
  4569   010E96  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4570   010E98  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4571   010E9A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4572   010E9C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4573   010E9E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4574   010EA0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4575   010EA2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4576   010EA4  3209               	rrcf	___aodiv@divisor^0,f,c
  4577   010EA6  2E11               	decfsz	___aodiv@counter^0,f,c
  4578   010EA8  EF19  F087         	goto	l2159
  4579   010EAC                     l2171:
  4580   010EAC  5012               	movf	___aodiv@sign^0,w,c
  4581   010EAE  B4D8               	btfsc	status,2,c
  4582   010EB0  EF5C  F087         	goto	u941
  4583   010EB4  EF5E  F087         	goto	u940
  4584   010EB8                     u941:
  4585   010EB8  EF6E  F087         	goto	l2175
  4586   010EBC                     u940:
  4587   010EBC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4588   010EBE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4589   010EC0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4590   010EC2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4591   010EC4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4592   010EC6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4593   010EC8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4594   010ECA  6C13               	negf	___aodiv@quotient^0,c
  4595   010ECC  0E00               	movlw	0
  4596   010ECE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4597   010ED0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4598   010ED2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4599   010ED4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4600   010ED6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4601   010ED8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4602   010EDA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4603   010EDC                     l2175:
  4604   010EDC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4605   010EE0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4606   010EE4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4607   010EE8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4608   010EEC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4609   010EF0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4610   010EF4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4611   010EF8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4612   010EFC  0012               	return		;funcret
  4613   010EFE                     __end_of___aodiv:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function _sendStringSerial4 *****************
  4617 ;; Defined at:
  4618 ;;		line 39 in file "serial.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  string          2    1[COMRAM] PTR unsigned char 
  4621 ;;		 -> main@buf(20), 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4637 ;;Total ram usage:        2 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 1
  4640 ;; This function calls:
  4641 ;;		_sendCharSerial4
  4642 ;; This function is called by:
  4643 ;;		_main
  4644 ;;		_normalise_readings
  4645 ;;		_make_master_closeness
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text19
  4650   011A6A                     __ptext19:
  4651                           	callstack 0
  4652   011A6A                     _sendStringSerial4:
  4653                           	callstack 29
  4654   011A6A                     
  4655                           ;serial.c: 40:  while(*string != 0) {
  4656   011A6A  EF40  F08D         	goto	l2491
  4657   011A6E                     l2487:
  4658                           
  4659                           ;serial.c: 41:         sendCharSerial4(*string++);
  4660   011A6E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4661   011A72  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4662   011A76  50DF               	movf	indf2,w,c
  4663   011A78  ECBA  F08D         	call	_sendCharSerial4
  4664   011A7C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  4665   011A7E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  4666   011A80                     l2491:
  4667                           
  4668                           ;serial.c: 40:  while(*string != 0) {
  4669   011A80  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4670   011A84  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4671   011A88  50DF               	movf	indf2,w,c
  4672   011A8A  A4D8               	btfss	status,2,c
  4673   011A8C  EF4A  F08D         	goto	u1341
  4674   011A90  EF4C  F08D         	goto	u1340
  4675   011A94                     u1341:
  4676   011A94  EF37  F08D         	goto	l2487
  4677   011A98                     u1340:
  4678   011A98  0012               	return		;funcret
  4679   011A9A                     __end_of_sendStringSerial4:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _sendCharSerial4 *****************
  4683 ;; Defined at:
  4684 ;;		line 32 in file "serial.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  charToSend      1    wreg     unsigned char 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  charToSend      1    0[COMRAM] unsigned char 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4701 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4702 ;;Total ram usage:        1 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_sendStringSerial4
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text20
  4712   011B74                     __ptext20:
  4713                           	callstack 0
  4714   011B74                     _sendCharSerial4:
  4715                           	callstack 29
  4716                           
  4717                           ;incstack = 0
  4718                           ;sendCharSerial4@charToSend stored from wreg
  4719   011B74  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4720   011B76                     l373:
  4721   011B76  010E               	movlb	14	; () banked
  4722   011B78  A537               	btfss	55,2,b	;volatile
  4723   011B7A  EFC1  F08D         	goto	u1321
  4724   011B7E  EFC3  F08D         	goto	u1320
  4725   011B82                     u1321:
  4726   011B82  EFBB  F08D         	goto	l373
  4727   011B86                     u1320:
  4728   011B86                     
  4729                           ; BSR set to: 14
  4730                           ;serial.c: 34:     TX4REG = charToSend;
  4731   011B86  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4732   011B8A                     
  4733                           ; BSR set to: 14
  4734   011B8A  0012               	return		;funcret
  4735   011B8C                     __end_of_sendCharSerial4:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function _initUSART4 *****************
  4739 ;; Defined at:
  4740 ;;		line 6 in file "serial.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;		None
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      void 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4758 ;;Total ram usage:        0 bytes
  4759 ;; Hardware stack levels used: 1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text21
  4768   011B34                     __ptext21:
  4769                           	callstack 0
  4770   011B34                     _initUSART4:
  4771                           	callstack 30
  4772   011B34                     
  4773                           ;serial.c: 10:     RC0PPS = 0x12;
  4774   011B34  0E12               	movlw	18
  4775   011B36  010E               	movlb	14	; () banked
  4776   011B38  6F62               	movwf	98,b	;volatile
  4777                           
  4778                           ;serial.c: 11:     RX4PPS = 0x11;
  4779   011B3A  0E11               	movlw	17
  4780   011B3C  6F15               	movwf	21,b	;volatile
  4781   011B3E                     
  4782                           ; BSR set to: 14
  4783                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  4784   011B3E  8283               	bsf	131,1,c	;volatile
  4785   011B40                     
  4786                           ; BSR set to: 14
  4787                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  4788   011B40  97E9               	bcf	233,3,b	;volatile
  4789   011B42                     
  4790                           ; BSR set to: 14
  4791                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  4792   011B42  95E8               	bcf	232,2,b	;volatile
  4793                           
  4794                           ;serial.c: 17:     SP4BRGL = 51;
  4795   011B44  0E33               	movlw	51
  4796   011B46  6FE5               	movwf	229,b	;volatile
  4797                           
  4798                           ;serial.c: 18:     SP4BRGH = 0;
  4799   011B48  0E00               	movlw	0
  4800   011B4A  6FE6               	movwf	230,b	;volatile
  4801   011B4C                     
  4802                           ; BSR set to: 14
  4803                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  4804   011B4C  89E7               	bsf	231,4,b	;volatile
  4805   011B4E                     
  4806                           ; BSR set to: 14
  4807                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  4808   011B4E  8BE8               	bsf	232,5,b	;volatile
  4809   011B50                     
  4810                           ; BSR set to: 14
  4811                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  4812   011B50  8FE7               	bsf	231,7,b	;volatile
  4813   011B52                     
  4814                           ; BSR set to: 14
  4815   011B52  0012               	return		;funcret
  4816   011B54                     __end_of_initUSART4:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _initDCmotorsPWM *****************
  4820 ;; Defined at:
  4821 ;;		line 6 in file "dc_motor.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_main
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text22
  4849   0115A4                     __ptext22:
  4850                           	callstack 0
  4851   0115A4                     _initDCmotorsPWM:
  4852                           	callstack 30
  4853   0115A4                     
  4854                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  4855   0115A4  9485               	bcf	133,2,c	;volatile
  4856                           
  4857                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  4858   0115A6  9885               	bcf	133,4,c	;volatile
  4859                           
  4860                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  4861   0115A8  9E83               	bcf	131,7,c	;volatile
  4862                           
  4863                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  4864   0115AA  9C87               	bcf	135,6,c	;volatile
  4865   0115AC                     
  4866                           ;dc_motor.c: 14:     RE2PPS=0x05;
  4867   0115AC  0E05               	movlw	5
  4868   0115AE  010E               	movlb	14	; () banked
  4869   0115B0  6F74               	movwf	116,b	;volatile
  4870                           
  4871                           ;dc_motor.c: 15:     RE4PPS=0x06;
  4872   0115B2  0E06               	movlw	6
  4873   0115B4  6F76               	movwf	118,b	;volatile
  4874                           
  4875                           ;dc_motor.c: 16:     RC7PPS=0x07;
  4876   0115B6  0E07               	movlw	7
  4877   0115B8  6F69               	movwf	105,b	;volatile
  4878                           
  4879                           ;dc_motor.c: 17:     RG6PPS=0x08;
  4880   0115BA  0E08               	movlw	8
  4881   0115BC  6F88               	movwf	136,b	;volatile
  4882                           
  4883                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  4884   0115BE  50BD               	movf	189,w,c	;volatile
  4885   0115C0  0B8F               	andlw	-113
  4886   0115C2  0940               	iorlw	64
  4887   0115C4  6EBD               	movwf	189,c	;volatile
  4888                           
  4889                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  4890   0115C6  0EE0               	movlw	-32
  4891   0115C8  16BE               	andwf	190,f,c	;volatile
  4892                           
  4893                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  4894   0115CA  50BF               	movf	191,w,c	;volatile
  4895   0115CC  0BF0               	andlw	-16
  4896   0115CE  0901               	iorlw	1
  4897   0115D0  6EBF               	movwf	191,c	;volatile
  4898                           
  4899                           ;dc_motor.c: 26:     T2PR=99;
  4900   0115D2  0E63               	movlw	99
  4901   0115D4  6EBC               	movwf	188,c	;volatile
  4902   0115D6                     
  4903                           ; BSR set to: 14
  4904                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  4905   0115D6  8EBD               	bsf	189,7,c	;volatile
  4906                           
  4907                           ;dc_motor.c: 31:     CCPR1H=0;
  4908   0115D8  0E00               	movlw	0
  4909   0115DA  6EAA               	movwf	170,c	;volatile
  4910                           
  4911                           ;dc_motor.c: 32:     CCPR2H=0;
  4912   0115DC  0E00               	movlw	0
  4913   0115DE  6EA6               	movwf	166,c	;volatile
  4914                           
  4915                           ;dc_motor.c: 33:     CCPR3H=0;
  4916   0115E0  0E00               	movlw	0
  4917   0115E2  010F               	movlb	15	; () banked
  4918   0115E4  6F25               	movwf	37,b	;volatile
  4919                           
  4920                           ;dc_motor.c: 34:     CCPR4H=0;
  4921   0115E6  0E00               	movlw	0
  4922   0115E8  6F21               	movwf	33,b	;volatile
  4923                           
  4924                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  4925   0115EA  0EFC               	movlw	-4
  4926   0115EC  16AD               	andwf	173,f,c	;volatile
  4927                           
  4928                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  4929   0115EE  0EF3               	movlw	-13
  4930   0115F0  16AD               	andwf	173,f,c	;volatile
  4931                           
  4932                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  4933   0115F2  0ECF               	movlw	-49
  4934   0115F4  16AD               	andwf	173,f,c	;volatile
  4935                           
  4936                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  4937   0115F6  0E3F               	movlw	-193
  4938   0115F8  16AD               	andwf	173,f,c	;volatile
  4939   0115FA                     
  4940                           ; BSR set to: 15
  4941                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  4942   0115FA  88AB               	bsf	171,4,c	;volatile
  4943                           
  4944                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  4945   0115FC  50AB               	movf	171,w,c	;volatile
  4946   0115FE  0BF0               	andlw	-16
  4947   011600  090C               	iorlw	12
  4948   011602  6EAB               	movwf	171,c	;volatile
  4949   011604                     
  4950                           ; BSR set to: 15
  4951                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  4952   011604  8EAB               	bsf	171,7,c	;volatile
  4953   011606                     
  4954                           ; BSR set to: 15
  4955                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  4956   011606  88A7               	bsf	167,4,c	;volatile
  4957                           
  4958                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  4959   011608  50A7               	movf	167,w,c	;volatile
  4960   01160A  0BF0               	andlw	-16
  4961   01160C  090C               	iorlw	12
  4962   01160E  6EA7               	movwf	167,c	;volatile
  4963   011610                     
  4964                           ; BSR set to: 15
  4965                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  4966   011610  8EA7               	bsf	167,7,c	;volatile
  4967   011612                     
  4968                           ; BSR set to: 15
  4969                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  4970   011612  8926               	bsf	38,4,b	;volatile
  4971                           
  4972                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  4973   011614  5126               	movf	38,w,b	;volatile
  4974   011616  0BF0               	andlw	-16
  4975   011618  090C               	iorlw	12
  4976   01161A  6F26               	movwf	38,b	;volatile
  4977   01161C                     
  4978                           ; BSR set to: 15
  4979                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  4980   01161C  8F26               	bsf	38,7,b	;volatile
  4981   01161E                     
  4982                           ; BSR set to: 15
  4983                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  4984   01161E  8922               	bsf	34,4,b	;volatile
  4985                           
  4986                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  4987   011620  5122               	movf	34,w,b	;volatile
  4988   011622  0BF0               	andlw	-16
  4989   011624  090C               	iorlw	12
  4990   011626  6F22               	movwf	34,b	;volatile
  4991   011628                     
  4992                           ; BSR set to: 15
  4993                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  4994   011628  8F22               	bsf	34,7,b	;volatile
  4995   01162A                     
  4996                           ; BSR set to: 15
  4997   01162A  0012               	return		;funcret
  4998   01162C                     __end_of_initDCmotorsPWM:
  4999                           	callstack 0
  5000                           
  5001 ;; *************** function _determine_card *****************
  5002 ;; Defined at:
  5003 ;;		line 101 in file "colour_identify.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  master_close    2    0[COMRAM] PTR unsigned int 
  5006 ;;		 -> main@master_closeness(6), 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  i               1    9[COMRAM] enum E14551
  5009 ;;  current_smal    2    6[COMRAM] unsigned int 
  5010 ;;  predicted_co    1    8[COMRAM] enum E14551
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      enum E14575
  5013 ;; Registers used:
  5014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5021 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5022 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5023 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5024 ;;Total ram usage:       10 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_main
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text23
  5034   01162C                     __ptext23:
  5035                           	callstack 0
  5036   01162C                     _determine_card:
  5037                           	callstack 30
  5038   01162C                     
  5039                           ;colour_identify.c: 102:     colour predicted_colour = RED;
  5040   01162C  0E00               	movlw	0
  5041   01162E  6E09               	movwf	determine_card@predicted_colour^0,c
  5042   011630                     
  5043                           ;colour_identify.c: 103:     unsigned int current_smallest = master_closeness[RED];
  5044   011630  C001  FFD9         	movff	determine_card@master_closeness,fsr2l
  5045   011634  C002  FFDA         	movff	determine_card@master_closeness+1,fsr2h
  5046   011638  CFDE F007          	movff	postinc2,determine_card@current_smallest
  5047   01163C  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  5048   011640                     
  5049                           ;colour_identify.c: 104:     for(colour i = GREEN; i<=BLACK; i++){
  5050   011640  0E01               	movlw	1
  5051   011642  6E0A               	movwf	determine_card@i^0,c
  5052   011644                     l2759:
  5053                           
  5054                           ;colour_identify.c: 105:         if(master_closeness[i] < current_smallest){
  5055   011644  500A               	movf	determine_card@i^0,w,c
  5056   011646  0D02               	mullw	2
  5057   011648  CFF3 F003          	movff	prodl,??_determine_card
  5058   01164C  CFF4 F004          	movff	prodh,??_determine_card+1
  5059   011650  5003               	movf	??_determine_card^0,w,c
  5060   011652  2401               	addwf	determine_card@master_closeness^0,w,c
  5061   011654  6ED9               	movwf	fsr2l,c
  5062   011656  5004               	movf	(??_determine_card+1)^0,w,c
  5063   011658  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  5064   01165A  6EDA               	movwf	fsr2h,c
  5065   01165C  5007               	movf	determine_card@current_smallest^0,w,c
  5066   01165E  5CDE               	subwf	postinc2,w,c
  5067   011660  5008               	movf	(determine_card@current_smallest+1)^0,w,c
  5068   011662  58DE               	subwfb	postinc2,w,c
  5069   011664  B0D8               	btfsc	status,0,c
  5070   011666  EF37  F08B         	goto	u1501
  5071   01166A  EF39  F08B         	goto	u1500
  5072   01166E                     u1501:
  5073   01166E  EF4B  F08B         	goto	l2765
  5074   011672                     u1500:
  5075   011672                     
  5076                           ;colour_identify.c: 106:             current_smallest = master_closeness[i];
  5077   011672  500A               	movf	determine_card@i^0,w,c
  5078   011674  0D02               	mullw	2
  5079   011676  CFF3 F003          	movff	prodl,??_determine_card
  5080   01167A  CFF4 F004          	movff	prodh,??_determine_card+1
  5081   01167E  5003               	movf	??_determine_card^0,w,c
  5082   011680  2401               	addwf	determine_card@master_closeness^0,w,c
  5083   011682  6ED9               	movwf	fsr2l,c
  5084   011684  5004               	movf	(??_determine_card+1)^0,w,c
  5085   011686  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  5086   011688  6EDA               	movwf	fsr2h,c
  5087   01168A  CFDE F007          	movff	postinc2,determine_card@current_smallest
  5088   01168E  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  5089   011692                     
  5090                           ;colour_identify.c: 107:             predicted_colour = i;
  5091   011692  C00A  F009         	movff	determine_card@i,determine_card@predicted_colour
  5092   011696                     l2765:
  5093                           
  5094                           ;colour_identify.c: 109:     }
  5095   011696  2A0A               	incf	determine_card@i^0,f,c
  5096   011698  0E08               	movlw	8
  5097   01169A  640A               	cpfsgt	determine_card@i^0,c
  5098   01169C  EF52  F08B         	goto	u1511
  5099   0116A0  EF54  F08B         	goto	u1510
  5100   0116A4                     u1511:
  5101   0116A4  EF22  F08B         	goto	l2759
  5102   0116A8                     u1510:
  5103   0116A8                     
  5104                           ;colour_identify.c: 110:     return predicted_colour;
  5105   0116A8  5009               	movf	determine_card@predicted_colour^0,w,c
  5106   0116AA  0012               	return		;funcret
  5107   0116AC                     __end_of_determine_card:
  5108                           	callstack 0
  5109                           
  5110 ;; *************** function _color_click_init *****************
  5111 ;; Defined at:
  5112 ;;		line 5 in file "color.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;		None
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5130 ;;Total ram usage:        1 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; Hardware stack levels required when called: 3
  5133 ;; This function calls:
  5134 ;;		_I2C_2_Master_Init
  5135 ;;		_color_writetoaddr
  5136 ;; This function is called by:
  5137 ;;		_main
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text24
  5142   011A36                     __ptext24:
  5143                           	callstack 0
  5144   011A36                     _color_click_init:
  5145                           	callstack 27
  5146   011A36                     
  5147                           ;color.c: 8:     I2C_2_Master_Init();
  5148   011A36  EC4D  F08D         	call	_I2C_2_Master_Init	;wreg free
  5149   011A3A                     
  5150                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  5151   011A3A  0E01               	movlw	1
  5152   011A3C  6E03               	movwf	color_writetoaddr@value^0,c
  5153   011A3E  0E00               	movlw	0
  5154   011A40  ECAA  F08D         	call	_color_writetoaddr
  5155   011A44                     
  5156                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5157   011A44  0E3F               	movlw	63
  5158   011A46  6E05               	movwf	??_color_click_init^0,c
  5159   011A48  0E55               	movlw	85
  5160   011A4A                     u1687:
  5161   011A4A  2EE8               	decfsz	wreg,f,c
  5162   011A4C  D7FE               	bra	u1687
  5163   011A4E  2E05               	decfsz	??_color_click_init^0,f,c
  5164   011A50  D7FC               	bra	u1687
  5165   011A52  F000               	nop	
  5166   011A54                     
  5167                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  5168   011A54  0E03               	movlw	3
  5169   011A56  6E03               	movwf	color_writetoaddr@value^0,c
  5170   011A58  0E00               	movlw	0
  5171   011A5A  ECAA  F08D         	call	_color_writetoaddr
  5172   011A5E                     
  5173                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  5174   011A5E  0ED5               	movlw	213
  5175   011A60  6E03               	movwf	color_writetoaddr@value^0,c
  5176   011A62  0E01               	movlw	1
  5177   011A64  ECAA  F08D         	call	_color_writetoaddr
  5178   011A68  0012               	return		;funcret
  5179   011A6A                     __end_of_color_click_init:
  5180                           	callstack 0
  5181                           
  5182 ;; *************** function _color_writetoaddr *****************
  5183 ;; Defined at:
  5184 ;;		line 21 in file "color.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  address         1    wreg     unsigned char 
  5187 ;;  value           1    2[COMRAM] unsigned char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  address         1    3[COMRAM] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5199 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5202 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5203 ;;Total ram usage:        2 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; Hardware stack levels required when called: 2
  5206 ;; This function calls:
  5207 ;;		_I2C_2_Master_Start
  5208 ;;		_I2C_2_Master_Stop
  5209 ;;		_I2C_2_Master_Write
  5210 ;; This function is called by:
  5211 ;;		_color_click_init
  5212 ;;		_enable_color_interrupt
  5213 ;;		_set_interrupt_threshold
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text25
  5218   011B54                     __ptext25:
  5219                           	callstack 0
  5220   011B54                     _color_writetoaddr:
  5221                           	callstack 27
  5222                           
  5223                           ;incstack = 0
  5224                           ;color_writetoaddr@address stored from wreg
  5225   011B54  6E04               	movwf	color_writetoaddr@address^0,c
  5226   011B56                     
  5227                           ;color.c: 22:     I2C_2_Master_Start();
  5228   011B56  ECDA  F08D         	call	_I2C_2_Master_Start	;wreg free
  5229                           
  5230                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  5231   011B5A  0E52               	movlw	82
  5232   011B5C  ECCF  F08D         	call	_I2C_2_Master_Write
  5233                           
  5234                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  5235   011B60  5004               	movf	color_writetoaddr@address^0,w,c
  5236   011B62  0980               	iorlw	128
  5237   011B64  ECCF  F08D         	call	_I2C_2_Master_Write
  5238                           
  5239                           ;color.c: 25:     I2C_2_Master_Write(value);
  5240   011B68  5003               	movf	color_writetoaddr@value^0,w,c
  5241   011B6A  ECCF  F08D         	call	_I2C_2_Master_Write
  5242                           
  5243                           ;color.c: 26:     I2C_2_Master_Stop();
  5244   011B6E  ECD5  F08D         	call	_I2C_2_Master_Stop	;wreg free
  5245   011B72  0012               	return		;funcret
  5246   011B74                     __end_of_color_writetoaddr:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _I2C_2_Master_Init *****************
  5250 ;; Defined at:
  5251 ;;		line 4 in file "i2c.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used: 1
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_color_click_init
  5275 ;;		_main
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text26
  5280   011A9A                     __ptext26:
  5281                           	callstack 0
  5282   011A9A                     _I2C_2_Master_Init:
  5283                           	callstack 29
  5284   011A9A                     
  5285                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5286   011A9A  010E               	movlb	14	; () banked
  5287   011A9C  51D9               	movf	217,w,b	;volatile
  5288   011A9E  0BF0               	andlw	-16
  5289   011AA0  0908               	iorlw	8
  5290   011AA2  6FD9               	movwf	217,b	;volatile
  5291   011AA4                     
  5292                           ; BSR set to: 14
  5293                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5294   011AA4  8BD9               	bsf	217,5,b	;volatile
  5295                           
  5296                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5297   011AA6  0E9F               	movlw	159
  5298   011AA8  6FD6               	movwf	214,b	;volatile
  5299   011AAA                     
  5300                           ; BSR set to: 14
  5301                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5302   011AAA  8A84               	bsf	132,5,c	;volatile
  5303   011AAC                     
  5304                           ; BSR set to: 14
  5305                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5306   011AAC  8C84               	bsf	132,6,c	;volatile
  5307   011AAE                     
  5308                           ; BSR set to: 14
  5309                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5310   011AAE  9BA7               	bcf	167,5,b	;volatile
  5311   011AB0                     
  5312                           ; BSR set to: 14
  5313                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5314   011AB0  9DA7               	bcf	167,6,b	;volatile
  5315                           
  5316                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5317   011AB2  0E1D               	movlw	29
  5318   011AB4  6F1D               	movwf	29,b	;volatile
  5319                           
  5320                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5321   011AB6  0E1E               	movlw	30
  5322   011AB8  6F1C               	movwf	28,b	;volatile
  5323                           
  5324                           ;i2c.c: 18:   RD5PPS=0x1C;
  5325   011ABA  0E1C               	movlw	28
  5326   011ABC  6F6F               	movwf	111,b	;volatile
  5327                           
  5328                           ;i2c.c: 19:   RD6PPS=0x1B;
  5329   011ABE  0E1B               	movlw	27
  5330   011AC0  6F70               	movwf	112,b	;volatile
  5331   011AC2                     
  5332                           ; BSR set to: 14
  5333   011AC2  0012               	return		;funcret
  5334   011AC4                     __end_of_I2C_2_Master_Init:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _collect_avg_readings *****************
  5338 ;; Defined at:
  5339 ;;		line 25 in file "colour_identify.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  red_read        2   13[COMRAM] PTR unsigned int 
  5342 ;;		 -> main@red_read(2), 
  5343 ;;  green_read      2   15[COMRAM] PTR unsigned int 
  5344 ;;		 -> main@green_read(2), 
  5345 ;;  blue_read       2   17[COMRAM] PTR unsigned int 
  5346 ;;		 -> main@blue_read(2), 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  i               1   23[COMRAM] enum E14551
  5349 ;;  i               1   22[COMRAM] enum E14551
  5350 ;;  i               1   21[COMRAM] enum E14551
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5360 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5361 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;Total ram usage:       11 bytes
  5365 ;; Hardware stack levels used: 1
  5366 ;; Hardware stack levels required when called: 3
  5367 ;; This function calls:
  5368 ;;		___lwdiv
  5369 ;;		_color_read_Blue
  5370 ;;		_color_read_Green
  5371 ;;		_color_read_Red
  5372 ;; This function is called by:
  5373 ;;		_main
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text27
  5378   0111CE                     __ptext27:
  5379                           	callstack 0
  5380   0111CE                     _collect_avg_readings:
  5381                           	callstack 27
  5382   0111CE                     
  5383                           ;colour_identify.c: 25: void collect_avg_readings( unsigned int *red_read, unsigned int 
      +                          *green_read, unsigned int *blue_read);colour_identify.c: 26: {;colour_identify.c: 29:   
      +                            for(colour i = 0; i <= 2; i++){
  5384   0111CE  0E00               	movlw	0
  5385   0111D0  6E16               	movwf	collect_avg_readings@i^0,c
  5386   0111D2                     l2655:
  5387                           
  5388                           ;colour_identify.c: 30:         *red_read += color_read_Red();
  5389   0111D2  EC1F  F08C         	call	_color_read_Red	;wreg free
  5390   0111D6  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  5391   0111DA  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  5392   0111DE  5005               	movf	?_color_read_Red^0,w,c
  5393   0111E0  26DE               	addwf	postinc2,f,c
  5394   0111E2  5006               	movf	(?_color_read_Red+1)^0,w,c
  5395   0111E4  22DD               	addwfc	postdec2,f,c
  5396   0111E6                     
  5397                           ;colour_identify.c: 31:         _delay((unsigned long)((200)*(64000000/4000.0)));
  5398   0111E6  0E11               	movlw	17
  5399   0111E8  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  5400   0111EA  0E3C               	movlw	60
  5401   0111EC  6E14               	movwf	??_collect_avg_readings^0,c
  5402   0111EE  0ECB               	movlw	203
  5403   0111F0                     u1697:
  5404   0111F0  2EE8               	decfsz	wreg,f,c
  5405   0111F2  D7FE               	bra	u1697
  5406   0111F4  2E14               	decfsz	??_collect_avg_readings^0,f,c
  5407   0111F6  D7FC               	bra	u1697
  5408   0111F8  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  5409   0111FA  D7FA               	bra	u1697
  5410   0111FC  F000               	nop	
  5411   0111FE                     
  5412                           ;colour_identify.c: 32:     }
  5413   0111FE  2A16               	incf	collect_avg_readings@i^0,f,c
  5414   011200  0E02               	movlw	2
  5415   011202  6416               	cpfsgt	collect_avg_readings@i^0,c
  5416   011204  EF06  F089         	goto	u1451
  5417   011208  EF08  F089         	goto	u1450
  5418   01120C                     u1451:
  5419   01120C  EFE9  F088         	goto	l2655
  5420   011210                     u1450:
  5421   011210                     
  5422                           ;colour_identify.c: 33:     *red_read = *red_read/3;
  5423   011210  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  5424   011214  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  5425   011218  CFDE F007          	movff	postinc2,___lwdiv@dividend
  5426   01121C  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  5427   011220  0E00               	movlw	0
  5428   011222  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  5429   011224  0E03               	movlw	3
  5430   011226  6E09               	movwf	___lwdiv@divisor^0,c
  5431   011228  EC93  F08B         	call	___lwdiv	;wreg free
  5432   01122C  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  5433   011230  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  5434   011234  C007  FFDE         	movff	?___lwdiv,postinc2
  5435   011238  C008  FFDD         	movff	?___lwdiv+1,postdec2
  5436   01123C                     
  5437                           ;colour_identify.c: 38:     for(colour i = 0; i <= 2; i++){
  5438   01123C  0E00               	movlw	0
  5439   01123E  6E17               	movwf	collect_avg_readings@i_1475^0,c
  5440   011240                     l2671:
  5441                           
  5442                           ;colour_identify.c: 39:         *green_read += color_read_Green();
  5443   011240  EC47  F08C         	call	_color_read_Green	;wreg free
  5444   011244  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  5445   011248  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  5446   01124C  5005               	movf	?_color_read_Green^0,w,c
  5447   01124E  26DE               	addwf	postinc2,f,c
  5448   011250  5006               	movf	(?_color_read_Green+1)^0,w,c
  5449   011252  22DD               	addwfc	postdec2,f,c
  5450   011254                     
  5451                           ;colour_identify.c: 40:         _delay((unsigned long)((200)*(64000000/4000.0)));
  5452   011254  0E11               	movlw	17
  5453   011256  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  5454   011258  0E3C               	movlw	60
  5455   01125A  6E14               	movwf	??_collect_avg_readings^0,c
  5456   01125C  0ECB               	movlw	203
  5457   01125E                     u1707:
  5458   01125E  2EE8               	decfsz	wreg,f,c
  5459   011260  D7FE               	bra	u1707
  5460   011262  2E14               	decfsz	??_collect_avg_readings^0,f,c
  5461   011264  D7FC               	bra	u1707
  5462   011266  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  5463   011268  D7FA               	bra	u1707
  5464   01126A  F000               	nop	
  5465   01126C                     
  5466                           ;colour_identify.c: 41:     }
  5467   01126C  2A17               	incf	collect_avg_readings@i_1475^0,f,c
  5468   01126E  0E02               	movlw	2
  5469   011270  6417               	cpfsgt	collect_avg_readings@i_1475^0,c
  5470   011272  EF3D  F089         	goto	u1461
  5471   011276  EF3F  F089         	goto	u1460
  5472   01127A                     u1461:
  5473   01127A  EF20  F089         	goto	l2671
  5474   01127E                     u1460:
  5475   01127E                     
  5476                           ;colour_identify.c: 42:     *green_read = *green_read/3;
  5477   01127E  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  5478   011282  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  5479   011286  CFDE F007          	movff	postinc2,___lwdiv@dividend
  5480   01128A  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  5481   01128E  0E00               	movlw	0
  5482   011290  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  5483   011292  0E03               	movlw	3
  5484   011294  6E09               	movwf	___lwdiv@divisor^0,c
  5485   011296  EC93  F08B         	call	___lwdiv	;wreg free
  5486   01129A  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  5487   01129E  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  5488   0112A2  C007  FFDE         	movff	?___lwdiv,postinc2
  5489   0112A6  C008  FFDD         	movff	?___lwdiv+1,postdec2
  5490   0112AA                     
  5491                           ;colour_identify.c: 47:     for(colour i = 0; i <= 2; i++){
  5492   0112AA  0E00               	movlw	0
  5493   0112AC  6E18               	movwf	collect_avg_readings@i_1477^0,c
  5494   0112AE                     l2687:
  5495                           
  5496                           ;colour_identify.c: 48:         *blue_read += color_read_Blue();
  5497   0112AE  EC6F  F08C         	call	_color_read_Blue	;wreg free
  5498   0112B2  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  5499   0112B6  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  5500   0112BA  5005               	movf	?_color_read_Blue^0,w,c
  5501   0112BC  26DE               	addwf	postinc2,f,c
  5502   0112BE  5006               	movf	(?_color_read_Blue+1)^0,w,c
  5503   0112C0  22DD               	addwfc	postdec2,f,c
  5504   0112C2                     
  5505                           ;colour_identify.c: 49:         _delay((unsigned long)((200)*(64000000/4000.0)));
  5506   0112C2  0E11               	movlw	17
  5507   0112C4  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  5508   0112C6  0E3C               	movlw	60
  5509   0112C8  6E14               	movwf	??_collect_avg_readings^0,c
  5510   0112CA  0ECB               	movlw	203
  5511   0112CC                     u1717:
  5512   0112CC  2EE8               	decfsz	wreg,f,c
  5513   0112CE  D7FE               	bra	u1717
  5514   0112D0  2E14               	decfsz	??_collect_avg_readings^0,f,c
  5515   0112D2  D7FC               	bra	u1717
  5516   0112D4  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  5517   0112D6  D7FA               	bra	u1717
  5518   0112D8  F000               	nop	
  5519   0112DA                     
  5520                           ;colour_identify.c: 50:     }
  5521   0112DA  2A18               	incf	collect_avg_readings@i_1477^0,f,c
  5522   0112DC  0E02               	movlw	2
  5523   0112DE  6418               	cpfsgt	collect_avg_readings@i_1477^0,c
  5524   0112E0  EF74  F089         	goto	u1471
  5525   0112E4  EF76  F089         	goto	u1470
  5526   0112E8                     u1471:
  5527   0112E8  EF57  F089         	goto	l2687
  5528   0112EC                     u1470:
  5529   0112EC                     
  5530                           ;colour_identify.c: 51:     *blue_read = *blue_read/3;
  5531   0112EC  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  5532   0112F0  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  5533   0112F4  CFDE F007          	movff	postinc2,___lwdiv@dividend
  5534   0112F8  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  5535   0112FC  0E00               	movlw	0
  5536   0112FE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  5537   011300  0E03               	movlw	3
  5538   011302  6E09               	movwf	___lwdiv@divisor^0,c
  5539   011304  EC93  F08B         	call	___lwdiv	;wreg free
  5540   011308  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  5541   01130C  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  5542   011310  C007  FFDE         	movff	?___lwdiv,postinc2
  5543   011314  C008  FFDD         	movff	?___lwdiv+1,postdec2
  5544   011318  0012               	return		;funcret
  5545   01131A                     __end_of_collect_avg_readings:
  5546                           	callstack 0
  5547                           
  5548 ;; *************** function _color_read_Red *****************
  5549 ;; Defined at:
  5550 ;;		line 29 in file "color.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  tmp             2    9[COMRAM] unsigned int 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  2    4[COMRAM] unsigned int 
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5566 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5567 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5568 ;;Total ram usage:        7 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; Hardware stack levels required when called: 2
  5571 ;; This function calls:
  5572 ;;		_I2C_2_Master_Read
  5573 ;;		_I2C_2_Master_RepStart
  5574 ;;		_I2C_2_Master_Start
  5575 ;;		_I2C_2_Master_Stop
  5576 ;;		_I2C_2_Master_Write
  5577 ;; This function is called by:
  5578 ;;		_collect_avg_readings
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text28
  5583   01183E                     __ptext28:
  5584                           	callstack 0
  5585   01183E                     _color_read_Red:
  5586                           	callstack 27
  5587   01183E                     
  5588                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  5589   01183E  ECDA  F08D         	call	_I2C_2_Master_Start	;wreg free
  5590                           
  5591                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  5592   011842  0E52               	movlw	82
  5593   011844  ECCF  F08D         	call	_I2C_2_Master_Write
  5594                           
  5595                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  5596   011848  0EB6               	movlw	182
  5597   01184A  ECCF  F08D         	call	_I2C_2_Master_Write
  5598                           
  5599                           ;color.c: 35:  I2C_2_Master_RepStart();
  5600   01184E  ECDF  F08D         	call	_I2C_2_Master_RepStart	;wreg free
  5601                           
  5602                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  5603   011852  0E53               	movlw	83
  5604   011854  ECCF  F08D         	call	_I2C_2_Master_Write
  5605                           
  5606                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  5607   011858  0E01               	movlw	1
  5608   01185A  ECDA  F08C         	call	_I2C_2_Master_Read
  5609   01185E  6E07               	movwf	??_color_read_Red^0,c
  5610   011860  5007               	movf	??_color_read_Red^0,w,c
  5611   011862  6E0A               	movwf	color_read_Red@tmp^0,c
  5612   011864  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5613                           
  5614                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5615   011866  0E00               	movlw	0
  5616   011868  ECDA  F08C         	call	_I2C_2_Master_Read
  5617   01186C  6E07               	movwf	??_color_read_Red^0,c
  5618   01186E  5007               	movf	??_color_read_Red^0,w,c
  5619   011870  6E09               	movwf	(??_color_read_Red+2)^0,c
  5620   011872  6A08               	clrf	(??_color_read_Red+1)^0,c
  5621   011874  500A               	movf	color_read_Red@tmp^0,w,c
  5622   011876  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5623   011878  6E0A               	movwf	color_read_Red@tmp^0,c
  5624   01187A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5625   01187C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5626   01187E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5627                           
  5628                           ;color.c: 39:  I2C_2_Master_Stop();
  5629   011880  ECD5  F08D         	call	_I2C_2_Master_Stop	;wreg free
  5630   011884                     
  5631                           ;color.c: 40:  return tmp;
  5632   011884  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5633   011888  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5634   01188C  0012               	return		;funcret
  5635   01188E                     __end_of_color_read_Red:
  5636                           	callstack 0
  5637                           
  5638 ;; *************** function _color_read_Green *****************
  5639 ;; Defined at:
  5640 ;;		line 43 in file "color.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  tmp             2    9[COMRAM] unsigned int 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  2    4[COMRAM] unsigned int 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;Total ram usage:        7 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 2
  5661 ;; This function calls:
  5662 ;;		_I2C_2_Master_Read
  5663 ;;		_I2C_2_Master_RepStart
  5664 ;;		_I2C_2_Master_Start
  5665 ;;		_I2C_2_Master_Stop
  5666 ;;		_I2C_2_Master_Write
  5667 ;; This function is called by:
  5668 ;;		_collect_avg_readings
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           	psect	text29
  5673   01188E                     __ptext29:
  5674                           	callstack 0
  5675   01188E                     _color_read_Green:
  5676                           	callstack 27
  5677   01188E                     
  5678                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  5679   01188E  ECDA  F08D         	call	_I2C_2_Master_Start	;wreg free
  5680                           
  5681                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  5682   011892  0E52               	movlw	82
  5683   011894  ECCF  F08D         	call	_I2C_2_Master_Write
  5684                           
  5685                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  5686   011898  0EB8               	movlw	184
  5687   01189A  ECCF  F08D         	call	_I2C_2_Master_Write
  5688                           
  5689                           ;color.c: 49:  I2C_2_Master_RepStart();
  5690   01189E  ECDF  F08D         	call	_I2C_2_Master_RepStart	;wreg free
  5691                           
  5692                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  5693   0118A2  0E53               	movlw	83
  5694   0118A4  ECCF  F08D         	call	_I2C_2_Master_Write
  5695                           
  5696                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  5697   0118A8  0E01               	movlw	1
  5698   0118AA  ECDA  F08C         	call	_I2C_2_Master_Read
  5699   0118AE  6E07               	movwf	??_color_read_Green^0,c
  5700   0118B0  5007               	movf	??_color_read_Green^0,w,c
  5701   0118B2  6E0A               	movwf	color_read_Green@tmp^0,c
  5702   0118B4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5703                           
  5704                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5705   0118B6  0E00               	movlw	0
  5706   0118B8  ECDA  F08C         	call	_I2C_2_Master_Read
  5707   0118BC  6E07               	movwf	??_color_read_Green^0,c
  5708   0118BE  5007               	movf	??_color_read_Green^0,w,c
  5709   0118C0  6E09               	movwf	(??_color_read_Green+2)^0,c
  5710   0118C2  6A08               	clrf	(??_color_read_Green+1)^0,c
  5711   0118C4  500A               	movf	color_read_Green@tmp^0,w,c
  5712   0118C6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5713   0118C8  6E0A               	movwf	color_read_Green@tmp^0,c
  5714   0118CA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5715   0118CC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5716   0118CE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5717                           
  5718                           ;color.c: 53:  I2C_2_Master_Stop();
  5719   0118D0  ECD5  F08D         	call	_I2C_2_Master_Stop	;wreg free
  5720   0118D4                     
  5721                           ;color.c: 54:  return tmp;
  5722   0118D4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5723   0118D8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5724   0118DC  0012               	return		;funcret
  5725   0118DE                     __end_of_color_read_Green:
  5726                           	callstack 0
  5727                           
  5728 ;; *************** function _color_read_Blue *****************
  5729 ;; Defined at:
  5730 ;;		line 57 in file "color.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  tmp             2    9[COMRAM] unsigned int 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  2    4[COMRAM] unsigned int 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5746 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5747 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5748 ;;Total ram usage:        7 bytes
  5749 ;; Hardware stack levels used: 1
  5750 ;; Hardware stack levels required when called: 2
  5751 ;; This function calls:
  5752 ;;		_I2C_2_Master_Read
  5753 ;;		_I2C_2_Master_RepStart
  5754 ;;		_I2C_2_Master_Start
  5755 ;;		_I2C_2_Master_Stop
  5756 ;;		_I2C_2_Master_Write
  5757 ;; This function is called by:
  5758 ;;		_collect_avg_readings
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text30
  5763   0118DE                     __ptext30:
  5764                           	callstack 0
  5765   0118DE                     _color_read_Blue:
  5766                           	callstack 27
  5767   0118DE                     
  5768                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  5769   0118DE  ECDA  F08D         	call	_I2C_2_Master_Start	;wreg free
  5770                           
  5771                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  5772   0118E2  0E52               	movlw	82
  5773   0118E4  ECCF  F08D         	call	_I2C_2_Master_Write
  5774                           
  5775                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  5776   0118E8  0EBA               	movlw	186
  5777   0118EA  ECCF  F08D         	call	_I2C_2_Master_Write
  5778                           
  5779                           ;color.c: 63:  I2C_2_Master_RepStart();
  5780   0118EE  ECDF  F08D         	call	_I2C_2_Master_RepStart	;wreg free
  5781                           
  5782                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  5783   0118F2  0E53               	movlw	83
  5784   0118F4  ECCF  F08D         	call	_I2C_2_Master_Write
  5785                           
  5786                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  5787   0118F8  0E01               	movlw	1
  5788   0118FA  ECDA  F08C         	call	_I2C_2_Master_Read
  5789   0118FE  6E07               	movwf	??_color_read_Blue^0,c
  5790   011900  5007               	movf	??_color_read_Blue^0,w,c
  5791   011902  6E0A               	movwf	color_read_Blue@tmp^0,c
  5792   011904  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5793                           
  5794                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5795   011906  0E00               	movlw	0
  5796   011908  ECDA  F08C         	call	_I2C_2_Master_Read
  5797   01190C  6E07               	movwf	??_color_read_Blue^0,c
  5798   01190E  5007               	movf	??_color_read_Blue^0,w,c
  5799   011910  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5800   011912  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5801   011914  500A               	movf	color_read_Blue@tmp^0,w,c
  5802   011916  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5803   011918  6E0A               	movwf	color_read_Blue@tmp^0,c
  5804   01191A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5805   01191C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5806   01191E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5807                           
  5808                           ;color.c: 67:  I2C_2_Master_Stop();
  5809   011920  ECD5  F08D         	call	_I2C_2_Master_Stop	;wreg free
  5810   011924                     
  5811                           ;color.c: 68:  return tmp;
  5812   011924  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5813   011928  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5814   01192C  0012               	return		;funcret
  5815   01192E                     __end_of_color_read_Blue:
  5816                           	callstack 0
  5817                           
  5818 ;; *************** function _I2C_2_Master_Write *****************
  5819 ;; Defined at:
  5820 ;;		line 45 in file "i2c.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  data_byte       1    wreg     unsigned char 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  data_byte       1    1[COMRAM] unsigned char 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5838 ;;Total ram usage:        1 bytes
  5839 ;; Hardware stack levels used: 1
  5840 ;; Hardware stack levels required when called: 1
  5841 ;; This function calls:
  5842 ;;		_I2C_2_Master_Idle
  5843 ;; This function is called by:
  5844 ;;		_color_writetoaddr
  5845 ;;		_color_read_Red
  5846 ;;		_color_read_Green
  5847 ;;		_color_read_Blue
  5848 ;;		_color_read_Clear
  5849 ;;		_read_interrupt_status
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text31
  5854   011B9E                     __ptext31:
  5855                           	callstack 0
  5856   011B9E                     _I2C_2_Master_Write:
  5857                           	callstack 27
  5858                           
  5859                           ;incstack = 0
  5860                           ;I2C_2_Master_Write@data_byte stored from wreg
  5861   011B9E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  5862   011BA0                     
  5863                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5864   011BA0  EC62  F08D         	call	_I2C_2_Master_Idle	;wreg free
  5865   011BA4                     
  5866                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5867   011BA4  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5868   011BA8  0012               	return		;funcret
  5869   011BAA                     __end_of_I2C_2_Master_Write:
  5870                           	callstack 0
  5871                           
  5872 ;; *************** function _I2C_2_Master_Stop *****************
  5873 ;; Defined at:
  5874 ;;		line 39 in file "i2c.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      void 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;Total ram usage:        0 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; Hardware stack levels required when called: 1
  5895 ;; This function calls:
  5896 ;;		_I2C_2_Master_Idle
  5897 ;; This function is called by:
  5898 ;;		_color_writetoaddr
  5899 ;;		_color_read_Red
  5900 ;;		_color_read_Green
  5901 ;;		_color_read_Blue
  5902 ;;		_color_read_Clear
  5903 ;;		_read_interrupt_status
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text32
  5908   011BAA                     __ptext32:
  5909                           	callstack 0
  5910   011BAA                     _I2C_2_Master_Stop:
  5911                           	callstack 27
  5912   011BAA                     
  5913                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5914   011BAA  EC62  F08D         	call	_I2C_2_Master_Idle	;wreg free
  5915   011BAE                     
  5916                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5917   011BAE  010E               	movlb	14	; () banked
  5918   011BB0  85DA               	bsf	218,2,b	;volatile
  5919   011BB2                     
  5920                           ; BSR set to: 14
  5921   011BB2  0012               	return		;funcret
  5922   011BB4                     __end_of_I2C_2_Master_Stop:
  5923                           	callstack 0
  5924                           
  5925 ;; *************** function _I2C_2_Master_Start *****************
  5926 ;; Defined at:
  5927 ;;		line 27 in file "i2c.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;		None
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;		None
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      void 
  5934 ;; Registers used:
  5935 ;;		wreg, status,2, status,0, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5945 ;;Total ram usage:        0 bytes
  5946 ;; Hardware stack levels used: 1
  5947 ;; Hardware stack levels required when called: 1
  5948 ;; This function calls:
  5949 ;;		_I2C_2_Master_Idle
  5950 ;; This function is called by:
  5951 ;;		_color_writetoaddr
  5952 ;;		_color_read_Red
  5953 ;;		_color_read_Green
  5954 ;;		_color_read_Blue
  5955 ;;		_color_read_Clear
  5956 ;;		_read_interrupt_status
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text33
  5961   011BB4                     __ptext33:
  5962                           	callstack 0
  5963   011BB4                     _I2C_2_Master_Start:
  5964                           	callstack 27
  5965   011BB4                     
  5966                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5967   011BB4  EC62  F08D         	call	_I2C_2_Master_Idle	;wreg free
  5968   011BB8                     
  5969                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5970   011BB8  010E               	movlb	14	; () banked
  5971   011BBA  81DA               	bsf	218,0,b	;volatile
  5972   011BBC                     
  5973                           ; BSR set to: 14
  5974   011BBC  0012               	return		;funcret
  5975   011BBE                     __end_of_I2C_2_Master_Start:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _I2C_2_Master_RepStart *****************
  5979 ;; Defined at:
  5980 ;;		line 33 in file "i2c.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used: 1
  6000 ;; Hardware stack levels required when called: 1
  6001 ;; This function calls:
  6002 ;;		_I2C_2_Master_Idle
  6003 ;; This function is called by:
  6004 ;;		_color_read_Red
  6005 ;;		_color_read_Green
  6006 ;;		_color_read_Blue
  6007 ;;		_color_read_Clear
  6008 ;;		_read_interrupt_status
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text34
  6013   011BBE                     __ptext34:
  6014                           	callstack 0
  6015   011BBE                     _I2C_2_Master_RepStart:
  6016                           	callstack 27
  6017   011BBE                     
  6018                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6019   011BBE  EC62  F08D         	call	_I2C_2_Master_Idle	;wreg free
  6020   011BC2                     
  6021                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6022   011BC2  010E               	movlb	14	; () banked
  6023   011BC4  83DA               	bsf	218,1,b	;volatile
  6024   011BC6                     
  6025                           ; BSR set to: 14
  6026   011BC6  0012               	return		;funcret
  6027   011BC8                     __end_of_I2C_2_Master_RepStart:
  6028                           	callstack 0
  6029                           
  6030 ;; *************** function _I2C_2_Master_Read *****************
  6031 ;; Defined at:
  6032 ;;		line 51 in file "i2c.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  ack             1    wreg     unsigned char 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  ack             1    2[COMRAM] unsigned char 
  6037 ;;  tmp             1    3[COMRAM] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      unsigned char 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;Total ram usage:        3 bytes
  6052 ;; Hardware stack levels used: 1
  6053 ;; Hardware stack levels required when called: 1
  6054 ;; This function calls:
  6055 ;;		_I2C_2_Master_Idle
  6056 ;; This function is called by:
  6057 ;;		_color_read_Red
  6058 ;;		_color_read_Green
  6059 ;;		_color_read_Blue
  6060 ;;		_color_read_Clear
  6061 ;;		_read_interrupt_status
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text35
  6066   0119B4                     __ptext35:
  6067                           	callstack 0
  6068   0119B4                     _I2C_2_Master_Read:
  6069                           	callstack 27
  6070                           
  6071                           ; BSR set to: 14
  6072                           ;incstack = 0
  6073                           ;I2C_2_Master_Read@ack stored from wreg
  6074   0119B4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6075   0119B6                     
  6076                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6077   0119B6  EC62  F08D         	call	_I2C_2_Master_Idle	;wreg free
  6078   0119BA                     
  6079                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6080   0119BA  010E               	movlb	14	; () banked
  6081   0119BC  87DA               	bsf	218,3,b	;volatile
  6082                           
  6083                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6084   0119BE  EC62  F08D         	call	_I2C_2_Master_Idle	;wreg free
  6085   0119C2                     
  6086                           ;i2c.c: 57:   tmp = SSP2BUF;
  6087   0119C2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6088                           
  6089                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6090   0119C6  EC62  F08D         	call	_I2C_2_Master_Idle	;wreg free
  6091   0119CA                     
  6092                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6093   0119CA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6094   0119CC  B4D8               	btfsc	status,2,c
  6095   0119CE  EFEB  F08C         	goto	u1301
  6096   0119D2  EFEF  F08C         	goto	u1300
  6097   0119D6                     u1301:
  6098   0119D6  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6099   0119D8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6100   0119DA  EFF0  F08C         	goto	u1318
  6101   0119DE                     u1300:
  6102   0119DE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6103   0119E0                     u1318:
  6104   0119E0  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6105   0119E2  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6106   0119E4  010E               	movlb	14	; () banked
  6107   0119E6  51DA               	movf	218,w,b	;volatile
  6108   0119E8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6109   0119EA  0BDF               	andlw	-33
  6110   0119EC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6111   0119EE  6FDA               	movwf	218,b	;volatile
  6112   0119F0                     
  6113                           ; BSR set to: 14
  6114                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6115   0119F0  89DA               	bsf	218,4,b	;volatile
  6116   0119F2                     
  6117                           ; BSR set to: 14
  6118                           ;i2c.c: 61:   return tmp;
  6119   0119F2  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6120   0119F4                     
  6121                           ; BSR set to: 14
  6122   0119F4  0012               	return		;funcret
  6123   0119F6                     __end_of_I2C_2_Master_Read:
  6124                           	callstack 0
  6125                           
  6126 ;; *************** function _I2C_2_Master_Idle *****************
  6127 ;; Defined at:
  6128 ;;		line 22 in file "i2c.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;		None
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, status,2, status,0
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;Total ram usage:        1 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_I2C_2_Master_Start
  6152 ;;		_I2C_2_Master_RepStart
  6153 ;;		_I2C_2_Master_Stop
  6154 ;;		_I2C_2_Master_Write
  6155 ;;		_I2C_2_Master_Read
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	text36
  6160   011AC4                     __ptext36:
  6161                           	callstack 0
  6162   011AC4                     _I2C_2_Master_Idle:
  6163                           	callstack 27
  6164   011AC4                     l154:
  6165   011AC4  010E               	movlb	14	; () banked
  6166   011AC6  B5D8               	btfsc	216,2,b	;volatile
  6167   011AC8  EF68  F08D         	goto	u1241
  6168   011ACC  EF6A  F08D         	goto	u1240
  6169   011AD0                     u1241:
  6170   011AD0  EF62  F08D         	goto	l154
  6171   011AD4                     u1240:
  6172   011AD4                     
  6173                           ; BSR set to: 14
  6174   011AD4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6175   011AD8  0E1F               	movlw	31
  6176   011ADA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6177   011ADC  A4D8               	btfss	status,2,c
  6178   011ADE  EF73  F08D         	goto	u1251
  6179   011AE2  EF75  F08D         	goto	u1250
  6180   011AE6                     u1251:
  6181   011AE6  EF62  F08D         	goto	l154
  6182   011AEA                     u1250:
  6183   011AEA                     
  6184                           ; BSR set to: 14
  6185   011AEA  0012               	return		;funcret
  6186   011AEC                     __end_of_I2C_2_Master_Idle:
  6187                           	callstack 0
  6188                           
  6189 ;; *************** function ___lwdiv *****************
  6190 ;; Defined at:
  6191 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  dividend        2    6[COMRAM] unsigned int 
  6194 ;;  divisor         2    8[COMRAM] unsigned int 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  quotient        2   10[COMRAM] unsigned int 
  6197 ;;  counter         1   12[COMRAM] unsigned char 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  2    6[COMRAM] unsigned int 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2, status,0
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6207 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6210 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6211 ;;Total ram usage:        7 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_setMotorPWM
  6217 ;;		_collect_avg_readings
  6218 ;;		_normalise_readings
  6219 ;;		_make_master_closeness
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text37
  6224   011726                     __ptext37:
  6225                           	callstack 0
  6226   011726                     ___lwdiv:
  6227                           	callstack 29
  6228   011726  0E00               	movlw	0
  6229   011728  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  6230   01172A  0E00               	movlw	0
  6231   01172C  6E0B               	movwf	___lwdiv@quotient^0,c
  6232   01172E  5009               	movf	___lwdiv@divisor^0,w,c
  6233   011730  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6234   011732  B4D8               	btfsc	status,2,c
  6235   011734  EF9E  F08B         	goto	u1351
  6236   011738  EFA0  F08B         	goto	u1350
  6237   01173C                     u1351:
  6238   01173C  EFC8  F08B         	goto	l908
  6239   011740                     u1350:
  6240   011740  0E01               	movlw	1
  6241   011742  6E0D               	movwf	___lwdiv@counter^0,c
  6242   011744  EFA8  F08B         	goto	l2507
  6243   011748                     l2505:
  6244   011748  90D8               	bcf	status,0,c
  6245   01174A  3609               	rlcf	___lwdiv@divisor^0,f,c
  6246   01174C  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6247   01174E  2A0D               	incf	___lwdiv@counter^0,f,c
  6248   011750                     l2507:
  6249   011750  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  6250   011752  EFAD  F08B         	goto	u1361
  6251   011756  EFAF  F08B         	goto	u1360
  6252   01175A                     u1361:
  6253   01175A  EFA4  F08B         	goto	l2505
  6254   01175E                     u1360:
  6255   01175E                     l2509:
  6256   01175E  90D8               	bcf	status,0,c
  6257   011760  360B               	rlcf	___lwdiv@quotient^0,f,c
  6258   011762  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6259   011764  5009               	movf	___lwdiv@divisor^0,w,c
  6260   011766  5C07               	subwf	___lwdiv@dividend^0,w,c
  6261   011768  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  6262   01176A  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6263   01176C  A0D8               	btfss	status,0,c
  6264   01176E  EFBB  F08B         	goto	u1371
  6265   011772  EFBD  F08B         	goto	u1370
  6266   011776                     u1371:
  6267   011776  EFC2  F08B         	goto	l2517
  6268   01177A                     u1370:
  6269   01177A  5009               	movf	___lwdiv@divisor^0,w,c
  6270   01177C  5E07               	subwf	___lwdiv@dividend^0,f,c
  6271   01177E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  6272   011780  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6273   011782  800B               	bsf	___lwdiv@quotient^0,0,c
  6274   011784                     l2517:
  6275   011784  90D8               	bcf	status,0,c
  6276   011786  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6277   011788  3209               	rrcf	___lwdiv@divisor^0,f,c
  6278   01178A  2E0D               	decfsz	___lwdiv@counter^0,f,c
  6279   01178C  EFAF  F08B         	goto	l2509
  6280   011790                     l908:
  6281   011790  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  6282   011794  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6283   011798  0012               	return		;funcret
  6284   01179A                     __end_of___lwdiv:
  6285                           	callstack 0
  6286                           
  6287 ;; *************** function _LEDSon_init *****************
  6288 ;; Defined at:
  6289 ;;		line 18 in file "LEDsOn.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		None
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_main
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text38
  6317   011B12                     __ptext38:
  6318                           	callstack 0
  6319   011B12                     _LEDSon_init:
  6320                           	callstack 30
  6321   011B12                     
  6322                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  6323   011B12  9288               	bcf	136,1,c	;volatile
  6324                           
  6325                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  6326   011B14  9088               	bcf	136,0,c	;volatile
  6327                           
  6328                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  6329   011B16  9884               	bcf	132,4,c	;volatile
  6330                           
  6331                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  6332   011B18  9684               	bcf	132,3,c	;volatile
  6333                           
  6334                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  6335   011B1A  9086               	bcf	134,0,c	;volatile
  6336                           
  6337                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  6338   011B1C  9287               	bcf	135,1,c	;volatile
  6339                           
  6340                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  6341   011B1E  9E86               	bcf	134,7,c	;volatile
  6342                           
  6343                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  6344   011B20  9881               	bcf	129,4,c	;volatile
  6345                           
  6346                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  6347   011B22  8E7E               	bsf	126,7,c	;volatile
  6348                           
  6349                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  6350   011B24  827F               	bsf	127,1,c	;volatile
  6351                           
  6352                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  6353   011B26  8879               	bsf	121,4,c	;volatile
  6354                           
  6355                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  6356   011B28  987C               	bcf	124,4,c	;volatile
  6357                           
  6358                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  6359   011B2A  9280               	bcf	128,1,c	;volatile
  6360                           
  6361                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  6362   011B2C  907E               	bcf	126,0,c	;volatile
  6363                           
  6364                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  6365   011B2E  9080               	bcf	128,0,c	;volatile
  6366                           
  6367                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  6368   011B30  967C               	bcf	124,3,c	;volatile
  6369   011B32  0012               	return		;funcret
  6370   011B34                     __end_of_LEDSon_init:
  6371                           	callstack 0
  6372                           
  6373                           	psect	rparam
  6374   000000                     
  6375                           	psect	idloc
  6376                           
  6377                           ;Config register IDLOC0 @ 0x200000
  6378                           ;	unspecified, using default values
  6379   200000                     	org	2097152
  6380   200000  0FFF               	dw	4095
  6381                           
  6382                           ;Config register IDLOC1 @ 0x200002
  6383                           ;	unspecified, using default values
  6384   200002                     	org	2097154
  6385   200002  0FFF               	dw	4095
  6386                           
  6387                           ;Config register IDLOC2 @ 0x200004
  6388                           ;	unspecified, using default values
  6389   200004                     	org	2097156
  6390   200004  0FFF               	dw	4095
  6391                           
  6392                           ;Config register IDLOC3 @ 0x200006
  6393                           ;	unspecified, using default values
  6394   200006                     	org	2097158
  6395   200006  0FFF               	dw	4095
  6396                           
  6397                           ;Config register IDLOC4 @ 0x200008
  6398                           ;	unspecified, using default values
  6399   200008                     	org	2097160
  6400   200008  0FFF               	dw	4095
  6401                           
  6402                           ;Config register IDLOC5 @ 0x20000A
  6403                           ;	unspecified, using default values
  6404   20000A                     	org	2097162
  6405   20000A  0FFF               	dw	4095
  6406                           
  6407                           ;Config register IDLOC6 @ 0x20000C
  6408                           ;	unspecified, using default values
  6409   20000C                     	org	2097164
  6410   20000C  0FFF               	dw	4095
  6411                           
  6412                           ;Config register IDLOC7 @ 0x20000E
  6413                           ;	unspecified, using default values
  6414   20000E                     	org	2097166
  6415   20000E  0FFF               	dw	4095
  6416                           
  6417                           	psect	config
  6418                           
  6419                           ;Config register CONFIG1L @ 0x300000
  6420                           ;	External Oscillator mode Selection bits
  6421                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6422                           ;	Power-up default value for COSC bits
  6423                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6424   300000                     	org	3145728
  6425   300000  AA                 	db	170
  6426                           
  6427                           ;Config register CONFIG1H @ 0x300001
  6428                           ;	unspecified, using default values
  6429                           ;	Clock Out Enable bit
  6430                           ;	CLKOUTEN = 0x1, unprogrammed default
  6431                           ;	Clock Switch Enable bit
  6432                           ;	CSWEN = 0x1, unprogrammed default
  6433                           ;	Fail-Safe Clock Monitor Enable bit
  6434                           ;	FCMEN = 0x1, unprogrammed default
  6435   300001                     	org	3145729
  6436   300001  FF                 	db	255
  6437                           
  6438                           ;Config register CONFIG2L @ 0x300002
  6439                           ;	unspecified, using default values
  6440                           ;	Master Clear Enable bit
  6441                           ;	MCLRE = 0x1, unprogrammed default
  6442                           ;	Power-up Timer Enable bit
  6443                           ;	PWRTE = 0x1, unprogrammed default
  6444                           ;	Low-power BOR enable bit
  6445                           ;	LPBOREN = 0x1, unprogrammed default
  6446                           ;	Brown-out Reset Enable bits
  6447                           ;	BOREN = 0x3, unprogrammed default
  6448   300002                     	org	3145730
  6449   300002  FF                 	db	255
  6450                           
  6451                           ;Config register CONFIG2H @ 0x300003
  6452                           ;	unspecified, using default values
  6453                           ;	Brown Out Reset Voltage selection bits
  6454                           ;	BORV = 0x3, unprogrammed default
  6455                           ;	ZCD Disable bit
  6456                           ;	ZCD = 0x1, unprogrammed default
  6457                           ;	PPSLOCK bit One-Way Set Enable bit
  6458                           ;	PPS1WAY = 0x1, unprogrammed default
  6459                           ;	Stack Full/Underflow Reset Enable bit
  6460                           ;	STVREN = 0x1, unprogrammed default
  6461                           ;	Debugger Enable bit
  6462                           ;	DEBUG = 0x1, unprogrammed default
  6463                           ;	Extended Instruction Set Enable bit
  6464                           ;	XINST = 0x1, unprogrammed default
  6465   300003                     	org	3145731
  6466   300003  FF                 	db	255
  6467                           
  6468                           ;Config register CONFIG3L @ 0x300004
  6469                           ;	WDT Period Select bits
  6470                           ;	WDTCPS = 0x1F, unprogrammed default
  6471                           ;	WDT operating mode
  6472                           ;	WDTE = OFF, WDT Disabled
  6473   300004                     	org	3145732
  6474   300004  9F                 	db	159
  6475                           
  6476                           ;Config register CONFIG3H @ 0x300005
  6477                           ;	unspecified, using default values
  6478                           ;	WDT Window Select bits
  6479                           ;	WDTCWS = 0x7, unprogrammed default
  6480                           ;	WDT input clock selector
  6481                           ;	WDTCCS = 0x7, unprogrammed default
  6482   300005                     	org	3145733
  6483   300005  FF                 	db	255
  6484                           
  6485                           ;Config register CONFIG4L @ 0x300006
  6486                           ;	unspecified, using default values
  6487                           ;	Write Protection Block 0
  6488                           ;	WRT0 = 0x1, unprogrammed default
  6489                           ;	Write Protection Block 1
  6490                           ;	WRT1 = 0x1, unprogrammed default
  6491                           ;	Write Protection Block 2
  6492                           ;	WRT2 = 0x1, unprogrammed default
  6493                           ;	Write Protection Block 3
  6494                           ;	WRT3 = 0x1, unprogrammed default
  6495                           ;	Write Protection Block 3
  6496                           ;	WRT4 = 0x1, unprogrammed default
  6497                           ;	Write Protection Block 3
  6498                           ;	WRT5 = 0x1, unprogrammed default
  6499                           ;	Write Protection Block 3
  6500                           ;	WRT6 = 0x1, unprogrammed default
  6501                           ;	Write Protection Block 3
  6502                           ;	WRT7 = 0x1, unprogrammed default
  6503   300006                     	org	3145734
  6504   300006  FF                 	db	255
  6505                           
  6506                           ;Config register CONFIG4H @ 0x300007
  6507                           ;	unspecified, using default values
  6508                           ;	Configuration Register Write Protection bit
  6509                           ;	WRTC = 0x1, unprogrammed default
  6510                           ;	Boot Block Write Protection bit
  6511                           ;	WRTB = 0x1, unprogrammed default
  6512                           ;	Data EEPROM Write Protection bit
  6513                           ;	WRTD = 0x1, unprogrammed default
  6514                           ;	Scanner Enable bit
  6515                           ;	SCANE = 0x1, unprogrammed default
  6516                           ;	Low Voltage Programming Enable bit
  6517                           ;	LVP = 0x1, unprogrammed default
  6518   300007                     	org	3145735
  6519   300007  FF                 	db	255
  6520                           
  6521                           ;Config register CONFIG5L @ 0x300008
  6522                           ;	unspecified, using default values
  6523                           ;	UserNVM Program Memory Code Protection bit
  6524                           ;	CP = 0x1, unprogrammed default
  6525                           ;	DataNVM Memory Code Protection bit
  6526                           ;	CPD = 0x1, unprogrammed default
  6527   300008                     	org	3145736
  6528   300008  FF                 	db	255
  6529                           
  6530                           ;Config register CONFIG5H @ 0x300009
  6531                           ;	unspecified, using default values
  6532   300009                     	org	3145737
  6533   300009  FF                 	db	255
  6534                           
  6535                           ;Config register CONFIG6L @ 0x30000A
  6536                           ;	unspecified, using default values
  6537                           ;	Table Read Protection Block 0
  6538                           ;	EBTR0 = 0x1, unprogrammed default
  6539                           ;	Table Read Protection Block 1
  6540                           ;	EBTR1 = 0x1, unprogrammed default
  6541                           ;	Table Read Protection Block 2
  6542                           ;	EBTR2 = 0x1, unprogrammed default
  6543                           ;	Table Read Protection Block 3
  6544                           ;	EBTR3 = 0x1, unprogrammed default
  6545                           ;	Table Read Protection Block 4
  6546                           ;	EBTR4 = 0x1, unprogrammed default
  6547                           ;	Table Read Protection Block 5
  6548                           ;	EBTR5 = 0x1, unprogrammed default
  6549                           ;	Table Read Protection Block 6
  6550                           ;	EBTR6 = 0x1, unprogrammed default
  6551                           ;	Table Read Protection Block 7
  6552                           ;	EBTR7 = 0x1, unprogrammed default
  6553   30000A                     	org	3145738
  6554   30000A  FF                 	db	255
  6555                           
  6556                           ;Config register CONFIG6H @ 0x30000B
  6557                           ;	unspecified, using default values
  6558                           ;	Boot Block Table Read Protection bit
  6559                           ;	EBTRB = 0x1, unprogrammed default
  6560   30000B                     	org	3145739
  6561   30000B  FF                 	db	255
  6562                           tosu	equ	0xFFF
  6563                           tosh	equ	0xFFE
  6564                           tosl	equ	0xFFD
  6565                           stkptr	equ	0xFFC
  6566                           pclatu	equ	0xFFB
  6567                           pclath	equ	0xFFA
  6568                           pcl	equ	0xFF9
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           prodh	equ	0xFF4
  6574                           prodl	equ	0xFF3
  6575                           indf0	equ	0xFEF
  6576                           postinc0	equ	0xFEE
  6577                           postdec0	equ	0xFED
  6578                           preinc0	equ	0xFEC
  6579                           plusw0	equ	0xFEB
  6580                           fsr0h	equ	0xFEA
  6581                           fsr0l	equ	0xFE9
  6582                           wreg	equ	0xFE8
  6583                           indf1	equ	0xFE7
  6584                           postinc1	equ	0xFE6
  6585                           postdec1	equ	0xFE5
  6586                           preinc1	equ	0xFE4
  6587                           plusw1	equ	0xFE3
  6588                           fsr1h	equ	0xFE2
  6589                           fsr1l	equ	0xFE1
  6590                           bsr	equ	0xFE0
  6591                           indf2	equ	0xFDF
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           preinc2	equ	0xFDC
  6595                           plusw2	equ	0xFDB
  6596                           fsr2h	equ	0xFDA
  6597                           fsr2l	equ	0xFD9
  6598                           status	equ	0xFD8

Data Sizes:
    Strings     286
    Constant    0
    Data        18
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160    143     150
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    normalise_readings@normalised_values	PTR unsigned int [3] size(2) Largest target is 18
		 -> main@normalised_values(BANK0[18]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_6(CODE[59]), STR_5(CODE[59]), STR_4(CODE[60]), STR_3(CODE[58]), 
		 -> STR_2(CODE[24]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 60
		 -> STR_6(CODE[59]), STR_5(CODE[59]), STR_4(CODE[60]), STR_3(CODE[58]), 
		 -> STR_2(CODE[24]), STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 60
		 -> STR_6(CODE[59]), STR_5(CODE[59]), STR_4(CODE[60]), STR_3(CODE[58]), 
		 -> STR_2(CODE[24]), STR_1(CODE[26]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2183$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_6(CODE[59]), STR_5(CODE[59]), STR_4(CODE[60]), STR_3(CODE[58]), 
		 -> STR_2(CODE[24]), STR_1(CODE[26]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2134$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2134$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    determine_card@master_closeness	PTR unsigned int  size(2) Largest target is 6
		 -> main@master_closeness(BANK0[6]), 

    make_master_closeness@buf	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    make_master_closeness@normalised_values	PTR unsigned int [3] size(2) Largest target is 18
		 -> main@normalised_values(BANK0[18]), 

    make_master_closeness@master_closeness	PTR unsigned int  size(2) Largest target is 6
		 -> main@master_closeness(BANK0[6]), 

    normalise_readings@buf	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    normalise_readings@expected_values	PTR unsigned int [3] size(2) Largest target is 18
		 -> main@expected_values(BANK0[18]), 

    collect_avg_readings@blue_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@blue_read(BANK0[2]), 

    collect_avg_readings@green_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@green_read(BANK0[2]), 

    collect_avg_readings@red_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@red_read(BANK0[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S532DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S532DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_make_master_closeness
    _setMotorPWM->___lwdiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _collect_avg_readings->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_normalise_readings
    _normalise_readings->_sprintf
    _make_master_closeness->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                90    90      0   44958
                                             91 COMRAM     2     2      0
                                             56 BANK0     87    87      0
                  _I2C_2_Master_Init
                        _LEDSon_init
               _collect_avg_readings
                   _color_click_init
                     _determine_card
                    _initDCmotorsPWM
                         _initUSART4
              _make_master_closeness
                 _normalise_readings
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3285
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _normalise_readings                                  31    19     12   14476
                                             25 BANK0     31    19     12
                            ___lwdiv
                             ___wmul
                                _abs
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _make_master_closeness                               27    21      6   12599
                                             90 COMRAM     1     1      0
                                             25 BANK0     26    20      6
                            ___lwdiv
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   10200
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9087
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6    8735
                                             62 COMRAM    20    14      6
                               _dtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3255
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4105
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2227
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     370
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     523
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _determine_card                                      10     8      2     302
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     598
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     598
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _collect_avg_readings                                11     5      6    2109
                                             13 COMRAM    11     5      6
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1206
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _collect_avg_readings
     ___lwdiv
       ___wmul (ARG)
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_card
   _initDCmotorsPWM
   _initUSART4
   _make_master_closeness
     ___lwdiv
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _utoa
             ___lodiv
             ___lomod
             _pad
   _normalise_readings
     ___lwdiv
     ___wmul
     _abs
     _sendStringSerial4
     _sprintf
   _sendStringSerial4
   _setMotorPWM
     ___lwdiv
     ___wmul
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8F      96       5       93.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITBIGSFRllhhhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllhhhl     37      0       0      42        0.0%
BITBIGSFRllhhhl     2D      0       0      45        0.0%
BITBIGSFRllllhl     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllhhhl     1E      0       0      46        0.0%
BITBIGSFRhhlll      1D      0       0      36        0.0%
BITBIGSFRllhhl      11      0       0      47        0.0%
BITBIGSFRllllhl      F      0       0      54        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhl      9      0       0      53        0.0%
BITBIGSFRllhhhl      8      0       0      43        0.0%
BITBIGSFRlllllh      6      0       0      55        0.0%
BITBIGSFRllllhh      6      0       0      51        0.0%
BITBIGSFRlllhl       5      0       0      50        0.0%
BITBIGSFRlllhh       3      0       0      49        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRllhhhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhhhh      1      0       0      37        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhl      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllhl        1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     177      57        0.0%
DATA                 0      0     177       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 05 22:30:26 2022

                        _color_read_Red 183E                         _color_read_Blue 18DE  
                                    l22 1B72                                      l31 192C  
                                    l25 188C                                      l19 1A68  
                                    l28 18DC                                      l95 1068  
                                    l88 162A                     ___wmul@multiplicand 0003  
                      _color_read_Green 188E                                     l300 1318  
                                   l310 0D74                                     l151 1AC2  
                                   l160 1BBC                                     l305 0348  
                                   l154 1AC4                                     l163 1BC6  
                                   l172 19F4                                     l316 16AA  
                                   l157 1AEA                                     l166 1BB2  
                                   l257 1B32                                     l169 1BA8  
                                   l417 1B10                                     l531 0EFC  
                                   l364 1B52                                     l373 1B76  
                                   l382 1A98                                     l376 1B8A  
                                   l544 11CC                                     l915 1798  
                                   l908 1790                                     l862 1408  
                                   l855 13E8                                     l872 14D8  
                                   l865 14B8                                     u820 14EC  
                                   u901 0DE4                                     u821 14E8  
                                   u910 0E08                                     u830 14FE  
                                   u911 0E04                                     u831 14FA  
                                   u920 0E32                                     u840 1526  
                                   u921 0E2E                                     u841 1522  
                                   u930 0E72                                     u850 155C  
                                   u931 0E6E                                     u851 1558  
                                   u940 0EBC                                     u860 1970  
                                   u941 0EB8                                     u861 196C  
                                   u950 107C                                     u870 1A10  
                                   u951 1078                                     u871 1A0C  
                                   u880 0D88                                     u960 10AE  
                                   u881 0D84                                     u961 10AA  
                                   u890 0DBA                                     u970 10EC  
                                   u891 0DB6                                     u971 10E8  
                                   u980 1116                                     u981 1112  
                                   u990 1144                                     u991 1140  
   normalise_readings@normalised_values 0083                                     _abs 19F6  
                                   _pad 16AC                                     wreg 000FE8  
                                  l1102 17EA                                    l1201 1BC8  
                                  ?_abs 0013                                    l1124 16CE  
                                  l1133 03D6                                    l2111 14EC  
                                  l1135 03DE                                    l1151 0A32  
                                  l1128 1724                                    l1136 0424  
                                  l2201 1144                                    l2113 14FE  
                                  l1153 0A3A                                    l2211 11AC  
                                  l2203 1164                                    l2131 19F6  
                                  l2115 1508                                    l2123 192E  
                                  l1147 05C6                                    l1092 1A2C  
                                  l2141 0DA8                                    l2205 1176  
                                  l2133 1A10                                    l2117 1526  
                                  l2109 14DA                                    l2125 193A  
                                  l2301 04CA                                    l2221 134C  
                                  l1190 15A2                                    l1166 0800  
                                  l2151 0DEA                                    l2143 0DAC  
                                  l2135 0D76                                    l2207 117C  
                                  l1095 1A34                                    l2119 155C  
                                  l2127 194C                                    l2311 0590  
                                  l2303 052E                                    l2231 13CE  
                                  l2223 1360                                    l2215 131A  
                                  l1159 0BCA                                    l2401 1BA0  
                                  l2161 0E44                                    l2153 0E08  
                                  l2145 0DBA                                    l2137 0D7A  
                                  l2209 118C                                    l2129 1950  
                                  l2313 0596                                    l2305 0548  
                                  l2233 13D0                                    l2225 136E  
                                  l2217 1326                                    l2241 1430  
                                  l2321 0A26                                    l1178 183C  
                                  l2411 1BC2                                    l2403 1BA4  
                                  l2163 0E72                                    l2155 0E10  
                                  l2171 0EAC                                    l2147 0DDA  
                                  l2139 0D88                                    l2315 05A6  
                                  l2307 0566                                    l2235 13E2  
                                  l2227 1380                                    l2219 1344  
                                  l2251 14B2                                    l2243 1444  
                                  l2331 0AF0                                    l2323 0A62  
                                  l2501 172E                                    l2421 19F0  
                                  l2413 19B6                                    l2405 1BAA  
                                  l2173 0EBC                                    l2165 0E92  
                                  l2157 0E24                                    l2149 0DDE  
                                  l2181 106E                                    l2261 16EE  
                                  l2253 16AC                                    l2309 0580  
                                  l2229 13AE                                    l2245 1452  
                                  l2237 140A                                    l2341 0B90  
                                  l2333 0AF6                                    l2325 0A6A  
                                  l1198 1970                                    l2511 1764  
                                  l2503 1740                                    l2423 19F2  
                                  l2415 19BA                                    l2407 1BAE  
                                  l2175 0EDC                                    l2167 0E94  
                                  l2159 0E32                                    l2191 10CE  
                                  l2183 107C                                    l2263 16F2  
                                  l2255 16BA                                    l2271 037E  
                                  l2247 1480                                    l2239 1428  
                                  l2343 0BAA                                    l2335 0AFC  
                                  l2327 0A74                                    l2319 0A0A  
                                  l2351 05C8                                    l2431 17EC  
                                  l2513 177A                                    l2505 1748  
                                  l2417 19C2                                    l2409 1BBE  
                                  l2441 1A9A                                    l2521 1A36  
                                  l2169 0EA6                                    l2193 10EC  
                                  l2185 109C                                    l2265 1710  
                                  l2257 16C6                                    l2281 03F6  
                                  l2273 038E                                    l2249 14A0  
                                  l2329 0A7A                                    l2337 0B60  
                                  l2361 0620                                    l2353 05F0  
                                  l2433 17F8                                    l2515 1782  
                                  l2507 1750                                    l2347 1AC4  
                                  l2419 19CA                                    l2451 1AB0  
                                  l2443 1AA4                                    l2523 1A3A  
                                  l2531 15A4                                    l2427 1B76  
                                  l2195 10F4                                    l2187 10A0  
                                  l2179 106A                                    l2259 16DA  
                                  l2291 042C                                    l2283 03FC  
                                  l2275 03AE                                    l2267 034A  
                                  l2339 0B72                                    l2371 06E6  
                                  l2363 0640                                    l2355 05FE  
                                  l2435 1814                                    l2517 1784  
                                  l2509 175E                                    l2349 1AD4  
                                  l2461 188E                                    l2445 1AAA  
                                  l2453 1B56                                    l2525 1A44  
                                  l2541 1606                                    l2533 15AC  
                                  l2429 1B86                                    l2197 1108  
                                  l2189 10AE                                    l2293 0436  
                                  l2285 040C                                    l2277 03CA  
                                  l2269 036A                                    l2381 0792  
                                  l2373 0706                                    l2365 0660  
                                  l2357 060C                                    l2437 1834  
                                  l2519 178A                                    l2463 18D4  
                                  l2455 183E                                    l2447 1AAC  
                                  l2527 1A54                                    l2551 1628  
                                  l2543 1610                                    l2535 15D6  
                                  l2199 1116                                    l2295 043C  
                                  l2287 0418                                    l2279 03E6  
                                  l2375 0762                                    l2383 07C2  
                                  l2367 06B6                                    l2359 0610  
                                  l2711 00FC                                    l2703 0006  
                                  l2633 1B12                                    l2457 1884  
                                  l2449 1AAE                                    l2529 1A5E  
                                  l2545 1612                                    l2537 15FA  
                                  l2641 1B42                                    l2297 04BE  
                                  l2289 0420                                    l2481 17D8  
                                  l2473 179A                                    l2721 02B4  
                                  l2713 0142                                    l2705 0088  
                                  l2561 0F86                                    l2553 0EFE  
                                  l2467 18DE                                    l2547 161C  
                                  l2539 1604                                    l2643 1B4C  
                                  l2635 1B34                                    l2491 1A80  
                                  l2299 04C4                                    l2387 07D4  
                                  l2475 17AC                                    l2731 0BCC  
                                  l2723 030E                                    l2715 0198  
                                  l2707 00D6                                    l2563 0FC8  
                                  l2555 0F1A                                    l2811 080A  
                                  l2397 1BB4                                    l2469 1924  
                                  l2661 1200                                    l2549 161E  
                                  l2645 1B4E                                    l2637 1B3E  
                                  l2485 1A6A                                    l2477 17B4  
                                  l2741 0D3C                                    l2493 1AEC  
                                  l2725 031A                                    l2717 01F2  
                                  l2709 00E2                                    l2565 0FE4  
                                  l2557 0F6E                                    l2821 0820  
                                  l2813 080E                                    l2399 1BB8  
                                  l2671 1240                                    l2663 1210  
                                  l2655 11D2                                    l2751 1630  
                                  l2647 1B50                                    l2639 1B40  
                                  l2487 1A6E                                    l2479 17BC  
                                  l2743 0D56                                    l2495 1B08  
                                  l2727 0334                                    l2719 01FE  
                                  l2567 1028                                    l2559 0F82  
                                  l2831 083E                                    l2823 0824  
                                  l2815 0812                                    l2807 0802  
                                  l2681 12AA                                    l2673 1254  
                                  l2665 123C                                    l2657 11E6  
                                  l2649 11CE                                    l2761 1672  
                                  l2753 1640                                    l2489 1A7C  
                                  l2745 0D62                                    l2737 0BD0  
                                  l2729 0338                                    l2841 085A  
                                  l2833 0842                                    l2825 0828  
                                  l2817 0816                                    l2809 0806  
                                  l2499 1726                                    l2691 12DA  
                                  l2675 126C                                    l2659 11FE  
                                  l2763 1692                                    l2747 0D64  
                                  l2739 0C90                                    l2851 088A  
                                  l2843 0860                                    l2835 0846  
                                  l2827 0830                                    l2819 081A  
                                  l2693 12DC                                    l2677 126E  
                                  l2765 1696                                    l2749 162C  
                                  l2861 08EE                                    l2853 0894  
                                  l2845 086C                                    l2837 084A  
                                  l2829 0838                                    ?_pad 0011  
                                  l2695 12EC                                    l2687 12AE  
                                  l2679 127E                                    l2767 1698  
                                  l2759 1644                                    l2871 0954  
                                  l2863 08FA                                    l2855 089C  
                                  l2847 0878                                    l2839 0852  
                                  l2689 12C2                                    l2769 16A8  
                                  l2697 0000                                    l2881 09CE  
                                  l2873 0956                                    l2865 0912  
                                  l2857 08A4                                    l2849 0878  
                                  l2883 09D0                                    l2875 098C  
                                  l2867 0930                                    l2859 08C0  
                                  l2885 09D2                                    l2877 09A4  
                                  l2869 093C                                    l2887 09EA  
                                  l2879 09C2                                    l2999 07B4  
                                  STR_1 FFCD                                    STR_2 FFE7  
                                  STR_3 FF93                                    STR_4 FEE1  
                                  STR_5 FF1D                                    STR_6 FF58  
                                  u1000 118C                                    u1001 1188  
                                  u1011 1320                                    u1100 037A  
                                  u1020 1344                                    u1101 0374  
                                  u1021 1340                                    u1110 037C  
                                  u1030 136E                                    u1031 136A  
                                  u1120 038E                                    u1040 13AE  
                                  u1200 0A26                                    u1121 038A  
                                  u1041 13AA                                    u1201 0A22  
                                  u1130 03CA                                    u1050 1428  
                                  u1210 0B72                                    u1131 03C6  
                                  u1051 1424                                    u1211 0B6E  
                                  u1300 19DE                                    u1140 03F6  
                                  u1060 1452                                    u1220 0B90  
                          ?_LEDSon_init 0001                                    u1301 19D6  
                                  u1141 03F2                                    u1061 144E  
                                  u1221 0B8C                                    u1150 040C  
                                  u1070 1480                                    u1230 0BAA  
                                  u1151 0408                                    u1071 147C  
                                  u1231 0BA6                                    u1240 1AD4  
                                  u1320 1B86                                    u1080 16BA  
                                  u1160 0548                                    u1241 1AD0  
                                  u1321 1B82                                    u1081 16B6  
                                  u1161 0544                                    u1250 1AEA  
                                  u1090 1710                                    u1170 0566  
                                  u1330 1834                                    u1251 1AE6  
                                  u1091 170C                                    u1171 0562  
                                  u1331 1830                                    u1500 1672  
                                  u1340 1A98                                    u1180 0580  
                                  u1260 05F0                                    u1501 166E  
                                  u1341 1A94                                    u1181 057C  
                                  u1261 05EC                                    u1350 1740  
                                  u1318 19E0                                    u1510 16A8  
                                  u1190 0590                                    u1270 0640  
                                  u1351 173C                                    u1511 16A4  
                                  u1191 058C                                    u1271 063C  
                                  u1360 175E                                    u1280 0660  
                          _BAUD4CONbits 000EE9                                    u1361 175A  
                                  u1281 065C                                    u1370 177A  
                                  u1450 1210                                    u1290 0706  
                                  u1371 1776                                    u1451 120C  
                                  u1291 0702                                    u1460 127E  
                                  u1380 0F1A                                    u1461 127A  
                                  u1381 0F16                                    u1541 0882  
                                  u1470 12EC                                    u1390 0FE4  
                                  u1471 12E8                                    u1391 0FE0  
                                  u1607 0946                                    u1480 0348  
                                  u1481 0344                                    u1617 0996  
                                  u1490 0D74                                    _T2PR 000FBC  
                                  u1707 125E                                    u1491 0D70  
                                  u1627 09DC                                    u1717 12CC  
                                  u1637 09F4                                    u1647 00EE  
                                  u1657 020A                                    u1667 0326  
                                  u1677 0D48                                    u1597 0904  
                                  u1687 1A4A                                    u1697 11F0  
            normalise_readings@red_read 007B                                    abs@a 0013  
                                  _dbuf 0150                                    _main 0802  
                                  _dtoa 034A                                    _prec 00F1  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  _utoa 0A0A                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                __end_of_color_read_Red 188E             normalise_readings@blue_read 007F  
                          ___param_bank 000000                                   ??_abs 0015  
                                 ??_pad 0017                         __end_of___aodiv 0EFE  
                                 ?_main 0001                                   ?_dtoa 001C  
                       __end_of___aomod 11CE                                   ?_utoa 001C  
                       __end_of___lodiv 140A                         __end_of___lomod 14DA  
                       __end_of___lwdiv 179A                            vfpfcnvrt@fmt 0041  
                          main@red_read 00D7                 __end_of_sendCharSerial4 1B8C  
            __end_of_I2C_2_Master_Start 1BBE              __end_of_I2C_2_Master_Write 1BAA  
                                 _flags 00F3                                   _fputc 14DA  
                                 _fputs 192E                                   pad@fp 0011  
        determine_card@master_closeness 0001                 ??_make_master_closeness 007F  
                                 _width 00EF                                   _putch 1BC8  
                                 dtoa@d 001E                                   dtoa@i 003C  
                                 dtoa@n 0034                                   dtoa@p 0030  
                                 dtoa@s 003E                                   dtoa@w 0032  
                   normalise_readings@i 0097                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 utoa@d 001E                                   utoa@i 003A  
                                 utoa@n 0032                                   utoa@p 0030  
                                 utoa@w 002E                                   status 000FD8  
                       __end_of_sprintf 17EC                        ___lodiv@dividend 0001  
               __end_of_color_read_Blue 192E                   _I2C_2_Master_RepStart 1BBE  
                       ?_color_read_Red 0005                         __initialization 1972  
                          __end_of_main 0A0A                            __end_of_dtoa 05C8  
                          __end_of_utoa 0BCC                                  ??_main 005C  
                                ??_dtoa 0026                                  ??_utoa 0026  
                         __activetblptr 000003                           main@blue_read 00DB  
                      ___lodiv@quotient 0011                            ?_setMotorPWM 000E  
                                ?_fputc 0001                                  ?_fputs 000A  
                                _CCPR1H 000FAA                                  _CCPR2H 000FA6  
                                _CCPR3H 000F25                                  _CCPR4H 000F21  
          collect_avg_readings@red_read 000E                                  ?_putch 0001  
                                _RC0PPS 000E62                                  _RC4REG 000EE3  
                                _RE2PPS 000E74                                  _RD5PPS 000E6F  
                                _RC7PPS 000E69                                  _RD6PPS 000E70  
                                _RE4PPS 000E76                                  _RG6PPS 000E88  
              __end_of_color_click_init 1A6A                  make_master_closeness@i 005B  
                                _RX4PPS 000E15                                  _TX4REG 000EE4  
                          _CCPTMRS0bits 000FAD                            vfprintf@cfmt 0059  
                             ??___aodiv 0011                               ??___aomod 0011  
                                ___wmul 1AEC                      _normalise_readings 0000  
                             ??___lodiv 0011                               ??___lomod 0011  
                             ??___lwdiv 000B                                  clear_0 1998  
                                clear_1 19A4                                  isa$std 000001  
                                pad@buf 0013                                  dtoa@fp 001C  
                   ?_normalise_readings 0079                                  fputc@c 0001  
                                fputs@c 000E                                  fputs@i 000F  
                                fputs@s 000A                            __mediumconst FEE0  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                        ?_sendCharSerial4 0001  
                                putch@c 0001                        __end_of_vfprintf 183E  
                                utoa@fp 001C                       ??_initDCmotorsPWM 0001  
                             ??_sprintf 005B                              __accesstop 0060  
               __end_of__initialization 19AE                __end_of_color_read_Green 18DE  
                ?_I2C_2_Master_RepStart 0001                    ??_normalise_readings 0085  
                         ___rparam_used 000001                        ?_color_read_Blue 0005  
          __end_of_collect_avg_readings 131A                          __pcstackCOMRAM 0001  
                          __pidataBANK1 1B8C              collect_avg_readings@i_1475 0017  
            collect_avg_readings@i_1477 0018                           __end_of_fputc 15A4  
                         __end_of_fputs 1972                           __end_of_putch 1BCA  
                 main@normalised_values 00AC                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00EF                              __pbssBANK1 0100  
                     _color_writetoaddr 1B54                            _T2CLKCONbits 000FBF  
                    ?_color_writetoaddr 0003                                 ?___wmul 0001  
                   ??_color_writetoaddr 0004                          main@green_read 00D9  
                               _SP4BRGH 000EE6                                 _SP4BRGL 000EE5  
                               _SSP2ADD 000ED6                                 _SSP2BUF 000ED5  
                      ___lomod@dividend 0001                  color_writetoaddr@value 0003  
                      ??_color_read_Red 0007           __end_of_make_master_closeness 0D76  
        determine_card@predicted_colour 0009               __end_of_color_writetoaddr 1B74  
                    _I2C_2_Master_Start 1BB4                              _initUSART4 1B34  
                    _I2C_2_Master_Write 1B9E                                 __Hparam 0000  
                               __Lparam 0000                       color_read_Red@tmp 000A  
make_master_closeness@normalised_values 007B                 sendStringSerial4@string 0002  
                               ___aodiv 0D76                                 ___aomod 106A  
                               ___lodiv 131A                     ?_I2C_2_Master_Start 0001  
                               ___lomod 140A                                 ___lwdiv 1726  
                   ?_I2C_2_Master_Write 0001                               ?_vfprintf 0053  
                               __pcinit 1972                                 __ramtop 0E00  
                               __ptext0 0802                                 __ptext1 0EFE  
                               __ptext2 0000                                 __ptext3 1AEC  
                               __ptext4 0BCC                                 __ptext5 179A  
                               __ptext6 17EC                                 __ptext7 05C8  
                               __ptext8 0A0A                                 __ptext9 140A  
                             _T2CONbits 000FBD                               _T2HLTbits 000FBE  
                         _RxBufWriteCnt 00F5                    _collect_avg_readings 11CE  
                               main@buf 0098                                 _sprintf 179A  
                  ??_I2C_2_Master_Start 0002                    ??_I2C_2_Master_Write 0002  
                  end_of_initialization 19AE          collect_avg_readings@green_read 0010  
                 normalise_readings@buf 0079                                 fputc@fp 0003  
                               fputs@fp 000C                       ?_color_click_init 0001  
                    ??_color_click_init 0005                       __end_of_vfpfcnvrt 0802  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                        vfpfcnvrt@convarg 0049  
                            main@F14643 0170                              ??_vfprintf 0059  
                       _initDCmotorsPWM 15A4                      setMotorPWM@negDuty 0013  
     normalise_readings@expected_values 0081                               _TRISAbits 000F81  
                    setMotorPWM@posDuty 0012                               _TRISCbits 000F83  
                             _TRISDbits 000F84                               _TRISEbits 000F85  
                             _TRISFbits 000F86                               _TRISGbits 000F87  
                             _TRISHbits 000F88                   ?_collect_avg_readings 000E  
                   main@expected_values 00BE                color_writetoaddr@address 0004  
               ??_I2C_2_Master_RepStart 0002                             _CCP1CONbits 000FAB  
                          _EUSART4RXbuf 013C                            _EUSART4TXbuf 0100  
                           _CCP2CONbits 000FA7                       ?_color_read_Green 0005  
                           _CCP3CONbits 000F26                             ?_initUSART4 0001  
                           _CCP4CONbits 000F22               sendCharSerial4@charToSend 0001  
                            main@motorL 00DD                              main@motorR 00E6  
                    ??_color_read_Green 0007                    main@master_closeness 00D0  
                           vfpfcnvrt@ap 0043                             vfpfcnvrt@cp 0051  
                           vfpfcnvrt@fp 003F                          __end_of___wmul 1B12  
                       determine_card@i 000A                     start_initialization 1972  
                       ___lodiv@divisor 0009                         ___lodiv@counter 0019  
                           __end_of_abs 1A36                             __end_of_pad 1726  
                         _TxBufWriteCnt 005F                           ??_LEDSon_init 0001  
                   color_read_Green@tmp 000A                 __end_of_initDCmotorsPWM 162C  
                           vfprintf@fmt 0055                                ??___wmul 0005  
                           __pdataBANK1 0170                          _determine_card 162C  
                           __pbssCOMRAM 005E                  ??_collect_avg_readings 0014  
                         __pcstackBANK0 0060                        ___aodiv@dividend 0001  
                   __end_of_LEDSon_init 1B34                        ___lwdiv@dividend 0007  
                             _dtoa$2211 002E                           __pmediumconst FEE0  
                              ?___aodiv 0001                                ?___aomod 0001  
                      ___aodiv@quotient 0013                                ?___lodiv 0001  
                              ?___lomod 0001                  __end_of_determine_card 16AC  
                              ?___lwdiv 0007                    I2C_2_Master_Read@ack 0003  
                  I2C_2_Master_Read@tmp 0004                         ___lomod@divisor 0009  
                       ___lomod@counter 0011                       _I2C_2_Master_Idle 1AC4  
                     _I2C_2_Master_Init 1A9A                       _I2C_2_Master_Read 19B4  
                     _I2C_2_Master_Stop 1BAA                            _RxBufReadCnt 00F4  
                    ?_I2C_2_Master_Idle 0001                      ?_I2C_2_Master_Init 0001  
                    ?_I2C_2_Master_Read 0001                           ??_setMotorPWM 0010  
                    ?_I2C_2_Master_Stop 0001                        ___lwdiv@quotient 000B  
                              ?_sprintf 0060                       _sendStringSerial4 1A6A  
                   ??_I2C_2_Master_Idle 0001                     ??_I2C_2_Master_Init 0001  
                   ??_I2C_2_Master_Read 0002                          ___wmul@product 0005  
                              _LATAbits 000F79                     ??_I2C_2_Master_Stop 0002  
                              _LATDbits 000F7C                                _LATFbits 000F7E  
                              _LATGbits 000F7F                                _LATHbits 000F80  
                    ?_sendStringSerial4 0002                                _PIE4bits 000E2D  
                 _make_master_closeness 0BCC                                _PIR4bits 000E37  
                      ?_initDCmotorsPWM 0001               normalise_readings@normalB 008F  
             normalise_readings@normalG 008D               normalise_readings@normalR 008B  
                     ??_sendCharSerial4 0001                make_master_closeness@buf 0079  
                              _SSP2CON2 000EDA                     ??_sendStringSerial4 0004  
                              _SSP2STAT 000ED8                         ?_determine_card 0001  
                             _vfpfcnvrt 05C8               __end_of_I2C_2_Master_Idle 1AEC  
             __end_of_I2C_2_Master_Init 1AC4               __end_of_I2C_2_Master_Read 19F6  
                     ___wmul@multiplier 0001               __end_of_I2C_2_Master_Stop 1BB4  
                          setMotorPWM@m 000E             I2C_2_Master_Write@data_byte 0002  
          normalise_readings@green_read 007D                       ??_color_read_Blue 0007  
                          _TxBufReadCnt 005E                               copy_data0 1986  
             __end_of_sendStringSerial4 1A9A                             _LEDSon_init 1B12  
         __end_of_I2C_2_Master_RepStart 1BC8                      color_read_Blue@tmp 000A  
                   __end_of_setMotorPWM 106A                            ??_initUSART4 0001  
                              __Hrparam 0000                              vfprintf@ap 0057  
                              __Lrparam 0000                              vfprintf@fp 0053  
 make_master_closeness@master_closeness 007D                              ?_vfpfcnvrt 003F  
                       ___aodiv@divisor 0009                         ___aodiv@counter 0011  
                            _ANSELDbits 000EA7                              sprintf@fmt 0062  
                       ___lwdiv@divisor 0009                      __end_of_initUSART4 1B54  
                       ___lwdiv@counter 000D                                __ptext10 131A  
                              __ptext11 034A                                __ptext20 1B74  
                              __ptext12 16AC                                __ptext21 1B34  
                              __ptext13 192E                                __ptext30 18DE  
                              __ptext22 15A4                                __ptext14 14DA  
                              __ptext31 1B9E                                __ptext23 162C  
                              __ptext15 1BC8                                __ptext32 1BAA  
                              __ptext24 1A36                                __ptext16 19F6  
                              __ptext33 1BB4                                __ptext25 1B54  
                              __ptext17 106A                                __ptext34 1BBE  
                              __ptext26 1A9A                                __ptext18 0D76  
                              __ptext35 19B4                                __ptext27 11CE  
                              __ptext19 1A6A                                __ptext36 1AC4  
                              __ptext28 183E                                __ptext37 1726  
                              __ptext29 188E                                __ptext38 1B12  
                          _SSP2CON1bits 000ED9                            _SSP2CON2bits 000EDA  
                ?_make_master_closeness 0079                                isa$xinst 000000  
                            _RC4STAbits 000EE7                                _vfprintf 17EC  
                      ___aomod@dividend 0001                   collect_avg_readings@i 0016  
                           _setMotorPWM 0EFE           collect_avg_readings@blue_read 0012  
                             sprintf@ap 006C              __end_of_normalise_readings 034A  
        determine_card@current_smallest 0007                         ___aomod@divisor 0009  
                           ??_vfpfcnvrt 0045                         ___aomod@counter 0011  
                      _color_click_init 1A36                                sprintf@f 006E  
                              sprintf@s 0060                              _SSP2DATPPS 000E1D  
                            _SSP2CLKPPS 000E1C                              _TX4STAbits 000EE8  
                          ___aodiv@sign 0012                         _sendCharSerial4 1B74  
         normalise_readings@differenceB 0095           normalise_readings@differenceG 0093  
         normalise_readings@differenceR 0091                            ___aomod@sign 0012  
                      ??_determine_card 0003                            main@PWMcycle 00D6  
