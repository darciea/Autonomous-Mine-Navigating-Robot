

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 02:40:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Version 2.35
    34                           ; Generated 05/05/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F67K40 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataBANK0
    70   000534                     __pidataBANK0:
    71                           	callstack 0
    72                           
    73                           ;initializer for main@F14642
    74   000534  32C8               	dw	13000
    75   000536  0A28               	dw	2600
    76   000538  0708               	dw	1800
    77   00053A  20D0               	dw	8400
    78   00053C  1964               	dw	6500
    79   00053E  1388               	dw	5000
    80   000540  1130               	dw	4400
    81   000542  0708               	dw	1800
    82   000544  0AF0               	dw	2800
    83   000000                     _TX4REG	set	3812
    84   000000                     _RC4STAbits	set	3815
    85   000000                     _SP4BRGH	set	3814
    86   000000                     _LATGbits	set	3967
    87   000000                     _TRISFbits	set	3974
    88   000000                     _TRISDbits	set	3972
    89   000000                     _TRISGbits	set	3975
    90   000000                     _SSP2CON2bits	set	3802
    91   000000                     _RX4PPS	set	3605
    92   000000                     _SSP2CLKPPS	set	3612
    93   000000                     _SSP2DATPPS	set	3613
    94   000000                     _RC7PPS	set	3689
    95   000000                     _RE2PPS	set	3700
    96   000000                     _TRISCbits	set	3971
    97   000000                     _TRISEbits	set	3973
    98   000000                     _TRISHbits	set	3976
    99   000000                     _PORTFbits	set	3982
   100   000000                     _T2PR	set	4028
   101   000000                     _T2CONbits	set	4029
   102   000000                     _CCPR2H	set	4006
   103   000000                     _CCPR1H	set	4010
   104   000000                     _RE4PPS	set	3702
   105   000000                     _RG6PPS	set	3720
   106   000000                     _RD5PPS	set	3695
   107   000000                     _ANSELDbits	set	3751
   108   000000                     _SSP2ADD	set	3798
   109   000000                     _SSP2CON1bits	set	3801
   110   000000                     _CCPR4H	set	3873
   111   000000                     _CCPR3H	set	3877
   112   000000                     _TMR0L	set	4051
   113   000000                     _TMR0H	set	4052
   114   000000                     _T0CON0bits	set	4053
   115   000000                     _T0CON1bits	set	4054
   116   000000                     _T2CLKCONbits	set	4031
   117   000000                     _T2HLTbits	set	4030
   118   000000                     _CCP1CONbits	set	4011
   119   000000                     _CCPTMRS0bits	set	4013
   120   000000                     _CCP2CONbits	set	4007
   121   000000                     _LATAbits	set	3961
   122   000000                     _LATDbits	set	3964
   123   000000                     _LATHbits	set	3968
   124   000000                     _CCP3CONbits	set	3878
   125   000000                     _CCP4CONbits	set	3874
   126   000000                     _RC4REG	set	3811
   127   000000                     _SP4BRGL	set	3813
   128   000000                     _TX4STAbits	set	3816
   129   000000                     _BAUD4CONbits	set	3817
   130   000000                     _SSP2CON2	set	3802
   131   000000                     _SSP2STAT	set	3800
   132   000000                     _SSP2BUF	set	3797
   133   000000                     _PIE4bits	set	3629
   134   000000                     _PIR4bits	set	3639
   135   000000                     _RC0PPS	set	3682
   136   000000                     _TMR0IE	set	29005
   137   000000                     _RD6PPS	set	3696
   138   000000                     _TRISAbits	set	3969
   139   000000                     _LATFbits	set	3966
   140   000000                     _TMR0IF	set	29085
   141   000000                     _INTCONbits	set	4082
   142                           
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146   0003B4                     __pcinit:
   147                           	callstack 0
   148   0003B4                     start_initialization:
   149                           	callstack 0
   150   0003B4                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to BANK0 (18 bytes)
   154                           ; load TBLPTR registers with __pidataBANK0
   155   0003B4  0E34               	movlw	low __pidataBANK0
   156   0003B6  6EF6               	movwf	tblptrl,c
   157   0003B8  0E05               	movlw	high __pidataBANK0
   158   0003BA  6EF7               	movwf	tblptrh,c
   159   0003BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   160   0003BE  6EF8               	movwf	tblptru,c
   161   0003C0  EE00  F09C         	lfsr	0,__pdataBANK0
   162   0003C4  EE10 F012          	lfsr	1,18
   163   0003C8                     copy_data0:
   164   0003C8  0009               	tblrd		*+
   165   0003CA  CFF5 FFEE          	movff	tablat,postinc0
   166   0003CE  50E5               	movf	postdec1,w,c
   167   0003D0  50E1               	movf	fsr1l,w,c
   168   0003D2  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to BANK0 (60 bytes)
   171   0003D4  EE00  F060         	lfsr	0,__pbssBANK0
   172   0003D8  0E3C               	movlw	60
   173   0003DA                     clear_0:
   174   0003DA  6AEE               	clrf	postinc0,c
   175   0003DC  06E8               	decf	wreg,f,c
   176   0003DE  E1FD               	bnz	clear_0
   177                           
   178                           ; Clear objects allocated to COMRAM (26 bytes)
   179   0003E0  EE00  F03D         	lfsr	0,__pbssCOMRAM
   180   0003E4  0E1A               	movlw	26
   181   0003E6                     clear_1:
   182   0003E6  6AEE               	clrf	postinc0,c
   183   0003E8  06E8               	decf	wreg,f,c
   184   0003EA  E1FD               	bnz	clear_1
   185   0003EC                     end_of_initialization:
   186                           	callstack 0
   187   0003EC                     __end_of__initialization:
   188                           	callstack 0
   189   0003EC  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190   0003EE  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191   0003F0  0100               	movlb	0
   192   0003F2  EF05  F001         	goto	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMRAM
   195   00003D                     __pbssCOMRAM:
   196                           	callstack 0
   197   00003D                     _EUSART4RXbuf:
   198                           	callstack 0
   199   00003D                     	ds	20
   200   000051                     _count:
   201                           	callstack 0
   202   000051                     	ds	2
   203   000053                     _TxBufReadCnt:
   204                           	callstack 0
   205   000053                     	ds	1
   206   000054                     _TxBufWriteCnt:
   207                           	callstack 0
   208   000054                     	ds	1
   209   000055                     _RxBufReadCnt:
   210                           	callstack 0
   211   000055                     	ds	1
   212   000056                     _RxBufWriteCnt:
   213                           	callstack 0
   214   000056                     	ds	1
   215                           
   216                           	psect	bssBANK0
   217   000060                     __pbssBANK0:
   218                           	callstack 0
   219   000060                     _EUSART4TXbuf:
   220                           	callstack 0
   221   000060                     	ds	60
   222                           
   223                           	psect	dataBANK0
   224   00009C                     __pdataBANK0:
   225                           	callstack 0
   226   00009C                     main@F14642:
   227                           	callstack 0
   228   00009C                     	ds	18
   229                           
   230                           	psect	cstackCOMRAM
   231   000001                     __pcstackCOMRAM:
   232                           	callstack 0
   233   000001                     ??_LowISR:
   234                           
   235                           ; 1 bytes @ 0x0
   236   000001                     	ds	4
   237   000005                     ??_I2C_2_Master_Idle:
   238   000005                     ?___wmul:
   239                           	callstack 0
   240   000005                     ___wmul@multiplier:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x4
   244   000005                     	ds	1
   245   000006                     I2C_2_Master_Write@data_byte:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x5
   249   000006                     	ds	1
   250   000007                     color_writetoaddr@value:
   251                           	callstack 0
   252   000007                     ___wmul@multiplicand:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x6
   256   000007                     	ds	1
   257   000008                     color_writetoaddr@address:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x7
   261   000008                     	ds	1
   262   000009                     ??_color_click_init:
   263   000009                     ___wmul@product:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x8
   267   000009                     	ds	2
   268   00000B                     ?___lwdiv:
   269                           	callstack 0
   270   00000B                     ___lwdiv@dividend:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xA
   274   00000B                     	ds	2
   275   00000D                     ___lwdiv@divisor:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xC
   279   00000D                     	ds	2
   280   00000F                     ___lwdiv@quotient:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0xE
   284   00000F                     	ds	2
   285   000011                     ___lwdiv@counter:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x10
   289   000011                     	ds	1
   290   000012                     setMotorPWM@m:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x11
   294   000012                     	ds	2
   295   000014                     ??_setMotorPWM:
   296                           
   297                           ; 1 bytes @ 0x13
   298   000014                     	ds	2
   299   000016                     setMotorPWM@posDuty:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x15
   303   000016                     	ds	1
   304   000017                     setMotorPWM@negDuty:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x16
   308   000017                     	ds	1
   309   000018                     main@expected_values:
   310                           	callstack 0
   311                           
   312                           ; 18 bytes @ 0x17
   313   000018                     	ds	18
   314   00002A                     main@PWMcycle:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x29
   318   00002A                     	ds	1
   319   00002B                     main@motorL:
   320                           	callstack 0
   321                           
   322                           ; 9 bytes @ 0x2A
   323   00002B                     	ds	9
   324   000034                     main@motorR:
   325                           	callstack 0
   326                           
   327                           ; 9 bytes @ 0x33
   328   000034                     	ds	9
   329                           
   330 ;;
   331 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   332 ;;
   333 ;; *************** function _main *****************
   334 ;; Defined at:
   335 ;;		line 21 in file "main.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  buf            20    0        unsigned char [20]
   340 ;;  expected_val   18   23[COMRAM] unsigned int [3][3]
   341 ;;  normalised_v   18    0        unsigned int [3][3]
   342 ;;  motorR          9   51[COMRAM] struct DC_motor
   343 ;;  motorL          9   42[COMRAM] struct DC_motor
   344 ;;  master_close    6    0        unsigned int [3]
   345 ;;  clear_read      2    0        unsigned int 
   346 ;;  blue_read       2    0        unsigned int 
   347 ;;  green_read      2    0        unsigned int 
   348 ;;  red_read        2    0        unsigned int 
   349 ;;  PWMcycle        1   41[COMRAM] unsigned char 
   350 ;;  card            1    0        enum E14569
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   361 ;;      Locals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   363 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   364 ;;Total ram usage:       37 bytes
   365 ;; Hardware stack levels required when called: 5
   366 ;; This function calls:
   367 ;;		_I2C_2_Master_Init
   368 ;;		_Interrupts_init
   369 ;;		_LEDSon_init
   370 ;;		_color_click_init
   371 ;;		_initDCmotorsPWM
   372 ;;		_initUSART4
   373 ;;		_setMotorPWM
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text0
   380   00020A                     __ptext0:
   381                           	callstack 0
   382   00020A                     _main:
   383                           	callstack 26
   384   00020A                     
   385                           ;main.c: 26:     LEDSon_init();
   386   00020A  EC69  F002         	call	_LEDSon_init	;wreg free
   387   00020E                     
   388                           ;main.c: 27:     I2C_2_Master_Init();
   389   00020E  EC2D  F002         	call	_I2C_2_Master_Init	;wreg free
   390   000212                     
   391                           ;main.c: 28:     color_click_init();
   392   000212  ECFB  F001         	call	_color_click_init	;wreg free
   393   000216                     
   394                           ;main.c: 29:     initDCmotorsPWM();
   395   000216  EC5C  F001         	call	_initDCmotorsPWM	;wreg free
   396   00021A                     
   397                           ;main.c: 30:     initUSART4();
   398   00021A  EC7A  F002         	call	_initUSART4	;wreg free
   399   00021E                     
   400                           ;main.c: 31:     Interrupts_init();
   401   00021E  EC15  F002         	call	_Interrupts_init	;wreg free
   402   000222                     
   403                           ;main.c: 39:     unsigned char PWMcycle = T2PR;
   404   000222  CFBC F02A          	movff	4028,main@PWMcycle	;volatile
   405   000226                     
   406                           ;main.c: 41:     struct DC_motor motorL, motorR;;main.c: 43:     motorL.power=0;
   407   000226  0E00               	movlw	0
   408   000228  6E2B               	movwf	main@motorL^0,c
   409   00022A                     
   410                           ;main.c: 44:     motorL.direction=1;
   411   00022A  0E01               	movlw	1
   412   00022C  6E2C               	movwf	(main@motorL+1)^0,c
   413   00022E                     
   414                           ;main.c: 45:     motorL.brakemode=1;
   415   00022E  0E01               	movlw	1
   416   000230  6E2D               	movwf	(main@motorL+2)^0,c
   417   000232                     
   418                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   419   000232  0EAA               	movlw	170
   420   000234  6E30               	movwf	(main@motorL+5)^0,c
   421   000236  0E0F               	movlw	15
   422   000238  6E31               	movwf	(main@motorL+6)^0,c
   423   00023A                     
   424                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   425   00023A  0EA6               	movlw	166
   426   00023C  6E32               	movwf	(main@motorL+7)^0,c
   427   00023E  0E0F               	movlw	15
   428   000240  6E33               	movwf	(main@motorL+8)^0,c
   429   000242                     
   430                           ;main.c: 48:     motorL.PWMperiod=PWMcycle;
   431   000242  C02A  F02E         	movff	main@PWMcycle,main@motorL+3
   432   000246  6A2F               	clrf	(main@motorL+4)^0,c
   433   000248                     
   434                           ;main.c: 50:     motorR.power=0;
   435   000248  0E00               	movlw	0
   436   00024A  6E34               	movwf	main@motorR^0,c
   437   00024C                     
   438                           ;main.c: 51:     motorR.direction=1;
   439   00024C  0E01               	movlw	1
   440   00024E  6E35               	movwf	(main@motorR+1)^0,c
   441   000250                     
   442                           ;main.c: 52:     motorR.brakemode=1;
   443   000250  0E01               	movlw	1
   444   000252  6E36               	movwf	(main@motorR+2)^0,c
   445                           
   446                           ;main.c: 53:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   447   000254  0E25               	movlw	37
   448   000256  6E39               	movwf	(main@motorR+5)^0,c
   449   000258  0E0F               	movlw	15
   450   00025A  6E3A               	movwf	(main@motorR+6)^0,c
   451                           
   452                           ;main.c: 54:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   453   00025C  0E21               	movlw	33
   454   00025E  6E3B               	movwf	(main@motorR+7)^0,c
   455   000260  0E0F               	movlw	15
   456   000262  6E3C               	movwf	(main@motorR+8)^0,c
   457   000264                     
   458                           ;main.c: 55:     motorR.PWMperiod=PWMcycle;
   459   000264  C02A  F037         	movff	main@PWMcycle,main@motorR+3
   460   000268  6A38               	clrf	(main@motorR+4)^0,c
   461   00026A                     
   462                           ;main.c: 57:     setMotorPWM(&motorL);
   463   00026A  0E2B               	movlw	low main@motorL
   464   00026C  6E12               	movwf	setMotorPWM@m^0,c
   465   00026E  0E00               	movlw	high main@motorL
   466   000270  6E13               	movwf	(setMotorPWM@m+1)^0,c
   467   000272  EC4F  F000         	call	_setMotorPWM	;wreg free
   468   000276                     
   469                           ;main.c: 58:     setMotorPWM(&motorR);
   470   000276  0E34               	movlw	low main@motorR
   471   000278  6E12               	movwf	setMotorPWM@m^0,c
   472   00027A  0E00               	movlw	high main@motorR
   473   00027C  6E13               	movwf	(setMotorPWM@m+1)^0,c
   474   00027E  EC4F  F000         	call	_setMotorPWM	;wreg free
   475   000282                     
   476                           ;main.c: 64:     unsigned int expected_values[3][3] = {{13000, 2600, 1800},{8400, 6500, 
      +                          5000},{4400, 1800, 2800}};
   477   000282  EE20  F09C         	lfsr	2,main@F14642
   478   000286  EE10  F018         	lfsr	1,main@expected_values
   479   00028A  0E11               	movlw	17
   480   00028C                     u561:
   481   00028C  CFDB FFE3          	movff	plusw2,plusw1
   482   000290  06E8               	decf	wreg,f,c
   483   000292  E2FC               	bc	u561
   484   000294                     
   485                           ;main.c: 102:     while(PORTFbits.RF2){
   486   000294  EF4D  F001         	goto	l218
   487   000298                     l219:
   488                           
   489                           ;main.c: 103:         LATHbits.LATH1 = 1;
   490   000298  8280               	bsf	128,1,c	;volatile
   491   00029A                     l218:
   492                           
   493                           ;main.c: 102:     while(PORTFbits.RF2){
   494   00029A  B48E               	btfsc	142,2,c	;volatile
   495   00029C  EF52  F001         	goto	u571
   496   0002A0  EF54  F001         	goto	u570
   497   0002A4                     u571:
   498   0002A4  EF4C  F001         	goto	l219
   499   0002A8                     u570:
   500   0002A8                     
   501                           ;main.c: 128:     LATHbits.LATH3=0;
   502   0002A8  9680               	bcf	128,3,c	;volatile
   503                           
   504                           ;main.c: 129:     TRISHbits.TRISH3=0;
   505   0002AA  9688               	bcf	136,3,c	;volatile
   506                           
   507                           ;main.c: 131:     char buf[20];;main.c: 133:     LATDbits.LATD7=0;
   508   0002AC  9E7C               	bcf	124,7,c	;volatile
   509                           
   510                           ;main.c: 134:     TRISDbits.TRISD7=0;
   511   0002AE  9E84               	bcf	132,7,c	;volatile
   512   0002B0                     l221:
   513   0002B0  EF58  F001         	goto	l221
   514   0002B4  EF4D  F000         	goto	start
   515   0002B8                     __end_of_main:
   516                           	callstack 0
   517                           
   518 ;; *************** function _setMotorPWM *****************
   519 ;; Defined at:
   520 ;;		line 61 in file "dc_motor.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  m               2   17[COMRAM] PTR struct DC_motor
   523 ;;		 -> main@motorR(9), main@motorL(9), 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  negDuty         1   22[COMRAM] unsigned char 
   526 ;;  posDuty         1   21[COMRAM] unsigned char 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   539 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   540 ;;Total ram usage:        6 bytes
   541 ;; Hardware stack levels used: 1
   542 ;; Hardware stack levels required when called: 2
   543 ;; This function calls:
   544 ;;		___lwdiv
   545 ;;		___wmul
   546 ;; This function is called by:
   547 ;;		_main
   548 ;;		_stop
   549 ;;		_turnLeft45
   550 ;;		_turnRight45
   551 ;;		_fullSpeedAhead
   552 ;;		_reverseFullSpeed
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text1
   557   00009E                     __ptext1:
   558                           	callstack 0
   559   00009E                     _setMotorPWM:
   560                           	callstack 28
   561   00009E                     
   562                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
   563   00009E  EE20 F002          	lfsr	2,2
   564   0000A2  5012               	movf	setMotorPWM@m^0,w,c
   565   0000A4  26D9               	addwf	fsr2l,f,c
   566   0000A6  5013               	movf	(setMotorPWM@m+1)^0,w,c
   567   0000A8  22DA               	addwfc	fsr2h,f,c
   568   0000AA  50DF               	movf	indf2,w,c
   569   0000AC  B4D8               	btfsc	status,2,c
   570   0000AE  EF5B  F000         	goto	u471
   571   0000B2  EF5D  F000         	goto	u470
   572   0000B6                     u471:
   573   0000B6  EF91  F000         	goto	l1849
   574   0000BA                     u470:
   575   0000BA                     
   576                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
   577   0000BA  C012  FFD9         	movff	setMotorPWM@m,fsr2l
   578   0000BE  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
   579   0000C2  50DF               	movf	indf2,w,c
   580   0000C4  6E14               	movwf	??_setMotorPWM^0,c
   581   0000C6  5014               	movf	??_setMotorPWM^0,w,c
   582   0000C8  6E05               	movwf	___wmul@multiplier^0,c
   583   0000CA  6A06               	clrf	(___wmul@multiplier+1)^0,c
   584   0000CC  EE20 F003          	lfsr	2,3
   585   0000D0  5012               	movf	setMotorPWM@m^0,w,c
   586   0000D2  26D9               	addwf	fsr2l,f,c
   587   0000D4  5013               	movf	(setMotorPWM@m+1)^0,w,c
   588   0000D6  22DA               	addwfc	fsr2h,f,c
   589   0000D8  CFDE F007          	movff	postinc2,___wmul@multiplicand
   590   0000DC  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
   591   0000E0  EC56  F002         	call	___wmul	;wreg free
   592   0000E4  C005  F00B         	movff	?___wmul,___lwdiv@dividend
   593   0000E8  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
   594   0000EC  0E00               	movlw	0
   595   0000EE  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
   596   0000F0  0E64               	movlw	100
   597   0000F2  6E0D               	movwf	___lwdiv@divisor^0,c
   598   0000F4  ECA0  F001         	call	___lwdiv	;wreg free
   599   0000F8  EE20 F003          	lfsr	2,3
   600   0000FC  5012               	movf	setMotorPWM@m^0,w,c
   601   0000FE  26D9               	addwf	fsr2l,f,c
   602   000100  5013               	movf	(setMotorPWM@m+1)^0,w,c
   603   000102  22DA               	addwfc	fsr2h,f,c
   604   000104  50DF               	movf	indf2,w,c
   605   000106  6E15               	movwf	(??_setMotorPWM+1)^0,c
   606   000108  500B               	movf	?___lwdiv^0,w,c
   607   00010A  5C15               	subwf	(??_setMotorPWM+1)^0,w,c
   608   00010C  6E16               	movwf	setMotorPWM@posDuty^0,c
   609   00010E                     
   610                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
   611   00010E  EE20 F003          	lfsr	2,3
   612   000112  5012               	movf	setMotorPWM@m^0,w,c
   613   000114  26D9               	addwf	fsr2l,f,c
   614   000116  5013               	movf	(setMotorPWM@m+1)^0,w,c
   615   000118  22DA               	addwfc	fsr2h,f,c
   616   00011A  50DF               	movf	indf2,w,c
   617   00011C  6E17               	movwf	setMotorPWM@negDuty^0,c
   618                           
   619                           ;dc_motor.c: 68:     }
   620   00011E  EFB4  F000         	goto	l1853
   621   000122                     l1849:
   622                           
   623                           ;dc_motor.c: 70:         posDuty=0;
   624   000122  0E00               	movlw	0
   625   000124  6E16               	movwf	setMotorPWM@posDuty^0,c
   626   000126                     
   627                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
   628   000126  C012  FFD9         	movff	setMotorPWM@m,fsr2l
   629   00012A  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
   630   00012E  50DF               	movf	indf2,w,c
   631   000130  6E14               	movwf	??_setMotorPWM^0,c
   632   000132  5014               	movf	??_setMotorPWM^0,w,c
   633   000134  6E05               	movwf	___wmul@multiplier^0,c
   634   000136  6A06               	clrf	(___wmul@multiplier+1)^0,c
   635   000138  EE20 F003          	lfsr	2,3
   636   00013C  5012               	movf	setMotorPWM@m^0,w,c
   637   00013E  26D9               	addwf	fsr2l,f,c
   638   000140  5013               	movf	(setMotorPWM@m+1)^0,w,c
   639   000142  22DA               	addwfc	fsr2h,f,c
   640   000144  CFDE F007          	movff	postinc2,___wmul@multiplicand
   641   000148  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
   642   00014C  EC56  F002         	call	___wmul	;wreg free
   643   000150  C005  F00B         	movff	?___wmul,___lwdiv@dividend
   644   000154  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
   645   000158  0E00               	movlw	0
   646   00015A  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
   647   00015C  0E64               	movlw	100
   648   00015E  6E0D               	movwf	___lwdiv@divisor^0,c
   649   000160  ECA0  F001         	call	___lwdiv	;wreg free
   650   000164  500B               	movf	?___lwdiv^0,w,c
   651   000166  6E17               	movwf	setMotorPWM@negDuty^0,c
   652   000168                     l1853:
   653                           
   654                           ;dc_motor.c: 74:     if (m->direction) {
   655   000168  EE20 F001          	lfsr	2,1
   656   00016C  5012               	movf	setMotorPWM@m^0,w,c
   657   00016E  26D9               	addwf	fsr2l,f,c
   658   000170  5013               	movf	(setMotorPWM@m+1)^0,w,c
   659   000172  22DA               	addwfc	fsr2h,f,c
   660   000174  50DF               	movf	indf2,w,c
   661   000176  B4D8               	btfsc	status,2,c
   662   000178  EFC0  F000         	goto	u481
   663   00017C  EFC2  F000         	goto	u480
   664   000180                     u481:
   665   000180  EFE4  F000         	goto	l1857
   666   000184                     u480:
   667   000184                     
   668                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
   669   000184  EE20 F005          	lfsr	2,5
   670   000188  5012               	movf	setMotorPWM@m^0,w,c
   671   00018A  26D9               	addwf	fsr2l,f,c
   672   00018C  5013               	movf	(setMotorPWM@m+1)^0,w,c
   673   00018E  22DA               	addwfc	fsr2h,f,c
   674   000190  CFDE F014          	movff	postinc2,??_setMotorPWM
   675   000194  CFDD F015          	movff	postdec2,??_setMotorPWM+1
   676   000198  C014  FFD9         	movff	??_setMotorPWM,fsr2l
   677   00019C  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
   678   0001A0  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
   679                           
   680                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
   681   0001A4  EE20 F007          	lfsr	2,7
   682   0001A8  5012               	movf	setMotorPWM@m^0,w,c
   683   0001AA  26D9               	addwf	fsr2l,f,c
   684   0001AC  5013               	movf	(setMotorPWM@m+1)^0,w,c
   685   0001AE  22DA               	addwfc	fsr2h,f,c
   686   0001B0  CFDE F014          	movff	postinc2,??_setMotorPWM
   687   0001B4  CFDD F015          	movff	postdec2,??_setMotorPWM+1
   688   0001B8  C014  FFD9         	movff	??_setMotorPWM,fsr2l
   689   0001BC  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
   690   0001C0  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
   691                           
   692                           ;dc_motor.c: 77:     } else {
   693   0001C4  EF04  F001         	goto	l86
   694   0001C8                     l1857:
   695                           
   696                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
   697   0001C8  EE20 F005          	lfsr	2,5
   698   0001CC  5012               	movf	setMotorPWM@m^0,w,c
   699   0001CE  26D9               	addwf	fsr2l,f,c
   700   0001D0  5013               	movf	(setMotorPWM@m+1)^0,w,c
   701   0001D2  22DA               	addwfc	fsr2h,f,c
   702   0001D4  CFDE F014          	movff	postinc2,??_setMotorPWM
   703   0001D8  CFDD F015          	movff	postdec2,??_setMotorPWM+1
   704   0001DC  C014  FFD9         	movff	??_setMotorPWM,fsr2l
   705   0001E0  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
   706   0001E4  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
   707                           
   708                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
   709   0001E8  EE20 F007          	lfsr	2,7
   710   0001EC  5012               	movf	setMotorPWM@m^0,w,c
   711   0001EE  26D9               	addwf	fsr2l,f,c
   712   0001F0  5013               	movf	(setMotorPWM@m+1)^0,w,c
   713   0001F2  22DA               	addwfc	fsr2h,f,c
   714   0001F4  CFDE F014          	movff	postinc2,??_setMotorPWM
   715   0001F8  CFDD F015          	movff	postdec2,??_setMotorPWM+1
   716   0001FC  C014  FFD9         	movff	??_setMotorPWM,fsr2l
   717   000200  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
   718   000204  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
   719   000208                     l86:
   720   000208  0012               	return		;funcret
   721   00020A                     __end_of_setMotorPWM:
   722                           	callstack 0
   723                           
   724 ;; *************** function ___wmul *****************
   725 ;; Defined at:
   726 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  multiplier      2    4[COMRAM] unsigned int 
   729 ;;  multiplicand    2    6[COMRAM] unsigned int 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  product         2    8[COMRAM] unsigned int 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  2    4[COMRAM] unsigned int 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, prodl, prodh
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   744 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   745 ;;Total ram usage:        6 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 1
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_setMotorPWM
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text2
   756   0004AC                     __ptext2:
   757                           	callstack 0
   758   0004AC                     ___wmul:
   759                           	callstack 28
   760   0004AC  5005               	movf	___wmul@multiplier^0,w,c
   761   0004AE  0207               	mulwf	___wmul@multiplicand^0,c
   762   0004B0  CFF3 F009          	movff	prodl,___wmul@product
   763   0004B4  CFF4 F00A          	movff	prodh,___wmul@product+1
   764   0004B8  5005               	movf	___wmul@multiplier^0,w,c
   765   0004BA  0208               	mulwf	(___wmul@multiplicand+1)^0,c
   766   0004BC  50F3               	movf	243,w,c
   767   0004BE  260A               	addwf	(___wmul@product+1)^0,f,c
   768   0004C0  5006               	movf	(___wmul@multiplier+1)^0,w,c
   769   0004C2  0207               	mulwf	___wmul@multiplicand^0,c
   770   0004C4  50F3               	movf	243,w,c
   771   0004C6  260A               	addwf	(___wmul@product+1)^0,f,c
   772   0004C8  C009  F005         	movff	___wmul@product,?___wmul
   773   0004CC  C00A  F006         	movff	___wmul@product+1,?___wmul+1
   774   0004D0  0012               	return		;funcret
   775   0004D2                     __end_of___wmul:
   776                           	callstack 0
   777                           
   778 ;; *************** function ___lwdiv *****************
   779 ;; Defined at:
   780 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  dividend        2   10[COMRAM] unsigned int 
   783 ;;  divisor         2   12[COMRAM] unsigned int 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  quotient        2   14[COMRAM] unsigned int 
   786 ;;  counter         1   16[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2   10[COMRAM] unsigned int 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   797 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   800 ;;Total ram usage:        7 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_setMotorPWM
   807 ;;		_collect_avg_readings
   808 ;;		_normalise_readings
   809 ;;		_make_master_closeness
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text3
   814   000340                     __ptext3:
   815                           	callstack 0
   816   000340                     ___lwdiv:
   817                           	callstack 28
   818   000340  0E00               	movlw	0
   819   000342  6E10               	movwf	(___lwdiv@quotient+1)^0,c
   820   000344  0E00               	movlw	0
   821   000346  6E0F               	movwf	___lwdiv@quotient^0,c
   822   000348  500D               	movf	___lwdiv@divisor^0,w,c
   823   00034A  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
   824   00034C  B4D8               	btfsc	status,2,c
   825   00034E  EFAB  F001         	goto	u441
   826   000352  EFAD  F001         	goto	u440
   827   000356                     u441:
   828   000356  EFD5  F001         	goto	l928
   829   00035A                     u440:
   830   00035A  0E01               	movlw	1
   831   00035C  6E11               	movwf	___lwdiv@counter^0,c
   832   00035E  EFB5  F001         	goto	l1779
   833   000362                     l1777:
   834   000362  90D8               	bcf	status,0,c
   835   000364  360D               	rlcf	___lwdiv@divisor^0,f,c
   836   000366  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
   837   000368  2A11               	incf	___lwdiv@counter^0,f,c
   838   00036A                     l1779:
   839   00036A  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
   840   00036C  EFBA  F001         	goto	u451
   841   000370  EFBC  F001         	goto	u450
   842   000374                     u451:
   843   000374  EFB1  F001         	goto	l1777
   844   000378                     u450:
   845   000378                     l1781:
   846   000378  90D8               	bcf	status,0,c
   847   00037A  360F               	rlcf	___lwdiv@quotient^0,f,c
   848   00037C  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
   849   00037E  500D               	movf	___lwdiv@divisor^0,w,c
   850   000380  5C0B               	subwf	___lwdiv@dividend^0,w,c
   851   000382  500E               	movf	(___lwdiv@divisor+1)^0,w,c
   852   000384  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
   853   000386  A0D8               	btfss	status,0,c
   854   000388  EFC8  F001         	goto	u461
   855   00038C  EFCA  F001         	goto	u460
   856   000390                     u461:
   857   000390  EFCF  F001         	goto	l1789
   858   000394                     u460:
   859   000394  500D               	movf	___lwdiv@divisor^0,w,c
   860   000396  5E0B               	subwf	___lwdiv@dividend^0,f,c
   861   000398  500E               	movf	(___lwdiv@divisor+1)^0,w,c
   862   00039A  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
   863   00039C  800F               	bsf	___lwdiv@quotient^0,0,c
   864   00039E                     l1789:
   865   00039E  90D8               	bcf	status,0,c
   866   0003A0  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
   867   0003A2  320D               	rrcf	___lwdiv@divisor^0,f,c
   868   0003A4  2E11               	decfsz	___lwdiv@counter^0,f,c
   869   0003A6  EFBC  F001         	goto	l1781
   870   0003AA                     l928:
   871   0003AA  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
   872   0003AE  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
   873   0003B2  0012               	return		;funcret
   874   0003B4                     __end_of___lwdiv:
   875                           	callstack 0
   876                           
   877 ;; *************** function _initUSART4 *****************
   878 ;; Defined at:
   879 ;;		line 6 in file "serial.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; Hardware stack levels required when called: 1
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text4
   908   0004F4                     __ptext4:
   909                           	callstack 0
   910   0004F4                     _initUSART4:
   911                           	callstack 29
   912   0004F4                     
   913                           ;serial.c: 10:     RC0PPS = 0x12;
   914   0004F4  0E12               	movlw	18
   915   0004F6  010E               	movlb	14	; () banked
   916   0004F8  6F62               	movwf	98,b	;volatile
   917                           
   918                           ;serial.c: 11:     RX4PPS = 0x11;
   919   0004FA  0E11               	movlw	17
   920   0004FC  6F15               	movwf	21,b	;volatile
   921   0004FE                     
   922                           ; BSR set to: 14
   923                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
   924   0004FE  8283               	bsf	131,1,c	;volatile
   925   000500                     
   926                           ; BSR set to: 14
   927                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
   928   000500  97E9               	bcf	233,3,b	;volatile
   929   000502                     
   930                           ; BSR set to: 14
   931                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
   932   000502  95E8               	bcf	232,2,b	;volatile
   933                           
   934                           ;serial.c: 17:     SP4BRGL = 51;
   935   000504  0E33               	movlw	51
   936   000506  6FE5               	movwf	229,b	;volatile
   937                           
   938                           ;serial.c: 18:     SP4BRGH = 0;
   939   000508  0E00               	movlw	0
   940   00050A  6FE6               	movwf	230,b	;volatile
   941   00050C                     
   942                           ; BSR set to: 14
   943                           ;serial.c: 20:     RC4STAbits.CREN = 1;
   944   00050C  89E7               	bsf	231,4,b	;volatile
   945   00050E                     
   946                           ; BSR set to: 14
   947                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
   948   00050E  8BE8               	bsf	232,5,b	;volatile
   949   000510                     
   950                           ; BSR set to: 14
   951                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
   952   000510  8FE7               	bsf	231,7,b	;volatile
   953   000512                     
   954                           ; BSR set to: 14
   955   000512  0012               	return		;funcret
   956   000514                     __end_of_initUSART4:
   957                           	callstack 0
   958                           
   959 ;; *************** function _initDCmotorsPWM *****************
   960 ;; Defined at:
   961 ;;		line 6 in file "dc_motor.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text5
   990   0002B8                     __ptext5:
   991                           	callstack 0
   992   0002B8                     _initDCmotorsPWM:
   993                           	callstack 29
   994   0002B8                     
   995                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
   996   0002B8  9485               	bcf	133,2,c	;volatile
   997                           
   998                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
   999   0002BA  9885               	bcf	133,4,c	;volatile
  1000                           
  1001                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  1002   0002BC  9E83               	bcf	131,7,c	;volatile
  1003                           
  1004                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  1005   0002BE  9C87               	bcf	135,6,c	;volatile
  1006   0002C0                     
  1007                           ;dc_motor.c: 14:     RE2PPS=0x05;
  1008   0002C0  0E05               	movlw	5
  1009   0002C2  010E               	movlb	14	; () banked
  1010   0002C4  6F74               	movwf	116,b	;volatile
  1011                           
  1012                           ;dc_motor.c: 15:     RE4PPS=0x06;
  1013   0002C6  0E06               	movlw	6
  1014   0002C8  6F76               	movwf	118,b	;volatile
  1015                           
  1016                           ;dc_motor.c: 16:     RC7PPS=0x07;
  1017   0002CA  0E07               	movlw	7
  1018   0002CC  6F69               	movwf	105,b	;volatile
  1019                           
  1020                           ;dc_motor.c: 17:     RG6PPS=0x08;
  1021   0002CE  0E08               	movlw	8
  1022   0002D0  6F88               	movwf	136,b	;volatile
  1023                           
  1024                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  1025   0002D2  50BD               	movf	189,w,c	;volatile
  1026   0002D4  0B8F               	andlw	-113
  1027   0002D6  0940               	iorlw	64
  1028   0002D8  6EBD               	movwf	189,c	;volatile
  1029                           
  1030                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  1031   0002DA  0EE0               	movlw	-32
  1032   0002DC  16BE               	andwf	190,f,c	;volatile
  1033                           
  1034                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  1035   0002DE  50BF               	movf	191,w,c	;volatile
  1036   0002E0  0BF0               	andlw	-16
  1037   0002E2  0901               	iorlw	1
  1038   0002E4  6EBF               	movwf	191,c	;volatile
  1039                           
  1040                           ;dc_motor.c: 26:     T2PR=99;
  1041   0002E6  0E63               	movlw	99
  1042   0002E8  6EBC               	movwf	188,c	;volatile
  1043   0002EA                     
  1044                           ; BSR set to: 14
  1045                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  1046   0002EA  8EBD               	bsf	189,7,c	;volatile
  1047                           
  1048                           ;dc_motor.c: 31:     CCPR1H=0;
  1049   0002EC  0E00               	movlw	0
  1050   0002EE  6EAA               	movwf	170,c	;volatile
  1051                           
  1052                           ;dc_motor.c: 32:     CCPR2H=0;
  1053   0002F0  0E00               	movlw	0
  1054   0002F2  6EA6               	movwf	166,c	;volatile
  1055                           
  1056                           ;dc_motor.c: 33:     CCPR3H=0;
  1057   0002F4  0E00               	movlw	0
  1058   0002F6  010F               	movlb	15	; () banked
  1059   0002F8  6F25               	movwf	37,b	;volatile
  1060                           
  1061                           ;dc_motor.c: 34:     CCPR4H=0;
  1062   0002FA  0E00               	movlw	0
  1063   0002FC  6F21               	movwf	33,b	;volatile
  1064                           
  1065                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  1066   0002FE  0EFC               	movlw	-4
  1067   000300  16AD               	andwf	173,f,c	;volatile
  1068                           
  1069                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  1070   000302  0EF3               	movlw	-13
  1071   000304  16AD               	andwf	173,f,c	;volatile
  1072                           
  1073                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  1074   000306  0ECF               	movlw	-49
  1075   000308  16AD               	andwf	173,f,c	;volatile
  1076                           
  1077                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  1078   00030A  0E3F               	movlw	-193
  1079   00030C  16AD               	andwf	173,f,c	;volatile
  1080   00030E                     
  1081                           ; BSR set to: 15
  1082                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  1083   00030E  88AB               	bsf	171,4,c	;volatile
  1084                           
  1085                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  1086   000310  50AB               	movf	171,w,c	;volatile
  1087   000312  0BF0               	andlw	-16
  1088   000314  090C               	iorlw	12
  1089   000316  6EAB               	movwf	171,c	;volatile
  1090   000318                     
  1091                           ; BSR set to: 15
  1092                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  1093   000318  8EAB               	bsf	171,7,c	;volatile
  1094   00031A                     
  1095                           ; BSR set to: 15
  1096                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  1097   00031A  88A7               	bsf	167,4,c	;volatile
  1098                           
  1099                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  1100   00031C  50A7               	movf	167,w,c	;volatile
  1101   00031E  0BF0               	andlw	-16
  1102   000320  090C               	iorlw	12
  1103   000322  6EA7               	movwf	167,c	;volatile
  1104   000324                     
  1105                           ; BSR set to: 15
  1106                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  1107   000324  8EA7               	bsf	167,7,c	;volatile
  1108   000326                     
  1109                           ; BSR set to: 15
  1110                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  1111   000326  8926               	bsf	38,4,b	;volatile
  1112                           
  1113                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  1114   000328  5126               	movf	38,w,b	;volatile
  1115   00032A  0BF0               	andlw	-16
  1116   00032C  090C               	iorlw	12
  1117   00032E  6F26               	movwf	38,b	;volatile
  1118   000330                     
  1119                           ; BSR set to: 15
  1120                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  1121   000330  8F26               	bsf	38,7,b	;volatile
  1122   000332                     
  1123                           ; BSR set to: 15
  1124                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  1125   000332  8922               	bsf	34,4,b	;volatile
  1126                           
  1127                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  1128   000334  5122               	movf	34,w,b	;volatile
  1129   000336  0BF0               	andlw	-16
  1130   000338  090C               	iorlw	12
  1131   00033A  6F22               	movwf	34,b	;volatile
  1132   00033C                     
  1133                           ; BSR set to: 15
  1134                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  1135   00033C  8F22               	bsf	34,7,b	;volatile
  1136   00033E                     
  1137                           ; BSR set to: 15
  1138   00033E  0012               	return		;funcret
  1139   000340                     __end_of_initDCmotorsPWM:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _color_click_init *****************
  1143 ;; Defined at:
  1144 ;;		line 5 in file "color.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1162 ;;Total ram usage:        1 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 4
  1165 ;; This function calls:
  1166 ;;		_I2C_2_Master_Init
  1167 ;;		_color_writetoaddr
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text6
  1174   0003F6                     __ptext6:
  1175                           	callstack 0
  1176   0003F6                     _color_click_init:
  1177                           	callstack 26
  1178   0003F6                     
  1179                           ;color.c: 8:     I2C_2_Master_Init();
  1180   0003F6  EC2D  F002         	call	_I2C_2_Master_Init	;wreg free
  1181   0003FA                     
  1182                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1183   0003FA  0E01               	movlw	1
  1184   0003FC  6E07               	movwf	color_writetoaddr@value^0,c
  1185   0003FE  0E00               	movlw	0
  1186   000400  EC8A  F002         	call	_color_writetoaddr
  1187   000404                     
  1188                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1189   000404  0E3F               	movlw	63
  1190   000406  6E09               	movwf	??_color_click_init^0,c
  1191   000408  0E55               	movlw	85
  1192   00040A                     u657:
  1193   00040A  2EE8               	decfsz	wreg,f,c
  1194   00040C  D7FE               	bra	u657
  1195   00040E  2E09               	decfsz	??_color_click_init^0,f,c
  1196   000410  D7FC               	bra	u657
  1197   000412  F000               	nop	
  1198   000414                     
  1199                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1200   000414  0E03               	movlw	3
  1201   000416  6E07               	movwf	color_writetoaddr@value^0,c
  1202   000418  0E00               	movlw	0
  1203   00041A  EC8A  F002         	call	_color_writetoaddr
  1204   00041E                     
  1205                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1206   00041E  0ED5               	movlw	213
  1207   000420  6E07               	movwf	color_writetoaddr@value^0,c
  1208   000422  0E01               	movlw	1
  1209   000424  EC8A  F002         	call	_color_writetoaddr
  1210   000428  0012               	return		;funcret
  1211   00042A                     __end_of_color_click_init:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _color_writetoaddr *****************
  1215 ;; Defined at:
  1216 ;;		line 21 in file "color.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  address         1    wreg     unsigned char 
  1219 ;;  value           1    6[COMRAM] unsigned char 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  address         1    7[COMRAM] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1231 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;Total ram usage:        2 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 3
  1238 ;; This function calls:
  1239 ;;		_I2C_2_Master_Start
  1240 ;;		_I2C_2_Master_Stop
  1241 ;;		_I2C_2_Master_Write
  1242 ;; This function is called by:
  1243 ;;		_color_click_init
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text7
  1248   000514                     __ptext7:
  1249                           	callstack 0
  1250   000514                     _color_writetoaddr:
  1251                           	callstack 26
  1252                           
  1253                           ;incstack = 0
  1254                           ;color_writetoaddr@address stored from wreg
  1255   000514  6E08               	movwf	color_writetoaddr@address^0,c
  1256   000516                     
  1257                           ;color.c: 22:     I2C_2_Master_Start();
  1258   000516  ECAE  F002         	call	_I2C_2_Master_Start	;wreg free
  1259                           
  1260                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1261   00051A  0E52               	movlw	82
  1262   00051C  ECA3  F002         	call	_I2C_2_Master_Write
  1263                           
  1264                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1265   000520  5008               	movf	color_writetoaddr@address^0,w,c
  1266   000522  0980               	iorlw	128
  1267   000524  ECA3  F002         	call	_I2C_2_Master_Write
  1268                           
  1269                           ;color.c: 25:     I2C_2_Master_Write(value);
  1270   000528  5007               	movf	color_writetoaddr@value^0,w,c
  1271   00052A  ECA3  F002         	call	_I2C_2_Master_Write
  1272                           
  1273                           ;color.c: 26:     I2C_2_Master_Stop();
  1274   00052E  ECA9  F002         	call	_I2C_2_Master_Stop	;wreg free
  1275   000532  0012               	return		;funcret
  1276   000534                     __end_of_color_writetoaddr:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _I2C_2_Master_Write *****************
  1280 ;; Defined at:
  1281 ;;		line 45 in file "i2c.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  data_byte       1    wreg     unsigned char 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  data_byte       1    5[COMRAM] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;Total ram usage:        1 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 2
  1302 ;; This function calls:
  1303 ;;		_I2C_2_Master_Idle
  1304 ;; This function is called by:
  1305 ;;		_color_writetoaddr
  1306 ;;		_color_read_Red
  1307 ;;		_color_read_Green
  1308 ;;		_color_read_Blue
  1309 ;;		_color_read_Clear
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text8
  1314   000546                     __ptext8:
  1315                           	callstack 0
  1316   000546                     _I2C_2_Master_Write:
  1317                           	callstack 26
  1318                           
  1319                           ;incstack = 0
  1320                           ;I2C_2_Master_Write@data_byte stored from wreg
  1321   000546  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  1322   000548                     
  1323                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1324   000548  EC42  F002         	call	_I2C_2_Master_Idle	;wreg free
  1325   00054C                     
  1326                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1327   00054C  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1328   000550  0012               	return		;funcret
  1329   000552                     __end_of_I2C_2_Master_Write:
  1330                           	callstack 0
  1331                           
  1332 ;; *************** function _I2C_2_Master_Stop *****************
  1333 ;; Defined at:
  1334 ;;		line 39 in file "i2c.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 2
  1355 ;; This function calls:
  1356 ;;		_I2C_2_Master_Idle
  1357 ;; This function is called by:
  1358 ;;		_color_writetoaddr
  1359 ;;		_color_read_Red
  1360 ;;		_color_read_Green
  1361 ;;		_color_read_Blue
  1362 ;;		_color_read_Clear
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text9
  1367   000552                     __ptext9:
  1368                           	callstack 0
  1369   000552                     _I2C_2_Master_Stop:
  1370                           	callstack 26
  1371   000552                     
  1372                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1373   000552  EC42  F002         	call	_I2C_2_Master_Idle	;wreg free
  1374   000556                     
  1375                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1376   000556  010E               	movlb	14	; () banked
  1377   000558  85DA               	bsf	218,2,b	;volatile
  1378   00055A                     
  1379                           ; BSR set to: 14
  1380   00055A  0012               	return		;funcret
  1381   00055C                     __end_of_I2C_2_Master_Stop:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _I2C_2_Master_Start *****************
  1385 ;; Defined at:
  1386 ;;		line 27 in file "i2c.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 2
  1407 ;; This function calls:
  1408 ;;		_I2C_2_Master_Idle
  1409 ;; This function is called by:
  1410 ;;		_color_writetoaddr
  1411 ;;		_color_read_Red
  1412 ;;		_color_read_Green
  1413 ;;		_color_read_Blue
  1414 ;;		_color_read_Clear
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text10
  1419   00055C                     __ptext10:
  1420                           	callstack 0
  1421   00055C                     _I2C_2_Master_Start:
  1422                           	callstack 26
  1423   00055C                     
  1424                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1425   00055C  EC42  F002         	call	_I2C_2_Master_Idle	;wreg free
  1426   000560                     
  1427                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1428   000560  010E               	movlb	14	; () banked
  1429   000562  81DA               	bsf	218,0,b	;volatile
  1430   000564                     
  1431                           ; BSR set to: 14
  1432   000564  0012               	return		;funcret
  1433   000566                     __end_of_I2C_2_Master_Start:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _I2C_2_Master_Idle *****************
  1437 ;; Defined at:
  1438 ;;		line 22 in file "i2c.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;Total ram usage:        1 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 1
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_I2C_2_Master_Start
  1463 ;;		_I2C_2_Master_Stop
  1464 ;;		_I2C_2_Master_Write
  1465 ;;		_I2C_2_Master_RepStart
  1466 ;;		_I2C_2_Master_Read
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text11
  1471   000484                     __ptext11:
  1472                           	callstack 0
  1473   000484                     _I2C_2_Master_Idle:
  1474                           	callstack 26
  1475   000484                     l145:
  1476   000484  010E               	movlb	14	; () banked
  1477   000486  B5D8               	btfsc	216,2,b	;volatile
  1478   000488  EF48  F002         	goto	u401
  1479   00048C  EF4A  F002         	goto	u400
  1480   000490                     u401:
  1481   000490  EF42  F002         	goto	l145
  1482   000494                     u400:
  1483   000494                     
  1484                           ; BSR set to: 14
  1485   000494  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1486   000498  0E1F               	movlw	31
  1487   00049A  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  1488   00049C  A4D8               	btfss	status,2,c
  1489   00049E  EF53  F002         	goto	u411
  1490   0004A2  EF55  F002         	goto	u410
  1491   0004A6                     u411:
  1492   0004A6  EF42  F002         	goto	l145
  1493   0004AA                     u410:
  1494   0004AA                     
  1495                           ; BSR set to: 14
  1496   0004AA  0012               	return		;funcret
  1497   0004AC                     __end_of_I2C_2_Master_Idle:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function _I2C_2_Master_Init *****************
  1501 ;; Defined at:
  1502 ;;		line 4 in file "i2c.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1520 ;;Total ram usage:        0 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_color_click_init
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text12
  1532   00045A                     __ptext12:
  1533                           	callstack 0
  1534   00045A                     _I2C_2_Master_Init:
  1535                           	callstack 28
  1536   00045A                     
  1537                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1538   00045A  010E               	movlb	14	; () banked
  1539   00045C  51D9               	movf	217,w,b	;volatile
  1540   00045E  0BF0               	andlw	-16
  1541   000460  0908               	iorlw	8
  1542   000462  6FD9               	movwf	217,b	;volatile
  1543   000464                     
  1544                           ; BSR set to: 14
  1545                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1546   000464  8BD9               	bsf	217,5,b	;volatile
  1547                           
  1548                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1549   000466  0E9F               	movlw	159
  1550   000468  6FD6               	movwf	214,b	;volatile
  1551   00046A                     
  1552                           ; BSR set to: 14
  1553                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1554   00046A  8A84               	bsf	132,5,c	;volatile
  1555   00046C                     
  1556                           ; BSR set to: 14
  1557                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1558   00046C  8C84               	bsf	132,6,c	;volatile
  1559   00046E                     
  1560                           ; BSR set to: 14
  1561                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1562   00046E  9BA7               	bcf	167,5,b	;volatile
  1563   000470                     
  1564                           ; BSR set to: 14
  1565                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1566   000470  9DA7               	bcf	167,6,b	;volatile
  1567                           
  1568                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1569   000472  0E1D               	movlw	29
  1570   000474  6F1D               	movwf	29,b	;volatile
  1571                           
  1572                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1573   000476  0E1E               	movlw	30
  1574   000478  6F1C               	movwf	28,b	;volatile
  1575                           
  1576                           ;i2c.c: 18:   RD5PPS=0x1C;
  1577   00047A  0E1C               	movlw	28
  1578   00047C  6F6F               	movwf	111,b	;volatile
  1579                           
  1580                           ;i2c.c: 19:   RD6PPS=0x1B;
  1581   00047E  0E1B               	movlw	27
  1582   000480  6F70               	movwf	112,b	;volatile
  1583   000482                     
  1584                           ; BSR set to: 14
  1585   000482  0012               	return		;funcret
  1586   000484                     __end_of_I2C_2_Master_Init:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _LEDSon_init *****************
  1590 ;; Defined at:
  1591 ;;		line 18 in file "LEDsOn.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		None
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;Total ram usage:        0 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text13
  1620   0004D2                     __ptext13:
  1621                           	callstack 0
  1622   0004D2                     _LEDSon_init:
  1623                           	callstack 29
  1624   0004D2                     
  1625                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  1626   0004D2  9288               	bcf	136,1,c	;volatile
  1627                           
  1628                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  1629   0004D4  9088               	bcf	136,0,c	;volatile
  1630                           
  1631                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  1632   0004D6  9884               	bcf	132,4,c	;volatile
  1633                           
  1634                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  1635   0004D8  9684               	bcf	132,3,c	;volatile
  1636                           
  1637                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  1638   0004DA  9086               	bcf	134,0,c	;volatile
  1639                           
  1640                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  1641   0004DC  9287               	bcf	135,1,c	;volatile
  1642                           
  1643                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  1644   0004DE  9E86               	bcf	134,7,c	;volatile
  1645                           
  1646                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  1647   0004E0  9881               	bcf	129,4,c	;volatile
  1648                           
  1649                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 0;
  1650   0004E2  9E7E               	bcf	126,7,c	;volatile
  1651                           
  1652                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 0;
  1653   0004E4  927F               	bcf	127,1,c	;volatile
  1654                           
  1655                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 0;
  1656   0004E6  9879               	bcf	121,4,c	;volatile
  1657                           
  1658                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  1659   0004E8  987C               	bcf	124,4,c	;volatile
  1660                           
  1661                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  1662   0004EA  9280               	bcf	128,1,c	;volatile
  1663                           
  1664                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  1665   0004EC  907E               	bcf	126,0,c	;volatile
  1666                           
  1667                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  1668   0004EE  9080               	bcf	128,0,c	;volatile
  1669                           
  1670                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  1671   0004F0  967C               	bcf	124,3,c	;volatile
  1672   0004F2  0012               	return		;funcret
  1673   0004F4                     __end_of_LEDSon_init:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _Interrupts_init *****************
  1677 ;; Defined at:
  1678 ;;		line 7 in file "interrupts.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text14
  1707   00042A                     __ptext14:
  1708                           	callstack 0
  1709   00042A                     _Interrupts_init:
  1710                           	callstack 29
  1711   00042A                     
  1712                           ;interrupts.c: 21:     TMR0IE=1;
  1713   00042A  010E               	movlb	14	; () banked
  1714   00042C  8B29               	bsf	41,5,b	;volatile
  1715   00042E                     
  1716                           ; BSR set to: 14
  1717                           ;interrupts.c: 22:     T0CON1bits.T0CS=0b010;
  1718   00042E  50D6               	movf	214,w,c	;volatile
  1719   000430  0B1F               	andlw	-225
  1720   000432  0940               	iorlw	64
  1721   000434  6ED6               	movwf	214,c	;volatile
  1722   000436                     
  1723                           ; BSR set to: 14
  1724                           ;interrupts.c: 23:     T0CON1bits.T0ASYNC=1;
  1725   000436  88D6               	bsf	214,4,c	;volatile
  1726                           
  1727                           ;interrupts.c: 24:     T0CON1bits.T0CKPS=0b0110;
  1728   000438  50D6               	movf	214,w,c	;volatile
  1729   00043A  0BF0               	andlw	-16
  1730   00043C  0906               	iorlw	6
  1731   00043E  6ED6               	movwf	214,c	;volatile
  1732   000440                     
  1733                           ; BSR set to: 14
  1734                           ;interrupts.c: 25:     T0CON0bits.T016BIT=0;
  1735   000440  98D5               	bcf	213,4,c	;volatile
  1736                           
  1737                           ;interrupts.c: 26:     TMR0H=0b00000000;
  1738   000442  0E00               	movlw	0
  1739   000444  6ED4               	movwf	212,c	;volatile
  1740                           
  1741                           ;interrupts.c: 27:     TMR0L=0b00000000;
  1742   000446  0E00               	movlw	0
  1743   000448  6ED3               	movwf	211,c	;volatile
  1744   00044A                     
  1745                           ; BSR set to: 14
  1746                           ;interrupts.c: 28:     T0CON0bits.T0EN=1;
  1747   00044A  8ED5               	bsf	213,7,c	;volatile
  1748                           
  1749                           ;interrupts.c: 29:     count = 0;
  1750   00044C  0E00               	movlw	0
  1751   00044E  6E52               	movwf	(_count+1)^0,c
  1752   000450  0E00               	movlw	0
  1753   000452  6E51               	movwf	_count^0,c
  1754   000454                     
  1755                           ; BSR set to: 14
  1756                           ;interrupts.c: 32:     INTCONbits.GIEL = 1;
  1757   000454  8CF2               	bsf	242,6,c	;volatile
  1758   000456                     
  1759                           ; BSR set to: 14
  1760                           ;interrupts.c: 33:     INTCONbits.GIEH=1;}
  1761   000456  8EF2               	bsf	242,7,c	;volatile
  1762   000458                     
  1763                           ; BSR set to: 14
  1764   000458  0012               	return		;funcret
  1765   00045A                     __end_of_Interrupts_init:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _LowISR *****************
  1769 ;; Defined at:
  1770 ;;		line 73 in file "interrupts.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;Total ram usage:        4 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		Interrupt level 1
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	intcodelo
  1798   000018                     __pintcodelo:
  1799                           	callstack 0
  1800   000018                     _LowISR:
  1801                           	callstack 26
  1802                           
  1803                           ; BSR set to: 14
  1804                           ;incstack = 0
  1805   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1806   00001A  CFD8 F002          	movff	status,??_LowISR+1
  1807   00001E  CFE8 F003          	movff	wreg,??_LowISR+2
  1808   000022  CFE0 F004          	movff	bsr,??_LowISR+3
  1809   000026                     
  1810                           ;interrupts.c: 76:     if(TMR0IF){
  1811   000026  010E               	movlb	14	; () banked
  1812   000028  AB33               	btfss	51,5,b	;volatile
  1813   00002A  EF19  F000         	goto	i1u36_21
  1814   00002E  EF1B  F000         	goto	i1u36_20
  1815   000032                     i1u36_21:
  1816   000032  EF45  F000         	goto	i1l434
  1817   000036                     i1u36_20:
  1818   000036                     
  1819                           ; BSR set to: 14
  1820                           ;interrupts.c: 78:         TMR0H = 0b00000000;
  1821   000036  0E00               	movlw	0
  1822   000038  6ED4               	movwf	212,c	;volatile
  1823                           
  1824                           ;interrupts.c: 79:         TMR0L = 0b00000111;
  1825   00003A  0E07               	movlw	7
  1826   00003C  6ED3               	movwf	211,c	;volatile
  1827   00003E                     
  1828                           ; BSR set to: 14
  1829                           ;interrupts.c: 85:         count +=1;
  1830   00003E  4A51               	infsnz	_count^0,f,c
  1831   000040  2A52               	incf	(_count+1)^0,f,c
  1832   000042                     
  1833                           ; BSR set to: 14
  1834                           ;interrupts.c: 86:         if (count == 1000){
  1835   000042  0EE8               	movlw	232
  1836   000044  1851               	xorwf	_count^0,w,c
  1837   000046  E107               	bnz	i1u37_21
  1838   000048  0E03               	movlw	3
  1839   00004A  1852               	xorwf	(_count+1)^0,w,c
  1840   00004C  A4D8               	btfss	status,2,c
  1841   00004E  EF2B  F000         	goto	i1u37_21
  1842   000052  EF2D  F000         	goto	i1u37_20
  1843   000056                     i1u37_21:
  1844   000056  EF43  F000         	goto	i1l1715
  1845   00005A                     i1u37_20:
  1846   00005A                     
  1847                           ; BSR set to: 14
  1848                           ;interrupts.c: 87:             LATHbits.LATH3 = !LATHbits.LATH3;
  1849   00005A  A680               	btfss	128,3,c	;volatile
  1850   00005C  EF32  F000         	goto	i1u38_21
  1851   000060  EF36  F000         	goto	i1u38_20
  1852   000064                     i1u38_21:
  1853   000064  6A01               	clrf	??_LowISR^0,c
  1854   000066  2A01               	incf	??_LowISR^0,f,c
  1855   000068  EF37  F000         	goto	i1u39_28
  1856   00006C                     i1u38_20:
  1857   00006C  6A01               	clrf	??_LowISR^0,c
  1858   00006E                     i1u39_28:
  1859   00006E  4601               	rlncf	??_LowISR^0,f,c
  1860   000070  4601               	rlncf	??_LowISR^0,f,c
  1861   000072  4601               	rlncf	??_LowISR^0,f,c
  1862   000074  5080               	movf	128,w,c	;volatile
  1863   000076  1801               	xorwf	??_LowISR^0,w,c
  1864   000078  0BF7               	andlw	-9
  1865   00007A  1801               	xorwf	??_LowISR^0,w,c
  1866   00007C  6E80               	movwf	128,c	;volatile
  1867   00007E                     
  1868                           ;interrupts.c: 88:             count = 0;}
  1869   00007E  0E00               	movlw	0
  1870   000080  6E52               	movwf	(_count+1)^0,c
  1871   000082  0E00               	movlw	0
  1872   000084  6E51               	movwf	_count^0,c
  1873   000086                     i1l1715:
  1874                           
  1875                           ;interrupts.c: 90:        TMR0IF=0;
  1876   000086  010E               	movlb	14	; () banked
  1877   000088  9B33               	bcf	51,5,b	;volatile
  1878   00008A                     i1l434:
  1879                           
  1880                           ; BSR set to: 14
  1881   00008A  C004  FFE0         	movff	??_LowISR+3,bsr
  1882   00008E  C003  FFE8         	movff	??_LowISR+2,wreg
  1883   000092  C002  FFD8         	movff	??_LowISR+1,status
  1884   000096  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1885   000098  0010               	retfie	
  1886   00009A                     __end_of_LowISR:
  1887                           	callstack 0
  1888   000000                     
  1889                           	psect	rparam
  1890   000000                     
  1891                           	psect	temp
  1892   000057                     btemp:
  1893                           	callstack 0
  1894   000057                     	ds	1
  1895   000000                     int$flags	set	btemp
  1896   000000                     wtemp8	set	btemp+1
  1897   000000                     ttemp5	set	btemp+1
  1898   000000                     ttemp6	set	btemp+4
  1899   000000                     ttemp7	set	btemp+8
  1900                           
  1901                           	psect	idloc
  1902                           
  1903                           ;Config register IDLOC0 @ 0x200000
  1904                           ;	unspecified, using default values
  1905   200000                     	org	2097152
  1906   200000  0FFF               	dw	4095
  1907                           
  1908                           ;Config register IDLOC1 @ 0x200002
  1909                           ;	unspecified, using default values
  1910   200002                     	org	2097154
  1911   200002  0FFF               	dw	4095
  1912                           
  1913                           ;Config register IDLOC2 @ 0x200004
  1914                           ;	unspecified, using default values
  1915   200004                     	org	2097156
  1916   200004  0FFF               	dw	4095
  1917                           
  1918                           ;Config register IDLOC3 @ 0x200006
  1919                           ;	unspecified, using default values
  1920   200006                     	org	2097158
  1921   200006  0FFF               	dw	4095
  1922                           
  1923                           ;Config register IDLOC4 @ 0x200008
  1924                           ;	unspecified, using default values
  1925   200008                     	org	2097160
  1926   200008  0FFF               	dw	4095
  1927                           
  1928                           ;Config register IDLOC5 @ 0x20000A
  1929                           ;	unspecified, using default values
  1930   20000A                     	org	2097162
  1931   20000A  0FFF               	dw	4095
  1932                           
  1933                           ;Config register IDLOC6 @ 0x20000C
  1934                           ;	unspecified, using default values
  1935   20000C                     	org	2097164
  1936   20000C  0FFF               	dw	4095
  1937                           
  1938                           ;Config register IDLOC7 @ 0x20000E
  1939                           ;	unspecified, using default values
  1940   20000E                     	org	2097166
  1941   20000E  0FFF               	dw	4095
  1942                           
  1943                           	psect	config
  1944                           
  1945                           ;Config register CONFIG1L @ 0x300000
  1946                           ;	External Oscillator mode Selection bits
  1947                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1948                           ;	Power-up default value for COSC bits
  1949                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1950   300000                     	org	3145728
  1951   300000  AA                 	db	170
  1952                           
  1953                           ;Config register CONFIG1H @ 0x300001
  1954                           ;	unspecified, using default values
  1955                           ;	Clock Out Enable bit
  1956                           ;	CLKOUTEN = 0x1, unprogrammed default
  1957                           ;	Clock Switch Enable bit
  1958                           ;	CSWEN = 0x1, unprogrammed default
  1959                           ;	Fail-Safe Clock Monitor Enable bit
  1960                           ;	FCMEN = 0x1, unprogrammed default
  1961   300001                     	org	3145729
  1962   300001  FF                 	db	255
  1963                           
  1964                           ;Config register CONFIG2L @ 0x300002
  1965                           ;	unspecified, using default values
  1966                           ;	Master Clear Enable bit
  1967                           ;	MCLRE = 0x1, unprogrammed default
  1968                           ;	Power-up Timer Enable bit
  1969                           ;	PWRTE = 0x1, unprogrammed default
  1970                           ;	Low-power BOR enable bit
  1971                           ;	LPBOREN = 0x1, unprogrammed default
  1972                           ;	Brown-out Reset Enable bits
  1973                           ;	BOREN = 0x3, unprogrammed default
  1974   300002                     	org	3145730
  1975   300002  FF                 	db	255
  1976                           
  1977                           ;Config register CONFIG2H @ 0x300003
  1978                           ;	unspecified, using default values
  1979                           ;	Brown Out Reset Voltage selection bits
  1980                           ;	BORV = 0x3, unprogrammed default
  1981                           ;	ZCD Disable bit
  1982                           ;	ZCD = 0x1, unprogrammed default
  1983                           ;	PPSLOCK bit One-Way Set Enable bit
  1984                           ;	PPS1WAY = 0x1, unprogrammed default
  1985                           ;	Stack Full/Underflow Reset Enable bit
  1986                           ;	STVREN = 0x1, unprogrammed default
  1987                           ;	Debugger Enable bit
  1988                           ;	DEBUG = 0x1, unprogrammed default
  1989                           ;	Extended Instruction Set Enable bit
  1990                           ;	XINST = 0x1, unprogrammed default
  1991   300003                     	org	3145731
  1992   300003  FF                 	db	255
  1993                           
  1994                           ;Config register CONFIG3L @ 0x300004
  1995                           ;	WDT Period Select bits
  1996                           ;	WDTCPS = 0x1F, unprogrammed default
  1997                           ;	WDT operating mode
  1998                           ;	WDTE = OFF, WDT Disabled
  1999   300004                     	org	3145732
  2000   300004  9F                 	db	159
  2001                           
  2002                           ;Config register CONFIG3H @ 0x300005
  2003                           ;	unspecified, using default values
  2004                           ;	WDT Window Select bits
  2005                           ;	WDTCWS = 0x7, unprogrammed default
  2006                           ;	WDT input clock selector
  2007                           ;	WDTCCS = 0x7, unprogrammed default
  2008   300005                     	org	3145733
  2009   300005  FF                 	db	255
  2010                           
  2011                           ;Config register CONFIG4L @ 0x300006
  2012                           ;	unspecified, using default values
  2013                           ;	Write Protection Block 0
  2014                           ;	WRT0 = 0x1, unprogrammed default
  2015                           ;	Write Protection Block 1
  2016                           ;	WRT1 = 0x1, unprogrammed default
  2017                           ;	Write Protection Block 2
  2018                           ;	WRT2 = 0x1, unprogrammed default
  2019                           ;	Write Protection Block 3
  2020                           ;	WRT3 = 0x1, unprogrammed default
  2021                           ;	Write Protection Block 3
  2022                           ;	WRT4 = 0x1, unprogrammed default
  2023                           ;	Write Protection Block 3
  2024                           ;	WRT5 = 0x1, unprogrammed default
  2025                           ;	Write Protection Block 3
  2026                           ;	WRT6 = 0x1, unprogrammed default
  2027                           ;	Write Protection Block 3
  2028                           ;	WRT7 = 0x1, unprogrammed default
  2029   300006                     	org	3145734
  2030   300006  FF                 	db	255
  2031                           
  2032                           ;Config register CONFIG4H @ 0x300007
  2033                           ;	unspecified, using default values
  2034                           ;	Configuration Register Write Protection bit
  2035                           ;	WRTC = 0x1, unprogrammed default
  2036                           ;	Boot Block Write Protection bit
  2037                           ;	WRTB = 0x1, unprogrammed default
  2038                           ;	Data EEPROM Write Protection bit
  2039                           ;	WRTD = 0x1, unprogrammed default
  2040                           ;	Scanner Enable bit
  2041                           ;	SCANE = 0x1, unprogrammed default
  2042                           ;	Low Voltage Programming Enable bit
  2043                           ;	LVP = 0x1, unprogrammed default
  2044   300007                     	org	3145735
  2045   300007  FF                 	db	255
  2046                           
  2047                           ;Config register CONFIG5L @ 0x300008
  2048                           ;	unspecified, using default values
  2049                           ;	UserNVM Program Memory Code Protection bit
  2050                           ;	CP = 0x1, unprogrammed default
  2051                           ;	DataNVM Memory Code Protection bit
  2052                           ;	CPD = 0x1, unprogrammed default
  2053   300008                     	org	3145736
  2054   300008  FF                 	db	255
  2055                           
  2056                           ;Config register CONFIG5H @ 0x300009
  2057                           ;	unspecified, using default values
  2058   300009                     	org	3145737
  2059   300009  FF                 	db	255
  2060                           
  2061                           ;Config register CONFIG6L @ 0x30000A
  2062                           ;	unspecified, using default values
  2063                           ;	Table Read Protection Block 0
  2064                           ;	EBTR0 = 0x1, unprogrammed default
  2065                           ;	Table Read Protection Block 1
  2066                           ;	EBTR1 = 0x1, unprogrammed default
  2067                           ;	Table Read Protection Block 2
  2068                           ;	EBTR2 = 0x1, unprogrammed default
  2069                           ;	Table Read Protection Block 3
  2070                           ;	EBTR3 = 0x1, unprogrammed default
  2071                           ;	Table Read Protection Block 4
  2072                           ;	EBTR4 = 0x1, unprogrammed default
  2073                           ;	Table Read Protection Block 5
  2074                           ;	EBTR5 = 0x1, unprogrammed default
  2075                           ;	Table Read Protection Block 6
  2076                           ;	EBTR6 = 0x1, unprogrammed default
  2077                           ;	Table Read Protection Block 7
  2078                           ;	EBTR7 = 0x1, unprogrammed default
  2079   30000A                     	org	3145738
  2080   30000A  FF                 	db	255
  2081                           
  2082                           ;Config register CONFIG6H @ 0x30000B
  2083                           ;	unspecified, using default values
  2084                           ;	Boot Block Table Read Protection bit
  2085                           ;	EBTRB = 0x1, unprogrammed default
  2086   30000B                     	org	3145739
  2087   30000B  FF                 	db	255
  2088                           tosu	equ	0xFFF
  2089                           tosh	equ	0xFFE
  2090                           tosl	equ	0xFFD
  2091                           stkptr	equ	0xFFC
  2092                           pclatu	equ	0xFFB
  2093                           pclath	equ	0xFFA
  2094                           pcl	equ	0xFF9
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           prodh	equ	0xFF4
  2100                           prodl	equ	0xFF3
  2101                           indf0	equ	0xFEF
  2102                           postinc0	equ	0xFEE
  2103                           postdec0	equ	0xFED
  2104                           preinc0	equ	0xFEC
  2105                           plusw0	equ	0xFEB
  2106                           fsr0h	equ	0xFEA
  2107                           fsr0l	equ	0xFE9
  2108                           wreg	equ	0xFE8
  2109                           indf1	equ	0xFE7
  2110                           postinc1	equ	0xFE6
  2111                           postdec1	equ	0xFE5
  2112                           preinc1	equ	0xFE4
  2113                           plusw1	equ	0xFE3
  2114                           fsr1h	equ	0xFE2
  2115                           fsr1l	equ	0xFE1
  2116                           bsr	equ	0xFE0
  2117                           indf2	equ	0xFDF
  2118                           postinc2	equ	0xFDE
  2119                           postdec2	equ	0xFDD
  2120                           preinc2	equ	0xFDC
  2121                           plusw2	equ	0xFDB
  2122                           fsr2h	equ	0xFDA
  2123                           fsr2l	equ	0xFD9
  2124                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      86
    BANK0           160      0      78
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    S525DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    S525DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), main@motorL(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                90    90      0    3700
                                             23 COMRAM    37    37      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _LEDSon_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3045
                                             17 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1422
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _LowISR                                               4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 _LowISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      4E       5       48.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      56       1       91.5%
BITBIGSFRllhhhh     52      0       0      43        0.0%
BITBIGSFRllhhhl     37      0       0      45        0.0%
BITBIGSFRllhhhl     2D      0       0      48        0.0%
BITBIGSFRllllhl     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllhhhl     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRllhhl      11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      B      0       0      59        0.0%
BITBIGSFRllhhhl      8      0       0      46        0.0%
BITBIGSFRlllllh      6      0       0      60        0.0%
BITBIGSFRllllhh      6      0       0      54        0.0%
BITBIGSFRllllhl      5      0       0      57        0.0%
BITBIGSFRlllhl       5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRllllhl      3      0       0      56        0.0%
BITBIGSFRllllhl      3      0       0      58        0.0%
BITBIGSFRlllhh       3      0       0      52        0.0%
BITBIGSFRllhhhh      2      0       0      42        0.0%
BITBIGSFRllhhhl      2      0       0      44        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRllhhhh      1      0       0      41        0.0%
BITBIGSFRllhhhh      1      0       0      40        0.0%
BITBIGSFRllhhhl      1      0       0      47        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      51        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      62        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 02:40:13 2022

                         l22 0532                           l19 0428                           l86 0208  
                         l79 033E                           bsr 000FE0          ___wmul@multiplicand 0007  
          ??_Interrupts_init 0005                          l220 02A8                          l221 02B0  
                        l142 0482                          l222 02B0                          l151 0564  
                        l160 0550                          l145 0484                          l218 029A  
                        l219 0298                          l148 04AA                          l157 055A  
                        l247 04F2                          l427 0458                          l356 0512  
                        l437 04D0                          l935 03B2                          l928 03AA  
                        u400 0494                          u401 0490                          u410 04AA  
                        u411 04A6                          u440 035A                          u441 0356  
                        u450 0378                          u451 0374                          u460 0394  
                        u461 0390                          u470 00BA                          u471 00B6  
                        u480 0184                          u481 0180                          u561 028C  
                        u570 02A8                          u571 02A4                          u657 040A  
                        wreg 000FE8                         l2001 023A                         l2011 0264  
                       l2003 0242                         l2021 0294                         l2013 026A  
                       l2005 0248                         l2023 0294                         l2015 0276  
                       l2007 024C                         l2025 0294                         l2017 0282  
                       l2009 0250                         l2027 0294                         l2019 0282  
                       l1721 055C                         l1801 041E                         l1723 0560  
                       l1731 0556                         l1741 046E                         l1733 045A  
                       l1717 0484                         l1725 0548                         l1821 02B8  
                       l1743 0470                         l1735 0464                         l1719 0494  
                       l1727 054C                         l1831 031A                         l1823 02C0  
                       l1737 046A                         l1729 0552                         l1745 0516  
                       l1841 033C                         l1833 0324                         l1825 02EA  
                       l1923 04D2                         l1739 046C                         l1835 0326  
                       l1827 030E                         l1931 0502                         l1771 0340  
                       l1851 0126                         l1843 009E                         l1941 042E  
                       l1837 0330                         l1829 0318                         l1933 050C  
                       l1925 04F4                         l1781 0378                         l1773 0348  
                       l1765 04AC                         l1853 0168                         l1845 00BA  
                       l1951 0456                         l1943 0436                         l1839 0332  
                       l1935 050E                         l1927 04FE                         l1791 03A4  
                       l1783 037E                         l1775 035A                         l1767 04C8  
                       l1855 0184                         l1847 010E                         l1945 0440  
                       l1793 03F6                         l1937 0510                         l1929 0500  
                       l1785 0394                         l1777 0362                         l1857 01C8  
                       l1849 0122                         l1947 044A                         l1939 042A  
                       l1795 03FA                         l1787 039C                         l1779 036A  
                       l1949 0454                         l1797 0404                         l1789 039E  
                       l1981 020E                         l1799 0414                         l1991 0222  
                       l1983 0212                         l1993 0226                         l1985 0216  
                       l1995 022A                         l1987 021A                         l1979 020A  
                       l1997 022E                         l1989 021E                         l1999 0232  
               ?_LEDSon_init 0001                 _BAUD4CONbits 000EE9                         _T2PR 000FBC  
                       _main 020A                         fsr2h 000FDA                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                         btemp 0057  
                       prodh 000FF4                         prodl 000FF3                         start 009A  
               ___param_bank 000000                        ?_main 0001              __end_of___lwdiv 03B4  
                      i1l434 008A                        _TMR0H 000FD4                        _TMR0L 000FD3  
 __end_of_I2C_2_Master_Start 0566   __end_of_I2C_2_Master_Write 0552                        _count 0051  
                      tablat 000FF5                        plusw1 000FE3                        plusw2 000FDB  
                      ttemp5 0058                        ttemp6 005B                        ttemp7 005F  
                      status 000FD8                        wtemp8 0058              __initialization 03B4  
               __end_of_main 02B8                       ??_main 0018                __activetblptr 000003  
               ?_setMotorPWM 0012                       _CCPR1H 000FAA                       _CCPR2H 000FA6  
                     _CCPR3H 000F25                       _CCPR4H 000F21                       _RC0PPS 000E62  
                     _RC4REG 000EE3                       _RE2PPS 000E74                       i1l1711 005A  
                     i1l1703 0026                       i1l1713 007E                       i1l1705 0036  
                     i1l1715 0086                       i1l1707 003E                       _RD5PPS 000E6F  
                     _RC7PPS 000E69                       i1l1709 0042                       _RD6PPS 000E70  
                     _RE4PPS 000E76                       _RG6PPS 000E88     __end_of_color_click_init 042A  
                     _TMR0IE 00714D                       _TMR0IF 00719D                       _RX4PPS 000E15  
                     _TX4REG 000EE4                       _LowISR 0018                 _CCPTMRS0bits 000FAD  
                     ___wmul 04AC                    ??___lwdiv 000F                       clear_0 03DA  
                     clear_1 03E6                       isa$std 000001                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8            ??_initDCmotorsPWM 0005  
                 __accesstop 0060      __end_of__initialization 03EC                ___rparam_used 000001  
            _Interrupts_init 042A               __pcstackCOMRAM 0001                 __pidataBANK0 0534  
                 __pbssBANK0 0060                      ?_LowISR 0001            _color_writetoaddr 0514  
               _T2CLKCONbits 000FBF           ?_color_writetoaddr 0007                      ?___wmul 0005  
        ??_color_writetoaddr 0008                      _SP4BRGH 000EE6                      _SP4BRGL 000EE5  
                    i1u36_20 0036                      i1u36_21 0032                      i1u37_20 005A  
                    i1u37_21 0056                      i1u38_20 006C                      i1u38_21 0064  
                    i1u39_28 006E                      _SSP2ADD 000ED6                      _SSP2BUF 000ED5  
    __end_of_Interrupts_init 045A       color_writetoaddr@value 0007    __end_of_color_writetoaddr 0534  
         _I2C_2_Master_Start 055C                   _initUSART4 04F4           _I2C_2_Master_Write 0546  
                    __Hparam 0000                      __Lparam 0000          ?_I2C_2_Master_Start 0001  
                    ___lwdiv 0340          ?_I2C_2_Master_Write 0001                      __pcinit 03B4  
                    __ramtop 0E00                      __ptext0 020A                      __ptext1 009E  
                    __ptext2 04AC                      __ptext3 0340                      __ptext4 04F4  
                    __ptext5 02B8                      __ptext6 03F6                      __ptext7 0514  
                    __ptext8 0546                      __ptext9 0552                    _T2CONbits 000FBD  
                  _T2HLTbits 000FBE                _RxBufWriteCnt 0056         ??_I2C_2_Master_Start 0006  
       ??_I2C_2_Master_Write 0006         end_of_initialization 03EC            ?_color_click_init 0001  
         ??_color_click_init 0009                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE                   main@F14642 009C  
            _initDCmotorsPWM 02B8                    _PORTFbits 000F8E           setMotorPWM@negDuty 0017  
                  _TRISAbits 000F81           setMotorPWM@posDuty 0016                    _TRISCbits 000F83  
                  _TRISDbits 000F84                    _TRISEbits 000F85                    _TRISFbits 000F86  
                  _TRISGbits 000F87                    _TRISHbits 000F88          main@expected_values 0018  
   color_writetoaddr@address 0008             ?_Interrupts_init 0001                  _CCP1CONbits 000FAB  
               _EUSART4RXbuf 003D                 _EUSART4TXbuf 0060                  _CCP2CONbits 000FA7  
                _CCP3CONbits 000F26                  ?_initUSART4 0001                  _CCP4CONbits 000F22  
                 main@motorL 002B                   main@motorR 0034               __end_of_LowISR 009A  
             __end_of___wmul 04D2          start_initialization 03B4                _TxBufWriteCnt 0054  
              ??_LEDSon_init 0005                     ??_LowISR 0001      __end_of_initDCmotorsPWM 0340  
                   ??___wmul 0009                  __pdataBANK0 009C                  __pbssCOMRAM 003D  
        __end_of_LEDSon_init 04F4             ___lwdiv@dividend 000B                     ?___lwdiv 000B  
                __pintcodelo 0018            _I2C_2_Master_Idle 0484            _I2C_2_Master_Init 045A  
          _I2C_2_Master_Stop 0552                 _RxBufReadCnt 0055           ?_I2C_2_Master_Idle 0001  
         ?_I2C_2_Master_Init 0001                ??_setMotorPWM 0014           ?_I2C_2_Master_Stop 0001  
           ___lwdiv@quotient 000F          ??_I2C_2_Master_Idle 0005          ??_I2C_2_Master_Init 0005  
             ___wmul@product 0009                     _LATAbits 000F79          ??_I2C_2_Master_Stop 0006  
                   _LATDbits 000F7C                     _LATFbits 000F7E                     _LATGbits 000F7F  
                   _LATHbits 000F80                     _PIE4bits 000E2D                     _PIR4bits 000E37  
           ?_initDCmotorsPWM 0001                     _SSP2CON2 000EDA                     _SSP2STAT 000ED8  
  __end_of_I2C_2_Master_Idle 04AC    __end_of_I2C_2_Master_Init 0484            ___wmul@multiplier 0005  
  __end_of_I2C_2_Master_Stop 055C                 setMotorPWM@m 0012  I2C_2_Master_Write@data_byte 0006  
               _TxBufReadCnt 0053                    copy_data0 03C8                  _LEDSon_init 04D2  
        __end_of_setMotorPWM 020A                 ??_initUSART4 0005                     __Hrparam 0000  
                   __Lrparam 0000                   _ANSELDbits 000EA7                   _T0CON0bits 000FD5  
                 _T0CON1bits 000FD6              ___lwdiv@divisor 000D           __end_of_initUSART4 0514  
            ___lwdiv@counter 0011                     __ptext10 055C                     __ptext11 0484  
                   __ptext12 045A                     __ptext13 04D2                     __ptext14 042A  
               _SSP2CON1bits 000ED9                 _SSP2CON2bits 000EDA                     isa$xinst 000000  
                 _RC4STAbits 000EE7                     int$flags 0057                   _INTCONbits 000FF2  
                _setMotorPWM 009E                     intlevel1 0000             _color_click_init 03F6  
                 _SSP2DATPPS 000E1D                   _SSP2CLKPPS 000E1C                   _TX4STAbits 000EE8  
               main@PWMcycle 002A  
