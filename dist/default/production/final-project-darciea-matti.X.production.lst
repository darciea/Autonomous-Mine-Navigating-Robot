

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 11:47:00 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Version 2.35
    58                           ; Generated 05/05/2021 GMT
    59                           ; 
    60                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataBANK1
    94   001EA2                     __pidataBANK1:
    95                           	callstack 0
    96                           
    97                           ;initializer for main@F14645
    98   001EA2  32C8               	dw	13000
    99   001EA4  0A28               	dw	2600
   100   001EA6  0708               	dw	1800
   101   001EA8  20D0               	dw	8400
   102   001EAA  1964               	dw	6500
   103   001EAC  1388               	dw	5000
   104   001EAE  1130               	dw	4400
   105   001EB0  0708               	dw	1800
   106   001EB2  0AF0               	dw	2800
   107   000000                     _TX4REG	set	3812
   108   000000                     _RC4STAbits	set	3815
   109   000000                     _SP4BRGH	set	3814
   110   000000                     _LATGbits	set	3967
   111   000000                     _TRISFbits	set	3974
   112   000000                     _TRISDbits	set	3972
   113   000000                     _TRISGbits	set	3975
   114   000000                     _SSP2CON2bits	set	3802
   115   000000                     _RX4PPS	set	3605
   116   000000                     _SSP2CLKPPS	set	3612
   117   000000                     _SSP2DATPPS	set	3613
   118   000000                     _RC7PPS	set	3689
   119   000000                     _RE2PPS	set	3700
   120   000000                     _TRISCbits	set	3971
   121   000000                     _TRISEbits	set	3973
   122   000000                     _TRISHbits	set	3976
   123   000000                     _T2PR	set	4028
   124   000000                     _T2CONbits	set	4029
   125   000000                     _CCPR2H	set	4006
   126   000000                     _CCPR1H	set	4010
   127   000000                     _RE4PPS	set	3702
   128   000000                     _RG6PPS	set	3720
   129   000000                     _RD5PPS	set	3695
   130   000000                     _ANSELDbits	set	3751
   131   000000                     _SSP2ADD	set	3798
   132   000000                     _SSP2CON1bits	set	3801
   133   000000                     _CCPR4H	set	3873
   134   000000                     _CCPR3H	set	3877
   135   000000                     _TMR0L	set	4051
   136   000000                     _TMR0H	set	4052
   137   000000                     _T0CON0bits	set	4053
   138   000000                     _T0CON1bits	set	4054
   139   000000                     _T2CLKCONbits	set	4031
   140   000000                     _T2HLTbits	set	4030
   141   000000                     _CCP1CONbits	set	4011
   142   000000                     _CCPTMRS0bits	set	4013
   143   000000                     _CCP2CONbits	set	4007
   144   000000                     _LATAbits	set	3961
   145   000000                     _LATDbits	set	3964
   146   000000                     _LATHbits	set	3968
   147   000000                     _CCP3CONbits	set	3878
   148   000000                     _CCP4CONbits	set	3874
   149   000000                     _RC4REG	set	3811
   150   000000                     _SP4BRGL	set	3813
   151   000000                     _TX4STAbits	set	3816
   152   000000                     _BAUD4CONbits	set	3817
   153   000000                     _SSP2CON2	set	3802
   154   000000                     _SSP2STAT	set	3800
   155   000000                     _SSP2BUF	set	3797
   156   000000                     _IPR0bits	set	3615
   157   000000                     _PIE4bits	set	3629
   158   000000                     _PIR4bits	set	3639
   159   000000                     _RC0PPS	set	3682
   160   000000                     _TMR0IE	set	29005
   161   000000                     _RD6PPS	set	3696
   162   000000                     _TRISAbits	set	3969
   163   000000                     _LATFbits	set	3966
   164   000000                     _TMR0IF	set	29085
   165   000000                     _INTCONbits	set	4082
   166                           
   167                           	psect	smallconst
   168   000E00                     __psmallconst:
   169                           	callstack 0
   170   000E00  00                 	db	0
   171   000E01                     STR_1:
   172                           
   173                           ; BSR set to: 14
   174   000E01  52                 	db	82	;'R'
   175   000E02  61                 	db	97	;'a'
   176   000E03  77                 	db	119	;'w'
   177   000E04  20                 	db	32
   178   000E05  25                 	db	37
   179   000E06  64                 	db	100	;'d'
   180   000E07  2C                 	db	44
   181   000E08  20                 	db	32
   182   000E09  25                 	db	37
   183   000E0A  64                 	db	100	;'d'
   184   000E0B  2C                 	db	44
   185   000E0C  20                 	db	32
   186   000E0D  25                 	db	37
   187   000E0E  64                 	db	100	;'d'
   188   000E0F  2C                 	db	44
   189   000E10  20                 	db	32
   190   000E11  25                 	db	37
   191   000E12  64                 	db	100	;'d'
   192   000E13  20                 	db	32
   193   000E14  0A                 	db	10
   194   000E15  00                 	db	0
   195   000E16  00                 	db	0	; dummy byte at the end
   196   000000                     
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   001C0E                     __pcinit:
   201                           	callstack 0
   202   001C0E                     start_initialization:
   203                           	callstack 0
   204   001C0E                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to BANK1 (18 bytes)
   208                           ; load TBLPTR registers with __pidataBANK1
   209   001C0E  0EA2               	movlw	low __pidataBANK1
   210   001C10  6EF6               	movwf	tblptrl,c
   211   001C12  0E1E               	movlw	high __pidataBANK1
   212   001C14  6EF7               	movwf	tblptrh,c
   213   001C16  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   214   001C18  6EF8               	movwf	tblptru,c
   215   001C1A  EE01  F0BB         	lfsr	0,__pdataBANK1
   216   001C1E  EE10 F012          	lfsr	1,18
   217   001C22                     copy_data0:
   218   001C22  0009               	tblrd		*+
   219   001C24  CFF5 FFEE          	movff	tablat,postinc0
   220   001C28  50E5               	movf	postdec1,w,c
   221   001C2A  50E1               	movf	fsr1l,w,c
   222   001C2C  E1FA               	bnz	copy_data0
   223                           
   224                           ; Clear objects allocated to BANK2 (120 bytes)
   225   001C2E  EE02  F000         	lfsr	0,__pbssBANK2
   226   001C32  0E78               	movlw	120
   227   001C34                     clear_0:
   228   001C34  6AEE               	clrf	postinc0,c
   229   001C36  06E8               	decf	wreg,f,c
   230   001C38  E1FD               	bnz	clear_0
   231                           
   232                           ; Clear objects allocated to BANK1 (2 bytes)
   233   001C3A  0101               	movlb	1
   234   001C3C  6BCE               	clrf	(__pbssBANK1+1)& (0+255),b
   235   001C3E  6BCD               	clrf	__pbssBANK1& (0+255),b
   236                           
   237                           ; Clear objects allocated to BANK0 (124 bytes)
   238   001C40  EE00  F060         	lfsr	0,__pbssBANK0
   239   001C44  0E7C               	movlw	124
   240   001C46                     clear_1:
   241   001C46  6AEE               	clrf	postinc0,c
   242   001C48  06E8               	decf	wreg,f,c
   243   001C4A  E1FD               	bnz	clear_1
   244                           
   245                           ; Clear objects allocated to COMRAM (3 bytes)
   246   001C4C  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   247   001C4E  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   248   001C50  6A58               	clrf	__pbssCOMRAM& (0+255),c
   249   001C52                     end_of_initialization:
   250                           	callstack 0
   251   001C52                     __end_of__initialization:
   252                           	callstack 0
   253   001C52  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254   001C54  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255   001C56  0100               	movlb	0
   256   001C58  EF4A  F008         	goto	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMRAM
   259   000058                     __pbssCOMRAM:
   260                           	callstack 0
   261   000058                     _TxBufReadCnt:
   262                           	callstack 0
   263   000058                     	ds	1
   264   000059                     _TxBufWriteCnt:
   265                           	callstack 0
   266   000059                     	ds	1
   267   00005A                     _RxBufWriteCnt:
   268                           	callstack 0
   269   00005A                     	ds	1
   270                           
   271                           	psect	bssBANK0
   272   000060                     __pbssBANK0:
   273                           	callstack 0
   274   000060                     _EUSART4TXbuf:
   275                           	callstack 0
   276   000060                     	ds	60
   277   00009C                     _EUSART4RXbuf:
   278                           	callstack 0
   279   00009C                     	ds	20
   280   0000B0                     _width:
   281                           	callstack 0
   282   0000B0                     	ds	2
   283   0000B2                     _prec:
   284                           	callstack 0
   285   0000B2                     	ds	2
   286   0000B4                     _card_seen:
   287                           	callstack 0
   288   0000B4                     	ds	2
   289   0000B6                     _card_detected:
   290                           	callstack 0
   291   0000B6                     	ds	2
   292   0000B8                     _response_in_progress:
   293                           	callstack 0
   294   0000B8                     	ds	2
   295   0000BA                     _flags:
   296                           	callstack 0
   297   0000BA                     	ds	1
   298   0000BB                     _RxBufReadCnt:
   299                           	callstack 0
   300   0000BB                     	ds	1
   301   0000BC                     _dbuf:
   302                           	callstack 0
   303   0000BC                     	ds	32
   304                           
   305                           	psect	bssBANK1
   306   0001CD                     __pbssBANK1:
   307                           	callstack 0
   308   0001CD                     _TimerFlag:
   309                           	callstack 0
   310   0001CD                     	ds	2
   311                           
   312                           	psect	dataBANK1
   313   0001BB                     __pdataBANK1:
   314                           	callstack 0
   315   0001BB                     main@F14645:
   316                           	callstack 0
   317   0001BB                     	ds	18
   318                           
   319                           	psect	bssBANK2
   320   000200                     __pbssBANK2:
   321                           	callstack 0
   322   000200                     	ds	120
   323                           
   324                           	psect	cstackBANK1
   325   000100                     __pcstackBANK1:
   326                           	callstack 0
   327   000100                     main@ReturnHomeArray:
   328                           	callstack 0
   329                           
   330                           ; 120 bytes @ 0x0
   331   000100                     	ds	120
   332   000178                     main@expected_values:
   333                           	callstack 0
   334                           
   335                           ; 18 bytes @ 0x78
   336   000178                     	ds	18
   337   00018A                     main@buf:
   338                           	callstack 0
   339                           
   340                           ; 20 bytes @ 0x8A
   341   00018A                     	ds	20
   342   00019E                     main@red_read:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x9E
   346   00019E                     	ds	2
   347   0001A0                     main@green_read:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0xA0
   351   0001A0                     	ds	2
   352   0001A2                     main@blue_read:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0xA2
   356   0001A2                     	ds	2
   357   0001A4                     main@clear_read:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0xA4
   361   0001A4                     	ds	2
   362   0001A6                     main@TimerCount:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0xA6
   366   0001A6                     	ds	2
   367   0001A8                     main@PWMcycle:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0xA8
   371   0001A8                     	ds	1
   372   0001A9                     main@motorL:
   373                           	callstack 0
   374                           
   375                           ; 9 bytes @ 0xA9
   376   0001A9                     	ds	9
   377   0001B2                     main@motorR:
   378                           	callstack 0
   379                           
   380                           ; 9 bytes @ 0xB2
   381   0001B2                     	ds	9
   382                           
   383                           	psect	cstackBANK0
   384   0000DC                     __pcstackBANK0:
   385                           	callstack 0
   386   0000DC                     ?_vfprintf:
   387                           	callstack 0
   388   0000DC                     vfprintf@fp:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x0
   392   0000DC                     	ds	2
   393   0000DE                     vfprintf@fmt:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x2
   397   0000DE                     	ds	2
   398   0000E0                     vfprintf@ap:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x4
   402   0000E0                     	ds	2
   403   0000E2                     ?_sprintf:
   404                           	callstack 0
   405   0000E2                     sprintf@s:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x6
   409   0000E2                     	ds	2
   410   0000E4                     sprintf@fmt:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x8
   414   0000E4                     	ds	10
   415   0000EE                     sprintf@ap:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x12
   419   0000EE                     	ds	2
   420   0000F0                     sprintf@f:
   421                           	callstack 0
   422                           
   423                           ; 11 bytes @ 0x14
   424   0000F0                     	ds	11
   425                           
   426                           	psect	cstackCOMRAM
   427   000001                     __pcstackCOMRAM:
   428                           	callstack 0
   429   000001                     ??_LowISR:
   430   000001                     
   431                           ; 1 bytes @ 0x0
   432   000001                     	ds	3
   433   000004                     ??_I2C_2_Master_Idle:
   434   000004                     ?___wmul:
   435                           	callstack 0
   436   000004                     ?___aodiv:
   437                           	callstack 0
   438   000004                     ?___aomod:
   439                           	callstack 0
   440   000004                     sendCharSerial4@charToSend:
   441                           	callstack 0
   442   000004                     ___wmul@multiplier:
   443                           	callstack 0
   444   000004                     fputc@c:
   445                           	callstack 0
   446   000004                     ___aodiv@dividend:
   447                           	callstack 0
   448   000004                     ___aomod@dividend:
   449                           	callstack 0
   450                           
   451                           ; 8 bytes @ 0x3
   452   000004                     	ds	1
   453   000005                     ??_I2C_2_Master_Read:
   454   000005                     I2C_2_Master_Write@data_byte:
   455                           	callstack 0
   456   000005                     sendStringSerial4@string:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x4
   460   000005                     	ds	1
   461   000006                     color_writetoaddr@value:
   462                           	callstack 0
   463   000006                     I2C_2_Master_Read@ack:
   464                           	callstack 0
   465   000006                     ___wmul@multiplicand:
   466                           	callstack 0
   467   000006                     fputc@fp:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x5
   471   000006                     	ds	1
   472   000007                     color_writetoaddr@address:
   473                           	callstack 0
   474   000007                     I2C_2_Master_Read@tmp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x6
   478   000007                     	ds	1
   479   000008                     ??_fputc:
   480   000008                     ??_color_click_init:
   481   000008                     ?_color_read_Red:
   482                           	callstack 0
   483   000008                     ?_color_read_Green:
   484                           	callstack 0
   485   000008                     ?_color_read_Blue:
   486                           	callstack 0
   487   000008                     ?_color_read_Clear:
   488                           	callstack 0
   489   000008                     ___wmul@product:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x7
   493   000008                     	ds	2
   494   00000A                     ??_color_read_Red:
   495   00000A                     ??_color_read_Green:
   496   00000A                     ??_color_read_Blue:
   497   00000A                     ??_color_read_Clear:
   498   00000A                     ?___lwdiv:
   499                           	callstack 0
   500   00000A                     ___lwdiv@dividend:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x9
   504   00000A                     	ds	2
   505   00000C                     ___lwdiv@divisor:
   506                           	callstack 0
   507   00000C                     ___aodiv@divisor:
   508                           	callstack 0
   509   00000C                     ___aomod@divisor:
   510                           	callstack 0
   511                           
   512                           ; 8 bytes @ 0xB
   513   00000C                     	ds	1
   514   00000D                     color_read_Red@tmp:
   515                           	callstack 0
   516   00000D                     color_read_Green@tmp:
   517                           	callstack 0
   518   00000D                     color_read_Blue@tmp:
   519                           	callstack 0
   520   00000D                     color_read_Clear@tmp:
   521                           	callstack 0
   522   00000D                     fputs@s:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0xC
   526   00000D                     	ds	1
   527   00000E                     ___lwdiv@quotient:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0xD
   531   00000E                     	ds	1
   532   00000F                     fputs@fp:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xE
   536   00000F                     	ds	1
   537   000010                     ___lwdiv@counter:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0xF
   541   000010                     	ds	1
   542   000011                     fputs@c:
   543                           	callstack 0
   544   000011                     setMotorPWM@m:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x10
   548   000011                     	ds	1
   549   000012                     fputs@i:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x11
   553   000012                     	ds	1
   554   000013                     ??_setMotorPWM:
   555                           
   556                           ; 1 bytes @ 0x12
   557   000013                     	ds	1
   558   000014                     ___aodiv@counter:
   559                           	callstack 0
   560   000014                     ___aomod@counter:
   561                           	callstack 0
   562   000014                     pad@fp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x13
   566   000014                     	ds	1
   567   000015                     setMotorPWM@posDuty:
   568                           	callstack 0
   569   000015                     ___aodiv@sign:
   570                           	callstack 0
   571   000015                     ___aomod@sign:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x14
   575   000015                     	ds	1
   576   000016                     ?_abs:
   577                           	callstack 0
   578   000016                     setMotorPWM@negDuty:
   579                           	callstack 0
   580   000016                     abs@a:
   581                           	callstack 0
   582   000016                     pad@buf:
   583                           	callstack 0
   584   000016                     ___aodiv@quotient:
   585                           	callstack 0
   586                           
   587                           ; 8 bytes @ 0x15
   588   000016                     	ds	2
   589   000018                     ??_abs:
   590   000018                     pad@p:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x17
   594   000018                     	ds	2
   595   00001A                     ??_pad:
   596                           
   597                           ; 1 bytes @ 0x19
   598   00001A                     	ds	1
   599   00001B                     pad@i:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x1A
   603   00001B                     	ds	2
   604   00001D                     pad@w:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x1C
   608   00001D                     	ds	2
   609   00001F                     dtoa@fp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x1E
   613   00001F                     	ds	2
   614   000021                     dtoa@d:
   615                           	callstack 0
   616                           
   617                           ; 8 bytes @ 0x20
   618   000021                     	ds	8
   619   000029                     ??_dtoa:
   620                           
   621                           ; 1 bytes @ 0x28
   622   000029                     	ds	8
   623   000031                     _dtoa$2363:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x30
   627   000031                     	ds	2
   628   000033                     dtoa@p:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x32
   632   000033                     	ds	2
   633   000035                     dtoa@w:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x34
   637   000035                     	ds	2
   638   000037                     dtoa@n:
   639                           	callstack 0
   640                           
   641                           ; 8 bytes @ 0x36
   642   000037                     	ds	8
   643   00003F                     dtoa@i:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x3E
   647   00003F                     	ds	2
   648   000041                     dtoa@s:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x40
   652   000041                     	ds	1
   653   000042                     vfpfcnvrt@fp:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x41
   657   000042                     	ds	2
   658   000044                     vfpfcnvrt@fmt:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x43
   662   000044                     	ds	2
   663   000046                     vfpfcnvrt@ap:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x45
   667   000046                     	ds	2
   668   000048                     ??_vfpfcnvrt:
   669                           
   670                           ; 1 bytes @ 0x47
   671   000048                     	ds	2
   672   00004A                     vfpfcnvrt@convarg:
   673                           	callstack 0
   674                           
   675                           ; 8 bytes @ 0x49
   676   00004A                     	ds	8
   677   000052                     vfpfcnvrt@cp:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x51
   681   000052                     	ds	2
   682   000054                     vfprintf@cfmt:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x53
   686   000054                     	ds	2
   687   000056                     ??_main:
   688                           
   689                           ; 1 bytes @ 0x55
   690   000056                     	ds	2
   691                           
   692 ;;
   693 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   694 ;;
   695 ;; *************** function _main *****************
   696 ;; Defined at:
   697 ;;		line 23 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  ReturnHomeAr  120    0[BANK1 ] unsigned int [30][2]
   702 ;;  buf            20  138[BANK1 ] unsigned char [20]
   703 ;;  expected_val   18  120[BANK1 ] unsigned int [3][3]
   704 ;;  normalised_v   18    0        unsigned int [3][3]
   705 ;;  motorR          9  178[BANK1 ] struct DC_motor
   706 ;;  motorL          9  169[BANK1 ] struct DC_motor
   707 ;;  master_close    6    0        unsigned int [3]
   708 ;;  TimerCount      2  166[BANK1 ] unsigned int 
   709 ;;  clear_read      2  164[BANK1 ] unsigned int 
   710 ;;  blue_read       2  162[BANK1 ] unsigned int 
   711 ;;  green_read      2  160[BANK1 ] unsigned int 
   712 ;;  red_read        2  158[BANK1 ] unsigned int 
   713 ;;  CardCount       2    0        unsigned int 
   714 ;;  PWMcycle        1  168[BANK1 ] unsigned char 
   715 ;;  card            1    0        enum E14569
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   726 ;;      Locals:         0       0     187       0       0       0       0       0       0       0       0       0       
      +0       0       0
   727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   728 ;;      Totals:         2       0     187       0       0       0       0       0       0       0       0       0       
      +0       0       0
   729 ;;Total ram usage:      189 bytes
   730 ;; Hardware stack levels required when called: 9
   731 ;; This function calls:
   732 ;;		_I2C_2_Master_Init
   733 ;;		_Interrupts_init
   734 ;;		_LEDSon_init
   735 ;;		_color_click_init
   736 ;;		_color_read_Blue
   737 ;;		_color_read_Clear
   738 ;;		_color_read_Green
   739 ;;		_color_read_Red
   740 ;;		_initDCmotorsPWM
   741 ;;		_initUSART4
   742 ;;		_sendStringSerial4
   743 ;;		_setMotorPWM
   744 ;;		_sprintf
   745 ;; This function is called by:
   746 ;;		Startup code after reset
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text0
   751   001094                     __ptext0:
   752                           	callstack 0
   753   001094                     _main:
   754                           	callstack 22
   755   001094                     
   756                           ;main.c: 28:     LEDSon_init();
   757   001094  EC14  F00F         	call	_LEDSon_init	;wreg free
   758   001098                     
   759                           ;main.c: 29:     I2C_2_Master_Init();
   760   001098  ECC3  F00E         	call	_I2C_2_Master_Init	;wreg free
   761   00109C                     
   762                           ;main.c: 30:     color_click_init();
   763   00109C  EC91  F00E         	call	_color_click_init	;wreg free
   764   0010A0                     
   765                           ;main.c: 31:     initDCmotorsPWM();
   766   0010A0  EC59  F00C         	call	_initDCmotorsPWM	;wreg free
   767   0010A4                     
   768                           ;main.c: 32:     initUSART4();
   769   0010A4  EC25  F00F         	call	_initUSART4	;wreg free
   770   0010A8                     
   771                           ;main.c: 33:     Interrupts_init();
   772   0010A8  ECD8  F00E         	call	_Interrupts_init	;wreg free
   773   0010AC                     
   774                           ;main.c: 41:     unsigned char PWMcycle = T2PR;
   775   0010AC  CFBC F1A8          	movff	4028,main@PWMcycle	;volatile
   776   0010B0                     
   777                           ;main.c: 43:     struct DC_motor motorL, motorR;;main.c: 45:     motorL.power=0;
   778   0010B0  0E00               	movlw	0
   779   0010B2  0101               	movlb	1	; () banked
   780   0010B4  6FA9               	movwf	main@motorL& (0+255),b
   781   0010B6                     
   782                           ; BSR set to: 1
   783                           ;main.c: 46:     motorL.direction=1;
   784   0010B6  0E01               	movlw	1
   785   0010B8  6FAA               	movwf	(main@motorL+1)& (0+255),b
   786   0010BA                     
   787                           ; BSR set to: 1
   788                           ;main.c: 47:     motorL.brakemode=1;
   789   0010BA  0E01               	movlw	1
   790   0010BC  6FAB               	movwf	(main@motorL+2)& (0+255),b
   791   0010BE                     
   792                           ; BSR set to: 1
   793                           ;main.c: 48:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   794   0010BE  0EAA               	movlw	170
   795   0010C0  6FAE               	movwf	(main@motorL+5)& (0+255),b
   796   0010C2  0E0F               	movlw	15
   797   0010C4  6FAF               	movwf	(main@motorL+6)& (0+255),b
   798   0010C6                     
   799                           ; BSR set to: 1
   800                           ;main.c: 49:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   801   0010C6  0EA6               	movlw	166
   802   0010C8  6FB0               	movwf	(main@motorL+7)& (0+255),b
   803   0010CA  0E0F               	movlw	15
   804   0010CC  6FB1               	movwf	(main@motorL+8)& (0+255),b
   805   0010CE                     
   806                           ; BSR set to: 1
   807                           ;main.c: 50:     motorL.PWMperiod=PWMcycle;
   808   0010CE  C1A8  F1AC         	movff	main@PWMcycle,main@motorL+3
   809   0010D2  6BAD               	clrf	(main@motorL+4)& (0+255),b
   810   0010D4                     
   811                           ; BSR set to: 1
   812                           ;main.c: 52:     motorR.power=0;
   813   0010D4  0E00               	movlw	0
   814   0010D6  6FB2               	movwf	main@motorR& (0+255),b
   815   0010D8                     
   816                           ; BSR set to: 1
   817                           ;main.c: 53:     motorR.direction=1;
   818   0010D8  0E01               	movlw	1
   819   0010DA  6FB3               	movwf	(main@motorR+1)& (0+255),b
   820   0010DC                     
   821                           ; BSR set to: 1
   822                           ;main.c: 54:     motorR.brakemode=1;
   823   0010DC  0E01               	movlw	1
   824   0010DE  6FB4               	movwf	(main@motorR+2)& (0+255),b
   825                           
   826                           ;main.c: 55:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   827   0010E0  0E25               	movlw	37
   828   0010E2  6FB7               	movwf	(main@motorR+5)& (0+255),b
   829   0010E4  0E0F               	movlw	15
   830   0010E6  6FB8               	movwf	(main@motorR+6)& (0+255),b
   831                           
   832                           ;main.c: 56:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   833   0010E8  0E21               	movlw	33
   834   0010EA  6FB9               	movwf	(main@motorR+7)& (0+255),b
   835   0010EC  0E0F               	movlw	15
   836   0010EE  6FBA               	movwf	(main@motorR+8)& (0+255),b
   837   0010F0                     
   838                           ; BSR set to: 1
   839                           ;main.c: 57:     motorR.PWMperiod=PWMcycle;
   840   0010F0  C1A8  F1B5         	movff	main@PWMcycle,main@motorR+3
   841   0010F4  6BB6               	clrf	(main@motorR+4)& (0+255),b
   842   0010F6                     
   843                           ; BSR set to: 1
   844                           ;main.c: 59:     setMotorPWM(&motorL);
   845   0010F6  0EA9               	movlw	low main@motorL
   846   0010F8  6E11               	movwf	setMotorPWM@m^0,c
   847   0010FA  0E01               	movlw	high main@motorL
   848   0010FC  6E12               	movwf	(setMotorPWM@m+1)^0,c
   849   0010FE  ECDD  F009         	call	_setMotorPWM	;wreg free
   850   001102                     
   851                           ;main.c: 60:     setMotorPWM(&motorR);
   852   001102  0EB2               	movlw	low main@motorR
   853   001104  6E11               	movwf	setMotorPWM@m^0,c
   854   001106  0E01               	movlw	high main@motorR
   855   001108  6E12               	movwf	(setMotorPWM@m+1)^0,c
   856   00110A  ECDD  F009         	call	_setMotorPWM	;wreg free
   857   00110E                     
   858                           ;main.c: 66:     unsigned int expected_values[3][3] = {{13000, 2600, 1800},{8400, 6500, 
      +                          5000},{4400, 1800, 2800}};
   859   00110E  EE21  F0BB         	lfsr	2,main@F14645
   860   001112  EE11  F078         	lfsr	1,main@expected_values
   861   001116  0E11               	movlw	17
   862   001118                     u1461:
   863   001118  CFDB FFE3          	movff	plusw2,plusw1
   864   00111C  06E8               	decf	wreg,f,c
   865   00111E  E2FC               	bc	u1461
   866   001120                     
   867                           ;main.c: 75:     unsigned int TimerCount = 0;
   868   001120  0E00               	movlw	0
   869   001122  0101               	movlb	1	; () banked
   870   001124  6FA7               	movwf	(main@TimerCount+1)& (0+255),b
   871   001126  0E00               	movlw	0
   872   001128  6FA6               	movwf	main@TimerCount& (0+255),b
   873   00112A                     
   874                           ; BSR set to: 1
   875                           ;main.c: 78:     unsigned int ReturnHomeArray[2][30] = {0};
   876   00112A  EE21  F000         	lfsr	2,main@ReturnHomeArray
   877   00112E  0E77               	movlw	119
   878   001130                     u1471:
   879   001130  6ADE               	clrf	postinc2,c
   880   001132  06E8               	decf	wreg,f,c
   881   001134  E2FD               	bc	u1471
   882   001136                     
   883                           ; BSR set to: 1
   884                           ;main.c: 136:     LATHbits.LATH3=0;
   885   001136  9680               	bcf	128,3,c	;volatile
   886   001138                     
   887                           ; BSR set to: 1
   888                           ;main.c: 137:     TRISHbits.TRISH3=0;
   889   001138  9688               	bcf	136,3,c	;volatile
   890   00113A                     
   891                           ; BSR set to: 1
   892                           ;main.c: 139:     char buf[20];;main.c: 141:     LATDbits.LATD7=0;
   893   00113A  9E7C               	bcf	124,7,c	;volatile
   894   00113C                     
   895                           ; BSR set to: 1
   896                           ;main.c: 142:     TRISDbits.TRISD7=0;
   897   00113C  9E84               	bcf	132,7,c	;volatile
   898   00113E                     l3005:
   899                           
   900                           ;main.c: 146:         if (TimerFlag == 1){
   901   00113E  0101               	movlb	1	; () banked
   902   001140  05CD               	decf	_TimerFlag& (0+255),w,b
   903   001142  11CE               	iorwf	(_TimerFlag+1)& (0+255),w,b
   904   001144  A4D8               	btfss	status,2,c
   905   001146  EFA7  F008         	goto	u1481
   906   00114A  EFA9  F008         	goto	u1480
   907   00114E                     u1481:
   908   00114E  EFD0  F008         	goto	l3017
   909   001152                     u1480:
   910   001152                     
   911                           ; BSR set to: 1
   912                           ;main.c: 147:             TimerCount += 1;
   913   001152  4BA6               	infsnz	main@TimerCount& (0+255),f,b
   914   001154  2BA7               	incf	(main@TimerCount+1)& (0+255),f,b
   915   001156                     
   916                           ; BSR set to: 1
   917                           ;main.c: 148:             if (TimerCount == 10){LATHbits.LATH3=!LATHbits.LATH3; TimerCou
      +                          nt = 0;}
   918   001156  0E0A               	movlw	10
   919   001158  19A6               	xorwf	main@TimerCount& (0+255),w,b
   920   00115A  11A7               	iorwf	(main@TimerCount+1)& (0+255),w,b
   921   00115C  A4D8               	btfss	status,2,c
   922   00115E  EFB3  F008         	goto	u1491
   923   001162  EFB5  F008         	goto	u1490
   924   001166                     u1491:
   925   001166  EFCC  F008         	goto	l3015
   926   00116A                     u1490:
   927   00116A                     
   928                           ; BSR set to: 1
   929   00116A  A680               	btfss	128,3,c	;volatile
   930   00116C  EFBA  F008         	goto	u1501
   931   001170  EFBE  F008         	goto	u1500
   932   001174                     u1501:
   933   001174  6A56               	clrf	??_main^0,c
   934   001176  2A56               	incf	??_main^0,f,c
   935   001178  EFBF  F008         	goto	u1518
   936   00117C                     u1500:
   937   00117C  6A56               	clrf	??_main^0,c
   938   00117E                     u1518:
   939   00117E  4656               	rlncf	??_main^0,f,c
   940   001180  4656               	rlncf	??_main^0,f,c
   941   001182  4656               	rlncf	??_main^0,f,c
   942   001184  5080               	movf	128,w,c	;volatile
   943   001186  1856               	xorwf	??_main^0,w,c
   944   001188  0BF7               	andlw	-9
   945   00118A  1856               	xorwf	??_main^0,w,c
   946   00118C  6E80               	movwf	128,c	;volatile
   947   00118E  0E00               	movlw	0
   948   001190  0101               	movlb	1	; () banked
   949   001192  6FA7               	movwf	(main@TimerCount+1)& (0+255),b
   950   001194  0E00               	movlw	0
   951   001196  6FA6               	movwf	main@TimerCount& (0+255),b
   952   001198                     l3015:
   953                           
   954                           ; BSR set to: 1
   955                           ;main.c: 149:             TimerFlag = 0;
   956   001198  0E00               	movlw	0
   957   00119A  6FCE               	movwf	(_TimerFlag+1)& (0+255),b
   958   00119C  0E00               	movlw	0
   959   00119E  6FCD               	movwf	_TimerFlag& (0+255),b
   960   0011A0                     l3017:
   961                           
   962                           ; BSR set to: 1
   963                           ;main.c: 169:         red_read = color_read_Red();
   964   0011A0  EC67  F00D         	call	_color_read_Red	;wreg free
   965   0011A4  C008  F19E         	movff	?_color_read_Red,main@red_read
   966   0011A8  C009  F19F         	movff	?_color_read_Red+1,main@red_read+1
   967   0011AC                     
   968                           ;main.c: 170:         blue_read = color_read_Blue();
   969   0011AC  ECDF  F00D         	call	_color_read_Blue	;wreg free
   970   0011B0  C008  F1A2         	movff	?_color_read_Blue,main@blue_read
   971   0011B4  C009  F1A3         	movff	?_color_read_Blue+1,main@blue_read+1
   972   0011B8                     
   973                           ;main.c: 171:         green_read = color_read_Green();
   974   0011B8  EC8F  F00D         	call	_color_read_Green	;wreg free
   975   0011BC  C008  F1A0         	movff	?_color_read_Green,main@green_read
   976   0011C0  C009  F1A1         	movff	?_color_read_Green+1,main@green_read+1
   977   0011C4                     
   978                           ;main.c: 172:         clear_read = color_read_Clear();
   979   0011C4  ECB7  F00D         	call	_color_read_Clear	;wreg free
   980   0011C8  C008  F1A4         	movff	?_color_read_Clear,main@clear_read
   981   0011CC  C009  F1A5         	movff	?_color_read_Clear+1,main@clear_read+1
   982   0011D0                     
   983                           ;main.c: 175:         sprintf(buf, "Raw %d, %d, %d, %d \n", red_read, green_read, blue_r
      +                          ead, clear_read);
   984   0011D0  0E8A               	movlw	low main@buf
   985   0011D2  0100               	movlb	0	; () banked
   986   0011D4  6FE2               	movwf	sprintf@s& (0+255),b
   987   0011D6  0E01               	movlw	high main@buf
   988   0011D8  6FE3               	movwf	(sprintf@s+1)& (0+255),b
   989   0011DA  0E01               	movlw	low STR_1
   990   0011DC  6FE4               	movwf	sprintf@fmt& (0+255),b
   991   0011DE  0E0E               	movlw	high STR_1
   992   0011E0  6FE5               	movwf	(sprintf@fmt+1)& (0+255),b
   993   0011E2  C19E  F0E6         	movff	main@red_read,?_sprintf+4
   994   0011E6  C19F  F0E7         	movff	main@red_read+1,?_sprintf+5
   995   0011EA  C1A0  F0E8         	movff	main@green_read,?_sprintf+6
   996   0011EE  C1A1  F0E9         	movff	main@green_read+1,?_sprintf+7
   997   0011F2  C1A2  F0EA         	movff	main@blue_read,?_sprintf+8
   998   0011F6  C1A3  F0EB         	movff	main@blue_read+1,?_sprintf+9
   999   0011FA  C1A4  F0EC         	movff	main@clear_read,?_sprintf+10
  1000   0011FE  C1A5  F0ED         	movff	main@clear_read+1,?_sprintf+11
  1001   001202  EC3E  F00D         	call	_sprintf	;wreg free
  1002   001206                     
  1003                           ;main.c: 176:         sendStringSerial4(buf);
  1004   001206  0E8A               	movlw	low main@buf
  1005   001208  6E05               	movwf	sendStringSerial4@string^0,c
  1006   00120A  0E01               	movlw	high main@buf
  1007   00120C  6E06               	movwf	(sendStringSerial4@string+1)^0,c
  1008   00120E  ECAB  F00E         	call	_sendStringSerial4	;wreg free
  1009   001212                     
  1010                           ;main.c: 177:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1011   001212  0E09               	movlw	9
  1012   001214  6E57               	movwf	(??_main+1)^0,c
  1013   001216  0E1E               	movlw	30
  1014   001218  6E56               	movwf	??_main^0,c
  1015   00121A  0EE4               	movlw	228
  1016   00121C                     u1527:
  1017   00121C  2EE8               	decfsz	wreg,f,c
  1018   00121E  D7FE               	bra	u1527
  1019   001220  2E56               	decfsz	??_main^0,f,c
  1020   001222  D7FC               	bra	u1527
  1021   001224  2E57               	decfsz	(??_main+1)^0,f,c
  1022   001226  D7FA               	bra	u1527
  1023   001228  D000               	nop2	
  1024   00122A  EF9F  F008         	goto	l3005
  1025   00122E  EF2E  F000         	goto	start
  1026   001232                     __end_of_main:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _sprintf *****************
  1030 ;; Defined at:
  1031 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1034 ;;		 -> main@buf(20), 
  1035 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1036 ;;		 -> STR_1(21), 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  f              11   20[BANK0 ] struct _IO_FILE
  1039 ;;  ap              2   18[BANK0 ] PTR void [1]
  1040 ;;		 -> ?_sprintf(2), 
  1041 ;;  ret             2    0        int 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  2    6[BANK0 ] int 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1051 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1052 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1054 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1055 ;;Total ram usage:       25 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 8
  1058 ;; This function calls:
  1059 ;;		_vfprintf
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text1
  1066   001A7C                     __ptext1:
  1067                           	callstack 0
  1068   001A7C                     _sprintf:
  1069                           	callstack 22
  1070   001A7C  0EE6               	movlw	low (?_sprintf+4)
  1071   001A7E  0100               	movlb	0	; () banked
  1072   001A80  6FEE               	movwf	sprintf@ap& (0+255),b
  1073   001A82  0E00               	movlw	high (?_sprintf+4)
  1074   001A84  6FEF               	movwf	(sprintf@ap+1)& (0+255),b
  1075   001A86  C0E2  F0F0         	movff	sprintf@s,sprintf@f
  1076   001A8A  C0E3  F0F1         	movff	sprintf@s+1,sprintf@f+1
  1077   001A8E                     
  1078                           ; BSR set to: 0
  1079   001A8E  0E00               	movlw	0
  1080   001A90  6FF4               	movwf	(sprintf@f+4)& (0+255),b
  1081   001A92  0E00               	movlw	0
  1082   001A94  6FF3               	movwf	(sprintf@f+3)& (0+255),b
  1083   001A96                     
  1084                           ; BSR set to: 0
  1085   001A96  0E00               	movlw	0
  1086   001A98  6FFA               	movwf	(sprintf@f+10)& (0+255),b
  1087   001A9A  0E00               	movlw	0
  1088   001A9C  6FF9               	movwf	(sprintf@f+9)& (0+255),b
  1089   001A9E                     
  1090                           ; BSR set to: 0
  1091   001A9E  0EF0               	movlw	low sprintf@f
  1092   001AA0  6FDC               	movwf	vfprintf@fp& (0+255),b
  1093   001AA2  0E00               	movlw	high sprintf@f
  1094   001AA4  6FDD               	movwf	(vfprintf@fp+1)& (0+255),b
  1095   001AA6  C0E4  F0DE         	movff	sprintf@fmt,vfprintf@fmt
  1096   001AAA  C0E5  F0DF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1097   001AAE  0EEE               	movlw	low sprintf@ap
  1098   001AB0  6FE0               	movwf	vfprintf@ap& (0+255),b
  1099   001AB2  0E00               	movlw	high sprintf@ap
  1100   001AB4  6FE1               	movwf	(vfprintf@ap+1)& (0+255),b
  1101   001AB6  EC14  F00D         	call	_vfprintf	;wreg free
  1102   001ABA  0100               	movlb	0	; () banked
  1103   001ABC  51F3               	movf	(sprintf@f+3)& (0+255),w,b
  1104   001ABE  25E2               	addwf	sprintf@s& (0+255),w,b
  1105   001AC0  6ED9               	movwf	fsr2l,c
  1106   001AC2  51F4               	movf	(sprintf@f+4)& (0+255),w,b
  1107   001AC4  21E3               	addwfc	(sprintf@s+1)& (0+255),w,b
  1108   001AC6  6EDA               	movwf	fsr2h,c
  1109   001AC8  0E00               	movlw	0
  1110   001ACA  6EDF               	movwf	indf2,c
  1111   001ACC                     
  1112                           ; BSR set to: 0
  1113   001ACC  0012               	return		;funcret
  1114   001ACE                     __end_of_sprintf:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _vfprintf *****************
  1118 ;; Defined at:
  1119 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1122 ;;		 -> sprintf@f(11), 
  1123 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1124 ;;		 -> STR_1(21), 
  1125 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1126 ;;		 -> sprintf@ap(2), 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1129 ;;		 -> STR_1(21), 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  2    0[BANK0 ] int 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1139 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1142 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1143 ;;Total ram usage:        8 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 7
  1146 ;; This function calls:
  1147 ;;		_vfpfcnvrt
  1148 ;; This function is called by:
  1149 ;;		_sprintf
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text2
  1154   001A28                     __ptext2:
  1155                           	callstack 0
  1156   001A28                     _vfprintf:
  1157                           	callstack 22
  1158   001A28                     
  1159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1160   001A28  C0DE  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1161   001A2C  C0DF  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1162                           
  1163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1164   001A30  EF28  F00D         	goto	l2923
  1165   001A34                     l2921:
  1166                           
  1167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1168   001A34  C0DC  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  1169   001A38  C0DD  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1170   001A3C  0E54               	movlw	low vfprintf@cfmt
  1171   001A3E  6E44               	movwf	vfpfcnvrt@fmt^0,c
  1172   001A40  0E00               	movlw	high vfprintf@cfmt
  1173   001A42  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1174   001A44  C0E0  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  1175   001A48  C0E1  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1176   001A4C  EC45  F00B         	call	_vfpfcnvrt	;wreg free
  1177   001A50                     l2923:
  1178                           
  1179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1180   001A50  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1181   001A54  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1182   001A58                     	if	0	;tblptru may be non-zero
  1183   001A58                     	endif
  1184   001A58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1185   001A58  0E00               	movlw	low (__mediumconst shr (0+16))
  1186   001A5A  6EF8               	movwf	tblptru,c
  1187   001A5C                     	endif
  1188   001A5C  0008               	tblrd		*
  1189   001A5E  50F5               	movf	tablat,w,c
  1190   001A60  0900               	iorlw	0
  1191   001A62  A4D8               	btfss	status,2,c
  1192   001A64  EF36  F00D         	goto	u1451
  1193   001A68  EF38  F00D         	goto	u1450
  1194   001A6C                     u1451:
  1195   001A6C  EF1A  F00D         	goto	l2921
  1196   001A70                     u1450:
  1197   001A70                     
  1198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1199   001A70  0E00               	movlw	0
  1200   001A72  0100               	movlb	0	; () banked
  1201   001A74  6FDD               	movwf	(?_vfprintf+1)& (0+255),b
  1202   001A76  0E00               	movlw	0
  1203   001A78  6FDC               	movwf	?_vfprintf& (0+255),b
  1204   001A7A                     
  1205                           ; BSR set to: 0
  1206   001A7A  0012               	return		;funcret
  1207   001A7C                     __end_of_vfprintf:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function _vfpfcnvrt *****************
  1211 ;; Defined at:
  1212 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  1215 ;;		 -> sprintf@f(11), 
  1216 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  1217 ;;		 -> vfprintf@cfmt(2), 
  1218 ;;  ap              2   69[COMRAM] PTR PTR void 
  1219 ;;		 -> sprintf@ap(2), 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  convarg         8   73[COMRAM] struct .
  1222 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1223 ;;		 -> STR_1(21), 
  1224 ;;  i               2    0        int 
  1225 ;;  done            2    0        int 
  1226 ;;  c               1    0        unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1236 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1237 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1239 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1240 ;;Total ram usage:       18 bytes
  1241 ;; Hardware stack levels used: 1
  1242 ;; Hardware stack levels required when called: 6
  1243 ;; This function calls:
  1244 ;;		_dtoa
  1245 ;;		_fputc
  1246 ;; This function is called by:
  1247 ;;		_vfprintf
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text3
  1252   00168A                     __ptext3:
  1253                           	callstack 0
  1254   00168A                     _vfpfcnvrt:
  1255                           	callstack 22
  1256   00168A                     
  1257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1258   00168A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1259   00168E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1260   001692  CFDE FFF6          	movff	postinc2,tblptrl
  1261   001696  CFDD FFF7          	movff	postdec2,tblptrh
  1262   00169A                     	if	0	;tblptru may be non-zero
  1263   00169A                     	endif
  1264   00169A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1265   00169A  0E00               	movlw	low (__mediumconst shr (0+16))
  1266   00169C  6EF8               	movwf	tblptru,c
  1267   00169E                     	endif
  1268   00169E  0008               	tblrd		*
  1269   0016A0  50F5               	movf	tablat,w,c
  1270   0016A2  0A25               	xorlw	37
  1271   0016A4  A4D8               	btfss	status,2,c
  1272   0016A6  EF57  F00B         	goto	u1091
  1273   0016AA  EF59  F00B         	goto	u1090
  1274   0016AE                     u1091:
  1275   0016AE  EFDD  F00B         	goto	l2303
  1276   0016B2                     u1090:
  1277   0016B2                     
  1278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1279   0016B2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1280   0016B6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1281   0016BA  2ADE               	incf	postinc2,f,c
  1282   0016BC  0E00               	movlw	0
  1283   0016BE  22DD               	addwfc	postdec2,f,c
  1284   0016C0                     
  1285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1286   0016C0  0E00               	movlw	0
  1287   0016C2  0100               	movlb	0	; () banked
  1288   0016C4  6FB1               	movwf	(_width+1)& (0+255),b
  1289   0016C6  0E00               	movlw	0
  1290   0016C8  6FB0               	movwf	_width& (0+255),b
  1291   0016CA  C0B0  F0BA         	movff	_width,_flags
  1292   0016CE                     
  1293                           ; BSR set to: 0
  1294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1295   0016CE  69B2               	setf	_prec& (0+255),b
  1296   0016D0  69B3               	setf	(_prec+1)& (0+255),b
  1297   0016D2                     
  1298                           ; BSR set to: 0
  1299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1300   0016D2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1301   0016D6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1302   0016DA  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1303   0016DE  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1304   0016E2                     
  1305                           ; BSR set to: 0
  1306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1307   0016E2  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1308   0016E6  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1309   0016EA                     	if	0	;tblptru may be non-zero
  1310   0016EA                     	endif
  1311   0016EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1312   0016EA  0E00               	movlw	low (__mediumconst shr (0+16))
  1313   0016EC  6EF8               	movwf	tblptru,c
  1314   0016EE                     	endif
  1315   0016EE  0008               	tblrd		*
  1316   0016F0  50F5               	movf	tablat,w,c
  1317   0016F2  0A64               	xorlw	100
  1318   0016F4  B4D8               	btfsc	status,2,c
  1319   0016F6  EF7F  F00B         	goto	u1101
  1320   0016FA  EF81  F00B         	goto	u1100
  1321   0016FE                     u1101:
  1322   0016FE  EF91  F00B         	goto	l2293
  1323   001702                     u1100:
  1324   001702                     
  1325                           ; BSR set to: 0
  1326   001702  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1327   001706  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1328   00170A                     	if	0	;tblptru may be non-zero
  1329   00170A                     	endif
  1330   00170A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1331   00170A  0E00               	movlw	low (__mediumconst shr (0+16))
  1332   00170C  6EF8               	movwf	tblptru,c
  1333   00170E                     	endif
  1334   00170E  0008               	tblrd		*
  1335   001710  50F5               	movf	tablat,w,c
  1336   001712  0A69               	xorlw	105
  1337   001714  A4D8               	btfss	status,2,c
  1338   001716  EF8F  F00B         	goto	u1111
  1339   00171A  EF91  F00B         	goto	u1110
  1340   00171E                     u1111:
  1341   00171E  EFD4  F00B         	goto	l2299
  1342   001722                     u1110:
  1343   001722                     l2293:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1347   001722  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1348   001726  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1349   00172A  CFDF F048          	movff	indf2,??_vfpfcnvrt
  1350   00172E  0E02               	movlw	2
  1351   001730  26DE               	addwf	postinc2,f,c
  1352   001732  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  1353   001736  0E00               	movlw	0
  1354   001738  22DD               	addwfc	postdec2,f,c
  1355   00173A  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1356   00173E  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1357   001742  CFDE F04A          	movff	postinc2,vfpfcnvrt@convarg
  1358   001746  CFDD F04B          	movff	postdec2,vfpfcnvrt@convarg+1
  1359   00174A  0E00               	movlw	0
  1360   00174C  BE4B               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1361   00174E  0EFF               	movlw	-1
  1362   001750  6E4C               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1363   001752  6E4D               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1364   001754  6E4E               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1365   001756  6E4F               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1366   001758  6E50               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1367   00175A  6E51               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1370   00175C  0E01               	movlw	1
  1371   00175E  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1372   001760  6E48               	movwf	??_vfpfcnvrt^0,c
  1373   001762  0E00               	movlw	0
  1374   001764  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1375   001766  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  1376   001768  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1377   00176C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1378   001770  C048  FFDE         	movff	??_vfpfcnvrt,postinc2
  1379   001774  C049  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1380   001778                     
  1381                           ; BSR set to: 0
  1382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1383   001778  C042  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  1384   00177C  C043  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1385   001780  C04A  F021         	movff	vfpfcnvrt@convarg,dtoa@d
  1386   001784  C04B  F022         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1387   001788  C04C  F023         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1388   00178C  C04D  F024         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1389   001790  C04E  F025         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1390   001794  C04F  F026         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1391   001798  C050  F027         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1392   00179C  C051  F028         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1393   0017A0  EC0C  F007         	call	_dtoa	;wreg free
  1394   0017A4  EFF3  F00B         	goto	l1196
  1395   0017A8                     l2299:
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1398   0017A8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1399   0017AC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1400   0017B0  2ADE               	incf	postinc2,f,c
  1401   0017B2  0E00               	movlw	0
  1402   0017B4  22DD               	addwfc	postdec2,f,c
  1403   0017B6  EFF3  F00B         	goto	l1196
  1404   0017BA                     l2303:
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1407   0017BA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1408   0017BE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1409   0017C2  CFDE FFF6          	movff	postinc2,tblptrl
  1410   0017C6  CFDD FFF7          	movff	postdec2,tblptrh
  1411   0017CA                     	if	0	;tblptru may be non-zero
  1412   0017CA                     	endif
  1413   0017CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1414   0017CA  0E00               	movlw	low (__mediumconst shr (0+16))
  1415   0017CC  6EF8               	movwf	tblptru,c
  1416   0017CE                     	endif
  1417   0017CE  0008               	tblrd		*
  1418   0017D0  50F5               	movf	tablat,w,c
  1419   0017D2  6E04               	movwf	fputc@c^0,c
  1420   0017D4  6A05               	clrf	(fputc@c+1)^0,c
  1421   0017D6  C042  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1422   0017DA  C043  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1423   0017DE  ECF4  F00B         	call	_fputc	;wreg free
  1424   0017E2  EFD4  F00B         	goto	l2299
  1425   0017E6                     l1196:
  1426   0017E6  0012               	return		;funcret
  1427   0017E8                     __end_of_vfpfcnvrt:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function _dtoa *****************
  1431 ;; Defined at:
  1432 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  1435 ;;		 -> sprintf@f(11), 
  1436 ;;  d               8   32[COMRAM] long long 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  n               8   54[COMRAM] long long 
  1439 ;;  i               2   62[COMRAM] int 
  1440 ;;  w               2   52[COMRAM] int 
  1441 ;;  p               2   50[COMRAM] int 
  1442 ;;  s               1   64[COMRAM] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1452 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;Total ram usage:       35 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 5
  1459 ;; This function calls:
  1460 ;;		___aodiv
  1461 ;;		___aomod
  1462 ;;		_abs
  1463 ;;		_pad
  1464 ;; This function is called by:
  1465 ;;		_vfpfcnvrt
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text4
  1470   000E18                     __ptext4:
  1471                           	callstack 0
  1472   000E18                     _dtoa:
  1473                           	callstack 22
  1474   000E18                     
  1475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1476   000E18  C021  F037         	movff	dtoa@d,dtoa@n
  1477   000E1C  C022  F038         	movff	dtoa@d+1,dtoa@n+1
  1478   000E20  C023  F039         	movff	dtoa@d+2,dtoa@n+2
  1479   000E24  C024  F03A         	movff	dtoa@d+3,dtoa@n+3
  1480   000E28  C025  F03B         	movff	dtoa@d+4,dtoa@n+4
  1481   000E2C  C026  F03C         	movff	dtoa@d+5,dtoa@n+5
  1482   000E30  C027  F03D         	movff	dtoa@d+6,dtoa@n+6
  1483   000E34  C028  F03E         	movff	dtoa@d+7,dtoa@n+7
  1484   000E38                     
  1485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1486   000E38  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  1487   000E3A  EF21  F007         	goto	u991
  1488   000E3E  EF24  F007         	goto	u990
  1489   000E42                     u991:
  1490   000E42  0E01               	movlw	1
  1491   000E44  EF25  F007         	goto	u1000
  1492   000E48                     u990:
  1493   000E48  0E00               	movlw	0
  1494   000E4A                     u1000:
  1495   000E4A  6E41               	movwf	dtoa@s^0,c
  1496   000E4C                     
  1497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1498   000E4C  5041               	movf	dtoa@s^0,w,c
  1499   000E4E  B4D8               	btfsc	status,2,c
  1500   000E50  EF2C  F007         	goto	u1011
  1501   000E54  EF2E  F007         	goto	u1010
  1502   000E58                     u1011:
  1503   000E58  EF3E  F007         	goto	l2223
  1504   000E5C                     u1010:
  1505   000E5C                     
  1506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1507   000E5C  1E3E               	comf	(dtoa@n+7)^0,f,c
  1508   000E5E  1E3D               	comf	(dtoa@n+6)^0,f,c
  1509   000E60  1E3C               	comf	(dtoa@n+5)^0,f,c
  1510   000E62  1E3B               	comf	(dtoa@n+4)^0,f,c
  1511   000E64  1E3A               	comf	(dtoa@n+3)^0,f,c
  1512   000E66  1E39               	comf	(dtoa@n+2)^0,f,c
  1513   000E68  1E38               	comf	(dtoa@n+1)^0,f,c
  1514   000E6A  6C37               	negf	dtoa@n^0,c
  1515   000E6C  0E00               	movlw	0
  1516   000E6E  2238               	addwfc	(dtoa@n+1)^0,f,c
  1517   000E70  2239               	addwfc	(dtoa@n+2)^0,f,c
  1518   000E72  223A               	addwfc	(dtoa@n+3)^0,f,c
  1519   000E74  223B               	addwfc	(dtoa@n+4)^0,f,c
  1520   000E76  223C               	addwfc	(dtoa@n+5)^0,f,c
  1521   000E78  223D               	addwfc	(dtoa@n+6)^0,f,c
  1522   000E7A  223E               	addwfc	(dtoa@n+7)^0,f,c
  1523   000E7C                     l2223:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1526   000E7C  0100               	movlb	0	; () banked
  1527   000E7E  BFB3               	btfsc	(_prec+1)& (0+255),7,b
  1528   000E80  EF4C  F007         	goto	u1020
  1529   000E84  51B3               	movf	(_prec+1)& (0+255),w,b
  1530   000E86  E106               	bnz	u1021
  1531   000E88  05B2               	decf	_prec& (0+255),w,b
  1532   000E8A  B0D8               	btfsc	status,0,c
  1533   000E8C  EF4A  F007         	goto	u1021
  1534   000E90  EF4C  F007         	goto	u1020
  1535   000E94                     u1021:
  1536   000E94  EF52  F007         	goto	l1175
  1537   000E98                     u1020:
  1538   000E98                     
  1539                           ; BSR set to: 0
  1540   000E98  0E00               	movlw	0
  1541   000E9A  6E34               	movwf	(dtoa@p+1)^0,c
  1542   000E9C  0E01               	movlw	1
  1543   000E9E  6E33               	movwf	dtoa@p^0,c
  1544   000EA0  EF56  F007         	goto	l1177
  1545   000EA4                     l1175:
  1546                           
  1547                           ; BSR set to: 0
  1548   000EA4  C0B2  F033         	movff	_prec,dtoa@p
  1549   000EA8  C0B3  F034         	movff	_prec+1,dtoa@p+1
  1550   000EAC                     l1177:
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1554   000EAC  C0B0  F035         	movff	_width,dtoa@w
  1555   000EB0  C0B1  F036         	movff	_width+1,dtoa@w+1
  1556   000EB4                     
  1557                           ; BSR set to: 0
  1558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1559   000EB4  5041               	movf	dtoa@s^0,w,c
  1560   000EB6  B4D8               	btfsc	status,2,c
  1561   000EB8  EF60  F007         	goto	u1031
  1562   000EBC  EF62  F007         	goto	u1030
  1563   000EC0                     u1031:
  1564   000EC0  EF79  F007         	goto	l1178
  1565   000EC4                     u1030:
  1566   000EC4                     
  1567                           ; BSR set to: 0
  1568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1569   000EC4  0635               	decf	dtoa@w^0,f,c
  1570   000EC6  A0D8               	btfss	status,0,c
  1571   000EC8  0636               	decf	(dtoa@w+1)^0,f,c
  1572   000ECA                     
  1573                           ; BSR set to: 0
  1574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1575   000ECA  5041               	movf	dtoa@s^0,w,c
  1576   000ECC  A4D8               	btfss	status,2,c
  1577   000ECE  EF6B  F007         	goto	u1041
  1578   000ED2  EF6D  F007         	goto	u1040
  1579   000ED6                     u1041:
  1580   000ED6  EF73  F007         	goto	l2235
  1581   000EDA                     u1040:
  1582   000EDA                     
  1583                           ; BSR set to: 0
  1584   000EDA  0E00               	movlw	0
  1585   000EDC  6E32               	movwf	(_dtoa$2363+1)^0,c
  1586   000EDE  0E2B               	movlw	43
  1587   000EE0  6E31               	movwf	_dtoa$2363^0,c
  1588   000EE2  EF77  F007         	goto	l2237
  1589   000EE6                     l2235:
  1590                           
  1591                           ; BSR set to: 0
  1592   000EE6  0E00               	movlw	0
  1593   000EE8  6E32               	movwf	(_dtoa$2363+1)^0,c
  1594   000EEA  0E2D               	movlw	45
  1595   000EEC  6E31               	movwf	_dtoa$2363^0,c
  1596   000EEE                     l2237:
  1597                           
  1598                           ; BSR set to: 0
  1599   000EEE  C031  F041         	movff	_dtoa$2363,dtoa@s
  1600   000EF2                     l1178:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1604   000EF2  0E00               	movlw	0
  1605   000EF4  6E40               	movwf	(dtoa@i+1)^0,c
  1606   000EF6  0E1F               	movlw	31
  1607   000EF8  6E3F               	movwf	dtoa@i^0,c
  1608   000EFA                     
  1609                           ; BSR set to: 0
  1610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1611   000EFA  0E00               	movlw	0
  1612   000EFC  6FDB               	movwf	(_dbuf+31)& (0+255),b
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1615   000EFE  EFFD  F007         	goto	l2251
  1616   000F02                     l2241:
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1619   000F02  063F               	decf	dtoa@i^0,f,c
  1620   000F04  A0D8               	btfss	status,0,c
  1621   000F06  0640               	decf	(dtoa@i+1)^0,f,c
  1622   000F08                     
  1623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1624   000F08  0EBC               	movlw	low _dbuf
  1625   000F0A  243F               	addwf	dtoa@i^0,w,c
  1626   000F0C  6ED9               	movwf	fsr2l,c
  1627   000F0E  0E00               	movlw	high _dbuf
  1628   000F10  2040               	addwfc	(dtoa@i+1)^0,w,c
  1629   000F12  6EDA               	movwf	fsr2h,c
  1630   000F14  C037  F004         	movff	dtoa@n,___aomod@dividend
  1631   000F18  C038  F005         	movff	dtoa@n+1,___aomod@dividend+1
  1632   000F1C  C039  F006         	movff	dtoa@n+2,___aomod@dividend+2
  1633   000F20  C03A  F007         	movff	dtoa@n+3,___aomod@dividend+3
  1634   000F24  C03B  F008         	movff	dtoa@n+4,___aomod@dividend+4
  1635   000F28  C03C  F009         	movff	dtoa@n+5,___aomod@dividend+5
  1636   000F2C  C03D  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  1637   000F30  C03E  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  1638   000F34  0E0A               	movlw	10
  1639   000F36  6E0C               	movwf	___aomod@divisor^0,c
  1640   000F38  0E00               	movlw	0
  1641   000F3A  6E0D               	movwf	(___aomod@divisor+1)^0,c
  1642   000F3C  0E00               	movlw	0
  1643   000F3E  6E0E               	movwf	(___aomod@divisor+2)^0,c
  1644   000F40  0E00               	movlw	0
  1645   000F42  6E0F               	movwf	(___aomod@divisor+3)^0,c
  1646   000F44  0E00               	movlw	0
  1647   000F46  6E10               	movwf	(___aomod@divisor+4)^0,c
  1648   000F48  0E00               	movlw	0
  1649   000F4A  6E11               	movwf	(___aomod@divisor+5)^0,c
  1650   000F4C  0E00               	movlw	0
  1651   000F4E  6E12               	movwf	(___aomod@divisor+6)^0,c
  1652   000F50  0E00               	movlw	0
  1653   000F52  6E13               	movwf	(___aomod@divisor+7)^0,c
  1654   000F54  EC93  F00A         	call	___aomod	;wreg free
  1655   000F58  C004  F029         	movff	?___aomod,??_dtoa
  1656   000F5C  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  1657   000F60  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  1658   000F64  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  1659   000F68  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  1660   000F6C  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  1661   000F70  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  1662   000F74  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  1663   000F78  C029  F016         	movff	??_dtoa,abs@a
  1664   000F7C  C02A  F017         	movff	??_dtoa+1,abs@a+1
  1665   000F80  EC71  F00E         	call	_abs	;wreg free
  1666   000F84  5016               	movf	?_abs^0,w,c
  1667   000F86  0F30               	addlw	48
  1668   000F88  6EDF               	movwf	indf2,c
  1669   000F8A                     
  1670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1671   000F8A  0633               	decf	dtoa@p^0,f,c
  1672   000F8C  A0D8               	btfss	status,0,c
  1673   000F8E  0634               	decf	(dtoa@p+1)^0,f,c
  1674   000F90                     
  1675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1676   000F90  0635               	decf	dtoa@w^0,f,c
  1677   000F92  A0D8               	btfss	status,0,c
  1678   000F94  0636               	decf	(dtoa@w+1)^0,f,c
  1679   000F96                     
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1681   000F96  C037  F004         	movff	dtoa@n,___aodiv@dividend
  1682   000F9A  C038  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  1683   000F9E  C039  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  1684   000FA2  C03A  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  1685   000FA6  C03B  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  1686   000FAA  C03C  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  1687   000FAE  C03D  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  1688   000FB2  C03E  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  1689   000FB6  0E0A               	movlw	10
  1690   000FB8  6E0C               	movwf	___aodiv@divisor^0,c
  1691   000FBA  0E00               	movlw	0
  1692   000FBC  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  1693   000FBE  0E00               	movlw	0
  1694   000FC0  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  1695   000FC2  0E00               	movlw	0
  1696   000FC4  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  1697   000FC6  0E00               	movlw	0
  1698   000FC8  6E10               	movwf	(___aodiv@divisor+4)^0,c
  1699   000FCA  0E00               	movlw	0
  1700   000FCC  6E11               	movwf	(___aodiv@divisor+5)^0,c
  1701   000FCE  0E00               	movlw	0
  1702   000FD0  6E12               	movwf	(___aodiv@divisor+6)^0,c
  1703   000FD2  0E00               	movlw	0
  1704   000FD4  6E13               	movwf	(___aodiv@divisor+7)^0,c
  1705   000FD6  EC19  F009         	call	___aodiv	;wreg free
  1706   000FDA  C004  F037         	movff	?___aodiv,dtoa@n
  1707   000FDE  C005  F038         	movff	?___aodiv+1,dtoa@n+1
  1708   000FE2  C006  F039         	movff	?___aodiv+2,dtoa@n+2
  1709   000FE6  C007  F03A         	movff	?___aodiv+3,dtoa@n+3
  1710   000FEA  C008  F03B         	movff	?___aodiv+4,dtoa@n+4
  1711   000FEE  C009  F03C         	movff	?___aodiv+5,dtoa@n+5
  1712   000FF2  C00A  F03D         	movff	?___aodiv+6,dtoa@n+6
  1713   000FF6  C00B  F03E         	movff	?___aodiv+7,dtoa@n+7
  1714   000FFA                     l2251:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1717   000FFA  BE40               	btfsc	(dtoa@i+1)^0,7,c
  1718   000FFC  EF08  F008         	goto	u1051
  1719   001000  5040               	movf	(dtoa@i+1)^0,w,c
  1720   001002  E108               	bnz	u1050
  1721   001004  043F               	decf	dtoa@i^0,w,c
  1722   001006  A0D8               	btfss	status,0,c
  1723   001008  EF08  F008         	goto	u1051
  1724   00100C  EF0A  F008         	goto	u1050
  1725   001010                     u1051:
  1726   001010  EF26  F008         	goto	l2257
  1727   001014                     u1050:
  1728   001014  5037               	movf	dtoa@n^0,w,c
  1729   001016  1038               	iorwf	(dtoa@n+1)^0,w,c
  1730   001018  1039               	iorwf	(dtoa@n+2)^0,w,c
  1731   00101A  103A               	iorwf	(dtoa@n+3)^0,w,c
  1732   00101C  103B               	iorwf	(dtoa@n+4)^0,w,c
  1733   00101E  103C               	iorwf	(dtoa@n+5)^0,w,c
  1734   001020  103D               	iorwf	(dtoa@n+6)^0,w,c
  1735   001022  103E               	iorwf	(dtoa@n+7)^0,w,c
  1736   001024  A4D8               	btfss	status,2,c
  1737   001026  EF17  F008         	goto	u1061
  1738   00102A  EF19  F008         	goto	u1060
  1739   00102E                     u1061:
  1740   00102E  EF81  F007         	goto	l2241
  1741   001032                     u1060:
  1742   001032  BE34               	btfsc	(dtoa@p+1)^0,7,c
  1743   001034  EF26  F008         	goto	u1070
  1744   001038  5034               	movf	(dtoa@p+1)^0,w,c
  1745   00103A  E106               	bnz	u1071
  1746   00103C  0433               	decf	dtoa@p^0,w,c
  1747   00103E  B0D8               	btfsc	status,0,c
  1748   001040  EF24  F008         	goto	u1071
  1749   001044  EF26  F008         	goto	u1070
  1750   001048                     u1071:
  1751   001048  EF81  F007         	goto	l2241
  1752   00104C                     u1070:
  1753   00104C                     l2257:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1756   00104C  5041               	movf	dtoa@s^0,w,c
  1757   00104E  B4D8               	btfsc	status,2,c
  1758   001050  EF2C  F008         	goto	u1081
  1759   001054  EF2E  F008         	goto	u1080
  1760   001058                     u1081:
  1761   001058  EF39  F008         	goto	l2263
  1762   00105C                     u1080:
  1763   00105C                     
  1764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1765   00105C  063F               	decf	dtoa@i^0,f,c
  1766   00105E  A0D8               	btfss	status,0,c
  1767   001060  0640               	decf	(dtoa@i+1)^0,f,c
  1768   001062                     
  1769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1770   001062  0EBC               	movlw	low _dbuf
  1771   001064  243F               	addwf	dtoa@i^0,w,c
  1772   001066  6ED9               	movwf	fsr2l,c
  1773   001068  0E00               	movlw	high _dbuf
  1774   00106A  2040               	addwfc	(dtoa@i+1)^0,w,c
  1775   00106C  6EDA               	movwf	fsr2h,c
  1776   00106E  C041  FFDF         	movff	dtoa@s,indf2
  1777   001072                     l2263:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1780   001072  C01F  F014         	movff	dtoa@fp,pad@fp
  1781   001076  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  1782   00107A  0EBC               	movlw	low _dbuf
  1783   00107C  243F               	addwf	dtoa@i^0,w,c
  1784   00107E  6E16               	movwf	pad@buf^0,c
  1785   001080  0E00               	movlw	high _dbuf
  1786   001082  2040               	addwfc	(dtoa@i+1)^0,w,c
  1787   001084  6E17               	movwf	(pad@buf+1)^0,c
  1788   001086  C035  F018         	movff	dtoa@w,pad@p
  1789   00108A  C036  F019         	movff	dtoa@w+1,pad@p+1
  1790   00108E  EC9D  F00C         	call	_pad	;wreg free
  1791   001092  0012               	return		;funcret
  1792   001094                     __end_of_dtoa:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function _pad *****************
  1796 ;; Defined at:
  1797 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  1800 ;;		 -> sprintf@f(11), 
  1801 ;;  buf             2   21[COMRAM] PTR unsigned char 
  1802 ;;		 -> dbuf(32), 
  1803 ;;  p               2   23[COMRAM] int 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  w               2   28[COMRAM] int 
  1806 ;;  i               2   26[COMRAM] int 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1816 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1817 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1819 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1820 ;;Total ram usage:       11 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 4
  1823 ;; This function calls:
  1824 ;;		_fputc
  1825 ;;		_fputs
  1826 ;; This function is called by:
  1827 ;;		_dtoa
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text5
  1832   00193A                     __ptext5:
  1833                           	callstack 0
  1834   00193A                     _pad:
  1835                           	callstack 22
  1836   00193A                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1838   00193A  BE19               	btfsc	(pad@p+1)^0,7,c
  1839   00193C  EFA2  F00C         	goto	u951
  1840   001940  EFA4  F00C         	goto	u950
  1841   001944                     u951:
  1842   001944  EFAA  F00C         	goto	l2201
  1843   001948                     u950:
  1844   001948  C018  F01D         	movff	pad@p,pad@w
  1845   00194C  C019  F01E         	movff	pad@p+1,pad@w+1
  1846   001950  EFAE  F00C         	goto	l1166
  1847   001954                     l2201:
  1848   001954  0E00               	movlw	0
  1849   001956  6E1E               	movwf	(pad@w+1)^0,c
  1850   001958  0E00               	movlw	0
  1851   00195A  6E1D               	movwf	pad@w^0,c
  1852   00195C                     l1166:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1855   00195C  0E00               	movlw	0
  1856   00195E  6E1C               	movwf	(pad@i+1)^0,c
  1857   001960  0E00               	movlw	0
  1858   001962  6E1B               	movwf	pad@i^0,c
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1861   001964  EFC0  F00C         	goto	l2207
  1862   001968                     l2203:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1865   001968  0E00               	movlw	0
  1866   00196A  6E05               	movwf	(fputc@c+1)^0,c
  1867   00196C  0E20               	movlw	32
  1868   00196E  6E04               	movwf	fputc@c^0,c
  1869   001970  C014  F006         	movff	pad@fp,fputc@fp
  1870   001974  C015  F007         	movff	pad@fp+1,fputc@fp+1
  1871   001978  ECF4  F00B         	call	_fputc	;wreg free
  1872   00197C                     
  1873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1874   00197C  4A1B               	infsnz	pad@i^0,f,c
  1875   00197E  2A1C               	incf	(pad@i+1)^0,f,c
  1876   001980                     l2207:
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1879   001980  501D               	movf	pad@w^0,w,c
  1880   001982  5C1B               	subwf	pad@i^0,w,c
  1881   001984  501C               	movf	(pad@i+1)^0,w,c
  1882   001986  0A80               	xorlw	128
  1883   001988  6E1A               	movwf	??_pad^0,c
  1884   00198A  501E               	movf	(pad@w+1)^0,w,c
  1885   00198C  0A80               	xorlw	128
  1886   00198E  581A               	subwfb	??_pad^0,w,c
  1887   001990  A0D8               	btfss	status,0,c
  1888   001992  EFCD  F00C         	goto	u961
  1889   001996  EFCF  F00C         	goto	u960
  1890   00199A                     u961:
  1891   00199A  EFB4  F00C         	goto	l2203
  1892   00199E                     u960:
  1893   00199E                     
  1894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1895   00199E  C016  F00D         	movff	pad@buf,fputs@s
  1896   0019A2  C017  F00E         	movff	pad@buf+1,fputs@s+1
  1897   0019A6  C014  F00F         	movff	pad@fp,fputs@fp
  1898   0019AA  C015  F010         	movff	pad@fp+1,fputs@fp+1
  1899   0019AE  EC2E  F00E         	call	_fputs	;wreg free
  1900   0019B2  0012               	return		;funcret
  1901   0019B4                     __end_of_pad:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _fputs *****************
  1905 ;; Defined at:
  1906 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  s               2   12[COMRAM] PTR const unsigned char 
  1909 ;;		 -> dbuf(32), 
  1910 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  1911 ;;		 -> sprintf@f(11), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  i               2   17[COMRAM] int 
  1914 ;;  c               1   16[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2   12[COMRAM] int 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;Total ram usage:        7 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 3
  1931 ;; This function calls:
  1932 ;;		_fputc
  1933 ;; This function is called by:
  1934 ;;		_pad
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text6
  1939   001C5C                     __ptext6:
  1940                           	callstack 0
  1941   001C5C                     _fputs:
  1942                           	callstack 22
  1943   001C5C  0E00               	movlw	0
  1944   001C5E  6E13               	movwf	(fputs@i+1)^0,c
  1945   001C60  0E00               	movlw	0
  1946   001C62  6E12               	movwf	fputs@i^0,c
  1947   001C64  EF3F  F00E         	goto	l2111
  1948   001C68                     l2107:
  1949   001C68  C011  F004         	movff	fputs@c,fputc@c
  1950   001C6C  6A05               	clrf	(fputc@c+1)^0,c
  1951   001C6E  C00F  F006         	movff	fputs@fp,fputc@fp
  1952   001C72  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  1953   001C76  ECF4  F00B         	call	_fputc	;wreg free
  1954   001C7A  4A12               	infsnz	fputs@i^0,f,c
  1955   001C7C  2A13               	incf	(fputs@i+1)^0,f,c
  1956   001C7E                     l2111:
  1957   001C7E  5012               	movf	fputs@i^0,w,c
  1958   001C80  240D               	addwf	fputs@s^0,w,c
  1959   001C82  6ED9               	movwf	fsr2l,c
  1960   001C84  5013               	movf	(fputs@i+1)^0,w,c
  1961   001C86  200E               	addwfc	(fputs@s+1)^0,w,c
  1962   001C88  6EDA               	movwf	fsr2h,c
  1963   001C8A  50DF               	movf	indf2,w,c
  1964   001C8C  6E11               	movwf	fputs@c^0,c
  1965   001C8E  5011               	movf	fputs@c^0,w,c
  1966   001C90  A4D8               	btfss	status,2,c
  1967   001C92  EF4D  F00E         	goto	u801
  1968   001C96  EF4F  F00E         	goto	u800
  1969   001C9A                     u801:
  1970   001C9A  EF34  F00E         	goto	l2107
  1971   001C9E                     u800:
  1972   001C9E  0012               	return		;funcret
  1973   001CA0                     __end_of_fputs:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function _fputc *****************
  1977 ;; Defined at:
  1978 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  c               2    3[COMRAM] int 
  1981 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  1982 ;;		 -> sprintf@f(11), 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  2    3[COMRAM] int 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;Total ram usage:        9 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 2
  2001 ;; This function calls:
  2002 ;;		_putch
  2003 ;; This function is called by:
  2004 ;;		_pad
  2005 ;;		_vfpfcnvrt
  2006 ;;		_fputs
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text7
  2011   0017E8                     __ptext7:
  2012                           	callstack 0
  2013   0017E8                     _fputc:
  2014                           	callstack 25
  2015   0017E8  5006               	movf	fputc@fp^0,w,c
  2016   0017EA  1007               	iorwf	(fputc@fp+1)^0,w,c
  2017   0017EC  B4D8               	btfsc	status,2,c
  2018   0017EE  EFFB  F00B         	goto	u761
  2019   0017F2  EFFD  F00B         	goto	u760
  2020   0017F6                     u761:
  2021   0017F6  EF06  F00C         	goto	l2095
  2022   0017FA                     u760:
  2023   0017FA  5006               	movf	fputc@fp^0,w,c
  2024   0017FC  1007               	iorwf	(fputc@fp+1)^0,w,c
  2025   0017FE  A4D8               	btfss	status,2,c
  2026   001800  EF04  F00C         	goto	u771
  2027   001804  EF06  F00C         	goto	u770
  2028   001808                     u771:
  2029   001808  EF0B  F00C         	goto	l2097
  2030   00180C                     u770:
  2031   00180C                     l2095:
  2032   00180C  5004               	movf	fputc@c^0,w,c
  2033   00180E  EC6F  F00F         	call	_putch
  2034   001812  EF58  F00C         	goto	l1214
  2035   001816                     l2097:
  2036   001816  EE20 F009          	lfsr	2,9
  2037   00181A  5006               	movf	fputc@fp^0,w,c
  2038   00181C  26D9               	addwf	fsr2l,f,c
  2039   00181E  5007               	movf	(fputc@fp+1)^0,w,c
  2040   001820  22DA               	addwfc	fsr2h,f,c
  2041   001822  50DE               	movf	postinc2,w,c
  2042   001824  10DE               	iorwf	postinc2,w,c
  2043   001826  B4D8               	btfsc	status,2,c
  2044   001828  EF18  F00C         	goto	u781
  2045   00182C  EF1A  F00C         	goto	u780
  2046   001830                     u781:
  2047   001830  EF35  F00C         	goto	l2101
  2048   001834                     u780:
  2049   001834  EE20 F009          	lfsr	2,9
  2050   001838  5006               	movf	fputc@fp^0,w,c
  2051   00183A  26D9               	addwf	fsr2l,f,c
  2052   00183C  5007               	movf	(fputc@fp+1)^0,w,c
  2053   00183E  22DA               	addwfc	fsr2h,f,c
  2054   001840  EE10 F003          	lfsr	1,3
  2055   001844  5006               	movf	fputc@fp^0,w,c
  2056   001846  26E1               	addwf	fsr1l,f,c
  2057   001848  5007               	movf	(fputc@fp+1)^0,w,c
  2058   00184A  22E2               	addwfc	fsr1h,f,c
  2059   00184C  50DE               	movf	postinc2,w,c
  2060   00184E  5CE6               	subwf	postinc1,w,c
  2061   001850  50E6               	movf	postinc1,w,c
  2062   001852  0A80               	xorlw	128
  2063   001854  6E0C               	movwf	(??_fputc+4)^0,c
  2064   001856  50DE               	movf	postinc2,w,c
  2065   001858  0A80               	xorlw	128
  2066   00185A  580C               	subwfb	(??_fputc+4)^0,w,c
  2067   00185C  B0D8               	btfsc	status,0,c
  2068   00185E  EF33  F00C         	goto	u791
  2069   001862  EF35  F00C         	goto	u790
  2070   001866                     u791:
  2071   001866  EF58  F00C         	goto	l1214
  2072   00186A                     u790:
  2073   00186A                     l2101:
  2074   00186A  EE20 F003          	lfsr	2,3
  2075   00186E  5006               	movf	fputc@fp^0,w,c
  2076   001870  26D9               	addwf	fsr2l,f,c
  2077   001872  5007               	movf	(fputc@fp+1)^0,w,c
  2078   001874  22DA               	addwfc	fsr2h,f,c
  2079   001876  CFDE F008          	movff	postinc2,??_fputc
  2080   00187A  CFDD F009          	movff	postdec2,??_fputc+1
  2081   00187E  C006  FFD9         	movff	fputc@fp,fsr2l
  2082   001882  C007  FFDA         	movff	fputc@fp+1,fsr2h
  2083   001886  CFDE F00A          	movff	postinc2,??_fputc+2
  2084   00188A  CFDD F00B          	movff	postdec2,??_fputc+3
  2085   00188E  5008               	movf	??_fputc^0,w,c
  2086   001890  240A               	addwf	(??_fputc+2)^0,w,c
  2087   001892  6ED9               	movwf	fsr2l,c
  2088   001894  5009               	movf	(??_fputc+1)^0,w,c
  2089   001896  200B               	addwfc	(??_fputc+3)^0,w,c
  2090   001898  6EDA               	movwf	fsr2h,c
  2091   00189A  C004  FFDF         	movff	fputc@c,indf2
  2092   00189E  EE20 F003          	lfsr	2,3
  2093   0018A2  5006               	movf	fputc@fp^0,w,c
  2094   0018A4  26D9               	addwf	fsr2l,f,c
  2095   0018A6  5007               	movf	(fputc@fp+1)^0,w,c
  2096   0018A8  22DA               	addwfc	fsr2h,f,c
  2097   0018AA  2ADE               	incf	postinc2,f,c
  2098   0018AC  0E00               	movlw	0
  2099   0018AE  22DD               	addwfc	postdec2,f,c
  2100   0018B0                     l1214:
  2101   0018B0  0012               	return		;funcret
  2102   0018B2                     __end_of_fputc:
  2103                           	callstack 0
  2104                           
  2105 ;; *************** function _putch *****************
  2106 ;; Defined at:
  2107 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  c               1    wreg     unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  c               1    0[COMRAM] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;Total ram usage:        0 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_fputc
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text8
  2136   001EDE                     __ptext8:
  2137                           	callstack 0
  2138   001EDE                     _putch:
  2139                           	callstack 25
  2140   001EDE  0012               	return		;funcret
  2141   001EE0                     __end_of_putch:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _abs *****************
  2145 ;; Defined at:
  2146 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  a               2   21[COMRAM] int 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  2   21[COMRAM] int 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2164 ;;Total ram usage:        4 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_dtoa
  2171 ;;		_normalise_readings
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text9
  2176   001CE2                     __ptext9:
  2177                           	callstack 0
  2178   001CE2                     _abs:
  2179                           	callstack 25
  2180   001CE2  BE17               	btfsc	(abs@a+1)^0,7,c
  2181   001CE4  EF7E  F00E         	goto	u810
  2182   001CE8  5017               	movf	(abs@a+1)^0,w,c
  2183   001CEA  E106               	bnz	u811
  2184   001CEC  0416               	decf	abs@a^0,w,c
  2185   001CEE  B0D8               	btfsc	status,0,c
  2186   001CF0  EF7C  F00E         	goto	u811
  2187   001CF4  EF7E  F00E         	goto	u810
  2188   001CF8                     u811:
  2189   001CF8  EF8C  F00E         	goto	l1134
  2190   001CFC                     u810:
  2191   001CFC  C016  F018         	movff	abs@a,??_abs
  2192   001D00  C017  F019         	movff	abs@a+1,??_abs+1
  2193   001D04  1E18               	comf	??_abs^0,f,c
  2194   001D06  1E19               	comf	(??_abs+1)^0,f,c
  2195   001D08  4A18               	infsnz	??_abs^0,f,c
  2196   001D0A  2A19               	incf	(??_abs+1)^0,f,c
  2197   001D0C  C018  F016         	movff	??_abs,?_abs
  2198   001D10  C019  F017         	movff	??_abs+1,?_abs+1
  2199   001D14  EF90  F00E         	goto	l1137
  2200   001D18                     l1134:
  2201   001D18  C016  F016         	movff	abs@a,?_abs
  2202   001D1C  C017  F017         	movff	abs@a+1,?_abs+1
  2203   001D20                     l1137:
  2204   001D20  0012               	return		;funcret
  2205   001D22                     __end_of_abs:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function ___aomod *****************
  2209 ;; Defined at:
  2210 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  dividend        8    3[COMRAM] long long 
  2213 ;;  divisor         8   11[COMRAM] long long 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  sign            1   20[COMRAM] unsigned char 
  2216 ;;  counter         1   19[COMRAM] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  8    3[COMRAM] long long 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2226 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2229 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;Total ram usage:       18 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_dtoa
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text10
  2241   001526                     __ptext10:
  2242                           	callstack 0
  2243   001526                     ___aomod:
  2244                           	callstack 25
  2245   001526  0E00               	movlw	0
  2246   001528  6E15               	movwf	___aomod@sign^0,c
  2247   00152A  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  2248   00152C  EF9C  F00A         	goto	u890
  2249   001530  EF9A  F00A         	goto	u891
  2250   001534                     u891:
  2251   001534  EFAE  F00A         	goto	l2169
  2252   001538                     u890:
  2253   001538  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  2254   00153A  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  2255   00153C  1E09               	comf	(___aomod@dividend+5)^0,f,c
  2256   00153E  1E08               	comf	(___aomod@dividend+4)^0,f,c
  2257   001540  1E07               	comf	(___aomod@dividend+3)^0,f,c
  2258   001542  1E06               	comf	(___aomod@dividend+2)^0,f,c
  2259   001544  1E05               	comf	(___aomod@dividend+1)^0,f,c
  2260   001546  6C04               	negf	___aomod@dividend^0,c
  2261   001548  0E00               	movlw	0
  2262   00154A  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  2263   00154C  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  2264   00154E  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  2265   001550  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  2266   001552  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  2267   001554  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  2268   001556  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  2269   001558  0E01               	movlw	1
  2270   00155A  6E15               	movwf	___aomod@sign^0,c
  2271   00155C                     l2169:
  2272   00155C  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  2273   00155E  EFB5  F00A         	goto	u900
  2274   001562  EFB3  F00A         	goto	u901
  2275   001566                     u901:
  2276   001566  EFC5  F00A         	goto	l2173
  2277   00156A                     u900:
  2278   00156A  1E13               	comf	(___aomod@divisor+7)^0,f,c
  2279   00156C  1E12               	comf	(___aomod@divisor+6)^0,f,c
  2280   00156E  1E11               	comf	(___aomod@divisor+5)^0,f,c
  2281   001570  1E10               	comf	(___aomod@divisor+4)^0,f,c
  2282   001572  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  2283   001574  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  2284   001576  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  2285   001578  6C0C               	negf	___aomod@divisor^0,c
  2286   00157A  0E00               	movlw	0
  2287   00157C  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  2288   00157E  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  2289   001580  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  2290   001582  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  2291   001584  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  2292   001586  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  2293   001588  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  2294   00158A                     l2173:
  2295   00158A  500C               	movf	___aomod@divisor^0,w,c
  2296   00158C  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  2297   00158E  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  2298   001590  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  2299   001592  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  2300   001594  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  2301   001596  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  2302   001598  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  2303   00159A  B4D8               	btfsc	status,2,c
  2304   00159C  EFD2  F00A         	goto	u911
  2305   0015A0  EFD4  F00A         	goto	u910
  2306   0015A4                     u911:
  2307   0015A4  EF1C  F00B         	goto	l2189
  2308   0015A8                     u910:
  2309   0015A8  0E01               	movlw	1
  2310   0015AA  6E14               	movwf	___aomod@counter^0,c
  2311   0015AC  EFE2  F00A         	goto	l2179
  2312   0015B0                     l2177:
  2313   0015B0  90D8               	bcf	status,0,c
  2314   0015B2  360C               	rlcf	___aomod@divisor^0,f,c
  2315   0015B4  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  2316   0015B6  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  2317   0015B8  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  2318   0015BA  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  2319   0015BC  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  2320   0015BE  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  2321   0015C0  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  2322   0015C2  2A14               	incf	___aomod@counter^0,f,c
  2323   0015C4                     l2179:
  2324   0015C4  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  2325   0015C6  EFE7  F00A         	goto	u921
  2326   0015CA  EFE9  F00A         	goto	u920
  2327   0015CE                     u921:
  2328   0015CE  EFD8  F00A         	goto	l2177
  2329   0015D2                     u920:
  2330   0015D2                     l2181:
  2331   0015D2  500C               	movf	___aomod@divisor^0,w,c
  2332   0015D4  5C04               	subwf	___aomod@dividend^0,w,c
  2333   0015D6  500D               	movf	(___aomod@divisor+1)^0,w,c
  2334   0015D8  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  2335   0015DA  500E               	movf	(___aomod@divisor+2)^0,w,c
  2336   0015DC  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  2337   0015DE  500F               	movf	(___aomod@divisor+3)^0,w,c
  2338   0015E0  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  2339   0015E2  5010               	movf	(___aomod@divisor+4)^0,w,c
  2340   0015E4  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  2341   0015E6  5011               	movf	(___aomod@divisor+5)^0,w,c
  2342   0015E8  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  2343   0015EA  5012               	movf	(___aomod@divisor+6)^0,w,c
  2344   0015EC  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  2345   0015EE  5013               	movf	(___aomod@divisor+7)^0,w,c
  2346   0015F0  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  2347   0015F2  A0D8               	btfss	status,0,c
  2348   0015F4  EFFE  F00A         	goto	u931
  2349   0015F8  EF00  F00B         	goto	u930
  2350   0015FC                     u931:
  2351   0015FC  EF10  F00B         	goto	l2185
  2352   001600                     u930:
  2353   001600  500C               	movf	___aomod@divisor^0,w,c
  2354   001602  5E04               	subwf	___aomod@dividend^0,f,c
  2355   001604  500D               	movf	(___aomod@divisor+1)^0,w,c
  2356   001606  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  2357   001608  500E               	movf	(___aomod@divisor+2)^0,w,c
  2358   00160A  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  2359   00160C  500F               	movf	(___aomod@divisor+3)^0,w,c
  2360   00160E  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  2361   001610  5010               	movf	(___aomod@divisor+4)^0,w,c
  2362   001612  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  2363   001614  5011               	movf	(___aomod@divisor+5)^0,w,c
  2364   001616  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  2365   001618  5012               	movf	(___aomod@divisor+6)^0,w,c
  2366   00161A  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  2367   00161C  5013               	movf	(___aomod@divisor+7)^0,w,c
  2368   00161E  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  2369   001620                     l2185:
  2370   001620  90D8               	bcf	status,0,c
  2371   001622  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  2372   001624  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  2373   001626  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  2374   001628  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  2375   00162A  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  2376   00162C  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  2377   00162E  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  2378   001630  320C               	rrcf	___aomod@divisor^0,f,c
  2379   001632  2E14               	decfsz	___aomod@counter^0,f,c
  2380   001634  EFE9  F00A         	goto	l2181
  2381   001638                     l2189:
  2382   001638  5015               	movf	___aomod@sign^0,w,c
  2383   00163A  B4D8               	btfsc	status,2,c
  2384   00163C  EF22  F00B         	goto	u941
  2385   001640  EF24  F00B         	goto	u940
  2386   001644                     u941:
  2387   001644  EF34  F00B         	goto	l2193
  2388   001648                     u940:
  2389   001648  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  2390   00164A  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  2391   00164C  1E09               	comf	(___aomod@dividend+5)^0,f,c
  2392   00164E  1E08               	comf	(___aomod@dividend+4)^0,f,c
  2393   001650  1E07               	comf	(___aomod@dividend+3)^0,f,c
  2394   001652  1E06               	comf	(___aomod@dividend+2)^0,f,c
  2395   001654  1E05               	comf	(___aomod@dividend+1)^0,f,c
  2396   001656  6C04               	negf	___aomod@dividend^0,c
  2397   001658  0E00               	movlw	0
  2398   00165A  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  2399   00165C  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  2400   00165E  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  2401   001660  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  2402   001662  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  2403   001664  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  2404   001666  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  2405   001668                     l2193:
  2406   001668  C004  F004         	movff	___aomod@dividend,?___aomod
  2407   00166C  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  2408   001670  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  2409   001674  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  2410   001678  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  2411   00167C  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  2412   001680  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  2413   001684  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  2414   001688  0012               	return		;funcret
  2415   00168A                     __end_of___aomod:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function ___aodiv *****************
  2419 ;; Defined at:
  2420 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  dividend        8    3[COMRAM] long long 
  2423 ;;  divisor         8   11[COMRAM] long long 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  quotient        8   21[COMRAM] long long 
  2426 ;;  sign            1   20[COMRAM] unsigned char 
  2427 ;;  counter         1   19[COMRAM] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  8    3[COMRAM] long long 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2437 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2440 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;Total ram usage:       26 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 1
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_dtoa
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text11
  2452   001232                     __ptext11:
  2453                           	callstack 0
  2454   001232                     ___aodiv:
  2455                           	callstack 25
  2456   001232  0E00               	movlw	0
  2457   001234  6E15               	movwf	___aodiv@sign^0,c
  2458   001236  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  2459   001238  EF22  F009         	goto	u820
  2460   00123C  EF20  F009         	goto	u821
  2461   001240                     u821:
  2462   001240  EF34  F009         	goto	l2125
  2463   001244                     u820:
  2464   001244  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  2465   001246  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  2466   001248  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  2467   00124A  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  2468   00124C  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  2469   00124E  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  2470   001250  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  2471   001252  6C0C               	negf	___aodiv@divisor^0,c
  2472   001254  0E00               	movlw	0
  2473   001256  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  2474   001258  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  2475   00125A  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  2476   00125C  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  2477   00125E  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  2478   001260  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  2479   001262  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  2480   001264  0E01               	movlw	1
  2481   001266  6E15               	movwf	___aodiv@sign^0,c
  2482   001268                     l2125:
  2483   001268  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  2484   00126A  EF3B  F009         	goto	u830
  2485   00126E  EF39  F009         	goto	u831
  2486   001272                     u831:
  2487   001272  EF4D  F009         	goto	l2131
  2488   001276                     u830:
  2489   001276  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  2490   001278  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  2491   00127A  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  2492   00127C  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  2493   00127E  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  2494   001280  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  2495   001282  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  2496   001284  6C04               	negf	___aodiv@dividend^0,c
  2497   001286  0E00               	movlw	0
  2498   001288  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  2499   00128A  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  2500   00128C  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  2501   00128E  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  2502   001290  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  2503   001292  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  2504   001294  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  2505   001296  0E01               	movlw	1
  2506   001298  1A15               	xorwf	___aodiv@sign^0,f,c
  2507   00129A                     l2131:
  2508   00129A  EE20  F016         	lfsr	2,___aodiv@quotient
  2509   00129E  0E07               	movlw	7
  2510   0012A0                     u841:
  2511   0012A0  6ADE               	clrf	postinc2,c
  2512   0012A2  06E8               	decf	wreg,f,c
  2513   0012A4  E2FD               	bc	u841
  2514   0012A6  500C               	movf	___aodiv@divisor^0,w,c
  2515   0012A8  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  2516   0012AA  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  2517   0012AC  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  2518   0012AE  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  2519   0012B0  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  2520   0012B2  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  2521   0012B4  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  2522   0012B6  B4D8               	btfsc	status,2,c
  2523   0012B8  EF60  F009         	goto	u851
  2524   0012BC  EF62  F009         	goto	u850
  2525   0012C0                     u851:
  2526   0012C0  EFB4  F009         	goto	l2153
  2527   0012C4                     u850:
  2528   0012C4  0E01               	movlw	1
  2529   0012C6  6E14               	movwf	___aodiv@counter^0,c
  2530   0012C8  EF70  F009         	goto	l2139
  2531   0012CC                     l2137:
  2532   0012CC  90D8               	bcf	status,0,c
  2533   0012CE  360C               	rlcf	___aodiv@divisor^0,f,c
  2534   0012D0  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  2535   0012D2  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  2536   0012D4  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  2537   0012D6  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  2538   0012D8  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  2539   0012DA  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  2540   0012DC  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  2541   0012DE  2A14               	incf	___aodiv@counter^0,f,c
  2542   0012E0                     l2139:
  2543   0012E0  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  2544   0012E2  EF75  F009         	goto	u861
  2545   0012E6  EF77  F009         	goto	u860
  2546   0012EA                     u861:
  2547   0012EA  EF66  F009         	goto	l2137
  2548   0012EE                     u860:
  2549   0012EE                     l2141:
  2550   0012EE  90D8               	bcf	status,0,c
  2551   0012F0  3616               	rlcf	___aodiv@quotient^0,f,c
  2552   0012F2  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  2553   0012F4  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  2554   0012F6  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  2555   0012F8  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  2556   0012FA  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  2557   0012FC  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  2558   0012FE  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  2559   001300  500C               	movf	___aodiv@divisor^0,w,c
  2560   001302  5C04               	subwf	___aodiv@dividend^0,w,c
  2561   001304  500D               	movf	(___aodiv@divisor+1)^0,w,c
  2562   001306  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  2563   001308  500E               	movf	(___aodiv@divisor+2)^0,w,c
  2564   00130A  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  2565   00130C  500F               	movf	(___aodiv@divisor+3)^0,w,c
  2566   00130E  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  2567   001310  5010               	movf	(___aodiv@divisor+4)^0,w,c
  2568   001312  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  2569   001314  5011               	movf	(___aodiv@divisor+5)^0,w,c
  2570   001316  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  2571   001318  5012               	movf	(___aodiv@divisor+6)^0,w,c
  2572   00131A  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  2573   00131C  5013               	movf	(___aodiv@divisor+7)^0,w,c
  2574   00131E  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  2575   001320  A0D8               	btfss	status,0,c
  2576   001322  EF95  F009         	goto	u871
  2577   001326  EF97  F009         	goto	u870
  2578   00132A                     u871:
  2579   00132A  EFA8  F009         	goto	l2149
  2580   00132E                     u870:
  2581   00132E  500C               	movf	___aodiv@divisor^0,w,c
  2582   001330  5E04               	subwf	___aodiv@dividend^0,f,c
  2583   001332  500D               	movf	(___aodiv@divisor+1)^0,w,c
  2584   001334  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  2585   001336  500E               	movf	(___aodiv@divisor+2)^0,w,c
  2586   001338  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  2587   00133A  500F               	movf	(___aodiv@divisor+3)^0,w,c
  2588   00133C  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  2589   00133E  5010               	movf	(___aodiv@divisor+4)^0,w,c
  2590   001340  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  2591   001342  5011               	movf	(___aodiv@divisor+5)^0,w,c
  2592   001344  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  2593   001346  5012               	movf	(___aodiv@divisor+6)^0,w,c
  2594   001348  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  2595   00134A  5013               	movf	(___aodiv@divisor+7)^0,w,c
  2596   00134C  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  2597   00134E  8016               	bsf	___aodiv@quotient^0,0,c
  2598   001350                     l2149:
  2599   001350  90D8               	bcf	status,0,c
  2600   001352  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  2601   001354  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  2602   001356  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  2603   001358  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  2604   00135A  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  2605   00135C  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  2606   00135E  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  2607   001360  320C               	rrcf	___aodiv@divisor^0,f,c
  2608   001362  2E14               	decfsz	___aodiv@counter^0,f,c
  2609   001364  EF77  F009         	goto	l2141
  2610   001368                     l2153:
  2611   001368  5015               	movf	___aodiv@sign^0,w,c
  2612   00136A  B4D8               	btfsc	status,2,c
  2613   00136C  EFBA  F009         	goto	u881
  2614   001370  EFBC  F009         	goto	u880
  2615   001374                     u881:
  2616   001374  EFCC  F009         	goto	l2157
  2617   001378                     u880:
  2618   001378  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  2619   00137A  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  2620   00137C  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  2621   00137E  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  2622   001380  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  2623   001382  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  2624   001384  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  2625   001386  6C16               	negf	___aodiv@quotient^0,c
  2626   001388  0E00               	movlw	0
  2627   00138A  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  2628   00138C  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  2629   00138E  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  2630   001390  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  2631   001392  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  2632   001394  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  2633   001396  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  2634   001398                     l2157:
  2635   001398  C016  F004         	movff	___aodiv@quotient,?___aodiv
  2636   00139C  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  2637   0013A0  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  2638   0013A4  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  2639   0013A8  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  2640   0013AC  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  2641   0013B0  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  2642   0013B4  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  2643   0013B8  0012               	return		;funcret
  2644   0013BA                     __end_of___aodiv:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function _setMotorPWM *****************
  2648 ;; Defined at:
  2649 ;;		line 61 in file "dc_motor.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  m               2   16[COMRAM] PTR struct DC_motor
  2652 ;;		 -> main@motorR(9), main@motorL(9), 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  negDuty         1   21[COMRAM] unsigned char 
  2655 ;;  posDuty         1   20[COMRAM] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2668 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;Total ram usage:        6 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 2
  2672 ;; This function calls:
  2673 ;;		___lwdiv
  2674 ;;		___wmul
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;;		_stop
  2678 ;;		_turnLeft45
  2679 ;;		_turnRight45
  2680 ;;		_fullSpeedAhead
  2681 ;;		_reverseFullSpeed
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text12
  2686   0013BA                     __ptext12:
  2687                           	callstack 0
  2688   0013BA                     _setMotorPWM:
  2689                           	callstack 28
  2690   0013BA                     
  2691                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2692   0013BA  EE20 F002          	lfsr	2,2
  2693   0013BE  5011               	movf	setMotorPWM@m^0,w,c
  2694   0013C0  26D9               	addwf	fsr2l,f,c
  2695   0013C2  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2696   0013C4  22DA               	addwfc	fsr2h,f,c
  2697   0013C6  50DF               	movf	indf2,w,c
  2698   0013C8  B4D8               	btfsc	status,2,c
  2699   0013CA  EFE9  F009         	goto	u1191
  2700   0013CE  EFEB  F009         	goto	u1190
  2701   0013D2                     u1191:
  2702   0013D2  EF1F  F00A         	goto	l2445
  2703   0013D6                     u1190:
  2704   0013D6                     
  2705                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2706   0013D6  C011  FFD9         	movff	setMotorPWM@m,fsr2l
  2707   0013DA  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2708   0013DE  50DF               	movf	indf2,w,c
  2709   0013E0  6E13               	movwf	??_setMotorPWM^0,c
  2710   0013E2  5013               	movf	??_setMotorPWM^0,w,c
  2711   0013E4  6E04               	movwf	___wmul@multiplier^0,c
  2712   0013E6  6A05               	clrf	(___wmul@multiplier+1)^0,c
  2713   0013E8  EE20 F003          	lfsr	2,3
  2714   0013EC  5011               	movf	setMotorPWM@m^0,w,c
  2715   0013EE  26D9               	addwf	fsr2l,f,c
  2716   0013F0  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2717   0013F2  22DA               	addwfc	fsr2h,f,c
  2718   0013F4  CFDE F006          	movff	postinc2,___wmul@multiplicand
  2719   0013F8  CFDD F007          	movff	postdec2,___wmul@multiplicand+1
  2720   0013FC  EC01  F00F         	call	___wmul	;wreg free
  2721   001400  C004  F00A         	movff	?___wmul,___lwdiv@dividend
  2722   001404  C005  F00B         	movff	?___wmul+1,___lwdiv@dividend+1
  2723   001408  0E00               	movlw	0
  2724   00140A  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  2725   00140C  0E64               	movlw	100
  2726   00140E  6E0C               	movwf	___lwdiv@divisor^0,c
  2727   001410  ECDA  F00C         	call	___lwdiv	;wreg free
  2728   001414  EE20 F003          	lfsr	2,3
  2729   001418  5011               	movf	setMotorPWM@m^0,w,c
  2730   00141A  26D9               	addwf	fsr2l,f,c
  2731   00141C  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2732   00141E  22DA               	addwfc	fsr2h,f,c
  2733   001420  50DF               	movf	indf2,w,c
  2734   001422  6E14               	movwf	(??_setMotorPWM+1)^0,c
  2735   001424  500A               	movf	?___lwdiv^0,w,c
  2736   001426  5C14               	subwf	(??_setMotorPWM+1)^0,w,c
  2737   001428  6E15               	movwf	setMotorPWM@posDuty^0,c
  2738   00142A                     
  2739                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2740   00142A  EE20 F003          	lfsr	2,3
  2741   00142E  5011               	movf	setMotorPWM@m^0,w,c
  2742   001430  26D9               	addwf	fsr2l,f,c
  2743   001432  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2744   001434  22DA               	addwfc	fsr2h,f,c
  2745   001436  50DF               	movf	indf2,w,c
  2746   001438  6E16               	movwf	setMotorPWM@negDuty^0,c
  2747                           
  2748                           ;dc_motor.c: 68:     }
  2749   00143A  EF42  F00A         	goto	l2449
  2750   00143E                     l2445:
  2751                           
  2752                           ;dc_motor.c: 70:         posDuty=0;
  2753   00143E  0E00               	movlw	0
  2754   001440  6E15               	movwf	setMotorPWM@posDuty^0,c
  2755   001442                     
  2756                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2757   001442  C011  FFD9         	movff	setMotorPWM@m,fsr2l
  2758   001446  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2759   00144A  50DF               	movf	indf2,w,c
  2760   00144C  6E13               	movwf	??_setMotorPWM^0,c
  2761   00144E  5013               	movf	??_setMotorPWM^0,w,c
  2762   001450  6E04               	movwf	___wmul@multiplier^0,c
  2763   001452  6A05               	clrf	(___wmul@multiplier+1)^0,c
  2764   001454  EE20 F003          	lfsr	2,3
  2765   001458  5011               	movf	setMotorPWM@m^0,w,c
  2766   00145A  26D9               	addwf	fsr2l,f,c
  2767   00145C  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2768   00145E  22DA               	addwfc	fsr2h,f,c
  2769   001460  CFDE F006          	movff	postinc2,___wmul@multiplicand
  2770   001464  CFDD F007          	movff	postdec2,___wmul@multiplicand+1
  2771   001468  EC01  F00F         	call	___wmul	;wreg free
  2772   00146C  C004  F00A         	movff	?___wmul,___lwdiv@dividend
  2773   001470  C005  F00B         	movff	?___wmul+1,___lwdiv@dividend+1
  2774   001474  0E00               	movlw	0
  2775   001476  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  2776   001478  0E64               	movlw	100
  2777   00147A  6E0C               	movwf	___lwdiv@divisor^0,c
  2778   00147C  ECDA  F00C         	call	___lwdiv	;wreg free
  2779   001480  500A               	movf	?___lwdiv^0,w,c
  2780   001482  6E16               	movwf	setMotorPWM@negDuty^0,c
  2781   001484                     l2449:
  2782                           
  2783                           ;dc_motor.c: 74:     if (m->direction) {
  2784   001484  EE20 F001          	lfsr	2,1
  2785   001488  5011               	movf	setMotorPWM@m^0,w,c
  2786   00148A  26D9               	addwf	fsr2l,f,c
  2787   00148C  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2788   00148E  22DA               	addwfc	fsr2h,f,c
  2789   001490  50DF               	movf	indf2,w,c
  2790   001492  B4D8               	btfsc	status,2,c
  2791   001494  EF4E  F00A         	goto	u1201
  2792   001498  EF50  F00A         	goto	u1200
  2793   00149C                     u1201:
  2794   00149C  EF72  F00A         	goto	l2453
  2795   0014A0                     u1200:
  2796   0014A0                     
  2797                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2798   0014A0  EE20 F005          	lfsr	2,5
  2799   0014A4  5011               	movf	setMotorPWM@m^0,w,c
  2800   0014A6  26D9               	addwf	fsr2l,f,c
  2801   0014A8  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2802   0014AA  22DA               	addwfc	fsr2h,f,c
  2803   0014AC  CFDE F013          	movff	postinc2,??_setMotorPWM
  2804   0014B0  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  2805   0014B4  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  2806   0014B8  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2807   0014BC  C015  FFDF         	movff	setMotorPWM@posDuty,indf2
  2808                           
  2809                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2810   0014C0  EE20 F007          	lfsr	2,7
  2811   0014C4  5011               	movf	setMotorPWM@m^0,w,c
  2812   0014C6  26D9               	addwf	fsr2l,f,c
  2813   0014C8  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2814   0014CA  22DA               	addwfc	fsr2h,f,c
  2815   0014CC  CFDE F013          	movff	postinc2,??_setMotorPWM
  2816   0014D0  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  2817   0014D4  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  2818   0014D8  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2819   0014DC  C016  FFDF         	movff	setMotorPWM@negDuty,indf2
  2820                           
  2821                           ;dc_motor.c: 77:     } else {
  2822   0014E0  EF92  F00A         	goto	l86
  2823   0014E4                     l2453:
  2824                           
  2825                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2826   0014E4  EE20 F005          	lfsr	2,5
  2827   0014E8  5011               	movf	setMotorPWM@m^0,w,c
  2828   0014EA  26D9               	addwf	fsr2l,f,c
  2829   0014EC  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2830   0014EE  22DA               	addwfc	fsr2h,f,c
  2831   0014F0  CFDE F013          	movff	postinc2,??_setMotorPWM
  2832   0014F4  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  2833   0014F8  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  2834   0014FC  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2835   001500  C016  FFDF         	movff	setMotorPWM@negDuty,indf2
  2836                           
  2837                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2838   001504  EE20 F007          	lfsr	2,7
  2839   001508  5011               	movf	setMotorPWM@m^0,w,c
  2840   00150A  26D9               	addwf	fsr2l,f,c
  2841   00150C  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2842   00150E  22DA               	addwfc	fsr2h,f,c
  2843   001510  CFDE F013          	movff	postinc2,??_setMotorPWM
  2844   001514  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  2845   001518  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  2846   00151C  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2847   001520  C015  FFDF         	movff	setMotorPWM@posDuty,indf2
  2848   001524                     l86:
  2849   001524  0012               	return		;funcret
  2850   001526                     __end_of_setMotorPWM:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function ___wmul *****************
  2854 ;; Defined at:
  2855 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  multiplier      2    3[COMRAM] unsigned int 
  2858 ;;  multiplicand    2    5[COMRAM] unsigned int 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  product         2    7[COMRAM] unsigned int 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  2    3[COMRAM] unsigned int 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0, prodl, prodh
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;Total ram usage:        6 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 1
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_setMotorPWM
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text13
  2885   001E02                     __ptext13:
  2886                           	callstack 0
  2887   001E02                     ___wmul:
  2888                           	callstack 28
  2889   001E02  5004               	movf	___wmul@multiplier^0,w,c
  2890   001E04  0206               	mulwf	___wmul@multiplicand^0,c
  2891   001E06  CFF3 F008          	movff	prodl,___wmul@product
  2892   001E0A  CFF4 F009          	movff	prodh,___wmul@product+1
  2893   001E0E  5004               	movf	___wmul@multiplier^0,w,c
  2894   001E10  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  2895   001E12  50F3               	movf	243,w,c
  2896   001E14  2609               	addwf	(___wmul@product+1)^0,f,c
  2897   001E16  5005               	movf	(___wmul@multiplier+1)^0,w,c
  2898   001E18  0206               	mulwf	___wmul@multiplicand^0,c
  2899   001E1A  50F3               	movf	243,w,c
  2900   001E1C  2609               	addwf	(___wmul@product+1)^0,f,c
  2901   001E1E  C008  F004         	movff	___wmul@product,?___wmul
  2902   001E22  C009  F005         	movff	___wmul@product+1,?___wmul+1
  2903   001E26  0012               	return		;funcret
  2904   001E28                     __end_of___wmul:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function ___lwdiv *****************
  2908 ;; Defined at:
  2909 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  dividend        2    9[COMRAM] unsigned int 
  2912 ;;  divisor         2   11[COMRAM] unsigned int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  quotient        2   13[COMRAM] unsigned int 
  2915 ;;  counter         1   15[COMRAM] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  2    9[COMRAM] unsigned int 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;Total ram usage:        7 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_setMotorPWM
  2936 ;;		_collect_avg_readings
  2937 ;;		_normalise_readings
  2938 ;;		_make_master_closeness
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text14
  2943   0019B4                     __ptext14:
  2944                           	callstack 0
  2945   0019B4                     ___lwdiv:
  2946                           	callstack 28
  2947   0019B4  0E00               	movlw	0
  2948   0019B6  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  2949   0019B8  0E00               	movlw	0
  2950   0019BA  6E0E               	movwf	___lwdiv@quotient^0,c
  2951   0019BC  500C               	movf	___lwdiv@divisor^0,w,c
  2952   0019BE  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2953   0019C0  B4D8               	btfsc	status,2,c
  2954   0019C2  EFE5  F00C         	goto	u1151
  2955   0019C6  EFE7  F00C         	goto	u1150
  2956   0019CA                     u1151:
  2957   0019CA  EF0F  F00D         	goto	l950
  2958   0019CE                     u1150:
  2959   0019CE  0E01               	movlw	1
  2960   0019D0  6E10               	movwf	___lwdiv@counter^0,c
  2961   0019D2  EFEF  F00C         	goto	l2359
  2962   0019D6                     l2357:
  2963   0019D6  90D8               	bcf	status,0,c
  2964   0019D8  360C               	rlcf	___lwdiv@divisor^0,f,c
  2965   0019DA  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2966   0019DC  2A10               	incf	___lwdiv@counter^0,f,c
  2967   0019DE                     l2359:
  2968   0019DE  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  2969   0019E0  EFF4  F00C         	goto	u1161
  2970   0019E4  EFF6  F00C         	goto	u1160
  2971   0019E8                     u1161:
  2972   0019E8  EFEB  F00C         	goto	l2357
  2973   0019EC                     u1160:
  2974   0019EC                     l2361:
  2975   0019EC  90D8               	bcf	status,0,c
  2976   0019EE  360E               	rlcf	___lwdiv@quotient^0,f,c
  2977   0019F0  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2978   0019F2  500C               	movf	___lwdiv@divisor^0,w,c
  2979   0019F4  5C0A               	subwf	___lwdiv@dividend^0,w,c
  2980   0019F6  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  2981   0019F8  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2982   0019FA  A0D8               	btfss	status,0,c
  2983   0019FC  EF02  F00D         	goto	u1171
  2984   001A00  EF04  F00D         	goto	u1170
  2985   001A04                     u1171:
  2986   001A04  EF09  F00D         	goto	l2369
  2987   001A08                     u1170:
  2988   001A08  500C               	movf	___lwdiv@divisor^0,w,c
  2989   001A0A  5E0A               	subwf	___lwdiv@dividend^0,f,c
  2990   001A0C  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  2991   001A0E  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2992   001A10  800E               	bsf	___lwdiv@quotient^0,0,c
  2993   001A12                     l2369:
  2994   001A12  90D8               	bcf	status,0,c
  2995   001A14  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2996   001A16  320C               	rrcf	___lwdiv@divisor^0,f,c
  2997   001A18  2E10               	decfsz	___lwdiv@counter^0,f,c
  2998   001A1A  EFF6  F00C         	goto	l2361
  2999   001A1E                     l950:
  3000   001A1E  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
  3001   001A22  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3002   001A26  0012               	return		;funcret
  3003   001A28                     __end_of___lwdiv:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _sendStringSerial4 *****************
  3007 ;; Defined at:
  3008 ;;		line 39 in file "serial.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  string          2    4[COMRAM] PTR unsigned char 
  3011 ;;		 -> main@buf(20), 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;Total ram usage:        2 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 2
  3030 ;; This function calls:
  3031 ;;		_sendCharSerial4
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text15
  3038   001D56                     __ptext15:
  3039                           	callstack 0
  3040   001D56                     _sendStringSerial4:
  3041                           	callstack 28
  3042   001D56                     
  3043                           ;serial.c: 40:  while(*string != 0) {
  3044   001D56  EFB6  F00E         	goto	l2569
  3045   001D5A                     l2565:
  3046                           
  3047                           ;serial.c: 41:         sendCharSerial4(*string++);
  3048   001D5A  C005  FFD9         	movff	sendStringSerial4@string,fsr2l
  3049   001D5E  C006  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3050   001D62  50DF               	movf	indf2,w,c
  3051   001D64  EC45  F00F         	call	_sendCharSerial4
  3052   001D68  4A05               	infsnz	sendStringSerial4@string^0,f,c
  3053   001D6A  2A06               	incf	(sendStringSerial4@string+1)^0,f,c
  3054   001D6C                     l2569:
  3055                           
  3056                           ;serial.c: 40:  while(*string != 0) {
  3057   001D6C  C005  FFD9         	movff	sendStringSerial4@string,fsr2l
  3058   001D70  C006  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3059   001D74  50DF               	movf	indf2,w,c
  3060   001D76  A4D8               	btfss	status,2,c
  3061   001D78  EFC0  F00E         	goto	u1261
  3062   001D7C  EFC2  F00E         	goto	u1260
  3063   001D80                     u1261:
  3064   001D80  EFAD  F00E         	goto	l2565
  3065   001D84                     u1260:
  3066   001D84  0012               	return		;funcret
  3067   001D86                     __end_of_sendStringSerial4:
  3068                           	callstack 0
  3069                           
  3070 ;; *************** function _sendCharSerial4 *****************
  3071 ;; Defined at:
  3072 ;;		line 32 in file "serial.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  charToSend      1    wreg     unsigned char 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  charToSend      1    3[COMRAM] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3090 ;;Total ram usage:        1 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 1
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_sendStringSerial4
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text16
  3101   001E8A                     __ptext16:
  3102                           	callstack 0
  3103   001E8A                     _sendCharSerial4:
  3104                           	callstack 28
  3105                           
  3106                           ;incstack = 0
  3107                           ;sendCharSerial4@charToSend stored from wreg
  3108   001E8A  6E04               	movwf	sendCharSerial4@charToSend^0,c
  3109   001E8C                     l384:
  3110   001E8C  010E               	movlb	14	; () banked
  3111   001E8E  A537               	btfss	55,2,b	;volatile
  3112   001E90  EF4C  F00F         	goto	u1141
  3113   001E94  EF4E  F00F         	goto	u1140
  3114   001E98                     u1141:
  3115   001E98  EF46  F00F         	goto	l384
  3116   001E9C                     u1140:
  3117   001E9C                     
  3118                           ; BSR set to: 14
  3119                           ;serial.c: 34:     TX4REG = charToSend;
  3120   001E9C  C004  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3121   001EA0                     
  3122                           ; BSR set to: 14
  3123   001EA0  0012               	return		;funcret
  3124   001EA2                     __end_of_sendCharSerial4:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _initUSART4 *****************
  3128 ;; Defined at:
  3129 ;;		line 6 in file "serial.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 1
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text17
  3158   001E4A                     __ptext17:
  3159                           	callstack 0
  3160   001E4A                     _initUSART4:
  3161                           	callstack 29
  3162   001E4A                     
  3163                           ;serial.c: 10:     RC0PPS = 0x12;
  3164   001E4A  0E12               	movlw	18
  3165   001E4C  010E               	movlb	14	; () banked
  3166   001E4E  6F62               	movwf	98,b	;volatile
  3167                           
  3168                           ;serial.c: 11:     RX4PPS = 0x11;
  3169   001E50  0E11               	movlw	17
  3170   001E52  6F15               	movwf	21,b	;volatile
  3171   001E54                     
  3172                           ; BSR set to: 14
  3173                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3174   001E54  8283               	bsf	131,1,c	;volatile
  3175   001E56                     
  3176                           ; BSR set to: 14
  3177                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3178   001E56  97E9               	bcf	233,3,b	;volatile
  3179   001E58                     
  3180                           ; BSR set to: 14
  3181                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3182   001E58  95E8               	bcf	232,2,b	;volatile
  3183                           
  3184                           ;serial.c: 17:     SP4BRGL = 51;
  3185   001E5A  0E33               	movlw	51
  3186   001E5C  6FE5               	movwf	229,b	;volatile
  3187                           
  3188                           ;serial.c: 18:     SP4BRGH = 0;
  3189   001E5E  0E00               	movlw	0
  3190   001E60  6FE6               	movwf	230,b	;volatile
  3191   001E62                     
  3192                           ; BSR set to: 14
  3193                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3194   001E62  89E7               	bsf	231,4,b	;volatile
  3195   001E64                     
  3196                           ; BSR set to: 14
  3197                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3198   001E64  8BE8               	bsf	232,5,b	;volatile
  3199   001E66                     
  3200                           ; BSR set to: 14
  3201                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3202   001E66  8FE7               	bsf	231,7,b	;volatile
  3203   001E68                     
  3204                           ; BSR set to: 14
  3205   001E68  0012               	return		;funcret
  3206   001E6A                     __end_of_initUSART4:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _initDCmotorsPWM *****************
  3210 ;; Defined at:
  3211 ;;		line 6 in file "dc_motor.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text18
  3240   0018B2                     __ptext18:
  3241                           	callstack 0
  3242   0018B2                     _initDCmotorsPWM:
  3243                           	callstack 29
  3244   0018B2                     
  3245                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3246   0018B2  9485               	bcf	133,2,c	;volatile
  3247                           
  3248                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3249   0018B4  9885               	bcf	133,4,c	;volatile
  3250                           
  3251                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3252   0018B6  9E83               	bcf	131,7,c	;volatile
  3253                           
  3254                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3255   0018B8  9C87               	bcf	135,6,c	;volatile
  3256   0018BA                     
  3257                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3258   0018BA  0E05               	movlw	5
  3259   0018BC  010E               	movlb	14	; () banked
  3260   0018BE  6F74               	movwf	116,b	;volatile
  3261                           
  3262                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3263   0018C0  0E06               	movlw	6
  3264   0018C2  6F76               	movwf	118,b	;volatile
  3265                           
  3266                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3267   0018C4  0E07               	movlw	7
  3268   0018C6  6F69               	movwf	105,b	;volatile
  3269                           
  3270                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3271   0018C8  0E08               	movlw	8
  3272   0018CA  6F88               	movwf	136,b	;volatile
  3273                           
  3274                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3275   0018CC  50BD               	movf	189,w,c	;volatile
  3276   0018CE  0B8F               	andlw	-113
  3277   0018D0  0940               	iorlw	64
  3278   0018D2  6EBD               	movwf	189,c	;volatile
  3279                           
  3280                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3281   0018D4  0EE0               	movlw	-32
  3282   0018D6  16BE               	andwf	190,f,c	;volatile
  3283                           
  3284                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3285   0018D8  50BF               	movf	191,w,c	;volatile
  3286   0018DA  0BF0               	andlw	-16
  3287   0018DC  0901               	iorlw	1
  3288   0018DE  6EBF               	movwf	191,c	;volatile
  3289                           
  3290                           ;dc_motor.c: 26:     T2PR=99;
  3291   0018E0  0E63               	movlw	99
  3292   0018E2  6EBC               	movwf	188,c	;volatile
  3293   0018E4                     
  3294                           ; BSR set to: 14
  3295                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3296   0018E4  8EBD               	bsf	189,7,c	;volatile
  3297                           
  3298                           ;dc_motor.c: 31:     CCPR1H=0;
  3299   0018E6  0E00               	movlw	0
  3300   0018E8  6EAA               	movwf	170,c	;volatile
  3301                           
  3302                           ;dc_motor.c: 32:     CCPR2H=0;
  3303   0018EA  0E00               	movlw	0
  3304   0018EC  6EA6               	movwf	166,c	;volatile
  3305                           
  3306                           ;dc_motor.c: 33:     CCPR3H=0;
  3307   0018EE  0E00               	movlw	0
  3308   0018F0  010F               	movlb	15	; () banked
  3309   0018F2  6F25               	movwf	37,b	;volatile
  3310                           
  3311                           ;dc_motor.c: 34:     CCPR4H=0;
  3312   0018F4  0E00               	movlw	0
  3313   0018F6  6F21               	movwf	33,b	;volatile
  3314                           
  3315                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3316   0018F8  0EFC               	movlw	-4
  3317   0018FA  16AD               	andwf	173,f,c	;volatile
  3318                           
  3319                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3320   0018FC  0EF3               	movlw	-13
  3321   0018FE  16AD               	andwf	173,f,c	;volatile
  3322                           
  3323                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3324   001900  0ECF               	movlw	-49
  3325   001902  16AD               	andwf	173,f,c	;volatile
  3326                           
  3327                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3328   001904  0E3F               	movlw	-193
  3329   001906  16AD               	andwf	173,f,c	;volatile
  3330   001908                     
  3331                           ; BSR set to: 15
  3332                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3333   001908  88AB               	bsf	171,4,c	;volatile
  3334                           
  3335                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3336   00190A  50AB               	movf	171,w,c	;volatile
  3337   00190C  0BF0               	andlw	-16
  3338   00190E  090C               	iorlw	12
  3339   001910  6EAB               	movwf	171,c	;volatile
  3340   001912                     
  3341                           ; BSR set to: 15
  3342                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3343   001912  8EAB               	bsf	171,7,c	;volatile
  3344   001914                     
  3345                           ; BSR set to: 15
  3346                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3347   001914  88A7               	bsf	167,4,c	;volatile
  3348                           
  3349                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3350   001916  50A7               	movf	167,w,c	;volatile
  3351   001918  0BF0               	andlw	-16
  3352   00191A  090C               	iorlw	12
  3353   00191C  6EA7               	movwf	167,c	;volatile
  3354   00191E                     
  3355                           ; BSR set to: 15
  3356                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3357   00191E  8EA7               	bsf	167,7,c	;volatile
  3358   001920                     
  3359                           ; BSR set to: 15
  3360                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3361   001920  8926               	bsf	38,4,b	;volatile
  3362                           
  3363                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3364   001922  5126               	movf	38,w,b	;volatile
  3365   001924  0BF0               	andlw	-16
  3366   001926  090C               	iorlw	12
  3367   001928  6F26               	movwf	38,b	;volatile
  3368   00192A                     
  3369                           ; BSR set to: 15
  3370                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3371   00192A  8F26               	bsf	38,7,b	;volatile
  3372   00192C                     
  3373                           ; BSR set to: 15
  3374                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3375   00192C  8922               	bsf	34,4,b	;volatile
  3376                           
  3377                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3378   00192E  5122               	movf	34,w,b	;volatile
  3379   001930  0BF0               	andlw	-16
  3380   001932  090C               	iorlw	12
  3381   001934  6F22               	movwf	34,b	;volatile
  3382   001936                     
  3383                           ; BSR set to: 15
  3384                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3385   001936  8F22               	bsf	34,7,b	;volatile
  3386   001938                     
  3387                           ; BSR set to: 15
  3388   001938  0012               	return		;funcret
  3389   00193A                     __end_of_initDCmotorsPWM:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _color_read_Red *****************
  3393 ;; Defined at:
  3394 ;;		line 29 in file "color.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  tmp             2   12[COMRAM] unsigned int 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2    7[COMRAM] unsigned int 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3410 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3411 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;Total ram usage:        7 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 3
  3415 ;; This function calls:
  3416 ;;		_I2C_2_Master_Read
  3417 ;;		_I2C_2_Master_RepStart
  3418 ;;		_I2C_2_Master_Start
  3419 ;;		_I2C_2_Master_Stop
  3420 ;;		_I2C_2_Master_Write
  3421 ;; This function is called by:
  3422 ;;		_main
  3423 ;;		_collect_avg_readings
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text19
  3428   001ACE                     __ptext19:
  3429                           	callstack 0
  3430   001ACE                     _color_read_Red:
  3431                           	callstack 27
  3432   001ACE                     
  3433                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  3434   001ACE  EC6A  F00F         	call	_I2C_2_Master_Start	;wreg free
  3435                           
  3436                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  3437   001AD2  0E52               	movlw	82
  3438   001AD4  EC5A  F00F         	call	_I2C_2_Master_Write
  3439                           
  3440                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  3441   001AD8  0EB6               	movlw	182
  3442   001ADA  EC5A  F00F         	call	_I2C_2_Master_Write
  3443                           
  3444                           ;color.c: 35:  I2C_2_Master_RepStart();
  3445   001ADE  EC60  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3446                           
  3447                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  3448   001AE2  0E53               	movlw	83
  3449   001AE4  EC5A  F00F         	call	_I2C_2_Master_Write
  3450                           
  3451                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  3452   001AE8  0E01               	movlw	1
  3453   001AEA  EC50  F00E         	call	_I2C_2_Master_Read
  3454   001AEE  6E0A               	movwf	??_color_read_Red^0,c
  3455   001AF0  500A               	movf	??_color_read_Red^0,w,c
  3456   001AF2  6E0D               	movwf	color_read_Red@tmp^0,c
  3457   001AF4  6A0E               	clrf	(color_read_Red@tmp+1)^0,c
  3458                           
  3459                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3460   001AF6  0E00               	movlw	0
  3461   001AF8  EC50  F00E         	call	_I2C_2_Master_Read
  3462   001AFC  6E0A               	movwf	??_color_read_Red^0,c
  3463   001AFE  500A               	movf	??_color_read_Red^0,w,c
  3464   001B00  6E0C               	movwf	(??_color_read_Red+2)^0,c
  3465   001B02  6A0B               	clrf	(??_color_read_Red+1)^0,c
  3466   001B04  500D               	movf	color_read_Red@tmp^0,w,c
  3467   001B06  100B               	iorwf	(??_color_read_Red+1)^0,w,c
  3468   001B08  6E0D               	movwf	color_read_Red@tmp^0,c
  3469   001B0A  500E               	movf	(color_read_Red@tmp+1)^0,w,c
  3470   001B0C  100C               	iorwf	(??_color_read_Red+2)^0,w,c
  3471   001B0E  6E0E               	movwf	(color_read_Red@tmp+1)^0,c
  3472                           
  3473                           ;color.c: 39:  I2C_2_Master_Stop();
  3474   001B10  EC65  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3475   001B14                     
  3476                           ;color.c: 40:  return tmp;
  3477   001B14  C00D  F008         	movff	color_read_Red@tmp,?_color_read_Red
  3478   001B18  C00E  F009         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3479   001B1C  0012               	return		;funcret
  3480   001B1E                     __end_of_color_read_Red:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _color_read_Green *****************
  3484 ;; Defined at:
  3485 ;;		line 43 in file "color.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  tmp             2   12[COMRAM] unsigned int 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  2    7[COMRAM] unsigned int 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3501 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;Total ram usage:        7 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 3
  3506 ;; This function calls:
  3507 ;;		_I2C_2_Master_Read
  3508 ;;		_I2C_2_Master_RepStart
  3509 ;;		_I2C_2_Master_Start
  3510 ;;		_I2C_2_Master_Stop
  3511 ;;		_I2C_2_Master_Write
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;;		_collect_avg_readings
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text20
  3519   001B1E                     __ptext20:
  3520                           	callstack 0
  3521   001B1E                     _color_read_Green:
  3522                           	callstack 27
  3523   001B1E                     
  3524                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  3525   001B1E  EC6A  F00F         	call	_I2C_2_Master_Start	;wreg free
  3526                           
  3527                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3528   001B22  0E52               	movlw	82
  3529   001B24  EC5A  F00F         	call	_I2C_2_Master_Write
  3530                           
  3531                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  3532   001B28  0EB8               	movlw	184
  3533   001B2A  EC5A  F00F         	call	_I2C_2_Master_Write
  3534                           
  3535                           ;color.c: 49:  I2C_2_Master_RepStart();
  3536   001B2E  EC60  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3537                           
  3538                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3539   001B32  0E53               	movlw	83
  3540   001B34  EC5A  F00F         	call	_I2C_2_Master_Write
  3541                           
  3542                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  3543   001B38  0E01               	movlw	1
  3544   001B3A  EC50  F00E         	call	_I2C_2_Master_Read
  3545   001B3E  6E0A               	movwf	??_color_read_Green^0,c
  3546   001B40  500A               	movf	??_color_read_Green^0,w,c
  3547   001B42  6E0D               	movwf	color_read_Green@tmp^0,c
  3548   001B44  6A0E               	clrf	(color_read_Green@tmp+1)^0,c
  3549                           
  3550                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3551   001B46  0E00               	movlw	0
  3552   001B48  EC50  F00E         	call	_I2C_2_Master_Read
  3553   001B4C  6E0A               	movwf	??_color_read_Green^0,c
  3554   001B4E  500A               	movf	??_color_read_Green^0,w,c
  3555   001B50  6E0C               	movwf	(??_color_read_Green+2)^0,c
  3556   001B52  6A0B               	clrf	(??_color_read_Green+1)^0,c
  3557   001B54  500D               	movf	color_read_Green@tmp^0,w,c
  3558   001B56  100B               	iorwf	(??_color_read_Green+1)^0,w,c
  3559   001B58  6E0D               	movwf	color_read_Green@tmp^0,c
  3560   001B5A  500E               	movf	(color_read_Green@tmp+1)^0,w,c
  3561   001B5C  100C               	iorwf	(??_color_read_Green+2)^0,w,c
  3562   001B5E  6E0E               	movwf	(color_read_Green@tmp+1)^0,c
  3563                           
  3564                           ;color.c: 53:  I2C_2_Master_Stop();
  3565   001B60  EC65  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3566   001B64                     
  3567                           ;color.c: 54:  return tmp;
  3568   001B64  C00D  F008         	movff	color_read_Green@tmp,?_color_read_Green
  3569   001B68  C00E  F009         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3570   001B6C  0012               	return		;funcret
  3571   001B6E                     __end_of_color_read_Green:
  3572                           	callstack 0
  3573                           
  3574 ;; *************** function _color_read_Clear *****************
  3575 ;; Defined at:
  3576 ;;		line 71 in file "color.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  tmp             2   12[COMRAM] unsigned int 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  2    7[COMRAM] unsigned int 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3594 ;;Total ram usage:        7 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 3
  3597 ;; This function calls:
  3598 ;;		_I2C_2_Master_Read
  3599 ;;		_I2C_2_Master_RepStart
  3600 ;;		_I2C_2_Master_Start
  3601 ;;		_I2C_2_Master_Stop
  3602 ;;		_I2C_2_Master_Write
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text21
  3609   001B6E                     __ptext21:
  3610                           	callstack 0
  3611   001B6E                     _color_read_Clear:
  3612                           	callstack 27
  3613   001B6E                     
  3614                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3615   001B6E  EC6A  F00F         	call	_I2C_2_Master_Start	;wreg free
  3616                           
  3617                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3618   001B72  0E52               	movlw	82
  3619   001B74  EC5A  F00F         	call	_I2C_2_Master_Write
  3620                           
  3621                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  3622   001B78  0EB4               	movlw	180
  3623   001B7A  EC5A  F00F         	call	_I2C_2_Master_Write
  3624                           
  3625                           ;color.c: 77:  I2C_2_Master_RepStart();
  3626   001B7E  EC60  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3627                           
  3628                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3629   001B82  0E53               	movlw	83
  3630   001B84  EC5A  F00F         	call	_I2C_2_Master_Write
  3631                           
  3632                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  3633   001B88  0E01               	movlw	1
  3634   001B8A  EC50  F00E         	call	_I2C_2_Master_Read
  3635   001B8E  6E0A               	movwf	??_color_read_Clear^0,c
  3636   001B90  500A               	movf	??_color_read_Clear^0,w,c
  3637   001B92  6E0D               	movwf	color_read_Clear@tmp^0,c
  3638   001B94  6A0E               	clrf	(color_read_Clear@tmp+1)^0,c
  3639                           
  3640                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3641   001B96  0E00               	movlw	0
  3642   001B98  EC50  F00E         	call	_I2C_2_Master_Read
  3643   001B9C  6E0A               	movwf	??_color_read_Clear^0,c
  3644   001B9E  500A               	movf	??_color_read_Clear^0,w,c
  3645   001BA0  6E0C               	movwf	(??_color_read_Clear+2)^0,c
  3646   001BA2  6A0B               	clrf	(??_color_read_Clear+1)^0,c
  3647   001BA4  500D               	movf	color_read_Clear@tmp^0,w,c
  3648   001BA6  100B               	iorwf	(??_color_read_Clear+1)^0,w,c
  3649   001BA8  6E0D               	movwf	color_read_Clear@tmp^0,c
  3650   001BAA  500E               	movf	(color_read_Clear@tmp+1)^0,w,c
  3651   001BAC  100C               	iorwf	(??_color_read_Clear+2)^0,w,c
  3652   001BAE  6E0E               	movwf	(color_read_Clear@tmp+1)^0,c
  3653                           
  3654                           ;color.c: 81:  I2C_2_Master_Stop();
  3655   001BB0  EC65  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3656   001BB4                     
  3657                           ;color.c: 82:  return tmp;
  3658   001BB4  C00D  F008         	movff	color_read_Clear@tmp,?_color_read_Clear
  3659   001BB8  C00E  F009         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3660   001BBC  0012               	return		;funcret
  3661   001BBE                     __end_of_color_read_Clear:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function _color_read_Blue *****************
  3665 ;; Defined at:
  3666 ;;		line 57 in file "color.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  tmp             2   12[COMRAM] unsigned int 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  2    7[COMRAM] unsigned int 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;Total ram usage:        7 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 3
  3687 ;; This function calls:
  3688 ;;		_I2C_2_Master_Read
  3689 ;;		_I2C_2_Master_RepStart
  3690 ;;		_I2C_2_Master_Start
  3691 ;;		_I2C_2_Master_Stop
  3692 ;;		_I2C_2_Master_Write
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;;		_collect_avg_readings
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text22
  3700   001BBE                     __ptext22:
  3701                           	callstack 0
  3702   001BBE                     _color_read_Blue:
  3703                           	callstack 27
  3704   001BBE                     
  3705                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  3706   001BBE  EC6A  F00F         	call	_I2C_2_Master_Start	;wreg free
  3707                           
  3708                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  3709   001BC2  0E52               	movlw	82
  3710   001BC4  EC5A  F00F         	call	_I2C_2_Master_Write
  3711                           
  3712                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  3713   001BC8  0EBA               	movlw	186
  3714   001BCA  EC5A  F00F         	call	_I2C_2_Master_Write
  3715                           
  3716                           ;color.c: 63:  I2C_2_Master_RepStart();
  3717   001BCE  EC60  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3718                           
  3719                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  3720   001BD2  0E53               	movlw	83
  3721   001BD4  EC5A  F00F         	call	_I2C_2_Master_Write
  3722                           
  3723                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  3724   001BD8  0E01               	movlw	1
  3725   001BDA  EC50  F00E         	call	_I2C_2_Master_Read
  3726   001BDE  6E0A               	movwf	??_color_read_Blue^0,c
  3727   001BE0  500A               	movf	??_color_read_Blue^0,w,c
  3728   001BE2  6E0D               	movwf	color_read_Blue@tmp^0,c
  3729   001BE4  6A0E               	clrf	(color_read_Blue@tmp+1)^0,c
  3730                           
  3731                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3732   001BE6  0E00               	movlw	0
  3733   001BE8  EC50  F00E         	call	_I2C_2_Master_Read
  3734   001BEC  6E0A               	movwf	??_color_read_Blue^0,c
  3735   001BEE  500A               	movf	??_color_read_Blue^0,w,c
  3736   001BF0  6E0C               	movwf	(??_color_read_Blue+2)^0,c
  3737   001BF2  6A0B               	clrf	(??_color_read_Blue+1)^0,c
  3738   001BF4  500D               	movf	color_read_Blue@tmp^0,w,c
  3739   001BF6  100B               	iorwf	(??_color_read_Blue+1)^0,w,c
  3740   001BF8  6E0D               	movwf	color_read_Blue@tmp^0,c
  3741   001BFA  500E               	movf	(color_read_Blue@tmp+1)^0,w,c
  3742   001BFC  100C               	iorwf	(??_color_read_Blue+2)^0,w,c
  3743   001BFE  6E0E               	movwf	(color_read_Blue@tmp+1)^0,c
  3744                           
  3745                           ;color.c: 67:  I2C_2_Master_Stop();
  3746   001C00  EC65  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3747   001C04                     
  3748                           ;color.c: 68:  return tmp;
  3749   001C04  C00D  F008         	movff	color_read_Blue@tmp,?_color_read_Blue
  3750   001C08  C00E  F009         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3751   001C0C  0012               	return		;funcret
  3752   001C0E                     __end_of_color_read_Blue:
  3753                           	callstack 0
  3754                           
  3755 ;; *************** function _I2C_2_Master_RepStart *****************
  3756 ;; Defined at:
  3757 ;;		line 33 in file "i2c.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;Total ram usage:        0 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 2
  3778 ;; This function calls:
  3779 ;;		_I2C_2_Master_Idle
  3780 ;; This function is called by:
  3781 ;;		_color_read_Red
  3782 ;;		_color_read_Green
  3783 ;;		_color_read_Blue
  3784 ;;		_color_read_Clear
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text23
  3789   001EC0                     __ptext23:
  3790                           	callstack 0
  3791   001EC0                     _I2C_2_Master_RepStart:
  3792                           	callstack 27
  3793   001EC0                     
  3794                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3795   001EC0  ECED  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3796   001EC4                     
  3797                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3798   001EC4  010E               	movlb	14	; () banked
  3799   001EC6  83DA               	bsf	218,1,b	;volatile
  3800   001EC8                     
  3801                           ; BSR set to: 14
  3802   001EC8  0012               	return		;funcret
  3803   001ECA                     __end_of_I2C_2_Master_RepStart:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _I2C_2_Master_Read *****************
  3807 ;; Defined at:
  3808 ;;		line 51 in file "i2c.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  ack             1    wreg     unsigned char 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  ack             1    5[COMRAM] unsigned char 
  3813 ;;  tmp             1    6[COMRAM] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      unsigned char 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3827 ;;Total ram usage:        3 bytes
  3828 ;; Hardware stack levels used: 1
  3829 ;; Hardware stack levels required when called: 2
  3830 ;; This function calls:
  3831 ;;		_I2C_2_Master_Idle
  3832 ;; This function is called by:
  3833 ;;		_color_read_Red
  3834 ;;		_color_read_Green
  3835 ;;		_color_read_Blue
  3836 ;;		_color_read_Clear
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text24
  3841   001CA0                     __ptext24:
  3842                           	callstack 0
  3843   001CA0                     _I2C_2_Master_Read:
  3844                           	callstack 27
  3845                           
  3846                           ; BSR set to: 14
  3847                           ;incstack = 0
  3848                           ;I2C_2_Master_Read@ack stored from wreg
  3849   001CA0  6E06               	movwf	I2C_2_Master_Read@ack^0,c
  3850   001CA2                     
  3851                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3852   001CA2  ECED  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3853   001CA6                     
  3854                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3855   001CA6  010E               	movlb	14	; () banked
  3856   001CA8  87DA               	bsf	218,3,b	;volatile
  3857                           
  3858                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3859   001CAA  ECED  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3860   001CAE                     
  3861                           ;i2c.c: 57:   tmp = SSP2BUF;
  3862   001CAE  CED5 F007          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3863                           
  3864                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3865   001CB2  ECED  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3866   001CB6                     
  3867                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3868   001CB6  5006               	movf	I2C_2_Master_Read@ack^0,w,c
  3869   001CB8  B4D8               	btfsc	status,2,c
  3870   001CBA  EF61  F00E         	goto	u1121
  3871   001CBE  EF65  F00E         	goto	u1120
  3872   001CC2                     u1121:
  3873   001CC2  6A05               	clrf	??_I2C_2_Master_Read^0,c
  3874   001CC4  2A05               	incf	??_I2C_2_Master_Read^0,f,c
  3875   001CC6  EF66  F00E         	goto	u1138
  3876   001CCA                     u1120:
  3877   001CCA  6A05               	clrf	??_I2C_2_Master_Read^0,c
  3878   001CCC                     u1138:
  3879   001CCC  3A05               	swapf	??_I2C_2_Master_Read^0,f,c
  3880   001CCE  4605               	rlncf	??_I2C_2_Master_Read^0,f,c
  3881   001CD0  010E               	movlb	14	; () banked
  3882   001CD2  51DA               	movf	218,w,b	;volatile
  3883   001CD4  1805               	xorwf	??_I2C_2_Master_Read^0,w,c
  3884   001CD6  0BDF               	andlw	-33
  3885   001CD8  1805               	xorwf	??_I2C_2_Master_Read^0,w,c
  3886   001CDA  6FDA               	movwf	218,b	;volatile
  3887   001CDC                     
  3888                           ; BSR set to: 14
  3889                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3890   001CDC  89DA               	bsf	218,4,b	;volatile
  3891   001CDE                     
  3892                           ; BSR set to: 14
  3893                           ;i2c.c: 61:   return tmp;
  3894   001CDE  5007               	movf	I2C_2_Master_Read@tmp^0,w,c
  3895   001CE0                     
  3896                           ; BSR set to: 14
  3897   001CE0  0012               	return		;funcret
  3898   001CE2                     __end_of_I2C_2_Master_Read:
  3899                           	callstack 0
  3900                           
  3901 ;; *************** function _color_click_init *****************
  3902 ;; Defined at:
  3903 ;;		line 5 in file "color.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;		None
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3921 ;;Total ram usage:        1 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 4
  3924 ;; This function calls:
  3925 ;;		_I2C_2_Master_Init
  3926 ;;		_color_writetoaddr
  3927 ;; This function is called by:
  3928 ;;		_main
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text25
  3933   001D22                     __ptext25:
  3934                           	callstack 0
  3935   001D22                     _color_click_init:
  3936                           	callstack 26
  3937   001D22                     
  3938                           ;color.c: 8:     I2C_2_Master_Init();
  3939   001D22  ECC3  F00E         	call	_I2C_2_Master_Init	;wreg free
  3940   001D26                     
  3941                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3942   001D26  0E01               	movlw	1
  3943   001D28  6E06               	movwf	color_writetoaddr@value^0,c
  3944   001D2A  0E00               	movlw	0
  3945   001D2C  EC35  F00F         	call	_color_writetoaddr
  3946   001D30                     
  3947                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3948   001D30  0E3F               	movlw	63
  3949   001D32  6E08               	movwf	??_color_click_init^0,c
  3950   001D34  0E55               	movlw	85
  3951   001D36                     u1537:
  3952   001D36  2EE8               	decfsz	wreg,f,c
  3953   001D38  D7FE               	bra	u1537
  3954   001D3A  2E08               	decfsz	??_color_click_init^0,f,c
  3955   001D3C  D7FC               	bra	u1537
  3956   001D3E  F000               	nop	
  3957   001D40                     
  3958                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3959   001D40  0E03               	movlw	3
  3960   001D42  6E06               	movwf	color_writetoaddr@value^0,c
  3961   001D44  0E00               	movlw	0
  3962   001D46  EC35  F00F         	call	_color_writetoaddr
  3963   001D4A                     
  3964                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3965   001D4A  0ED5               	movlw	213
  3966   001D4C  6E06               	movwf	color_writetoaddr@value^0,c
  3967   001D4E  0E01               	movlw	1
  3968   001D50  EC35  F00F         	call	_color_writetoaddr
  3969   001D54  0012               	return		;funcret
  3970   001D56                     __end_of_color_click_init:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _color_writetoaddr *****************
  3974 ;; Defined at:
  3975 ;;		line 21 in file "color.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  address         1    wreg     unsigned char 
  3978 ;;  value           1    5[COMRAM] unsigned char 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  address         1    6[COMRAM] unsigned char 
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;Total ram usage:        2 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 3
  3997 ;; This function calls:
  3998 ;;		_I2C_2_Master_Start
  3999 ;;		_I2C_2_Master_Stop
  4000 ;;		_I2C_2_Master_Write
  4001 ;; This function is called by:
  4002 ;;		_color_click_init
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text26
  4007   001E6A                     __ptext26:
  4008                           	callstack 0
  4009   001E6A                     _color_writetoaddr:
  4010                           	callstack 26
  4011                           
  4012                           ;incstack = 0
  4013                           ;color_writetoaddr@address stored from wreg
  4014   001E6A  6E07               	movwf	color_writetoaddr@address^0,c
  4015   001E6C                     
  4016                           ;color.c: 22:     I2C_2_Master_Start();
  4017   001E6C  EC6A  F00F         	call	_I2C_2_Master_Start	;wreg free
  4018                           
  4019                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4020   001E70  0E52               	movlw	82
  4021   001E72  EC5A  F00F         	call	_I2C_2_Master_Write
  4022                           
  4023                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4024   001E76  5007               	movf	color_writetoaddr@address^0,w,c
  4025   001E78  0980               	iorlw	128
  4026   001E7A  EC5A  F00F         	call	_I2C_2_Master_Write
  4027                           
  4028                           ;color.c: 25:     I2C_2_Master_Write(value);
  4029   001E7E  5006               	movf	color_writetoaddr@value^0,w,c
  4030   001E80  EC5A  F00F         	call	_I2C_2_Master_Write
  4031                           
  4032                           ;color.c: 26:     I2C_2_Master_Stop();
  4033   001E84  EC65  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4034   001E88  0012               	return		;funcret
  4035   001E8A                     __end_of_color_writetoaddr:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _I2C_2_Master_Write *****************
  4039 ;; Defined at:
  4040 ;;		line 45 in file "i2c.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  data_byte       1    wreg     unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  data_byte       1    4[COMRAM] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4058 ;;Total ram usage:        1 bytes
  4059 ;; Hardware stack levels used: 1
  4060 ;; Hardware stack levels required when called: 2
  4061 ;; This function calls:
  4062 ;;		_I2C_2_Master_Idle
  4063 ;; This function is called by:
  4064 ;;		_color_writetoaddr
  4065 ;;		_color_read_Red
  4066 ;;		_color_read_Green
  4067 ;;		_color_read_Blue
  4068 ;;		_color_read_Clear
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text27
  4073   001EB4                     __ptext27:
  4074                           	callstack 0
  4075   001EB4                     _I2C_2_Master_Write:
  4076                           	callstack 27
  4077                           
  4078                           ;incstack = 0
  4079                           ;I2C_2_Master_Write@data_byte stored from wreg
  4080   001EB4  6E05               	movwf	I2C_2_Master_Write@data_byte^0,c
  4081   001EB6                     
  4082                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4083   001EB6  ECED  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4084   001EBA                     
  4085                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4086   001EBA  C005  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4087   001EBE  0012               	return		;funcret
  4088   001EC0                     __end_of_I2C_2_Master_Write:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _I2C_2_Master_Stop *****************
  4092 ;; Defined at:
  4093 ;;		line 39 in file "i2c.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;Total ram usage:        0 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 2
  4114 ;; This function calls:
  4115 ;;		_I2C_2_Master_Idle
  4116 ;; This function is called by:
  4117 ;;		_color_writetoaddr
  4118 ;;		_color_read_Red
  4119 ;;		_color_read_Green
  4120 ;;		_color_read_Blue
  4121 ;;		_color_read_Clear
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text28
  4126   001ECA                     __ptext28:
  4127                           	callstack 0
  4128   001ECA                     _I2C_2_Master_Stop:
  4129                           	callstack 27
  4130   001ECA                     
  4131                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4132   001ECA  ECED  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4133   001ECE                     
  4134                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4135   001ECE  010E               	movlb	14	; () banked
  4136   001ED0  85DA               	bsf	218,2,b	;volatile
  4137   001ED2                     
  4138                           ; BSR set to: 14
  4139   001ED2  0012               	return		;funcret
  4140   001ED4                     __end_of_I2C_2_Master_Stop:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _I2C_2_Master_Start *****************
  4144 ;; Defined at:
  4145 ;;		line 27 in file "i2c.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4163 ;;Total ram usage:        0 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 2
  4166 ;; This function calls:
  4167 ;;		_I2C_2_Master_Idle
  4168 ;; This function is called by:
  4169 ;;		_color_writetoaddr
  4170 ;;		_color_read_Red
  4171 ;;		_color_read_Green
  4172 ;;		_color_read_Blue
  4173 ;;		_color_read_Clear
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text29
  4178   001ED4                     __ptext29:
  4179                           	callstack 0
  4180   001ED4                     _I2C_2_Master_Start:
  4181                           	callstack 27
  4182   001ED4                     
  4183                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4184   001ED4  ECED  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4185   001ED8                     
  4186                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4187   001ED8  010E               	movlb	14	; () banked
  4188   001EDA  81DA               	bsf	218,0,b	;volatile
  4189   001EDC                     
  4190                           ; BSR set to: 14
  4191   001EDC  0012               	return		;funcret
  4192   001EDE                     __end_of_I2C_2_Master_Start:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _I2C_2_Master_Idle *****************
  4196 ;; Defined at:
  4197 ;;		line 22 in file "i2c.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4215 ;;Total ram usage:        1 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; Hardware stack levels required when called: 1
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_I2C_2_Master_Start
  4222 ;;		_I2C_2_Master_RepStart
  4223 ;;		_I2C_2_Master_Stop
  4224 ;;		_I2C_2_Master_Write
  4225 ;;		_I2C_2_Master_Read
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text30
  4230   001DDA                     __ptext30:
  4231                           	callstack 0
  4232   001DDA                     _I2C_2_Master_Idle:
  4233                           	callstack 27
  4234   001DDA                     l145:
  4235   001DDA  010E               	movlb	14	; () banked
  4236   001DDC  B5D8               	btfsc	216,2,b	;volatile
  4237   001DDE  EFF3  F00E         	goto	u971
  4238   001DE2  EFF5  F00E         	goto	u970
  4239   001DE6                     u971:
  4240   001DE6  EFED  F00E         	goto	l145
  4241   001DEA                     u970:
  4242   001DEA                     
  4243                           ; BSR set to: 14
  4244   001DEA  CEDA F004          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4245   001DEE  0E1F               	movlw	31
  4246   001DF0  1604               	andwf	??_I2C_2_Master_Idle^0,f,c
  4247   001DF2  A4D8               	btfss	status,2,c
  4248   001DF4  EFFE  F00E         	goto	u981
  4249   001DF8  EF00  F00F         	goto	u980
  4250   001DFC                     u981:
  4251   001DFC  EFED  F00E         	goto	l145
  4252   001E00                     u980:
  4253   001E00                     
  4254                           ; BSR set to: 14
  4255   001E00  0012               	return		;funcret
  4256   001E02                     __end_of_I2C_2_Master_Idle:
  4257                           	callstack 0
  4258                           
  4259 ;; *************** function _I2C_2_Master_Init *****************
  4260 ;; Defined at:
  4261 ;;		line 4 in file "i2c.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;		None
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;		None
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      void 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;Total ram usage:        0 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 1
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_color_click_init
  4286 ;;		_main
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text31
  4291   001D86                     __ptext31:
  4292                           	callstack 0
  4293   001D86                     _I2C_2_Master_Init:
  4294                           	callstack 28
  4295   001D86                     
  4296                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4297   001D86  010E               	movlb	14	; () banked
  4298   001D88  51D9               	movf	217,w,b	;volatile
  4299   001D8A  0BF0               	andlw	-16
  4300   001D8C  0908               	iorlw	8
  4301   001D8E  6FD9               	movwf	217,b	;volatile
  4302   001D90                     
  4303                           ; BSR set to: 14
  4304                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4305   001D90  8BD9               	bsf	217,5,b	;volatile
  4306                           
  4307                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4308   001D92  0E9F               	movlw	159
  4309   001D94  6FD6               	movwf	214,b	;volatile
  4310   001D96                     
  4311                           ; BSR set to: 14
  4312                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4313   001D96  8A84               	bsf	132,5,c	;volatile
  4314   001D98                     
  4315                           ; BSR set to: 14
  4316                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4317   001D98  8C84               	bsf	132,6,c	;volatile
  4318   001D9A                     
  4319                           ; BSR set to: 14
  4320                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4321   001D9A  9BA7               	bcf	167,5,b	;volatile
  4322   001D9C                     
  4323                           ; BSR set to: 14
  4324                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4325   001D9C  9DA7               	bcf	167,6,b	;volatile
  4326                           
  4327                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4328   001D9E  0E1D               	movlw	29
  4329   001DA0  6F1D               	movwf	29,b	;volatile
  4330                           
  4331                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4332   001DA2  0E1E               	movlw	30
  4333   001DA4  6F1C               	movwf	28,b	;volatile
  4334                           
  4335                           ;i2c.c: 18:   RD5PPS=0x1C;
  4336   001DA6  0E1C               	movlw	28
  4337   001DA8  6F6F               	movwf	111,b	;volatile
  4338                           
  4339                           ;i2c.c: 19:   RD6PPS=0x1B;
  4340   001DAA  0E1B               	movlw	27
  4341   001DAC  6F70               	movwf	112,b	;volatile
  4342   001DAE                     
  4343                           ; BSR set to: 14
  4344   001DAE  0012               	return		;funcret
  4345   001DB0                     __end_of_I2C_2_Master_Init:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function _LEDSon_init *****************
  4349 ;; Defined at:
  4350 ;;		line 18 in file "LEDsOn.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		None
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; Hardware stack levels required when called: 1
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_main
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text32
  4379   001E28                     __ptext32:
  4380                           	callstack 0
  4381   001E28                     _LEDSon_init:
  4382                           	callstack 29
  4383   001E28                     
  4384                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  4385   001E28  9288               	bcf	136,1,c	;volatile
  4386                           
  4387                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  4388   001E2A  9088               	bcf	136,0,c	;volatile
  4389                           
  4390                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  4391   001E2C  9884               	bcf	132,4,c	;volatile
  4392                           
  4393                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  4394   001E2E  9684               	bcf	132,3,c	;volatile
  4395                           
  4396                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  4397   001E30  9086               	bcf	134,0,c	;volatile
  4398                           
  4399                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  4400   001E32  9287               	bcf	135,1,c	;volatile
  4401                           
  4402                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  4403   001E34  9E86               	bcf	134,7,c	;volatile
  4404                           
  4405                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  4406   001E36  9881               	bcf	129,4,c	;volatile
  4407                           
  4408                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 0;
  4409   001E38  9E7E               	bcf	126,7,c	;volatile
  4410                           
  4411                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 0;
  4412   001E3A  927F               	bcf	127,1,c	;volatile
  4413                           
  4414                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 0;
  4415   001E3C  9879               	bcf	121,4,c	;volatile
  4416                           
  4417                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  4418   001E3E  987C               	bcf	124,4,c	;volatile
  4419                           
  4420                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  4421   001E40  9280               	bcf	128,1,c	;volatile
  4422                           
  4423                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  4424   001E42  907E               	bcf	126,0,c	;volatile
  4425                           
  4426                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  4427   001E44  9080               	bcf	128,0,c	;volatile
  4428                           
  4429                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  4430   001E46  967C               	bcf	124,3,c	;volatile
  4431   001E48  0012               	return		;funcret
  4432   001E4A                     __end_of_LEDSon_init:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function _Interrupts_init *****************
  4436 ;; Defined at:
  4437 ;;		line 7 in file "interrupts.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;		None
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4455 ;;Total ram usage:        0 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 1
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text33
  4466   001DB0                     __ptext33:
  4467                           	callstack 0
  4468   001DB0                     _Interrupts_init:
  4469                           	callstack 29
  4470   001DB0                     
  4471                           ;interrupts.c: 23:     TMR0IE=1;
  4472   001DB0  010E               	movlb	14	; () banked
  4473   001DB2  8B29               	bsf	41,5,b	;volatile
  4474   001DB4                     
  4475                           ; BSR set to: 14
  4476                           ;interrupts.c: 24:     T0CON1bits.T0CS=0b010;
  4477   001DB4  50D6               	movf	214,w,c	;volatile
  4478   001DB6  0B1F               	andlw	-225
  4479   001DB8  0940               	iorlw	64
  4480   001DBA  6ED6               	movwf	214,c	;volatile
  4481   001DBC                     
  4482                           ; BSR set to: 14
  4483                           ;interrupts.c: 25:     T0CON1bits.T0ASYNC=1;
  4484   001DBC  88D6               	bsf	214,4,c	;volatile
  4485                           
  4486                           ;interrupts.c: 26:     T0CON1bits.T0CKPS=0b0101;
  4487   001DBE  50D6               	movf	214,w,c	;volatile
  4488   001DC0  0BF0               	andlw	-16
  4489   001DC2  0905               	iorlw	5
  4490   001DC4  6ED6               	movwf	214,c	;volatile
  4491   001DC6                     
  4492                           ; BSR set to: 14
  4493                           ;interrupts.c: 27:     T0CON0bits.T016BIT=1;
  4494   001DC6  88D5               	bsf	213,4,c	;volatile
  4495   001DC8                     
  4496                           ; BSR set to: 14
  4497                           ;interrupts.c: 28:     IPR0bits.TMR0IP = 0;
  4498   001DC8  9B1F               	bcf	31,5,b	;volatile
  4499                           
  4500                           ;interrupts.c: 29:     TMR0H=0b00111100;
  4501   001DCA  0E3C               	movlw	60
  4502   001DCC  6ED4               	movwf	212,c	;volatile
  4503                           
  4504                           ;interrupts.c: 30:     TMR0L=0b10101111;
  4505   001DCE  0EAF               	movlw	175
  4506   001DD0  6ED3               	movwf	211,c	;volatile
  4507   001DD2                     
  4508                           ; BSR set to: 14
  4509                           ;interrupts.c: 31:     T0CON0bits.T0EN=1;
  4510   001DD2  8ED5               	bsf	213,7,c	;volatile
  4511   001DD4                     
  4512                           ; BSR set to: 14
  4513                           ;interrupts.c: 34:     INTCONbits.GIEL = 1;
  4514   001DD4  8CF2               	bsf	242,6,c	;volatile
  4515   001DD6                     
  4516                           ; BSR set to: 14
  4517                           ;interrupts.c: 35:     INTCONbits.GIEH=1;}
  4518   001DD6  8EF2               	bsf	242,7,c	;volatile
  4519   001DD8                     
  4520                           ; BSR set to: 14
  4521   001DD8  0012               	return		;funcret
  4522   001DDA                     __end_of_Interrupts_init:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _LowISR *****************
  4526 ;; Defined at:
  4527 ;;		line 76 in file "interrupts.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4545 ;;Total ram usage:        3 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		Interrupt level 1
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	intcodelo
  4555   000018                     __pintcodelo:
  4556                           	callstack 0
  4557   000018                     _LowISR:
  4558                           	callstack 22
  4559                           
  4560                           ; BSR set to: 14
  4561                           ;incstack = 0
  4562   000018  805B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4563   00001A  CFD8 F001          	movff	status,??_LowISR
  4564   00001E  CFE8 F002          	movff	wreg,??_LowISR+1
  4565   000022  CFE0 F003          	movff	bsr,??_LowISR+2
  4566   000026                     
  4567                           ;interrupts.c: 79:     if(TMR0IF){
  4568   000026  010E               	movlb	14	; () banked
  4569   000028  AB33               	btfss	51,5,b	;volatile
  4570   00002A  EF19  F000         	goto	i1u144_21
  4571   00002E  EF1B  F000         	goto	i1u144_20
  4572   000032                     i1u144_21:
  4573   000032  EF26  F000         	goto	i1l456
  4574   000036                     i1u144_20:
  4575   000036                     
  4576                           ; BSR set to: 14
  4577                           ;interrupts.c: 80:     TMR0H=0b00111100;
  4578   000036  0E3C               	movlw	60
  4579   000038  6ED4               	movwf	212,c	;volatile
  4580                           
  4581                           ;interrupts.c: 81:     TMR0L=0b10101111;
  4582   00003A  0EAF               	movlw	175
  4583   00003C  6ED3               	movwf	211,c	;volatile
  4584                           
  4585                           ;interrupts.c: 86:         TimerFlag=1;
  4586   00003E  0E00               	movlw	0
  4587   000040  0101               	movlb	1	; () banked
  4588   000042  6FCE               	movwf	(_TimerFlag+1)& (0+255),b
  4589   000044  0E01               	movlw	1
  4590   000046  6FCD               	movwf	_TimerFlag& (0+255),b
  4591   000048                     
  4592                           ; BSR set to: 1
  4593                           ;interrupts.c: 88:        TMR0IF=0;
  4594   000048  010E               	movlb	14	; () banked
  4595   00004A  9B33               	bcf	51,5,b	;volatile
  4596   00004C                     i1l456:
  4597                           
  4598                           ; BSR set to: 14
  4599   00004C  C003  FFE0         	movff	??_LowISR+2,bsr
  4600   000050  C002  FFE8         	movff	??_LowISR+1,wreg
  4601   000054  C001  FFD8         	movff	??_LowISR,status
  4602   000058  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4603   00005A  0010               	retfie	
  4604   00005C                     __end_of_LowISR:
  4605                           	callstack 0
  4606                           
  4607                           	psect	rparam
  4608   000000                     
  4609                           	psect	temp
  4610   00005B                     btemp:
  4611                           	callstack 0
  4612   00005B                     	ds	1
  4613   000000                     int$flags	set	btemp
  4614   000000                     wtemp8	set	btemp+1
  4615   000000                     ttemp5	set	btemp+1
  4616   000000                     ttemp6	set	btemp+4
  4617   000000                     ttemp7	set	btemp+8
  4618                           
  4619                           	psect	idloc
  4620                           
  4621                           ;Config register IDLOC0 @ 0x200000
  4622                           ;	unspecified, using default values
  4623   200000                     	org	2097152
  4624   200000  0FFF               	dw	4095
  4625                           
  4626                           ;Config register IDLOC1 @ 0x200002
  4627                           ;	unspecified, using default values
  4628   200002                     	org	2097154
  4629   200002  0FFF               	dw	4095
  4630                           
  4631                           ;Config register IDLOC2 @ 0x200004
  4632                           ;	unspecified, using default values
  4633   200004                     	org	2097156
  4634   200004  0FFF               	dw	4095
  4635                           
  4636                           ;Config register IDLOC3 @ 0x200006
  4637                           ;	unspecified, using default values
  4638   200006                     	org	2097158
  4639   200006  0FFF               	dw	4095
  4640                           
  4641                           ;Config register IDLOC4 @ 0x200008
  4642                           ;	unspecified, using default values
  4643   200008                     	org	2097160
  4644   200008  0FFF               	dw	4095
  4645                           
  4646                           ;Config register IDLOC5 @ 0x20000A
  4647                           ;	unspecified, using default values
  4648   20000A                     	org	2097162
  4649   20000A  0FFF               	dw	4095
  4650                           
  4651                           ;Config register IDLOC6 @ 0x20000C
  4652                           ;	unspecified, using default values
  4653   20000C                     	org	2097164
  4654   20000C  0FFF               	dw	4095
  4655                           
  4656                           ;Config register IDLOC7 @ 0x20000E
  4657                           ;	unspecified, using default values
  4658   20000E                     	org	2097166
  4659   20000E  0FFF               	dw	4095
  4660                           
  4661                           	psect	config
  4662                           
  4663                           ;Config register CONFIG1L @ 0x300000
  4664                           ;	External Oscillator mode Selection bits
  4665                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4666                           ;	Power-up default value for COSC bits
  4667                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4668   300000                     	org	3145728
  4669   300000  AA                 	db	170
  4670                           
  4671                           ;Config register CONFIG1H @ 0x300001
  4672                           ;	unspecified, using default values
  4673                           ;	Clock Out Enable bit
  4674                           ;	CLKOUTEN = 0x1, unprogrammed default
  4675                           ;	Clock Switch Enable bit
  4676                           ;	CSWEN = 0x1, unprogrammed default
  4677                           ;	Fail-Safe Clock Monitor Enable bit
  4678                           ;	FCMEN = 0x1, unprogrammed default
  4679   300001                     	org	3145729
  4680   300001  FF                 	db	255
  4681                           
  4682                           ;Config register CONFIG2L @ 0x300002
  4683                           ;	unspecified, using default values
  4684                           ;	Master Clear Enable bit
  4685                           ;	MCLRE = 0x1, unprogrammed default
  4686                           ;	Power-up Timer Enable bit
  4687                           ;	PWRTE = 0x1, unprogrammed default
  4688                           ;	Low-power BOR enable bit
  4689                           ;	LPBOREN = 0x1, unprogrammed default
  4690                           ;	Brown-out Reset Enable bits
  4691                           ;	BOREN = 0x3, unprogrammed default
  4692   300002                     	org	3145730
  4693   300002  FF                 	db	255
  4694                           
  4695                           ;Config register CONFIG2H @ 0x300003
  4696                           ;	unspecified, using default values
  4697                           ;	Brown Out Reset Voltage selection bits
  4698                           ;	BORV = 0x3, unprogrammed default
  4699                           ;	ZCD Disable bit
  4700                           ;	ZCD = 0x1, unprogrammed default
  4701                           ;	PPSLOCK bit One-Way Set Enable bit
  4702                           ;	PPS1WAY = 0x1, unprogrammed default
  4703                           ;	Stack Full/Underflow Reset Enable bit
  4704                           ;	STVREN = 0x1, unprogrammed default
  4705                           ;	Debugger Enable bit
  4706                           ;	DEBUG = 0x1, unprogrammed default
  4707                           ;	Extended Instruction Set Enable bit
  4708                           ;	XINST = 0x1, unprogrammed default
  4709   300003                     	org	3145731
  4710   300003  FF                 	db	255
  4711                           
  4712                           ;Config register CONFIG3L @ 0x300004
  4713                           ;	WDT Period Select bits
  4714                           ;	WDTCPS = 0x1F, unprogrammed default
  4715                           ;	WDT operating mode
  4716                           ;	WDTE = OFF, WDT Disabled
  4717   300004                     	org	3145732
  4718   300004  9F                 	db	159
  4719                           
  4720                           ;Config register CONFIG3H @ 0x300005
  4721                           ;	unspecified, using default values
  4722                           ;	WDT Window Select bits
  4723                           ;	WDTCWS = 0x7, unprogrammed default
  4724                           ;	WDT input clock selector
  4725                           ;	WDTCCS = 0x7, unprogrammed default
  4726   300005                     	org	3145733
  4727   300005  FF                 	db	255
  4728                           
  4729                           ;Config register CONFIG4L @ 0x300006
  4730                           ;	unspecified, using default values
  4731                           ;	Write Protection Block 0
  4732                           ;	WRT0 = 0x1, unprogrammed default
  4733                           ;	Write Protection Block 1
  4734                           ;	WRT1 = 0x1, unprogrammed default
  4735                           ;	Write Protection Block 2
  4736                           ;	WRT2 = 0x1, unprogrammed default
  4737                           ;	Write Protection Block 3
  4738                           ;	WRT3 = 0x1, unprogrammed default
  4739                           ;	Write Protection Block 3
  4740                           ;	WRT4 = 0x1, unprogrammed default
  4741                           ;	Write Protection Block 3
  4742                           ;	WRT5 = 0x1, unprogrammed default
  4743                           ;	Write Protection Block 3
  4744                           ;	WRT6 = 0x1, unprogrammed default
  4745                           ;	Write Protection Block 3
  4746                           ;	WRT7 = 0x1, unprogrammed default
  4747   300006                     	org	3145734
  4748   300006  FF                 	db	255
  4749                           
  4750                           ;Config register CONFIG4H @ 0x300007
  4751                           ;	unspecified, using default values
  4752                           ;	Configuration Register Write Protection bit
  4753                           ;	WRTC = 0x1, unprogrammed default
  4754                           ;	Boot Block Write Protection bit
  4755                           ;	WRTB = 0x1, unprogrammed default
  4756                           ;	Data EEPROM Write Protection bit
  4757                           ;	WRTD = 0x1, unprogrammed default
  4758                           ;	Scanner Enable bit
  4759                           ;	SCANE = 0x1, unprogrammed default
  4760                           ;	Low Voltage Programming Enable bit
  4761                           ;	LVP = 0x1, unprogrammed default
  4762   300007                     	org	3145735
  4763   300007  FF                 	db	255
  4764                           
  4765                           ;Config register CONFIG5L @ 0x300008
  4766                           ;	unspecified, using default values
  4767                           ;	UserNVM Program Memory Code Protection bit
  4768                           ;	CP = 0x1, unprogrammed default
  4769                           ;	DataNVM Memory Code Protection bit
  4770                           ;	CPD = 0x1, unprogrammed default
  4771   300008                     	org	3145736
  4772   300008  FF                 	db	255
  4773                           
  4774                           ;Config register CONFIG5H @ 0x300009
  4775                           ;	unspecified, using default values
  4776   300009                     	org	3145737
  4777   300009  FF                 	db	255
  4778                           
  4779                           ;Config register CONFIG6L @ 0x30000A
  4780                           ;	unspecified, using default values
  4781                           ;	Table Read Protection Block 0
  4782                           ;	EBTR0 = 0x1, unprogrammed default
  4783                           ;	Table Read Protection Block 1
  4784                           ;	EBTR1 = 0x1, unprogrammed default
  4785                           ;	Table Read Protection Block 2
  4786                           ;	EBTR2 = 0x1, unprogrammed default
  4787                           ;	Table Read Protection Block 3
  4788                           ;	EBTR3 = 0x1, unprogrammed default
  4789                           ;	Table Read Protection Block 4
  4790                           ;	EBTR4 = 0x1, unprogrammed default
  4791                           ;	Table Read Protection Block 5
  4792                           ;	EBTR5 = 0x1, unprogrammed default
  4793                           ;	Table Read Protection Block 6
  4794                           ;	EBTR6 = 0x1, unprogrammed default
  4795                           ;	Table Read Protection Block 7
  4796                           ;	EBTR7 = 0x1, unprogrammed default
  4797   30000A                     	org	3145738
  4798   30000A  FF                 	db	255
  4799                           
  4800                           ;Config register CONFIG6H @ 0x30000B
  4801                           ;	unspecified, using default values
  4802                           ;	Boot Block Table Read Protection bit
  4803                           ;	EBTRB = 0x1, unprogrammed default
  4804   30000B                     	org	3145739
  4805   30000B  FF                 	db	255
  4806                           tosu	equ	0xFFF
  4807                           tosh	equ	0xFFE
  4808                           tosl	equ	0xFFD
  4809                           stkptr	equ	0xFFC
  4810                           pclatu	equ	0xFFB
  4811                           pclath	equ	0xFFA
  4812                           pcl	equ	0xFF9
  4813                           tblptru	equ	0xFF8
  4814                           tblptrh	equ	0xFF7
  4815                           tblptrl	equ	0xFF6
  4816                           tablat	equ	0xFF5
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           indf0	equ	0xFEF
  4820                           postinc0	equ	0xFEE
  4821                           postdec0	equ	0xFED
  4822                           preinc0	equ	0xFEC
  4823                           plusw0	equ	0xFEB
  4824                           fsr0h	equ	0xFEA
  4825                           fsr0l	equ	0xFE9
  4826                           wreg	equ	0xFE8
  4827                           indf1	equ	0xFE7
  4828                           postinc1	equ	0xFE6
  4829                           postdec1	equ	0xFE5
  4830                           preinc1	equ	0xFE4
  4831                           plusw1	equ	0xFE3
  4832                           fsr1h	equ	0xFE2
  4833                           fsr1l	equ	0xFE1
  4834                           bsr	equ	0xFE0
  4835                           indf2	equ	0xFDF
  4836                           postinc2	equ	0xFDE
  4837                           postdec2	equ	0xFDD
  4838                           preinc2	equ	0xFDC
  4839                           plusw2	equ	0xFDB
  4840                           fsr2h	equ	0xFDA
  4841                           fsr2l	equ	0xFD9
  4842                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        18
    BSS         249
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      90
    BANK0           160     31     155
    BANK1           256    187     207
    BANK2           256      0     120
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2335$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2286$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2286$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK1[20]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S525DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S525DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               216   216      0   10833
                                             85 COMRAM     2     2      0
                                              0 BANK1    187   187      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _LEDSon_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    6044
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5558
                                             83 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    5097
                                             65 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3877
                                             30 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     370
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3045
                                             16 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1422
                                              9 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              4 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              7 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              7 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              7 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              7 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              4 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              7 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              5 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _LowISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      78       9       46.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BB      CF       7       80.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5A       1       95.7%
BITBIGSFRllhhhh     52      0       0      42        0.0%
BITBIGSFRllhhhl     37      0       0      44        0.0%
BITBIGSFRllhhhl     2D      0       0      47        0.0%
BITBIGSFRllllhl     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllhhhl     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRllhhl      11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      9      0       0      58        0.0%
BITBIGSFRllhhhl      8      0       0      45        0.0%
BITBIGSFRlllllh      6      0       0      60        0.0%
BITBIGSFRllllhh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRlllhl       5      0       0      52        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      57        0.0%
BITBIGSFRlllhh       3      0       0      51        0.0%
BITBIGSFRllhhhh      2      0       0      41        0.0%
BITBIGSFRllhhhl      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRllhhhh      1      0       0      40        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllllhl      1      0       0      59        0.0%
BITBIGSFRllhhhl      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     23C      62        0.0%
DATA                 0      0     23C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 11:47:00 2022

               _color_read_Red 1ACE                _color_read_Blue 1BBE                             l22 1E88  
                           l31 1C0C                             l25 1B1C                             l34 1BBC  
                           l19 1D54                             l28 1B6C                             l86 1524  
                           l79 1938                             bsr 000FE0            ___wmul@multiplicand 0006  
             _color_read_Clear 1B6E               _color_read_Green 1B1E              ??_Interrupts_init 0004  
                          l142 1DAE                            l151 1EDC                            l160 1EBE  
                          l145 1DDA                            l154 1EC8                            l163 1CE0  
                          l148 1E00                            l157 1ED2                            l450 1DD8  
                          l266 1E48                            l375 1E68                            l384 1E8C  
                          l393 1D84                            l387 1EA0                            l459 1E26  
                          l573 13B8                            l586 1688                            l950 1A1E  
                          l957 1A26                            u800 1C9E                            u801 1C9A  
                          u810 1CFC                            u811 1CF8                            u820 1244  
                          u900 156A                            u821 1240                            u901 1566  
                          u830 1276                            u910 15A8                            u831 1272  
                          u911 15A4                            u920 15D2                            u760 17FA  
                          u841 12A0                            u921 15CE                            u761 17F6  
                          u850 12C4                            u930 1600                            u770 180C  
                          u851 12C0                            u931 15FC                            u771 1808  
                          u860 12EE                            u940 1648                            u780 1834  
                          u861 12EA                            u941 1644                            u781 1830  
                          u870 132E                            u790 186A                            u950 1948  
                          u871 132A                            u791 1866                            u951 1944  
                          u880 1378                            u960 199E                            u881 1374  
                          u961 199A                            u970 1DEA                            u890 1538  
                          u971 1DE6                            u891 1534                            u980 1E00  
                          u981 1DFC                            u990 0E48                            u991 0E42  
                          _abs 1CE2                            _pad 193A                            wreg 000FE8  
                         l1202 1A7A                           ?_abs 0016                           l2101 186A  
                         l1134 1D18                           l1214 18B0                           l1222 1C9E  
                         l2111 1C7E                           l1144 1ACC                           l2121 1244  
                         l1137 1D20                           l2113 1CE2                           l1225 1EDE  
                         l2105 1C5C                           l2201 1954                           l3001 113A  
                         l1170 19B2                           l2211 1DDA                           l2131 129A  
                         l2123 1264                           l2115 1CFC                           l2107 1C68  
                         l2203 1968                           l3011 116A                           l3003 113C  
                         l2213 1DEA                           l2141 12EE                           l2133 12A6  
                         l2125 1268                           l2117 1232                           l2109 1C7A  
                         l2205 197C                           l2221 0E5C                           l3021 11B8  
                         l3013 118E                           l3005 113E                           l1166 195C  
                         l2311 1D90                           l2151 1362                           l2143 1300  
                         l2135 12C4                           l2127 1276                           l2119 1236  
                         l2207 1980                           l2231 0ECA                           l1175 0EA4  
                         l2223 0E7C                           l2215 0E18                           l2303 17BA  
                         l3023 11C4                           l3015 1198                           l3007 1152  
                         l2313 1D96                           l2321 1E6C                           l2401 1B64  
                         l2145 132E                           l2137 12CC                           l2153 1368  
                         l2129 1296                           l2161 1526                           l2209 199E  
                         l2241 0F02                           l2233 0EDA                           l1177 0EAC  
                         l2225 0E98                           l2217 0E38                           l3025 11D0  
                         l3009 1156                           l3017 11A0                           l1178 0EF2  
                         l2315 1D98                           l2331 1CAE                           l2323 1EC0  
                         l2411 1B6E                           l2155 1378                           l2147 134E  
                         l2139 12E0                           l2171 156A                           l2163 152A  
                         l2091 17E8                           l2243 0F08                           l2251 0FFA  
                         l2235 0EE6                           l2227 0EB4                           l2219 0E4C  
                         l3027 1206                           l3019 11AC                           l1196 17E6  
                         l2317 1D9A                           l2309 1D86                           l2333 1CB6  
                         l2325 1EC4                           l2405 1BBE                           l2413 1BB4  
                         l2421 18E4                           l2341 1E8C                           l2157 1398  
                         l2149 1350                           l2181 15D2                           l2173 158A  
                         l2165 1538                           l2093 17FA                           l1189 1092  
                         l2261 1062                           l2253 1014                           l2245 0F8A  
                         l2237 0EEE                           l2229 0EC4                           l3029 1212  
                         l2319 1D9C                           l2271 1EB6                           l2335 1CDC  
                         l2327 1CA2                           l2407 1C04                           l2431 1920  
                         l2423 1908                           l2343 1E9C                           l2351 19B4  
                         l2191 1648                           l2183 1600                           l2175 15A8  
                         l2167 1558                           l2095 180C                           l2263 1072  
                         l2255 1032                           l2247 0F90                           l2239 0EFA  
                         l2273 1EBA                           l2337 1CDE                           l2329 1CA6  
                         l2433 192A                           l2425 1912                           l2417 18B2  
                         l2521 1E4A                           l2361 19EC                           l2353 19BC  
                         l2345 1E02                           l2441 13D6                           l2193 1668  
                         l2185 1620                           l2177 15B0                           l2169 155C  
                         l2097 1816                           l2257 104C                           l2249 0F96  
                         l2281 16B2                           l2267 1ED4                           l2275 1ECA  
                         l2435 192C                           l2427 1914                           l2419 18BA  
                         l2531 1E64                           l2523 1E54                           l2371 1A18  
                         l2363 19F2                           l2355 19CE                           l2347 1E1E  
                         l2451 14A0                           l2443 142A                           l2187 1632  
                         l2179 15C4                           l2099 1834                           l2259 105C  
                         l2291 1702                           l2283 16C0                           l2541 1DC6  
                         l2269 1ED8                           l2277 1ECE                           l2437 1936  
                         l2429 191E                           l2533 1E66                           l2525 1E56  
                         l2365 1A08                           l2357 19D6                           l2453 14E4  
                         l2445 143E                           l2189 1638                           l2197 193A  
                         l2293 1722                           l2285 16CE                           l2543 1DC8  
                         l2535 1DB0                           l2519 1E28                           l2391 1D4A  
                         l2383 1D22                           l2527 1E58                           l2367 1A10  
                         l2359 19DE                           l2447 1442                           l2439 13BA  
                         l2199 1948                           l2295 1778                           l2287 16D2  
                         l2279 168A                           l2545 1DD2                           l2537 1DB4  
                         l2385 1D26                           l2393 1ACE                           l2529 1E62  
                         l2369 1A12                           l2449 1484                           l2289 16E2  
                         l2547 1DD4                           l2539 1DBC                           l2387 1D30  
                         l2395 1B14                           l2563 1D56                           l2299 17A8  
                         l2549 1DD6                           l2389 1D40                           l2565 1D5A  
                         l2399 1B1E                           l2567 1D68                           l2569 1D6C  
                         l2921 1A34                           l2923 1A50                           l2931 1A8E  
                         l2925 1A70                           l2933 1A96                           l2941 1094  
                         ?_pad 0014                           l2919 1A28                           l2935 1A9E  
                         l2951 10A8                           l2943 1098                           l2937 1ABA  
                         l2929 1A7C                           l2961 10BE                           l2953 10AC  
                         l2945 109C                           l2971 10DC                           l2963 10C6  
                         l2955 10B0                           l2947 10A0                           l2981 110E  
                         l2973 10F0                           l2965 10CE                           l2957 10B6  
                         l2949 10A4                           l2991 1120                           l2983 1120  
                         l2975 10F6                           l2967 10D4                           l2959 10BA  
                         l2993 112A                           l2985 1120                           l2977 1102  
                         l2969 10D8                           l2995 112A                           l2987 1120  
                         l2979 110E                           l2997 1136                           l2989 1120  
                         l2999 1138                           STR_1 0E01                           u1000 0E4A  
                         u1010 0E5C                           u1011 0E58                           u1020 0E98  
                         u1100 1702                           u1021 0E94                           u1101 16FE  
                         u1030 0EC4                           u1110 1722                           u1031 0EC0  
                         u1111 171E                           u1120 1CCA                           u1200 14A0  
                         u1040 0EDA                           u1121 1CC2                           u1201 149C  
                         u1041 0ED6                           u1050 1014                           u1051 1010  
                         u1140 1E9C                           u1060 1032                   ?_LEDSon_init 0001  
                         u1141 1E98                           u1061 102E                           u1150 19CE  
                         u1070 104C                           u1151 19CA                           u1071 1048  
                         u1160 19EC                           u1080 105C                           u1161 19E8  
                         u1081 1058                           u1138 1CCC                           u1170 1A08  
                         u1090 16B2                           u1171 1A04                           u1091 16AE  
                         u1260 1D84                           u1500 117C                           u1261 1D80  
                         u1501 1174                           u1190 13D6                           u1191 13D2  
                 _BAUD4CONbits 000EE9                           u1450 1A70                           u1451 1A6C  
                         u1461 1118                           u1518 117E                           u1527 121C  
                         u1471 1130                           u1480 1152                           u1537 1D36  
                         u1481 114E                           u1490 116A                           _T2PR 000FBC  
                         u1491 1166                           abs@a 0016                           _dbuf 00BC  
                         _main 1094                           _dtoa 0E18                           _prec 00B2  
                         pad@i 001B                           pad@p 0018                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001D                           fsr2l 000FD9                           btemp 005B  
                         prodh 000FF4                           prodl 000FF3                           start 005C  
       __end_of_color_read_Red 1B1E           _response_in_progress 00B8                   ___param_bank 000000  
                        ??_abs 0018                          ??_pad 001A                __end_of___aodiv 13BA  
                        ?_main 0001                          ?_dtoa 001F                __end_of___aomod 168A  
              __end_of___lwdiv 1A28                          i1l456 004C                   vfpfcnvrt@fmt 0044  
                        _TMR0H 000FD4                          _TMR0L 000FD3                   main@red_read 019E  
      __end_of_sendCharSerial4 1EA2     __end_of_I2C_2_Master_Start 1EDE     __end_of_I2C_2_Master_Write 1EC0  
                        _flags 00BA                          _fputc 17E8                          _fputs 1C5C  
                        pad@fp 0014                          _width 00B0                          _putch 1EDE  
                        dtoa@d 0021                          dtoa@i 003F                          dtoa@n 0037  
                        dtoa@p 0033                          dtoa@s 0041                          dtoa@w 0035  
                        tablat 000FF5                          plusw1 000FE3                          plusw2 000FDB  
                        ttemp5 005C                          ttemp6 005F                          ttemp7 0063  
                        status 000FD8                          wtemp8 005C                __end_of_sprintf 1ACE  
      __end_of_color_read_Blue 1C0E          _I2C_2_Master_RepStart 1EC0                ?_color_read_Red 0008  
              __initialization 1C0E                   __end_of_main 1232                   __end_of_dtoa 1094  
                       ??_main 0056                         ??_dtoa 0029                  __activetblptr 000003  
                main@blue_read 01A2                   ?_setMotorPWM 0011                         ?_fputc 0004  
                       ?_fputs 000D                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                 main@TimerCount 01A6  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RD6PPS 000E70                         _RE4PPS 000E76                         i1l2913 0026  
                       i1l2915 0036                         i1l2917 0048                         _RG6PPS 000E88  
     __end_of_color_click_init 1D56                         _TMR0IE 00714D                         _TMR0IF 00719D  
                       _RX4PPS 000E15                         _TX4REG 000EE4                         _LowISR 0018  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0054                      ??___aodiv 0014  
                    ??___aomod 0014                         ___wmul 1E02                      ??___lwdiv 000E  
                       clear_0 1C34                         clear_1 1C46                         isa$std 000001  
                       pad@buf 0016                         dtoa@fp 001F                         fputc@c 0004  
                       fputs@c 0011                         fputs@i 0012                         fputs@s 000D  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 1A7C              ??_initDCmotorsPWM 0004                      ??_sprintf 0056  
                   __accesstop 0060        __end_of__initialization 1C52       __end_of_color_read_Clear 1BBE  
     __end_of_color_read_Green 1B6E         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0008                _Interrupts_init 1DB0                 __pcstackCOMRAM 0001  
                 __pidataBANK1 1EA2                  __end_of_fputc 18B2                  __end_of_fputs 1CA0  
                __end_of_putch 1EE0                 main@clear_read 01A4                        ??_fputc 0008  
                      ??_fputs 0011                        ??_putch 0004                     __pbssBANK0 0060  
                   __pbssBANK1 01CD                     __pbssBANK2 0200                        ?_LowISR 0001  
            _color_writetoaddr 1E6A                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0006  
                      ?___wmul 0004            ??_color_writetoaddr 0007                 main@green_read 01A0  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 1DDA         color_writetoaddr@value 0006  
             ??_color_read_Red 000A      __end_of_color_writetoaddr 1E8A             _I2C_2_Master_Start 1ED4  
                   _initUSART4 1E4A             _I2C_2_Master_Write 1EB4                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000D        sendStringSerial4@string 0005  
                      ___aodiv 1232                        ___aomod 1526            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 19B4            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00DC  
                 __psmallconst 0E00                        __pcinit 1C0E                        __ramtop 0E00  
                      __ptext0 1094                        __ptext1 1A7C                        __ptext2 1A28  
                      __ptext3 168A                        __ptext4 0E18                        __ptext5 193A  
                      __ptext6 1C5C                        __ptext7 17E8                        __ptext8 1EDE  
                      __ptext9 1CE2                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005A                        main@buf 018A                        _sprintf 1A7C  
         ??_I2C_2_Master_Start 0005           ??_I2C_2_Master_Write 0005           end_of_initialization 1C52  
                      fputc@fp 0006                        fputs@fp 000F              ?_color_click_init 0001  
           ??_color_click_init 0008                  _card_detected 00B6              __end_of_vfpfcnvrt 17E8  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 004A  
                   main@F14645 01BB                     main@F14658 0200                     ??_vfprintf 0054  
              _initDCmotorsPWM 18B2             setMotorPWM@negDuty 0016                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0015                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88            main@expected_values 0178       color_writetoaddr@address 0007  
      ??_I2C_2_Master_RepStart 0005               ?_Interrupts_init 0001                    _CCP1CONbits 000FAB  
            ?_color_read_Clear 0008                   _EUSART4RXbuf 009C                   _EUSART4TXbuf 0060  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0008                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0004  
                   main@motorL 01A9                     main@motorR 01B2             ??_color_read_Clear 000A  
           ??_color_read_Green 000A                 __end_of_LowISR 005C                    vfpfcnvrt@ap 0046  
                  vfpfcnvrt@cp 0052                    vfpfcnvrt@fp 0042                 __end_of___wmul 1E28  
          color_read_Clear@tmp 000D            start_initialization 1C0E                    __end_of_abs 1D22  
                  __end_of_pad 19B4                  _TxBufWriteCnt 0059                  ??_LEDSon_init 0004  
          color_read_Green@tmp 000D                       ??_LowISR 0001        __end_of_initDCmotorsPWM 193A  
                  vfprintf@fmt 00DE                      _TimerFlag 01CD                       ??___wmul 0008  
                  __pdataBANK1 01BB                    __pbssCOMRAM 0058                  __pcstackBANK0 00DC  
                __pcstackBANK1 0100               ___aodiv@dividend 0004                      _card_seen 00B4  
          __end_of_LEDSon_init 1E4A               ___lwdiv@dividend 000A                      _dtoa$2363 0031  
                     ?___aodiv 0004                       ?___aomod 0004               ___aodiv@quotient 0016  
                     ?___lwdiv 000A                    __pintcodelo 0018           I2C_2_Master_Read@ack 0006  
         I2C_2_Master_Read@tmp 0007                    __smallconst 0E00              _I2C_2_Master_Idle 1DDA  
            _I2C_2_Master_Init 1D86              _I2C_2_Master_Read 1CA0              _I2C_2_Master_Stop 1ECA  
                 _RxBufReadCnt 00BB            main@ReturnHomeArray 0100             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0013  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000E                       ?_sprintf 00E2  
            _sendStringSerial4 1D56            ??_I2C_2_Master_Idle 0004            ??_I2C_2_Master_Init 0004  
          ??_I2C_2_Master_Read 0005                 ___wmul@product 0008                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0005                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                       _IPR0bits 000E1F  
           ?_sendStringSerial4 0005                       _PIE4bits 000E2D                       i1u144_20 0036  
                     i1u144_21 0032                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0004                       _SSP2CON2 000EDA            ??_sendStringSerial4 0007  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 168A      __end_of_I2C_2_Master_Idle 1E02  
    __end_of_I2C_2_Master_Init 1DB0      __end_of_I2C_2_Master_Read 1CE2              ___wmul@multiplier 0004  
    __end_of_I2C_2_Master_Stop 1ED4                   setMotorPWM@m 0011    I2C_2_Master_Write@data_byte 0005  
            ??_color_read_Blue 000A                   _TxBufReadCnt 0058                      copy_data0 1C22  
    __end_of_sendStringSerial4 1D86                    _LEDSon_init 1E28  __end_of_I2C_2_Master_RepStart 1ECA  
           color_read_Blue@tmp 000D            __end_of_setMotorPWM 1526                   ??_initUSART4 0004  
                     __Hrparam 0000                     vfprintf@ap 00E0                       __Lrparam 0000  
                   vfprintf@fp 00DC                     ?_vfpfcnvrt 0042                ___aodiv@divisor 000C  
              ___aodiv@counter 0014                     _ANSELDbits 000EA7                     sprintf@fmt 00E4  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                ___lwdiv@divisor 000C  
           __end_of_initUSART4 1E6A                ___lwdiv@counter 0010                       __ptext10 1526  
                     __ptext11 1232                       __ptext20 1B1E                       __ptext12 13BA  
                     __ptext21 1B6E                       __ptext13 1E02                       __ptext30 1DDA  
                     __ptext22 1BBE                       __ptext14 19B4                       __ptext31 1D86  
                     __ptext23 1EC0                       __ptext15 1D56                       __ptext32 1E28  
                     __ptext24 1CA0                       __ptext16 1E8A                       __ptext33 1DB0  
                     __ptext25 1D22                       __ptext17 1E4A                       __ptext26 1E6A  
                     __ptext18 18B2                       __ptext27 1EB4                       __ptext19 1ACE  
                     __ptext28 1ECA                       __ptext29 1ED4                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005B                       _vfprintf 1A28               ___aomod@dividend 0004  
                   _INTCONbits 000FF2                    _setMotorPWM 13BA                       intlevel1 0000  
                    sprintf@ap 00EE                ___aomod@divisor 000C                    ??_vfpfcnvrt 0048  
              ___aomod@counter 0014               _color_click_init 1D22                       sprintf@f 00F0  
                     sprintf@s 00E2                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0015                _sendCharSerial4 1E8A  
                 ___aomod@sign 0015                   main@PWMcycle 01A8  
