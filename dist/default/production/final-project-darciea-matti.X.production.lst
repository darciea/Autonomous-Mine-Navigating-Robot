

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 20:23:58 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Version 2.35
    65                           ; Generated 05/05/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F67K40 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     _TRISBbits	set	3970
   100   000000                     _TX4REG	set	3812
   101   000000                     _RC4STAbits	set	3815
   102   000000                     _SP4BRGH	set	3814
   103   000000                     _LATGbits	set	3967
   104   000000                     _TRISAbits	set	3969
   105   000000                     _TRISFbits	set	3974
   106   000000                     _TRISDbits	set	3972
   107   000000                     _TRISGbits	set	3975
   108   000000                     _SSP2CON2bits	set	3802
   109   000000                     _INT1PPS	set	3569
   110   000000                     _RX4PPS	set	3605
   111   000000                     _SSP2CLKPPS	set	3612
   112   000000                     _SSP2DATPPS	set	3613
   113   000000                     _RC7PPS	set	3689
   114   000000                     _RE2PPS	set	3700
   115   000000                     _TRISCbits	set	3971
   116   000000                     _TRISEbits	set	3973
   117   000000                     _TRISHbits	set	3976
   118   000000                     _PORTFbits	set	3982
   119   000000                     _T2PR	set	4028
   120   000000                     _T2CONbits	set	4029
   121   000000                     _CCPR2H	set	4006
   122   000000                     _CCPR1H	set	4010
   123   000000                     _RE4PPS	set	3702
   124   000000                     _RG6PPS	set	3720
   125   000000                     _RD5PPS	set	3695
   126   000000                     _ANSELBbits	set	3738
   127   000000                     _ANSELDbits	set	3751
   128   000000                     _SSP2ADD	set	3798
   129   000000                     _SSP2CON1bits	set	3801
   130   000000                     _CCPR4H	set	3873
   131   000000                     _CCPR3H	set	3877
   132   000000                     _INTCONbits	set	4082
   133   000000                     _T2CLKCONbits	set	4031
   134   000000                     _T2HLTbits	set	4030
   135   000000                     _CCP1CONbits	set	4011
   136   000000                     _CCPTMRS0bits	set	4013
   137   000000                     _CCP2CONbits	set	4007
   138   000000                     _LATAbits	set	3961
   139   000000                     _LATDbits	set	3964
   140   000000                     _CCP3CONbits	set	3878
   141   000000                     _CCP4CONbits	set	3874
   142   000000                     _RC4REG	set	3811
   143   000000                     _SP4BRGL	set	3813
   144   000000                     _TX4STAbits	set	3816
   145   000000                     _BAUD4CONbits	set	3817
   146   000000                     _SSP2CON2	set	3802
   147   000000                     _SSP2STAT	set	3800
   148   000000                     _ANSELFbits	set	3764
   149   000000                     _SSP2BUF	set	3797
   150   000000                     _IPR0bits	set	3615
   151   000000                     _PIE0bits	set	3625
   152   000000                     _PIE4bits	set	3629
   153   000000                     _PIR4bits	set	3639
   154   000000                     _RC0PPS	set	3682
   155   000000                     _RD6PPS	set	3696
   156   000000                     _LATFbits	set	3966
   157   000000                     _LATHbits	set	3968
   158   000000                     _PIR0bits	set	3635
   159                           
   160                           	psect	smallconst
   161   000E00                     __psmallconst:
   162                           	callstack 0
   163   000E00  00                 	db	0
   164   000E01                     STR_1:
   165                           
   166                           ; BSR set to: 14
   167   000E01  0A                 	db	10
   168   000E02  20                 	db	32
   169   000E03  45                 	db	69	;'E'
   170   000E04  58                 	db	88	;'X'
   171   000E05  50                 	db	80	;'P'
   172   000E06  45                 	db	69	;'E'
   173   000E07  43                 	db	67	;'C'
   174   000E08  54                 	db	84	;'T'
   175   000E09  45                 	db	69	;'E'
   176   000E0A  44                 	db	68	;'D'
   177   000E0B  3A                 	db	58	;':'
   178   000E0C  20                 	db	32
   179   000E0D  52                 	db	82	;'R'
   180   000E0E  20                 	db	32
   181   000E0F  25                 	db	37
   182   000E10  64                 	db	100	;'d'
   183   000E11  2C                 	db	44
   184   000E12  20                 	db	32
   185   000E13  47                 	db	71	;'G'
   186   000E14  20                 	db	32
   187   000E15  25                 	db	37
   188   000E16  64                 	db	100	;'d'
   189   000E17  2C                 	db	44
   190   000E18  20                 	db	32
   191   000E19  42                 	db	66	;'B'
   192   000E1A  20                 	db	32
   193   000E1B  25                 	db	37
   194   000E1C  64                 	db	100	;'d'
   195   000E1D  20                 	db	32
   196   000E1E  20                 	db	32
   197   000E1F  43                 	db	67	;'C'
   198   000E20  41                 	db	65	;'A'
   199   000E21  52                 	db	82	;'R'
   200   000E22  44                 	db	68	;'D'
   201   000E23  3A                 	db	58	;':'
   202   000E24  20                 	db	32
   203   000E25  25                 	db	37
   204   000E26  64                 	db	100	;'d'
   205   000E27  20                 	db	32
   206   000E28  0A                 	db	10
   207   000E29  00                 	db	0
   208   000E2A                     
   209                           ; BSR set to: 14
   210   000E2A  0A                 	db	10
   211   000E2B  20                 	db	32
   212   000E2C  41                 	db	65	;'A'
   213   000E2D  56                 	db	86	;'V'
   214   000E2E  47                 	db	71	;'G'
   215   000E2F  3A                 	db	58	;':'
   216   000E30  20                 	db	32
   217   000E31  52                 	db	82	;'R'
   218   000E32  20                 	db	32
   219   000E33  25                 	db	37
   220   000E34  64                 	db	100	;'d'
   221   000E35  2C                 	db	44
   222   000E36  20                 	db	32
   223   000E37  47                 	db	71	;'G'
   224   000E38  20                 	db	32
   225   000E39  25                 	db	37
   226   000E3A  64                 	db	100	;'d'
   227   000E3B  2C                 	db	44
   228   000E3C  20                 	db	32
   229   000E3D  42                 	db	66	;'B'
   230   000E3E  20                 	db	32
   231   000E3F  25                 	db	37
   232   000E40  64                 	db	100	;'d'
   233   000E41  20                 	db	32
   234   000E42  0A                 	db	10
   235   000E43  00                 	db	0
   236   000E44                     STR_3:
   237                           
   238                           ; BSR set to: 14
   239   000E44  0A                 	db	10
   240   000E45  20                 	db	32
   241   000E46  45                 	db	69	;'E'
   242   000E47  78                 	db	120	;'x'
   243   000E48  70                 	db	112	;'p'
   244   000E49  65                 	db	101	;'e'
   245   000E4A  63                 	db	99	;'c'
   246   000E4B  74                 	db	116	;'t'
   247   000E4C  65                 	db	101	;'e'
   248   000E4D  64                 	db	100	;'d'
   249   000E4E  20                 	db	32
   250   000E4F  63                 	db	99	;'c'
   251   000E50  6C                 	db	108	;'l'
   252   000E51  65                 	db	101	;'e'
   253   000E52  61                 	db	97	;'a'
   254   000E53  72                 	db	114	;'r'
   255   000E54  3A                 	db	58	;':'
   256   000E55  20                 	db	32
   257   000E56  25                 	db	37
   258   000E57  64                 	db	100	;'d'
   259   000E58  20                 	db	32
   260   000E59  0A                 	db	10
   261   000E5A  00                 	db	0
   262   000E5B                     STR_2:
   263                           
   264                           ; BSR set to: 14
   265   000E5B  52                 	db	82	;'R'
   266   000E5C  61                 	db	97	;'a'
   267   000E5D  77                 	db	119	;'w'
   268   000E5E  20                 	db	32
   269   000E5F  25                 	db	37
   270   000E60  64                 	db	100	;'d'
   271   000E61  2C                 	db	44
   272   000E62  20                 	db	32
   273   000E63  25                 	db	37
   274   000E64  64                 	db	100	;'d'
   275   000E65  2C                 	db	44
   276   000E66  20                 	db	32
   277   000E67  25                 	db	37
   278   000E68  64                 	db	100	;'d'
   279   000E69  2C                 	db	44
   280   000E6A  20                 	db	32
   281   000E6B  25                 	db	37
   282   000E6C  64                 	db	100	;'d'
   283   000E6D  20                 	db	32
   284   000E6E  0A                 	db	10
   285   000E6F  00                 	db	0
   286   000E70                     
   287                           ; BSR set to: 14
   288   000E70  43                 	db	67	;'C'
   289   000E71  41                 	db	65	;'A'
   290   000E72  52                 	db	82	;'R'
   291   000E73  44                 	db	68	;'D'
   292   000E74  20                 	db	32
   293   000E75  25                 	db	37
   294   000E76  64                 	db	100	;'d'
   295   000E77  20                 	db	32
   296   000E78  0A                 	db	10
   297   000E79  00                 	db	0
   298   000E7A  00                 	db	0	; dummy byte at the end
   299   000000                     
   300                           ; #config settings
   301                           
   302                           	psect	cinit
   303   002276                     __pcinit:
   304                           	callstack 0
   305   002276                     start_initialization:
   306                           	callstack 0
   307   002276                     __initialization:
   308                           	callstack 0
   309                           
   310                           ; Clear objects allocated to BANK2 (60 bytes)
   311   002276  EE02  F000         	lfsr	0,__pbssBANK2
   312   00227A  0E3C               	movlw	60
   313   00227C                     clear_0:
   314   00227C  6AEE               	clrf	postinc0,c
   315   00227E  06E8               	decf	wreg,f,c
   316   002280  E1FD               	bnz	clear_0
   317                           
   318                           ; Clear objects allocated to BANK0 (61 bytes)
   319   002282  EE00  F060         	lfsr	0,__pbssBANK0
   320   002286  0E3D               	movlw	61
   321   002288                     clear_1:
   322   002288  6AEE               	clrf	postinc0,c
   323   00228A  06E8               	decf	wreg,f,c
   324   00228C  E1FD               	bnz	clear_1
   325                           
   326                           ; Clear objects allocated to COMRAM (4 bytes)
   327   00228E  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   328   002290  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   329   002292  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   330   002294  6A57               	clrf	__pbssCOMRAM& (0+255),c
   331   002296                     end_of_initialization:
   332                           	callstack 0
   333   002296                     __end_of__initialization:
   334                           	callstack 0
   335   002296  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   336   002298  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   337   00229A  0100               	movlb	0
   338   00229C  EF3E  F007         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMRAM
   341   000057                     __pbssCOMRAM:
   342                           	callstack 0
   343   000057                     _TxBufReadCnt:
   344                           	callstack 0
   345   000057                     	ds	1
   346   000058                     _TxBufWriteCnt:
   347                           	callstack 0
   348   000058                     	ds	1
   349   000059                     _RxBufReadCnt:
   350                           	callstack 0
   351   000059                     	ds	1
   352   00005A                     _RxBufWriteCnt:
   353                           	callstack 0
   354   00005A                     	ds	1
   355                           
   356                           	psect	bssBANK0
   357   000060                     __pbssBANK0:
   358                           	callstack 0
   359   000060                     _EUSART4RXbuf:
   360                           	callstack 0
   361   000060                     	ds	20
   362   000074                     _width:
   363                           	callstack 0
   364   000074                     	ds	2
   365   000076                     _prec:
   366                           	callstack 0
   367   000076                     	ds	2
   368   000078                     _card_detected:
   369                           	callstack 0
   370   000078                     	ds	2
   371   00007A                     _response_in_progress:
   372                           	callstack 0
   373   00007A                     	ds	2
   374   00007C                     _flags:
   375                           	callstack 0
   376   00007C                     	ds	1
   377   00007D                     _dbuf:
   378                           	callstack 0
   379   00007D                     	ds	32
   380                           
   381                           	psect	bssBANK2
   382   000200                     __pbssBANK2:
   383                           	callstack 0
   384   000200                     _EUSART4TXbuf:
   385                           	callstack 0
   386   000200                     	ds	60
   387                           
   388                           	psect	cstackBANK1
   389   000100                     __pcstackBANK1:
   390                           	callstack 0
   391   000100                     main@buf:
   392                           	callstack 0
   393                           
   394                           ; 150 bytes @ 0x0
   395   000100                     	ds	150
   396   000196                     main@expected_values:
   397                           	callstack 0
   398                           
   399                           ; 54 bytes @ 0x96
   400   000196                     	ds	54
   401   0001CC                     main@PWMcycle:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xCC
   405   0001CC                     	ds	1
   406   0001CD                     main@clear_read_check:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0xCD
   410   0001CD                     	ds	2
   411   0001CF                     main@red_read:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0xCF
   415   0001CF                     	ds	2
   416   0001D1                     main@green_read:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0xD1
   420   0001D1                     	ds	2
   421   0001D3                     main@blue_read:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0xD3
   425   0001D3                     	ds	2
   426   0001D5                     main@clear_read:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0xD5
   430   0001D5                     	ds	2
   431   0001D7                     main@i:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0xD7
   435   0001D7                     	ds	1
   436   0001D8                     main@motorL:
   437                           	callstack 0
   438                           
   439                           ; 9 bytes @ 0xD8
   440   0001D8                     	ds	9
   441   0001E1                     main@motorR:
   442                           	callstack 0
   443                           
   444                           ; 9 bytes @ 0xE1
   445   0001E1                     	ds	9
   446                           
   447                           	psect	cstackBANK0
   448   00009D                     __pcstackBANK0:
   449                           	callstack 0
   450   00009D                     ?_vfprintf:
   451                           	callstack 0
   452   00009D                     vfprintf@fp:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x0
   456   00009D                     	ds	2
   457   00009F                     vfprintf@fmt:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x2
   461   00009F                     	ds	2
   462   0000A1                     vfprintf@ap:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x4
   466   0000A1                     	ds	2
   467   0000A3                     ?_sprintf:
   468                           	callstack 0
   469   0000A3                     sprintf@s:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x6
   473   0000A3                     	ds	2
   474   0000A5                     sprintf@fmt:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x8
   478   0000A5                     	ds	10
   479   0000AF                     sprintf@ap:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x12
   483   0000AF                     	ds	2
   484   0000B1                     sprintf@f:
   485                           	callstack 0
   486                           
   487                           ; 11 bytes @ 0x14
   488   0000B1                     	ds	11
   489   0000BC                     clear_read_calibration@buf:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x1F
   493   0000BC                     	ds	2
   494   0000BE                     clear_read_calibration@clear_read:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x21
   498   0000BE                     	ds	2
   499   0000C0                     clear_read_calibration@clear_read_check:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x23
   503   0000C0                     	ds	2
   504   0000C2                     ??_clear_read_calibration:
   505                           
   506                           ; 1 bytes @ 0x25
   507   0000C2                     	ds	4
   508   0000C6                     clear_read_calibration@i:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x29
   512   0000C6                     	ds	2
   513   0000C8                     clear_read_calibration@i_1571:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x2B
   517   0000C8                     	ds	2
   518   0000CA                     ??_main:
   519                           
   520                           ; 1 bytes @ 0x2D
   521   0000CA                     	ds	2
   522                           
   523                           	psect	cstackCOMRAM
   524   000001                     __pcstackCOMRAM:
   525                           	callstack 0
   526   000001                     ??i2_I2C_2_Master_Idle:
   527   000001                     
   528                           ; 1 bytes @ 0x0
   529   000001                     	ds	1
   530   000002                     i2I2C_2_Master_Write@data_byte:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x1
   534   000002                     	ds	1
   535   000003                     ??_HighISR:
   536   000003                     
   537                           ; 1 bytes @ 0x2
   538   000003                     	ds	2
   539   000005                     ??_I2C_2_Master_Idle:
   540   000005                     ?___wmul:
   541                           	callstack 0
   542   000005                     ?___aodiv:
   543                           	callstack 0
   544   000005                     ?___aomod:
   545                           	callstack 0
   546   000005                     sendCharSerial4@charToSend:
   547                           	callstack 0
   548   000005                     ___wmul@multiplier:
   549                           	callstack 0
   550   000005                     fputc@c:
   551                           	callstack 0
   552   000005                     ___aodiv@dividend:
   553                           	callstack 0
   554   000005                     ___aomod@dividend:
   555                           	callstack 0
   556                           
   557                           ; 8 bytes @ 0x4
   558   000005                     	ds	1
   559   000006                     ??_I2C_2_Master_Read:
   560   000006                     I2C_2_Master_Write@data_byte:
   561                           	callstack 0
   562   000006                     sendStringSerial4@string:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x5
   566   000006                     	ds	1
   567   000007                     color_writetoaddr@value:
   568                           	callstack 0
   569   000007                     I2C_2_Master_Read@ack:
   570                           	callstack 0
   571   000007                     ___wmul@multiplicand:
   572                           	callstack 0
   573   000007                     fputc@fp:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x6
   577   000007                     	ds	1
   578   000008                     color_writetoaddr@address:
   579                           	callstack 0
   580   000008                     I2C_2_Master_Read@tmp:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x7
   584   000008                     	ds	1
   585   000009                     ??_fputc:
   586   000009                     ??_color_click_init:
   587   000009                     ?_color_read_Red:
   588                           	callstack 0
   589   000009                     ?_color_read_Green:
   590                           	callstack 0
   591   000009                     ?_color_read_Blue:
   592                           	callstack 0
   593   000009                     ?_color_read_Clear:
   594                           	callstack 0
   595   000009                     set_interrupt_threshold@AILT:
   596                           	callstack 0
   597   000009                     ___wmul@product:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x8
   601   000009                     	ds	2
   602   00000B                     ??_color_read_Red:
   603   00000B                     ??_color_read_Green:
   604   00000B                     ??_color_read_Blue:
   605   00000B                     ??_color_read_Clear:
   606   00000B                     ?___lwdiv:
   607                           	callstack 0
   608   00000B                     set_interrupt_threshold@AIHT:
   609                           	callstack 0
   610   00000B                     ___lwdiv@dividend:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0xA
   614   00000B                     	ds	2
   615   00000D                     set_interrupt_threshold@persistence:
   616                           	callstack 0
   617   00000D                     ___lwdiv@divisor:
   618                           	callstack 0
   619   00000D                     ___aodiv@divisor:
   620                           	callstack 0
   621   00000D                     ___aomod@divisor:
   622                           	callstack 0
   623                           
   624                           ; 8 bytes @ 0xC
   625   00000D                     	ds	1
   626   00000E                     color_read_Red@tmp:
   627                           	callstack 0
   628   00000E                     color_read_Green@tmp:
   629                           	callstack 0
   630   00000E                     color_read_Blue@tmp:
   631                           	callstack 0
   632   00000E                     color_read_Clear@tmp:
   633                           	callstack 0
   634   00000E                     fputs@s:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0xD
   638   00000E                     	ds	1
   639   00000F                     _set_interrupt_threshold$2044:
   640                           	callstack 0
   641   00000F                     ___lwdiv@quotient:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0xE
   645   00000F                     	ds	1
   646   000010                     _set_interrupt_threshold$2045:
   647                           	callstack 0
   648   000010                     collect_avg_readings@red_read:
   649                           	callstack 0
   650   000010                     fputs@fp:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0xF
   654   000010                     	ds	1
   655   000011                     ___lwdiv@counter:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x10
   659   000011                     	ds	1
   660   000012                     fputs@c:
   661                           	callstack 0
   662   000012                     setMotorPWM@m:
   663                           	callstack 0
   664   000012                     collect_avg_readings@green_read:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x11
   668   000012                     	ds	1
   669   000013                     fputs@i:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x12
   673   000013                     	ds	1
   674   000014                     ??_setMotorPWM:
   675   000014                     collect_avg_readings@blue_read:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x13
   679   000014                     	ds	1
   680   000015                     ___aodiv@counter:
   681                           	callstack 0
   682   000015                     ___aomod@counter:
   683                           	callstack 0
   684   000015                     pad@fp:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x14
   688   000015                     	ds	1
   689   000016                     ??_collect_avg_readings:
   690   000016                     setMotorPWM@posDuty:
   691                           	callstack 0
   692   000016                     ___aodiv@sign:
   693                           	callstack 0
   694   000016                     ___aomod@sign:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x15
   698   000016                     	ds	1
   699   000017                     ?_abs:
   700                           	callstack 0
   701   000017                     setMotorPWM@negDuty:
   702                           	callstack 0
   703   000017                     abs@a:
   704                           	callstack 0
   705   000017                     pad@buf:
   706                           	callstack 0
   707   000017                     ___aodiv@quotient:
   708                           	callstack 0
   709                           
   710                           ; 8 bytes @ 0x16
   711   000017                     	ds	1
   712   000018                     collect_avg_readings@i:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x17
   716   000018                     	ds	1
   717   000019                     ??_abs:
   718   000019                     pad@p:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x18
   722   000019                     	ds	1
   723   00001A                     collect_avg_readings@i_1578:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x19
   727   00001A                     	ds	1
   728   00001B                     ??_pad:
   729                           
   730                           ; 1 bytes @ 0x1A
   731   00001B                     	ds	1
   732   00001C                     collect_avg_readings@i_1579:
   733                           	callstack 0
   734   00001C                     pad@i:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x1B
   738   00001C                     	ds	2
   739   00001E                     collect_avg_readings@i_1580:
   740                           	callstack 0
   741   00001E                     pad@w:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x1D
   745   00001E                     	ds	2
   746   000020                     dtoa@fp:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x1F
   750   000020                     	ds	2
   751   000022                     dtoa@d:
   752                           	callstack 0
   753                           
   754                           ; 8 bytes @ 0x21
   755   000022                     	ds	8
   756   00002A                     ??_dtoa:
   757                           
   758                           ; 1 bytes @ 0x29
   759   00002A                     	ds	8
   760   000032                     _dtoa$2563:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x31
   764   000032                     	ds	2
   765   000034                     dtoa@p:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x33
   769   000034                     	ds	2
   770   000036                     dtoa@w:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x35
   774   000036                     	ds	2
   775   000038                     dtoa@n:
   776                           	callstack 0
   777                           
   778                           ; 8 bytes @ 0x37
   779   000038                     	ds	8
   780   000040                     dtoa@s:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x3F
   784   000040                     	ds	1
   785   000041                     dtoa@i:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x40
   789   000041                     	ds	2
   790   000043                     vfpfcnvrt@fp:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x42
   794   000043                     	ds	2
   795   000045                     vfpfcnvrt@fmt:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x44
   799   000045                     	ds	2
   800   000047                     vfpfcnvrt@ap:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x46
   804   000047                     	ds	2
   805   000049                     ??_vfpfcnvrt:
   806                           
   807                           ; 1 bytes @ 0x48
   808   000049                     	ds	2
   809   00004B                     vfpfcnvrt@convarg:
   810                           	callstack 0
   811                           
   812                           ; 8 bytes @ 0x4A
   813   00004B                     	ds	8
   814   000053                     vfpfcnvrt@cp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x52
   818   000053                     	ds	2
   819   000055                     vfprintf@cfmt:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x54
   823   000055                     	ds	2
   824   000057                     
   825                           ; 1 bytes @ 0x56
   826 ;;
   827 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   828 ;;
   829 ;; *************** function _main *****************
   830 ;; Defined at:
   831 ;;		line 21 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  i               1  215[BANK1 ] enum E14569
   836 ;;  buf           150    0[BANK1 ] unsigned char [150]
   837 ;;  ReturnHomeAr  120    0        unsigned int [30][2]
   838 ;;  expected_val   54  150[BANK1 ] unsigned int [9][3]
   839 ;;  motorR          9  225[BANK1 ] struct DC_motor
   840 ;;  motorL          9  216[BANK1 ] struct DC_motor
   841 ;;  clear_read      2  213[BANK1 ] unsigned int 
   842 ;;  blue_read       2  211[BANK1 ] unsigned int 
   843 ;;  green_read      2  209[BANK1 ] unsigned int 
   844 ;;  red_read        2  207[BANK1 ] unsigned int 
   845 ;;  clear_read_c    2  205[BANK1 ] unsigned int 
   846 ;;  PWMcycle        1  204[BANK1 ] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   857 ;;      Locals:         0       0     234       0       0       0       0       0       0       0       0       0       
      +0       0       0
   858 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   859 ;;      Totals:         0       2     234       0       0       0       0       0       0       0       0       0       
      +0       0       0
   860 ;;Total ram usage:      236 bytes
   861 ;; Hardware stack levels required when called: 13
   862 ;; This function calls:
   863 ;;		_I2C_2_Master_Init
   864 ;;		_Interrupts_init
   865 ;;		_LEDSon_init
   866 ;;		_clear_read_calibration
   867 ;;		_collect_avg_readings
   868 ;;		_color_click_init
   869 ;;		_color_read_Blue
   870 ;;		_color_read_Clear
   871 ;;		_color_read_Green
   872 ;;		_color_read_Red
   873 ;;		_initDCmotorsPWM
   874 ;;		_initUSART4
   875 ;;		_sendStringSerial4
   876 ;;		_setMotorPWM
   877 ;;		_sprintf
   878 ;; This function is called by:
   879 ;;		Startup code after reset
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text0
   884   000E7C                     __ptext0:
   885                           	callstack 0
   886   000E7C                     _main:
   887                           	callstack 18
   888   000E7C                     
   889                           ;main.c: 26:     LEDSon_init();
   890   000E7C  ECA0  F011         	call	_LEDSon_init	;wreg free
   891   000E80                     
   892                           ;main.c: 27:     I2C_2_Master_Init();
   893   000E80  EC50  F011         	call	_I2C_2_Master_Init	;wreg free
   894   000E84                     
   895                           ;main.c: 28:     color_click_init();
   896   000E84  EC09  F011         	call	_color_click_init	;wreg free
   897   000E88                     
   898                           ;main.c: 29:     initDCmotorsPWM();
   899   000E88  ECA5  F00E         	call	_initDCmotorsPWM	;wreg free
   900   000E8C                     
   901                           ;main.c: 30:     initUSART4();
   902   000E8C  ECB1  F011         	call	_initUSART4	;wreg free
   903   000E90                     
   904                           ;main.c: 31:     Interrupts_init();
   905   000E90  ECEA  F010         	call	_Interrupts_init	;wreg free
   906   000E94                     
   907                           ;main.c: 33:     TRISFbits.TRISF2=1;
   908   000E94  8486               	bsf	134,2,c	;volatile
   909   000E96                     
   910                           ;main.c: 34:     ANSELFbits.ANSELF2=0;
   911   000E96  010E               	movlb	14	; () banked
   912   000E98  95B4               	bcf	180,2,b	;volatile
   913   000E9A                     
   914                           ; BSR set to: 14
   915                           ;main.c: 42:     unsigned char PWMcycle = T2PR;
   916   000E9A  CFBC F1CC          	movff	4028,main@PWMcycle	;volatile
   917                           
   918                           ;main.c: 44:     struct DC_motor motorL, motorR;;main.c: 46:     motorL.power=0;
   919   000E9E  0E00               	movlw	0
   920   000EA0  0101               	movlb	1	; () banked
   921   000EA2  6FD8               	movwf	main@motorL& (0+255),b
   922                           
   923                           ;main.c: 47:     motorL.direction=1;
   924   000EA4  0E01               	movlw	1
   925   000EA6  6FD9               	movwf	(main@motorL+1)& (0+255),b
   926                           
   927                           ;main.c: 48:     motorL.brakemode=1;
   928   000EA8  0E01               	movlw	1
   929   000EAA  6FDA               	movwf	(main@motorL+2)& (0+255),b
   930   000EAC                     
   931                           ; BSR set to: 1
   932                           ;main.c: 49:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   933   000EAC  0EAA               	movlw	170
   934   000EAE  6FDD               	movwf	(main@motorL+5)& (0+255),b
   935   000EB0  0E0F               	movlw	15
   936   000EB2  6FDE               	movwf	(main@motorL+6)& (0+255),b
   937   000EB4                     
   938                           ; BSR set to: 1
   939                           ;main.c: 50:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   940   000EB4  0EA6               	movlw	166
   941   000EB6  6FDF               	movwf	(main@motorL+7)& (0+255),b
   942   000EB8  0E0F               	movlw	15
   943   000EBA  6FE0               	movwf	(main@motorL+8)& (0+255),b
   944   000EBC                     
   945                           ; BSR set to: 1
   946                           ;main.c: 51:     motorL.PWMperiod=PWMcycle;
   947   000EBC  C1CC  F1DB         	movff	main@PWMcycle,main@motorL+3
   948   000EC0  6BDC               	clrf	(main@motorL+4)& (0+255),b
   949                           
   950                           ;main.c: 53:     motorR.power=0;
   951   000EC2  0E00               	movlw	0
   952   000EC4  6FE1               	movwf	main@motorR& (0+255),b
   953                           
   954                           ;main.c: 54:     motorR.direction=1;
   955   000EC6  0E01               	movlw	1
   956   000EC8  6FE2               	movwf	(main@motorR+1)& (0+255),b
   957                           
   958                           ;main.c: 55:     motorR.brakemode=1;
   959   000ECA  0E01               	movlw	1
   960   000ECC  6FE3               	movwf	(main@motorR+2)& (0+255),b
   961   000ECE                     
   962                           ; BSR set to: 1
   963                           ;main.c: 56:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   964   000ECE  0E25               	movlw	37
   965   000ED0  6FE6               	movwf	(main@motorR+5)& (0+255),b
   966   000ED2  0E0F               	movlw	15
   967   000ED4  6FE7               	movwf	(main@motorR+6)& (0+255),b
   968   000ED6                     
   969                           ; BSR set to: 1
   970                           ;main.c: 57:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   971   000ED6  0E21               	movlw	33
   972   000ED8  6FE8               	movwf	(main@motorR+7)& (0+255),b
   973   000EDA  0E0F               	movlw	15
   974   000EDC  6FE9               	movwf	(main@motorR+8)& (0+255),b
   975   000EDE                     
   976                           ; BSR set to: 1
   977                           ;main.c: 58:     motorR.PWMperiod=PWMcycle;
   978   000EDE  C1CC  F1E4         	movff	main@PWMcycle,main@motorR+3
   979   000EE2  6BE5               	clrf	(main@motorR+4)& (0+255),b
   980   000EE4                     
   981                           ; BSR set to: 1
   982                           ;main.c: 60:     setMotorPWM(&motorL);
   983   000EE4  0ED8               	movlw	low main@motorL
   984   000EE6  6E12               	movwf	setMotorPWM@m^0,c
   985   000EE8  0E01               	movlw	high main@motorL
   986   000EEA  6E13               	movwf	(setMotorPWM@m+1)^0,c
   987   000EEC  EC9C  F00B         	call	_setMotorPWM	;wreg free
   988   000EF0                     
   989                           ;main.c: 61:     setMotorPWM(&motorR);
   990   000EF0  0EE1               	movlw	low main@motorR
   991   000EF2  6E12               	movwf	setMotorPWM@m^0,c
   992   000EF4  0E01               	movlw	high main@motorR
   993   000EF6  6E13               	movwf	(setMotorPWM@m+1)^0,c
   994   000EF8  EC9C  F00B         	call	_setMotorPWM	;wreg free
   995                           
   996                           ;main.c: 66:     char buf[150];;main.c: 68:     unsigned int red_read = 0;
   997   000EFC  0E00               	movlw	0
   998   000EFE  0101               	movlb	1	; () banked
   999   000F00  6FD0               	movwf	(main@red_read+1)& (0+255),b
  1000   000F02  0E00               	movlw	0
  1001   000F04  6FCF               	movwf	main@red_read& (0+255),b
  1002                           
  1003                           ;main.c: 69:     unsigned int green_read = 0;
  1004   000F06  0E00               	movlw	0
  1005   000F08  6FD2               	movwf	(main@green_read+1)& (0+255),b
  1006   000F0A  0E00               	movlw	0
  1007   000F0C  6FD1               	movwf	main@green_read& (0+255),b
  1008                           
  1009                           ;main.c: 70:     unsigned int blue_read = 0;
  1010   000F0E  0E00               	movlw	0
  1011   000F10  6FD4               	movwf	(main@blue_read+1)& (0+255),b
  1012   000F12  0E00               	movlw	0
  1013   000F14  6FD3               	movwf	main@blue_read& (0+255),b
  1014                           
  1015                           ;main.c: 71:     unsigned int clear_read = 0;
  1016   000F16  0E00               	movlw	0
  1017   000F18  6FD6               	movwf	(main@clear_read+1)& (0+255),b
  1018   000F1A  0E00               	movlw	0
  1019   000F1C  6FD5               	movwf	main@clear_read& (0+255),b
  1020                           
  1021                           ;main.c: 72:     unsigned int clear_read_check = 0;
  1022   000F1E  0E00               	movlw	0
  1023   000F20  6FCE               	movwf	(main@clear_read_check+1)& (0+255),b
  1024   000F22  0E00               	movlw	0
  1025   000F24  6FCD               	movwf	main@clear_read_check& (0+255),b
  1026   000F26                     
  1027                           ; BSR set to: 1
  1028                           ;main.c: 74:     unsigned int expected_values[3][9];;main.c: 75:     unsigned int Return
      +                          HomeArray[2][30];;main.c: 85:     LATDbits.LATD4 = 0;
  1029   000F26  987C               	bcf	124,4,c	;volatile
  1030                           
  1031                           ;main.c: 86:     for(colour i = RED; i<= BLACK; i++){
  1032   000F28  0E00               	movlw	0
  1033   000F2A  6FD7               	movwf	main@i& (0+255),b
  1034   000F2C  EF99  F007         	goto	l242
  1035   000F30                     l243:
  1036                           
  1037                           ;main.c: 88:             LATDbits.LATD4 = 1;
  1038   000F30  887C               	bsf	124,4,c	;volatile
  1039   000F32                     l242:
  1040                           
  1041                           ;main.c: 87:         while(PORTFbits.RF2){
  1042   000F32  B48E               	btfsc	142,2,c	;volatile
  1043   000F34  EF9E  F007         	goto	u2051
  1044   000F38  EFA0  F007         	goto	u2050
  1045   000F3C                     u2051:
  1046   000F3C  EF98  F007         	goto	l243
  1047   000F40                     u2050:
  1048   000F40                     
  1049                           ;main.c: 90:         LATDbits.LATD4 = 0;
  1050   000F40  987C               	bcf	124,4,c	;volatile
  1051   000F42                     
  1052                           ;main.c: 91:         collect_avg_readings(&red_read, &green_read, &blue_read);
  1053   000F42  0ECF               	movlw	low main@red_read
  1054   000F44  6E10               	movwf	collect_avg_readings@red_read^0,c
  1055   000F46  0E01               	movlw	high main@red_read
  1056   000F48  6E11               	movwf	(collect_avg_readings@red_read+1)^0,c
  1057   000F4A  0ED1               	movlw	low main@green_read
  1058   000F4C  6E12               	movwf	collect_avg_readings@green_read^0,c
  1059   000F4E  0E01               	movlw	high main@green_read
  1060   000F50  6E13               	movwf	(collect_avg_readings@green_read+1)^0,c
  1061   000F52  0ED3               	movlw	low main@blue_read
  1062   000F54  6E14               	movwf	collect_avg_readings@blue_read^0,c
  1063   000F56  0E01               	movlw	high main@blue_read
  1064   000F58  6E15               	movwf	(collect_avg_readings@blue_read+1)^0,c
  1065   000F5A  ECE5  F009         	call	_collect_avg_readings	;wreg free
  1066   000F5E                     
  1067                           ;main.c: 92:         expected_values[RED][i] = red_read;
  1068   000F5E  0101               	movlb	1	; () banked
  1069   000F60  51D7               	movf	main@i& (0+255),w,b
  1070   000F62  0D02               	mullw	2
  1071   000F64  0E96               	movlw	low main@expected_values
  1072   000F66  24F3               	addwf	243,w,c
  1073   000F68  6ED9               	movwf	fsr2l,c
  1074   000F6A  0E01               	movlw	high main@expected_values
  1075   000F6C  20F4               	addwfc	prodh,w,c
  1076   000F6E  6EDA               	movwf	fsr2h,c
  1077   000F70  C1CF  FFDE         	movff	main@red_read,postinc2
  1078   000F74  C1D0  FFDD         	movff	main@red_read+1,postdec2
  1079   000F78                     
  1080                           ; BSR set to: 1
  1081                           ;main.c: 93:         expected_values[GREEN][i] = green_read;
  1082   000F78  51D7               	movf	main@i& (0+255),w,b
  1083   000F7A  0D02               	mullw	2
  1084   000F7C  0E12               	movlw	18
  1085   000F7E  26F3               	addwf	243,f,c
  1086   000F80  0E00               	movlw	0
  1087   000F82  22F4               	addwfc	244,f,c
  1088   000F84  0E96               	movlw	low main@expected_values
  1089   000F86  24F3               	addwf	243,w,c
  1090   000F88  6ED9               	movwf	fsr2l,c
  1091   000F8A  0E01               	movlw	high main@expected_values
  1092   000F8C  20F4               	addwfc	prodh,w,c
  1093   000F8E  6EDA               	movwf	fsr2h,c
  1094   000F90  C1D1  FFDE         	movff	main@green_read,postinc2
  1095   000F94  C1D2  FFDD         	movff	main@green_read+1,postdec2
  1096   000F98                     
  1097                           ; BSR set to: 1
  1098                           ;main.c: 94:         expected_values[BLUE][i] = blue_read;
  1099   000F98  51D7               	movf	main@i& (0+255),w,b
  1100   000F9A  0D02               	mullw	2
  1101   000F9C  0E24               	movlw	36
  1102   000F9E  26F3               	addwf	243,f,c
  1103   000FA0  0E00               	movlw	0
  1104   000FA2  22F4               	addwfc	244,f,c
  1105   000FA4  0E96               	movlw	low main@expected_values
  1106   000FA6  24F3               	addwf	243,w,c
  1107   000FA8  6ED9               	movwf	fsr2l,c
  1108   000FAA  0E01               	movlw	high main@expected_values
  1109   000FAC  20F4               	addwfc	prodh,w,c
  1110   000FAE  6EDA               	movwf	fsr2h,c
  1111   000FB0  C1D3  FFDE         	movff	main@blue_read,postinc2
  1112   000FB4  C1D4  FFDD         	movff	main@blue_read+1,postdec2
  1113   000FB8                     
  1114                           ; BSR set to: 1
  1115                           ;main.c: 95:         sprintf(buf, "\n EXPECTED: R %d, G %d, B %d  CARD: %d \n", red_read
      +                          , green_read, blue_read, i);
  1116   000FB8  0E00               	movlw	low main@buf
  1117   000FBA  0100               	movlb	0	; () banked
  1118   000FBC  6FA3               	movwf	sprintf@s& (0+255),b
  1119   000FBE  0E01               	movlw	high main@buf
  1120   000FC0  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  1121   000FC2  0E01               	movlw	low STR_1
  1122   000FC4  6FA5               	movwf	sprintf@fmt& (0+255),b
  1123   000FC6  0E0E               	movlw	high STR_1
  1124   000FC8  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  1125   000FCA  C1CF  F0A7         	movff	main@red_read,?_sprintf+4
  1126   000FCE  C1D0  F0A8         	movff	main@red_read+1,?_sprintf+5
  1127   000FD2  C1D1  F0A9         	movff	main@green_read,?_sprintf+6
  1128   000FD6  C1D2  F0AA         	movff	main@green_read+1,?_sprintf+7
  1129   000FDA  C1D3  F0AB         	movff	main@blue_read,?_sprintf+8
  1130   000FDE  C1D4  F0AC         	movff	main@blue_read+1,?_sprintf+9
  1131   000FE2  C1D7  F0AD         	movff	main@i,?_sprintf+10
  1132   000FE6  6BAE               	clrf	(?_sprintf+11)& (0+255),b
  1133   000FE8  ECBE  F00F         	call	_sprintf	;wreg free
  1134   000FEC                     
  1135                           ;main.c: 96:         sendStringSerial4(buf);
  1136   000FEC  0E00               	movlw	low main@buf
  1137   000FEE  6E06               	movwf	sendStringSerial4@string^0,c
  1138   000FF0  0E01               	movlw	high main@buf
  1139   000FF2  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1140   000FF4  EC23  F011         	call	_sendStringSerial4	;wreg free
  1141   000FF8                     
  1142                           ;main.c: 97:     }
  1143   000FF8  0101               	movlb	1	; () banked
  1144   000FFA  2BD7               	incf	main@i& (0+255),f,b
  1145   000FFC                     
  1146                           ; BSR set to: 1
  1147   000FFC  0E08               	movlw	8
  1148   000FFE  65D7               	cpfsgt	main@i& (0+255),b
  1149   001000  EF04  F008         	goto	u2061
  1150   001004  EF06  F008         	goto	u2060
  1151   001008                     u2061:
  1152   001008  EF99  F007         	goto	l242
  1153   00100C                     u2060:
  1154   00100C                     
  1155                           ; BSR set to: 1
  1156                           ;main.c: 98:     clear_read_calibration(buf, &clear_read, &clear_read_check);
  1157   00100C  0E00               	movlw	low main@buf
  1158   00100E  0100               	movlb	0	; () banked
  1159   001010  6FBC               	movwf	clear_read_calibration@buf& (0+255),b
  1160   001012  0E01               	movlw	high main@buf
  1161   001014  6FBD               	movwf	(clear_read_calibration@buf+1)& (0+255),b
  1162   001016  0ED5               	movlw	low main@clear_read
  1163   001018  6FBE               	movwf	clear_read_calibration@clear_read& (0+255),b
  1164   00101A  0E01               	movlw	high main@clear_read
  1165   00101C  6FBF               	movwf	(clear_read_calibration@clear_read+1)& (0+255),b
  1166   00101E  0ECD               	movlw	low main@clear_read_check
  1167   001020  6FC0               	movwf	clear_read_calibration@clear_read_check& (0+255),b
  1168   001022  0E01               	movlw	high main@clear_read_check
  1169   001024  6FC1               	movwf	(clear_read_calibration@clear_read_check+1)& (0+255),b
  1170   001026  ECB3  F00D         	call	_clear_read_calibration	;wreg free
  1171   00102A                     
  1172                           ;main.c: 131:     LATHbits.LATH3=0;
  1173   00102A  9680               	bcf	128,3,c	;volatile
  1174   00102C                     
  1175                           ;main.c: 132:     TRISHbits.TRISH3=0;
  1176   00102C  9688               	bcf	136,3,c	;volatile
  1177   00102E                     
  1178                           ;main.c: 134:     LATDbits.LATD7=0;
  1179   00102E  9E7C               	bcf	124,7,c	;volatile
  1180   001030                     
  1181                           ;main.c: 135:     TRISDbits.TRISD7=0;
  1182   001030  9E84               	bcf	132,7,c	;volatile
  1183   001032                     l3538:
  1184                           
  1185                           ;main.c: 140:         red_read = color_read_Red();
  1186   001032  ECE7  F00F         	call	_color_read_Red	;wreg free
  1187   001036  C009  F1CF         	movff	?_color_read_Red,main@red_read
  1188   00103A  C00A  F1D0         	movff	?_color_read_Red+1,main@red_read+1
  1189   00103E                     
  1190                           ;main.c: 141:         blue_read = color_read_Blue();
  1191   00103E  EC37  F010         	call	_color_read_Blue	;wreg free
  1192   001042  C009  F1D3         	movff	?_color_read_Blue,main@blue_read
  1193   001046  C00A  F1D4         	movff	?_color_read_Blue+1,main@blue_read+1
  1194   00104A                     
  1195                           ;main.c: 142:         green_read = color_read_Green();
  1196   00104A  EC0F  F010         	call	_color_read_Green	;wreg free
  1197   00104E  C009  F1D1         	movff	?_color_read_Green,main@green_read
  1198   001052  C00A  F1D2         	movff	?_color_read_Green+1,main@green_read+1
  1199   001056                     
  1200                           ;main.c: 143:         clear_read = color_read_Clear();
  1201   001056  EC5F  F010         	call	_color_read_Clear	;wreg free
  1202   00105A  C009  F1D5         	movff	?_color_read_Clear,main@clear_read
  1203   00105E  C00A  F1D6         	movff	?_color_read_Clear+1,main@clear_read+1
  1204                           
  1205                           ;main.c: 146:         sprintf(buf, "Raw %d, %d, %d, %d \n", red_read, green_read, blue_r
      +                          ead, clear_read);
  1206   001062  0E00               	movlw	low main@buf
  1207   001064  0100               	movlb	0	; () banked
  1208   001066  6FA3               	movwf	sprintf@s& (0+255),b
  1209   001068  0E01               	movlw	high main@buf
  1210   00106A  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  1211   00106C  0E5B               	movlw	low STR_2
  1212   00106E  6FA5               	movwf	sprintf@fmt& (0+255),b
  1213   001070  0E0E               	movlw	high STR_2
  1214   001072  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  1215   001074  C1CF  F0A7         	movff	main@red_read,?_sprintf+4
  1216   001078  C1D0  F0A8         	movff	main@red_read+1,?_sprintf+5
  1217   00107C  C1D1  F0A9         	movff	main@green_read,?_sprintf+6
  1218   001080  C1D2  F0AA         	movff	main@green_read+1,?_sprintf+7
  1219   001084  C1D3  F0AB         	movff	main@blue_read,?_sprintf+8
  1220   001088  C1D4  F0AC         	movff	main@blue_read+1,?_sprintf+9
  1221   00108C  C1D5  F0AD         	movff	main@clear_read,?_sprintf+10
  1222   001090  C1D6  F0AE         	movff	main@clear_read+1,?_sprintf+11
  1223   001094  ECBE  F00F         	call	_sprintf	;wreg free
  1224   001098                     
  1225                           ;main.c: 147:         sendStringSerial4(buf);
  1226   001098  0E00               	movlw	low main@buf
  1227   00109A  6E06               	movwf	sendStringSerial4@string^0,c
  1228   00109C  0E01               	movlw	high main@buf
  1229   00109E  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1230   0010A0  EC23  F011         	call	_sendStringSerial4	;wreg free
  1231   0010A4                     
  1232                           ;main.c: 148:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1233   0010A4  0E09               	movlw	9
  1234   0010A6  0100               	movlb	0	; () banked
  1235   0010A8  6FCB               	movwf	(??_main+1)& (0+255),b
  1236   0010AA  0E1E               	movlw	30
  1237   0010AC  6FCA               	movwf	??_main& (0+255),b
  1238   0010AE  0EE4               	movlw	228
  1239   0010B0                     u2147:
  1240   0010B0  2EE8               	decfsz	wreg,f,c
  1241   0010B2  D7FE               	bra	u2147
  1242   0010B4  2FCA               	decfsz	??_main& (0+255),f,b
  1243   0010B6  D7FC               	bra	u2147
  1244   0010B8  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1245   0010BA  D7FA               	bra	u2147
  1246   0010BC  F000               	nop	
  1247   0010BE                     
  1248                           ;main.c: 149:         LATHbits.LATH3=!LATHbits.LATH3;
  1249   0010BE  A680               	btfss	128,3,c	;volatile
  1250   0010C0  EF64  F008         	goto	u2071
  1251   0010C4  EF69  F008         	goto	u2070
  1252   0010C8                     u2071:
  1253   0010C8  0100               	movlb	0	; () banked
  1254   0010CA  6BCA               	clrf	??_main& (0+255),b
  1255   0010CC  2BCA               	incf	??_main& (0+255),f,b
  1256   0010CE  EF6B  F008         	goto	u2088
  1257   0010D2                     u2070:
  1258   0010D2  0100               	movlb	0	; () banked
  1259   0010D4  6BCA               	clrf	??_main& (0+255),b
  1260   0010D6                     u2088:
  1261   0010D6  47CA               	rlncf	??_main& (0+255),f,b
  1262   0010D8  47CA               	rlncf	??_main& (0+255),f,b
  1263   0010DA  47CA               	rlncf	??_main& (0+255),f,b
  1264   0010DC  5080               	movf	128,w,c	;volatile
  1265   0010DE  19CA               	xorwf	??_main& (0+255),w,b
  1266   0010E0  0BF7               	andlw	-9
  1267   0010E2  19CA               	xorwf	??_main& (0+255),w,b
  1268   0010E4  6E80               	movwf	128,c	;volatile
  1269   0010E6                     
  1270                           ; BSR set to: 0
  1271                           ;main.c: 151:         if (clear_read > clear_read_check) {
  1272   0010E6  0101               	movlb	1	; () banked
  1273   0010E8  51D5               	movf	main@clear_read& (0+255),w,b
  1274   0010EA  5DCD               	subwf	main@clear_read_check& (0+255),w,b
  1275   0010EC  51D6               	movf	(main@clear_read+1)& (0+255),w,b
  1276   0010EE  59CE               	subwfb	(main@clear_read_check+1)& (0+255),w,b
  1277   0010F0  B0D8               	btfsc	status,0,c
  1278   0010F2  EF7D  F008         	goto	u2091
  1279   0010F6  EF7F  F008         	goto	u2090
  1280   0010FA                     u2091:
  1281   0010FA  EF19  F008         	goto	l3538
  1282   0010FE                     u2090:
  1283   0010FE                     
  1284                           ; BSR set to: 1
  1285                           ;main.c: 152:             LATDbits.LATD7=!LATDbits.LATD7;
  1286   0010FE  AE7C               	btfss	124,7,c	;volatile
  1287   001100  EF84  F008         	goto	u2101
  1288   001104  EF89  F008         	goto	u2100
  1289   001108                     u2101:
  1290   001108  0100               	movlb	0	; () banked
  1291   00110A  6BCA               	clrf	??_main& (0+255),b
  1292   00110C  2BCA               	incf	??_main& (0+255),f,b
  1293   00110E  EF8B  F008         	goto	u2118
  1294   001112                     u2100:
  1295   001112  0100               	movlb	0	; () banked
  1296   001114  6BCA               	clrf	??_main& (0+255),b
  1297   001116                     u2118:
  1298   001116  33CA               	rrcf	??_main& (0+255),f,b
  1299   001118  33CA               	rrcf	??_main& (0+255),f,b
  1300   00111A  507C               	movf	124,w,c	;volatile
  1301   00111C  19CA               	xorwf	??_main& (0+255),w,b
  1302   00111E  0B7F               	andlw	-129
  1303   001120  19CA               	xorwf	??_main& (0+255),w,b
  1304   001122  6E7C               	movwf	124,c	;volatile
  1305                           
  1306                           ;main.c: 153:             LATHbits.LATH1=!LATHbits.LATH1;
  1307   001124  A280               	btfss	128,1,c	;volatile
  1308   001126  EF97  F008         	goto	u2121
  1309   00112A  EF9B  F008         	goto	u2120
  1310   00112E                     u2121:
  1311   00112E  6BCA               	clrf	??_main& (0+255),b
  1312   001130  2BCA               	incf	??_main& (0+255),f,b
  1313   001132  EF9D  F008         	goto	u2138
  1314   001136                     u2120:
  1315   001136  0100               	movlb	0	; () banked
  1316   001138  6BCA               	clrf	??_main& (0+255),b
  1317   00113A                     u2138:
  1318   00113A  47CA               	rlncf	??_main& (0+255),f,b
  1319   00113C  5080               	movf	128,w,c	;volatile
  1320   00113E  19CA               	xorwf	??_main& (0+255),w,b
  1321   001140  0BFD               	andlw	-3
  1322   001142  19CA               	xorwf	??_main& (0+255),w,b
  1323   001144  6E80               	movwf	128,c	;volatile
  1324   001146  EF19  F008         	goto	l3538
  1325   00114A  EF3B  F000         	goto	start
  1326   00114E                     __end_of_main:
  1327                           	callstack 0
  1328                           
  1329 ;; *************** function _setMotorPWM *****************
  1330 ;; Defined at:
  1331 ;;		line 61 in file "dc_motor.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  m               2   17[COMRAM] PTR struct DC_motor
  1334 ;;		 -> main@motorR(9), main@motorL(9), 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  negDuty         1   22[COMRAM] unsigned char 
  1337 ;;  posDuty         1   21[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1351 ;;Total ram usage:        6 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 5
  1354 ;; This function calls:
  1355 ;;		___lwdiv
  1356 ;;		___wmul
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;;		_stop
  1360 ;;		_turnLeft45
  1361 ;;		_turnRight45
  1362 ;;		_fullSpeedAhead
  1363 ;;		_reverseFullSpeed
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text1
  1368   001738                     __ptext1:
  1369                           	callstack 0
  1370   001738                     _setMotorPWM:
  1371                           	callstack 25
  1372   001738                     
  1373                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  1374   001738  EE20 F002          	lfsr	2,2
  1375   00173C  5012               	movf	setMotorPWM@m^0,w,c
  1376   00173E  26D9               	addwf	fsr2l,f,c
  1377   001740  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1378   001742  22DA               	addwfc	fsr2h,f,c
  1379   001744  50DF               	movf	indf2,w,c
  1380   001746  B4D8               	btfsc	status,2,c
  1381   001748  EFA8  F00B         	goto	u1401
  1382   00174C  EFAA  F00B         	goto	u1400
  1383   001750                     u1401:
  1384   001750  EFDE  F00B         	goto	l2736
  1385   001754                     u1400:
  1386   001754                     
  1387                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1388   001754  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  1389   001758  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1390   00175C  50DF               	movf	indf2,w,c
  1391   00175E  6E14               	movwf	??_setMotorPWM^0,c
  1392   001760  5014               	movf	??_setMotorPWM^0,w,c
  1393   001762  6E05               	movwf	___wmul@multiplier^0,c
  1394   001764  6A06               	clrf	(___wmul@multiplier+1)^0,c
  1395   001766  EE20 F003          	lfsr	2,3
  1396   00176A  5012               	movf	setMotorPWM@m^0,w,c
  1397   00176C  26D9               	addwf	fsr2l,f,c
  1398   00176E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1399   001770  22DA               	addwfc	fsr2h,f,c
  1400   001772  CFDE F007          	movff	postinc2,___wmul@multiplicand
  1401   001776  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  1402   00177A  EC8D  F011         	call	___wmul	;wreg free
  1403   00177E  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  1404   001782  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  1405   001786  0E00               	movlw	0
  1406   001788  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  1407   00178A  0E64               	movlw	100
  1408   00178C  6E0D               	movwf	___lwdiv@divisor^0,c
  1409   00178E  EC26  F00F         	call	___lwdiv	;wreg free
  1410   001792  EE20 F003          	lfsr	2,3
  1411   001796  5012               	movf	setMotorPWM@m^0,w,c
  1412   001798  26D9               	addwf	fsr2l,f,c
  1413   00179A  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1414   00179C  22DA               	addwfc	fsr2h,f,c
  1415   00179E  50DF               	movf	indf2,w,c
  1416   0017A0  6E15               	movwf	(??_setMotorPWM+1)^0,c
  1417   0017A2  500B               	movf	?___lwdiv^0,w,c
  1418   0017A4  5C15               	subwf	(??_setMotorPWM+1)^0,w,c
  1419   0017A6  6E16               	movwf	setMotorPWM@posDuty^0,c
  1420   0017A8                     
  1421                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  1422   0017A8  EE20 F003          	lfsr	2,3
  1423   0017AC  5012               	movf	setMotorPWM@m^0,w,c
  1424   0017AE  26D9               	addwf	fsr2l,f,c
  1425   0017B0  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1426   0017B2  22DA               	addwfc	fsr2h,f,c
  1427   0017B4  50DF               	movf	indf2,w,c
  1428   0017B6  6E17               	movwf	setMotorPWM@negDuty^0,c
  1429                           
  1430                           ;dc_motor.c: 68:     }
  1431   0017B8  EF01  F00C         	goto	l2740
  1432   0017BC                     l2736:
  1433                           
  1434                           ;dc_motor.c: 70:         posDuty=0;
  1435   0017BC  0E00               	movlw	0
  1436   0017BE  6E16               	movwf	setMotorPWM@posDuty^0,c
  1437   0017C0                     
  1438                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  1439   0017C0  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  1440   0017C4  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1441   0017C8  50DF               	movf	indf2,w,c
  1442   0017CA  6E14               	movwf	??_setMotorPWM^0,c
  1443   0017CC  5014               	movf	??_setMotorPWM^0,w,c
  1444   0017CE  6E05               	movwf	___wmul@multiplier^0,c
  1445   0017D0  6A06               	clrf	(___wmul@multiplier+1)^0,c
  1446   0017D2  EE20 F003          	lfsr	2,3
  1447   0017D6  5012               	movf	setMotorPWM@m^0,w,c
  1448   0017D8  26D9               	addwf	fsr2l,f,c
  1449   0017DA  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1450   0017DC  22DA               	addwfc	fsr2h,f,c
  1451   0017DE  CFDE F007          	movff	postinc2,___wmul@multiplicand
  1452   0017E2  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  1453   0017E6  EC8D  F011         	call	___wmul	;wreg free
  1454   0017EA  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  1455   0017EE  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  1456   0017F2  0E00               	movlw	0
  1457   0017F4  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  1458   0017F6  0E64               	movlw	100
  1459   0017F8  6E0D               	movwf	___lwdiv@divisor^0,c
  1460   0017FA  EC26  F00F         	call	___lwdiv	;wreg free
  1461   0017FE  500B               	movf	?___lwdiv^0,w,c
  1462   001800  6E17               	movwf	setMotorPWM@negDuty^0,c
  1463   001802                     l2740:
  1464                           
  1465                           ;dc_motor.c: 74:     if (m->direction) {
  1466   001802  EE20 F001          	lfsr	2,1
  1467   001806  5012               	movf	setMotorPWM@m^0,w,c
  1468   001808  26D9               	addwf	fsr2l,f,c
  1469   00180A  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1470   00180C  22DA               	addwfc	fsr2h,f,c
  1471   00180E  50DF               	movf	indf2,w,c
  1472   001810  B4D8               	btfsc	status,2,c
  1473   001812  EF0D  F00C         	goto	u1411
  1474   001816  EF0F  F00C         	goto	u1410
  1475   00181A                     u1411:
  1476   00181A  EF31  F00C         	goto	l2744
  1477   00181E                     u1410:
  1478   00181E                     
  1479                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  1480   00181E  EE20 F005          	lfsr	2,5
  1481   001822  5012               	movf	setMotorPWM@m^0,w,c
  1482   001824  26D9               	addwf	fsr2l,f,c
  1483   001826  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1484   001828  22DA               	addwfc	fsr2h,f,c
  1485   00182A  CFDE F014          	movff	postinc2,??_setMotorPWM
  1486   00182E  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  1487   001832  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  1488   001836  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1489   00183A  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  1490                           
  1491                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  1492   00183E  EE20 F007          	lfsr	2,7
  1493   001842  5012               	movf	setMotorPWM@m^0,w,c
  1494   001844  26D9               	addwf	fsr2l,f,c
  1495   001846  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1496   001848  22DA               	addwfc	fsr2h,f,c
  1497   00184A  CFDE F014          	movff	postinc2,??_setMotorPWM
  1498   00184E  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  1499   001852  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  1500   001856  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1501   00185A  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  1502                           
  1503                           ;dc_motor.c: 77:     } else {
  1504   00185E  EF51  F00C         	goto	l86
  1505   001862                     l2744:
  1506                           
  1507                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  1508   001862  EE20 F005          	lfsr	2,5
  1509   001866  5012               	movf	setMotorPWM@m^0,w,c
  1510   001868  26D9               	addwf	fsr2l,f,c
  1511   00186A  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1512   00186C  22DA               	addwfc	fsr2h,f,c
  1513   00186E  CFDE F014          	movff	postinc2,??_setMotorPWM
  1514   001872  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  1515   001876  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  1516   00187A  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1517   00187E  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  1518                           
  1519                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  1520   001882  EE20 F007          	lfsr	2,7
  1521   001886  5012               	movf	setMotorPWM@m^0,w,c
  1522   001888  26D9               	addwf	fsr2l,f,c
  1523   00188A  5013               	movf	(setMotorPWM@m+1)^0,w,c
  1524   00188C  22DA               	addwfc	fsr2h,f,c
  1525   00188E  CFDE F014          	movff	postinc2,??_setMotorPWM
  1526   001892  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  1527   001896  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  1528   00189A  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1529   00189E  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  1530   0018A2                     l86:
  1531   0018A2  0012               	return		;funcret
  1532   0018A4                     __end_of_setMotorPWM:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function ___wmul *****************
  1536 ;; Defined at:
  1537 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  multiplier      2    4[COMRAM] unsigned int 
  1540 ;;  multiplicand    2    6[COMRAM] unsigned int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  product         2    8[COMRAM] unsigned int 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2    4[COMRAM] unsigned int 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, prodl, prodh
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;Total ram usage:        6 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 4
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_setMotorPWM
  1563 ;;		_normalise_readings
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text2
  1568   00231A                     __ptext2:
  1569                           	callstack 0
  1570   00231A                     ___wmul:
  1571                           	callstack 25
  1572   00231A  5005               	movf	___wmul@multiplier^0,w,c
  1573   00231C  0207               	mulwf	___wmul@multiplicand^0,c
  1574   00231E  CFF3 F009          	movff	prodl,___wmul@product
  1575   002322  CFF4 F00A          	movff	prodh,___wmul@product+1
  1576   002326  5005               	movf	___wmul@multiplier^0,w,c
  1577   002328  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  1578   00232A  50F3               	movf	243,w,c
  1579   00232C  260A               	addwf	(___wmul@product+1)^0,f,c
  1580   00232E  5006               	movf	(___wmul@multiplier+1)^0,w,c
  1581   002330  0207               	mulwf	___wmul@multiplicand^0,c
  1582   002332  50F3               	movf	243,w,c
  1583   002334  260A               	addwf	(___wmul@product+1)^0,f,c
  1584   002336  C009  F005         	movff	___wmul@product,?___wmul
  1585   00233A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  1586   00233E  0012               	return		;funcret
  1587   002340                     __end_of___wmul:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function ___lwdiv *****************
  1591 ;; Defined at:
  1592 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  dividend        2   10[COMRAM] unsigned int 
  1595 ;;  divisor         2   12[COMRAM] unsigned int 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  quotient        2   14[COMRAM] unsigned int 
  1598 ;;  counter         1   16[COMRAM] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  2   10[COMRAM] unsigned int 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1608 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;Total ram usage:        7 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 4
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_setMotorPWM
  1619 ;;		_normalise_readings
  1620 ;;		_make_master_closeness
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text3
  1625   001E4C                     __ptext3:
  1626                           	callstack 0
  1627   001E4C                     ___lwdiv:
  1628                           	callstack 25
  1629   001E4C  0E00               	movlw	0
  1630   001E4E  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  1631   001E50  0E00               	movlw	0
  1632   001E52  6E0F               	movwf	___lwdiv@quotient^0,c
  1633   001E54  500D               	movf	___lwdiv@divisor^0,w,c
  1634   001E56  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1635   001E58  B4D8               	btfsc	status,2,c
  1636   001E5A  EF31  F00F         	goto	u1371
  1637   001E5E  EF33  F00F         	goto	u1370
  1638   001E62                     u1371:
  1639   001E62  EF5B  F00F         	goto	l1001
  1640   001E66                     u1370:
  1641   001E66  0E01               	movlw	1
  1642   001E68  6E11               	movwf	___lwdiv@counter^0,c
  1643   001E6A  EF3B  F00F         	goto	l2672
  1644   001E6E                     l2670:
  1645   001E6E  90D8               	bcf	status,0,c
  1646   001E70  360D               	rlcf	___lwdiv@divisor^0,f,c
  1647   001E72  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1648   001E74  2A11               	incf	___lwdiv@counter^0,f,c
  1649   001E76                     l2672:
  1650   001E76  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  1651   001E78  EF40  F00F         	goto	u1381
  1652   001E7C  EF42  F00F         	goto	u1380
  1653   001E80                     u1381:
  1654   001E80  EF37  F00F         	goto	l2670
  1655   001E84                     u1380:
  1656   001E84                     l2674:
  1657   001E84  90D8               	bcf	status,0,c
  1658   001E86  360F               	rlcf	___lwdiv@quotient^0,f,c
  1659   001E88  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1660   001E8A  500D               	movf	___lwdiv@divisor^0,w,c
  1661   001E8C  5C0B               	subwf	___lwdiv@dividend^0,w,c
  1662   001E8E  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  1663   001E90  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1664   001E92  A0D8               	btfss	status,0,c
  1665   001E94  EF4E  F00F         	goto	u1391
  1666   001E98  EF50  F00F         	goto	u1390
  1667   001E9C                     u1391:
  1668   001E9C  EF55  F00F         	goto	l2682
  1669   001EA0                     u1390:
  1670   001EA0  500D               	movf	___lwdiv@divisor^0,w,c
  1671   001EA2  5E0B               	subwf	___lwdiv@dividend^0,f,c
  1672   001EA4  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  1673   001EA6  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1674   001EA8  800F               	bsf	___lwdiv@quotient^0,0,c
  1675   001EAA                     l2682:
  1676   001EAA  90D8               	bcf	status,0,c
  1677   001EAC  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1678   001EAE  320D               	rrcf	___lwdiv@divisor^0,f,c
  1679   001EB0  2E11               	decfsz	___lwdiv@counter^0,f,c
  1680   001EB2  EF42  F00F         	goto	l2674
  1681   001EB6                     l1001:
  1682   001EB6  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  1683   001EBA  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1684   001EBE  0012               	return		;funcret
  1685   001EC0                     __end_of___lwdiv:
  1686                           	callstack 0
  1687                           
  1688 ;; *************** function _initUSART4 *****************
  1689 ;; Defined at:
  1690 ;;		line 6 in file "serial.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1708 ;;Total ram usage:        0 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; Hardware stack levels required when called: 4
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text4
  1719   002362                     __ptext4:
  1720                           	callstack 0
  1721   002362                     _initUSART4:
  1722                           	callstack 26
  1723   002362                     
  1724                           ;serial.c: 10:     RC0PPS = 0x12;
  1725   002362  0E12               	movlw	18
  1726   002364  010E               	movlb	14	; () banked
  1727   002366  6F62               	movwf	98,b	;volatile
  1728                           
  1729                           ;serial.c: 11:     RX4PPS = 0x11;
  1730   002368  0E11               	movlw	17
  1731   00236A  6F15               	movwf	21,b	;volatile
  1732   00236C                     
  1733                           ; BSR set to: 14
  1734                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  1735   00236C  8283               	bsf	131,1,c	;volatile
  1736   00236E                     
  1737                           ; BSR set to: 14
  1738                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  1739   00236E  97E9               	bcf	233,3,b	;volatile
  1740   002370                     
  1741                           ; BSR set to: 14
  1742                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  1743   002370  95E8               	bcf	232,2,b	;volatile
  1744                           
  1745                           ;serial.c: 17:     SP4BRGL = 51;
  1746   002372  0E33               	movlw	51
  1747   002374  6FE5               	movwf	229,b	;volatile
  1748                           
  1749                           ;serial.c: 18:     SP4BRGH = 0;
  1750   002376  0E00               	movlw	0
  1751   002378  6FE6               	movwf	230,b	;volatile
  1752   00237A                     
  1753                           ; BSR set to: 14
  1754                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  1755   00237A  89E7               	bsf	231,4,b	;volatile
  1756   00237C                     
  1757                           ; BSR set to: 14
  1758                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  1759   00237C  8BE8               	bsf	232,5,b	;volatile
  1760   00237E                     
  1761                           ; BSR set to: 14
  1762                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  1763   00237E  8FE7               	bsf	231,7,b	;volatile
  1764   002380                     
  1765                           ; BSR set to: 14
  1766   002380  0012               	return		;funcret
  1767   002382                     __end_of_initUSART4:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _initDCmotorsPWM *****************
  1771 ;; Defined at:
  1772 ;;		line 6 in file "dc_motor.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; Hardware stack levels required when called: 4
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text5
  1801   001D4A                     __ptext5:
  1802                           	callstack 0
  1803   001D4A                     _initDCmotorsPWM:
  1804                           	callstack 26
  1805   001D4A                     
  1806                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  1807   001D4A  9485               	bcf	133,2,c	;volatile
  1808                           
  1809                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  1810   001D4C  9885               	bcf	133,4,c	;volatile
  1811                           
  1812                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  1813   001D4E  9E83               	bcf	131,7,c	;volatile
  1814                           
  1815                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  1816   001D50  9C87               	bcf	135,6,c	;volatile
  1817   001D52                     
  1818                           ;dc_motor.c: 14:     RE2PPS=0x05;
  1819   001D52  0E05               	movlw	5
  1820   001D54  010E               	movlb	14	; () banked
  1821   001D56  6F74               	movwf	116,b	;volatile
  1822                           
  1823                           ;dc_motor.c: 15:     RE4PPS=0x06;
  1824   001D58  0E06               	movlw	6
  1825   001D5A  6F76               	movwf	118,b	;volatile
  1826                           
  1827                           ;dc_motor.c: 16:     RC7PPS=0x07;
  1828   001D5C  0E07               	movlw	7
  1829   001D5E  6F69               	movwf	105,b	;volatile
  1830                           
  1831                           ;dc_motor.c: 17:     RG6PPS=0x08;
  1832   001D60  0E08               	movlw	8
  1833   001D62  6F88               	movwf	136,b	;volatile
  1834                           
  1835                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  1836   001D64  50BD               	movf	189,w,c	;volatile
  1837   001D66  0B8F               	andlw	-113
  1838   001D68  0940               	iorlw	64
  1839   001D6A  6EBD               	movwf	189,c	;volatile
  1840                           
  1841                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  1842   001D6C  0EE0               	movlw	-32
  1843   001D6E  16BE               	andwf	190,f,c	;volatile
  1844                           
  1845                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  1846   001D70  50BF               	movf	191,w,c	;volatile
  1847   001D72  0BF0               	andlw	-16
  1848   001D74  0901               	iorlw	1
  1849   001D76  6EBF               	movwf	191,c	;volatile
  1850                           
  1851                           ;dc_motor.c: 26:     T2PR=99;
  1852   001D78  0E63               	movlw	99
  1853   001D7A  6EBC               	movwf	188,c	;volatile
  1854   001D7C                     
  1855                           ; BSR set to: 14
  1856                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  1857   001D7C  8EBD               	bsf	189,7,c	;volatile
  1858                           
  1859                           ;dc_motor.c: 31:     CCPR1H=0;
  1860   001D7E  0E00               	movlw	0
  1861   001D80  6EAA               	movwf	170,c	;volatile
  1862                           
  1863                           ;dc_motor.c: 32:     CCPR2H=0;
  1864   001D82  0E00               	movlw	0
  1865   001D84  6EA6               	movwf	166,c	;volatile
  1866                           
  1867                           ;dc_motor.c: 33:     CCPR3H=0;
  1868   001D86  0E00               	movlw	0
  1869   001D88  010F               	movlb	15	; () banked
  1870   001D8A  6F25               	movwf	37,b	;volatile
  1871                           
  1872                           ;dc_motor.c: 34:     CCPR4H=0;
  1873   001D8C  0E00               	movlw	0
  1874   001D8E  6F21               	movwf	33,b	;volatile
  1875                           
  1876                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  1877   001D90  0EFC               	movlw	-4
  1878   001D92  16AD               	andwf	173,f,c	;volatile
  1879                           
  1880                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  1881   001D94  0EF3               	movlw	-13
  1882   001D96  16AD               	andwf	173,f,c	;volatile
  1883                           
  1884                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  1885   001D98  0ECF               	movlw	-49
  1886   001D9A  16AD               	andwf	173,f,c	;volatile
  1887                           
  1888                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  1889   001D9C  0E3F               	movlw	-193
  1890   001D9E  16AD               	andwf	173,f,c	;volatile
  1891   001DA0                     
  1892                           ; BSR set to: 15
  1893                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  1894   001DA0  88AB               	bsf	171,4,c	;volatile
  1895                           
  1896                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  1897   001DA2  50AB               	movf	171,w,c	;volatile
  1898   001DA4  0BF0               	andlw	-16
  1899   001DA6  090C               	iorlw	12
  1900   001DA8  6EAB               	movwf	171,c	;volatile
  1901   001DAA                     
  1902                           ; BSR set to: 15
  1903                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  1904   001DAA  8EAB               	bsf	171,7,c	;volatile
  1905   001DAC                     
  1906                           ; BSR set to: 15
  1907                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  1908   001DAC  88A7               	bsf	167,4,c	;volatile
  1909                           
  1910                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  1911   001DAE  50A7               	movf	167,w,c	;volatile
  1912   001DB0  0BF0               	andlw	-16
  1913   001DB2  090C               	iorlw	12
  1914   001DB4  6EA7               	movwf	167,c	;volatile
  1915   001DB6                     
  1916                           ; BSR set to: 15
  1917                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  1918   001DB6  8EA7               	bsf	167,7,c	;volatile
  1919   001DB8                     
  1920                           ; BSR set to: 15
  1921                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  1922   001DB8  8926               	bsf	38,4,b	;volatile
  1923                           
  1924                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  1925   001DBA  5126               	movf	38,w,b	;volatile
  1926   001DBC  0BF0               	andlw	-16
  1927   001DBE  090C               	iorlw	12
  1928   001DC0  6F26               	movwf	38,b	;volatile
  1929   001DC2                     
  1930                           ; BSR set to: 15
  1931                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  1932   001DC2  8F26               	bsf	38,7,b	;volatile
  1933   001DC4                     
  1934                           ; BSR set to: 15
  1935                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  1936   001DC4  8922               	bsf	34,4,b	;volatile
  1937                           
  1938                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  1939   001DC6  5122               	movf	34,w,b	;volatile
  1940   001DC8  0BF0               	andlw	-16
  1941   001DCA  090C               	iorlw	12
  1942   001DCC  6F22               	movwf	34,b	;volatile
  1943   001DCE                     
  1944                           ; BSR set to: 15
  1945                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  1946   001DCE  8F22               	bsf	34,7,b	;volatile
  1947   001DD0                     
  1948                           ; BSR set to: 15
  1949   001DD0  0012               	return		;funcret
  1950   001DD2                     __end_of_initDCmotorsPWM:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _color_click_init *****************
  1954 ;; Defined at:
  1955 ;;		line 5 in file "color.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1973 ;;Total ram usage:        1 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; Hardware stack levels required when called: 7
  1976 ;; This function calls:
  1977 ;;		_I2C_2_Master_Init
  1978 ;;		_color_writetoaddr
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text6
  1985   002212                     __ptext6:
  1986                           	callstack 0
  1987   002212                     _color_click_init:
  1988                           	callstack 23
  1989   002212                     
  1990                           ;color.c: 8:     I2C_2_Master_Init();
  1991   002212  EC50  F011         	call	_I2C_2_Master_Init	;wreg free
  1992   002216                     
  1993                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1994   002216  0E01               	movlw	1
  1995   002218  6E07               	movwf	color_writetoaddr@value^0,c
  1996   00221A  0E00               	movlw	0
  1997   00221C  ECC1  F011         	call	_color_writetoaddr
  1998   002220                     
  1999                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2000   002220  0E3F               	movlw	63
  2001   002222  6E09               	movwf	??_color_click_init^0,c
  2002   002224  0E55               	movlw	85
  2003   002226                     u2157:
  2004   002226  2EE8               	decfsz	wreg,f,c
  2005   002228  D7FE               	bra	u2157
  2006   00222A  2E09               	decfsz	??_color_click_init^0,f,c
  2007   00222C  D7FC               	bra	u2157
  2008   00222E  F000               	nop	
  2009   002230                     
  2010                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2011   002230  0E03               	movlw	3
  2012   002232  6E07               	movwf	color_writetoaddr@value^0,c
  2013   002234  0E00               	movlw	0
  2014   002236  ECC1  F011         	call	_color_writetoaddr
  2015   00223A                     
  2016                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2017   00223A  0ED5               	movlw	213
  2018   00223C  6E07               	movwf	color_writetoaddr@value^0,c
  2019   00223E  0E01               	movlw	1
  2020   002240  ECC1  F011         	call	_color_writetoaddr
  2021   002244  0012               	return		;funcret
  2022   002246                     __end_of_color_click_init:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _I2C_2_Master_Init *****************
  2026 ;; Defined at:
  2027 ;;		line 4 in file "i2c.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2045 ;;Total ram usage:        0 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 4
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_color_click_init
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text7
  2057   0022A0                     __ptext7:
  2058                           	callstack 0
  2059   0022A0                     _I2C_2_Master_Init:
  2060                           	callstack 25
  2061   0022A0                     
  2062                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2063   0022A0  010E               	movlb	14	; () banked
  2064   0022A2  51D9               	movf	217,w,b	;volatile
  2065   0022A4  0BF0               	andlw	-16
  2066   0022A6  0908               	iorlw	8
  2067   0022A8  6FD9               	movwf	217,b	;volatile
  2068   0022AA                     
  2069                           ; BSR set to: 14
  2070                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2071   0022AA  8BD9               	bsf	217,5,b	;volatile
  2072                           
  2073                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2074   0022AC  0E9F               	movlw	159
  2075   0022AE  6FD6               	movwf	214,b	;volatile
  2076   0022B0                     
  2077                           ; BSR set to: 14
  2078                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2079   0022B0  8A84               	bsf	132,5,c	;volatile
  2080   0022B2                     
  2081                           ; BSR set to: 14
  2082                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2083   0022B2  8C84               	bsf	132,6,c	;volatile
  2084   0022B4                     
  2085                           ; BSR set to: 14
  2086                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2087   0022B4  9BA7               	bcf	167,5,b	;volatile
  2088   0022B6                     
  2089                           ; BSR set to: 14
  2090                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2091   0022B6  9DA7               	bcf	167,6,b	;volatile
  2092                           
  2093                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2094   0022B8  0E1D               	movlw	29
  2095   0022BA  6F1D               	movwf	29,b	;volatile
  2096                           
  2097                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2098   0022BC  0E1E               	movlw	30
  2099   0022BE  6F1C               	movwf	28,b	;volatile
  2100                           
  2101                           ;i2c.c: 18:   RD5PPS=0x1C;
  2102   0022C0  0E1C               	movlw	28
  2103   0022C2  6F6F               	movwf	111,b	;volatile
  2104                           
  2105                           ;i2c.c: 19:   RD6PPS=0x1B;
  2106   0022C4  0E1B               	movlw	27
  2107   0022C6  6F70               	movwf	112,b	;volatile
  2108   0022C8                     
  2109                           ; BSR set to: 14
  2110   0022C8  0012               	return		;funcret
  2111   0022CA                     __end_of_I2C_2_Master_Init:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _collect_avg_readings *****************
  2115 ;; Defined at:
  2116 ;;		line 30 in file "colour_identify.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  red_read        2   15[COMRAM] PTR unsigned int 
  2119 ;;		 -> main@red_read(2), 
  2120 ;;  green_read      2   17[COMRAM] PTR unsigned int 
  2121 ;;		 -> main@green_read(2), 
  2122 ;;  blue_read       2   19[COMRAM] PTR unsigned int 
  2123 ;;		 -> main@blue_read(2), 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  i               2   29[COMRAM] int 
  2126 ;;  i               2   27[COMRAM] int 
  2127 ;;  i               2   25[COMRAM] int 
  2128 ;;  i               2   23[COMRAM] int 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2138 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;Total ram usage:       16 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 7
  2145 ;; This function calls:
  2146 ;;		_color_read_Blue
  2147 ;;		_color_read_Green
  2148 ;;		_color_read_Red
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;;		_card_response
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text8
  2156   0013CA                     __ptext8:
  2157                           	callstack 0
  2158   0013CA                     _collect_avg_readings:
  2159                           	callstack 23
  2160   0013CA                     
  2161                           ;colour_identify.c: 30: void collect_avg_readings(unsigned int *red_read, unsigned int *
      +                          green_read, unsigned int *blue_read);colour_identify.c: 31: {;colour_identify.c: 34:    
      +                           for (int i = 0; i <= 500; i++){
  2162   0013CA  0E00               	movlw	0
  2163   0013CC  6E19               	movwf	(collect_avg_readings@i+1)^0,c
  2164   0013CE  0E00               	movlw	0
  2165   0013D0  6E18               	movwf	collect_avg_readings@i^0,c
  2166   0013D2                     l2790:
  2167                           
  2168                           ;colour_identify.c: 35:         *red_read = color_read_Red();
  2169   0013D2  ECE7  F00F         	call	_color_read_Red	;wreg free
  2170   0013D6  C010  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  2171   0013DA  C011  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  2172   0013DE  C009  FFDE         	movff	?_color_read_Red,postinc2
  2173   0013E2  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  2174                           
  2175                           ;colour_identify.c: 36:         *green_read = color_read_Green();
  2176   0013E6  EC0F  F010         	call	_color_read_Green	;wreg free
  2177   0013EA  C012  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  2178   0013EE  C013  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  2179   0013F2  C009  FFDE         	movff	?_color_read_Green,postinc2
  2180   0013F6  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  2181                           
  2182                           ;colour_identify.c: 37:         *blue_read = color_read_Blue();
  2183   0013FA  EC37  F010         	call	_color_read_Blue	;wreg free
  2184   0013FE  C014  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  2185   001402  C015  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  2186   001406  C009  FFDE         	movff	?_color_read_Blue,postinc2
  2187   00140A  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  2188   00140E                     
  2189                           ;colour_identify.c: 38:     }
  2190   00140E  4A18               	infsnz	collect_avg_readings@i^0,f,c
  2191   001410  2A19               	incf	(collect_avg_readings@i+1)^0,f,c
  2192   001412  BE19               	btfsc	(collect_avg_readings@i+1)^0,7,c
  2193   001414  EF15  F00A         	goto	u1421
  2194   001418  0EF5               	movlw	245
  2195   00141A  5C18               	subwf	collect_avg_readings@i^0,w,c
  2196   00141C  0E01               	movlw	1
  2197   00141E  5819               	subwfb	(collect_avg_readings@i+1)^0,w,c
  2198   001420  A0D8               	btfss	status,0,c
  2199   001422  EF15  F00A         	goto	u1421
  2200   001426  EF17  F00A         	goto	u1420
  2201   00142A                     u1421:
  2202   00142A  EFE9  F009         	goto	l2790
  2203   00142E                     u1420:
  2204   00142E                     
  2205                           ;colour_identify.c: 42:     for(int i = 0; i <= 2; i++){
  2206   00142E  0E00               	movlw	0
  2207   001430  6E1B               	movwf	(collect_avg_readings@i_1578+1)^0,c
  2208   001432  0E00               	movlw	0
  2209   001434  6E1A               	movwf	collect_avg_readings@i_1578^0,c
  2210   001436                     l2802:
  2211                           
  2212                           ;colour_identify.c: 43:         *red_read += color_read_Red();
  2213   001436  ECE7  F00F         	call	_color_read_Red	;wreg free
  2214   00143A  C010  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  2215   00143E  C011  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  2216   001442  5009               	movf	?_color_read_Red^0,w,c
  2217   001444  26DE               	addwf	postinc2,f,c
  2218   001446  500A               	movf	(?_color_read_Red+1)^0,w,c
  2219   001448  22DD               	addwfc	postdec2,f,c
  2220   00144A                     
  2221                           ;colour_identify.c: 44:         _delay((unsigned long)((200)*(64000000/4000.0)));
  2222   00144A  0E11               	movlw	17
  2223   00144C  6E17               	movwf	(??_collect_avg_readings+1)^0,c
  2224   00144E  0E3C               	movlw	60
  2225   001450  6E16               	movwf	??_collect_avg_readings^0,c
  2226   001452  0ECB               	movlw	203
  2227   001454                     u2167:
  2228   001454  2EE8               	decfsz	wreg,f,c
  2229   001456  D7FE               	bra	u2167
  2230   001458  2E16               	decfsz	??_collect_avg_readings^0,f,c
  2231   00145A  D7FC               	bra	u2167
  2232   00145C  2E17               	decfsz	(??_collect_avg_readings+1)^0,f,c
  2233   00145E  D7FA               	bra	u2167
  2234   001460  F000               	nop	
  2235   001462                     
  2236                           ;colour_identify.c: 45:     }
  2237   001462  4A1A               	infsnz	collect_avg_readings@i_1578^0,f,c
  2238   001464  2A1B               	incf	(collect_avg_readings@i_1578+1)^0,f,c
  2239   001466  BE1B               	btfsc	(collect_avg_readings@i_1578+1)^0,7,c
  2240   001468  EF3F  F00A         	goto	u1431
  2241   00146C  501B               	movf	(collect_avg_readings@i_1578+1)^0,w,c
  2242   00146E  E109               	bnz	u1430
  2243   001470  0E03               	movlw	3
  2244   001472  5C1A               	subwf	collect_avg_readings@i_1578^0,w,c
  2245   001474  A0D8               	btfss	status,0,c
  2246   001476  EF3F  F00A         	goto	u1431
  2247   00147A  EF41  F00A         	goto	u1430
  2248   00147E                     u1431:
  2249   00147E  EF1B  F00A         	goto	l2802
  2250   001482                     u1430:
  2251   001482                     
  2252                           ;colour_identify.c: 46:     *red_read = *red_read/4;
  2253   001482  C010  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  2254   001486  C011  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  2255   00148A  CFDE F016          	movff	postinc2,??_collect_avg_readings
  2256   00148E  CFDD F017          	movff	postdec2,??_collect_avg_readings+1
  2257   001492  90D8               	bcf	status,0,c
  2258   001494  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  2259   001496  3216               	rrcf	??_collect_avg_readings^0,f,c
  2260   001498  90D8               	bcf	status,0,c
  2261   00149A  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  2262   00149C  3216               	rrcf	??_collect_avg_readings^0,f,c
  2263   00149E  C010  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  2264   0014A2  C011  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  2265   0014A6  C016  FFDE         	movff	??_collect_avg_readings,postinc2
  2266   0014AA  C017  FFDD         	movff	??_collect_avg_readings+1,postdec2
  2267   0014AE                     
  2268                           ;colour_identify.c: 48:     for(int i = 0; i <= 2; i++){
  2269   0014AE  0E00               	movlw	0
  2270   0014B0  6E1D               	movwf	(collect_avg_readings@i_1579+1)^0,c
  2271   0014B2  0E00               	movlw	0
  2272   0014B4  6E1C               	movwf	collect_avg_readings@i_1579^0,c
  2273   0014B6                     l2818:
  2274                           
  2275                           ;colour_identify.c: 49:         *green_read += color_read_Green();
  2276   0014B6  EC0F  F010         	call	_color_read_Green	;wreg free
  2277   0014BA  C012  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  2278   0014BE  C013  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  2279   0014C2  5009               	movf	?_color_read_Green^0,w,c
  2280   0014C4  26DE               	addwf	postinc2,f,c
  2281   0014C6  500A               	movf	(?_color_read_Green+1)^0,w,c
  2282   0014C8  22DD               	addwfc	postdec2,f,c
  2283   0014CA                     
  2284                           ;colour_identify.c: 50:         _delay((unsigned long)((200)*(64000000/4000.0)));
  2285   0014CA  0E11               	movlw	17
  2286   0014CC  6E17               	movwf	(??_collect_avg_readings+1)^0,c
  2287   0014CE  0E3C               	movlw	60
  2288   0014D0  6E16               	movwf	??_collect_avg_readings^0,c
  2289   0014D2  0ECB               	movlw	203
  2290   0014D4                     u2177:
  2291   0014D4  2EE8               	decfsz	wreg,f,c
  2292   0014D6  D7FE               	bra	u2177
  2293   0014D8  2E16               	decfsz	??_collect_avg_readings^0,f,c
  2294   0014DA  D7FC               	bra	u2177
  2295   0014DC  2E17               	decfsz	(??_collect_avg_readings+1)^0,f,c
  2296   0014DE  D7FA               	bra	u2177
  2297   0014E0  F000               	nop	
  2298   0014E2                     
  2299                           ;colour_identify.c: 51:     }
  2300   0014E2  4A1C               	infsnz	collect_avg_readings@i_1579^0,f,c
  2301   0014E4  2A1D               	incf	(collect_avg_readings@i_1579+1)^0,f,c
  2302   0014E6  BE1D               	btfsc	(collect_avg_readings@i_1579+1)^0,7,c
  2303   0014E8  EF7F  F00A         	goto	u1441
  2304   0014EC  501D               	movf	(collect_avg_readings@i_1579+1)^0,w,c
  2305   0014EE  E109               	bnz	u1440
  2306   0014F0  0E03               	movlw	3
  2307   0014F2  5C1C               	subwf	collect_avg_readings@i_1579^0,w,c
  2308   0014F4  A0D8               	btfss	status,0,c
  2309   0014F6  EF7F  F00A         	goto	u1441
  2310   0014FA  EF81  F00A         	goto	u1440
  2311   0014FE                     u1441:
  2312   0014FE  EF5B  F00A         	goto	l2818
  2313   001502                     u1440:
  2314   001502                     
  2315                           ;colour_identify.c: 52:     *green_read = *green_read/4;
  2316   001502  C012  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  2317   001506  C013  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  2318   00150A  CFDE F016          	movff	postinc2,??_collect_avg_readings
  2319   00150E  CFDD F017          	movff	postdec2,??_collect_avg_readings+1
  2320   001512  90D8               	bcf	status,0,c
  2321   001514  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  2322   001516  3216               	rrcf	??_collect_avg_readings^0,f,c
  2323   001518  90D8               	bcf	status,0,c
  2324   00151A  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  2325   00151C  3216               	rrcf	??_collect_avg_readings^0,f,c
  2326   00151E  C012  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  2327   001522  C013  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  2328   001526  C016  FFDE         	movff	??_collect_avg_readings,postinc2
  2329   00152A  C017  FFDD         	movff	??_collect_avg_readings+1,postdec2
  2330   00152E                     
  2331                           ;colour_identify.c: 54:     for(int i = 0; i <= 2; i++){
  2332   00152E  0E00               	movlw	0
  2333   001530  6E1F               	movwf	(collect_avg_readings@i_1580+1)^0,c
  2334   001532  0E00               	movlw	0
  2335   001534  6E1E               	movwf	collect_avg_readings@i_1580^0,c
  2336   001536                     l2834:
  2337                           
  2338                           ;colour_identify.c: 55:         *blue_read += color_read_Blue();
  2339   001536  EC37  F010         	call	_color_read_Blue	;wreg free
  2340   00153A  C014  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  2341   00153E  C015  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  2342   001542  5009               	movf	?_color_read_Blue^0,w,c
  2343   001544  26DE               	addwf	postinc2,f,c
  2344   001546  500A               	movf	(?_color_read_Blue+1)^0,w,c
  2345   001548  22DD               	addwfc	postdec2,f,c
  2346   00154A                     
  2347                           ;colour_identify.c: 56:         _delay((unsigned long)((200)*(64000000/4000.0)));
  2348   00154A  0E11               	movlw	17
  2349   00154C  6E17               	movwf	(??_collect_avg_readings+1)^0,c
  2350   00154E  0E3C               	movlw	60
  2351   001550  6E16               	movwf	??_collect_avg_readings^0,c
  2352   001552  0ECB               	movlw	203
  2353   001554                     u2187:
  2354   001554  2EE8               	decfsz	wreg,f,c
  2355   001556  D7FE               	bra	u2187
  2356   001558  2E16               	decfsz	??_collect_avg_readings^0,f,c
  2357   00155A  D7FC               	bra	u2187
  2358   00155C  2E17               	decfsz	(??_collect_avg_readings+1)^0,f,c
  2359   00155E  D7FA               	bra	u2187
  2360   001560  F000               	nop	
  2361   001562                     
  2362                           ;colour_identify.c: 57:     }
  2363   001562  4A1E               	infsnz	collect_avg_readings@i_1580^0,f,c
  2364   001564  2A1F               	incf	(collect_avg_readings@i_1580+1)^0,f,c
  2365   001566  BE1F               	btfsc	(collect_avg_readings@i_1580+1)^0,7,c
  2366   001568  EFBF  F00A         	goto	u1451
  2367   00156C  501F               	movf	(collect_avg_readings@i_1580+1)^0,w,c
  2368   00156E  E109               	bnz	u1450
  2369   001570  0E03               	movlw	3
  2370   001572  5C1E               	subwf	collect_avg_readings@i_1580^0,w,c
  2371   001574  A0D8               	btfss	status,0,c
  2372   001576  EFBF  F00A         	goto	u1451
  2373   00157A  EFC1  F00A         	goto	u1450
  2374   00157E                     u1451:
  2375   00157E  EF9B  F00A         	goto	l2834
  2376   001582                     u1450:
  2377   001582                     
  2378                           ;colour_identify.c: 58:     *blue_read = *blue_read/4;
  2379   001582  C014  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  2380   001586  C015  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  2381   00158A  CFDE F016          	movff	postinc2,??_collect_avg_readings
  2382   00158E  CFDD F017          	movff	postdec2,??_collect_avg_readings+1
  2383   001592  90D8               	bcf	status,0,c
  2384   001594  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  2385   001596  3216               	rrcf	??_collect_avg_readings^0,f,c
  2386   001598  90D8               	bcf	status,0,c
  2387   00159A  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  2388   00159C  3216               	rrcf	??_collect_avg_readings^0,f,c
  2389   00159E  C014  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  2390   0015A2  C015  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  2391   0015A6  C016  FFDE         	movff	??_collect_avg_readings,postinc2
  2392   0015AA  C017  FFDD         	movff	??_collect_avg_readings+1,postdec2
  2393   0015AE  0012               	return		;funcret
  2394   0015B0                     __end_of_collect_avg_readings:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _color_read_Red *****************
  2398 ;; Defined at:
  2399 ;;		line 29 in file "color.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  tmp             2   13[COMRAM] unsigned int 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  2    8[COMRAM] unsigned int 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2415 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;Total ram usage:        7 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 6
  2420 ;; This function calls:
  2421 ;;		_I2C_2_Master_Read
  2422 ;;		_I2C_2_Master_RepStart
  2423 ;;		_I2C_2_Master_Start
  2424 ;;		_I2C_2_Master_Stop
  2425 ;;		_I2C_2_Master_Write
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;;		_collect_avg_readings
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text9
  2433   001FCE                     __ptext9:
  2434                           	callstack 0
  2435   001FCE                     _color_read_Red:
  2436                           	callstack 24
  2437   001FCE                     
  2438                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  2439   001FCE  EC11  F012         	call	_I2C_2_Master_Start	;wreg free
  2440                           
  2441                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2442   001FD2  0E52               	movlw	82
  2443   001FD4  ECFB  F011         	call	_I2C_2_Master_Write
  2444                           
  2445                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  2446   001FD8  0EB6               	movlw	182
  2447   001FDA  ECFB  F011         	call	_I2C_2_Master_Write
  2448                           
  2449                           ;color.c: 35:  I2C_2_Master_RepStart();
  2450   001FDE  EC07  F012         	call	_I2C_2_Master_RepStart	;wreg free
  2451                           
  2452                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2453   001FE2  0E53               	movlw	83
  2454   001FE4  ECFB  F011         	call	_I2C_2_Master_Write
  2455                           
  2456                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  2457   001FE8  0E01               	movlw	1
  2458   001FEA  ECA9  F010         	call	_I2C_2_Master_Read
  2459   001FEE  6E0B               	movwf	??_color_read_Red^0,c
  2460   001FF0  500B               	movf	??_color_read_Red^0,w,c
  2461   001FF2  6E0E               	movwf	color_read_Red@tmp^0,c
  2462   001FF4  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2463                           
  2464                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2465   001FF6  0E00               	movlw	0
  2466   001FF8  ECA9  F010         	call	_I2C_2_Master_Read
  2467   001FFC  6E0B               	movwf	??_color_read_Red^0,c
  2468   001FFE  500B               	movf	??_color_read_Red^0,w,c
  2469   002000  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2470   002002  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2471   002004  500E               	movf	color_read_Red@tmp^0,w,c
  2472   002006  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2473   002008  6E0E               	movwf	color_read_Red@tmp^0,c
  2474   00200A  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2475   00200C  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2476   00200E  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2477                           
  2478                           ;color.c: 39:  I2C_2_Master_Stop();
  2479   002010  EC0C  F012         	call	_I2C_2_Master_Stop	;wreg free
  2480   002014                     
  2481                           ;color.c: 40:  return tmp;
  2482   002014  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2483   002018  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2484   00201C  0012               	return		;funcret
  2485   00201E                     __end_of_color_read_Red:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _color_read_Green *****************
  2489 ;; Defined at:
  2490 ;;		line 43 in file "color.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  tmp             2   13[COMRAM] unsigned int 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  2    8[COMRAM] unsigned int 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;Total ram usage:        7 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 6
  2511 ;; This function calls:
  2512 ;;		_I2C_2_Master_Read
  2513 ;;		_I2C_2_Master_RepStart
  2514 ;;		_I2C_2_Master_Start
  2515 ;;		_I2C_2_Master_Stop
  2516 ;;		_I2C_2_Master_Write
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;;		_collect_avg_readings
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text10
  2524   00201E                     __ptext10:
  2525                           	callstack 0
  2526   00201E                     _color_read_Green:
  2527                           	callstack 24
  2528   00201E                     
  2529                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  2530   00201E  EC11  F012         	call	_I2C_2_Master_Start	;wreg free
  2531                           
  2532                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  2533   002022  0E52               	movlw	82
  2534   002024  ECFB  F011         	call	_I2C_2_Master_Write
  2535                           
  2536                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  2537   002028  0EB8               	movlw	184
  2538   00202A  ECFB  F011         	call	_I2C_2_Master_Write
  2539                           
  2540                           ;color.c: 49:  I2C_2_Master_RepStart();
  2541   00202E  EC07  F012         	call	_I2C_2_Master_RepStart	;wreg free
  2542                           
  2543                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  2544   002032  0E53               	movlw	83
  2545   002034  ECFB  F011         	call	_I2C_2_Master_Write
  2546                           
  2547                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  2548   002038  0E01               	movlw	1
  2549   00203A  ECA9  F010         	call	_I2C_2_Master_Read
  2550   00203E  6E0B               	movwf	??_color_read_Green^0,c
  2551   002040  500B               	movf	??_color_read_Green^0,w,c
  2552   002042  6E0E               	movwf	color_read_Green@tmp^0,c
  2553   002044  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2554                           
  2555                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2556   002046  0E00               	movlw	0
  2557   002048  ECA9  F010         	call	_I2C_2_Master_Read
  2558   00204C  6E0B               	movwf	??_color_read_Green^0,c
  2559   00204E  500B               	movf	??_color_read_Green^0,w,c
  2560   002050  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2561   002052  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2562   002054  500E               	movf	color_read_Green@tmp^0,w,c
  2563   002056  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2564   002058  6E0E               	movwf	color_read_Green@tmp^0,c
  2565   00205A  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2566   00205C  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2567   00205E  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2568                           
  2569                           ;color.c: 53:  I2C_2_Master_Stop();
  2570   002060  EC0C  F012         	call	_I2C_2_Master_Stop	;wreg free
  2571   002064                     
  2572                           ;color.c: 54:  return tmp;
  2573   002064  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2574   002068  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2575   00206C  0012               	return		;funcret
  2576   00206E                     __end_of_color_read_Green:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _color_read_Blue *****************
  2580 ;; Defined at:
  2581 ;;		line 57 in file "color.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  tmp             2   13[COMRAM] unsigned int 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2    8[COMRAM] unsigned int 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;Total ram usage:        7 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 6
  2602 ;; This function calls:
  2603 ;;		_I2C_2_Master_Read
  2604 ;;		_I2C_2_Master_RepStart
  2605 ;;		_I2C_2_Master_Start
  2606 ;;		_I2C_2_Master_Stop
  2607 ;;		_I2C_2_Master_Write
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;;		_collect_avg_readings
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text11
  2615   00206E                     __ptext11:
  2616                           	callstack 0
  2617   00206E                     _color_read_Blue:
  2618                           	callstack 24
  2619   00206E                     
  2620                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  2621   00206E  EC11  F012         	call	_I2C_2_Master_Start	;wreg free
  2622                           
  2623                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  2624   002072  0E52               	movlw	82
  2625   002074  ECFB  F011         	call	_I2C_2_Master_Write
  2626                           
  2627                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  2628   002078  0EBA               	movlw	186
  2629   00207A  ECFB  F011         	call	_I2C_2_Master_Write
  2630                           
  2631                           ;color.c: 63:  I2C_2_Master_RepStart();
  2632   00207E  EC07  F012         	call	_I2C_2_Master_RepStart	;wreg free
  2633                           
  2634                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  2635   002082  0E53               	movlw	83
  2636   002084  ECFB  F011         	call	_I2C_2_Master_Write
  2637                           
  2638                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  2639   002088  0E01               	movlw	1
  2640   00208A  ECA9  F010         	call	_I2C_2_Master_Read
  2641   00208E  6E0B               	movwf	??_color_read_Blue^0,c
  2642   002090  500B               	movf	??_color_read_Blue^0,w,c
  2643   002092  6E0E               	movwf	color_read_Blue@tmp^0,c
  2644   002094  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  2645                           
  2646                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2647   002096  0E00               	movlw	0
  2648   002098  ECA9  F010         	call	_I2C_2_Master_Read
  2649   00209C  6E0B               	movwf	??_color_read_Blue^0,c
  2650   00209E  500B               	movf	??_color_read_Blue^0,w,c
  2651   0020A0  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  2652   0020A2  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  2653   0020A4  500E               	movf	color_read_Blue@tmp^0,w,c
  2654   0020A6  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  2655   0020A8  6E0E               	movwf	color_read_Blue@tmp^0,c
  2656   0020AA  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  2657   0020AC  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  2658   0020AE  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  2659                           
  2660                           ;color.c: 67:  I2C_2_Master_Stop();
  2661   0020B0  EC0C  F012         	call	_I2C_2_Master_Stop	;wreg free
  2662   0020B4                     
  2663                           ;color.c: 68:  return tmp;
  2664   0020B4  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  2665   0020B8  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2666   0020BC  0012               	return		;funcret
  2667   0020BE                     __end_of_color_read_Blue:
  2668                           	callstack 0
  2669                           
  2670 ;; *************** function _clear_read_calibration *****************
  2671 ;; Defined at:
  2672 ;;		line 10 in file "colour_identify.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  buf             2   31[BANK0 ] PTR unsigned char 
  2675 ;;		 -> main@buf(150), 
  2676 ;;  clear_read      2   33[BANK0 ] PTR unsigned int 
  2677 ;;		 -> main@clear_read(2), 
  2678 ;;  clear_read_c    2   35[BANK0 ] PTR unsigned int 
  2679 ;;		 -> main@clear_read_check(2), 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  i               2   43[BANK0 ] int 
  2682 ;;  i               2   41[BANK0 ] int 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  2   31[BANK0 ] unsigned int 
  2685 ;; Registers used:
  2686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2692 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;Total ram usage:       14 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 12
  2699 ;; This function calls:
  2700 ;;		_color_read_Clear
  2701 ;;		_sendStringSerial4
  2702 ;;		_sprintf
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text12
  2709   001B66                     __ptext12:
  2710                           	callstack 0
  2711   001B66                     _clear_read_calibration:
  2712                           	callstack 18
  2713   001B66                     
  2714                           ;colour_identify.c: 12:     for (int i = 0; i <= 500; i++){
  2715   001B66  0E00               	movlw	0
  2716   001B68  0100               	movlb	0	; () banked
  2717   001B6A  6FC7               	movwf	(clear_read_calibration@i+1)& (0+255),b
  2718   001B6C  0E00               	movlw	0
  2719   001B6E  6FC6               	movwf	clear_read_calibration@i& (0+255),b
  2720   001B70                     l3432:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;colour_identify.c: 13:         *clear_read = color_read_Clear();
  2724   001B70  EC5F  F010         	call	_color_read_Clear	;wreg free
  2725   001B74  C0BE  FFD9         	movff	clear_read_calibration@clear_read,fsr2l
  2726   001B78  C0BF  FFDA         	movff	clear_read_calibration@clear_read+1,fsr2h
  2727   001B7C  C009  FFDE         	movff	?_color_read_Clear,postinc2
  2728   001B80  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  2729   001B84                     
  2730                           ;colour_identify.c: 14:     }
  2731   001B84  0100               	movlb	0	; () banked
  2732   001B86  4BC6               	infsnz	clear_read_calibration@i& (0+255),f,b
  2733   001B88  2BC7               	incf	(clear_read_calibration@i+1)& (0+255),f,b
  2734   001B8A                     
  2735                           ; BSR set to: 0
  2736   001B8A  BFC7               	btfsc	(clear_read_calibration@i+1)& (0+255),7,b
  2737   001B8C  EFD1  F00D         	goto	u2021
  2738   001B90  0EF5               	movlw	245
  2739   001B92  5DC6               	subwf	clear_read_calibration@i& (0+255),w,b
  2740   001B94  0E01               	movlw	1
  2741   001B96  59C7               	subwfb	(clear_read_calibration@i+1)& (0+255),w,b
  2742   001B98  A0D8               	btfss	status,0,c
  2743   001B9A  EFD1  F00D         	goto	u2021
  2744   001B9E  EFD3  F00D         	goto	u2020
  2745   001BA2                     u2021:
  2746   001BA2  EFB8  F00D         	goto	l3432
  2747   001BA6                     u2020:
  2748   001BA6                     
  2749                           ; BSR set to: 0
  2750                           ;colour_identify.c: 16:     for(int i = 0; i <= 2; i++){
  2751   001BA6  0E00               	movlw	0
  2752   001BA8  6FC9               	movwf	(clear_read_calibration@i_1571+1)& (0+255),b
  2753   001BAA  0E00               	movlw	0
  2754   001BAC  6FC8               	movwf	clear_read_calibration@i_1571& (0+255),b
  2755   001BAE                     l3444:
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;colour_identify.c: 17:         *clear_read += color_read_Clear();
  2759   001BAE  EC5F  F010         	call	_color_read_Clear	;wreg free
  2760   001BB2  C0BE  FFD9         	movff	clear_read_calibration@clear_read,fsr2l
  2761   001BB6  C0BF  FFDA         	movff	clear_read_calibration@clear_read+1,fsr2h
  2762   001BBA  5009               	movf	?_color_read_Clear^0,w,c
  2763   001BBC  26DE               	addwf	postinc2,f,c
  2764   001BBE  500A               	movf	(?_color_read_Clear+1)^0,w,c
  2765   001BC0  22DD               	addwfc	postdec2,f,c
  2766   001BC2                     
  2767                           ;colour_identify.c: 18:         _delay((unsigned long)((200)*(64000000/4000.0)));
  2768   001BC2  0E11               	movlw	17
  2769   001BC4  0100               	movlb	0	; () banked
  2770   001BC6  6FC3               	movwf	(??_clear_read_calibration+1)& (0+255),b
  2771   001BC8  0E3C               	movlw	60
  2772   001BCA  6FC2               	movwf	??_clear_read_calibration& (0+255),b
  2773   001BCC  0ECB               	movlw	203
  2774   001BCE                     u2197:
  2775   001BCE  2EE8               	decfsz	wreg,f,c
  2776   001BD0  D7FE               	bra	u2197
  2777   001BD2  2FC2               	decfsz	??_clear_read_calibration& (0+255),f,b
  2778   001BD4  D7FC               	bra	u2197
  2779   001BD6  2FC3               	decfsz	(??_clear_read_calibration+1)& (0+255),f,b
  2780   001BD8  D7FA               	bra	u2197
  2781   001BDA                     
  2782                           ;colour_identify.c: 19:     }
  2783   001BDA  0100               	movlb	0	; () banked
  2784   001BDC  4BC8               	infsnz	clear_read_calibration@i_1571& (0+255),f,b
  2785   001BDE  2BC9               	incf	(clear_read_calibration@i_1571+1)& (0+255),f,b
  2786   001BE0                     
  2787                           ; BSR set to: 0
  2788   001BE0  BFC9               	btfsc	(clear_read_calibration@i_1571+1)& (0+255),7,b
  2789   001BE2  EFFC  F00D         	goto	u2031
  2790   001BE6  51C9               	movf	(clear_read_calibration@i_1571+1)& (0+255),w,b
  2791   001BE8  E109               	bnz	u2030
  2792   001BEA  0E03               	movlw	3
  2793   001BEC  5DC8               	subwf	clear_read_calibration@i_1571& (0+255),w,b
  2794   001BEE  A0D8               	btfss	status,0,c
  2795   001BF0  EFFC  F00D         	goto	u2031
  2796   001BF4  EFFE  F00D         	goto	u2030
  2797   001BF8                     u2031:
  2798   001BF8  EFD7  F00D         	goto	l3444
  2799   001BFC                     u2030:
  2800   001BFC                     
  2801                           ; BSR set to: 0
  2802                           ;colour_identify.c: 21:     *clear_read = *clear_read/4;
  2803   001BFC  C0BE  FFD9         	movff	clear_read_calibration@clear_read,fsr2l
  2804   001C00  C0BF  FFDA         	movff	clear_read_calibration@clear_read+1,fsr2h
  2805   001C04  CFDE F0C2          	movff	postinc2,??_clear_read_calibration
  2806   001C08  CFDD F0C3          	movff	postdec2,??_clear_read_calibration+1
  2807   001C0C  90D8               	bcf	status,0,c
  2808   001C0E  33C3               	rrcf	(??_clear_read_calibration+1)& (0+255),f,b
  2809   001C10  33C2               	rrcf	??_clear_read_calibration& (0+255),f,b
  2810   001C12  90D8               	bcf	status,0,c
  2811   001C14  33C3               	rrcf	(??_clear_read_calibration+1)& (0+255),f,b
  2812   001C16  33C2               	rrcf	??_clear_read_calibration& (0+255),f,b
  2813   001C18  C0BE  FFD9         	movff	clear_read_calibration@clear_read,fsr2l
  2814   001C1C  C0BF  FFDA         	movff	clear_read_calibration@clear_read+1,fsr2h
  2815   001C20  C0C2  FFDE         	movff	??_clear_read_calibration,postinc2
  2816   001C24  C0C3  FFDD         	movff	??_clear_read_calibration+1,postdec2
  2817   001C28                     
  2818                           ; BSR set to: 0
  2819                           ;colour_identify.c: 23:     sprintf(buf, "\n Expected clear: %d \n", clear_read);
  2820   001C28  C0BC  F0A3         	movff	clear_read_calibration@buf,sprintf@s
  2821   001C2C  C0BD  F0A4         	movff	clear_read_calibration@buf+1,sprintf@s+1
  2822   001C30  0E44               	movlw	low STR_3
  2823   001C32  6FA5               	movwf	sprintf@fmt& (0+255),b
  2824   001C34  0E0E               	movlw	high STR_3
  2825   001C36  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2826   001C38  C0BE  F0A7         	movff	clear_read_calibration@clear_read,?_sprintf+4
  2827   001C3C  C0BF  F0A8         	movff	clear_read_calibration@clear_read+1,?_sprintf+5
  2828   001C40  ECBE  F00F         	call	_sprintf	;wreg free
  2829   001C44                     
  2830                           ;colour_identify.c: 24:     sendStringSerial4(buf);
  2831   001C44  C0BC  F006         	movff	clear_read_calibration@buf,sendStringSerial4@string
  2832   001C48  C0BD  F007         	movff	clear_read_calibration@buf+1,sendStringSerial4@string+1
  2833   001C4C  EC23  F011         	call	_sendStringSerial4	;wreg free
  2834   001C50                     
  2835                           ;colour_identify.c: 26:     *clear_read_check = *clear_read + 800;
  2836   001C50  C0BE  FFD9         	movff	clear_read_calibration@clear_read,fsr2l
  2837   001C54  C0BF  FFDA         	movff	clear_read_calibration@clear_read+1,fsr2h
  2838   001C58  CFDE F0C2          	movff	postinc2,??_clear_read_calibration
  2839   001C5C  CFDD F0C3          	movff	postdec2,??_clear_read_calibration+1
  2840   001C60  0E20               	movlw	32
  2841   001C62  0100               	movlb	0	; () banked
  2842   001C64  25C2               	addwf	??_clear_read_calibration& (0+255),w,b
  2843   001C66  6FC4               	movwf	(??_clear_read_calibration+2)& (0+255),b
  2844   001C68  0E03               	movlw	3
  2845   001C6A  21C3               	addwfc	(??_clear_read_calibration+1)& (0+255),w,b
  2846   001C6C  6FC5               	movwf	(??_clear_read_calibration+3)& (0+255),b
  2847   001C6E  C0C0  FFD9         	movff	clear_read_calibration@clear_read_check,fsr2l
  2848   001C72  C0C1  FFDA         	movff	clear_read_calibration@clear_read_check+1,fsr2h
  2849   001C76  C0C4  FFDE         	movff	??_clear_read_calibration+2,postinc2
  2850   001C7A  C0C5  FFDD         	movff	??_clear_read_calibration+3,postdec2
  2851   001C7E                     
  2852                           ; BSR set to: 0
  2853   001C7E  0012               	return		;funcret
  2854   001C80                     __end_of_clear_read_calibration:
  2855                           	callstack 0
  2856                           
  2857 ;; *************** function _sprintf *****************
  2858 ;; Defined at:
  2859 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  s               2    6[BANK0 ] PTR unsigned char 
  2862 ;;		 -> main@buf(150), 
  2863 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2864 ;;		 -> STR_5(10), STR_4(26), STR_3(23), STR_2(21), 
  2865 ;;		 -> STR_1(41), 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  f              11   20[BANK0 ] struct _IO_FILE
  2868 ;;  ap              2   18[BANK0 ] PTR void [1]
  2869 ;;		 -> ?_sprintf(2), 
  2870 ;;  ret             2    0        int 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2    6[BANK0 ] int 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2880 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;Total ram usage:       25 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 11
  2887 ;; This function calls:
  2888 ;;		_vfprintf
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;;		_clear_read_calibration
  2892 ;;		_card_response
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text13
  2897   001F7C                     __ptext13:
  2898                           	callstack 0
  2899   001F7C                     _sprintf:
  2900                           	callstack 19
  2901   001F7C  0EA7               	movlw	low (?_sprintf+4)
  2902   001F7E  0100               	movlb	0	; () banked
  2903   001F80  6FAF               	movwf	sprintf@ap& (0+255),b
  2904   001F82  0E00               	movlw	high (?_sprintf+4)
  2905   001F84  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
  2906   001F86  C0A3  F0B1         	movff	sprintf@s,sprintf@f
  2907   001F8A  C0A4  F0B2         	movff	sprintf@s+1,sprintf@f+1
  2908   001F8E                     
  2909                           ; BSR set to: 0
  2910   001F8E  0E00               	movlw	0
  2911   001F90  6FB5               	movwf	(sprintf@f+4)& (0+255),b
  2912   001F92  0E00               	movlw	0
  2913   001F94  6FB4               	movwf	(sprintf@f+3)& (0+255),b
  2914   001F96                     
  2915                           ; BSR set to: 0
  2916   001F96  0E00               	movlw	0
  2917   001F98  6FBB               	movwf	(sprintf@f+10)& (0+255),b
  2918   001F9A  0E00               	movlw	0
  2919   001F9C  6FBA               	movwf	(sprintf@f+9)& (0+255),b
  2920   001F9E                     
  2921                           ; BSR set to: 0
  2922   001F9E  0EB1               	movlw	low sprintf@f
  2923   001FA0  6F9D               	movwf	vfprintf@fp& (0+255),b
  2924   001FA2  0E00               	movlw	high sprintf@f
  2925   001FA4  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  2926   001FA6  C0A5  F09F         	movff	sprintf@fmt,vfprintf@fmt
  2927   001FAA  C0A6  F0A0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2928   001FAE  0EAF               	movlw	low sprintf@ap
  2929   001FB0  6FA1               	movwf	vfprintf@ap& (0+255),b
  2930   001FB2  0E00               	movlw	high sprintf@ap
  2931   001FB4  6FA2               	movwf	(vfprintf@ap+1)& (0+255),b
  2932   001FB6  EC94  F00F         	call	_vfprintf	;wreg free
  2933   001FBA  0100               	movlb	0	; () banked
  2934   001FBC  51B4               	movf	(sprintf@f+3)& (0+255),w,b
  2935   001FBE  25A3               	addwf	sprintf@s& (0+255),w,b
  2936   001FC0  6ED9               	movwf	fsr2l,c
  2937   001FC2  51B5               	movf	(sprintf@f+4)& (0+255),w,b
  2938   001FC4  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  2939   001FC6  6EDA               	movwf	fsr2h,c
  2940   001FC8  0E00               	movlw	0
  2941   001FCA  6EDF               	movwf	indf2,c
  2942   001FCC                     
  2943                           ; BSR set to: 0
  2944   001FCC  0012               	return		;funcret
  2945   001FCE                     __end_of_sprintf:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _vfprintf *****************
  2949 ;; Defined at:
  2950 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2953 ;;		 -> sprintf@f(11), 
  2954 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2955 ;;		 -> STR_5(10), STR_4(26), STR_3(23), STR_2(21), 
  2956 ;;		 -> STR_1(41), 
  2957 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2958 ;;		 -> sprintf@ap(2), 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  2961 ;;		 -> STR_5(10), STR_4(26), STR_3(23), STR_2(21), 
  2962 ;;		 -> STR_1(41), 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2    0[BANK0 ] int 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2972 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;Total ram usage:        8 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 10
  2979 ;; This function calls:
  2980 ;;		_vfpfcnvrt
  2981 ;; This function is called by:
  2982 ;;		_sprintf
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text14
  2987   001F28                     __ptext14:
  2988                           	callstack 0
  2989   001F28                     _vfprintf:
  2990                           	callstack 19
  2991   001F28                     
  2992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2993   001F28  C09F  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  2994   001F2C  C0A0  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2997   001F30  EFA8  F00F         	goto	l3408
  2998   001F34                     l3406:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3001   001F34  C09D  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3002   001F38  C09E  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3003   001F3C  0E55               	movlw	low vfprintf@cfmt
  3004   001F3E  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3005   001F40  0E00               	movlw	high vfprintf@cfmt
  3006   001F42  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3007   001F44  C0A1  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3008   001F48  C0A2  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3009   001F4C  EC04  F00D         	call	_vfpfcnvrt	;wreg free
  3010   001F50                     l3408:
  3011                           
  3012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3013   001F50  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  3014   001F54  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3015   001F58                     	if	0	;tblptru may be non-zero
  3016   001F58                     	endif
  3017   001F58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3018   001F58  0E00               	movlw	low (__mediumconst shr (0+16))
  3019   001F5A  6EF8               	movwf	tblptru,c
  3020   001F5C                     	endif
  3021   001F5C  0008               	tblrd		*
  3022   001F5E  50F5               	movf	tablat,w,c
  3023   001F60  0900               	iorlw	0
  3024   001F62  A4D8               	btfss	status,2,c
  3025   001F64  EFB6  F00F         	goto	u2011
  3026   001F68  EFB8  F00F         	goto	u2010
  3027   001F6C                     u2011:
  3028   001F6C  EF9A  F00F         	goto	l3406
  3029   001F70                     u2010:
  3030   001F70                     
  3031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3032   001F70  0E00               	movlw	0
  3033   001F72  0100               	movlb	0	; () banked
  3034   001F74  6F9E               	movwf	(?_vfprintf+1)& (0+255),b
  3035   001F76  0E00               	movlw	0
  3036   001F78  6F9D               	movwf	?_vfprintf& (0+255),b
  3037   001F7A                     
  3038                           ; BSR set to: 0
  3039   001F7A  0012               	return		;funcret
  3040   001F7C                     __end_of_vfprintf:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _vfpfcnvrt *****************
  3044 ;; Defined at:
  3045 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3048 ;;		 -> sprintf@f(11), 
  3049 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3050 ;;		 -> vfprintf@cfmt(2), 
  3051 ;;  ap              2   70[COMRAM] PTR PTR void 
  3052 ;;		 -> sprintf@ap(2), 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  convarg         8   74[COMRAM] struct .
  3055 ;;  cp              2   82[COMRAM] PTR unsigned char 
  3056 ;;		 -> STR_5(10), STR_4(26), STR_3(23), STR_2(21), 
  3057 ;;		 -> STR_1(41), 
  3058 ;;  i               2    0        int 
  3059 ;;  done            2    0        int 
  3060 ;;  c               1    0        unsigned char 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3070 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3071 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3073 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3074 ;;Total ram usage:       18 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; Hardware stack levels required when called: 9
  3077 ;; This function calls:
  3078 ;;		_dtoa
  3079 ;;		_fputc
  3080 ;; This function is called by:
  3081 ;;		_vfprintf
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text15
  3086   001A08                     __ptext15:
  3087                           	callstack 0
  3088   001A08                     _vfpfcnvrt:
  3089                           	callstack 19
  3090   001A08                     
  3091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3092   001A08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3093   001A0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3094   001A10  CFDE FFF6          	movff	postinc2,tblptrl
  3095   001A14  CFDD FFF7          	movff	postdec2,tblptrh
  3096   001A18                     	if	0	;tblptru may be non-zero
  3097   001A18                     	endif
  3098   001A18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3099   001A18  0E00               	movlw	low (__mediumconst shr (0+16))
  3100   001A1A  6EF8               	movwf	tblptru,c
  3101   001A1C                     	endif
  3102   001A1C  0008               	tblrd		*
  3103   001A1E  50F5               	movf	tablat,w,c
  3104   001A20  0A25               	xorlw	37
  3105   001A22  A4D8               	btfss	status,2,c
  3106   001A24  EF16  F00D         	goto	u1981
  3107   001A28  EF18  F00D         	goto	u1980
  3108   001A2C                     u1981:
  3109   001A2C  EF9C  F00D         	goto	l3398
  3110   001A30                     u1980:
  3111   001A30                     
  3112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3113   001A30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3114   001A34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3115   001A38  2ADE               	incf	postinc2,f,c
  3116   001A3A  0E00               	movlw	0
  3117   001A3C  22DD               	addwfc	postdec2,f,c
  3118   001A3E                     
  3119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3120   001A3E  0E00               	movlw	0
  3121   001A40  0100               	movlb	0	; () banked
  3122   001A42  6F75               	movwf	(_width+1)& (0+255),b
  3123   001A44  0E00               	movlw	0
  3124   001A46  6F74               	movwf	_width& (0+255),b
  3125   001A48  C074  F07C         	movff	_width,_flags
  3126   001A4C                     
  3127                           ; BSR set to: 0
  3128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3129   001A4C  6976               	setf	_prec& (0+255),b
  3130   001A4E  6977               	setf	(_prec+1)& (0+255),b
  3131   001A50                     
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3134   001A50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3135   001A54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3136   001A58  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  3137   001A5C  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  3138   001A60                     
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3141   001A60  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3142   001A64  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3143   001A68                     	if	0	;tblptru may be non-zero
  3144   001A68                     	endif
  3145   001A68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3146   001A68  0E00               	movlw	low (__mediumconst shr (0+16))
  3147   001A6A  6EF8               	movwf	tblptru,c
  3148   001A6C                     	endif
  3149   001A6C  0008               	tblrd		*
  3150   001A6E  50F5               	movf	tablat,w,c
  3151   001A70  0A64               	xorlw	100
  3152   001A72  B4D8               	btfsc	status,2,c
  3153   001A74  EF3E  F00D         	goto	u1991
  3154   001A78  EF40  F00D         	goto	u1990
  3155   001A7C                     u1991:
  3156   001A7C  EF50  F00D         	goto	l3388
  3157   001A80                     u1990:
  3158   001A80                     
  3159                           ; BSR set to: 0
  3160   001A80  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3161   001A84  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3162   001A88                     	if	0	;tblptru may be non-zero
  3163   001A88                     	endif
  3164   001A88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3165   001A88  0E00               	movlw	low (__mediumconst shr (0+16))
  3166   001A8A  6EF8               	movwf	tblptru,c
  3167   001A8C                     	endif
  3168   001A8C  0008               	tblrd		*
  3169   001A8E  50F5               	movf	tablat,w,c
  3170   001A90  0A69               	xorlw	105
  3171   001A92  A4D8               	btfss	status,2,c
  3172   001A94  EF4E  F00D         	goto	u2001
  3173   001A98  EF50  F00D         	goto	u2000
  3174   001A9C                     u2001:
  3175   001A9C  EF93  F00D         	goto	l3394
  3176   001AA0                     u2000:
  3177   001AA0                     l3388:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3181   001AA0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3182   001AA4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3183   001AA8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3184   001AAC  0E02               	movlw	2
  3185   001AAE  26DE               	addwf	postinc2,f,c
  3186   001AB0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3187   001AB4  0E00               	movlw	0
  3188   001AB6  22DD               	addwfc	postdec2,f,c
  3189   001AB8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3190   001ABC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3191   001AC0  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  3192   001AC4  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  3193   001AC8  0E00               	movlw	0
  3194   001ACA  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3195   001ACC  0EFF               	movlw	-1
  3196   001ACE  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  3197   001AD0  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  3198   001AD2  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  3199   001AD4  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  3200   001AD6  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  3201   001AD8  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  3202                           
  3203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3204   001ADA  0E01               	movlw	1
  3205   001ADC  2453               	addwf	vfpfcnvrt@cp^0,w,c
  3206   001ADE  6E49               	movwf	??_vfpfcnvrt^0,c
  3207   001AE0  0E00               	movlw	0
  3208   001AE2  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3209   001AE4  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3210   001AE6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3211   001AEA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3212   001AEE  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  3213   001AF2  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3214   001AF6                     
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3217   001AF6  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  3218   001AFA  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3219   001AFE  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  3220   001B02  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3221   001B06  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3222   001B0A  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3223   001B0E  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3224   001B12  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3225   001B16  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3226   001B1A  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3227   001B1E  ECA7  F008         	call	_dtoa	;wreg free
  3228   001B22  EFB2  F00D         	goto	l1247
  3229   001B26                     l3394:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3232   001B26  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3233   001B2A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3234   001B2E  2ADE               	incf	postinc2,f,c
  3235   001B30  0E00               	movlw	0
  3236   001B32  22DD               	addwfc	postdec2,f,c
  3237   001B34  EFB2  F00D         	goto	l1247
  3238   001B38                     l3398:
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3241   001B38  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3242   001B3C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3243   001B40  CFDE FFF6          	movff	postinc2,tblptrl
  3244   001B44  CFDD FFF7          	movff	postdec2,tblptrh
  3245   001B48                     	if	0	;tblptru may be non-zero
  3246   001B48                     	endif
  3247   001B48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3248   001B48  0E00               	movlw	low (__mediumconst shr (0+16))
  3249   001B4A  6EF8               	movwf	tblptru,c
  3250   001B4C                     	endif
  3251   001B4C  0008               	tblrd		*
  3252   001B4E  50F5               	movf	tablat,w,c
  3253   001B50  6E05               	movwf	fputc@c^0,c
  3254   001B52  6A06               	clrf	(fputc@c+1)^0,c
  3255   001B54  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3256   001B58  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3257   001B5C  EC40  F00E         	call	_fputc	;wreg free
  3258   001B60  EF93  F00D         	goto	l3394
  3259   001B64                     l1247:
  3260   001B64  0012               	return		;funcret
  3261   001B66                     __end_of_vfpfcnvrt:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _dtoa *****************
  3265 ;; Defined at:
  3266 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3269 ;;		 -> sprintf@f(11), 
  3270 ;;  d               8   33[COMRAM] long long 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  n               8   55[COMRAM] long long 
  3273 ;;  i               2   64[COMRAM] int 
  3274 ;;  w               2   53[COMRAM] int 
  3275 ;;  p               2   51[COMRAM] int 
  3276 ;;  s               1   63[COMRAM] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3286 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;Total ram usage:       35 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 8
  3293 ;; This function calls:
  3294 ;;		___aodiv
  3295 ;;		___aomod
  3296 ;;		_abs
  3297 ;;		_pad
  3298 ;; This function is called by:
  3299 ;;		_vfpfcnvrt
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text16
  3304   00114E                     __ptext16:
  3305                           	callstack 0
  3306   00114E                     _dtoa:
  3307                           	callstack 19
  3308   00114E                     
  3309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3310   00114E  C022  F038         	movff	dtoa@d,dtoa@n
  3311   001152  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  3312   001156  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  3313   00115A  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  3314   00115E  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  3315   001162  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  3316   001166  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  3317   00116A  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  3318   00116E                     
  3319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3320   00116E  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  3321   001170  EFBC  F008         	goto	u1881
  3322   001174  EFBF  F008         	goto	u1880
  3323   001178                     u1881:
  3324   001178  0E01               	movlw	1
  3325   00117A  EFC0  F008         	goto	u1890
  3326   00117E                     u1880:
  3327   00117E  0E00               	movlw	0
  3328   001180                     u1890:
  3329   001180  6E40               	movwf	dtoa@s^0,c
  3330   001182                     
  3331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3332   001182  5040               	movf	dtoa@s^0,w,c
  3333   001184  B4D8               	btfsc	status,2,c
  3334   001186  EFC7  F008         	goto	u1901
  3335   00118A  EFC9  F008         	goto	u1900
  3336   00118E                     u1901:
  3337   00118E  EFD9  F008         	goto	l3330
  3338   001192                     u1900:
  3339   001192                     
  3340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3341   001192  1E3F               	comf	(dtoa@n+7)^0,f,c
  3342   001194  1E3E               	comf	(dtoa@n+6)^0,f,c
  3343   001196  1E3D               	comf	(dtoa@n+5)^0,f,c
  3344   001198  1E3C               	comf	(dtoa@n+4)^0,f,c
  3345   00119A  1E3B               	comf	(dtoa@n+3)^0,f,c
  3346   00119C  1E3A               	comf	(dtoa@n+2)^0,f,c
  3347   00119E  1E39               	comf	(dtoa@n+1)^0,f,c
  3348   0011A0  6C38               	negf	dtoa@n^0,c
  3349   0011A2  0E00               	movlw	0
  3350   0011A4  2239               	addwfc	(dtoa@n+1)^0,f,c
  3351   0011A6  223A               	addwfc	(dtoa@n+2)^0,f,c
  3352   0011A8  223B               	addwfc	(dtoa@n+3)^0,f,c
  3353   0011AA  223C               	addwfc	(dtoa@n+4)^0,f,c
  3354   0011AC  223D               	addwfc	(dtoa@n+5)^0,f,c
  3355   0011AE  223E               	addwfc	(dtoa@n+6)^0,f,c
  3356   0011B0  223F               	addwfc	(dtoa@n+7)^0,f,c
  3357   0011B2                     l3330:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3360   0011B2  0100               	movlb	0	; () banked
  3361   0011B4  BF77               	btfsc	(_prec+1)& (0+255),7,b
  3362   0011B6  EFE7  F008         	goto	u1910
  3363   0011BA  5177               	movf	(_prec+1)& (0+255),w,b
  3364   0011BC  E106               	bnz	u1911
  3365   0011BE  0576               	decf	_prec& (0+255),w,b
  3366   0011C0  B0D8               	btfsc	status,0,c
  3367   0011C2  EFE5  F008         	goto	u1911
  3368   0011C6  EFE7  F008         	goto	u1910
  3369   0011CA                     u1911:
  3370   0011CA  EFED  F008         	goto	l1226
  3371   0011CE                     u1910:
  3372   0011CE                     
  3373                           ; BSR set to: 0
  3374   0011CE  0E00               	movlw	0
  3375   0011D0  6E35               	movwf	(dtoa@p+1)^0,c
  3376   0011D2  0E01               	movlw	1
  3377   0011D4  6E34               	movwf	dtoa@p^0,c
  3378   0011D6  EFF1  F008         	goto	l1228
  3379   0011DA                     l1226:
  3380                           
  3381                           ; BSR set to: 0
  3382   0011DA  C076  F034         	movff	_prec,dtoa@p
  3383   0011DE  C077  F035         	movff	_prec+1,dtoa@p+1
  3384   0011E2                     l1228:
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3388   0011E2  C074  F036         	movff	_width,dtoa@w
  3389   0011E6  C075  F037         	movff	_width+1,dtoa@w+1
  3390   0011EA                     
  3391                           ; BSR set to: 0
  3392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3393   0011EA  5040               	movf	dtoa@s^0,w,c
  3394   0011EC  B4D8               	btfsc	status,2,c
  3395   0011EE  EFFB  F008         	goto	u1921
  3396   0011F2  EFFD  F008         	goto	u1920
  3397   0011F6                     u1921:
  3398   0011F6  EF14  F009         	goto	l1229
  3399   0011FA                     u1920:
  3400   0011FA                     
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3403   0011FA  0636               	decf	dtoa@w^0,f,c
  3404   0011FC  A0D8               	btfss	status,0,c
  3405   0011FE  0637               	decf	(dtoa@w+1)^0,f,c
  3406   001200                     
  3407                           ; BSR set to: 0
  3408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3409   001200  5040               	movf	dtoa@s^0,w,c
  3410   001202  A4D8               	btfss	status,2,c
  3411   001204  EF06  F009         	goto	u1931
  3412   001208  EF08  F009         	goto	u1930
  3413   00120C                     u1931:
  3414   00120C  EF0E  F009         	goto	l3342
  3415   001210                     u1930:
  3416   001210                     
  3417                           ; BSR set to: 0
  3418   001210  0E00               	movlw	0
  3419   001212  6E33               	movwf	(_dtoa$2563+1)^0,c
  3420   001214  0E2B               	movlw	43
  3421   001216  6E32               	movwf	_dtoa$2563^0,c
  3422   001218  EF12  F009         	goto	l3344
  3423   00121C                     l3342:
  3424                           
  3425                           ; BSR set to: 0
  3426   00121C  0E00               	movlw	0
  3427   00121E  6E33               	movwf	(_dtoa$2563+1)^0,c
  3428   001220  0E2D               	movlw	45
  3429   001222  6E32               	movwf	_dtoa$2563^0,c
  3430   001224                     l3344:
  3431                           
  3432                           ; BSR set to: 0
  3433   001224  C032  F040         	movff	_dtoa$2563,dtoa@s
  3434   001228                     l1229:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3438   001228  0E00               	movlw	0
  3439   00122A  6E42               	movwf	(dtoa@i+1)^0,c
  3440   00122C  0E1F               	movlw	31
  3441   00122E  6E41               	movwf	dtoa@i^0,c
  3442   001230                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3445   001230  0E00               	movlw	0
  3446   001232  6F9C               	movwf	(_dbuf+31)& (0+255),b
  3447                           
  3448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3449   001234  EF98  F009         	goto	l3358
  3450   001238                     l3348:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3453   001238  0641               	decf	dtoa@i^0,f,c
  3454   00123A  A0D8               	btfss	status,0,c
  3455   00123C  0642               	decf	(dtoa@i+1)^0,f,c
  3456   00123E                     
  3457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3458   00123E  0E7D               	movlw	low _dbuf
  3459   001240  2441               	addwf	dtoa@i^0,w,c
  3460   001242  6ED9               	movwf	fsr2l,c
  3461   001244  0E00               	movlw	high _dbuf
  3462   001246  2042               	addwfc	(dtoa@i+1)^0,w,c
  3463   001248  6EDA               	movwf	fsr2h,c
  3464   00124A  C038  F005         	movff	dtoa@n,___aomod@dividend
  3465   00124E  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  3466   001252  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  3467   001256  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  3468   00125A  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  3469   00125E  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  3470   001262  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  3471   001266  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  3472   00126A  0E0A               	movlw	10
  3473   00126C  6E0D               	movwf	___aomod@divisor^0,c
  3474   00126E  0E00               	movlw	0
  3475   001270  6E0E               	movwf	(___aomod@divisor+1)^0,c
  3476   001272  0E00               	movlw	0
  3477   001274  6E0F               	movwf	(___aomod@divisor+2)^0,c
  3478   001276  0E00               	movlw	0
  3479   001278  6E10               	movwf	(___aomod@divisor+3)^0,c
  3480   00127A  0E00               	movlw	0
  3481   00127C  6E11               	movwf	(___aomod@divisor+4)^0,c
  3482   00127E  0E00               	movlw	0
  3483   001280  6E12               	movwf	(___aomod@divisor+5)^0,c
  3484   001282  0E00               	movlw	0
  3485   001284  6E13               	movwf	(___aomod@divisor+6)^0,c
  3486   001286  0E00               	movlw	0
  3487   001288  6E14               	movwf	(___aomod@divisor+7)^0,c
  3488   00128A  EC52  F00C         	call	___aomod	;wreg free
  3489   00128E  C005  F02A         	movff	?___aomod,??_dtoa
  3490   001292  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  3491   001296  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  3492   00129A  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  3493   00129E  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  3494   0012A2  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  3495   0012A6  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  3496   0012AA  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  3497   0012AE  C02A  F017         	movff	??_dtoa,abs@a
  3498   0012B2  C02B  F018         	movff	??_dtoa+1,abs@a+1
  3499   0012B6  ECCA  F010         	call	_abs	;wreg free
  3500   0012BA  5017               	movf	?_abs^0,w,c
  3501   0012BC  0F30               	addlw	48
  3502   0012BE  6EDF               	movwf	indf2,c
  3503   0012C0                     
  3504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3505   0012C0  0634               	decf	dtoa@p^0,f,c
  3506   0012C2  A0D8               	btfss	status,0,c
  3507   0012C4  0635               	decf	(dtoa@p+1)^0,f,c
  3508   0012C6                     
  3509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3510   0012C6  0636               	decf	dtoa@w^0,f,c
  3511   0012C8  A0D8               	btfss	status,0,c
  3512   0012CA  0637               	decf	(dtoa@w+1)^0,f,c
  3513   0012CC                     
  3514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3515   0012CC  C038  F005         	movff	dtoa@n,___aodiv@dividend
  3516   0012D0  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  3517   0012D4  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  3518   0012D8  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  3519   0012DC  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  3520   0012E0  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  3521   0012E4  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  3522   0012E8  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  3523   0012EC  0E0A               	movlw	10
  3524   0012EE  6E0D               	movwf	___aodiv@divisor^0,c
  3525   0012F0  0E00               	movlw	0
  3526   0012F2  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  3527   0012F4  0E00               	movlw	0
  3528   0012F6  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  3529   0012F8  0E00               	movlw	0
  3530   0012FA  6E10               	movwf	(___aodiv@divisor+3)^0,c
  3531   0012FC  0E00               	movlw	0
  3532   0012FE  6E11               	movwf	(___aodiv@divisor+4)^0,c
  3533   001300  0E00               	movlw	0
  3534   001302  6E12               	movwf	(___aodiv@divisor+5)^0,c
  3535   001304  0E00               	movlw	0
  3536   001306  6E13               	movwf	(___aodiv@divisor+6)^0,c
  3537   001308  0E00               	movlw	0
  3538   00130A  6E14               	movwf	(___aodiv@divisor+7)^0,c
  3539   00130C  ECD8  F00A         	call	___aodiv	;wreg free
  3540   001310  C005  F038         	movff	?___aodiv,dtoa@n
  3541   001314  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  3542   001318  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  3543   00131C  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  3544   001320  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  3545   001324  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  3546   001328  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  3547   00132C  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  3548   001330                     l3358:
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3551   001330  BE42               	btfsc	(dtoa@i+1)^0,7,c
  3552   001332  EFA3  F009         	goto	u1941
  3553   001336  5042               	movf	(dtoa@i+1)^0,w,c
  3554   001338  E108               	bnz	u1940
  3555   00133A  0441               	decf	dtoa@i^0,w,c
  3556   00133C  A0D8               	btfss	status,0,c
  3557   00133E  EFA3  F009         	goto	u1941
  3558   001342  EFA5  F009         	goto	u1940
  3559   001346                     u1941:
  3560   001346  EFC1  F009         	goto	l3364
  3561   00134A                     u1940:
  3562   00134A  5038               	movf	dtoa@n^0,w,c
  3563   00134C  1039               	iorwf	(dtoa@n+1)^0,w,c
  3564   00134E  103A               	iorwf	(dtoa@n+2)^0,w,c
  3565   001350  103B               	iorwf	(dtoa@n+3)^0,w,c
  3566   001352  103C               	iorwf	(dtoa@n+4)^0,w,c
  3567   001354  103D               	iorwf	(dtoa@n+5)^0,w,c
  3568   001356  103E               	iorwf	(dtoa@n+6)^0,w,c
  3569   001358  103F               	iorwf	(dtoa@n+7)^0,w,c
  3570   00135A  A4D8               	btfss	status,2,c
  3571   00135C  EFB2  F009         	goto	u1951
  3572   001360  EFB4  F009         	goto	u1950
  3573   001364                     u1951:
  3574   001364  EF1C  F009         	goto	l3348
  3575   001368                     u1950:
  3576   001368  BE35               	btfsc	(dtoa@p+1)^0,7,c
  3577   00136A  EFC1  F009         	goto	u1960
  3578   00136E  5035               	movf	(dtoa@p+1)^0,w,c
  3579   001370  E106               	bnz	u1961
  3580   001372  0434               	decf	dtoa@p^0,w,c
  3581   001374  B0D8               	btfsc	status,0,c
  3582   001376  EFBF  F009         	goto	u1961
  3583   00137A  EFC1  F009         	goto	u1960
  3584   00137E                     u1961:
  3585   00137E  EF1C  F009         	goto	l3348
  3586   001382                     u1960:
  3587   001382                     l3364:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3590   001382  5040               	movf	dtoa@s^0,w,c
  3591   001384  B4D8               	btfsc	status,2,c
  3592   001386  EFC7  F009         	goto	u1971
  3593   00138A  EFC9  F009         	goto	u1970
  3594   00138E                     u1971:
  3595   00138E  EFD4  F009         	goto	l3370
  3596   001392                     u1970:
  3597   001392                     
  3598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3599   001392  0641               	decf	dtoa@i^0,f,c
  3600   001394  A0D8               	btfss	status,0,c
  3601   001396  0642               	decf	(dtoa@i+1)^0,f,c
  3602   001398                     
  3603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3604   001398  0E7D               	movlw	low _dbuf
  3605   00139A  2441               	addwf	dtoa@i^0,w,c
  3606   00139C  6ED9               	movwf	fsr2l,c
  3607   00139E  0E00               	movlw	high _dbuf
  3608   0013A0  2042               	addwfc	(dtoa@i+1)^0,w,c
  3609   0013A2  6EDA               	movwf	fsr2h,c
  3610   0013A4  C040  FFDF         	movff	dtoa@s,indf2
  3611   0013A8                     l3370:
  3612                           
  3613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3614   0013A8  C020  F015         	movff	dtoa@fp,pad@fp
  3615   0013AC  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  3616   0013B0  0E7D               	movlw	low _dbuf
  3617   0013B2  2441               	addwf	dtoa@i^0,w,c
  3618   0013B4  6E17               	movwf	pad@buf^0,c
  3619   0013B6  0E00               	movlw	high _dbuf
  3620   0013B8  2042               	addwfc	(dtoa@i+1)^0,w,c
  3621   0013BA  6E18               	movwf	(pad@buf+1)^0,c
  3622   0013BC  C036  F019         	movff	dtoa@w,pad@p
  3623   0013C0  C037  F01A         	movff	dtoa@w+1,pad@p+1
  3624   0013C4  ECE9  F00E         	call	_pad	;wreg free
  3625   0013C8  0012               	return		;funcret
  3626   0013CA                     __end_of_dtoa:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _pad *****************
  3630 ;; Defined at:
  3631 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  3634 ;;		 -> sprintf@f(11), 
  3635 ;;  buf             2   22[COMRAM] PTR unsigned char 
  3636 ;;		 -> dbuf(32), 
  3637 ;;  p               2   24[COMRAM] int 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  w               2   29[COMRAM] int 
  3640 ;;  i               2   27[COMRAM] int 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3650 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3651 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;Total ram usage:       11 bytes
  3655 ;; Hardware stack levels used: 1
  3656 ;; Hardware stack levels required when called: 7
  3657 ;; This function calls:
  3658 ;;		_fputc
  3659 ;;		_fputs
  3660 ;; This function is called by:
  3661 ;;		_dtoa
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text17
  3666   001DD2                     __ptext17:
  3667                           	callstack 0
  3668   001DD2                     _pad:
  3669                           	callstack 19
  3670   001DD2                     
  3671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3672   001DD2  BE1A               	btfsc	(pad@p+1)^0,7,c
  3673   001DD4  EFEE  F00E         	goto	u1861
  3674   001DD8  EFF0  F00E         	goto	u1860
  3675   001DDC                     u1861:
  3676   001DDC  EFF6  F00E         	goto	l3312
  3677   001DE0                     u1860:
  3678   001DE0  C019  F01E         	movff	pad@p,pad@w
  3679   001DE4  C01A  F01F         	movff	pad@p+1,pad@w+1
  3680   001DE8  EFFA  F00E         	goto	l1217
  3681   001DEC                     l3312:
  3682   001DEC  0E00               	movlw	0
  3683   001DEE  6E1F               	movwf	(pad@w+1)^0,c
  3684   001DF0  0E00               	movlw	0
  3685   001DF2  6E1E               	movwf	pad@w^0,c
  3686   001DF4                     l1217:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3689   001DF4  0E00               	movlw	0
  3690   001DF6  6E1D               	movwf	(pad@i+1)^0,c
  3691   001DF8  0E00               	movlw	0
  3692   001DFA  6E1C               	movwf	pad@i^0,c
  3693                           
  3694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3695   001DFC  EF0C  F00F         	goto	l3318
  3696   001E00                     l3314:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3699   001E00  0E00               	movlw	0
  3700   001E02  6E06               	movwf	(fputc@c+1)^0,c
  3701   001E04  0E20               	movlw	32
  3702   001E06  6E05               	movwf	fputc@c^0,c
  3703   001E08  C015  F007         	movff	pad@fp,fputc@fp
  3704   001E0C  C016  F008         	movff	pad@fp+1,fputc@fp+1
  3705   001E10  EC40  F00E         	call	_fputc	;wreg free
  3706   001E14                     
  3707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3708   001E14  4A1C               	infsnz	pad@i^0,f,c
  3709   001E16  2A1D               	incf	(pad@i+1)^0,f,c
  3710   001E18                     l3318:
  3711                           
  3712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3713   001E18  501E               	movf	pad@w^0,w,c
  3714   001E1A  5C1C               	subwf	pad@i^0,w,c
  3715   001E1C  501D               	movf	(pad@i+1)^0,w,c
  3716   001E1E  0A80               	xorlw	128
  3717   001E20  6E1B               	movwf	??_pad^0,c
  3718   001E22  501F               	movf	(pad@w+1)^0,w,c
  3719   001E24  0A80               	xorlw	128
  3720   001E26  581B               	subwfb	??_pad^0,w,c
  3721   001E28  A0D8               	btfss	status,0,c
  3722   001E2A  EF19  F00F         	goto	u1871
  3723   001E2E  EF1B  F00F         	goto	u1870
  3724   001E32                     u1871:
  3725   001E32  EF00  F00F         	goto	l3314
  3726   001E36                     u1870:
  3727   001E36                     
  3728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3729   001E36  C017  F00E         	movff	pad@buf,fputs@s
  3730   001E3A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3731   001E3E  C015  F010         	movff	pad@fp,fputs@fp
  3732   001E42  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3733   001E46  EC87  F010         	call	_fputs	;wreg free
  3734   001E4A  0012               	return		;funcret
  3735   001E4C                     __end_of_pad:
  3736                           	callstack 0
  3737                           
  3738 ;; *************** function _fputs *****************
  3739 ;; Defined at:
  3740 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3743 ;;		 -> dbuf(32), 
  3744 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3745 ;;		 -> sprintf@f(11), 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  i               2   18[COMRAM] int 
  3748 ;;  c               1   17[COMRAM] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2   13[COMRAM] int 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3762 ;;Total ram usage:        7 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 6
  3765 ;; This function calls:
  3766 ;;		_fputc
  3767 ;; This function is called by:
  3768 ;;		_pad
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text18
  3773   00210E                     __ptext18:
  3774                           	callstack 0
  3775   00210E                     _fputs:
  3776                           	callstack 19
  3777   00210E  0E00               	movlw	0
  3778   002110  6E14               	movwf	(fputs@i+1)^0,c
  3779   002112  0E00               	movlw	0
  3780   002114  6E13               	movwf	fputs@i^0,c
  3781   002116  EF98  F010         	goto	l3222
  3782   00211A                     l3218:
  3783   00211A  C012  F005         	movff	fputs@c,fputc@c
  3784   00211E  6A06               	clrf	(fputc@c+1)^0,c
  3785   002120  C010  F007         	movff	fputs@fp,fputc@fp
  3786   002124  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  3787   002128  EC40  F00E         	call	_fputc	;wreg free
  3788   00212C  4A13               	infsnz	fputs@i^0,f,c
  3789   00212E  2A14               	incf	(fputs@i+1)^0,f,c
  3790   002130                     l3222:
  3791   002130  5013               	movf	fputs@i^0,w,c
  3792   002132  240E               	addwf	fputs@s^0,w,c
  3793   002134  6ED9               	movwf	fsr2l,c
  3794   002136  5014               	movf	(fputs@i+1)^0,w,c
  3795   002138  200F               	addwfc	(fputs@s+1)^0,w,c
  3796   00213A  6EDA               	movwf	fsr2h,c
  3797   00213C  50DF               	movf	indf2,w,c
  3798   00213E  6E12               	movwf	fputs@c^0,c
  3799   002140  5012               	movf	fputs@c^0,w,c
  3800   002142  A4D8               	btfss	status,2,c
  3801   002144  EFA6  F010         	goto	u1711
  3802   002148  EFA8  F010         	goto	u1710
  3803   00214C                     u1711:
  3804   00214C  EF8D  F010         	goto	l3218
  3805   002150                     u1710:
  3806   002150  0012               	return		;funcret
  3807   002152                     __end_of_fputs:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function _fputc *****************
  3811 ;; Defined at:
  3812 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  c               2    4[COMRAM] int 
  3815 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3816 ;;		 -> sprintf@f(11), 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  2    4[COMRAM] int 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;Total ram usage:        9 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 5
  3835 ;; This function calls:
  3836 ;;		_putch
  3837 ;; This function is called by:
  3838 ;;		_pad
  3839 ;;		_vfpfcnvrt
  3840 ;;		_fputs
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text19
  3845   001C80                     __ptext19:
  3846                           	callstack 0
  3847   001C80                     _fputc:
  3848                           	callstack 22
  3849   001C80  5007               	movf	fputc@fp^0,w,c
  3850   001C82  1008               	iorwf	(fputc@fp+1)^0,w,c
  3851   001C84  B4D8               	btfsc	status,2,c
  3852   001C86  EF47  F00E         	goto	u1671
  3853   001C8A  EF49  F00E         	goto	u1670
  3854   001C8E                     u1671:
  3855   001C8E  EF52  F00E         	goto	l3206
  3856   001C92                     u1670:
  3857   001C92  5007               	movf	fputc@fp^0,w,c
  3858   001C94  1008               	iorwf	(fputc@fp+1)^0,w,c
  3859   001C96  A4D8               	btfss	status,2,c
  3860   001C98  EF50  F00E         	goto	u1681
  3861   001C9C  EF52  F00E         	goto	u1680
  3862   001CA0                     u1681:
  3863   001CA0  EF57  F00E         	goto	l3208
  3864   001CA4                     u1680:
  3865   001CA4                     l3206:
  3866   001CA4  5005               	movf	fputc@c^0,w,c
  3867   001CA6  EC20  F012         	call	_putch
  3868   001CAA  EFA4  F00E         	goto	l1265
  3869   001CAE                     l3208:
  3870   001CAE  EE20 F009          	lfsr	2,9
  3871   001CB2  5007               	movf	fputc@fp^0,w,c
  3872   001CB4  26D9               	addwf	fsr2l,f,c
  3873   001CB6  5008               	movf	(fputc@fp+1)^0,w,c
  3874   001CB8  22DA               	addwfc	fsr2h,f,c
  3875   001CBA  50DE               	movf	postinc2,w,c
  3876   001CBC  10DE               	iorwf	postinc2,w,c
  3877   001CBE  B4D8               	btfsc	status,2,c
  3878   001CC0  EF64  F00E         	goto	u1691
  3879   001CC4  EF66  F00E         	goto	u1690
  3880   001CC8                     u1691:
  3881   001CC8  EF81  F00E         	goto	l3212
  3882   001CCC                     u1690:
  3883   001CCC  EE20 F009          	lfsr	2,9
  3884   001CD0  5007               	movf	fputc@fp^0,w,c
  3885   001CD2  26D9               	addwf	fsr2l,f,c
  3886   001CD4  5008               	movf	(fputc@fp+1)^0,w,c
  3887   001CD6  22DA               	addwfc	fsr2h,f,c
  3888   001CD8  EE10 F003          	lfsr	1,3
  3889   001CDC  5007               	movf	fputc@fp^0,w,c
  3890   001CDE  26E1               	addwf	fsr1l,f,c
  3891   001CE0  5008               	movf	(fputc@fp+1)^0,w,c
  3892   001CE2  22E2               	addwfc	fsr1h,f,c
  3893   001CE4  50DE               	movf	postinc2,w,c
  3894   001CE6  5CE6               	subwf	postinc1,w,c
  3895   001CE8  50E6               	movf	postinc1,w,c
  3896   001CEA  0A80               	xorlw	128
  3897   001CEC  6E0D               	movwf	(??_fputc+4)^0,c
  3898   001CEE  50DE               	movf	postinc2,w,c
  3899   001CF0  0A80               	xorlw	128
  3900   001CF2  580D               	subwfb	(??_fputc+4)^0,w,c
  3901   001CF4  B0D8               	btfsc	status,0,c
  3902   001CF6  EF7F  F00E         	goto	u1701
  3903   001CFA  EF81  F00E         	goto	u1700
  3904   001CFE                     u1701:
  3905   001CFE  EFA4  F00E         	goto	l1265
  3906   001D02                     u1700:
  3907   001D02                     l3212:
  3908   001D02  EE20 F003          	lfsr	2,3
  3909   001D06  5007               	movf	fputc@fp^0,w,c
  3910   001D08  26D9               	addwf	fsr2l,f,c
  3911   001D0A  5008               	movf	(fputc@fp+1)^0,w,c
  3912   001D0C  22DA               	addwfc	fsr2h,f,c
  3913   001D0E  CFDE F009          	movff	postinc2,??_fputc
  3914   001D12  CFDD F00A          	movff	postdec2,??_fputc+1
  3915   001D16  C007  FFD9         	movff	fputc@fp,fsr2l
  3916   001D1A  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3917   001D1E  CFDE F00B          	movff	postinc2,??_fputc+2
  3918   001D22  CFDD F00C          	movff	postdec2,??_fputc+3
  3919   001D26  5009               	movf	??_fputc^0,w,c
  3920   001D28  240B               	addwf	(??_fputc+2)^0,w,c
  3921   001D2A  6ED9               	movwf	fsr2l,c
  3922   001D2C  500A               	movf	(??_fputc+1)^0,w,c
  3923   001D2E  200C               	addwfc	(??_fputc+3)^0,w,c
  3924   001D30  6EDA               	movwf	fsr2h,c
  3925   001D32  C005  FFDF         	movff	fputc@c,indf2
  3926   001D36  EE20 F003          	lfsr	2,3
  3927   001D3A  5007               	movf	fputc@fp^0,w,c
  3928   001D3C  26D9               	addwf	fsr2l,f,c
  3929   001D3E  5008               	movf	(fputc@fp+1)^0,w,c
  3930   001D40  22DA               	addwfc	fsr2h,f,c
  3931   001D42  2ADE               	incf	postinc2,f,c
  3932   001D44  0E00               	movlw	0
  3933   001D46  22DD               	addwfc	postdec2,f,c
  3934   001D48                     l1265:
  3935   001D48  0012               	return		;funcret
  3936   001D4A                     __end_of_fputc:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _putch *****************
  3940 ;; Defined at:
  3941 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  c               1    wreg     unsigned char 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  c               1    0[COMRAM] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 4
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_fputc
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text20
  3970   002440                     __ptext20:
  3971                           	callstack 0
  3972   002440                     _putch:
  3973                           	callstack 22
  3974   002440  0012               	return		;funcret
  3975   002442                     __end_of_putch:
  3976                           	callstack 0
  3977                           
  3978 ;; *************** function _abs *****************
  3979 ;; Defined at:
  3980 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  a               2   22[COMRAM] int 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  2   22[COMRAM] int 
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3994 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;Total ram usage:        4 bytes
  3999 ;; Hardware stack levels used: 1
  4000 ;; Hardware stack levels required when called: 4
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_dtoa
  4005 ;;		_normalise_readings
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text21
  4010   002194                     __ptext21:
  4011                           	callstack 0
  4012   002194                     _abs:
  4013                           	callstack 22
  4014   002194  BE18               	btfsc	(abs@a+1)^0,7,c
  4015   002196  EFD7  F010         	goto	u1720
  4016   00219A  5018               	movf	(abs@a+1)^0,w,c
  4017   00219C  E106               	bnz	u1721
  4018   00219E  0417               	decf	abs@a^0,w,c
  4019   0021A0  B0D8               	btfsc	status,0,c
  4020   0021A2  EFD5  F010         	goto	u1721
  4021   0021A6  EFD7  F010         	goto	u1720
  4022   0021AA                     u1721:
  4023   0021AA  EFE5  F010         	goto	l1185
  4024   0021AE                     u1720:
  4025   0021AE  C017  F019         	movff	abs@a,??_abs
  4026   0021B2  C018  F01A         	movff	abs@a+1,??_abs+1
  4027   0021B6  1E19               	comf	??_abs^0,f,c
  4028   0021B8  1E1A               	comf	(??_abs+1)^0,f,c
  4029   0021BA  4A19               	infsnz	??_abs^0,f,c
  4030   0021BC  2A1A               	incf	(??_abs+1)^0,f,c
  4031   0021BE  C019  F017         	movff	??_abs,?_abs
  4032   0021C2  C01A  F018         	movff	??_abs+1,?_abs+1
  4033   0021C6  EFE9  F010         	goto	l1188
  4034   0021CA                     l1185:
  4035   0021CA  C017  F017         	movff	abs@a,?_abs
  4036   0021CE  C018  F018         	movff	abs@a+1,?_abs+1
  4037   0021D2                     l1188:
  4038   0021D2  0012               	return		;funcret
  4039   0021D4                     __end_of_abs:
  4040                           	callstack 0
  4041                           
  4042 ;; *************** function ___aomod *****************
  4043 ;; Defined at:
  4044 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  dividend        8    4[COMRAM] long long 
  4047 ;;  divisor         8   12[COMRAM] long long 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  sign            1   21[COMRAM] unsigned char 
  4050 ;;  counter         1   20[COMRAM] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  8    4[COMRAM] long long 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4060 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4064 ;;Total ram usage:       18 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; Hardware stack levels required when called: 4
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_dtoa
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text22
  4075   0018A4                     __ptext22:
  4076                           	callstack 0
  4077   0018A4                     ___aomod:
  4078                           	callstack 22
  4079   0018A4  0E00               	movlw	0
  4080   0018A6  6E16               	movwf	___aomod@sign^0,c
  4081   0018A8  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  4082   0018AA  EF5B  F00C         	goto	u1800
  4083   0018AE  EF59  F00C         	goto	u1801
  4084   0018B2                     u1801:
  4085   0018B2  EF6D  F00C         	goto	l3280
  4086   0018B6                     u1800:
  4087   0018B6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4088   0018B8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4089   0018BA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4090   0018BC  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4091   0018BE  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4092   0018C0  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4093   0018C2  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4094   0018C4  6C05               	negf	___aomod@dividend^0,c
  4095   0018C6  0E00               	movlw	0
  4096   0018C8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4097   0018CA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4098   0018CC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4099   0018CE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4100   0018D0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4101   0018D2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4102   0018D4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4103   0018D6  0E01               	movlw	1
  4104   0018D8  6E16               	movwf	___aomod@sign^0,c
  4105   0018DA                     l3280:
  4106   0018DA  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  4107   0018DC  EF74  F00C         	goto	u1810
  4108   0018E0  EF72  F00C         	goto	u1811
  4109   0018E4                     u1811:
  4110   0018E4  EF84  F00C         	goto	l3284
  4111   0018E8                     u1810:
  4112   0018E8  1E14               	comf	(___aomod@divisor+7)^0,f,c
  4113   0018EA  1E13               	comf	(___aomod@divisor+6)^0,f,c
  4114   0018EC  1E12               	comf	(___aomod@divisor+5)^0,f,c
  4115   0018EE  1E11               	comf	(___aomod@divisor+4)^0,f,c
  4116   0018F0  1E10               	comf	(___aomod@divisor+3)^0,f,c
  4117   0018F2  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  4118   0018F4  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  4119   0018F6  6C0D               	negf	___aomod@divisor^0,c
  4120   0018F8  0E00               	movlw	0
  4121   0018FA  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  4122   0018FC  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  4123   0018FE  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  4124   001900  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  4125   001902  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  4126   001904  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  4127   001906  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  4128   001908                     l3284:
  4129   001908  500D               	movf	___aomod@divisor^0,w,c
  4130   00190A  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  4131   00190C  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  4132   00190E  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  4133   001910  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  4134   001912  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  4135   001914  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  4136   001916  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  4137   001918  B4D8               	btfsc	status,2,c
  4138   00191A  EF91  F00C         	goto	u1821
  4139   00191E  EF93  F00C         	goto	u1820
  4140   001922                     u1821:
  4141   001922  EFDB  F00C         	goto	l3300
  4142   001926                     u1820:
  4143   001926  0E01               	movlw	1
  4144   001928  6E15               	movwf	___aomod@counter^0,c
  4145   00192A  EFA1  F00C         	goto	l3290
  4146   00192E                     l3288:
  4147   00192E  90D8               	bcf	status,0,c
  4148   001930  360D               	rlcf	___aomod@divisor^0,f,c
  4149   001932  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  4150   001934  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  4151   001936  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  4152   001938  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  4153   00193A  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  4154   00193C  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  4155   00193E  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  4156   001940  2A15               	incf	___aomod@counter^0,f,c
  4157   001942                     l3290:
  4158   001942  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  4159   001944  EFA6  F00C         	goto	u1831
  4160   001948  EFA8  F00C         	goto	u1830
  4161   00194C                     u1831:
  4162   00194C  EF97  F00C         	goto	l3288
  4163   001950                     u1830:
  4164   001950                     l3292:
  4165   001950  500D               	movf	___aomod@divisor^0,w,c
  4166   001952  5C05               	subwf	___aomod@dividend^0,w,c
  4167   001954  500E               	movf	(___aomod@divisor+1)^0,w,c
  4168   001956  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  4169   001958  500F               	movf	(___aomod@divisor+2)^0,w,c
  4170   00195A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  4171   00195C  5010               	movf	(___aomod@divisor+3)^0,w,c
  4172   00195E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  4173   001960  5011               	movf	(___aomod@divisor+4)^0,w,c
  4174   001962  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  4175   001964  5012               	movf	(___aomod@divisor+5)^0,w,c
  4176   001966  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  4177   001968  5013               	movf	(___aomod@divisor+6)^0,w,c
  4178   00196A  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  4179   00196C  5014               	movf	(___aomod@divisor+7)^0,w,c
  4180   00196E  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  4181   001970  A0D8               	btfss	status,0,c
  4182   001972  EFBD  F00C         	goto	u1841
  4183   001976  EFBF  F00C         	goto	u1840
  4184   00197A                     u1841:
  4185   00197A  EFCF  F00C         	goto	l3296
  4186   00197E                     u1840:
  4187   00197E  500D               	movf	___aomod@divisor^0,w,c
  4188   001980  5E05               	subwf	___aomod@dividend^0,f,c
  4189   001982  500E               	movf	(___aomod@divisor+1)^0,w,c
  4190   001984  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  4191   001986  500F               	movf	(___aomod@divisor+2)^0,w,c
  4192   001988  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  4193   00198A  5010               	movf	(___aomod@divisor+3)^0,w,c
  4194   00198C  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  4195   00198E  5011               	movf	(___aomod@divisor+4)^0,w,c
  4196   001990  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  4197   001992  5012               	movf	(___aomod@divisor+5)^0,w,c
  4198   001994  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  4199   001996  5013               	movf	(___aomod@divisor+6)^0,w,c
  4200   001998  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  4201   00199A  5014               	movf	(___aomod@divisor+7)^0,w,c
  4202   00199C  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  4203   00199E                     l3296:
  4204   00199E  90D8               	bcf	status,0,c
  4205   0019A0  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  4206   0019A2  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  4207   0019A4  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  4208   0019A6  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  4209   0019A8  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  4210   0019AA  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  4211   0019AC  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  4212   0019AE  320D               	rrcf	___aomod@divisor^0,f,c
  4213   0019B0  2E15               	decfsz	___aomod@counter^0,f,c
  4214   0019B2  EFA8  F00C         	goto	l3292
  4215   0019B6                     l3300:
  4216   0019B6  5016               	movf	___aomod@sign^0,w,c
  4217   0019B8  B4D8               	btfsc	status,2,c
  4218   0019BA  EFE1  F00C         	goto	u1851
  4219   0019BE  EFE3  F00C         	goto	u1850
  4220   0019C2                     u1851:
  4221   0019C2  EFF3  F00C         	goto	l3304
  4222   0019C6                     u1850:
  4223   0019C6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4224   0019C8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4225   0019CA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4226   0019CC  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4227   0019CE  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4228   0019D0  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4229   0019D2  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4230   0019D4  6C05               	negf	___aomod@dividend^0,c
  4231   0019D6  0E00               	movlw	0
  4232   0019D8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4233   0019DA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4234   0019DC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4235   0019DE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4236   0019E0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4237   0019E2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4238   0019E4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4239   0019E6                     l3304:
  4240   0019E6  C005  F005         	movff	___aomod@dividend,?___aomod
  4241   0019EA  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  4242   0019EE  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  4243   0019F2  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  4244   0019F6  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  4245   0019FA  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  4246   0019FE  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  4247   001A02  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  4248   001A06  0012               	return		;funcret
  4249   001A08                     __end_of___aomod:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function ___aodiv *****************
  4253 ;; Defined at:
  4254 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  dividend        8    4[COMRAM] long long 
  4257 ;;  divisor         8   12[COMRAM] long long 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  quotient        8   22[COMRAM] long long 
  4260 ;;  sign            1   21[COMRAM] unsigned char 
  4261 ;;  counter         1   20[COMRAM] unsigned char 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  8    4[COMRAM] long long 
  4264 ;; Registers used:
  4265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4271 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4274 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4275 ;;Total ram usage:       26 bytes
  4276 ;; Hardware stack levels used: 1
  4277 ;; Hardware stack levels required when called: 4
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_dtoa
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text23
  4286   0015B0                     __ptext23:
  4287                           	callstack 0
  4288   0015B0                     ___aodiv:
  4289                           	callstack 22
  4290   0015B0  0E00               	movlw	0
  4291   0015B2  6E16               	movwf	___aodiv@sign^0,c
  4292   0015B4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  4293   0015B6  EFE1  F00A         	goto	u1730
  4294   0015BA  EFDF  F00A         	goto	u1731
  4295   0015BE                     u1731:
  4296   0015BE  EFF3  F00A         	goto	l3236
  4297   0015C2                     u1730:
  4298   0015C2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  4299   0015C4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  4300   0015C6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  4301   0015C8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  4302   0015CA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  4303   0015CC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  4304   0015CE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  4305   0015D0  6C0D               	negf	___aodiv@divisor^0,c
  4306   0015D2  0E00               	movlw	0
  4307   0015D4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  4308   0015D6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  4309   0015D8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  4310   0015DA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  4311   0015DC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  4312   0015DE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  4313   0015E0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  4314   0015E2  0E01               	movlw	1
  4315   0015E4  6E16               	movwf	___aodiv@sign^0,c
  4316   0015E6                     l3236:
  4317   0015E6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  4318   0015E8  EFFA  F00A         	goto	u1740
  4319   0015EC  EFF8  F00A         	goto	u1741
  4320   0015F0                     u1741:
  4321   0015F0  EF0C  F00B         	goto	l3242
  4322   0015F4                     u1740:
  4323   0015F4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  4324   0015F6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  4325   0015F8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  4326   0015FA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  4327   0015FC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  4328   0015FE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  4329   001600  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  4330   001602  6C05               	negf	___aodiv@dividend^0,c
  4331   001604  0E00               	movlw	0
  4332   001606  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  4333   001608  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  4334   00160A  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  4335   00160C  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  4336   00160E  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  4337   001610  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  4338   001612  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  4339   001614  0E01               	movlw	1
  4340   001616  1A16               	xorwf	___aodiv@sign^0,f,c
  4341   001618                     l3242:
  4342   001618  EE20  F017         	lfsr	2,___aodiv@quotient
  4343   00161C  0E07               	movlw	7
  4344   00161E                     u1751:
  4345   00161E  6ADE               	clrf	postinc2,c
  4346   001620  06E8               	decf	wreg,f,c
  4347   001622  E2FD               	bc	u1751
  4348   001624  500D               	movf	___aodiv@divisor^0,w,c
  4349   001626  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  4350   001628  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  4351   00162A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  4352   00162C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  4353   00162E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  4354   001630  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  4355   001632  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  4356   001634  B4D8               	btfsc	status,2,c
  4357   001636  EF1F  F00B         	goto	u1761
  4358   00163A  EF21  F00B         	goto	u1760
  4359   00163E                     u1761:
  4360   00163E  EF73  F00B         	goto	l3264
  4361   001642                     u1760:
  4362   001642  0E01               	movlw	1
  4363   001644  6E15               	movwf	___aodiv@counter^0,c
  4364   001646  EF2F  F00B         	goto	l3250
  4365   00164A                     l3248:
  4366   00164A  90D8               	bcf	status,0,c
  4367   00164C  360D               	rlcf	___aodiv@divisor^0,f,c
  4368   00164E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  4369   001650  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  4370   001652  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  4371   001654  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  4372   001656  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  4373   001658  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  4374   00165A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  4375   00165C  2A15               	incf	___aodiv@counter^0,f,c
  4376   00165E                     l3250:
  4377   00165E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  4378   001660  EF34  F00B         	goto	u1771
  4379   001664  EF36  F00B         	goto	u1770
  4380   001668                     u1771:
  4381   001668  EF25  F00B         	goto	l3248
  4382   00166C                     u1770:
  4383   00166C                     l3252:
  4384   00166C  90D8               	bcf	status,0,c
  4385   00166E  3617               	rlcf	___aodiv@quotient^0,f,c
  4386   001670  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  4387   001672  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  4388   001674  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  4389   001676  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  4390   001678  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  4391   00167A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  4392   00167C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  4393   00167E  500D               	movf	___aodiv@divisor^0,w,c
  4394   001680  5C05               	subwf	___aodiv@dividend^0,w,c
  4395   001682  500E               	movf	(___aodiv@divisor+1)^0,w,c
  4396   001684  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  4397   001686  500F               	movf	(___aodiv@divisor+2)^0,w,c
  4398   001688  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  4399   00168A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  4400   00168C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  4401   00168E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  4402   001690  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  4403   001692  5012               	movf	(___aodiv@divisor+5)^0,w,c
  4404   001694  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  4405   001696  5013               	movf	(___aodiv@divisor+6)^0,w,c
  4406   001698  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  4407   00169A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  4408   00169C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  4409   00169E  A0D8               	btfss	status,0,c
  4410   0016A0  EF54  F00B         	goto	u1781
  4411   0016A4  EF56  F00B         	goto	u1780
  4412   0016A8                     u1781:
  4413   0016A8  EF67  F00B         	goto	l3260
  4414   0016AC                     u1780:
  4415   0016AC  500D               	movf	___aodiv@divisor^0,w,c
  4416   0016AE  5E05               	subwf	___aodiv@dividend^0,f,c
  4417   0016B0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  4418   0016B2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  4419   0016B4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  4420   0016B6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  4421   0016B8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  4422   0016BA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  4423   0016BC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  4424   0016BE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  4425   0016C0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  4426   0016C2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  4427   0016C4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  4428   0016C6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  4429   0016C8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  4430   0016CA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  4431   0016CC  8017               	bsf	___aodiv@quotient^0,0,c
  4432   0016CE                     l3260:
  4433   0016CE  90D8               	bcf	status,0,c
  4434   0016D0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  4435   0016D2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  4436   0016D4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  4437   0016D6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  4438   0016D8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  4439   0016DA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  4440   0016DC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  4441   0016DE  320D               	rrcf	___aodiv@divisor^0,f,c
  4442   0016E0  2E15               	decfsz	___aodiv@counter^0,f,c
  4443   0016E2  EF36  F00B         	goto	l3252
  4444   0016E6                     l3264:
  4445   0016E6  5016               	movf	___aodiv@sign^0,w,c
  4446   0016E8  B4D8               	btfsc	status,2,c
  4447   0016EA  EF79  F00B         	goto	u1791
  4448   0016EE  EF7B  F00B         	goto	u1790
  4449   0016F2                     u1791:
  4450   0016F2  EF8B  F00B         	goto	l3268
  4451   0016F6                     u1790:
  4452   0016F6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  4453   0016F8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  4454   0016FA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  4455   0016FC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  4456   0016FE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  4457   001700  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  4458   001702  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  4459   001704  6C17               	negf	___aodiv@quotient^0,c
  4460   001706  0E00               	movlw	0
  4461   001708  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  4462   00170A  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  4463   00170C  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  4464   00170E  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  4465   001710  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  4466   001712  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  4467   001714  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  4468   001716                     l3268:
  4469   001716  C017  F005         	movff	___aodiv@quotient,?___aodiv
  4470   00171A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  4471   00171E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  4472   001722  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  4473   001726  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  4474   00172A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  4475   00172E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  4476   001732  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  4477   001736  0012               	return		;funcret
  4478   001738                     __end_of___aodiv:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function _sendStringSerial4 *****************
  4482 ;; Defined at:
  4483 ;;		line 39 in file "serial.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  string          2    5[COMRAM] PTR unsigned char 
  4486 ;;		 -> main@buf(150), 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;Total ram usage:        2 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 5
  4505 ;; This function calls:
  4506 ;;		_sendCharSerial4
  4507 ;; This function is called by:
  4508 ;;		_main
  4509 ;;		_clear_read_calibration
  4510 ;;		_card_response
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text24
  4515   002246                     __ptext24:
  4516                           	callstack 0
  4517   002246                     _sendStringSerial4:
  4518                           	callstack 25
  4519   002246                     
  4520                           ;serial.c: 40:  while(*string != 0) {
  4521   002246  EF2E  F011         	goto	l2636
  4522   00224A                     l2632:
  4523                           
  4524                           ;serial.c: 41:         sendCharSerial4(*string++);
  4525   00224A  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  4526   00224E  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4527   002252  50DF               	movf	indf2,w,c
  4528   002254  ECD1  F011         	call	_sendCharSerial4
  4529   002258  4A06               	infsnz	sendStringSerial4@string^0,f,c
  4530   00225A  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  4531   00225C                     l2636:
  4532                           
  4533                           ;serial.c: 40:  while(*string != 0) {
  4534   00225C  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  4535   002260  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4536   002264  50DF               	movf	indf2,w,c
  4537   002266  A4D8               	btfss	status,2,c
  4538   002268  EF38  F011         	goto	u1341
  4539   00226C  EF3A  F011         	goto	u1340
  4540   002270                     u1341:
  4541   002270  EF25  F011         	goto	l2632
  4542   002274                     u1340:
  4543   002274  0012               	return		;funcret
  4544   002276                     __end_of_sendStringSerial4:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function _sendCharSerial4 *****************
  4548 ;; Defined at:
  4549 ;;		line 32 in file "serial.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  charToSend      1    wreg     unsigned char 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  charToSend      1    4[COMRAM] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;Total ram usage:        1 bytes
  4568 ;; Hardware stack levels used: 1
  4569 ;; Hardware stack levels required when called: 4
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_sendStringSerial4
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text25
  4578   0023A2                     __ptext25:
  4579                           	callstack 0
  4580   0023A2                     _sendCharSerial4:
  4581                           	callstack 25
  4582                           
  4583                           ;incstack = 0
  4584                           ;sendCharSerial4@charToSend stored from wreg
  4585   0023A2  6E05               	movwf	sendCharSerial4@charToSend^0,c
  4586   0023A4                     l408:
  4587   0023A4  010E               	movlb	14	; () banked
  4588   0023A6  A537               	btfss	55,2,b	;volatile
  4589   0023A8  EFD8  F011         	goto	u1251
  4590   0023AC  EFDA  F011         	goto	u1250
  4591   0023B0                     u1251:
  4592   0023B0  EFD2  F011         	goto	l408
  4593   0023B4                     u1250:
  4594   0023B4                     
  4595                           ; BSR set to: 14
  4596                           ;serial.c: 34:     TX4REG = charToSend;
  4597   0023B4  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4598   0023B8                     
  4599                           ; BSR set to: 14
  4600   0023B8  0012               	return		;funcret
  4601   0023BA                     __end_of_sendCharSerial4:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function _color_read_Clear *****************
  4605 ;; Defined at:
  4606 ;;		line 71 in file "color.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  tmp             2   13[COMRAM] unsigned int 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  2    8[COMRAM] unsigned int 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4622 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4623 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;Total ram usage:        7 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 6
  4627 ;; This function calls:
  4628 ;;		_I2C_2_Master_Read
  4629 ;;		_I2C_2_Master_RepStart
  4630 ;;		_I2C_2_Master_Start
  4631 ;;		_I2C_2_Master_Stop
  4632 ;;		_I2C_2_Master_Write
  4633 ;; This function is called by:
  4634 ;;		_main
  4635 ;;		_clear_read_calibration
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text26
  4640   0020BE                     __ptext26:
  4641                           	callstack 0
  4642   0020BE                     _color_read_Clear:
  4643                           	callstack 24
  4644   0020BE                     
  4645                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  4646   0020BE  EC11  F012         	call	_I2C_2_Master_Start	;wreg free
  4647                           
  4648                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  4649   0020C2  0E52               	movlw	82
  4650   0020C4  ECFB  F011         	call	_I2C_2_Master_Write
  4651                           
  4652                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  4653   0020C8  0EB4               	movlw	180
  4654   0020CA  ECFB  F011         	call	_I2C_2_Master_Write
  4655                           
  4656                           ;color.c: 77:  I2C_2_Master_RepStart();
  4657   0020CE  EC07  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4658                           
  4659                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  4660   0020D2  0E53               	movlw	83
  4661   0020D4  ECFB  F011         	call	_I2C_2_Master_Write
  4662                           
  4663                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  4664   0020D8  0E01               	movlw	1
  4665   0020DA  ECA9  F010         	call	_I2C_2_Master_Read
  4666   0020DE  6E0B               	movwf	??_color_read_Clear^0,c
  4667   0020E0  500B               	movf	??_color_read_Clear^0,w,c
  4668   0020E2  6E0E               	movwf	color_read_Clear@tmp^0,c
  4669   0020E4  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  4670                           
  4671                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4672   0020E6  0E00               	movlw	0
  4673   0020E8  ECA9  F010         	call	_I2C_2_Master_Read
  4674   0020EC  6E0B               	movwf	??_color_read_Clear^0,c
  4675   0020EE  500B               	movf	??_color_read_Clear^0,w,c
  4676   0020F0  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  4677   0020F2  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  4678   0020F4  500E               	movf	color_read_Clear@tmp^0,w,c
  4679   0020F6  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  4680   0020F8  6E0E               	movwf	color_read_Clear@tmp^0,c
  4681   0020FA  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  4682   0020FC  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  4683   0020FE  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  4684                           
  4685                           ;color.c: 81:  I2C_2_Master_Stop();
  4686   002100  EC0C  F012         	call	_I2C_2_Master_Stop	;wreg free
  4687   002104                     
  4688                           ;color.c: 82:  return tmp;
  4689   002104  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  4690   002108  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4691   00210C  0012               	return		;funcret
  4692   00210E                     __end_of_color_read_Clear:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function _I2C_2_Master_RepStart *****************
  4696 ;; Defined at:
  4697 ;;		line 33 in file "i2c.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4715 ;;Total ram usage:        0 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; Hardware stack levels required when called: 5
  4718 ;; This function calls:
  4719 ;;		_I2C_2_Master_Idle
  4720 ;; This function is called by:
  4721 ;;		_color_read_Red
  4722 ;;		_color_read_Green
  4723 ;;		_color_read_Blue
  4724 ;;		_color_read_Clear
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text27
  4729   00240E                     __ptext27:
  4730                           	callstack 0
  4731   00240E                     _I2C_2_Master_RepStart:
  4732                           	callstack 24
  4733   00240E                     
  4734                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4735   00240E  EC65  F011         	call	_I2C_2_Master_Idle	;wreg free
  4736   002412                     
  4737                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4738   002412  010E               	movlb	14	; () banked
  4739   002414  83DA               	bsf	218,1,b	;volatile
  4740   002416                     
  4741                           ; BSR set to: 14
  4742   002416  0012               	return		;funcret
  4743   002418                     __end_of_I2C_2_Master_RepStart:
  4744                           	callstack 0
  4745                           
  4746 ;; *************** function _I2C_2_Master_Read *****************
  4747 ;; Defined at:
  4748 ;;		line 51 in file "i2c.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  ack             1    wreg     unsigned char 
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  ack             1    6[COMRAM] unsigned char 
  4753 ;;  tmp             1    7[COMRAM] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      unsigned char 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4766 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4767 ;;Total ram usage:        3 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; Hardware stack levels required when called: 5
  4770 ;; This function calls:
  4771 ;;		_I2C_2_Master_Idle
  4772 ;; This function is called by:
  4773 ;;		_color_read_Red
  4774 ;;		_color_read_Green
  4775 ;;		_color_read_Blue
  4776 ;;		_color_read_Clear
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text28
  4781   002152                     __ptext28:
  4782                           	callstack 0
  4783   002152                     _I2C_2_Master_Read:
  4784                           	callstack 24
  4785                           
  4786                           ; BSR set to: 14
  4787                           ;incstack = 0
  4788                           ;I2C_2_Master_Read@ack stored from wreg
  4789   002152  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  4790   002154                     
  4791                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4792   002154  EC65  F011         	call	_I2C_2_Master_Idle	;wreg free
  4793   002158                     
  4794                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4795   002158  010E               	movlb	14	; () banked
  4796   00215A  87DA               	bsf	218,3,b	;volatile
  4797                           
  4798                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4799   00215C  EC65  F011         	call	_I2C_2_Master_Idle	;wreg free
  4800   002160                     
  4801                           ;i2c.c: 57:   tmp = SSP2BUF;
  4802   002160  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4803                           
  4804                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4805   002164  EC65  F011         	call	_I2C_2_Master_Idle	;wreg free
  4806   002168                     
  4807                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4808   002168  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  4809   00216A  B4D8               	btfsc	status,2,c
  4810   00216C  EFBA  F010         	goto	u1231
  4811   002170  EFBE  F010         	goto	u1230
  4812   002174                     u1231:
  4813   002174  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4814   002176  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  4815   002178  EFBF  F010         	goto	u1248
  4816   00217C                     u1230:
  4817   00217C  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4818   00217E                     u1248:
  4819   00217E  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  4820   002180  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  4821   002182  010E               	movlb	14	; () banked
  4822   002184  51DA               	movf	218,w,b	;volatile
  4823   002186  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4824   002188  0BDF               	andlw	-33
  4825   00218A  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4826   00218C  6FDA               	movwf	218,b	;volatile
  4827   00218E                     
  4828                           ; BSR set to: 14
  4829                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4830   00218E  89DA               	bsf	218,4,b	;volatile
  4831   002190                     
  4832                           ; BSR set to: 14
  4833                           ;i2c.c: 61:   return tmp;
  4834   002190  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  4835   002192                     
  4836                           ; BSR set to: 14
  4837   002192  0012               	return		;funcret
  4838   002194                     __end_of_I2C_2_Master_Read:
  4839                           	callstack 0
  4840                           
  4841 ;; *************** function _LEDSon_init *****************
  4842 ;; Defined at:
  4843 ;;		line 18 in file "LEDsOn.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;		None
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		None
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;Total ram usage:        0 bytes
  4862 ;; Hardware stack levels used: 1
  4863 ;; Hardware stack levels required when called: 4
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_main
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text29
  4872   002340                     __ptext29:
  4873                           	callstack 0
  4874   002340                     _LEDSon_init:
  4875                           	callstack 26
  4876   002340                     
  4877                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  4878   002340  9288               	bcf	136,1,c	;volatile
  4879                           
  4880                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  4881   002342  9088               	bcf	136,0,c	;volatile
  4882                           
  4883                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  4884   002344  9884               	bcf	132,4,c	;volatile
  4885                           
  4886                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  4887   002346  9684               	bcf	132,3,c	;volatile
  4888                           
  4889                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  4890   002348  9086               	bcf	134,0,c	;volatile
  4891                           
  4892                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  4893   00234A  9287               	bcf	135,1,c	;volatile
  4894                           
  4895                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  4896   00234C  9E86               	bcf	134,7,c	;volatile
  4897                           
  4898                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  4899   00234E  9881               	bcf	129,4,c	;volatile
  4900                           
  4901                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  4902   002350  8E7E               	bsf	126,7,c	;volatile
  4903                           
  4904                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  4905   002352  827F               	bsf	127,1,c	;volatile
  4906                           
  4907                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  4908   002354  8879               	bsf	121,4,c	;volatile
  4909                           
  4910                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  4911   002356  987C               	bcf	124,4,c	;volatile
  4912                           
  4913                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  4914   002358  9280               	bcf	128,1,c	;volatile
  4915                           
  4916                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  4917   00235A  907E               	bcf	126,0,c	;volatile
  4918                           
  4919                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  4920   00235C  9080               	bcf	128,0,c	;volatile
  4921                           
  4922                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  4923   00235E  967C               	bcf	124,3,c	;volatile
  4924   002360  0012               	return		;funcret
  4925   002362                     __end_of_LEDSon_init:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function _Interrupts_init *****************
  4929 ;; Defined at:
  4930 ;;		line 7 in file "interrupts.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;Total ram usage:        0 bytes
  4949 ;; Hardware stack levels used: 1
  4950 ;; Hardware stack levels required when called: 8
  4951 ;; This function calls:
  4952 ;;		_enable_color_interrupt
  4953 ;;		_set_interrupt_threshold
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text30
  4960   0021D4                     __ptext30:
  4961                           	callstack 0
  4962   0021D4                     _Interrupts_init:
  4963                           	callstack 22
  4964   0021D4                     
  4965                           ;interrupts.c: 9:     enable_color_interrupt();
  4966   0021D4  ECF3  F011         	call	_enable_color_interrupt	;wreg free
  4967                           
  4968                           ;interrupts.c: 10:     set_interrupt_threshold(1, 2000, 0b0100);
  4969   0021D8  0E00               	movlw	0
  4970   0021DA  6E0A               	movwf	(set_interrupt_threshold@AILT+1)^0,c
  4971   0021DC  0E01               	movlw	1
  4972   0021DE  6E09               	movwf	set_interrupt_threshold@AILT^0,c
  4973   0021E0  0E07               	movlw	7
  4974   0021E2  6E0C               	movwf	(set_interrupt_threshold@AIHT+1)^0,c
  4975   0021E4  0ED0               	movlw	208
  4976   0021E6  6E0B               	movwf	set_interrupt_threshold@AIHT^0,c
  4977   0021E8  0E00               	movlw	0
  4978   0021EA  6E0E               	movwf	(set_interrupt_threshold@persistence+1)^0,c
  4979   0021EC  0E04               	movlw	4
  4980   0021EE  6E0D               	movwf	set_interrupt_threshold@persistence^0,c
  4981   0021F0  EC60  F00F         	call	_set_interrupt_threshold	;wreg free
  4982   0021F4                     
  4983                           ;interrupts.c: 12:     TRISBbits.TRISB1 = 0;
  4984   0021F4  9282               	bcf	130,1,c	;volatile
  4985   0021F6                     
  4986                           ;interrupts.c: 13:     ANSELBbits.ANSELB1 = 0;
  4987   0021F6  010E               	movlb	14	; () banked
  4988   0021F8  939A               	bcf	154,1,b	;volatile
  4989   0021FA                     
  4990                           ; BSR set to: 14
  4991                           ;interrupts.c: 14:     INT1PPS=0x09;
  4992   0021FA  0E09               	movlw	9
  4993   0021FC  010D               	movlb	13	; () banked
  4994   0021FE  6FF1               	movwf	241,b	;volatile
  4995   002200                     
  4996                           ; BSR set to: 13
  4997                           ;interrupts.c: 15:     PIE0bits.INT1IE = 1;
  4998   002200  010E               	movlb	14	; () banked
  4999   002202  8329               	bsf	41,1,b	;volatile
  5000   002204                     
  5001                           ; BSR set to: 14
  5002                           ;interrupts.c: 16:     IPR0bits.INT1IP = 1;
  5003   002204  831F               	bsf	31,1,b	;volatile
  5004   002206                     
  5005                           ; BSR set to: 14
  5006                           ;interrupts.c: 17:     INTCONbits.INT1EDG = 0;
  5007   002206  92F2               	bcf	242,1,c	;volatile
  5008   002208                     
  5009                           ; BSR set to: 14
  5010                           ;interrupts.c: 18:     INTCONbits.PEIE=1;
  5011   002208  8CF2               	bsf	242,6,c	;volatile
  5012   00220A                     
  5013                           ; BSR set to: 14
  5014                           ;interrupts.c: 19:     INTCONbits.IPEN = 1;
  5015   00220A  8AF2               	bsf	242,5,c	;volatile
  5016   00220C                     
  5017                           ; BSR set to: 14
  5018                           ;interrupts.c: 20:     INTCONbits.GIEL = 1;
  5019   00220C  8CF2               	bsf	242,6,c	;volatile
  5020   00220E                     
  5021                           ; BSR set to: 14
  5022                           ;interrupts.c: 21:     INTCONbits.GIEH=1;}
  5023   00220E  8EF2               	bsf	242,7,c	;volatile
  5024   002210                     
  5025                           ; BSR set to: 14
  5026   002210  0012               	return		;funcret
  5027   002212                     __end_of_Interrupts_init:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _set_interrupt_threshold *****************
  5031 ;; Defined at:
  5032 ;;		line 43 in file "interrupts.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  AILT            2    8[COMRAM] unsigned int 
  5035 ;;  AIHT            2   10[COMRAM] unsigned int 
  5036 ;;  persistence     2   12[COMRAM] unsigned int 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, status,0, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5048 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5051 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;Total ram usage:        8 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 7
  5055 ;; This function calls:
  5056 ;;		_color_writetoaddr
  5057 ;; This function is called by:
  5058 ;;		_Interrupts_init
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text31
  5063   001EC0                     __ptext31:
  5064                           	callstack 0
  5065   001EC0                     _set_interrupt_threshold:
  5066                           	callstack 22
  5067   001EC0                     
  5068                           ;interrupts.c: 45:     color_writetoaddr(0x0C, persistence);
  5069   001EC0  C00D  F007         	movff	set_interrupt_threshold@persistence,color_writetoaddr@value
  5070   001EC4  0E0C               	movlw	12
  5071   001EC6  ECC1  F011         	call	_color_writetoaddr
  5072                           
  5073                           ;interrupts.c: 46:     color_writetoaddr(0x05, AILT >> 8);
  5074   001ECA  500A               	movf	(set_interrupt_threshold@AILT+1)^0,w,c
  5075   001ECC  6E07               	movwf	color_writetoaddr@value^0,c
  5076   001ECE  0E05               	movlw	5
  5077   001ED0  ECC1  F011         	call	_color_writetoaddr
  5078   001ED4                     
  5079                           ;interrupts.c: 47:     color_writetoaddr(0x04, AILT && 0b0000000011111111);
  5080   001ED4  0E00               	movlw	0
  5081   001ED6  6E0F               	movwf	_set_interrupt_threshold$2044^0,c
  5082   001ED8  5009               	movf	set_interrupt_threshold@AILT^0,w,c
  5083   001EDA  100A               	iorwf	(set_interrupt_threshold@AILT+1)^0,w,c
  5084   001EDC  B4D8               	btfsc	status,2,c
  5085   001EDE  EF73  F00F         	goto	u1351
  5086   001EE2  EF75  F00F         	goto	u1350
  5087   001EE6                     u1351:
  5088   001EE6  EF77  F00F         	goto	l2648
  5089   001EEA                     u1350:
  5090   001EEA  0E01               	movlw	1
  5091   001EEC  6E0F               	movwf	_set_interrupt_threshold$2044^0,c
  5092   001EEE                     l2648:
  5093   001EEE  C00F  F007         	movff	_set_interrupt_threshold$2044,color_writetoaddr@value
  5094   001EF2  0E04               	movlw	4
  5095   001EF4  ECC1  F011         	call	_color_writetoaddr
  5096   001EF8                     
  5097                           ;interrupts.c: 48:     color_writetoaddr(0x07, AIHT >> 8);
  5098   001EF8  500C               	movf	(set_interrupt_threshold@AIHT+1)^0,w,c
  5099   001EFA  6E07               	movwf	color_writetoaddr@value^0,c
  5100   001EFC  0E07               	movlw	7
  5101   001EFE  ECC1  F011         	call	_color_writetoaddr
  5102                           
  5103                           ;interrupts.c: 49:     color_writetoaddr(0x06, AIHT && 0b0000000011111111);
  5104   001F02  0E00               	movlw	0
  5105   001F04  6E10               	movwf	_set_interrupt_threshold$2045^0,c
  5106   001F06  500B               	movf	set_interrupt_threshold@AIHT^0,w,c
  5107   001F08  100C               	iorwf	(set_interrupt_threshold@AIHT+1)^0,w,c
  5108   001F0A  B4D8               	btfsc	status,2,c
  5109   001F0C  EF8A  F00F         	goto	u1361
  5110   001F10  EF8C  F00F         	goto	u1360
  5111   001F14                     u1361:
  5112   001F14  EF8E  F00F         	goto	l2656
  5113   001F18                     u1360:
  5114   001F18  0E01               	movlw	1
  5115   001F1A  6E10               	movwf	_set_interrupt_threshold$2045^0,c
  5116   001F1C                     l2656:
  5117   001F1C  C010  F007         	movff	_set_interrupt_threshold$2045,color_writetoaddr@value
  5118   001F20  0E06               	movlw	6
  5119   001F22  ECC1  F011         	call	_color_writetoaddr
  5120   001F26  0012               	return		;funcret
  5121   001F28                     __end_of_set_interrupt_threshold:
  5122                           	callstack 0
  5123                           
  5124 ;; *************** function _enable_color_interrupt *****************
  5125 ;; Defined at:
  5126 ;;		line 38 in file "interrupts.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5144 ;;Total ram usage:        0 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; Hardware stack levels required when called: 7
  5147 ;; This function calls:
  5148 ;;		_clear_interrupt_flag
  5149 ;;		_color_writetoaddr
  5150 ;; This function is called by:
  5151 ;;		_Interrupts_init
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text32
  5156   0023E6                     __ptext32:
  5157                           	callstack 0
  5158   0023E6                     _enable_color_interrupt:
  5159                           	callstack 22
  5160   0023E6                     
  5161                           ;interrupts.c: 39:     clear_interrupt_flag();
  5162   0023E6  ECDD  F011         	call	_clear_interrupt_flag	;wreg free
  5163                           
  5164                           ;interrupts.c: 40:  color_writetoaddr(0x00, 0b10011);
  5165   0023EA  0E13               	movlw	19
  5166   0023EC  6E07               	movwf	color_writetoaddr@value^0,c
  5167   0023EE  0E00               	movlw	0
  5168   0023F0  ECC1  F011         	call	_color_writetoaddr
  5169   0023F4  0012               	return		;funcret
  5170   0023F6                     __end_of_enable_color_interrupt:
  5171                           	callstack 0
  5172                           
  5173 ;; *************** function _color_writetoaddr *****************
  5174 ;; Defined at:
  5175 ;;		line 21 in file "color.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  address         1    wreg     unsigned char 
  5178 ;;  value           1    6[COMRAM] unsigned char 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  address         1    7[COMRAM] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5190 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;Total ram usage:        2 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; Hardware stack levels required when called: 6
  5197 ;; This function calls:
  5198 ;;		_I2C_2_Master_Start
  5199 ;;		_I2C_2_Master_Stop
  5200 ;;		_I2C_2_Master_Write
  5201 ;; This function is called by:
  5202 ;;		_color_click_init
  5203 ;;		_enable_color_interrupt
  5204 ;;		_set_interrupt_threshold
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text33
  5209   002382                     __ptext33:
  5210                           	callstack 0
  5211   002382                     _color_writetoaddr:
  5212                           	callstack 23
  5213                           
  5214                           ;incstack = 0
  5215                           ;color_writetoaddr@address stored from wreg
  5216   002382  6E08               	movwf	color_writetoaddr@address^0,c
  5217   002384                     
  5218                           ;color.c: 22:     I2C_2_Master_Start();
  5219   002384  EC11  F012         	call	_I2C_2_Master_Start	;wreg free
  5220                           
  5221                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  5222   002388  0E52               	movlw	82
  5223   00238A  ECFB  F011         	call	_I2C_2_Master_Write
  5224                           
  5225                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  5226   00238E  5008               	movf	color_writetoaddr@address^0,w,c
  5227   002390  0980               	iorlw	128
  5228   002392  ECFB  F011         	call	_I2C_2_Master_Write
  5229                           
  5230                           ;color.c: 25:     I2C_2_Master_Write(value);
  5231   002396  5007               	movf	color_writetoaddr@value^0,w,c
  5232   002398  ECFB  F011         	call	_I2C_2_Master_Write
  5233                           
  5234                           ;color.c: 26:     I2C_2_Master_Stop();
  5235   00239C  EC0C  F012         	call	_I2C_2_Master_Stop	;wreg free
  5236   0023A0  0012               	return		;funcret
  5237   0023A2                     __end_of_color_writetoaddr:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _clear_interrupt_flag *****************
  5241 ;; Defined at:
  5242 ;;		line 52 in file "interrupts.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5260 ;;Total ram usage:        0 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 6
  5263 ;; This function calls:
  5264 ;;		_I2C_2_Master_Start
  5265 ;;		_I2C_2_Master_Stop
  5266 ;;		_I2C_2_Master_Write
  5267 ;; This function is called by:
  5268 ;;		_enable_color_interrupt
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text34
  5273   0023BA                     __ptext34:
  5274                           	callstack 0
  5275   0023BA                     _clear_interrupt_flag:
  5276                           	callstack 22
  5277   0023BA                     
  5278                           ;interrupts.c: 53:     I2C_2_Master_Start();
  5279   0023BA  EC11  F012         	call	_I2C_2_Master_Start	;wreg free
  5280                           
  5281                           ;interrupts.c: 54:     I2C_2_Master_Write(0x52 | 0x00);
  5282   0023BE  0E52               	movlw	82
  5283   0023C0  ECFB  F011         	call	_I2C_2_Master_Write
  5284                           
  5285                           ;interrupts.c: 55:     I2C_2_Master_Write(0b11100110);
  5286   0023C4  0EE6               	movlw	230
  5287   0023C6  ECFB  F011         	call	_I2C_2_Master_Write
  5288                           
  5289                           ;interrupts.c: 56:     I2C_2_Master_Stop();
  5290   0023CA  EC0C  F012         	call	_I2C_2_Master_Stop	;wreg free
  5291   0023CE  0012               	return		;funcret
  5292   0023D0                     __end_of_clear_interrupt_flag:
  5293                           	callstack 0
  5294                           
  5295 ;; *************** function _I2C_2_Master_Write *****************
  5296 ;; Defined at:
  5297 ;;		line 45 in file "i2c.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  data_byte       1    wreg     unsigned char 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  data_byte       1    5[COMRAM] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2, status,0, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5315 ;;Total ram usage:        1 bytes
  5316 ;; Hardware stack levels used: 1
  5317 ;; Hardware stack levels required when called: 5
  5318 ;; This function calls:
  5319 ;;		_I2C_2_Master_Idle
  5320 ;; This function is called by:
  5321 ;;		_color_writetoaddr
  5322 ;;		_color_read_Red
  5323 ;;		_color_read_Green
  5324 ;;		_color_read_Blue
  5325 ;;		_color_read_Clear
  5326 ;;		_clear_interrupt_flag
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text35
  5331   0023F6                     __ptext35:
  5332                           	callstack 0
  5333   0023F6                     _I2C_2_Master_Write:
  5334                           	callstack 24
  5335                           
  5336                           ;incstack = 0
  5337                           ;I2C_2_Master_Write@data_byte stored from wreg
  5338   0023F6  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  5339   0023F8                     
  5340                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5341   0023F8  EC65  F011         	call	_I2C_2_Master_Idle	;wreg free
  5342   0023FC                     
  5343                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5344   0023FC  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5345   002400  0012               	return		;funcret
  5346   002402                     __end_of_I2C_2_Master_Write:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function _I2C_2_Master_Stop *****************
  5350 ;; Defined at:
  5351 ;;		line 39 in file "i2c.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;Total ram usage:        0 bytes
  5370 ;; Hardware stack levels used: 1
  5371 ;; Hardware stack levels required when called: 5
  5372 ;; This function calls:
  5373 ;;		_I2C_2_Master_Idle
  5374 ;; This function is called by:
  5375 ;;		_color_writetoaddr
  5376 ;;		_color_read_Red
  5377 ;;		_color_read_Green
  5378 ;;		_color_read_Blue
  5379 ;;		_color_read_Clear
  5380 ;;		_clear_interrupt_flag
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text36
  5385   002418                     __ptext36:
  5386                           	callstack 0
  5387   002418                     _I2C_2_Master_Stop:
  5388                           	callstack 24
  5389   002418                     
  5390                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5391   002418  EC65  F011         	call	_I2C_2_Master_Idle	;wreg free
  5392   00241C                     
  5393                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5394   00241C  010E               	movlb	14	; () banked
  5395   00241E  85DA               	bsf	218,2,b	;volatile
  5396   002420                     
  5397                           ; BSR set to: 14
  5398   002420  0012               	return		;funcret
  5399   002422                     __end_of_I2C_2_Master_Stop:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _I2C_2_Master_Start *****************
  5403 ;; Defined at:
  5404 ;;		line 27 in file "i2c.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;Total ram usage:        0 bytes
  5423 ;; Hardware stack levels used: 1
  5424 ;; Hardware stack levels required when called: 5
  5425 ;; This function calls:
  5426 ;;		_I2C_2_Master_Idle
  5427 ;; This function is called by:
  5428 ;;		_color_writetoaddr
  5429 ;;		_color_read_Red
  5430 ;;		_color_read_Green
  5431 ;;		_color_read_Blue
  5432 ;;		_color_read_Clear
  5433 ;;		_clear_interrupt_flag
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           	psect	text37
  5438   002422                     __ptext37:
  5439                           	callstack 0
  5440   002422                     _I2C_2_Master_Start:
  5441                           	callstack 24
  5442   002422                     
  5443                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5444   002422  EC65  F011         	call	_I2C_2_Master_Idle	;wreg free
  5445   002426                     
  5446                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5447   002426  010E               	movlb	14	; () banked
  5448   002428  81DA               	bsf	218,0,b	;volatile
  5449   00242A                     
  5450                           ; BSR set to: 14
  5451   00242A  0012               	return		;funcret
  5452   00242C                     __end_of_I2C_2_Master_Start:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _I2C_2_Master_Idle *****************
  5456 ;; Defined at:
  5457 ;;		line 22 in file "i2c.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5475 ;;Total ram usage:        1 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 4
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_I2C_2_Master_Start
  5482 ;;		_I2C_2_Master_RepStart
  5483 ;;		_I2C_2_Master_Stop
  5484 ;;		_I2C_2_Master_Write
  5485 ;;		_I2C_2_Master_Read
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text38
  5490   0022CA                     __ptext38:
  5491                           	callstack 0
  5492   0022CA                     _I2C_2_Master_Idle:
  5493                           	callstack 24
  5494   0022CA                     l145:
  5495   0022CA  010E               	movlb	14	; () banked
  5496   0022CC  B5D8               	btfsc	216,2,b	;volatile
  5497   0022CE  EF6B  F011         	goto	u1081
  5498   0022D2  EF6D  F011         	goto	u1080
  5499   0022D6                     u1081:
  5500   0022D6  EF65  F011         	goto	l145
  5501   0022DA                     u1080:
  5502   0022DA                     
  5503                           ; BSR set to: 14
  5504   0022DA  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5505   0022DE  0E1F               	movlw	31
  5506   0022E0  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  5507   0022E2  A4D8               	btfss	status,2,c
  5508   0022E4  EF76  F011         	goto	u1091
  5509   0022E8  EF78  F011         	goto	u1090
  5510   0022EC                     u1091:
  5511   0022EC  EF65  F011         	goto	l145
  5512   0022F0                     u1090:
  5513   0022F0                     
  5514                           ; BSR set to: 14
  5515   0022F0  0012               	return		;funcret
  5516   0022F2                     __end_of_I2C_2_Master_Idle:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function _HighISR *****************
  5520 ;; Defined at:
  5521 ;;		line 23 in file "interrupts.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0, cstack
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;Total ram usage:        2 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; Hardware stack levels required when called: 3
  5542 ;; This function calls:
  5543 ;;		i2_clear_interrupt_flag
  5544 ;; This function is called by:
  5545 ;;		Interrupt level 2
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	intcode
  5550   000008                     __pintcode:
  5551                           	callstack 0
  5552   000008                     _HighISR:
  5553                           	callstack 18
  5554                           
  5555                           ; BSR set to: 14
  5556                           ;incstack = 0
  5557   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5558   00000A                     
  5559                           ;interrupts.c: 26:     if(PIR0bits.INT1IF == 1&& response_in_progress == 0) {
  5560   00000A  010E               	movlb	14	; () banked
  5561   00000C  A333               	btfss	51,1,b	;volatile
  5562   00000E  EF0B  F000         	goto	i2u165_41
  5563   000012  EF0D  F000         	goto	i2u165_40
  5564   000016                     i2u165_41:
  5565   000016  EF39  F000         	goto	i2l494
  5566   00001A                     i2u165_40:
  5567   00001A                     
  5568                           ; BSR set to: 14
  5569   00001A  0100               	movlb	0	; () banked
  5570   00001C  517A               	movf	_response_in_progress& (0+255),w,b
  5571   00001E  117B               	iorwf	(_response_in_progress+1)& (0+255),w,b
  5572   000020  A4D8               	btfss	status,2,c
  5573   000022  EF15  F000         	goto	i2u166_41
  5574   000026  EF17  F000         	goto	i2u166_40
  5575   00002A                     i2u166_41:
  5576   00002A  EF39  F000         	goto	i2l494
  5577   00002E                     i2u166_40:
  5578   00002E                     
  5579                           ; BSR set to: 0
  5580                           ;interrupts.c: 27:         card_detected = 1;
  5581   00002E  0E00               	movlw	0
  5582   000030  6F79               	movwf	(_card_detected+1)& (0+255),b
  5583   000032  0E01               	movlw	1
  5584   000034  6F78               	movwf	_card_detected& (0+255),b
  5585   000036                     
  5586                           ; BSR set to: 0
  5587                           ;interrupts.c: 28:         LATDbits.LATD7=1;
  5588   000036  8E7C               	bsf	124,7,c	;volatile
  5589   000038                     
  5590                           ; BSR set to: 0
  5591                           ;interrupts.c: 29:         _delay((unsigned long)((50)*(64000000/4000.0)));
  5592   000038  0E05               	movlw	5
  5593   00003A  6E04               	movwf	(??_HighISR+1)^0,c
  5594   00003C  0E0F               	movlw	15
  5595   00003E  6E03               	movwf	??_HighISR^0,c
  5596   000040  0EF1               	movlw	241
  5597   000042                     i2u220_47:
  5598   000042  2EE8               	decfsz	wreg,f,c
  5599   000044  D7FE               	bra	i2u220_47
  5600   000046  2E03               	decfsz	??_HighISR^0,f,c
  5601   000048  D7FC               	bra	i2u220_47
  5602   00004A  2E04               	decfsz	(??_HighISR+1)^0,f,c
  5603   00004C  D7FA               	bra	i2u220_47
  5604   00004E  F000               	nop	
  5605   000050                     
  5606                           ;interrupts.c: 30:         LATDbits.LATD7=0;
  5607   000050  9E7C               	bcf	124,7,c	;volatile
  5608   000052                     
  5609                           ;interrupts.c: 31:         _delay((unsigned long)((50)*(64000000/4000.0)));
  5610   000052  0E05               	movlw	5
  5611   000054  6E04               	movwf	(??_HighISR+1)^0,c
  5612   000056  0E0F               	movlw	15
  5613   000058  6E03               	movwf	??_HighISR^0,c
  5614   00005A  0EF1               	movlw	241
  5615   00005C                     i2u221_47:
  5616   00005C  2EE8               	decfsz	wreg,f,c
  5617   00005E  D7FE               	bra	i2u221_47
  5618   000060  2E03               	decfsz	??_HighISR^0,f,c
  5619   000062  D7FC               	bra	i2u221_47
  5620   000064  2E04               	decfsz	(??_HighISR+1)^0,f,c
  5621   000066  D7FA               	bra	i2u221_47
  5622   000068  F000               	nop	
  5623   00006A                     
  5624                           ;interrupts.c: 32:         clear_interrupt_flag();
  5625   00006A  ECE8  F011         	call	i2_clear_interrupt_flag	;wreg free
  5626   00006E                     
  5627                           ;interrupts.c: 33:         PIR0bits.INT1IF = 0;
  5628   00006E  010E               	movlb	14	; () banked
  5629   000070  9333               	bcf	51,1,b	;volatile
  5630   000072                     i2l494:
  5631   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5632   000074  0011               	retfie		f
  5633   000076                     __end_of_HighISR:
  5634                           	callstack 0
  5635                           
  5636 ;; *************** function i2_clear_interrupt_flag *****************
  5637 ;; Defined at:
  5638 ;;		line 52 in file "interrupts.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used: 1
  5658 ;; Hardware stack levels required when called: 2
  5659 ;; This function calls:
  5660 ;;		i2_I2C_2_Master_Start
  5661 ;;		i2_I2C_2_Master_Stop
  5662 ;;		i2_I2C_2_Master_Write
  5663 ;; This function is called by:
  5664 ;;		_HighISR
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text40
  5669   0023D0                     __ptext40:
  5670                           	callstack 0
  5671   0023D0                     i2_clear_interrupt_flag:
  5672                           	callstack 18
  5673   0023D0                     
  5674                           ;interrupts.c: 53:     I2C_2_Master_Start();
  5675   0023D0  EC1B  F012         	call	i2_I2C_2_Master_Start	;wreg free
  5676                           
  5677                           ;interrupts.c: 54:     I2C_2_Master_Write(0x52 | 0x00);
  5678   0023D4  0E52               	movlw	82
  5679   0023D6  EC01  F012         	call	i2_I2C_2_Master_Write
  5680                           
  5681                           ;interrupts.c: 55:     I2C_2_Master_Write(0b11100110);
  5682   0023DA  0EE6               	movlw	230
  5683   0023DC  EC01  F012         	call	i2_I2C_2_Master_Write
  5684                           
  5685                           ;interrupts.c: 56:     I2C_2_Master_Stop();
  5686   0023E0  EC16  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  5687   0023E4  0012               	return		;funcret
  5688   0023E6                     __end_ofi2_clear_interrupt_flag:
  5689                           	callstack 0
  5690                           
  5691 ;; *************** function i2_I2C_2_Master_Write *****************
  5692 ;; Defined at:
  5693 ;;		line 45 in file "i2c.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  data_byte       1    wreg     unsigned char 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  data_byte       1    1[COMRAM] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5711 ;;Total ram usage:        1 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; Hardware stack levels required when called: 1
  5714 ;; This function calls:
  5715 ;;		i2_I2C_2_Master_Idle
  5716 ;; This function is called by:
  5717 ;;		i2_clear_interrupt_flag
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text41
  5722   002402                     __ptext41:
  5723                           	callstack 0
  5724   002402                     i2_I2C_2_Master_Write:
  5725                           	callstack 18
  5726                           
  5727                           ;incstack = 0
  5728                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5729   002402  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5730   002404                     
  5731                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5732   002404  EC79  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5733   002408                     
  5734                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5735   002408  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5736   00240C  0012               	return		;funcret
  5737   00240E                     __end_ofi2_I2C_2_Master_Write:
  5738                           	callstack 0
  5739                           
  5740 ;; *************** function i2_I2C_2_Master_Stop *****************
  5741 ;; Defined at:
  5742 ;;		line 39 in file "i2c.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;		None
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;		None
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5760 ;;Total ram usage:        0 bytes
  5761 ;; Hardware stack levels used: 1
  5762 ;; Hardware stack levels required when called: 1
  5763 ;; This function calls:
  5764 ;;		i2_I2C_2_Master_Idle
  5765 ;; This function is called by:
  5766 ;;		i2_clear_interrupt_flag
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text42
  5771   00242C                     __ptext42:
  5772                           	callstack 0
  5773   00242C                     i2_I2C_2_Master_Stop:
  5774                           	callstack 18
  5775   00242C                     
  5776                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5777   00242C  EC79  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5778   002430                     
  5779                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5780   002430  010E               	movlb	14	; () banked
  5781   002432  85DA               	bsf	218,2,b	;volatile
  5782   002434                     
  5783                           ; BSR set to: 14
  5784   002434  0012               	return		;funcret
  5785   002436                     __end_ofi2_I2C_2_Master_Stop:
  5786                           	callstack 0
  5787                           
  5788 ;; *************** function i2_I2C_2_Master_Start *****************
  5789 ;; Defined at:
  5790 ;;		line 27 in file "i2c.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      void 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5808 ;;Total ram usage:        0 bytes
  5809 ;; Hardware stack levels used: 1
  5810 ;; Hardware stack levels required when called: 1
  5811 ;; This function calls:
  5812 ;;		i2_I2C_2_Master_Idle
  5813 ;; This function is called by:
  5814 ;;		i2_clear_interrupt_flag
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text43
  5819   002436                     __ptext43:
  5820                           	callstack 0
  5821   002436                     i2_I2C_2_Master_Start:
  5822                           	callstack 18
  5823   002436                     
  5824                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5825   002436  EC79  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5826   00243A                     
  5827                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5828   00243A  010E               	movlb	14	; () banked
  5829   00243C  81DA               	bsf	218,0,b	;volatile
  5830   00243E                     
  5831                           ; BSR set to: 14
  5832   00243E  0012               	return		;funcret
  5833   002440                     __end_ofi2_I2C_2_Master_Start:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function i2_I2C_2_Master_Idle *****************
  5837 ;; Defined at:
  5838 ;;		line 22 in file "i2c.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;Total ram usage:        1 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		i2_I2C_2_Master_Start
  5862 ;;		i2_I2C_2_Master_Stop
  5863 ;;		i2_I2C_2_Master_Write
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text44
  5868   0022F2                     __ptext44:
  5869                           	callstack 0
  5870   0022F2                     i2_I2C_2_Master_Idle:
  5871                           	callstack 18
  5872   0022F2                     i2l145:
  5873   0022F2  010E               	movlb	14	; () banked
  5874   0022F4  B5D8               	btfsc	216,2,b	;volatile
  5875   0022F6  EF7F  F011         	goto	i2u127_41
  5876   0022FA  EF81  F011         	goto	i2u127_40
  5877   0022FE                     i2u127_41:
  5878   0022FE  EF79  F011         	goto	i2l145
  5879   002302                     i2u127_40:
  5880   002302                     
  5881                           ; BSR set to: 14
  5882   002302  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5883   002306  0E1F               	movlw	31
  5884   002308  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5885   00230A  A4D8               	btfss	status,2,c
  5886   00230C  EF8A  F011         	goto	i2u128_41
  5887   002310  EF8C  F011         	goto	i2u128_40
  5888   002314                     i2u128_41:
  5889   002314  EF79  F011         	goto	i2l145
  5890   002318                     i2u128_40:
  5891   002318                     
  5892                           ; BSR set to: 14
  5893   002318  0012               	return		;funcret
  5894   00231A                     __end_ofi2_I2C_2_Master_Idle:
  5895                           	callstack 0
  5896                           
  5897                           	psect	rparam
  5898   000000                     
  5899                           	psect	temp
  5900   00005B                     btemp:
  5901                           	callstack 0
  5902   00005B                     	ds	1
  5903   000000                     int$flags	set	btemp
  5904   000000                     wtemp8	set	btemp+1
  5905   000000                     ttemp5	set	btemp+1
  5906   000000                     ttemp6	set	btemp+4
  5907   000000                     ttemp7	set	btemp+8
  5908                           
  5909                           	psect	idloc
  5910                           
  5911                           ;Config register IDLOC0 @ 0x200000
  5912                           ;	unspecified, using default values
  5913   200000                     	org	2097152
  5914   200000  0FFF               	dw	4095
  5915                           
  5916                           ;Config register IDLOC1 @ 0x200002
  5917                           ;	unspecified, using default values
  5918   200002                     	org	2097154
  5919   200002  0FFF               	dw	4095
  5920                           
  5921                           ;Config register IDLOC2 @ 0x200004
  5922                           ;	unspecified, using default values
  5923   200004                     	org	2097156
  5924   200004  0FFF               	dw	4095
  5925                           
  5926                           ;Config register IDLOC3 @ 0x200006
  5927                           ;	unspecified, using default values
  5928   200006                     	org	2097158
  5929   200006  0FFF               	dw	4095
  5930                           
  5931                           ;Config register IDLOC4 @ 0x200008
  5932                           ;	unspecified, using default values
  5933   200008                     	org	2097160
  5934   200008  0FFF               	dw	4095
  5935                           
  5936                           ;Config register IDLOC5 @ 0x20000A
  5937                           ;	unspecified, using default values
  5938   20000A                     	org	2097162
  5939   20000A  0FFF               	dw	4095
  5940                           
  5941                           ;Config register IDLOC6 @ 0x20000C
  5942                           ;	unspecified, using default values
  5943   20000C                     	org	2097164
  5944   20000C  0FFF               	dw	4095
  5945                           
  5946                           ;Config register IDLOC7 @ 0x20000E
  5947                           ;	unspecified, using default values
  5948   20000E                     	org	2097166
  5949   20000E  0FFF               	dw	4095
  5950                           
  5951                           	psect	config
  5952                           
  5953                           ;Config register CONFIG1L @ 0x300000
  5954                           ;	External Oscillator mode Selection bits
  5955                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5956                           ;	Power-up default value for COSC bits
  5957                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5958   300000                     	org	3145728
  5959   300000  AA                 	db	170
  5960                           
  5961                           ;Config register CONFIG1H @ 0x300001
  5962                           ;	unspecified, using default values
  5963                           ;	Clock Out Enable bit
  5964                           ;	CLKOUTEN = 0x1, unprogrammed default
  5965                           ;	Clock Switch Enable bit
  5966                           ;	CSWEN = 0x1, unprogrammed default
  5967                           ;	Fail-Safe Clock Monitor Enable bit
  5968                           ;	FCMEN = 0x1, unprogrammed default
  5969   300001                     	org	3145729
  5970   300001  FF                 	db	255
  5971                           
  5972                           ;Config register CONFIG2L @ 0x300002
  5973                           ;	unspecified, using default values
  5974                           ;	Master Clear Enable bit
  5975                           ;	MCLRE = 0x1, unprogrammed default
  5976                           ;	Power-up Timer Enable bit
  5977                           ;	PWRTE = 0x1, unprogrammed default
  5978                           ;	Low-power BOR enable bit
  5979                           ;	LPBOREN = 0x1, unprogrammed default
  5980                           ;	Brown-out Reset Enable bits
  5981                           ;	BOREN = 0x3, unprogrammed default
  5982   300002                     	org	3145730
  5983   300002  FF                 	db	255
  5984                           
  5985                           ;Config register CONFIG2H @ 0x300003
  5986                           ;	unspecified, using default values
  5987                           ;	Brown Out Reset Voltage selection bits
  5988                           ;	BORV = 0x3, unprogrammed default
  5989                           ;	ZCD Disable bit
  5990                           ;	ZCD = 0x1, unprogrammed default
  5991                           ;	PPSLOCK bit One-Way Set Enable bit
  5992                           ;	PPS1WAY = 0x1, unprogrammed default
  5993                           ;	Stack Full/Underflow Reset Enable bit
  5994                           ;	STVREN = 0x1, unprogrammed default
  5995                           ;	Debugger Enable bit
  5996                           ;	DEBUG = 0x1, unprogrammed default
  5997                           ;	Extended Instruction Set Enable bit
  5998                           ;	XINST = 0x1, unprogrammed default
  5999   300003                     	org	3145731
  6000   300003  FF                 	db	255
  6001                           
  6002                           ;Config register CONFIG3L @ 0x300004
  6003                           ;	WDT Period Select bits
  6004                           ;	WDTCPS = 0x1F, unprogrammed default
  6005                           ;	WDT operating mode
  6006                           ;	WDTE = OFF, WDT Disabled
  6007   300004                     	org	3145732
  6008   300004  9F                 	db	159
  6009                           
  6010                           ;Config register CONFIG3H @ 0x300005
  6011                           ;	unspecified, using default values
  6012                           ;	WDT Window Select bits
  6013                           ;	WDTCWS = 0x7, unprogrammed default
  6014                           ;	WDT input clock selector
  6015                           ;	WDTCCS = 0x7, unprogrammed default
  6016   300005                     	org	3145733
  6017   300005  FF                 	db	255
  6018                           
  6019                           ;Config register CONFIG4L @ 0x300006
  6020                           ;	unspecified, using default values
  6021                           ;	Write Protection Block 0
  6022                           ;	WRT0 = 0x1, unprogrammed default
  6023                           ;	Write Protection Block 1
  6024                           ;	WRT1 = 0x1, unprogrammed default
  6025                           ;	Write Protection Block 2
  6026                           ;	WRT2 = 0x1, unprogrammed default
  6027                           ;	Write Protection Block 3
  6028                           ;	WRT3 = 0x1, unprogrammed default
  6029                           ;	Write Protection Block 3
  6030                           ;	WRT4 = 0x1, unprogrammed default
  6031                           ;	Write Protection Block 3
  6032                           ;	WRT5 = 0x1, unprogrammed default
  6033                           ;	Write Protection Block 3
  6034                           ;	WRT6 = 0x1, unprogrammed default
  6035                           ;	Write Protection Block 3
  6036                           ;	WRT7 = 0x1, unprogrammed default
  6037   300006                     	org	3145734
  6038   300006  FF                 	db	255
  6039                           
  6040                           ;Config register CONFIG4H @ 0x300007
  6041                           ;	unspecified, using default values
  6042                           ;	Configuration Register Write Protection bit
  6043                           ;	WRTC = 0x1, unprogrammed default
  6044                           ;	Boot Block Write Protection bit
  6045                           ;	WRTB = 0x1, unprogrammed default
  6046                           ;	Data EEPROM Write Protection bit
  6047                           ;	WRTD = 0x1, unprogrammed default
  6048                           ;	Scanner Enable bit
  6049                           ;	SCANE = 0x1, unprogrammed default
  6050                           ;	Low Voltage Programming Enable bit
  6051                           ;	LVP = 0x1, unprogrammed default
  6052   300007                     	org	3145735
  6053   300007  FF                 	db	255
  6054                           
  6055                           ;Config register CONFIG5L @ 0x300008
  6056                           ;	unspecified, using default values
  6057                           ;	UserNVM Program Memory Code Protection bit
  6058                           ;	CP = 0x1, unprogrammed default
  6059                           ;	DataNVM Memory Code Protection bit
  6060                           ;	CPD = 0x1, unprogrammed default
  6061   300008                     	org	3145736
  6062   300008  FF                 	db	255
  6063                           
  6064                           ;Config register CONFIG5H @ 0x300009
  6065                           ;	unspecified, using default values
  6066   300009                     	org	3145737
  6067   300009  FF                 	db	255
  6068                           
  6069                           ;Config register CONFIG6L @ 0x30000A
  6070                           ;	unspecified, using default values
  6071                           ;	Table Read Protection Block 0
  6072                           ;	EBTR0 = 0x1, unprogrammed default
  6073                           ;	Table Read Protection Block 1
  6074                           ;	EBTR1 = 0x1, unprogrammed default
  6075                           ;	Table Read Protection Block 2
  6076                           ;	EBTR2 = 0x1, unprogrammed default
  6077                           ;	Table Read Protection Block 3
  6078                           ;	EBTR3 = 0x1, unprogrammed default
  6079                           ;	Table Read Protection Block 4
  6080                           ;	EBTR4 = 0x1, unprogrammed default
  6081                           ;	Table Read Protection Block 5
  6082                           ;	EBTR5 = 0x1, unprogrammed default
  6083                           ;	Table Read Protection Block 6
  6084                           ;	EBTR6 = 0x1, unprogrammed default
  6085                           ;	Table Read Protection Block 7
  6086                           ;	EBTR7 = 0x1, unprogrammed default
  6087   30000A                     	org	3145738
  6088   30000A  FF                 	db	255
  6089                           
  6090                           ;Config register CONFIG6H @ 0x30000B
  6091                           ;	unspecified, using default values
  6092                           ;	Boot Block Table Read Protection bit
  6093                           ;	EBTRB = 0x1, unprogrammed default
  6094   30000B                     	org	3145739
  6095   30000B  FF                 	db	255
  6096                           tosu	equ	0xFFF
  6097                           tosh	equ	0xFFE
  6098                           tosl	equ	0xFFD
  6099                           stkptr	equ	0xFFC
  6100                           pclatu	equ	0xFFB
  6101                           pclath	equ	0xFFA
  6102                           pcl	equ	0xFF9
  6103                           tblptru	equ	0xFF8
  6104                           tblptrh	equ	0xFF7
  6105                           tblptrl	equ	0xFF6
  6106                           tablat	equ	0xFF5
  6107                           prodh	equ	0xFF4
  6108                           prodl	equ	0xFF3
  6109                           indf0	equ	0xFEF
  6110                           postinc0	equ	0xFEE
  6111                           postdec0	equ	0xFED
  6112                           preinc0	equ	0xFEC
  6113                           plusw0	equ	0xFEB
  6114                           fsr0h	equ	0xFEA
  6115                           fsr0l	equ	0xFE9
  6116                           wreg	equ	0xFE8
  6117                           indf1	equ	0xFE7
  6118                           postinc1	equ	0xFE6
  6119                           postdec1	equ	0xFE5
  6120                           preinc1	equ	0xFE4
  6121                           plusw1	equ	0xFE3
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           bsr	equ	0xFE0
  6125                           indf2	equ	0xFDF
  6126                           postinc2	equ	0xFDE
  6127                           postdec2	equ	0xFDD
  6128                           preinc2	equ	0xFDC
  6129                           plusw2	equ	0xFDB
  6130                           fsr2h	equ	0xFDA
  6131                           fsr2l	equ	0xFD9
  6132                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     47     108
    BANK1           256    234     234
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_5(CODE[10]), STR_4(CODE[26]), STR_3(CODE[23]), STR_2(CODE[21]), 
		 -> STR_1(CODE[41]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 41
		 -> STR_5(CODE[10]), STR_4(CODE[26]), STR_3(CODE[23]), STR_2(CODE[21]), 
		 -> STR_1(CODE[41]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 41
		 -> STR_5(CODE[10]), STR_4(CODE[26]), STR_3(CODE[23]), STR_2(CODE[21]), 
		 -> STR_1(CODE[41]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2535$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_5(CODE[10]), STR_4(CODE[26]), STR_3(CODE[23]), STR_2(CODE[21]), 
		 -> STR_1(CODE[41]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2486$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2486$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    collect_avg_readings@blue_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@blue_read(BANK1[2]), 

    collect_avg_readings@green_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@green_read(BANK1[2]), 

    collect_avg_readings@red_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@red_read(BANK1[2]), 

    clear_read_calibration@clear_read_check	PTR unsigned int  size(2) Largest target is 2
		 -> main@clear_read_check(BANK1[2]), 

    clear_read_calibration@buf	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    clear_read_calibration@clear_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@clear_read(BANK1[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    S525DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    S525DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 


Critical Paths under _main in COMRAM

    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _collect_avg_readings->_color_read_Blue
    _collect_avg_readings->_color_read_Green
    _collect_avg_readings->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _Interrupts_init->_set_interrupt_threshold
    _set_interrupt_threshold->_color_writetoaddr
    _enable_color_interrupt->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _clear_interrupt_flag->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    i2_clear_interrupt_flag->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_clear_read_calibration
    _clear_read_calibration->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               356   356      0   27346
                                             45 BANK0      2     2      0
                                              0 BANK1    234   234      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _LEDSon_init
             _clear_read_calibration
               _collect_avg_readings
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    2991
                                             17 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     811
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     912
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _collect_avg_readings                                16    10      6    1243
                                             15 COMRAM    16    10      6
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _clear_read_calibration                              14     8      6    9551
                                             31 BANK0     14     8      6
                   _color_read_Clear
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    8306
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7100
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6639
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5072
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     453
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     447
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0    1908
             _enable_color_interrupt
            _set_interrupt_threshold
 ---------------------------------------------------------------------------------
 (2) _set_interrupt_threshold                              8     2      6    1136
                                              8 COMRAM     8     2      6
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _enable_color_interrupt                               0     0      0     772
               _clear_interrupt_flag
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _clear_interrupt_flag                                 0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             2     2      0      22
                                              2 COMRAM     2     2      0
             i2_clear_interrupt_flag
 ---------------------------------------------------------------------------------
 (11) i2_clear_interrupt_flag                              0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
     _enable_color_interrupt
       _clear_interrupt_flag
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _set_interrupt_threshold
       _color_writetoaddr
   _LEDSon_init
   _clear_read_calibration
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _collect_avg_readings
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_Blue
   _color_read_Clear
   _color_read_Green
   _color_read_Red
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf

 _HighISR (ROOT)
   i2_clear_interrupt_flag
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      65        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     EA      EA       7       91.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRllhhhl     37      0       0      43        0.0%
BITBIGSFRhhhl       32      0       0      33        0.0%
BITBIGSFRllllhl     2A      0       0      55        0.0%
BITBIGSFRllllll     23      0       0      62        0.0%
BITBIGSFRllhhhl     20      0       0      46        0.0%
BITBIGSFRhhlllh     17      0       0      37        0.0%
BITBIGSFRllhhhl     11      0       0      49        0.0%
BITBIGSFRllhhl      11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      34        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllhhhl      C      0       0      48        0.0%
BITBIGSFRllhhhl      C      0       0      47        0.0%
BITBIGSFRllllhl      9      0       0      59        0.0%
BITBIGSFRllhhhl      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      61        0.0%
BITBIGSFRllllhh      6      0       0      54        0.0%
BITBIGSFRllllhl      5      0       0      57        0.0%
BITBIGSFRlllhl       5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      38        0.0%
BITBIGSFRllllhl      3      0       0      56        0.0%
BITBIGSFRllllhl      3      0       0      58        0.0%
BITBIGSFRlllhh       3      0       0      52        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      36        0.0%
BITBIGSFRllllll      2      0       0      63        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllllhl      1      0       0      60        0.0%
BITBIGSFRllhhhl      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      35        0.0%
BITBIGSFRllhl        1      0       0      51        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EC      64        0.0%
DATA                 0      0     1EC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 20:23:58 2022

clear_read_calibration@clear_read_check 00C0                          _color_read_Red 1FCE  
                       _color_read_Blue 206E                                      l22 23A0  
                                    l31 20BC                                      l25 201C  
                                    l34 210C                                      l19 2244  
                                    l28 206C                                      l86 18A2  
                                    l79 1DD0                     ___wmul@multiplicand 0007  
                      _color_read_Clear 20BE                        _color_read_Green 201E  
                     ??_Interrupts_init 0011                                     l142 22C8  
                                   l151 242A                                     l160 2400  
                                   l145 22CA                                     l154 2416  
                                   l242 0F32                                     l163 2192  
                                   l411 23B8                                     l315 1C7E  
                                   l243 0F30                                     l148 22F0  
                                   l244 0F40                                     l157 2420  
                                   l326 15AE                                     l510 233E  
                                   l504 1F26                                     l272 2360  
                                   l408 23A4                                     l417 2274  
                                   l507 23CE                                     l624 1736  
                                   l637 1A06                                     l399 2380  
                                   l488 2210                                     l497 23F4  
                                   _abs 2194                                     _pad 1DD2  
                                   prod 000FF3                                     wreg 000FE8  
              ??_clear_read_calibration 00C2                                    l1001 1EB6  
                                  l1008 1EBE                                    ?_abs 0017  
                                  l1221 1E4A                                    l1240 13C8  
                                  l1217 1DF4                                    l1226 11DA  
                                  l1228 11E2                                    l1229 1228  
                                  l1253 1F7A                                    l1247 1B64  
                                  l1185 21CA                                    l1265 1D48  
                                  l1273 2150                                    l3210 1CCC  
                                  l3202 1C80                                    l1195 1FCC  
                                  l2500 23B4                                    l3300 19B6  
                                  l1188 21D2                                    l1276 2440  
                                  l3212 1D02                                    l3204 1C92  
                                  l3220 212C                                    l2502 23BA  
                                  l3230 15B4                                    l3302 19C6  
                                  l3206 1CA4                                    l3222 2130  
                                  l3310 1DE0                                    l2440 23F8  
                                  l3240 1614                                    l3232 15C2  
                                  l3304 19E6                                    l3224 2194  
                                  l3208 1CAE                                    l3216 210E  
                                  l3320 1E36                                    l3312 1DEC  
                                  l2520 22AA                                    l2442 23FC  
                                  l3250 165E                                    l3242 1618  
                                  l3234 15E2                                    l3226 21AE  
                                  l3218 211A                                    l3314 1E00  
                                  l3330 11B2                                    l3322 114E  
                                  l3410 1F70                                    l2530 1FCE  
                                  l2522 22B0                                    l2380 22CA  
                                  l2436 2422                                    l2444 2418  
                                  l3260 16CE                                    l3252 166C  
                                  l3244 1624                                    l3236 15E6  
                                  l3228 15B0                                    l3316 1E14  
                                  l3308 1DD2                                    l3340 1210  
                                  l3332 11CE                                    l3324 116E  
                                  l3404 1F28                                    l3420 1F9E  
                                  l2532 2014                                    l2524 22B2  
                                  l2700 2216                                    l3500 0EDE  
                                  l2382 22DA                                    l2438 2426  
                                  l2446 241C                                    l2550 2104  
                                  l2630 2246                                    l3262 16E0  
                                  l3254 167E                                    l3246 1642  
                                  l3238 15F4                                    l3318 1E18  
                                  l3350 123E                                    l3342 121C  
                                  l3334 11EA                                    l3326 1182  
                                  l3406 1F34                                    l3422 1FBA  
                                  l3414 1F7C                                    l2542 206E  
                                  l2526 22B4                                    l2518 22A0  
                                  l2702 2220                                    l2710 1D52  
                                  l3502 0EE4                                    l2640 1EC0  
                                  l2480 240E                                    l2632 224A  
                                  l3256 16AC                                    l3248 164A  
                                  l3264 16E6                                    l3280 18DA  
                                  l3272 18A4                                    l3360 134A  
                                  l3352 12C0                                    l3344 1224  
                                  l3336 11FA                                    l3328 1192  
                                  l3408 1F50                                    l3416 1F8E  
                                  l3432 1B70                                    l2544 20B4  
                                  l2536 201E                                    l2528 22B6  
                                  l2704 2230                                    l2720 1DB6  
                                  l2712 1D7C                                    l3520 0FB8  
                                  l3512 0F42                                    l3504 0EF0  
                                  l2650 1EF8                                    l2642 1ED4  
                                  l2490 2168                                    l2482 2412  
                                  l2634 2258                                    l3266 16F6  
                                  l3258 16CC                                    l3290 1942  
                                  l3282 18E8                                    l3274 18A8  
                                  l3370 13A8                                    l3362 1368  
                                  l3354 12C6                                    l3346 1230  
                                  l3338 1200                                    l3418 1F96  
                                  l3450 1BE0                                    l3434 1B84  
                                  l3426 1B66                                    l2538 2064  
                                  l2810 1482                                    l2802 1436  
                                  l2706 223A                                    l2722 1DB8  
                                  l2714 1DA0                                    l2730 1738  
                                  l3530 102A                                    l3522 0FEC  
                                  l3514 0F5E                                    l3506 0F26  
                                  l2652 1F06                                    l2644 1ED8  
                                  l2492 218E                                    l2484 2154  
                                  l2548 20BE                                    l2636 225C  
                                  l3268 1716                                    l3292 1950  
                                  l3284 1908                                    l3276 18B6  
                                  l3364 1382                                    l3356 12CC  
                                  l3348 1238                                    l3380 1A4C  
                                  l3452 1BFC                                    l3444 1BAE  
                                  l3436 1B8A                                    l2820 14CA  
                                  l2812 14AE                                    l2804 144A  
                                  l2724 1DC2                                    l2716 1DAA  
                                  l2708 1D4A                                    l2660 2336  
                                  l2740 1802                                    l2732 1754  
                                  l3540 103E                                    l3532 102C  
                                  l3524 0FF8                                    l3516 0F78  
                                  l2478 2384                                    l2638 23E6  
                                  l2654 1F18                                    l2646 1EEA  
                                  l2494 2190                                    l2486 2158  
                                  l3294 197E                                    l3286 1926  
                                  l3278 18D6                                    l3366 1392  
                                  l3358 1330                                    l3390 1AF6  
                                  l3382 1A50                                    l3374 1A08  
                                  l3454 1C28                                    l3446 1BC2  
                                  l3438 1BA6                                    l2822 14E2  
                                  l2806 1462                                    l2726 1DC4  
                                  l2718 1DAC                                    l2750 236C  
                                  l2670 1E6E                                    l2742 181E  
                                  l2734 17A8                                    l3550 10BE  
                                  l3542 104A                                    l3534 102E  
                                  l3526 0FFC                                    l3518 0F98  
                                  l2656 1F1C                                    l2648 1EEE  
                                  l2488 2160                                    l3296 199E  
                                  l3288 192E                                    l3368 1398  
                                  l3384 1A60                                    l3376 1A30  
                                  l3456 1C44                                    l3448 1BDA  
                                  l2840 1566                                    l2824 14E6  
                                  l2808 1466                                    l2728 1DCE  
                                  l2760 237E                                    l2752 236E  
                                  l2680 1EA8                                    l2672 1E76  
                                  l2664 1E4C                                    l2744 1862  
                                  l2736 17BC                                    l3552 10E6  
                                  l3544 1056                                    l3536 1030  
                                  l3528 100C                                    l3480 0E8C  
                                  l3472 0E7C                                    l2770 2200  
                                  l2762 21D4                                    l2746 2340  
                                  l2498 23A4                                    l3298 19B0  
                                  l3394 1B26                                    l3386 1A80  
                                  l3378 1A3E                                    l3458 1C50  
                                  l2842 1582                                    l2834 1536  
                                  l2826 1502                                    l2818 14B6  
                                  l2754 2370                                    l2682 1EAA  
                                  l2674 1E84                                    l2666 1E54  
                                  l2658 231A                                    l2738 17C0  
                                  l3554 10FE                                    l3546 1098  
                                  l3538 1032                                    l3490 0EAC  
                                  l3482 0E90                                    l3474 0E80  
                                  l2780 220C                                    l2772 2204  
                                  l2764 21F4                                    l3388 1AA0  
                                  l2836 154A                                    l2828 152E  
                                  l2756 237A                                    l2748 2362  
                                  l2684 1EB0                                    l2676 1E8A  
                                  l2668 1E66                                    l3548 10A4  
                                  l3492 0EB4                                    l3484 0E94  
                                  l3476 0E84                                    l2782 220E  
                                  l2774 2206                                    l2766 21F6  
                                  l3398 1B38                                    l2838 1562  
                                  l2790 13D2                                    l2758 237C  
                                  l2678 1EA0                                    l3494 0EBC  
                                  l3486 0E96                                    l3478 0E88  
                                  ?_pad 0015                                    l2776 2208  
                                  l2768 21FA                                    l2792 140E  
                                  l2784 13CA                                    l3496 0ECE  
                                  l3488 0E9A                                    l2778 220A  
                                  l2794 1412                                    l2698 2212  
                                  l3498 0ED6                                    l2796 142E  
                                  STR_1 0E01                                    STR_2 0E5B  
                                  STR_3 0E44                                    STR_4 0E2A  
                                  STR_5 0E70                                    u2000 1AA0  
                                  u2001 1A9C                                    u2010 1F70  
                                  u2011 1F6C                                    u2020 1BA6  
                                  u2100 1112                            ?_LEDSon_init 0001  
                                  u2021 1BA2                                    u2101 1108  
                                  u1230 217C                                    u2030 1BFC  
                                  u1231 2174                                    u2031 1BF8  
                                  u1080 22DA                                    u1400 1754  
                                  u2120 1136                                    u1081 22D6  
                                  u1401 1750                                    u2121 112E  
                                  u1090 22F0                                    u1250 23B4  
                                  u1410 181E                                    u2050 0F40  
                                  u1091 22EC                                    u1251 23B0  
                                  u1411 181A                                    u2051 0F3C  
                                  u1340 2274                                    u1420 142E  
                                  u2060 100C                                    u1341 2270  
                                  u1421 142A                                    u2061 1008  
                                  u1350 1EEA                                    u1430 1482  
                                  u2118 1116                                    u2070 10D2  
                                  u1351 1EE6                                    u1431 147E  
                                  u2071 10C8                                    u1360 1F18  
                                  u1248 217E                                    u1440 1502  
                          _BAUD4CONbits 000EE9                                    u1361 1F14  
                                  u1441 14FE                                    u1450 1582  
                                  u1370 1E66                                    u2138 113A  
                                  u2090 10FE                                    u1451 157E  
                                  u1371 1E62                                    u2091 10FA  
                                  u2147 10B0                                    u1700 1D02  
                                  u1380 1E84                                    u1701 1CFE  
                                  u2157 2226                                    u1381 1E80  
                                  u1710 2150                                    u1390 1EA0  
                                  u1711 214C                                    u2167 1454  
                                  u1391 1E9C                                    u1800 18B6  
                                  u1720 21AE                                    u2088 10D6  
                                  u1801 18B2                                    u1721 21AA  
                                  u2177 14D4                                    u1730 15C2  
                                  u1810 18E8                                    _T2PR 000FBC  
                                  u1731 15BE                                    u1811 18E4  
                                  u2187 1554                                    u1740 15F4  
                                  u1820 1926                                    u1900 1192  
                                  u1741 15F0                                    u1821 1922  
                                  u1901 118E                                    u2197 1BCE  
                                  u1830 1950                                    u1670 1C92  
                                  u1910 11CE                                    u1751 161E  
                                  u1831 194C                                    u1671 1C8E  
                                  u1911 11CA                                    u1760 1642  
                                  u1840 197E                                    u1680 1CA4  
                                  u1920 11FA                                    u1761 163E  
                                  u1841 197A                                    u1681 1CA0  
                                  u1921 11F6                                    u1770 166C  
                                  u1850 19C6                                    u1690 1CCC  
                                  u1930 1210                                    u1771 1668  
                                  u1851 19C2                                    u1691 1CC8  
                                  u1931 120C                                    u1780 16AC  
                                  u1860 1DE0                                    u1940 134A  
                                  u1781 16A8                                    u1861 1DDC  
                                  u1941 1346                                    u1790 16F6  
                                  u1870 1E36                                    u1950 1368  
                                  u1791 16F2                                    u1871 1E32  
                                  u1951 1364                                    u1960 1382  
                                  u1880 117E                                    u1961 137E  
                                  u1881 1178                                    u1970 1392  
                                  u1890 1180                                    u1971 138E  
                                  u1980 1A30                                    u1981 1A2C  
                                  u1990 1A80                                    u1991 1A7C  
                                  abs@a 0017                                    _dbuf 007D  
                                  _main 0E7C                                    _dtoa 114E  
                                  _prec 0076                                    pad@i 001C  
                                  pad@p 0019                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001E  
                                  fsr2l 000FD9                                    btemp 005B  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0076        clear_read_calibration@clear_read 00BE  
                __end_of_color_read_Red 201E                         __end_of_HighISR 0076  
                  _response_in_progress 007A                            ___param_bank 000000  
                                 ??_abs 0019                                   ??_pad 001B  
                       __end_of___aodiv 1738                                   ?_main 0001  
                                 ?_dtoa 0020                         __end_of___aomod 1A08  
                       __end_of___lwdiv 1EC0                                   i2l151 243E  
                                 i2l160 240C                                   i2l145 22F2  
                                 i2l148 2318                                   i2l157 2434  
                                 i2l507 23E4                                   i2l494 0072  
                          vfpfcnvrt@fmt 0045                 ?_enable_color_interrupt 0001  
                          main@red_read 01CF                 __end_of_sendCharSerial4 23BA  
            __end_of_I2C_2_Master_Start 242C              __end_of_I2C_2_Master_Write 2402  
                                 _flags 007C                                   _fputc 1C80  
                                 _fputs 210E                                   pad@fp 0015  
                                 _width 0074                                   _putch 2440  
                                 main@i 01D7                                   dtoa@d 0022  
                                 dtoa@i 0041                                   dtoa@n 0038  
                                 dtoa@p 0034                                   dtoa@s 0040  
                                 dtoa@w 0036                                   tablat 000FF5  
                                 ttemp5 005C                                   ttemp6 005F  
                                 ttemp7 0063                                   status 000FD8  
                                 wtemp8 005C                         __end_of_sprintf 1FCE  
               __end_of_color_read_Blue 20BE                   _I2C_2_Master_RepStart 240E  
                       ?_color_read_Red 0009                         __initialization 2276  
                          __end_of_main 114E                            __end_of_dtoa 13CA  
        __end_of_enable_color_interrupt 23F6                                  ??_main 00CA  
                                ??_dtoa 002A                           __activetblptr 000003  
                         main@blue_read 01D3                    main@clear_read_check 01CD  
             clear_read_calibration@buf 00BC                            ?_setMotorPWM 0012  
                                ?_fputc 0005                                  ?_fputs 000E  
                                _CCPR1H 000FAA                                  _CCPR2H 000FA6  
                                _CCPR3H 000F25                                  _CCPR4H 000F21  
          collect_avg_readings@red_read 0010                                  ?_putch 0001  
                                _RC0PPS 000E62                                  _RC4REG 000EE3  
                                _RE2PPS 000E74                                  _RD5PPS 000E6F  
                                _RC7PPS 000E69                                  _RD6PPS 000E70  
                                _RE4PPS 000E76                                  i2l3200 006E  
                                i2l3028 23D0                                  i2l2514 22F2  
                                i2l2516 2302                                  i2l3190 0036  
                                i2l3192 0038                                  i2l3184 000A  
                                i2l3194 0050                                  i2l3186 001A  
                                i2l3196 0052                                  i2l3188 002E  
                                i2l3198 006A                                  i2l2690 242C  
                                i2l2692 2430                                  i2l2686 2436  
                                i2l2694 2404                                  i2l2688 243A  
                                i2l2696 2408                                  _RG6PPS 000E88  
                             ??_HighISR 0003                __end_of_color_click_init 2246  
                                _RX4PPS 000E15                                  _TX4REG 000EE4  
                          _CCPTMRS0bits 000FAD                            vfprintf@cfmt 0055  
                             ??___aodiv 0015                               ??___aomod 0015  
                                ___wmul 231A                               ??___lwdiv 000F  
                                clear_0 227C                                  clear_1 2288  
                                isa$std 000001                                  pad@buf 0017  
                                dtoa@fp 0020            __end_of_clear_interrupt_flag 23D0  
                                fputc@c 0005                                  fputs@c 0012  
                                fputs@i 0013                                  fputs@s 000E  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                      ?_sendCharSerial4 0001                                  putch@c 0001  
                      __end_of_vfprintf 1F7C                       ??_initDCmotorsPWM 0005  
                             ??_sprintf 0057                 ?i2_clear_interrupt_flag 0001  
                            __accesstop 0060                 __end_of__initialization 2296  
              __end_of_color_read_Clear 210E                __end_of_color_read_Green 206E  
                ?_I2C_2_Master_RepStart 0001                           ___rparam_used 000001  
                      ?_color_read_Blue 0009                         _Interrupts_init 21D4  
          __end_of_collect_avg_readings 15B0                          __pcstackCOMRAM 0001  
                _clear_read_calibration 1B66              collect_avg_readings@i_1580 001E  
            collect_avg_readings@i_1578 001A              collect_avg_readings@i_1579 001C  
               _set_interrupt_threshold 1EC0                           __end_of_fputc 1D4A  
                         __end_of_fputs 2152                           __end_of_putch 2442  
                        main@clear_read 01D5          __end_ofi2_clear_interrupt_flag 23E6  
                               ??_fputc 0009                                 ??_fputs 0012  
                               ??_putch 0005                              __pbssBANK0 0060  
                            __pbssBANK2 0200                       _color_writetoaddr 2382  
                          _T2CLKCONbits 000FBF                      ?_color_writetoaddr 0007  
                               ?___wmul 0005                     ??_color_writetoaddr 0008  
                               _INT1PPS 000DF1                          main@green_read 01D1  
                               _SP4BRGH 000EE6                                 _SP4BRGL 000EE5  
                               _SSP2ADD 000ED6                                 _SSP2BUF 000ED5  
           set_interrupt_threshold@AIHT 000B             set_interrupt_threshold@AILT 0009  
               __end_of_Interrupts_init 2212                  color_writetoaddr@value 0007  
                      ??_color_read_Red 000B                                 _HighISR 0008  
             __end_of_color_writetoaddr 23A2                    _clear_interrupt_flag 23BA  
                    _I2C_2_Master_Start 2422                              _initUSART4 2362  
                   i2_I2C_2_Master_Idle 22F2                      _I2C_2_Master_Write 23F6  
                               __Hparam 0000                     i2_I2C_2_Master_Stop 242C  
                               __Lparam 0000                       color_read_Red@tmp 000E  
             ??_set_interrupt_threshold 000F                 sendStringSerial4@string 0006  
                               ___aodiv 15B0                                 ___aomod 18A4  
                   ?_I2C_2_Master_Start 0001                                 ___lwdiv 1E4C  
                   ?_I2C_2_Master_Write 0001                               ?_vfprintf 009D  
                          __psmallconst 0E00                                 __pcinit 2276  
                               __ramtop 0E00                                 __ptext0 0E7C  
                               __ptext1 1738                                 __ptext2 231A  
                               __ptext3 1E4C                                 __ptext4 2362  
                               __ptext5 1D4A                                 __ptext6 2212  
                               __ptext7 22A0                                 __ptext8 13CA  
                               __ptext9 1FCE                    ?i2_I2C_2_Master_Idle 0001  
                             _T2CONbits 000FBD                    ?i2_I2C_2_Master_Stop 0001  
                             _T2HLTbits 000FBE                           _RxBufWriteCnt 005A  
                  _collect_avg_readings 13CA                                 main@buf 0100  
                               _sprintf 1F7C                    ??_I2C_2_Master_Start 0006  
                  ??_I2C_2_Master_Write 0006                    end_of_initialization 2296  
        collect_avg_readings@green_read 0012                                 fputc@fp 0007  
                               fputs@fp 0010                       ?_color_click_init 0001  
                 ?_clear_interrupt_flag 0001                      ??_color_click_init 0009  
                         _card_detected 0078                       __end_of_vfpfcnvrt 1B66  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                      vfpfcnvrt@convarg 004B                              ??_vfprintf 0055  
                       _initDCmotorsPWM 1D4A                               _PORTFbits 000F8E  
                    setMotorPWM@negDuty 0017                   ??i2_I2C_2_Master_Idle 0001  
                 ??i2_I2C_2_Master_Stop 0002         __end_of_set_interrupt_threshold 1F28  
                             _TRISAbits 000F81                      setMotorPWM@posDuty 0016  
                             _TRISBbits 000F82                               _TRISCbits 000F83  
                             _TRISDbits 000F84                               _TRISEbits 000F85  
                             _TRISFbits 000F86                               _TRISGbits 000F87  
                             _TRISHbits 000F88                   ?_collect_avg_readings 0010  
                   main@expected_values 0196                color_writetoaddr@address 0008  
               ??_I2C_2_Master_RepStart 0006                        ?_Interrupts_init 0001  
                           _CCP1CONbits 000FAB                       ?_color_read_Clear 0009  
                          _EUSART4RXbuf 0060                            _EUSART4TXbuf 0200  
                           _CCP2CONbits 000FA7                       ?_color_read_Green 0009  
                           _CCP3CONbits 000F26                             ?_initUSART4 0001  
               ?_clear_read_calibration 00BC                             _CCP4CONbits 000F22  
             sendCharSerial4@charToSend 0005                              main@motorL 01D8  
                            main@motorR 01E1                      ??_color_read_Clear 000B  
                    ??_color_read_Green 000B                             vfpfcnvrt@ap 0047  
                           vfpfcnvrt@cp 0053                             vfpfcnvrt@fp 0043  
                        __end_of___wmul 2340                     color_read_Clear@tmp 000E  
                   start_initialization 2276                             __end_of_abs 21D4  
                           __end_of_pad 1E4C                           _TxBufWriteCnt 0058  
                         ??_LEDSon_init 0005                  ??_clear_interrupt_flag 0007  
        __end_of_clear_read_calibration 1C80                     color_read_Green@tmp 000E  
               __end_of_initDCmotorsPWM 1DD2                             vfprintf@fmt 009F  
              ??_enable_color_interrupt 0009                                ??___wmul 0009  
         i2I2C_2_Master_Write@data_byte 0002            __end_ofi2_I2C_2_Master_Start 2440  
          __end_ofi2_I2C_2_Master_Write 240E                             __pbssCOMRAM 0057  
                ??_collect_avg_readings 0016                           __pcstackBANK0 009D  
                         __pcstackBANK1 0100                        ___aodiv@dividend 0005  
               clear_read_calibration@i 00C6                                ?_HighISR 0001  
                   __end_of_LEDSon_init 2362                        ___lwdiv@dividend 000B  
                             _dtoa$2563 0032                               __pintcode 0008  
                              ?___aodiv 0005                                ?___aomod 0005  
                      ___aodiv@quotient 0017                                ?___lwdiv 000B  
                  I2C_2_Master_Read@ack 0007                    I2C_2_Master_Read@tmp 0008  
                           __smallconst 0E00                       _I2C_2_Master_Idle 22CA  
                     _I2C_2_Master_Init 22A0                       _I2C_2_Master_Read 2152  
                     _I2C_2_Master_Stop 2418                            _RxBufReadCnt 0059  
                    ?_I2C_2_Master_Idle 0001                      ?_I2C_2_Master_Init 0001  
                    ?_I2C_2_Master_Read 0001                           ??_setMotorPWM 0014  
                    ?_I2C_2_Master_Stop 0001                        ___lwdiv@quotient 000F  
                              ?_sprintf 00A3            clear_read_calibration@i_1571 00C8  
                     _sendStringSerial4 2246                     ??_I2C_2_Master_Idle 0005  
                   ??_I2C_2_Master_Init 0005                     ??_I2C_2_Master_Read 0006  
    set_interrupt_threshold@persistence 000D                          ___wmul@product 0009  
                              _LATAbits 000F79                     ??_I2C_2_Master_Stop 0006  
                              _LATDbits 000F7C                                _LATFbits 000F7E  
                              _LATGbits 000F7F                                _LATHbits 000F80  
                              _IPR0bits 000E1F                                _PIE0bits 000E29  
                    ?_sendStringSerial4 0006                                _PIE4bits 000E2D  
                              i2u220_47 0042                                i2u221_47 005C  
                              i2u127_40 2302                                i2u127_41 22FE  
                              i2u128_40 2318                                i2u128_41 2314  
                              i2u165_40 001A                                i2u165_41 0016  
                              i2u166_40 002E                                i2u166_41 002A  
                              _PIR0bits 000E33                                _PIR4bits 000E37  
                      ?_initDCmotorsPWM 0001                       ??_sendCharSerial4 0005  
                              _SSP2CON2 000EDA                     ??_sendStringSerial4 0008  
                              _SSP2STAT 000ED8                               _vfpfcnvrt 1A08  
             __end_of_I2C_2_Master_Idle 22F2               __end_of_I2C_2_Master_Init 22CA  
             __end_of_I2C_2_Master_Read 2194                       ___wmul@multiplier 0005  
             __end_of_I2C_2_Master_Stop 2422                ??i2_clear_interrupt_flag 0003  
                          setMotorPWM@m 0012             I2C_2_Master_Write@data_byte 0006  
                     ??_color_read_Blue 000B                            _TxBufReadCnt 0057  
             __end_of_sendStringSerial4 2276                             _LEDSon_init 2340  
         __end_of_I2C_2_Master_RepStart 2418                      color_read_Blue@tmp 000E  
              ?_set_interrupt_threshold 0009                     __end_of_setMotorPWM 18A4  
                          ??_initUSART4 0005                    i2_I2C_2_Master_Start 2436  
                  i2_I2C_2_Master_Write 2402                                __Hrparam 0000  
                            vfprintf@ap 00A1                                __Lrparam 0000  
                            vfprintf@fp 009D             __end_ofi2_I2C_2_Master_Idle 231A  
           __end_ofi2_I2C_2_Master_Stop 2436                              ?_vfpfcnvrt 0043  
                       ___aodiv@divisor 000D                         ___aodiv@counter 0015  
                            _ANSELBbits 000E9A                              _ANSELDbits 000EA7  
                            _ANSELFbits 000EB4                              sprintf@fmt 00A5  
                       ___lwdiv@divisor 000D                      __end_of_initUSART4 2382  
                       ___lwdiv@counter 0011                                __ptext10 201E  
                              __ptext11 206E                                __ptext20 2440  
                              __ptext12 1B66                                __ptext21 2194  
                              __ptext13 1F7C                  _enable_color_interrupt 23E6  
                              __ptext30 21D4                                __ptext22 18A4  
                              __ptext14 1F28                                __ptext31 1EC0  
                              __ptext23 15B0                                __ptext15 1A08  
                              __ptext40 23D0                                __ptext32 23E6  
                              __ptext24 2246                                __ptext16 114E  
                              __ptext41 2402                                __ptext33 2382  
                              __ptext25 23A2                                __ptext17 1DD2  
                              __ptext42 242C                                __ptext34 23BA  
                              __ptext26 20BE                                __ptext18 210E  
                              __ptext43 2436                                __ptext35 23F6  
                              __ptext27 240E                                __ptext19 1C80  
                              __ptext44 22F2                                __ptext36 2418  
                              __ptext28 2152                                __ptext37 2422  
                              __ptext29 2340                                __ptext38 22CA  
                          _SSP2CON1bits 000ED9                            _SSP2CON2bits 000EDA  
                 ?i2_I2C_2_Master_Start 0001                   ?i2_I2C_2_Master_Write 0001  
                              isa$xinst 000000                              _RC4STAbits 000EE7  
                              int$flags 005B                                _vfprintf 1F28  
                      ___aomod@dividend 0005                   collect_avg_readings@i 0018  
                            _INTCONbits 000FF2            _set_interrupt_threshold$2044 000F  
          _set_interrupt_threshold$2045 0010                             _setMotorPWM 1738  
         collect_avg_readings@blue_read 0014                                intlevel2 0000  
                             sprintf@ap 00AF                         ___aomod@divisor 000D  
                           ??_vfpfcnvrt 0049                         ___aomod@counter 0015  
                      _color_click_init 2212                                sprintf@f 00B1  
                              sprintf@s 00A3                              _SSP2DATPPS 000E1D  
                            _SSP2CLKPPS 000E1C                              _TX4STAbits 000EE8  
                          ___aodiv@sign 0016                         _sendCharSerial4 23A2  
                ??i2_I2C_2_Master_Start 0002                  ??i2_I2C_2_Master_Write 0002  
                i2_clear_interrupt_flag 23D0                            ___aomod@sign 0016  
                          main@PWMcycle 01CC  
