

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 03:31:27 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.35
    37                           ; Generated 05/05/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F67K40 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  0000'                    __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for main@F14297
    77  0000' 11                 	db	17
    78  0001' 02                 	db	2
    79  0002' 0C                 	db	12
    80  0003' 0C                 	db	12
    81  0004' 0A                 	db	10
    82  0005' 0B                 	db	11
    83  0006' 0C                 	db	12
    84  0007' 0E                 	db	14
    85  0008' 10                 	db	16
    86  0000                     _LATHbits	set	3968
    87  0000                     _LATGbits	set	3967
    88  0000                     _TRISFbits	set	3974
    89  0000                     _TRISDbits	set	3972
    90  0000                     _TRISGbits	set	3975
    91  0000                     _SSP2CON2bits	set	3802
    92  0000                     _SSP2CLKPPS	set	3612
    93  0000                     _SSP2DATPPS	set	3613
    94  0000                     _RC7PPS	set	3689
    95  0000                     _RE2PPS	set	3700
    96  0000                     _TRISCbits	set	3971
    97  0000                     _TRISEbits	set	3973
    98  0000                     _TRISHbits	set	3976
    99  0000                     _T2PR	set	4028
   100  0000                     _T2CONbits	set	4029
   101  0000                     _CCPR2H	set	4006
   102  0000                     _CCPR1H	set	4010
   103  0000                     _RE4PPS	set	3702
   104  0000                     _RG6PPS	set	3720
   105  0000                     _RD5PPS	set	3695
   106  0000                     _ANSELDbits	set	3751
   107  0000                     _SSP2ADD	set	3798
   108  0000                     _SSP2CON1bits	set	3801
   109  0000                     _CCPR4H	set	3873
   110  0000                     _CCPR3H	set	3877
   111  0000                     _INTCONbits	set	4082
   112  0000                     _T2CLKCONbits	set	4031
   113  0000                     _T2HLTbits	set	4030
   114  0000                     _CCP1CONbits	set	4011
   115  0000                     _CCPTMRS0bits	set	4013
   116  0000                     _CCP2CONbits	set	4007
   117  0000                     _LATAbits	set	3961
   118  0000                     _LATDbits	set	3964
   119  0000                     _CCP3CONbits	set	3878
   120  0000                     _CCP4CONbits	set	3874
   121  0000                     _SSP2CON2	set	3802
   122  0000                     _SSP2STAT	set	3800
   123  0000                     _SSP2BUF	set	3797
   124  0000                     _RD6PPS	set	3696
   125  0000                     _LATFbits	set	3966
   126  0000                     _TRISAbits	set	3969
   127                           
   128                           ; #config settings
   129                           
   130                           	psect	cinit
   131  0000'                    __pcinit:
   132                           	callstack 0
   133  0000'                    start_initialization:
   134                           	callstack 0
   135  0000'                    __initialization:
   136                           	callstack 0
   137                           
   138                           ; Initialize objects allocated to COMRAM (9 bytes)
   139                           ; load TBLPTR registers with __pidataCOMRAM
   140  0000' 0E00'              	movlw	low __pidataCOMRAM
   141  0002' 6EF6               	movwf	tblptrl,c
   142  0004' 0E00'              	movlw	high __pidataCOMRAM
   143  0006' 6EF7               	movwf	tblptrh,c
   144  0008' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   145  000A' 6EF8               	movwf	tblptru,c
   146  000C' EE00' F000'        	lfsr	0,__pdataCOMRAM
   147  0010' EE10 F009          	lfsr	1,9
   148  0014'                    copy_data0:
   149  0014' 0009               	tblrd		*+
   150  0016' CFF5 FFEE          	movff	tablat,postinc0
   151  001A' 50E5               	movf	postdec1,w,c
   152  001C' 50E1               	movf	fsr1l,w,c
   153  001E' E1FA               	bnz	copy_data0
   154  0020'                    end_of_initialization:
   155                           	callstack 0
   156  0020'                    __end_of__initialization:
   157                           	callstack 0
   158  0020' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   159  0022' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   160  0024' 0100               	movlb	0
   161  0026' EF00' F000'        	goto	_main	;jump to C main() function
   162                           
   163                           	psect	dataCOMRAM
   164  0000'                    __pdataCOMRAM:
   165                           	callstack 0
   166  0000'                    main@F14297:
   167                           	callstack 0
   168  0000'                    	ds	9
   169                           
   170                           	psect	cstackCOMRAM
   171  0000'                    __pcstackCOMRAM:
   172                           	callstack 0
   173  0000'                    ??i2_I2C_2_Master_Idle:
   174  0000'                    
   175                           ; 2 bytes @ 0x0
   176  0000'                    	ds	1
   177  0001'                    ??_I2C_2_Master_Read:
   178  0001'                    i2I2C_2_Master_Write@data_byte:
   179                           	callstack 0
   180                           
   181                           ; 1 bytes @ 0x1
   182  0001'                    	ds	1
   183  0002'                    I2C_2_Master_Read@ack:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x2
   187  0002'                    	ds	1
   188  0003'                    I2C_2_Master_Read@tmp:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x3
   192  0003'                    	ds	1
   193  0004'                    ?_read_interrupt_status:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x4
   197  0004'                    	ds	2
   198  0006'                    ??_read_interrupt_status:
   199                           
   200                           ; 1 bytes @ 0x6
   201  0006'                    	ds	1
   202  0007'                    read_interrupt_status@status:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x7
   206  0007'                    	ds	2
   207  0009'                    ??_I2C_2_Master_Idle:
   208  0009'                    ?___wmul:
   209                           	callstack 0
   210  0009'                    ___wmul@multiplier:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x9
   214  0009'                    	ds	1
   215  000A'                    I2C_2_Master_Write@data_byte:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0xA
   219  000A'                    	ds	1
   220  000B'                    color_writetoaddr@value:
   221                           	callstack 0
   222  000B'                    ___wmul@multiplicand:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0xB
   226  000B'                    	ds	1
   227  000C'                    color_writetoaddr@address:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0xC
   231  000C'                    	ds	1
   232  000D'                    ??_color_click_init:
   233  000D'                    ___wmul@product:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0xD
   237  000D'                    	ds	2
   238  000F'                    ?___lwdiv:
   239                           	callstack 0
   240  000F'                    ___lwdiv@dividend:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0xF
   244  000F'                    	ds	2
   245  0011'                    ___lwdiv@divisor:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x11
   249  0011'                    	ds	2
   250  0013'                    ___lwdiv@quotient:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x13
   254  0013'                    	ds	2
   255  0015'                    ___lwdiv@counter:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x15
   259  0015'                    	ds	1
   260  0016'                    setMotorPWM@m:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x16
   264  0016'                    	ds	2
   265  0018'                    ??_setMotorPWM:
   266                           
   267                           ; 1 bytes @ 0x18
   268  0018'                    	ds	2
   269  001A'                    setMotorPWM@posDuty:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x1A
   273  001A'                    	ds	1
   274  001B'                    setMotorPWM@negDuty:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x1B
   278  001B'                    	ds	1
   279  001C'                    main@master_closeness:
   280                           	callstack 0
   281                           
   282                           ; 9 bytes @ 0x1C
   283  001C'                    	ds	9
   284  0025'                    main@PWMcycle:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x25
   288  0025'                    	ds	1
   289  0026'                    main@motorL:
   290                           	callstack 0
   291                           
   292                           ; 9 bytes @ 0x26
   293  0026'                    	ds	9
   294  002F'                    main@motorR:
   295                           	callstack 0
   296                           
   297                           ; 9 bytes @ 0x2F
   298  002F'                    	ds	9
   299                           
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 18 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  test            2    0        unsigned int 
   310 ;;  normalised_v   24    0        unsigned char [3][8]
   311 ;;  expected_val   24    0        unsigned char [3][8]
   312 ;;  motorR          9   47[COMRAM] struct DC_motor
   313 ;;  motorL          9   38[COMRAM] struct DC_motor
   314 ;;  master_close    9   28[COMRAM] unsigned char [9]
   315 ;;  PWMcycle        1   37[COMRAM] unsigned char 
   316 ;;  blue_read       1    0        unsigned char 
   317 ;;  green_read      1    0        unsigned char 
   318 ;;  red_read        1    0        unsigned char 
   319 ;;  card            1    0        enum E14256
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   330 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   332 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   333 ;;Total ram usage:       28 bytes
   334 ;; Hardware stack levels required when called: 8
   335 ;; This function calls:
   336 ;;		_I2C_2_Master_Init
   337 ;;		_LEDSon_init
   338 ;;		_color_click_init
   339 ;;		_colour_read_Red
   340 ;;		_initDCmotorsPWM
   341 ;;		_setMotorPWM
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text0
   348  0000'                    __ptext0:
   349                           	callstack 0
   350  0000'                    _main:
   351                           	callstack 23
   352  0000'                    
   353                           ;main.c: 23:     LEDSon_init();
   354  0000' EC00' F000'        	call	_LEDSon_init	;wreg free
   355  0004'                    
   356                           ;main.c: 24:     I2C_2_Master_Init();
   357  0004' EC00' F000'        	call	_I2C_2_Master_Init	;wreg free
   358  0008'                    
   359                           ;main.c: 25:     color_click_init();
   360  0008' EC00' F000'        	call	_color_click_init	;wreg free
   361  000C'                    
   362                           ;main.c: 26:     initDCmotorsPWM();
   363  000C' EC00' F000'        	call	_initDCmotorsPWM	;wreg free
   364  0010'                    
   365                           ;main.c: 34:     unsigned char PWMcycle = T2PR;
   366  0010' CFBC F025'         	movff	4028,main@PWMcycle	;volatile
   367  0014'                    
   368                           ;main.c: 36:     struct DC_motor motorL, motorR;;main.c: 38:     motorL.power=0;
   369  0014' 0E00               	movlw	0
   370  0016' 6E00'              	movwf	main@motorL^0,c
   371  0018'                    
   372                           ;main.c: 39:     motorL.direction=1;
   373  0018' 0E01               	movlw	1
   374  001A' 6E00'              	movwf	(main@motorL+1)^0,c
   375  001C'                    
   376                           ;main.c: 40:     motorL.brakemode=1;
   377  001C' 0E01               	movlw	1
   378  001E' 6E00'              	movwf	(main@motorL+2)^0,c
   379  0020'                    
   380                           ;main.c: 41:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   381  0020' 0EAA               	movlw	170
   382  0022' 6E00'              	movwf	(main@motorL+5)^0,c
   383  0024' 0E0F               	movlw	15
   384  0026' 6E00'              	movwf	(main@motorL+6)^0,c
   385  0028'                    
   386                           ;main.c: 42:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   387  0028' 0EA6               	movlw	166
   388  002A' 6E00'              	movwf	(main@motorL+7)^0,c
   389  002C' 0E0F               	movlw	15
   390  002E' 6E00'              	movwf	(main@motorL+8)^0,c
   391  0030'                    
   392                           ;main.c: 43:     motorL.PWMperiod=PWMcycle;
   393  0030' C025' F029'        	movff	main@PWMcycle,main@motorL+3
   394  0034' 6A00'              	clrf	(main@motorL+4)^0,c
   395  0036'                    
   396                           ;main.c: 45:     motorR.power=0;
   397  0036' 0E00               	movlw	0
   398  0038' 6E00'              	movwf	main@motorR^0,c
   399  003A'                    
   400                           ;main.c: 46:     motorR.direction=1;
   401  003A' 0E01               	movlw	1
   402  003C' 6E00'              	movwf	(main@motorR+1)^0,c
   403  003E'                    
   404                           ;main.c: 47:     motorR.brakemode=1;
   405  003E' 0E01               	movlw	1
   406  0040' 6E00'              	movwf	(main@motorR+2)^0,c
   407                           
   408                           ;main.c: 48:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   409  0042' 0E25               	movlw	37
   410  0044' 6E00'              	movwf	(main@motorR+5)^0,c
   411  0046' 0E0F               	movlw	15
   412  0048' 6E00'              	movwf	(main@motorR+6)^0,c
   413                           
   414                           ;main.c: 49:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   415  004A' 0E21               	movlw	33
   416  004C' 6E00'              	movwf	(main@motorR+7)^0,c
   417  004E' 0E0F               	movlw	15
   418  0050' 6E00'              	movwf	(main@motorR+8)^0,c
   419  0052'                    
   420                           ;main.c: 50:     motorR.PWMperiod=PWMcycle;
   421  0052' C025' F032'        	movff	main@PWMcycle,main@motorR+3
   422  0056' 6A00'              	clrf	(main@motorR+4)^0,c
   423  0058'                    
   424                           ;main.c: 52:     setMotorPWM(&motorL);
   425  0058' 0E00'              	movlw	low main@motorL
   426  005A' 6E00'              	movwf	setMotorPWM@m^0,c
   427  005C' 0E00'              	movlw	high main@motorL
   428  005E' 6E00'              	movwf	(setMotorPWM@m+1)^0,c
   429  0060' EC00' F000'        	call	_setMotorPWM	;wreg free
   430  0064'                    
   431                           ;main.c: 53:     setMotorPWM(&motorR);
   432  0064' 0E00'              	movlw	low main@motorR
   433  0066' 6E00'              	movwf	setMotorPWM@m^0,c
   434  0068' 0E00'              	movlw	high main@motorR
   435  006A' 6E00'              	movwf	(setMotorPWM@m+1)^0,c
   436  006C' EC00' F000'        	call	_setMotorPWM	;wreg free
   437  0070'                    
   438                           ;main.c: 59:     unsigned char expected_values[8][3];;main.c: 60:     unsigned char norm
      +                          alised_values[8][3];;main.c: 61:     unsigned char master_closeness[9] = {17, 2, 12, 12,
      +                           10, 11, 12, 14, 16};
   439  0070' EE20' F000'        	lfsr	2,main@F14297
   440  0074' EE10' F000'        	lfsr	1,main@master_closeness
   441  0078' 0E08               	movlw	8
   442  007A'                    u341:
   443  007A' CFDB FFE3          	movff	plusw2,plusw1
   444  007E' 06E8               	decf	wreg,f,c
   445  0080' E2FC               	bc	u341
   446  0082'                    
   447                           ;main.c: 111:     LATDbits.LATD7=1;
   448  0082' 8E7C               	bsf	124,7,c	;volatile
   449  0084'                    
   450                           ;main.c: 112:     TRISDbits.TRISD7=0;
   451  0084' 9E84               	bcf	132,7,c	;volatile
   452  0086'                    l1538:
   453  0086' EC00' F000'        	call	_colour_read_Red	;wreg free
   454  008A' EF00' F000'        	goto	l1538
   455  008E' EF00' F000'        	goto	start
   456  0092'                    __end_of_main:
   457                           	callstack 0
   458                           
   459 ;; *************** function _setMotorPWM *****************
   460 ;; Defined at:
   461 ;;		line 61 in file "dc_motor.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  m               2   22[COMRAM] PTR struct DC_motor
   464 ;;		 -> main@motorR(9), main@motorL(9), 
   465 ;; Auto vars:     Size  Location     Type
   466 ;;  negDuty         1   27[COMRAM] unsigned char 
   467 ;;  posDuty         1   26[COMRAM] unsigned char 
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   480 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   481 ;;Total ram usage:        6 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; Hardware stack levels required when called: 5
   484 ;; This function calls:
   485 ;;		___lwdiv
   486 ;;		___wmul
   487 ;; This function is called by:
   488 ;;		_main
   489 ;;		_stop
   490 ;;		_turnLeft45
   491 ;;		_turnRight45
   492 ;;		_fullSpeedAhead
   493 ;;		_reverseFullSpeed
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text1
   498  0000'                    __ptext1:
   499                           	callstack 0
   500  0000'                    _setMotorPWM:
   501                           	callstack 25
   502  0000'                    
   503                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
   504  0000' EE20 F002          	lfsr	2,2
   505  0004' 5000'              	movf	setMotorPWM@m^0,w,c
   506  0006' 26D9               	addwf	fsr2l,f,c
   507  0008' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   508  000A' 22DA               	addwfc	fsr2h,f,c
   509  000C' 50DF               	movf	indf2,w,c
   510  000E' B4D8               	btfsc	status,2,c
   511  0010' EF00' F000'        	goto	u261
   512  0014' EF00' F000'        	goto	u260
   513  0018'                    u261:
   514  0018' EF00' F000'        	goto	l1398
   515  001C'                    u260:
   516  001C'                    
   517                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
   518  001C' C016' FFD9         	movff	setMotorPWM@m,fsr2l
   519  0020' C017' FFDA         	movff	setMotorPWM@m+1,fsr2h
   520  0024' 50DF               	movf	indf2,w,c
   521  0026' 6E00'              	movwf	??_setMotorPWM^0,c
   522  0028' 5000'              	movf	??_setMotorPWM^0,w,c
   523  002A' 6E00'              	movwf	___wmul@multiplier^0,c
   524  002C' 6A00'              	clrf	(___wmul@multiplier+1)^0,c
   525  002E' EE20 F003          	lfsr	2,3
   526  0032' 5000'              	movf	setMotorPWM@m^0,w,c
   527  0034' 26D9               	addwf	fsr2l,f,c
   528  0036' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   529  0038' 22DA               	addwfc	fsr2h,f,c
   530  003A' CFDE F00B'         	movff	postinc2,___wmul@multiplicand
   531  003E' CFDD F00C'         	movff	postdec2,___wmul@multiplicand+1
   532  0042' EC00' F000'        	call	___wmul	;wreg free
   533  0046' C009' F00F'        	movff	?___wmul,___lwdiv@dividend
   534  004A' C00A' F010'        	movff	?___wmul+1,___lwdiv@dividend+1
   535  004E' 0E00               	movlw	0
   536  0050' 6E00'              	movwf	(___lwdiv@divisor+1)^0,c
   537  0052' 0E64               	movlw	100
   538  0054' 6E00'              	movwf	___lwdiv@divisor^0,c
   539  0056' EC00' F000'        	call	___lwdiv	;wreg free
   540  005A' EE20 F003          	lfsr	2,3
   541  005E' 5000'              	movf	setMotorPWM@m^0,w,c
   542  0060' 26D9               	addwf	fsr2l,f,c
   543  0062' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   544  0064' 22DA               	addwfc	fsr2h,f,c
   545  0066' 50DF               	movf	indf2,w,c
   546  0068' 6E00'              	movwf	(??_setMotorPWM+1)^0,c
   547  006A' 5000'              	movf	?___lwdiv^0,w,c
   548  006C' 5C00'              	subwf	(??_setMotorPWM+1)^0,w,c
   549  006E' 6E00'              	movwf	setMotorPWM@posDuty^0,c
   550  0070'                    
   551                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
   552  0070' EE20 F003          	lfsr	2,3
   553  0074' 5000'              	movf	setMotorPWM@m^0,w,c
   554  0076' 26D9               	addwf	fsr2l,f,c
   555  0078' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   556  007A' 22DA               	addwfc	fsr2h,f,c
   557  007C' 50DF               	movf	indf2,w,c
   558  007E' 6E00'              	movwf	setMotorPWM@negDuty^0,c
   559                           
   560                           ;dc_motor.c: 68:     }
   561  0080' EF00' F000'        	goto	l1402
   562  0084'                    l1398:
   563                           
   564                           ;dc_motor.c: 70:         posDuty=0;
   565  0084' 0E00               	movlw	0
   566  0086' 6E00'              	movwf	setMotorPWM@posDuty^0,c
   567  0088'                    
   568                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
   569  0088' C016' FFD9         	movff	setMotorPWM@m,fsr2l
   570  008C' C017' FFDA         	movff	setMotorPWM@m+1,fsr2h
   571  0090' 50DF               	movf	indf2,w,c
   572  0092' 6E00'              	movwf	??_setMotorPWM^0,c
   573  0094' 5000'              	movf	??_setMotorPWM^0,w,c
   574  0096' 6E00'              	movwf	___wmul@multiplier^0,c
   575  0098' 6A00'              	clrf	(___wmul@multiplier+1)^0,c
   576  009A' EE20 F003          	lfsr	2,3
   577  009E' 5000'              	movf	setMotorPWM@m^0,w,c
   578  00A0' 26D9               	addwf	fsr2l,f,c
   579  00A2' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   580  00A4' 22DA               	addwfc	fsr2h,f,c
   581  00A6' CFDE F00B'         	movff	postinc2,___wmul@multiplicand
   582  00AA' CFDD F00C'         	movff	postdec2,___wmul@multiplicand+1
   583  00AE' EC00' F000'        	call	___wmul	;wreg free
   584  00B2' C009' F00F'        	movff	?___wmul,___lwdiv@dividend
   585  00B6' C00A' F010'        	movff	?___wmul+1,___lwdiv@dividend+1
   586  00BA' 0E00               	movlw	0
   587  00BC' 6E00'              	movwf	(___lwdiv@divisor+1)^0,c
   588  00BE' 0E64               	movlw	100
   589  00C0' 6E00'              	movwf	___lwdiv@divisor^0,c
   590  00C2' EC00' F000'        	call	___lwdiv	;wreg free
   591  00C6' 5000'              	movf	?___lwdiv^0,w,c
   592  00C8' 6E00'              	movwf	setMotorPWM@negDuty^0,c
   593  00CA'                    l1402:
   594                           
   595                           ;dc_motor.c: 74:     if (m->direction) {
   596  00CA' EE20 F001          	lfsr	2,1
   597  00CE' 5000'              	movf	setMotorPWM@m^0,w,c
   598  00D0' 26D9               	addwf	fsr2l,f,c
   599  00D2' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   600  00D4' 22DA               	addwfc	fsr2h,f,c
   601  00D6' 50DF               	movf	indf2,w,c
   602  00D8' B4D8               	btfsc	status,2,c
   603  00DA' EF00' F000'        	goto	u271
   604  00DE' EF00' F000'        	goto	u270
   605  00E2'                    u271:
   606  00E2' EF00' F000'        	goto	l1406
   607  00E6'                    u270:
   608  00E6'                    
   609                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
   610  00E6' EE20 F005          	lfsr	2,5
   611  00EA' 5000'              	movf	setMotorPWM@m^0,w,c
   612  00EC' 26D9               	addwf	fsr2l,f,c
   613  00EE' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   614  00F0' 22DA               	addwfc	fsr2h,f,c
   615  00F2' CFDE F018'         	movff	postinc2,??_setMotorPWM
   616  00F6' CFDD F019'         	movff	postdec2,??_setMotorPWM+1
   617  00FA' C018' FFD9         	movff	??_setMotorPWM,fsr2l
   618  00FE' C019' FFDA         	movff	??_setMotorPWM+1,fsr2h
   619  0102' C01A' FFDF         	movff	setMotorPWM@posDuty,indf2
   620                           
   621                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
   622  0106' EE20 F007          	lfsr	2,7
   623  010A' 5000'              	movf	setMotorPWM@m^0,w,c
   624  010C' 26D9               	addwf	fsr2l,f,c
   625  010E' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   626  0110' 22DA               	addwfc	fsr2h,f,c
   627  0112' CFDE F018'         	movff	postinc2,??_setMotorPWM
   628  0116' CFDD F019'         	movff	postdec2,??_setMotorPWM+1
   629  011A' C018' FFD9         	movff	??_setMotorPWM,fsr2l
   630  011E' C019' FFDA         	movff	??_setMotorPWM+1,fsr2h
   631  0122' C01B' FFDF         	movff	setMotorPWM@negDuty,indf2
   632                           
   633                           ;dc_motor.c: 77:     } else {
   634  0126' EF00' F000'        	goto	l95
   635  012A'                    l1406:
   636                           
   637                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
   638  012A' EE20 F005          	lfsr	2,5
   639  012E' 5000'              	movf	setMotorPWM@m^0,w,c
   640  0130' 26D9               	addwf	fsr2l,f,c
   641  0132' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   642  0134' 22DA               	addwfc	fsr2h,f,c
   643  0136' CFDE F018'         	movff	postinc2,??_setMotorPWM
   644  013A' CFDD F019'         	movff	postdec2,??_setMotorPWM+1
   645  013E' C018' FFD9         	movff	??_setMotorPWM,fsr2l
   646  0142' C019' FFDA         	movff	??_setMotorPWM+1,fsr2h
   647  0146' C01B' FFDF         	movff	setMotorPWM@negDuty,indf2
   648                           
   649                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
   650  014A' EE20 F007          	lfsr	2,7
   651  014E' 5000'              	movf	setMotorPWM@m^0,w,c
   652  0150' 26D9               	addwf	fsr2l,f,c
   653  0152' 5000'              	movf	(setMotorPWM@m+1)^0,w,c
   654  0154' 22DA               	addwfc	fsr2h,f,c
   655  0156' CFDE F018'         	movff	postinc2,??_setMotorPWM
   656  015A' CFDD F019'         	movff	postdec2,??_setMotorPWM+1
   657  015E' C018' FFD9         	movff	??_setMotorPWM,fsr2l
   658  0162' C019' FFDA         	movff	??_setMotorPWM+1,fsr2h
   659  0166' C01A' FFDF         	movff	setMotorPWM@posDuty,indf2
   660  016A'                    l95:
   661  016A' 0012               	return		;funcret
   662  016C'                    __end_of_setMotorPWM:
   663                           	callstack 0
   664                           
   665 ;; *************** function ___wmul *****************
   666 ;; Defined at:
   667 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  multiplier      2    9[COMRAM] unsigned int 
   670 ;;  multiplicand    2   11[COMRAM] unsigned int 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  product         2   13[COMRAM] unsigned int 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  2    9[COMRAM] unsigned int 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0, prodl, prodh
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   686 ;;Total ram usage:        6 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 4
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_setMotorPWM
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text2
   697  0000'                    __ptext2:
   698                           	callstack 0
   699  0000'                    ___wmul:
   700                           	callstack 25
   701  0000' 5000'              	movf	___wmul@multiplier^0,w,c
   702  0002' 0200'              	mulwf	___wmul@multiplicand^0,c
   703  0004' CFF3 F00D'         	movff	prodl,___wmul@product
   704  0008' CFF4 F00E'         	movff	prodh,___wmul@product+1
   705  000C' 5000'              	movf	___wmul@multiplier^0,w,c
   706  000E' 0200'              	mulwf	(___wmul@multiplicand+1)^0,c
   707  0010' 50F3               	movf	243,w,c
   708  0012' 2600'              	addwf	(___wmul@product+1)^0,f,c
   709  0014' 5000'              	movf	(___wmul@multiplier+1)^0,w,c
   710  0016' 0200'              	mulwf	___wmul@multiplicand^0,c
   711  0018' 50F3               	movf	243,w,c
   712  001A' 2600'              	addwf	(___wmul@product+1)^0,f,c
   713  001C' C00D' F009'        	movff	___wmul@product,?___wmul
   714  0020' C00E' F00A'        	movff	___wmul@product+1,?___wmul+1
   715  0024' 0012               	return		;funcret
   716  0026'                    __end_of___wmul:
   717                           	callstack 0
   718                           
   719 ;; *************** function ___lwdiv *****************
   720 ;; Defined at:
   721 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  dividend        2   15[COMRAM] unsigned int 
   724 ;;  divisor         2   17[COMRAM] unsigned int 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  quotient        2   19[COMRAM] unsigned int 
   727 ;;  counter         1   21[COMRAM] unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  2   15[COMRAM] unsigned int 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   738 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   740 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   741 ;;Total ram usage:        7 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 4
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_setMotorPWM
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text3
   752  0000'                    __ptext3:
   753                           	callstack 0
   754  0000'                    ___lwdiv:
   755                           	callstack 25
   756  0000' 0E00               	movlw	0
   757  0002' 6E00'              	movwf	(___lwdiv@quotient+1)^0,c
   758  0004' 0E00               	movlw	0
   759  0006' 6E00'              	movwf	___lwdiv@quotient^0,c
   760  0008' 5000'              	movf	___lwdiv@divisor^0,w,c
   761  000A' 1000'              	iorwf	(___lwdiv@divisor+1)^0,w,c
   762  000C' B4D8               	btfsc	status,2,c
   763  000E' EF00' F000'        	goto	u231
   764  0012' EF00' F000'        	goto	u230
   765  0016'                    u231:
   766  0016' EF00' F000'        	goto	l762
   767  001A'                    u230:
   768  001A' 0E01               	movlw	1
   769  001C' 6E00'              	movwf	___lwdiv@counter^0,c
   770  001E' EF00' F000'        	goto	l1328
   771  0022'                    l1326:
   772  0022' 90D8               	bcf	status,0,c
   773  0024' 3600'              	rlcf	___lwdiv@divisor^0,f,c
   774  0026' 3600'              	rlcf	(___lwdiv@divisor+1)^0,f,c
   775  0028' 2A00'              	incf	___lwdiv@counter^0,f,c
   776  002A'                    l1328:
   777  002A' AE00'              	btfss	(___lwdiv@divisor+1)^0,7,c
   778  002C' EF00' F000'        	goto	u241
   779  0030' EF00' F000'        	goto	u240
   780  0034'                    u241:
   781  0034' EF00' F000'        	goto	l1326
   782  0038'                    u240:
   783  0038'                    l1330:
   784  0038' 90D8               	bcf	status,0,c
   785  003A' 3600'              	rlcf	___lwdiv@quotient^0,f,c
   786  003C' 3600'              	rlcf	(___lwdiv@quotient+1)^0,f,c
   787  003E' 5000'              	movf	___lwdiv@divisor^0,w,c
   788  0040' 5C00'              	subwf	___lwdiv@dividend^0,w,c
   789  0042' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
   790  0044' 5800'              	subwfb	(___lwdiv@dividend+1)^0,w,c
   791  0046' A0D8               	btfss	status,0,c
   792  0048' EF00' F000'        	goto	u251
   793  004C' EF00' F000'        	goto	u250
   794  0050'                    u251:
   795  0050' EF00' F000'        	goto	l1338
   796  0054'                    u250:
   797  0054' 5000'              	movf	___lwdiv@divisor^0,w,c
   798  0056' 5E00'              	subwf	___lwdiv@dividend^0,f,c
   799  0058' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
   800  005A' 5A00'              	subwfb	(___lwdiv@dividend+1)^0,f,c
   801  005C' 8000'              	bsf	___lwdiv@quotient^0,0,c
   802  005E'                    l1338:
   803  005E' 90D8               	bcf	status,0,c
   804  0060' 3200'              	rrcf	(___lwdiv@divisor+1)^0,f,c
   805  0062' 3200'              	rrcf	___lwdiv@divisor^0,f,c
   806  0064' 2E00'              	decfsz	___lwdiv@counter^0,f,c
   807  0066' EF00' F000'        	goto	l1330
   808  006A'                    l762:
   809  006A' C013' F00F'        	movff	___lwdiv@quotient,?___lwdiv
   810  006E' C014' F010'        	movff	___lwdiv@quotient+1,?___lwdiv+1
   811  0072' 0012               	return		;funcret
   812  0074'                    __end_of___lwdiv:
   813                           	callstack 0
   814                           
   815 ;; *************** function _initDCmotorsPWM *****************
   816 ;; Defined at:
   817 ;;		line 6 in file "dc_motor.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; Hardware stack levels required when called: 4
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text4
   846  0000'                    __ptext4:
   847                           	callstack 0
   848  0000'                    _initDCmotorsPWM:
   849                           	callstack 26
   850  0000'                    
   851                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
   852  0000' 9485               	bcf	133,2,c	;volatile
   853                           
   854                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
   855  0002' 9885               	bcf	133,4,c	;volatile
   856                           
   857                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
   858  0004' 9E83               	bcf	131,7,c	;volatile
   859                           
   860                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
   861  0006' 9C87               	bcf	135,6,c	;volatile
   862  0008'                    
   863                           ;dc_motor.c: 14:     RE2PPS=0x05;
   864  0008' 0E05               	movlw	5
   865  000A' 010E               	movlb	14	; () banked
   866  000C' 6F74               	movwf	116,b	;volatile
   867                           
   868                           ;dc_motor.c: 15:     RE4PPS=0x06;
   869  000E' 0E06               	movlw	6
   870  0010' 6F76               	movwf	118,b	;volatile
   871                           
   872                           ;dc_motor.c: 16:     RC7PPS=0x07;
   873  0012' 0E07               	movlw	7
   874  0014' 6F69               	movwf	105,b	;volatile
   875                           
   876                           ;dc_motor.c: 17:     RG6PPS=0x08;
   877  0016' 0E08               	movlw	8
   878  0018' 6F88               	movwf	136,b	;volatile
   879                           
   880                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
   881  001A' 50BD               	movf	189,w,c	;volatile
   882  001C' 0B8F               	andlw	-113
   883  001E' 0940               	iorlw	64
   884  0020' 6EBD               	movwf	189,c	;volatile
   885                           
   886                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
   887  0022' 0EE0               	movlw	-32
   888  0024' 16BE               	andwf	190,f,c	;volatile
   889                           
   890                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
   891  0026' 50BF               	movf	191,w,c	;volatile
   892  0028' 0BF0               	andlw	-16
   893  002A' 0901               	iorlw	1
   894  002C' 6EBF               	movwf	191,c	;volatile
   895                           
   896                           ;dc_motor.c: 26:     T2PR=99;
   897  002E' 0E63               	movlw	99
   898  0030' 6EBC               	movwf	188,c	;volatile
   899  0032'                    
   900                           ; BSR set to: 14
   901                           ;dc_motor.c: 27:     T2CONbits.ON=1;
   902  0032' 8EBD               	bsf	189,7,c	;volatile
   903                           
   904                           ;dc_motor.c: 31:     CCPR1H=0;
   905  0034' 0E00               	movlw	0
   906  0036' 6EAA               	movwf	170,c	;volatile
   907                           
   908                           ;dc_motor.c: 32:     CCPR2H=0;
   909  0038' 0E00               	movlw	0
   910  003A' 6EA6               	movwf	166,c	;volatile
   911                           
   912                           ;dc_motor.c: 33:     CCPR3H=0;
   913  003C' 0E00               	movlw	0
   914  003E' 010F               	movlb	15	; () banked
   915  0040' 6F25               	movwf	37,b	;volatile
   916                           
   917                           ;dc_motor.c: 34:     CCPR4H=0;
   918  0042' 0E00               	movlw	0
   919  0044' 6F21               	movwf	33,b	;volatile
   920                           
   921                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
   922  0046' 0EFC               	movlw	-4
   923  0048' 16AD               	andwf	173,f,c	;volatile
   924                           
   925                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
   926  004A' 0EF3               	movlw	-13
   927  004C' 16AD               	andwf	173,f,c	;volatile
   928                           
   929                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
   930  004E' 0ECF               	movlw	-49
   931  0050' 16AD               	andwf	173,f,c	;volatile
   932                           
   933                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
   934  0052' 0E3F               	movlw	-193
   935  0054' 16AD               	andwf	173,f,c	;volatile
   936  0056'                    
   937                           ; BSR set to: 15
   938                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
   939  0056' 88AB               	bsf	171,4,c	;volatile
   940                           
   941                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
   942  0058' 50AB               	movf	171,w,c	;volatile
   943  005A' 0BF0               	andlw	-16
   944  005C' 090C               	iorlw	12
   945  005E' 6EAB               	movwf	171,c	;volatile
   946  0060'                    
   947                           ; BSR set to: 15
   948                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
   949  0060' 8EAB               	bsf	171,7,c	;volatile
   950  0062'                    
   951                           ; BSR set to: 15
   952                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
   953  0062' 88A7               	bsf	167,4,c	;volatile
   954                           
   955                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
   956  0064' 50A7               	movf	167,w,c	;volatile
   957  0066' 0BF0               	andlw	-16
   958  0068' 090C               	iorlw	12
   959  006A' 6EA7               	movwf	167,c	;volatile
   960  006C'                    
   961                           ; BSR set to: 15
   962                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
   963  006C' 8EA7               	bsf	167,7,c	;volatile
   964  006E'                    
   965                           ; BSR set to: 15
   966                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
   967  006E' 8926               	bsf	38,4,b	;volatile
   968                           
   969                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
   970  0070' 5126               	movf	38,w,b	;volatile
   971  0072' 0BF0               	andlw	-16
   972  0074' 090C               	iorlw	12
   973  0076' 6F26               	movwf	38,b	;volatile
   974  0078'                    
   975                           ; BSR set to: 15
   976                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
   977  0078' 8F26               	bsf	38,7,b	;volatile
   978  007A'                    
   979                           ; BSR set to: 15
   980                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
   981  007A' 8922               	bsf	34,4,b	;volatile
   982                           
   983                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
   984  007C' 5122               	movf	34,w,b	;volatile
   985  007E' 0BF0               	andlw	-16
   986  0080' 090C               	iorlw	12
   987  0082' 6F22               	movwf	34,b	;volatile
   988  0084'                    
   989                           ; BSR set to: 15
   990                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
   991  0084' 8F22               	bsf	34,7,b	;volatile
   992  0086'                    
   993                           ; BSR set to: 15
   994  0086' 0012               	return		;funcret
   995  0088'                    __end_of_initDCmotorsPWM:
   996                           	callstack 0
   997                           
   998 ;; *************** function _color_click_init *****************
   999 ;; Defined at:
  1000 ;;		line 5 in file "color.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;Total ram usage:        1 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 7
  1021 ;; This function calls:
  1022 ;;		_I2C_2_Master_Init
  1023 ;;		_color_writetoaddr
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text5
  1030  0000'                    __ptext5:
  1031                           	callstack 0
  1032  0000'                    _color_click_init:
  1033                           	callstack 23
  1034  0000'                    
  1035                           ;color.c: 8:     I2C_2_Master_Init();
  1036  0000' EC00' F000'        	call	_I2C_2_Master_Init	;wreg free
  1037  0004'                    
  1038                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1039  0004' 0E01               	movlw	1
  1040  0006' 6E00'              	movwf	color_writetoaddr@value^0,c
  1041  0008' 0E00               	movlw	0
  1042  000A' EC00' F000'        	call	_color_writetoaddr
  1043  000E'                    
  1044                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1045  000E' 0E3F               	movlw	63
  1046  0010' 6E00'              	movwf	??_color_click_init^0,c
  1047  0012' 0E55               	movlw	85
  1048  0014'                    u357:
  1049  0014' 2EE8               	decfsz	wreg,f,c
  1050  0016' D7FE               	bra	u357
  1051  0018' 2E00'              	decfsz	??_color_click_init^0,f,c
  1052  001A' D7FC               	bra	u357
  1053  001C' F000               	nop	
  1054  001E'                    
  1055                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1056  001E' 0E03               	movlw	3
  1057  0020' 6E00'              	movwf	color_writetoaddr@value^0,c
  1058  0022' 0E00               	movlw	0
  1059  0024' EC00' F000'        	call	_color_writetoaddr
  1060  0028'                    
  1061                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1062  0028' 0ED5               	movlw	213
  1063  002A' 6E00'              	movwf	color_writetoaddr@value^0,c
  1064  002C' 0E01               	movlw	1
  1065  002E' EC00' F000'        	call	_color_writetoaddr
  1066  0032' 0012               	return		;funcret
  1067  0034'                    __end_of_color_click_init:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function _color_writetoaddr *****************
  1071 ;; Defined at:
  1072 ;;		line 21 in file "color.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  address         1    wreg     unsigned char 
  1075 ;;  value           1   11[COMRAM] unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  address         1   12[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1087 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;Total ram usage:        2 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 6
  1094 ;; This function calls:
  1095 ;;		_I2C_2_Master_Start
  1096 ;;		_I2C_2_Master_Stop
  1097 ;;		_I2C_2_Master_Write
  1098 ;; This function is called by:
  1099 ;;		_color_click_init
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text6
  1104  0000'                    __ptext6:
  1105                           	callstack 0
  1106  0000'                    _color_writetoaddr:
  1107                           	callstack 23
  1108                           
  1109                           ;incstack = 0
  1110                           ;color_writetoaddr@address stored from wreg
  1111  0000' 6E00'              	movwf	color_writetoaddr@address^0,c
  1112  0002'                    
  1113                           ;color.c: 22:     I2C_2_Master_Start();
  1114  0002' EC00' F000'        	call	_I2C_2_Master_Start	;wreg free
  1115                           
  1116                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1117  0006' 0E52               	movlw	82
  1118  0008' EC00' F000'        	call	_I2C_2_Master_Write
  1119                           
  1120                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1121  000C' 5000'              	movf	color_writetoaddr@address^0,w,c
  1122  000E' 0980               	iorlw	128
  1123  0010' EC00' F000'        	call	_I2C_2_Master_Write
  1124                           
  1125                           ;color.c: 25:     I2C_2_Master_Write(value);
  1126  0014' 5000'              	movf	color_writetoaddr@value^0,w,c
  1127  0016' EC00' F000'        	call	_I2C_2_Master_Write
  1128                           
  1129                           ;color.c: 26:     I2C_2_Master_Stop();
  1130  001A' EC00' F000'        	call	_I2C_2_Master_Stop	;wreg free
  1131  001E' 0012               	return		;funcret
  1132  0020'                    __end_of_color_writetoaddr:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _I2C_2_Master_Write *****************
  1136 ;; Defined at:
  1137 ;;		line 45 in file "i2c.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  data_byte       1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  data_byte       1   10[COMRAM] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1154 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1155 ;;Total ram usage:        1 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; Hardware stack levels required when called: 5
  1158 ;; This function calls:
  1159 ;;		_I2C_2_Master_Idle
  1160 ;; This function is called by:
  1161 ;;		_color_writetoaddr
  1162 ;;		_color_read_Red
  1163 ;;		_color_read_Green
  1164 ;;		_color_read_Blue
  1165 ;;		_color_read_Clear
  1166 ;;		_enable_color_interrupt
  1167 ;;		_set_interrupt_threshold
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text7
  1172  0000'                    __ptext7:
  1173                           	callstack 0
  1174  0000'                    _I2C_2_Master_Write:
  1175                           	callstack 23
  1176                           
  1177                           ;incstack = 0
  1178                           ;I2C_2_Master_Write@data_byte stored from wreg
  1179  0000' 6E00'              	movwf	I2C_2_Master_Write@data_byte^0,c
  1180  0002'                    
  1181                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1182  0002' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  1183  0006'                    
  1184                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1185  0006' C00A' FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1186  000A' 0012               	return		;funcret
  1187  000C'                    __end_of_I2C_2_Master_Write:
  1188                           	callstack 0
  1189                           
  1190 ;; *************** function _I2C_2_Master_Stop *****************
  1191 ;; Defined at:
  1192 ;;		line 39 in file "i2c.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 5
  1213 ;; This function calls:
  1214 ;;		_I2C_2_Master_Idle
  1215 ;; This function is called by:
  1216 ;;		_color_writetoaddr
  1217 ;;		_color_read_Red
  1218 ;;		_color_read_Green
  1219 ;;		_color_read_Blue
  1220 ;;		_color_read_Clear
  1221 ;;		_enable_color_interrupt
  1222 ;;		_set_interrupt_threshold
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text8
  1227  0000'                    __ptext8:
  1228                           	callstack 0
  1229  0000'                    _I2C_2_Master_Stop:
  1230                           	callstack 23
  1231  0000'                    
  1232                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1233  0000' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  1234  0004'                    
  1235                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1236  0004' 010E               	movlb	14	; () banked
  1237  0006' 85DA               	bsf	218,2,b	;volatile
  1238  0008'                    
  1239                           ; BSR set to: 14
  1240  0008' 0012               	return		;funcret
  1241  000A'                    __end_of_I2C_2_Master_Stop:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _I2C_2_Master_Start *****************
  1245 ;; Defined at:
  1246 ;;		line 27 in file "i2c.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;Total ram usage:        0 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 5
  1267 ;; This function calls:
  1268 ;;		_I2C_2_Master_Idle
  1269 ;; This function is called by:
  1270 ;;		_color_writetoaddr
  1271 ;;		_color_read_Red
  1272 ;;		_color_read_Green
  1273 ;;		_color_read_Blue
  1274 ;;		_color_read_Clear
  1275 ;;		_enable_color_interrupt
  1276 ;;		_set_interrupt_threshold
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text9
  1281  0000'                    __ptext9:
  1282                           	callstack 0
  1283  0000'                    _I2C_2_Master_Start:
  1284                           	callstack 23
  1285  0000'                    
  1286                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1287  0000' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  1288  0004'                    
  1289                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1290  0004' 010E               	movlb	14	; () banked
  1291  0006' 81DA               	bsf	218,0,b	;volatile
  1292  0008'                    
  1293                           ; BSR set to: 14
  1294  0008' 0012               	return		;funcret
  1295  000A'                    __end_of_I2C_2_Master_Start:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _I2C_2_Master_Idle *****************
  1299 ;; Defined at:
  1300 ;;		line 22 in file "i2c.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1318 ;;Total ram usage:        1 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 4
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_I2C_2_Master_Start
  1325 ;;		_I2C_2_Master_Stop
  1326 ;;		_I2C_2_Master_Write
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text10
  1331  0000'                    __ptext10:
  1332                           	callstack 0
  1333  0000'                    _I2C_2_Master_Idle:
  1334                           	callstack 23
  1335  0000'                    l154:
  1336  0000' 010E               	movlb	14	; () banked
  1337  0002' B5D8               	btfsc	216,2,b	;volatile
  1338  0004' EF00' F000'        	goto	u11
  1339  0008' EF00' F000'        	goto	u10
  1340  000C'                    u11:
  1341  000C' EF00' F000'        	goto	l154
  1342  0010'                    u10:
  1343  0010'                    
  1344                           ; BSR set to: 14
  1345  0010' CEDA F009'         	movff	3802,??_I2C_2_Master_Idle	;volatile
  1346  0014' 0E1F               	movlw	31
  1347  0016' 1600'              	andwf	??_I2C_2_Master_Idle^0,f,c
  1348  0018' A4D8               	btfss	status,2,c
  1349  001A' EF00' F000'        	goto	u21
  1350  001E' EF00' F000'        	goto	u20
  1351  0022'                    u21:
  1352  0022' EF00' F000'        	goto	l154
  1353  0026'                    u20:
  1354  0026'                    
  1355                           ; BSR set to: 14
  1356  0026' 0012               	return		;funcret
  1357  0028'                    __end_of_I2C_2_Master_Idle:
  1358                           	callstack 0
  1359                           
  1360 ;; *************** function _I2C_2_Master_Init *****************
  1361 ;; Defined at:
  1362 ;;		line 4 in file "i2c.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used: 1
  1382 ;; Hardware stack levels required when called: 4
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_color_click_init
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text11
  1392  0000'                    __ptext11:
  1393                           	callstack 0
  1394  0000'                    _I2C_2_Master_Init:
  1395                           	callstack 25
  1396  0000'                    
  1397                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1398  0000' 010E               	movlb	14	; () banked
  1399  0002' 51D9               	movf	217,w,b	;volatile
  1400  0004' 0BF0               	andlw	-16
  1401  0006' 0908               	iorlw	8
  1402  0008' 6FD9               	movwf	217,b	;volatile
  1403  000A'                    
  1404                           ; BSR set to: 14
  1405                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1406  000A' 8BD9               	bsf	217,5,b	;volatile
  1407                           
  1408                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1409  000C' 0E9F               	movlw	159
  1410  000E' 6FD6               	movwf	214,b	;volatile
  1411  0010'                    
  1412                           ; BSR set to: 14
  1413                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1414  0010' 8A84               	bsf	132,5,c	;volatile
  1415  0012'                    
  1416                           ; BSR set to: 14
  1417                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1418  0012' 8C84               	bsf	132,6,c	;volatile
  1419  0014'                    
  1420                           ; BSR set to: 14
  1421                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1422  0014' 9BA7               	bcf	167,5,b	;volatile
  1423  0016'                    
  1424                           ; BSR set to: 14
  1425                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1426  0016' 9DA7               	bcf	167,6,b	;volatile
  1427                           
  1428                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1429  0018' 0E1D               	movlw	29
  1430  001A' 6F1D               	movwf	29,b	;volatile
  1431                           
  1432                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1433  001C' 0E1E               	movlw	30
  1434  001E' 6F1C               	movwf	28,b	;volatile
  1435                           
  1436                           ;i2c.c: 18:   RD5PPS=0x1C;
  1437  0020' 0E1C               	movlw	28
  1438  0022' 6F6F               	movwf	111,b	;volatile
  1439                           
  1440                           ;i2c.c: 19:   RD6PPS=0x1B;
  1441  0024' 0E1B               	movlw	27
  1442  0026' 6F70               	movwf	112,b	;volatile
  1443  0028'                    
  1444                           ; BSR set to: 14
  1445  0028' 0012               	return		;funcret
  1446  002A'                    __end_of_I2C_2_Master_Init:
  1447                           	callstack 0
  1448                           
  1449 ;; *************** function _LEDSon_init *****************
  1450 ;; Defined at:
  1451 ;;		line 18 in file "LEDsOn.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		None
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1469 ;;Total ram usage:        0 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 4
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text12
  1480  0000'                    __ptext12:
  1481                           	callstack 0
  1482  0000'                    _LEDSon_init:
  1483                           	callstack 26
  1484  0000'                    
  1485                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  1486  0000' 9288               	bcf	136,1,c	;volatile
  1487                           
  1488                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  1489  0002' 9088               	bcf	136,0,c	;volatile
  1490                           
  1491                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  1492  0004' 9884               	bcf	132,4,c	;volatile
  1493                           
  1494                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  1495  0006' 9684               	bcf	132,3,c	;volatile
  1496                           
  1497                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  1498  0008' 9086               	bcf	134,0,c	;volatile
  1499                           
  1500                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  1501  000A' 9287               	bcf	135,1,c	;volatile
  1502                           
  1503                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  1504  000C' 9E86               	bcf	134,7,c	;volatile
  1505                           
  1506                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  1507  000E' 9881               	bcf	129,4,c	;volatile
  1508                           
  1509                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  1510  0010' 8E7E               	bsf	126,7,c	;volatile
  1511                           
  1512                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  1513  0012' 827F               	bsf	127,1,c	;volatile
  1514                           
  1515                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  1516  0014' 8879               	bsf	121,4,c	;volatile
  1517                           
  1518                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  1519  0016' 987C               	bcf	124,4,c	;volatile
  1520                           
  1521                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  1522  0018' 9280               	bcf	128,1,c	;volatile
  1523                           
  1524                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  1525  001A' 907E               	bcf	126,0,c	;volatile
  1526                           
  1527                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  1528  001C' 9080               	bcf	128,0,c	;volatile
  1529                           
  1530                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  1531  001E' 967C               	bcf	124,3,c	;volatile
  1532  0020' 0012               	return		;funcret
  1533  0022'                    __end_of_LEDSon_init:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _HighISR *****************
  1537 ;; Defined at:
  1538 ;;		line 16 in file "colour_identify.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 3
  1559 ;; This function calls:
  1560 ;;		_read_interrupt_status
  1561 ;; This function is called by:
  1562 ;;		Interrupt level 2
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	intcode
  1567  0000'                    __pintcode:
  1568                           	callstack 0
  1569  0000'                    _HighISR:
  1570                           	callstack 23
  1571                           
  1572                           ;incstack = 0
  1573  0000' 8200'              	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1574  0002'                    
  1575                           ;colour_identify.c: 19:     if(read_interrupt_status()) {
  1576  0002' EC00' F000'        	call	_read_interrupt_status	;wreg free
  1577  0006' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1578  0008' 0011               	retfie		f
  1579  000A'                    __end_of_HighISR:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _read_interrupt_status *****************
  1583 ;; Defined at:
  1584 ;;		line 105 in file "color.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  status          2    7[COMRAM] unsigned int 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  2    4[COMRAM] unsigned int 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1601 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;Total ram usage:        5 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 2
  1605 ;; This function calls:
  1606 ;;		_I2C_2_Master_Read
  1607 ;;		_I2C_2_Master_RepStart
  1608 ;;		i2_I2C_2_Master_Start
  1609 ;;		i2_I2C_2_Master_Stop
  1610 ;;		i2_I2C_2_Master_Write
  1611 ;; This function is called by:
  1612 ;;		_HighISR
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text14
  1617  0000'                    __ptext14:
  1618                           	callstack 0
  1619  0000'                    _read_interrupt_status:
  1620                           	callstack 23
  1621  0000'                    
  1622                           ;color.c: 106:     unsigned int status;;color.c: 107:     I2C_2_Master_Start();
  1623  0000' EC00' F000'        	call	i2_I2C_2_Master_Start	;wreg free
  1624                           
  1625                           ;color.c: 108:  I2C_2_Master_Write(0x52 | 0x00);
  1626  0004' 0E52               	movlw	82
  1627  0006' EC00' F000'        	call	i2_I2C_2_Master_Write
  1628                           
  1629                           ;color.c: 109:  I2C_2_Master_Write(0xA0 | 0x13);
  1630  000A' 0EB3               	movlw	179
  1631  000C' EC00' F000'        	call	i2_I2C_2_Master_Write
  1632                           
  1633                           ;color.c: 110:  I2C_2_Master_RepStart();
  1634  0010' EC00' F000'        	call	_I2C_2_Master_RepStart	;wreg free
  1635                           
  1636                           ;color.c: 111:  I2C_2_Master_Write(0x52 | 0x01);
  1637  0014' 0E53               	movlw	83
  1638  0016' EC00' F000'        	call	i2_I2C_2_Master_Write
  1639                           
  1640                           ;color.c: 112:  status=I2C_2_Master_Read(1);
  1641  001A' 0E01               	movlw	1
  1642  001C' EC00' F000'        	call	_I2C_2_Master_Read
  1643  0020' 6E00'              	movwf	??_read_interrupt_status^0,c
  1644  0022' 5000'              	movf	??_read_interrupt_status^0,w,c
  1645  0024' 6E00'              	movwf	read_interrupt_status@status^0,c
  1646  0026' 6A00'              	clrf	(read_interrupt_status@status+1)^0,c
  1647                           
  1648                           ;color.c: 113:  I2C_2_Master_Stop();
  1649  0028' EC00' F000'        	call	i2_I2C_2_Master_Stop	;wreg free
  1650  002C'                    
  1651                           ;color.c: 114:  return status;
  1652  002C' C007' F004'        	movff	read_interrupt_status@status,?_read_interrupt_status
  1653  0030' C008' F005'        	movff	read_interrupt_status@status+1,?_read_interrupt_status+1
  1654  0034' 0012               	return		;funcret
  1655  0036'                    __end_of_read_interrupt_status:
  1656                           	callstack 0
  1657                           
  1658 ;; *************** function i2_I2C_2_Master_Write *****************
  1659 ;; Defined at:
  1660 ;;		line 45 in file "i2c.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  data_byte       1    wreg     unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  data_byte       1    1[COMRAM] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;Total ram usage:        1 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 1
  1681 ;; This function calls:
  1682 ;;		i2_I2C_2_Master_Idle
  1683 ;; This function is called by:
  1684 ;;		_read_interrupt_status
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text15
  1689  0000'                    __ptext15:
  1690                           	callstack 0
  1691  0000'                    i2_I2C_2_Master_Write:
  1692                           	callstack 23
  1693                           
  1694                           ;incstack = 0
  1695                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  1696  0000' 6E00'              	movwf	i2I2C_2_Master_Write@data_byte^0,c
  1697  0002'                    
  1698                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1699  0002' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
  1700  0006'                    
  1701                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1702  0006' C001' FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  1703  000A' 0012               	return		;funcret
  1704  000C'                    __end_ofi2_I2C_2_Master_Write:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function i2_I2C_2_Master_Stop *****************
  1708 ;; Defined at:
  1709 ;;		line 39 in file "i2c.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 1
  1730 ;; This function calls:
  1731 ;;		i2_I2C_2_Master_Idle
  1732 ;; This function is called by:
  1733 ;;		_read_interrupt_status
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text16
  1738  0000'                    __ptext16:
  1739                           	callstack 0
  1740  0000'                    i2_I2C_2_Master_Stop:
  1741                           	callstack 23
  1742  0000'                    
  1743                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1744  0000' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
  1745  0004'                    
  1746                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1747  0004' 010E               	movlb	14	; () banked
  1748  0006' 85DA               	bsf	218,2,b	;volatile
  1749  0008'                    
  1750                           ; BSR set to: 14
  1751  0008' 0012               	return		;funcret
  1752  000A'                    __end_ofi2_I2C_2_Master_Stop:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function i2_I2C_2_Master_Start *****************
  1756 ;; Defined at:
  1757 ;;		line 27 in file "i2c.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 1
  1778 ;; This function calls:
  1779 ;;		i2_I2C_2_Master_Idle
  1780 ;; This function is called by:
  1781 ;;		_read_interrupt_status
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text17
  1786  0000'                    __ptext17:
  1787                           	callstack 0
  1788  0000'                    i2_I2C_2_Master_Start:
  1789                           	callstack 23
  1790  0000'                    
  1791                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1792  0000' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
  1793  0004'                    
  1794                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1795  0004' 010E               	movlb	14	; () banked
  1796  0006' 81DA               	bsf	218,0,b	;volatile
  1797  0008'                    
  1798                           ; BSR set to: 14
  1799  0008' 0012               	return		;funcret
  1800  000A'                    __end_ofi2_I2C_2_Master_Start:
  1801                           	callstack 0
  1802                           
  1803 ;; *************** function _I2C_2_Master_RepStart *****************
  1804 ;; Defined at:
  1805 ;;		line 33 in file "i2c.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 1
  1826 ;; This function calls:
  1827 ;;		i2_I2C_2_Master_Idle
  1828 ;; This function is called by:
  1829 ;;		_read_interrupt_status
  1830 ;;		_color_read_Red
  1831 ;;		_color_read_Green
  1832 ;;		_color_read_Blue
  1833 ;;		_color_read_Clear
  1834 ;;		_enable_color_interrupt
  1835 ;;		_set_interrupt_threshold
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text18
  1840  0000'                    __ptext18:
  1841                           	callstack 0
  1842  0000'                    _I2C_2_Master_RepStart:
  1843                           	callstack 23
  1844  0000'                    
  1845                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1846  0000' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
  1847  0004'                    
  1848                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1849  0004' 010E               	movlb	14	; () banked
  1850  0006' 83DA               	bsf	218,1,b	;volatile
  1851  0008'                    
  1852                           ; BSR set to: 14
  1853  0008' 0012               	return		;funcret
  1854  000A'                    __end_of_I2C_2_Master_RepStart:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _I2C_2_Master_Read *****************
  1858 ;; Defined at:
  1859 ;;		line 51 in file "i2c.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  ack             1    wreg     unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  ack             1    2[COMRAM] unsigned char 
  1864 ;;  tmp             1    3[COMRAM] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      unsigned char 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;Total ram usage:        3 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 1
  1881 ;; This function calls:
  1882 ;;		i2_I2C_2_Master_Idle
  1883 ;; This function is called by:
  1884 ;;		_read_interrupt_status
  1885 ;;		_color_read_Red
  1886 ;;		_color_read_Green
  1887 ;;		_color_read_Blue
  1888 ;;		_color_read_Clear
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text19
  1893  0000'                    __ptext19:
  1894                           	callstack 0
  1895  0000'                    _I2C_2_Master_Read:
  1896                           	callstack 23
  1897                           
  1898                           ; BSR set to: 14
  1899                           ;incstack = 0
  1900                           ;I2C_2_Master_Read@ack stored from wreg
  1901  0000' 6E00'              	movwf	I2C_2_Master_Read@ack^0,c
  1902  0002'                    
  1903                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1904  0002' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
  1905  0006'                    
  1906                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1907  0006' 010E               	movlb	14	; () banked
  1908  0008' 87DA               	bsf	218,3,b	;volatile
  1909                           
  1910                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1911  000A' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
  1912  000E'                    
  1913                           ;i2c.c: 57:   tmp = SSP2BUF;
  1914  000E' CED5 F003'         	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1915                           
  1916                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1917  0012' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
  1918  0016'                    
  1919                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1920  0016' 5000'              	movf	I2C_2_Master_Read@ack^0,w,c
  1921  0018' B4D8               	btfsc	status,2,c
  1922  001A' EF00' F000'        	goto	i2u21_41
  1923  001E' EF00' F000'        	goto	i2u21_40
  1924  0022'                    i2u21_41:
  1925  0022' 6A00'              	clrf	??_I2C_2_Master_Read^0,c
  1926  0024' 2A00'              	incf	??_I2C_2_Master_Read^0,f,c
  1927  0026' EF00' F000'        	goto	i2u22_48
  1928  002A'                    i2u21_40:
  1929  002A' 6A00'              	clrf	??_I2C_2_Master_Read^0,c
  1930  002C'                    i2u22_48:
  1931  002C' 3A00'              	swapf	??_I2C_2_Master_Read^0,f,c
  1932  002E' 4600'              	rlncf	??_I2C_2_Master_Read^0,f,c
  1933  0030' 010E               	movlb	14	; () banked
  1934  0032' 51DA               	movf	218,w,b	;volatile
  1935  0034' 1800'              	xorwf	??_I2C_2_Master_Read^0,w,c
  1936  0036' 0BDF               	andlw	-33
  1937  0038' 1800'              	xorwf	??_I2C_2_Master_Read^0,w,c
  1938  003A' 6FDA               	movwf	218,b	;volatile
  1939  003C'                    
  1940                           ; BSR set to: 14
  1941                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1942  003C' 89DA               	bsf	218,4,b	;volatile
  1943  003E'                    
  1944                           ; BSR set to: 14
  1945                           ;i2c.c: 61:   return tmp;
  1946  003E' 5000'              	movf	I2C_2_Master_Read@tmp^0,w,c
  1947  0040'                    
  1948                           ; BSR set to: 14
  1949  0040' 0012               	return		;funcret
  1950  0042'                    __end_of_I2C_2_Master_Read:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function i2_I2C_2_Master_Idle *****************
  1954 ;; Defined at:
  1955 ;;		line 22 in file "i2c.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1973 ;;Total ram usage:        1 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_I2C_2_Master_RepStart
  1979 ;;		_I2C_2_Master_Read
  1980 ;;		i2_I2C_2_Master_Start
  1981 ;;		i2_I2C_2_Master_Stop
  1982 ;;		i2_I2C_2_Master_Write
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text20
  1987  0000'                    __ptext20:
  1988                           	callstack 0
  1989  0000'                    i2_I2C_2_Master_Idle:
  1990                           	callstack 23
  1991  0000'                    i2l154:
  1992  0000' 010E               	movlb	14	; () banked
  1993  0002' B5D8               	btfsc	216,2,b	;volatile
  1994  0004' EF00' F000'        	goto	i2u19_41
  1995  0008' EF00' F000'        	goto	i2u19_40
  1996  000C'                    i2u19_41:
  1997  000C' EF00' F000'        	goto	i2l154
  1998  0010'                    i2u19_40:
  1999  0010'                    
  2000                           ; BSR set to: 14
  2001  0010' CEDA F000'         	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  2002  0014' 0E1F               	movlw	31
  2003  0016' 1600'              	andwf	??i2_I2C_2_Master_Idle^0,f,c
  2004  0018' A4D8               	btfss	status,2,c
  2005  001A' EF00' F000'        	goto	i2u20_41
  2006  001E' EF00' F000'        	goto	i2u20_40
  2007  0022'                    i2u20_41:
  2008  0022' EF00' F000'        	goto	i2l154
  2009  0026'                    i2u20_40:
  2010  0026'                    
  2011                           ; BSR set to: 14
  2012  0026' 0012               	return		;funcret
  2013  0028'                    __end_ofi2_I2C_2_Master_Idle:
  2014                           	callstack 0
  2015  0000                     
  2016                           	psect	rparam
  2017  0000                     
  2018                           	psect	temp
  2019  0000'                    btemp:
  2020                           	callstack 0
  2021  0000'                    	ds	1
  2022  0000                     int$flags	set	btemp
  2023  0000                     wtemp8	set	btemp+1
  2024  0000                     ttemp5	set	btemp+1
  2025  0000                     ttemp6	set	btemp+4
  2026  0000                     ttemp7	set	btemp+8
  2027                           
  2028                           	psect	idloc
  2029                           
  2030                           ;Config register IDLOC0 @ 0x200000
  2031                           ;	unspecified, using default values
  2032  200000                     	org	2097152
  2033  200000  0FFF               	dw	4095
  2034                           
  2035                           ;Config register IDLOC1 @ 0x200002
  2036                           ;	unspecified, using default values
  2037  200002                     	org	2097154
  2038  200002  0FFF               	dw	4095
  2039                           
  2040                           ;Config register IDLOC2 @ 0x200004
  2041                           ;	unspecified, using default values
  2042  200004                     	org	2097156
  2043  200004  0FFF               	dw	4095
  2044                           
  2045                           ;Config register IDLOC3 @ 0x200006
  2046                           ;	unspecified, using default values
  2047  200006                     	org	2097158
  2048  200006  0FFF               	dw	4095
  2049                           
  2050                           ;Config register IDLOC4 @ 0x200008
  2051                           ;	unspecified, using default values
  2052  200008                     	org	2097160
  2053  200008  0FFF               	dw	4095
  2054                           
  2055                           ;Config register IDLOC5 @ 0x20000A
  2056                           ;	unspecified, using default values
  2057  20000A                     	org	2097162
  2058  20000A  0FFF               	dw	4095
  2059                           
  2060                           ;Config register IDLOC6 @ 0x20000C
  2061                           ;	unspecified, using default values
  2062  20000C                     	org	2097164
  2063  20000C  0FFF               	dw	4095
  2064                           
  2065                           ;Config register IDLOC7 @ 0x20000E
  2066                           ;	unspecified, using default values
  2067  20000E                     	org	2097166
  2068  20000E  0FFF               	dw	4095
  2069                           
  2070                           	psect	config
  2071                           
  2072                           ;Config register CONFIG1L @ 0x300000
  2073                           ;	External Oscillator mode Selection bits
  2074                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2075                           ;	Power-up default value for COSC bits
  2076                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2077  300000                     	org	3145728
  2078  300000  AA                 	db	170
  2079                           
  2080                           ;Config register CONFIG1H @ 0x300001
  2081                           ;	unspecified, using default values
  2082                           ;	Clock Out Enable bit
  2083                           ;	CLKOUTEN = 0x1, unprogrammed default
  2084                           ;	Clock Switch Enable bit
  2085                           ;	CSWEN = 0x1, unprogrammed default
  2086                           ;	Fail-Safe Clock Monitor Enable bit
  2087                           ;	FCMEN = 0x1, unprogrammed default
  2088  300001                     	org	3145729
  2089  300001  FF                 	db	255
  2090                           
  2091                           ;Config register CONFIG2L @ 0x300002
  2092                           ;	unspecified, using default values
  2093                           ;	Master Clear Enable bit
  2094                           ;	MCLRE = 0x1, unprogrammed default
  2095                           ;	Power-up Timer Enable bit
  2096                           ;	PWRTE = 0x1, unprogrammed default
  2097                           ;	Low-power BOR enable bit
  2098                           ;	LPBOREN = 0x1, unprogrammed default
  2099                           ;	Brown-out Reset Enable bits
  2100                           ;	BOREN = 0x3, unprogrammed default
  2101  300002                     	org	3145730
  2102  300002  FF                 	db	255
  2103                           
  2104                           ;Config register CONFIG2H @ 0x300003
  2105                           ;	unspecified, using default values
  2106                           ;	Brown Out Reset Voltage selection bits
  2107                           ;	BORV = 0x3, unprogrammed default
  2108                           ;	ZCD Disable bit
  2109                           ;	ZCD = 0x1, unprogrammed default
  2110                           ;	PPSLOCK bit One-Way Set Enable bit
  2111                           ;	PPS1WAY = 0x1, unprogrammed default
  2112                           ;	Stack Full/Underflow Reset Enable bit
  2113                           ;	STVREN = 0x1, unprogrammed default
  2114                           ;	Debugger Enable bit
  2115                           ;	DEBUG = 0x1, unprogrammed default
  2116                           ;	Extended Instruction Set Enable bit
  2117                           ;	XINST = 0x1, unprogrammed default
  2118  300003                     	org	3145731
  2119  300003  FF                 	db	255
  2120                           
  2121                           ;Config register CONFIG3L @ 0x300004
  2122                           ;	WDT Period Select bits
  2123                           ;	WDTCPS = 0x1F, unprogrammed default
  2124                           ;	WDT operating mode
  2125                           ;	WDTE = OFF, WDT Disabled
  2126  300004                     	org	3145732
  2127  300004  9F                 	db	159
  2128                           
  2129                           ;Config register CONFIG3H @ 0x300005
  2130                           ;	unspecified, using default values
  2131                           ;	WDT Window Select bits
  2132                           ;	WDTCWS = 0x7, unprogrammed default
  2133                           ;	WDT input clock selector
  2134                           ;	WDTCCS = 0x7, unprogrammed default
  2135  300005                     	org	3145733
  2136  300005  FF                 	db	255
  2137                           
  2138                           ;Config register CONFIG4L @ 0x300006
  2139                           ;	unspecified, using default values
  2140                           ;	Write Protection Block 0
  2141                           ;	WRT0 = 0x1, unprogrammed default
  2142                           ;	Write Protection Block 1
  2143                           ;	WRT1 = 0x1, unprogrammed default
  2144                           ;	Write Protection Block 2
  2145                           ;	WRT2 = 0x1, unprogrammed default
  2146                           ;	Write Protection Block 3
  2147                           ;	WRT3 = 0x1, unprogrammed default
  2148                           ;	Write Protection Block 3
  2149                           ;	WRT4 = 0x1, unprogrammed default
  2150                           ;	Write Protection Block 3
  2151                           ;	WRT5 = 0x1, unprogrammed default
  2152                           ;	Write Protection Block 3
  2153                           ;	WRT6 = 0x1, unprogrammed default
  2154                           ;	Write Protection Block 3
  2155                           ;	WRT7 = 0x1, unprogrammed default
  2156  300006                     	org	3145734
  2157  300006  FF                 	db	255
  2158                           
  2159                           ;Config register CONFIG4H @ 0x300007
  2160                           ;	unspecified, using default values
  2161                           ;	Configuration Register Write Protection bit
  2162                           ;	WRTC = 0x1, unprogrammed default
  2163                           ;	Boot Block Write Protection bit
  2164                           ;	WRTB = 0x1, unprogrammed default
  2165                           ;	Data EEPROM Write Protection bit
  2166                           ;	WRTD = 0x1, unprogrammed default
  2167                           ;	Scanner Enable bit
  2168                           ;	SCANE = 0x1, unprogrammed default
  2169                           ;	Low Voltage Programming Enable bit
  2170                           ;	LVP = 0x1, unprogrammed default
  2171  300007                     	org	3145735
  2172  300007  FF                 	db	255
  2173                           
  2174                           ;Config register CONFIG5L @ 0x300008
  2175                           ;	unspecified, using default values
  2176                           ;	UserNVM Program Memory Code Protection bit
  2177                           ;	CP = 0x1, unprogrammed default
  2178                           ;	DataNVM Memory Code Protection bit
  2179                           ;	CPD = 0x1, unprogrammed default
  2180  300008                     	org	3145736
  2181  300008  FF                 	db	255
  2182                           
  2183                           ;Config register CONFIG5H @ 0x300009
  2184                           ;	unspecified, using default values
  2185  300009                     	org	3145737
  2186  300009  FF                 	db	255
  2187                           
  2188                           ;Config register CONFIG6L @ 0x30000A
  2189                           ;	unspecified, using default values
  2190                           ;	Table Read Protection Block 0
  2191                           ;	EBTR0 = 0x1, unprogrammed default
  2192                           ;	Table Read Protection Block 1
  2193                           ;	EBTR1 = 0x1, unprogrammed default
  2194                           ;	Table Read Protection Block 2
  2195                           ;	EBTR2 = 0x1, unprogrammed default
  2196                           ;	Table Read Protection Block 3
  2197                           ;	EBTR3 = 0x1, unprogrammed default
  2198                           ;	Table Read Protection Block 4
  2199                           ;	EBTR4 = 0x1, unprogrammed default
  2200                           ;	Table Read Protection Block 5
  2201                           ;	EBTR5 = 0x1, unprogrammed default
  2202                           ;	Table Read Protection Block 6
  2203                           ;	EBTR6 = 0x1, unprogrammed default
  2204                           ;	Table Read Protection Block 7
  2205                           ;	EBTR7 = 0x1, unprogrammed default
  2206  30000A                     	org	3145738
  2207  30000A  FF                 	db	255
  2208                           
  2209                           ;Config register CONFIG6H @ 0x30000B
  2210                           ;	unspecified, using default values
  2211                           ;	Boot Block Table Read Protection bit
  2212                           ;	EBTRB = 0x1, unprogrammed default
  2213  30000B                     	org	3145739
  2214  30000B  FF                 	db	255
  2215                           tosu	equ	0xFFF
  2216                           tosh	equ	0xFFE
  2217                           tosl	equ	0xFFD
  2218                           stkptr	equ	0xFFC
  2219                           pclatu	equ	0xFFB
  2220                           pclath	equ	0xFFA
  2221                           pcl	equ	0xFF9
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           prodh	equ	0xFF4
  2227                           prodl	equ	0xFF3
  2228                           indf0	equ	0xFEF
  2229                           postinc0	equ	0xFEE
  2230                           postdec0	equ	0xFED
  2231                           preinc0	equ	0xFEC
  2232                           plusw0	equ	0xFEB
  2233                           fsr0h	equ	0xFEA
  2234                           fsr0l	equ	0xFE9
  2235                           wreg	equ	0xFE8
  2236                           indf1	equ	0xFE7
  2237                           postinc1	equ	0xFE6
  2238                           postdec1	equ	0xFE5
  2239                           preinc1	equ	0xFE4
  2240                           plusw1	equ	0xFE3
  2241                           fsr1h	equ	0xFE2
  2242                           fsr1l	equ	0xFE1
  2243                           bsr	equ	0xFE0
  2244                           indf2	equ	0xFDF
  2245                           postinc2	equ	0xFDE
  2246                           postdec2	equ	0xFDD
  2247                           preinc2	equ	0xFDC
  2248                           plusw2	equ	0xFDB
  2249                           fsr2h	equ	0xFDA
  2250                           fsr2l	equ	0xFD9
  2251                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      65
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S531DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S531DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), main@motorL(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_read_interrupt_status
    _read_interrupt_status->_I2C_2_Master_Read
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->i2_I2C_2_Master_Idle
    _I2C_2_Master_Read->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                82    82      0    2629
                                             28 COMRAM    28    28      0
                  _I2C_2_Master_Init
                        _LEDSon_init
                   _color_click_init
                    _colour_read_Red
                    _initDCmotorsPWM
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    1981
                                             22 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     358
                                             15 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_read_Red                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                             11 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0      90
              _read_interrupt_status
 ---------------------------------------------------------------------------------
 (6) _read_interrupt_status                                5     3      2      90
                                              4 COMRAM     5     3      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) _I2C_2_Master_RepStart                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Idle                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_read_Red
   _initDCmotorsPWM
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 _HighISR (ROOT)
   _read_interrupt_status
     _I2C_2_Master_Read
       i2_I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      41       1       69.1%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRllllh      4B      0       0      51        0.0%
BITBIGSFRllhhhl     46      0       0      43        0.0%
BITBIGSFRhhhl       32      0       0      33        0.0%
BITBIGSFRllhhhl     2D      0       0      45        0.0%
BITBIGSFRlllll      2D      0       0      52        0.0%
BITBIGSFRllhhhl     1E      0       0      46        0.0%
BITBIGSFRhhlll      1D      0       0      37        0.0%
BITBIGSFRllhhl      11      0       0      47        0.0%
BITBIGSFRhhlhh       E      0       0      34        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllhl       5      0       0      50        0.0%
BITBIGSFRlllhh       3      0       0      49        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      36        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllhhhl      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      35        0.0%
BITBIGSFRllhl        1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      53        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 03:31:27 2022

                           l22 00001E                             l19 000032                             l95 00016A  
                           l88 000086                             u10 000010                             u11 00000C  
                           u20 000026                             u21 000022            ___wmul@multiplicand 00000B  
                          l231 000020                            l151 000028                            l160 000008  
                          l154 000000                            l157 000026                            l166 000008  
                          l271 000024                            l169 00000A                            l762 00006A  
                          l950 000004                            l944 000000                            l952 000002  
                          l769 000072                            l970 000012                            l946 000010  
                          l954 000006                            l972 000014                            l964 000000  
                          l948 000000                            l956 000000                            l974 000016  
                          l966 00000A                            l958 000004                            l968 000010  
                          u230 00001A                            u231 000016                            u240 000038  
                          u241 000034                            u250 000054                            u251 000050  
                          u260 00001C                            u261 000018                            u341 00007A  
                          u270 0000E6                            u271 0000E2                            u357 000014  
                          wreg 000FE8                           l1112 000000                           l1080 000056  
                         l1320 000000                           l1400 000088                           l1090 000078  
                         l1082 000060                           l1074 000000                           l1330 000038  
                         l1322 000008                           l1314 000000                           l1402 0000CA  
                         l1092 00007A                           l1084 000062                           l1076 000008  
                         l1340 000064                           l1332 00003E                           l1324 00001A  
                         l1316 00001C                           l1404 0000E6                           l1500 000014  
                         l1094 000084                           l1086 00006C                           l1078 000032  
                         l1334 000054                           l1326 000022                           l1406 00012A  
                         l1510 000030                           l1502 000018                           l1360 00001E  
                         l1088 00006E                           l1336 00005C                           l1328 00002A  
                         l1520 000058                           l1512 000036                           l1504 00001C  
                         l1362 000028                           l1354 000000                           l1338 00005E  
                         l1530 000082                           l1522 000064                           l1514 00003A  
                         l1506 000020                           l1356 000004                           l1532 000082  
                         l1524 000070                           l1516 00003E                           l1508 000028  
                         l1294 000002                           l1358 00000E                           l1534 000082  
                         l1526 000070                           l1518 000052                           l1392 000000  
                         l1536 000084                           l1528 000082                           l1394 00001C  
                         l1538 000086                           l1490 000000                           l1396 000070  
                         l1492 000004                           l1398 000084                           l1494 000008  
                         l1496 00000C                           l1498 000010                   ?_LEDSon_init 000000  
                         _T2PR 000FBC                           i2l43 000034                           _main 000000  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 000000                           prodh 000FF4  
                         prodl 000FF3                           start 000000*               __end_of_HighISR 00000A  
                 ___param_bank 000000                          ?_main 000000                __end_of___lwdiv 000074  
                        i2l160 000008                          i2l154 000000                          i2l163 000008  
                        i2l172 000040                          i2l157 000026                          i2l166 000008  
                        i2l256 000006                          i2l169 00000A     __end_of_I2C_2_Master_Start 00000A  
   __end_of_I2C_2_Master_Write 00000C        ??_read_interrupt_status 000006                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          ttemp5 000001  
                        ttemp6 000004                          ttemp7 000008                          status 000FD8  
                        wtemp8 000001          _I2C_2_Master_RepStart 000000                __initialization 000000  
                 __end_of_main 000092                         ??_main 00001C                  __activetblptr 000000  
                 ?_setMotorPWM 000016                _colour_read_Red 000000*                        _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RD6PPS 000E70                         _RE4PPS 000E76                         i2l1300 000002  
                       i2l1310 00003E                         i2l1302 000006                         i2l1304 00000E  
                       i2l1306 000016                         i2l1308 00003C                         i2l1342 000000  
                       i2l1350 000002                         i2l1344 000004                         i2l1352 000006  
                       i2l1290 000000                         i2l1346 000000                         i2l1292 000010  
                       i2l1348 000004                         i2l1296 000000                         i2l1298 000004  
                       i2l1386 000000                         i2l1546 000002                         i2l1388 00002C  
                       _RG6PPS 000E88                      ??_HighISR 000009       __end_of_color_click_init 000034  
                 _CCPTMRS0bits 000FAD                         ___wmul 000000                      ??___lwdiv 000013  
                       isa$std 000001                   __pdataCOMRAM 000000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8              ??_initDCmotorsPWM 000009  
                   __accesstop 000000*       __end_of__initialization 000020         ?_I2C_2_Master_RepStart 000000  
                ___rparam_used 000001                 __pcstackCOMRAM 000000              _color_writetoaddr 000000  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 00000B                        ?___wmul 000009  
          ??_color_writetoaddr 00000C                        i2u20_40 000026                        i2u20_41 000022  
                      i2u21_40 00002A                        i2u21_41 000022                        i2u22_48 00002C  
                      i2u19_40 000010                        i2u19_41 00000C                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5  __end_of_read_interrupt_status 000036         color_writetoaddr@value 00000B  
                      _HighISR 000000      __end_of_color_writetoaddr 000020             _I2C_2_Master_Start 000000  
          i2_I2C_2_Master_Idle 000000             _I2C_2_Master_Write 000000                        __Hparam 000000  
          i2_I2C_2_Master_Stop 000000                        __Lparam 000000            ?_I2C_2_Master_Start 000000  
                      ___lwdiv 000000            ?_I2C_2_Master_Write 000000                        __pcinit 000000  
                      __ramtop 000000*                       __ptext0 000000                        __ptext1 000000  
                      __ptext2 000000                        __ptext3 000000                        __ptext4 000000  
                      __ptext5 000000                        __ptext6 000000                        __ptext7 000000  
                      __ptext8 000000                        __ptext9 000000               ?_colour_read_Red 000000  
         ?i2_I2C_2_Master_Idle 000000                      _T2CONbits 000FBD           ?i2_I2C_2_Master_Stop 000000  
                    _T2HLTbits 000FBE           ??_I2C_2_Master_Start 00000A           ??_I2C_2_Master_Write 00000A  
         end_of_initialization 000020              ?_color_click_init 000000             ??_color_click_init 00000D  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                     main@F14297 000000                _initDCmotorsPWM 000000  
           setMotorPWM@negDuty 00001B          ??i2_I2C_2_Master_Idle 000000          ??i2_I2C_2_Master_Stop 000001  
                    _TRISAbits 000F81             setMotorPWM@posDuty 00001A                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88       color_writetoaddr@address 00000C  
      ??_I2C_2_Master_RepStart 000001                    _CCP1CONbits 000FAB                    _CCP2CONbits 000FA7  
                  _CCP3CONbits 000F26                    _CCP4CONbits 000F22                     main@motorL 000026  
                   main@motorR 00002F           main@master_closeness 00001C                 __end_of___wmul 000026  
                __pidataCOMRAM 000000            start_initialization 000000                  ??_LEDSon_init 000009  
      __end_of_initDCmotorsPWM 000088                       ??___wmul 00000D  i2I2C_2_Master_Write@data_byte 000001  
 __end_ofi2_I2C_2_Master_Start 00000A   __end_ofi2_I2C_2_Master_Write 00000C                       ?_HighISR 000000  
          __end_of_LEDSon_init 000022               ___lwdiv@dividend 00000F                      __pintcode 000000  
                     ?___lwdiv 00000F           I2C_2_Master_Read@ack 000002           I2C_2_Master_Read@tmp 000003  
            _I2C_2_Master_Idle 000000              _I2C_2_Master_Init 000000              _I2C_2_Master_Read 000000  
            _I2C_2_Master_Stop 000000             ?_I2C_2_Master_Idle 000000             ?_I2C_2_Master_Init 000000  
           ?_I2C_2_Master_Read 000000                  ??_setMotorPWM 000018             ?_I2C_2_Master_Stop 000000  
             ___lwdiv@quotient 000013    read_interrupt_status@status 000007            ??_I2C_2_Master_Idle 000009  
          ??_I2C_2_Master_Init 000009            ??_I2C_2_Master_Read 000001                 ___wmul@product 00000D  
        _read_interrupt_status 000000                       _LATAbits 000F79            ??_I2C_2_Master_Stop 00000A  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80               ?_initDCmotorsPWM 000000                       _SSP2CON2 000EDA  
                     _SSP2STAT 000ED8      __end_of_I2C_2_Master_Idle 000028      __end_of_I2C_2_Master_Init 00002A  
    __end_of_I2C_2_Master_Read 000042              ___wmul@multiplier 000009      __end_of_I2C_2_Master_Stop 00000A  
                 setMotorPWM@m 000016    I2C_2_Master_Write@data_byte 00000A                      copy_data0 000014  
                  _LEDSon_init 000000  __end_of_I2C_2_Master_RepStart 00000A            __end_of_setMotorPWM 00016C  
         i2_I2C_2_Master_Start 000000           i2_I2C_2_Master_Write 000000                       __Hrparam 000000* 
                     __Lrparam 000000*   __end_ofi2_I2C_2_Master_Idle 000028    __end_ofi2_I2C_2_Master_Stop 00000A  
                   _ANSELDbits 000EA7                ___lwdiv@divisor 000011                ___lwdiv@counter 000015  
                     __ptext10 000000                       __ptext11 000000                       __ptext20 000000  
                     __ptext12 000000                       __ptext14 000000                       __ptext15 000000  
                     __ptext16 000000                       __ptext17 000000                       __ptext18 000000  
                     __ptext19 000000                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
       ?_read_interrupt_status 000004          ?i2_I2C_2_Master_Start 000000          ?i2_I2C_2_Master_Write 000000  
                     isa$xinst 000000                       int$flags 000000                     _INTCONbits 000FF2  
                  _setMotorPWM 000000                       intlevel2 000000*             ??_colour_read_Red 000000  
             _color_click_init 000000                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
       ??i2_I2C_2_Master_Start 000001         ??i2_I2C_2_Master_Write 000001                   main@PWMcycle 000025  
