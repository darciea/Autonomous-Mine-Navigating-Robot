

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 15:16:12 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Version 2.35
    53                           ; Generated 05/05/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F67K40 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     
    88                           	psect	idataBANK0
    89   001F5A                     __pidataBANK0:
    90                           	callstack 0
    91                           
    92                           ;initializer for main@F14639
    93   001F5A  11                 	db	17
    94   001F5B  02                 	db	2
    95   001F5C  0C                 	db	12
    96   001F5D  0C                 	db	12
    97   001F5E  0A                 	db	10
    98   001F5F  0B                 	db	11
    99   001F60  0C                 	db	12
   100   001F61  0E                 	db	14
   101   001F62  10                 	db	16
   102   000000                     _TX4REG	set	3812
   103   000000                     _RC4STAbits	set	3815
   104   000000                     _SP4BRGH	set	3814
   105   000000                     _LATHbits	set	3968
   106   000000                     _LATGbits	set	3967
   107   000000                     _TRISFbits	set	3974
   108   000000                     _TRISDbits	set	3972
   109   000000                     _TRISGbits	set	3975
   110   000000                     _SSP2CON2bits	set	3802
   111   000000                     _RX4PPS	set	3605
   112   000000                     _SSP2CLKPPS	set	3612
   113   000000                     _SSP2DATPPS	set	3613
   114   000000                     _RC7PPS	set	3689
   115   000000                     _RE2PPS	set	3700
   116   000000                     _TRISCbits	set	3971
   117   000000                     _TRISEbits	set	3973
   118   000000                     _TRISHbits	set	3976
   119   000000                     _T2PR	set	4028
   120   000000                     _T2CONbits	set	4029
   121   000000                     _CCPR2H	set	4006
   122   000000                     _CCPR1H	set	4010
   123   000000                     _RE4PPS	set	3702
   124   000000                     _RG6PPS	set	3720
   125   000000                     _RD5PPS	set	3695
   126   000000                     _ANSELDbits	set	3751
   127   000000                     _SSP2ADD	set	3798
   128   000000                     _SSP2CON1bits	set	3801
   129   000000                     _CCPR4H	set	3873
   130   000000                     _CCPR3H	set	3877
   131   000000                     _T2CLKCONbits	set	4031
   132   000000                     _T2HLTbits	set	4030
   133   000000                     _CCP1CONbits	set	4011
   134   000000                     _CCPTMRS0bits	set	4013
   135   000000                     _CCP2CONbits	set	4007
   136   000000                     _LATAbits	set	3961
   137   000000                     _LATDbits	set	3964
   138   000000                     _CCP3CONbits	set	3878
   139   000000                     _CCP4CONbits	set	3874
   140   000000                     _RC4REG	set	3811
   141   000000                     _SP4BRGL	set	3813
   142   000000                     _TX4STAbits	set	3816
   143   000000                     _BAUD4CONbits	set	3817
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _SSP2STAT	set	3800
   146   000000                     _SSP2BUF	set	3797
   147   000000                     _PIE4bits	set	3629
   148   000000                     _PIR4bits	set	3639
   149   000000                     _RC0PPS	set	3682
   150   000000                     _RD6PPS	set	3696
   151   000000                     _LATFbits	set	3966
   152   000000                     _TRISAbits	set	3969
   153                           
   154                           	psect	smallconst
   155   000E00                     __psmallconst:
   156                           	callstack 0
   157   000E00  00                 	db	0
   158   000E01                     STR_2:
   159   000E01  41                 	db	65	;'A'
   160   000E02  76                 	db	118	;'v'
   161   000E03  65                 	db	101	;'e'
   162   000E04  72                 	db	114	;'r'
   163   000E05  61                 	db	97	;'a'
   164   000E06  67                 	db	103	;'g'
   165   000E07  65                 	db	101	;'e'
   166   000E08  73                 	db	115	;'s'
   167   000E09  20                 	db	32
   168   000E0A  25                 	db	37
   169   000E0B  64                 	db	100	;'d'
   170   000E0C  2C                 	db	44
   171   000E0D  20                 	db	32
   172   000E0E  25                 	db	37
   173   000E0F  64                 	db	100	;'d'
   174   000E10  2C                 	db	44
   175   000E11  20                 	db	32
   176   000E12  25                 	db	37
   177   000E13  64                 	db	100	;'d'
   178   000E14  20                 	db	32
   179   000E15  0A                 	db	10
   180   000E16  00                 	db	0
   181   000E17                     STR_1:
   182   000E17  52                 	db	82	;'R'
   183   000E18  61                 	db	97	;'a'
   184   000E19  77                 	db	119	;'w'
   185   000E1A  20                 	db	32
   186   000E1B  25                 	db	37
   187   000E1C  64                 	db	100	;'d'
   188   000E1D  2C                 	db	44
   189   000E1E  20                 	db	32
   190   000E1F  25                 	db	37
   191   000E20  64                 	db	100	;'d'
   192   000E21  2C                 	db	44
   193   000E22  20                 	db	32
   194   000E23  25                 	db	37
   195   000E24  64                 	db	100	;'d'
   196   000E25  20                 	db	32
   197   000E26  0A                 	db	10
   198   000E27  00                 	db	0
   199   000E28  00                 	db	0	; dummy byte at the end
   200   000000                     
   201                           ; #config settings
   202                           
   203                           	psect	cinit
   204   001B86                     __pcinit:
   205                           	callstack 0
   206   001B86                     start_initialization:
   207                           	callstack 0
   208   001B86                     __initialization:
   209                           	callstack 0
   210                           
   211                           ; Initialize objects allocated to BANK0 (9 bytes)
   212                           ; load TBLPTR registers with __pidataBANK0
   213   001B86  0E5A               	movlw	low __pidataBANK0
   214   001B88  6EF6               	movwf	tblptrl,c
   215   001B8A  0E1F               	movlw	high __pidataBANK0
   216   001B8C  6EF7               	movwf	tblptrh,c
   217   001B8E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   218   001B90  6EF8               	movwf	tblptru,c
   219   001B92  EE00  F0E5         	lfsr	0,__pdataBANK0
   220   001B96  EE10 F009          	lfsr	1,9
   221   001B9A                     copy_data0:
   222   001B9A  0009               	tblrd		*+
   223   001B9C  CFF5 FFEE          	movff	tablat,postinc0
   224   001BA0  50E5               	movf	postdec1,w,c
   225   001BA2  50E1               	movf	fsr1l,w,c
   226   001BA4  E1FA               	bnz	copy_data0
   227                           
   228                           ; Clear objects allocated to BANK1 (60 bytes)
   229   001BA6  EE01  F000         	lfsr	0,__pbssBANK1
   230   001BAA  0E3C               	movlw	60
   231   001BAC                     clear_0:
   232   001BAC  6AEE               	clrf	postinc0,c
   233   001BAE  06E8               	decf	wreg,f,c
   234   001BB0  E1FD               	bnz	clear_0
   235                           
   236                           ; Clear objects allocated to BANK0 (56 bytes)
   237   001BB2  EE00  F0AD         	lfsr	0,__pbssBANK0
   238   001BB6  0E38               	movlw	56
   239   001BB8                     clear_1:
   240   001BB8  6AEE               	clrf	postinc0,c
   241   001BBA  06E8               	decf	wreg,f,c
   242   001BBC  E1FD               	bnz	clear_1
   243                           
   244                           ; Clear objects allocated to COMRAM (5 bytes)
   245   001BBE  6A5F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   246   001BC0  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   247   001BC2  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   248   001BC4  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   249   001BC6  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   250   001BC8                     end_of_initialization:
   251                           	callstack 0
   252   001BC8                     __end_of__initialization:
   253                           	callstack 0
   254   001BC8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   255   001BCA  6EF8               	movwf	tblptru,c
   256   001BCC  0E0E               	movlw	high __Lsmallconst
   257   001BCE  6EF7               	movwf	tblptrh,c
   258   001BD0  0100               	movlb	0
   259   001BD2  EF17  F009         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMRAM
   262   00005B                     __pbssCOMRAM:
   263                           	callstack 0
   264   00005B                     _flags:
   265                           	callstack 0
   266   00005B                     	ds	1
   267   00005C                     _TxBufReadCnt:
   268                           	callstack 0
   269   00005C                     	ds	1
   270   00005D                     _TxBufWriteCnt:
   271                           	callstack 0
   272   00005D                     	ds	1
   273   00005E                     _RxBufReadCnt:
   274                           	callstack 0
   275   00005E                     	ds	1
   276   00005F                     _RxBufWriteCnt:
   277                           	callstack 0
   278   00005F                     	ds	1
   279                           
   280                           	psect	bssBANK0
   281   0000AD                     __pbssBANK0:
   282                           	callstack 0
   283   0000AD                     _EUSART4RXbuf:
   284                           	callstack 0
   285   0000AD                     	ds	20
   286   0000C1                     _width:
   287                           	callstack 0
   288   0000C1                     	ds	2
   289   0000C3                     _prec:
   290                           	callstack 0
   291   0000C3                     	ds	2
   292   0000C5                     _dbuf:
   293                           	callstack 0
   294   0000C5                     	ds	32
   295                           
   296                           	psect	dataBANK0
   297   0000E5                     __pdataBANK0:
   298                           	callstack 0
   299   0000E5                     main@F14639:
   300                           	callstack 0
   301   0000E5                     	ds	9
   302                           
   303                           	psect	bssBANK1
   304   000100                     __pbssBANK1:
   305                           	callstack 0
   306   000100                     _EUSART4TXbuf:
   307                           	callstack 0
   308   000100                     	ds	60
   309                           
   310                           	psect	cstackBANK0
   311   000060                     __pcstackBANK0:
   312                           	callstack 0
   313   000060                     ?_sprintf:
   314                           	callstack 0
   315   000060                     sprintf@s:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x0
   319   000060                     	ds	2
   320   000062                     sprintf@fmt:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x2
   324   000062                     	ds	8
   325   00006A                     sprintf@ap:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0xA
   329   00006A                     	ds	2
   330   00006C                     sprintf@f:
   331                           	callstack 0
   332                           
   333                           ; 11 bytes @ 0xC
   334   00006C                     	ds	11
   335   000077                     main@master_closeness:
   336                           	callstack 0
   337                           
   338                           ; 9 bytes @ 0x17
   339   000077                     	ds	9
   340   000080                     main@buf:
   341                           	callstack 0
   342                           
   343                           ; 20 bytes @ 0x20
   344   000080                     	ds	20
   345   000094                     main@PWMcycle:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x34
   349   000094                     	ds	1
   350   000095                     main@motorL:
   351                           	callstack 0
   352                           
   353                           ; 9 bytes @ 0x35
   354   000095                     	ds	9
   355   00009E                     main@motorR:
   356                           	callstack 0
   357                           
   358                           ; 9 bytes @ 0x3E
   359   00009E                     	ds	9
   360   0000A7                     main@red_read:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x47
   364   0000A7                     	ds	2
   365   0000A9                     main@green_read:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x49
   369   0000A9                     	ds	2
   370   0000AB                     main@blue_read:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x4B
   374   0000AB                     	ds	2
   375                           
   376                           	psect	cstackCOMRAM
   377   000001                     __pcstackCOMRAM:
   378                           	callstack 0
   379   000001                     ??_I2C_2_Master_Idle:
   380   000001                     ?___wmul:
   381                           	callstack 0
   382   000001                     ?___aodiv:
   383                           	callstack 0
   384   000001                     ?___aomod:
   385                           	callstack 0
   386   000001                     sendCharSerial4@charToSend:
   387                           	callstack 0
   388   000001                     ___wmul@multiplier:
   389                           	callstack 0
   390   000001                     fputc@c:
   391                           	callstack 0
   392   000001                     ___aodiv@dividend:
   393                           	callstack 0
   394   000001                     ___aomod@dividend:
   395                           	callstack 0
   396                           
   397                           ; 8 bytes @ 0x0
   398   000001                     	ds	1
   399   000002                     ??_I2C_2_Master_Read:
   400   000002                     I2C_2_Master_Write@data_byte:
   401                           	callstack 0
   402   000002                     sendStringSerial4@string:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x1
   406   000002                     	ds	1
   407   000003                     color_writetoaddr@value:
   408                           	callstack 0
   409   000003                     I2C_2_Master_Read@ack:
   410                           	callstack 0
   411   000003                     ___wmul@multiplicand:
   412                           	callstack 0
   413   000003                     fputc@fp:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x2
   417   000003                     	ds	1
   418   000004                     color_writetoaddr@address:
   419                           	callstack 0
   420   000004                     I2C_2_Master_Read@tmp:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x3
   424   000004                     	ds	1
   425   000005                     ??_fputc:
   426   000005                     ??_color_click_init:
   427   000005                     ?_color_read_Red:
   428                           	callstack 0
   429   000005                     ?_color_read_Green:
   430                           	callstack 0
   431   000005                     ?_color_read_Blue:
   432                           	callstack 0
   433   000005                     ___wmul@product:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x4
   437   000005                     	ds	2
   438   000007                     ??_color_read_Red:
   439   000007                     ??_color_read_Green:
   440   000007                     ??_color_read_Blue:
   441   000007                     ?___lwdiv:
   442                           	callstack 0
   443   000007                     ___lwdiv@dividend:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x6
   447   000007                     	ds	2
   448   000009                     ___lwdiv@divisor:
   449                           	callstack 0
   450   000009                     ___aodiv@divisor:
   451                           	callstack 0
   452   000009                     ___aomod@divisor:
   453                           	callstack 0
   454                           
   455                           ; 8 bytes @ 0x8
   456   000009                     	ds	1
   457   00000A                     color_read_Red@tmp:
   458                           	callstack 0
   459   00000A                     color_read_Green@tmp:
   460                           	callstack 0
   461   00000A                     color_read_Blue@tmp:
   462                           	callstack 0
   463   00000A                     fputs@s:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x9
   467   00000A                     	ds	1
   468   00000B                     ___lwdiv@quotient:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xA
   472   00000B                     	ds	1
   473   00000C                     fputs@fp:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xB
   477   00000C                     	ds	1
   478   00000D                     ___lwdiv@counter:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0xC
   482   00000D                     	ds	1
   483   00000E                     fputs@c:
   484                           	callstack 0
   485   00000E                     setMotorPWM@m:
   486                           	callstack 0
   487   00000E                     collect_avg_readings@red_read:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0xD
   491   00000E                     	ds	1
   492   00000F                     fputs@i:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0xE
   496   00000F                     	ds	1
   497   000010                     ??_setMotorPWM:
   498   000010                     collect_avg_readings@green_read:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0xF
   502   000010                     	ds	1
   503   000011                     ___aodiv@counter:
   504                           	callstack 0
   505   000011                     ___aomod@counter:
   506                           	callstack 0
   507   000011                     pad@fp:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x10
   511   000011                     	ds	1
   512   000012                     setMotorPWM@posDuty:
   513                           	callstack 0
   514   000012                     ___aodiv@sign:
   515                           	callstack 0
   516   000012                     ___aomod@sign:
   517                           	callstack 0
   518   000012                     collect_avg_readings@blue_read:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x11
   522   000012                     	ds	1
   523   000013                     ?_abs:
   524                           	callstack 0
   525   000013                     setMotorPWM@negDuty:
   526                           	callstack 0
   527   000013                     pad@buf:
   528                           	callstack 0
   529   000013                     abs@a:
   530                           	callstack 0
   531   000013                     ___aodiv@quotient:
   532                           	callstack 0
   533                           
   534                           ; 8 bytes @ 0x12
   535   000013                     	ds	1
   536   000014                     ??_collect_avg_readings:
   537                           
   538                           ; 1 bytes @ 0x13
   539   000014                     	ds	1
   540   000015                     ??_abs:
   541   000015                     collect_avg_readings@i:
   542                           	callstack 0
   543   000015                     pad@p:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x14
   547   000015                     	ds	1
   548   000016                     collect_avg_readings@i_1417:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x15
   552   000016                     	ds	1
   553   000017                     ??_pad:
   554   000017                     collect_avg_readings@i_1418:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x16
   558   000017                     	ds	1
   559   000018                     pad@i:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x17
   563   000018                     	ds	2
   564   00001A                     pad@w:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x19
   568   00001A                     	ds	2
   569   00001C                     dtoa@fp:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1B
   573   00001C                     	ds	2
   574   00001E                     dtoa@d:
   575                           	callstack 0
   576                           
   577                           ; 8 bytes @ 0x1D
   578   00001E                     	ds	8
   579   000026                     ??_dtoa:
   580                           
   581                           ; 1 bytes @ 0x25
   582   000026                     	ds	8
   583   00002E                     _dtoa$2114:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x2D
   587   00002E                     	ds	2
   588   000030                     dtoa@p:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x2F
   592   000030                     	ds	2
   593   000032                     dtoa@w:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x31
   597   000032                     	ds	2
   598   000034                     dtoa@n:
   599                           	callstack 0
   600                           
   601                           ; 8 bytes @ 0x33
   602   000034                     	ds	8
   603   00003C                     dtoa@i:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x3B
   607   00003C                     	ds	2
   608   00003E                     dtoa@s:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x3D
   612   00003E                     	ds	1
   613   00003F                     vfpfcnvrt@fp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x3E
   617   00003F                     	ds	2
   618   000041                     vfpfcnvrt@fmt:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x40
   622   000041                     	ds	2
   623   000043                     vfpfcnvrt@ap:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x42
   627   000043                     	ds	2
   628   000045                     ??_vfpfcnvrt:
   629                           
   630                           ; 1 bytes @ 0x44
   631   000045                     	ds	2
   632   000047                     vfpfcnvrt@convarg:
   633                           	callstack 0
   634                           
   635                           ; 8 bytes @ 0x46
   636   000047                     	ds	8
   637   00004F                     vfpfcnvrt@cp:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x4E
   641   00004F                     	ds	2
   642   000051                     ?_vfprintf:
   643                           	callstack 0
   644   000051                     vfprintf@fp:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x50
   648   000051                     	ds	2
   649   000053                     vfprintf@fmt:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x52
   653   000053                     	ds	2
   654   000055                     vfprintf@ap:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x54
   658   000055                     	ds	2
   659   000057                     vfprintf@cfmt:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x56
   663   000057                     	ds	2
   664   000059                     ??_main:
   665                           
   666                           ; 1 bytes @ 0x58
   667   000059                     	ds	2
   668                           
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 20 in file "main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  normalised_v   24    0        unsigned char [3][8]
   679 ;;  expected_val   24    0        unsigned char [3][8]
   680 ;;  buf            20   32[BANK0 ] unsigned char [20]
   681 ;;  motorR          9   62[BANK0 ] struct DC_motor
   682 ;;  motorL          9   53[BANK0 ] struct DC_motor
   683 ;;  master_close    9   23[BANK0 ] unsigned char [9]
   684 ;;  blue_read       2   75[BANK0 ] volatile unsigned int 
   685 ;;  green_read      2   73[BANK0 ] volatile unsigned int 
   686 ;;  red_read        2   71[BANK0 ] volatile unsigned int 
   687 ;;  PWMcycle        1   52[BANK0 ] unsigned char 
   688 ;;  card            1    0        enum E14575
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   701 ;;      Totals:         2      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   702 ;;Total ram usage:       56 bytes
   703 ;; Hardware stack levels required when called: 8
   704 ;; This function calls:
   705 ;;		_I2C_2_Master_Init
   706 ;;		_LEDSon_init
   707 ;;		_collect_avg_readings
   708 ;;		_color_click_init
   709 ;;		_color_read_Blue
   710 ;;		_color_read_Green
   711 ;;		_color_read_Red
   712 ;;		_initDCmotorsPWM
   713 ;;		_initUSART4
   714 ;;		_sendStringSerial4
   715 ;;		_setMotorPWM
   716 ;;		_sprintf
   717 ;; This function is called by:
   718 ;;		Startup code after reset
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text0
   723   00122E                     __ptext0:
   724                           	callstack 0
   725   00122E                     _main:
   726                           	callstack 23
   727   00122E                     
   728                           ;main.c: 25:     LEDSon_init();
   729   00122E  EC5B  F00F         	call	_LEDSon_init	;wreg free
   730   001232                     
   731                           ;main.c: 26:     I2C_2_Master_Init();
   732   001232  EC1F  F00F         	call	_I2C_2_Master_Init	;wreg free
   733   001236                     
   734                           ;main.c: 27:     color_click_init();
   735   001236  ECED  F00E         	call	_color_click_init	;wreg free
   736   00123A                     
   737                           ;main.c: 28:     initDCmotorsPWM();
   738   00123A  ECDF  F00C         	call	_initDCmotorsPWM	;wreg free
   739   00123E                     
   740                           ;main.c: 29:     initUSART4();
   741   00123E  EC6C  F00F         	call	_initUSART4	;wreg free
   742   001242                     
   743                           ;main.c: 37:     unsigned char PWMcycle = T2PR;
   744   001242  CFBC F094          	movff	4028,main@PWMcycle	;volatile
   745   001246                     
   746                           ;main.c: 39:     struct DC_motor motorL, motorR;;main.c: 41:     motorL.power=0;
   747   001246  0E00               	movlw	0
   748   001248  0100               	movlb	0	; () banked
   749   00124A  6F95               	movwf	main@motorL& (0+255),b
   750   00124C                     
   751                           ; BSR set to: 0
   752                           ;main.c: 42:     motorL.direction=1;
   753   00124C  0E01               	movlw	1
   754   00124E  6F96               	movwf	(main@motorL+1)& (0+255),b
   755   001250                     
   756                           ; BSR set to: 0
   757                           ;main.c: 43:     motorL.brakemode=1;
   758   001250  0E01               	movlw	1
   759   001252  6F97               	movwf	(main@motorL+2)& (0+255),b
   760   001254                     
   761                           ; BSR set to: 0
   762                           ;main.c: 44:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   763   001254  0EAA               	movlw	170
   764   001256  6F9A               	movwf	(main@motorL+5)& (0+255),b
   765   001258  0E0F               	movlw	15
   766   00125A  6F9B               	movwf	(main@motorL+6)& (0+255),b
   767   00125C                     
   768                           ; BSR set to: 0
   769                           ;main.c: 45:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   770   00125C  0EA6               	movlw	166
   771   00125E  6F9C               	movwf	(main@motorL+7)& (0+255),b
   772   001260  0E0F               	movlw	15
   773   001262  6F9D               	movwf	(main@motorL+8)& (0+255),b
   774   001264                     
   775                           ; BSR set to: 0
   776                           ;main.c: 46:     motorL.PWMperiod=PWMcycle;
   777   001264  C094  F098         	movff	main@PWMcycle,main@motorL+3
   778   001268  6B99               	clrf	(main@motorL+4)& (0+255),b
   779   00126A                     
   780                           ; BSR set to: 0
   781                           ;main.c: 48:     motorR.power=0;
   782   00126A  0E00               	movlw	0
   783   00126C  6F9E               	movwf	main@motorR& (0+255),b
   784   00126E                     
   785                           ; BSR set to: 0
   786                           ;main.c: 49:     motorR.direction=1;
   787   00126E  0E01               	movlw	1
   788   001270  6F9F               	movwf	(main@motorR+1)& (0+255),b
   789   001272                     
   790                           ; BSR set to: 0
   791                           ;main.c: 50:     motorR.brakemode=1;
   792   001272  0E01               	movlw	1
   793   001274  6FA0               	movwf	(main@motorR+2)& (0+255),b
   794   001276                     
   795                           ; BSR set to: 0
   796                           ;main.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   797   001276  0E25               	movlw	37
   798   001278  6FA3               	movwf	(main@motorR+5)& (0+255),b
   799   00127A  0E0F               	movlw	15
   800   00127C  6FA4               	movwf	(main@motorR+6)& (0+255),b
   801   00127E                     
   802                           ; BSR set to: 0
   803                           ;main.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   804   00127E  0E21               	movlw	33
   805   001280  6FA5               	movwf	(main@motorR+7)& (0+255),b
   806   001282  0E0F               	movlw	15
   807   001284  6FA6               	movwf	(main@motorR+8)& (0+255),b
   808   001286                     
   809                           ; BSR set to: 0
   810                           ;main.c: 53:     motorR.PWMperiod=PWMcycle;
   811   001286  C094  F0A1         	movff	main@PWMcycle,main@motorR+3
   812   00128A  6BA2               	clrf	(main@motorR+4)& (0+255),b
   813   00128C                     
   814                           ; BSR set to: 0
   815                           ;main.c: 55:     setMotorPWM(&motorL);
   816   00128C  0E95               	movlw	low main@motorL
   817   00128E  6E0E               	movwf	setMotorPWM@m^0,c
   818   001290  0E00               	movlw	high main@motorL
   819   001292  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   820   001294  ECD4  F009         	call	_setMotorPWM	;wreg free
   821   001298                     
   822                           ;main.c: 56:     setMotorPWM(&motorR);
   823   001298  0E9E               	movlw	low main@motorR
   824   00129A  6E0E               	movwf	setMotorPWM@m^0,c
   825   00129C  0E00               	movlw	high main@motorR
   826   00129E  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   827   0012A0  ECD4  F009         	call	_setMotorPWM	;wreg free
   828   0012A4                     
   829                           ;main.c: 62:     unsigned char expected_values[8][3];;main.c: 63:     unsigned char norm
      +                          alised_values[8][3];;main.c: 64:     unsigned char master_closeness[9] = {17, 2, 12, 12,
      +                           10, 11, 12, 14, 16};
   830   0012A4  EE20  F0E5         	lfsr	2,main@F14639
   831   0012A8  EE10  F077         	lfsr	1,main@master_closeness
   832   0012AC  0E08               	movlw	8
   833   0012AE                     u1221:
   834   0012AE  CFDB FFE3          	movff	plusw2,plusw1
   835   0012B2  06E8               	decf	wreg,f,c
   836   0012B4  E2FC               	bc	u1221
   837   0012B6                     
   838                           ;main.c: 66:     volatile unsigned int red_read = 0;
   839   0012B6  0E00               	movlw	0
   840   0012B8  0100               	movlb	0	; () banked
   841   0012BA  6FA8               	movwf	(main@red_read+1)& (0+255),b	;volatile
   842   0012BC  0E00               	movlw	0
   843   0012BE  6FA7               	movwf	main@red_read& (0+255),b	;volatile
   844   0012C0                     
   845                           ; BSR set to: 0
   846                           ;main.c: 67:     volatile unsigned int green_read = 0;
   847   0012C0  0E00               	movlw	0
   848   0012C2  6FAA               	movwf	(main@green_read+1)& (0+255),b	;volatile
   849   0012C4  0E00               	movlw	0
   850   0012C6  6FA9               	movwf	main@green_read& (0+255),b	;volatile
   851   0012C8                     
   852                           ; BSR set to: 0
   853                           ;main.c: 68:     volatile unsigned int blue_read = 0;
   854   0012C8  0E00               	movlw	0
   855   0012CA  6FAC               	movwf	(main@blue_read+1)& (0+255),b	;volatile
   856   0012CC  0E00               	movlw	0
   857   0012CE  6FAB               	movwf	main@blue_read& (0+255),b	;volatile
   858   0012D0                     
   859                           ; BSR set to: 0
   860                           ;main.c: 114:     LATDbits.LATD7=0;
   861   0012D0  9E7C               	bcf	124,7,c	;volatile
   862   0012D2                     
   863                           ; BSR set to: 0
   864                           ;main.c: 115:     TRISDbits.TRISD7=0;
   865   0012D2  9E84               	bcf	132,7,c	;volatile
   866   0012D4                     l2392:
   867                           
   868                           ;main.c: 121:         red_read = color_read_Red();
   869   0012D4  ECEB  F00D         	call	_color_read_Red	;wreg free
   870   0012D8  C005  F0A7         	movff	?_color_read_Red,main@red_read	;volatile
   871   0012DC  C006  F0A8         	movff	?_color_read_Red+1,main@red_read+1	;volatile
   872   0012E0                     
   873                           ;main.c: 122:         blue_read = color_read_Blue();
   874   0012E0  EC3B  F00E         	call	_color_read_Blue	;wreg free
   875   0012E4  C005  F0AB         	movff	?_color_read_Blue,main@blue_read	;volatile
   876   0012E8  C006  F0AC         	movff	?_color_read_Blue+1,main@blue_read+1	;volatile
   877   0012EC                     
   878                           ;main.c: 123:         green_read = color_read_Green();
   879   0012EC  EC13  F00E         	call	_color_read_Green	;wreg free
   880   0012F0  C005  F0A9         	movff	?_color_read_Green,main@green_read	;volatile
   881   0012F4  C006  F0AA         	movff	?_color_read_Green+1,main@green_read+1	;volatile
   882   0012F8                     
   883                           ;main.c: 126:         sprintf(buf, "Raw %d, %d, %d \n", red_read, green_read, blue_read)
      +                          ;
   884   0012F8  0E80               	movlw	low main@buf
   885   0012FA  0100               	movlb	0	; () banked
   886   0012FC  6F60               	movwf	sprintf@s& (0+255),b
   887   0012FE  0E00               	movlw	high main@buf
   888   001300  6F61               	movwf	(sprintf@s+1)& (0+255),b
   889   001302  0E17               	movlw	low STR_1
   890   001304  6F62               	movwf	sprintf@fmt& (0+255),b
   891   001306  0E0E               	movlw	high STR_1
   892   001308  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   893   00130A  C0A7  F064         	movff	main@red_read,?_sprintf+4	;volatile
   894   00130E  C0A8  F065         	movff	main@red_read+1,?_sprintf+5	;volatile
   895   001312  C0A9  F066         	movff	main@green_read,?_sprintf+6	;volatile
   896   001316  C0AA  F067         	movff	main@green_read+1,?_sprintf+7	;volatile
   897   00131A  C0AB  F068         	movff	main@blue_read,?_sprintf+8	;volatile
   898   00131E  C0AC  F069         	movff	main@blue_read+1,?_sprintf+9	;volatile
   899   001322  EC9A  F00D         	call	_sprintf	;wreg free
   900   001326                     
   901                           ;main.c: 127:         sendStringSerial4(buf);
   902   001326  0E80               	movlw	low main@buf
   903   001328  6E02               	movwf	sendStringSerial4@string^0,c
   904   00132A  0E00               	movlw	high main@buf
   905   00132C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   906   00132E  EC07  F00F         	call	_sendStringSerial4	;wreg free
   907   001332                     
   908                           ;main.c: 128:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   909   001332  0E52               	movlw	82
   910   001334  6E5A               	movwf	(??_main+1)^0,c
   911   001336  0E2B               	movlw	43
   912   001338  6E59               	movwf	??_main^0,c
   913   00133A  0E00               	movlw	0
   914   00133C                     u1277:
   915   00133C  2EE8               	decfsz	wreg,f,c
   916   00133E  D7FE               	bra	u1277
   917   001340  2E59               	decfsz	??_main^0,f,c
   918   001342  D7FC               	bra	u1277
   919   001344  2E5A               	decfsz	(??_main+1)^0,f,c
   920   001346  D7FA               	bra	u1277
   921   001348  D000               	nop2	
   922   00134A                     
   923                           ;main.c: 130:         collect_avg_readings(&red_read, &green_read, &blue_read);
   924   00134A  0EA7               	movlw	low main@red_read
   925   00134C  6E0E               	movwf	collect_avg_readings@red_read^0,c
   926   00134E  0E00               	movlw	high main@red_read
   927   001350  6E0F               	movwf	(collect_avg_readings@red_read+1)^0,c
   928   001352  0EA9               	movlw	low main@green_read
   929   001354  6E10               	movwf	collect_avg_readings@green_read^0,c
   930   001356  0E00               	movlw	high main@green_read
   931   001358  6E11               	movwf	(collect_avg_readings@green_read+1)^0,c
   932   00135A  0EAB               	movlw	low main@blue_read
   933   00135C  6E12               	movwf	collect_avg_readings@blue_read^0,c
   934   00135E  0E00               	movlw	high main@blue_read
   935   001360  6E13               	movwf	(collect_avg_readings@blue_read+1)^0,c
   936   001362  ECE3  F00B         	call	_collect_avg_readings	;wreg free
   937   001366                     
   938                           ;main.c: 132:         sprintf(buf, "Averages %d, %d, %d \n", red_read, green_read, blue_
      +                          read);
   939   001366  0E80               	movlw	low main@buf
   940   001368  0100               	movlb	0	; () banked
   941   00136A  6F60               	movwf	sprintf@s& (0+255),b
   942   00136C  0E00               	movlw	high main@buf
   943   00136E  6F61               	movwf	(sprintf@s+1)& (0+255),b
   944   001370  0E01               	movlw	low STR_2
   945   001372  6F62               	movwf	sprintf@fmt& (0+255),b
   946   001374  0E0E               	movlw	high STR_2
   947   001376  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   948   001378  C0A7  F064         	movff	main@red_read,?_sprintf+4	;volatile
   949   00137C  C0A8  F065         	movff	main@red_read+1,?_sprintf+5	;volatile
   950   001380  C0A9  F066         	movff	main@green_read,?_sprintf+6	;volatile
   951   001384  C0AA  F067         	movff	main@green_read+1,?_sprintf+7	;volatile
   952   001388  C0AB  F068         	movff	main@blue_read,?_sprintf+8	;volatile
   953   00138C  C0AC  F069         	movff	main@blue_read+1,?_sprintf+9	;volatile
   954   001390  EC9A  F00D         	call	_sprintf	;wreg free
   955   001394                     
   956                           ;main.c: 133:         sendStringSerial4(buf);
   957   001394  0E80               	movlw	low main@buf
   958   001396  6E02               	movwf	sendStringSerial4@string^0,c
   959   001398  0E00               	movlw	high main@buf
   960   00139A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   961   00139C  EC07  F00F         	call	_sendStringSerial4	;wreg free
   962   0013A0  EF6A  F009         	goto	l2392
   963   0013A4  EF00  F000         	goto	start
   964   0013A8                     __end_of_main:
   965                           	callstack 0
   966                           
   967 ;; *************** function _sprintf *****************
   968 ;; Defined at:
   969 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  s               2    0[BANK0 ] PTR unsigned char 
   972 ;;		 -> main@buf(20), 
   973 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   974 ;;		 -> STR_2(22), STR_1(17), 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  f              11   12[BANK0 ] struct _IO_FILE
   977 ;;  ap              2   10[BANK0 ] PTR void [1]
   978 ;;		 -> ?_sprintf(2), 
   979 ;;  ret             2    0        int 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  2    0[BANK0 ] int 
   982 ;; Registers used:
   983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   989 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   990 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   992 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   993 ;;Total ram usage:       23 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 7
   996 ;; This function calls:
   997 ;;		_vfprintf
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text1
  1004   001B34                     __ptext1:
  1005                           	callstack 0
  1006   001B34                     _sprintf:
  1007                           	callstack 23
  1008   001B34  0E64               	movlw	low (?_sprintf+4)
  1009   001B36  0100               	movlb	0	; () banked
  1010   001B38  6F6A               	movwf	sprintf@ap& (0+255),b
  1011   001B3A  0E00               	movlw	high (?_sprintf+4)
  1012   001B3C  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1013   001B3E  C060  F06C         	movff	sprintf@s,sprintf@f
  1014   001B42  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1015   001B46                     
  1016                           ; BSR set to: 0
  1017   001B46  0E00               	movlw	0
  1018   001B48  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1019   001B4A  0E00               	movlw	0
  1020   001B4C  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1021   001B4E                     
  1022                           ; BSR set to: 0
  1023   001B4E  0E00               	movlw	0
  1024   001B50  6F76               	movwf	(sprintf@f+10)& (0+255),b
  1025   001B52  0E00               	movlw	0
  1026   001B54  6F75               	movwf	(sprintf@f+9)& (0+255),b
  1027   001B56                     
  1028                           ; BSR set to: 0
  1029   001B56  0E6C               	movlw	low sprintf@f
  1030   001B58  6E51               	movwf	vfprintf@fp^0,c
  1031   001B5A  0E00               	movlw	high sprintf@f
  1032   001B5C  6E52               	movwf	(vfprintf@fp+1)^0,c
  1033   001B5E  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1034   001B62  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1035   001B66  0E6A               	movlw	low sprintf@ap
  1036   001B68  6E55               	movwf	vfprintf@ap^0,c
  1037   001B6A  0E00               	movlw	high sprintf@ap
  1038   001B6C  6E56               	movwf	(vfprintf@ap+1)^0,c
  1039   001B6E  EC63  F00E         	call	_vfprintf	;wreg free
  1040   001B72  0100               	movlb	0	; () banked
  1041   001B74  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1042   001B76  2560               	addwf	sprintf@s& (0+255),w,b
  1043   001B78  6ED9               	movwf	fsr2l,c
  1044   001B7A  5170               	movf	(sprintf@f+4)& (0+255),w,b
  1045   001B7C  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1046   001B7E  6EDA               	movwf	fsr2h,c
  1047   001B80  0E00               	movlw	0
  1048   001B82  6EDF               	movwf	indf2,c
  1049   001B84                     
  1050                           ; BSR set to: 0
  1051   001B84  0012               	return		;funcret
  1052   001B86                     __end_of_sprintf:
  1053                           	callstack 0
  1054                           
  1055 ;; *************** function _vfprintf *****************
  1056 ;; Defined at:
  1057 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1060 ;;		 -> sprintf@f(11), 
  1061 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1062 ;;		 -> STR_2(22), STR_1(17), 
  1063 ;;  ap              2   84[COMRAM] PTR PTR void 
  1064 ;;		 -> sprintf@ap(2), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1067 ;;		 -> STR_2(22), STR_1(17), 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  2   80[COMRAM] int 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1077 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;Total ram usage:        8 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 6
  1084 ;; This function calls:
  1085 ;;		_vfpfcnvrt
  1086 ;; This function is called by:
  1087 ;;		_sprintf
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text2
  1092   001CC6                     __ptext2:
  1093                           	callstack 0
  1094   001CC6                     _vfprintf:
  1095                           	callstack 23
  1096   001CC6                     
  1097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1098   001CC6  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1099   001CCA  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1102   001CCE  EF77  F00E         	goto	l2102
  1103   001CD2                     l2100:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1106   001CD2  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1107   001CD6  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1108   001CDA  0E57               	movlw	low vfprintf@cfmt
  1109   001CDC  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1110   001CDE  0E00               	movlw	high vfprintf@cfmt
  1111   001CE0  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1112   001CE2  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1113   001CE6  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1114   001CEA  EC3C  F00B         	call	_vfpfcnvrt	;wreg free
  1115   001CEE                     l2102:
  1116                           
  1117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1118   001CEE  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1119   001CF2  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1120   001CF6                     	if	0	;tblptru may be non-zero
  1121   001CF6                     	endif
  1122   001CF6                     	if	0	;tblptru may be non-zero
  1123   001CF6                     	endif
  1124   001CF6  0008               	tblrd		*
  1125   001CF8  50F5               	movf	tablat,w,c
  1126   001CFA  0900               	iorlw	0
  1127   001CFC  A4D8               	btfss	status,2,c
  1128   001CFE  EF83  F00E         	goto	u1081
  1129   001D02  EF85  F00E         	goto	u1080
  1130   001D06                     u1081:
  1131   001D06  EF69  F00E         	goto	l2100
  1132   001D0A                     u1080:
  1133   001D0A                     
  1134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1135   001D0A  0E00               	movlw	0
  1136   001D0C  6E52               	movwf	(?_vfprintf+1)^0,c
  1137   001D0E  0E00               	movlw	0
  1138   001D10  6E51               	movwf	?_vfprintf^0,c
  1139   001D12  0012               	return		;funcret
  1140   001D14                     __end_of_vfprintf:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _vfpfcnvrt *****************
  1144 ;; Defined at:
  1145 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1148 ;;		 -> sprintf@f(11), 
  1149 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1150 ;;		 -> vfprintf@cfmt(2), 
  1151 ;;  ap              2   66[COMRAM] PTR PTR void 
  1152 ;;		 -> sprintf@ap(2), 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  convarg         8   70[COMRAM] struct .
  1155 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1156 ;;		 -> STR_2(22), STR_1(17), 
  1157 ;;  i               2    0        int 
  1158 ;;  done            2    0        int 
  1159 ;;  c               1    0        unsigned char 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1169 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1173 ;;Total ram usage:       18 bytes
  1174 ;; Hardware stack levels used: 1
  1175 ;; Hardware stack levels required when called: 5
  1176 ;; This function calls:
  1177 ;;		_dtoa
  1178 ;;		_fputc
  1179 ;; This function is called by:
  1180 ;;		_vfprintf
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text3
  1185   001678                     __ptext3:
  1186                           	callstack 0
  1187   001678                     _vfpfcnvrt:
  1188                           	callstack 23
  1189   001678                     
  1190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1191   001678  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1192   00167C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1193   001680  CFDE FFF6          	movff	postinc2,tblptrl
  1194   001684  CFDD FFF7          	movff	postdec2,tblptrh
  1195   001688                     	if	0	;tblptru may be non-zero
  1196   001688                     	endif
  1197   001688                     	if	0	;tblptru may be non-zero
  1198   001688                     	endif
  1199   001688  0008               	tblrd		*
  1200   00168A  50F5               	movf	tablat,w,c
  1201   00168C  0A25               	xorlw	37
  1202   00168E  A4D8               	btfss	status,2,c
  1203   001690  EF4C  F00B         	goto	u1011
  1204   001694  EF4E  F00B         	goto	u1010
  1205   001698                     u1011:
  1206   001698  EFCE  F00B         	goto	l2028
  1207   00169C                     u1010:
  1208   00169C                     
  1209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1210   00169C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1211   0016A0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1212   0016A4  2ADE               	incf	postinc2,f,c
  1213   0016A6  0E00               	movlw	0
  1214   0016A8  22DD               	addwfc	postdec2,f,c
  1215   0016AA                     
  1216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1217   0016AA  0E00               	movlw	0
  1218   0016AC  0100               	movlb	0	; () banked
  1219   0016AE  6FC2               	movwf	(_width+1)& (0+255),b
  1220   0016B0  0E00               	movlw	0
  1221   0016B2  6FC1               	movwf	_width& (0+255),b
  1222   0016B4  C0C1  F05B         	movff	_width,_flags
  1223   0016B8                     
  1224                           ; BSR set to: 0
  1225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1226   0016B8  69C3               	setf	_prec& (0+255),b
  1227   0016BA  69C4               	setf	(_prec+1)& (0+255),b
  1228   0016BC                     
  1229                           ; BSR set to: 0
  1230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1231   0016BC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1232   0016C0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1233   0016C4  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1234   0016C8  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1235   0016CC                     
  1236                           ; BSR set to: 0
  1237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1238   0016CC  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1239   0016D0  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1240   0016D4                     	if	0	;tblptru may be non-zero
  1241   0016D4                     	endif
  1242   0016D4                     	if	0	;tblptru may be non-zero
  1243   0016D4                     	endif
  1244   0016D4  0008               	tblrd		*
  1245   0016D6  50F5               	movf	tablat,w,c
  1246   0016D8  0A64               	xorlw	100
  1247   0016DA  B4D8               	btfsc	status,2,c
  1248   0016DC  EF72  F00B         	goto	u1021
  1249   0016E0  EF74  F00B         	goto	u1020
  1250   0016E4                     u1021:
  1251   0016E4  EF82  F00B         	goto	l2018
  1252   0016E8                     u1020:
  1253   0016E8                     
  1254                           ; BSR set to: 0
  1255   0016E8  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1256   0016EC  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1257   0016F0                     	if	0	;tblptru may be non-zero
  1258   0016F0                     	endif
  1259   0016F0                     	if	0	;tblptru may be non-zero
  1260   0016F0                     	endif
  1261   0016F0  0008               	tblrd		*
  1262   0016F2  50F5               	movf	tablat,w,c
  1263   0016F4  0A69               	xorlw	105
  1264   0016F6  A4D8               	btfss	status,2,c
  1265   0016F8  EF80  F00B         	goto	u1031
  1266   0016FC  EF82  F00B         	goto	u1030
  1267   001700                     u1031:
  1268   001700  EFC5  F00B         	goto	l2024
  1269   001704                     u1030:
  1270   001704                     l2018:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1274   001704  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1275   001708  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1276   00170C  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1277   001710  0E02               	movlw	2
  1278   001712  26DE               	addwf	postinc2,f,c
  1279   001714  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1280   001718  0E00               	movlw	0
  1281   00171A  22DD               	addwfc	postdec2,f,c
  1282   00171C  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1283   001720  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1284   001724  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1285   001728  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1286   00172C  0E00               	movlw	0
  1287   00172E  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1288   001730  0EFF               	movlw	-1
  1289   001732  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1290   001734  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1291   001736  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1292   001738  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1293   00173A  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1294   00173C  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1297   00173E  0E01               	movlw	1
  1298   001740  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1299   001742  6E45               	movwf	??_vfpfcnvrt^0,c
  1300   001744  0E00               	movlw	0
  1301   001746  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1302   001748  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1303   00174A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1304   00174E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1305   001752  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1306   001756  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1307   00175A                     
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1310   00175A  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1311   00175E  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1312   001762  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1313   001766  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1314   00176A  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1315   00176E  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1316   001772  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1317   001776  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1318   00177A  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1319   00177E  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1320   001782  EC15  F007         	call	_dtoa	;wreg free
  1321   001786  EFE2  F00B         	goto	l1096
  1322   00178A                     l2024:
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1325   00178A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1326   00178E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1327   001792  2ADE               	incf	postinc2,f,c
  1328   001794  0E00               	movlw	0
  1329   001796  22DD               	addwfc	postdec2,f,c
  1330   001798  EFE2  F00B         	goto	l1096
  1331   00179C                     l2028:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1334   00179C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335   0017A0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336   0017A4  CFDE FFF6          	movff	postinc2,tblptrl
  1337   0017A8  CFDD FFF7          	movff	postdec2,tblptrh
  1338   0017AC                     	if	0	;tblptru may be non-zero
  1339   0017AC                     	endif
  1340   0017AC                     	if	0	;tblptru may be non-zero
  1341   0017AC                     	endif
  1342   0017AC  0008               	tblrd		*
  1343   0017AE  50F5               	movf	tablat,w,c
  1344   0017B0  6E01               	movwf	fputc@c^0,c
  1345   0017B2  6A02               	clrf	(fputc@c+1)^0,c
  1346   0017B4  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1347   0017B8  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1348   0017BC  EC7A  F00C         	call	_fputc	;wreg free
  1349   0017C0  EFC5  F00B         	goto	l2024
  1350   0017C4                     l1096:
  1351   0017C4  0012               	return		;funcret
  1352   0017C6                     __end_of_vfpfcnvrt:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _dtoa *****************
  1356 ;; Defined at:
  1357 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1360 ;;		 -> sprintf@f(11), 
  1361 ;;  d               8   29[COMRAM] long long 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  n               8   51[COMRAM] long long 
  1364 ;;  i               2   59[COMRAM] int 
  1365 ;;  w               2   49[COMRAM] int 
  1366 ;;  p               2   47[COMRAM] int 
  1367 ;;  s               1   61[COMRAM] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1377 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1379 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;Total ram usage:       35 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 4
  1384 ;; This function calls:
  1385 ;;		___aodiv
  1386 ;;		___aomod
  1387 ;;		_abs
  1388 ;;		_pad
  1389 ;; This function is called by:
  1390 ;;		_vfpfcnvrt
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text4
  1395   000E2A                     __ptext4:
  1396                           	callstack 0
  1397   000E2A                     _dtoa:
  1398                           	callstack 23
  1399   000E2A                     
  1400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1401   000E2A  C01E  F034         	movff	dtoa@d,dtoa@n
  1402   000E2E  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1403   000E32  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1404   000E36  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1405   000E3A  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1406   000E3E  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1407   000E42  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1408   000E46  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1409   000E4A                     
  1410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1411   000E4A  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1412   000E4C  EF2A  F007         	goto	u891
  1413   000E50  EF2D  F007         	goto	u890
  1414   000E54                     u891:
  1415   000E54  0E01               	movlw	1
  1416   000E56  EF2E  F007         	goto	u900
  1417   000E5A                     u890:
  1418   000E5A  0E00               	movlw	0
  1419   000E5C                     u900:
  1420   000E5C  6E3E               	movwf	dtoa@s^0,c
  1421   000E5E                     
  1422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1423   000E5E  503E               	movf	dtoa@s^0,w,c
  1424   000E60  B4D8               	btfsc	status,2,c
  1425   000E62  EF35  F007         	goto	u911
  1426   000E66  EF37  F007         	goto	u910
  1427   000E6A                     u911:
  1428   000E6A  EF47  F007         	goto	l1930
  1429   000E6E                     u910:
  1430   000E6E                     
  1431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1432   000E6E  1E3B               	comf	(dtoa@n+7)^0,f,c
  1433   000E70  1E3A               	comf	(dtoa@n+6)^0,f,c
  1434   000E72  1E39               	comf	(dtoa@n+5)^0,f,c
  1435   000E74  1E38               	comf	(dtoa@n+4)^0,f,c
  1436   000E76  1E37               	comf	(dtoa@n+3)^0,f,c
  1437   000E78  1E36               	comf	(dtoa@n+2)^0,f,c
  1438   000E7A  1E35               	comf	(dtoa@n+1)^0,f,c
  1439   000E7C  6C34               	negf	dtoa@n^0,c
  1440   000E7E  0E00               	movlw	0
  1441   000E80  2235               	addwfc	(dtoa@n+1)^0,f,c
  1442   000E82  2236               	addwfc	(dtoa@n+2)^0,f,c
  1443   000E84  2237               	addwfc	(dtoa@n+3)^0,f,c
  1444   000E86  2238               	addwfc	(dtoa@n+4)^0,f,c
  1445   000E88  2239               	addwfc	(dtoa@n+5)^0,f,c
  1446   000E8A  223A               	addwfc	(dtoa@n+6)^0,f,c
  1447   000E8C  223B               	addwfc	(dtoa@n+7)^0,f,c
  1448   000E8E                     l1930:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1451   000E8E  0100               	movlb	0	; () banked
  1452   000E90  BFC4               	btfsc	(_prec+1)& (0+255),7,b
  1453   000E92  EF55  F007         	goto	u920
  1454   000E96  51C4               	movf	(_prec+1)& (0+255),w,b
  1455   000E98  E106               	bnz	u921
  1456   000E9A  05C3               	decf	_prec& (0+255),w,b
  1457   000E9C  B0D8               	btfsc	status,0,c
  1458   000E9E  EF53  F007         	goto	u921
  1459   000EA2  EF55  F007         	goto	u920
  1460   000EA6                     u921:
  1461   000EA6  EF5B  F007         	goto	l1075
  1462   000EAA                     u920:
  1463   000EAA                     
  1464                           ; BSR set to: 0
  1465   000EAA  0E00               	movlw	0
  1466   000EAC  6E31               	movwf	(dtoa@p+1)^0,c
  1467   000EAE  0E01               	movlw	1
  1468   000EB0  6E30               	movwf	dtoa@p^0,c
  1469   000EB2  EF5F  F007         	goto	l1077
  1470   000EB6                     l1075:
  1471                           
  1472                           ; BSR set to: 0
  1473   000EB6  C0C3  F030         	movff	_prec,dtoa@p
  1474   000EBA  C0C4  F031         	movff	_prec+1,dtoa@p+1
  1475   000EBE                     l1077:
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1479   000EBE  C0C1  F032         	movff	_width,dtoa@w
  1480   000EC2  C0C2  F033         	movff	_width+1,dtoa@w+1
  1481   000EC6                     
  1482                           ; BSR set to: 0
  1483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1484   000EC6  503E               	movf	dtoa@s^0,w,c
  1485   000EC8  B4D8               	btfsc	status,2,c
  1486   000ECA  EF69  F007         	goto	u931
  1487   000ECE  EF6B  F007         	goto	u930
  1488   000ED2                     u931:
  1489   000ED2  EF82  F007         	goto	l1078
  1490   000ED6                     u930:
  1491   000ED6                     
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1494   000ED6  0632               	decf	dtoa@w^0,f,c
  1495   000ED8  A0D8               	btfss	status,0,c
  1496   000EDA  0633               	decf	(dtoa@w+1)^0,f,c
  1497   000EDC                     
  1498                           ; BSR set to: 0
  1499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1500   000EDC  503E               	movf	dtoa@s^0,w,c
  1501   000EDE  A4D8               	btfss	status,2,c
  1502   000EE0  EF74  F007         	goto	u941
  1503   000EE4  EF76  F007         	goto	u940
  1504   000EE8                     u941:
  1505   000EE8  EF7C  F007         	goto	l1942
  1506   000EEC                     u940:
  1507   000EEC                     
  1508                           ; BSR set to: 0
  1509   000EEC  0E00               	movlw	0
  1510   000EEE  6E2F               	movwf	(_dtoa$2114+1)^0,c
  1511   000EF0  0E2B               	movlw	43
  1512   000EF2  6E2E               	movwf	_dtoa$2114^0,c
  1513   000EF4  EF80  F007         	goto	l1944
  1514   000EF8                     l1942:
  1515                           
  1516                           ; BSR set to: 0
  1517   000EF8  0E00               	movlw	0
  1518   000EFA  6E2F               	movwf	(_dtoa$2114+1)^0,c
  1519   000EFC  0E2D               	movlw	45
  1520   000EFE  6E2E               	movwf	_dtoa$2114^0,c
  1521   000F00                     l1944:
  1522                           
  1523                           ; BSR set to: 0
  1524   000F00  C02E  F03E         	movff	_dtoa$2114,dtoa@s
  1525   000F04                     l1078:
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1529   000F04  0E00               	movlw	0
  1530   000F06  6E3D               	movwf	(dtoa@i+1)^0,c
  1531   000F08  0E1F               	movlw	31
  1532   000F0A  6E3C               	movwf	dtoa@i^0,c
  1533   000F0C                     
  1534                           ; BSR set to: 0
  1535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1536   000F0C  0E00               	movlw	0
  1537   000F0E  6FE4               	movwf	(_dbuf+31)& (0+255),b
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1540   000F10  EF06  F008         	goto	l1958
  1541   000F14                     l1948:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1544   000F14  063C               	decf	dtoa@i^0,f,c
  1545   000F16  A0D8               	btfss	status,0,c
  1546   000F18  063D               	decf	(dtoa@i+1)^0,f,c
  1547   000F1A                     
  1548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1549   000F1A  0EC5               	movlw	low _dbuf
  1550   000F1C  243C               	addwf	dtoa@i^0,w,c
  1551   000F1E  6ED9               	movwf	fsr2l,c
  1552   000F20  0E00               	movlw	high _dbuf
  1553   000F22  203D               	addwfc	(dtoa@i+1)^0,w,c
  1554   000F24  6EDA               	movwf	fsr2h,c
  1555   000F26  C034  F001         	movff	dtoa@n,___aomod@dividend
  1556   000F2A  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1557   000F2E  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1558   000F32  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1559   000F36  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1560   000F3A  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1561   000F3E  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1562   000F42  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1563   000F46  0E0A               	movlw	10
  1564   000F48  6E09               	movwf	___aomod@divisor^0,c
  1565   000F4A  0E00               	movlw	0
  1566   000F4C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1567   000F4E  0E00               	movlw	0
  1568   000F50  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1569   000F52  0E00               	movlw	0
  1570   000F54  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1571   000F56  0E00               	movlw	0
  1572   000F58  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1573   000F5A  0E00               	movlw	0
  1574   000F5C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1575   000F5E  0E00               	movlw	0
  1576   000F60  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1577   000F62  0E00               	movlw	0
  1578   000F64  6E10               	movwf	(___aomod@divisor+7)^0,c
  1579   000F66  EC8A  F00A         	call	___aomod	;wreg free
  1580   000F6A  C001  F026         	movff	?___aomod,??_dtoa
  1581   000F6E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1582   000F72  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1583   000F76  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1584   000F7A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1585   000F7E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1586   000F82  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1587   000F86  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1588   000F8A  C026  F013         	movff	??_dtoa,abs@a
  1589   000F8E  C027  F014         	movff	??_dtoa+1,abs@a+1
  1590   000F92  ECCD  F00E         	call	_abs	;wreg free
  1591   000F96  5013               	movf	?_abs^0,w,c
  1592   000F98  0F30               	addlw	48
  1593   000F9A  6EDF               	movwf	indf2,c
  1594   000F9C                     
  1595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1596   000F9C  0630               	decf	dtoa@p^0,f,c
  1597   000F9E  A0D8               	btfss	status,0,c
  1598   000FA0  0631               	decf	(dtoa@p+1)^0,f,c
  1599   000FA2                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1601   000FA2  0632               	decf	dtoa@w^0,f,c
  1602   000FA4  A0D8               	btfss	status,0,c
  1603   000FA6  0633               	decf	(dtoa@w+1)^0,f,c
  1604   000FA8                     
  1605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1606   000FA8  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1607   000FAC  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1608   000FB0  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1609   000FB4  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1610   000FB8  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1611   000FBC  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1612   000FC0  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1613   000FC4  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1614   000FC8  0E0A               	movlw	10
  1615   000FCA  6E09               	movwf	___aodiv@divisor^0,c
  1616   000FCC  0E00               	movlw	0
  1617   000FCE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1618   000FD0  0E00               	movlw	0
  1619   000FD2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1620   000FD4  0E00               	movlw	0
  1621   000FD6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1622   000FD8  0E00               	movlw	0
  1623   000FDA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1624   000FDC  0E00               	movlw	0
  1625   000FDE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1626   000FE0  0E00               	movlw	0
  1627   000FE2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1628   000FE4  0E00               	movlw	0
  1629   000FE6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1630   000FE8  EC53  F008         	call	___aodiv	;wreg free
  1631   000FEC  C001  F034         	movff	?___aodiv,dtoa@n
  1632   000FF0  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1633   000FF4  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1634   000FF8  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1635   000FFC  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1636   001000  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1637   001004  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1638   001008  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1639   00100C                     l1958:
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1642   00100C  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1643   00100E  EF11  F008         	goto	u951
  1644   001012  503D               	movf	(dtoa@i+1)^0,w,c
  1645   001014  E108               	bnz	u950
  1646   001016  043C               	decf	dtoa@i^0,w,c
  1647   001018  A0D8               	btfss	status,0,c
  1648   00101A  EF11  F008         	goto	u951
  1649   00101E  EF13  F008         	goto	u950
  1650   001022                     u951:
  1651   001022  EF2F  F008         	goto	l1964
  1652   001026                     u950:
  1653   001026  5034               	movf	dtoa@n^0,w,c
  1654   001028  1035               	iorwf	(dtoa@n+1)^0,w,c
  1655   00102A  1036               	iorwf	(dtoa@n+2)^0,w,c
  1656   00102C  1037               	iorwf	(dtoa@n+3)^0,w,c
  1657   00102E  1038               	iorwf	(dtoa@n+4)^0,w,c
  1658   001030  1039               	iorwf	(dtoa@n+5)^0,w,c
  1659   001032  103A               	iorwf	(dtoa@n+6)^0,w,c
  1660   001034  103B               	iorwf	(dtoa@n+7)^0,w,c
  1661   001036  A4D8               	btfss	status,2,c
  1662   001038  EF20  F008         	goto	u961
  1663   00103C  EF22  F008         	goto	u960
  1664   001040                     u961:
  1665   001040  EF8A  F007         	goto	l1948
  1666   001044                     u960:
  1667   001044  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1668   001046  EF2F  F008         	goto	u970
  1669   00104A  5031               	movf	(dtoa@p+1)^0,w,c
  1670   00104C  E106               	bnz	u971
  1671   00104E  0430               	decf	dtoa@p^0,w,c
  1672   001050  B0D8               	btfsc	status,0,c
  1673   001052  EF2D  F008         	goto	u971
  1674   001056  EF2F  F008         	goto	u970
  1675   00105A                     u971:
  1676   00105A  EF8A  F007         	goto	l1948
  1677   00105E                     u970:
  1678   00105E                     l1964:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1681   00105E  503E               	movf	dtoa@s^0,w,c
  1682   001060  B4D8               	btfsc	status,2,c
  1683   001062  EF35  F008         	goto	u981
  1684   001066  EF37  F008         	goto	u980
  1685   00106A                     u981:
  1686   00106A  EF42  F008         	goto	l1970
  1687   00106E                     u980:
  1688   00106E                     
  1689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1690   00106E  063C               	decf	dtoa@i^0,f,c
  1691   001070  A0D8               	btfss	status,0,c
  1692   001072  063D               	decf	(dtoa@i+1)^0,f,c
  1693   001074                     
  1694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1695   001074  0EC5               	movlw	low _dbuf
  1696   001076  243C               	addwf	dtoa@i^0,w,c
  1697   001078  6ED9               	movwf	fsr2l,c
  1698   00107A  0E00               	movlw	high _dbuf
  1699   00107C  203D               	addwfc	(dtoa@i+1)^0,w,c
  1700   00107E  6EDA               	movwf	fsr2h,c
  1701   001080  C03E  FFDF         	movff	dtoa@s,indf2
  1702   001084                     l1970:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1705   001084  C01C  F011         	movff	dtoa@fp,pad@fp
  1706   001088  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1707   00108C  0EC5               	movlw	low _dbuf
  1708   00108E  243C               	addwf	dtoa@i^0,w,c
  1709   001090  6E13               	movwf	pad@buf^0,c
  1710   001092  0E00               	movlw	high _dbuf
  1711   001094  203D               	addwfc	(dtoa@i+1)^0,w,c
  1712   001096  6E14               	movwf	(pad@buf+1)^0,c
  1713   001098  C032  F015         	movff	dtoa@w,pad@p
  1714   00109C  C033  F016         	movff	dtoa@w+1,pad@p+1
  1715   0010A0  EC23  F00D         	call	_pad	;wreg free
  1716   0010A4  0012               	return		;funcret
  1717   0010A6                     __end_of_dtoa:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _pad *****************
  1721 ;; Defined at:
  1722 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1725 ;;		 -> sprintf@f(11), 
  1726 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1727 ;;		 -> dbuf(32), 
  1728 ;;  p               2   20[COMRAM] int 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  w               2   25[COMRAM] int 
  1731 ;;  i               2   23[COMRAM] int 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1741 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1745 ;;Total ram usage:       11 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 3
  1748 ;; This function calls:
  1749 ;;		_fputc
  1750 ;;		_fputs
  1751 ;; This function is called by:
  1752 ;;		_dtoa
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text5
  1757   001A46                     __ptext5:
  1758                           	callstack 0
  1759   001A46                     _pad:
  1760                           	callstack 23
  1761   001A46                     
  1762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1763   001A46  BE16               	btfsc	(pad@p+1)^0,7,c
  1764   001A48  EF28  F00D         	goto	u841
  1765   001A4C  EF2A  F00D         	goto	u840
  1766   001A50                     u841:
  1767   001A50  EF30  F00D         	goto	l1904
  1768   001A54                     u840:
  1769   001A54  C015  F01A         	movff	pad@p,pad@w
  1770   001A58  C016  F01B         	movff	pad@p+1,pad@w+1
  1771   001A5C  EF34  F00D         	goto	l1066
  1772   001A60                     l1904:
  1773   001A60  0E00               	movlw	0
  1774   001A62  6E1B               	movwf	(pad@w+1)^0,c
  1775   001A64  0E00               	movlw	0
  1776   001A66  6E1A               	movwf	pad@w^0,c
  1777   001A68                     l1066:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1780   001A68  0E00               	movlw	0
  1781   001A6A  6E19               	movwf	(pad@i+1)^0,c
  1782   001A6C  0E00               	movlw	0
  1783   001A6E  6E18               	movwf	pad@i^0,c
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1786   001A70  EF46  F00D         	goto	l1910
  1787   001A74                     l1906:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1790   001A74  0E00               	movlw	0
  1791   001A76  6E02               	movwf	(fputc@c+1)^0,c
  1792   001A78  0E20               	movlw	32
  1793   001A7A  6E01               	movwf	fputc@c^0,c
  1794   001A7C  C011  F003         	movff	pad@fp,fputc@fp
  1795   001A80  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1796   001A84  EC7A  F00C         	call	_fputc	;wreg free
  1797   001A88                     
  1798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1799   001A88  4A18               	infsnz	pad@i^0,f,c
  1800   001A8A  2A19               	incf	(pad@i+1)^0,f,c
  1801   001A8C                     l1910:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1804   001A8C  501A               	movf	pad@w^0,w,c
  1805   001A8E  5C18               	subwf	pad@i^0,w,c
  1806   001A90  5019               	movf	(pad@i+1)^0,w,c
  1807   001A92  0A80               	xorlw	128
  1808   001A94  6E17               	movwf	??_pad^0,c
  1809   001A96  501B               	movf	(pad@w+1)^0,w,c
  1810   001A98  0A80               	xorlw	128
  1811   001A9A  5817               	subwfb	??_pad^0,w,c
  1812   001A9C  A0D8               	btfss	status,0,c
  1813   001A9E  EF53  F00D         	goto	u851
  1814   001AA2  EF55  F00D         	goto	u850
  1815   001AA6                     u851:
  1816   001AA6  EF3A  F00D         	goto	l1906
  1817   001AAA                     u850:
  1818   001AAA                     
  1819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1820   001AAA  C013  F00A         	movff	pad@buf,fputs@s
  1821   001AAE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1822   001AB2  C011  F00C         	movff	pad@fp,fputs@fp
  1823   001AB6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1824   001ABA  EC8A  F00E         	call	_fputs	;wreg free
  1825   001ABE  0012               	return		;funcret
  1826   001AC0                     __end_of_pad:
  1827                           	callstack 0
  1828                           
  1829 ;; *************** function _fputs *****************
  1830 ;; Defined at:
  1831 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1834 ;;		 -> dbuf(32), 
  1835 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1836 ;;		 -> sprintf@f(11), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  i               2   14[COMRAM] int 
  1839 ;;  c               1   13[COMRAM] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2    9[COMRAM] int 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;Total ram usage:        7 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 2
  1856 ;; This function calls:
  1857 ;;		_fputc
  1858 ;; This function is called by:
  1859 ;;		_pad
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text6
  1864   001D14                     __ptext6:
  1865                           	callstack 0
  1866   001D14                     _fputs:
  1867                           	callstack 23
  1868   001D14  0E00               	movlw	0
  1869   001D16  6E10               	movwf	(fputs@i+1)^0,c
  1870   001D18  0E00               	movlw	0
  1871   001D1A  6E0F               	movwf	fputs@i^0,c
  1872   001D1C  EF9B  F00E         	goto	l1818
  1873   001D20                     l1814:
  1874   001D20  C00E  F001         	movff	fputs@c,fputc@c
  1875   001D24  6A02               	clrf	(fputc@c+1)^0,c
  1876   001D26  C00C  F003         	movff	fputs@fp,fputc@fp
  1877   001D2A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1878   001D2E  EC7A  F00C         	call	_fputc	;wreg free
  1879   001D32  4A0F               	infsnz	fputs@i^0,f,c
  1880   001D34  2A10               	incf	(fputs@i+1)^0,f,c
  1881   001D36                     l1818:
  1882   001D36  500F               	movf	fputs@i^0,w,c
  1883   001D38  240A               	addwf	fputs@s^0,w,c
  1884   001D3A  6ED9               	movwf	fsr2l,c
  1885   001D3C  5010               	movf	(fputs@i+1)^0,w,c
  1886   001D3E  200B               	addwfc	(fputs@s+1)^0,w,c
  1887   001D40  6EDA               	movwf	fsr2h,c
  1888   001D42  50DF               	movf	indf2,w,c
  1889   001D44  6E0E               	movwf	fputs@c^0,c
  1890   001D46  500E               	movf	fputs@c^0,w,c
  1891   001D48  A4D8               	btfss	status,2,c
  1892   001D4A  EFA9  F00E         	goto	u701
  1893   001D4E  EFAB  F00E         	goto	u700
  1894   001D52                     u701:
  1895   001D52  EF90  F00E         	goto	l1814
  1896   001D56                     u700:
  1897   001D56  0012               	return		;funcret
  1898   001D58                     __end_of_fputs:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _fputc *****************
  1902 ;; Defined at:
  1903 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  c               2    0[COMRAM] int 
  1906 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1907 ;;		 -> sprintf@f(11), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  2    0[COMRAM] int 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;Total ram usage:        9 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 1
  1926 ;; This function calls:
  1927 ;;		_putch
  1928 ;; This function is called by:
  1929 ;;		_pad
  1930 ;;		_vfpfcnvrt
  1931 ;;		_fputs
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text7
  1936   0018F4                     __ptext7:
  1937                           	callstack 0
  1938   0018F4                     _fputc:
  1939                           	callstack 26
  1940   0018F4  5003               	movf	fputc@fp^0,w,c
  1941   0018F6  1004               	iorwf	(fputc@fp+1)^0,w,c
  1942   0018F8  B4D8               	btfsc	status,2,c
  1943   0018FA  EF81  F00C         	goto	u661
  1944   0018FE  EF83  F00C         	goto	u660
  1945   001902                     u661:
  1946   001902  EF8C  F00C         	goto	l1802
  1947   001906                     u660:
  1948   001906  5003               	movf	fputc@fp^0,w,c
  1949   001908  1004               	iorwf	(fputc@fp+1)^0,w,c
  1950   00190A  A4D8               	btfss	status,2,c
  1951   00190C  EF8A  F00C         	goto	u671
  1952   001910  EF8C  F00C         	goto	u670
  1953   001914                     u671:
  1954   001914  EF91  F00C         	goto	l1804
  1955   001918                     u670:
  1956   001918                     l1802:
  1957   001918  5001               	movf	fputc@c^0,w,c
  1958   00191A  ECB2  F00F         	call	_putch
  1959   00191E  EFDE  F00C         	goto	l1121
  1960   001922                     l1804:
  1961   001922  EE20 F009          	lfsr	2,9
  1962   001926  5003               	movf	fputc@fp^0,w,c
  1963   001928  26D9               	addwf	fsr2l,f,c
  1964   00192A  5004               	movf	(fputc@fp+1)^0,w,c
  1965   00192C  22DA               	addwfc	fsr2h,f,c
  1966   00192E  50DE               	movf	postinc2,w,c
  1967   001930  10DE               	iorwf	postinc2,w,c
  1968   001932  B4D8               	btfsc	status,2,c
  1969   001934  EF9E  F00C         	goto	u681
  1970   001938  EFA0  F00C         	goto	u680
  1971   00193C                     u681:
  1972   00193C  EFBB  F00C         	goto	l1808
  1973   001940                     u680:
  1974   001940  EE20 F009          	lfsr	2,9
  1975   001944  5003               	movf	fputc@fp^0,w,c
  1976   001946  26D9               	addwf	fsr2l,f,c
  1977   001948  5004               	movf	(fputc@fp+1)^0,w,c
  1978   00194A  22DA               	addwfc	fsr2h,f,c
  1979   00194C  EE10 F003          	lfsr	1,3
  1980   001950  5003               	movf	fputc@fp^0,w,c
  1981   001952  26E1               	addwf	fsr1l,f,c
  1982   001954  5004               	movf	(fputc@fp+1)^0,w,c
  1983   001956  22E2               	addwfc	fsr1h,f,c
  1984   001958  50DE               	movf	postinc2,w,c
  1985   00195A  5CE6               	subwf	postinc1,w,c
  1986   00195C  50E6               	movf	postinc1,w,c
  1987   00195E  0A80               	xorlw	128
  1988   001960  6E09               	movwf	(??_fputc+4)^0,c
  1989   001962  50DE               	movf	postinc2,w,c
  1990   001964  0A80               	xorlw	128
  1991   001966  5809               	subwfb	(??_fputc+4)^0,w,c
  1992   001968  B0D8               	btfsc	status,0,c
  1993   00196A  EFB9  F00C         	goto	u691
  1994   00196E  EFBB  F00C         	goto	u690
  1995   001972                     u691:
  1996   001972  EFDE  F00C         	goto	l1121
  1997   001976                     u690:
  1998   001976                     l1808:
  1999   001976  EE20 F003          	lfsr	2,3
  2000   00197A  5003               	movf	fputc@fp^0,w,c
  2001   00197C  26D9               	addwf	fsr2l,f,c
  2002   00197E  5004               	movf	(fputc@fp+1)^0,w,c
  2003   001980  22DA               	addwfc	fsr2h,f,c
  2004   001982  CFDE F005          	movff	postinc2,??_fputc
  2005   001986  CFDD F006          	movff	postdec2,??_fputc+1
  2006   00198A  C003  FFD9         	movff	fputc@fp,fsr2l
  2007   00198E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2008   001992  CFDE F007          	movff	postinc2,??_fputc+2
  2009   001996  CFDD F008          	movff	postdec2,??_fputc+3
  2010   00199A  5005               	movf	??_fputc^0,w,c
  2011   00199C  2407               	addwf	(??_fputc+2)^0,w,c
  2012   00199E  6ED9               	movwf	fsr2l,c
  2013   0019A0  5006               	movf	(??_fputc+1)^0,w,c
  2014   0019A2  2008               	addwfc	(??_fputc+3)^0,w,c
  2015   0019A4  6EDA               	movwf	fsr2h,c
  2016   0019A6  C001  FFDF         	movff	fputc@c,indf2
  2017   0019AA  EE20 F003          	lfsr	2,3
  2018   0019AE  5003               	movf	fputc@fp^0,w,c
  2019   0019B0  26D9               	addwf	fsr2l,f,c
  2020   0019B2  5004               	movf	(fputc@fp+1)^0,w,c
  2021   0019B4  22DA               	addwfc	fsr2h,f,c
  2022   0019B6  2ADE               	incf	postinc2,f,c
  2023   0019B8  0E00               	movlw	0
  2024   0019BA  22DD               	addwfc	postdec2,f,c
  2025   0019BC                     l1121:
  2026   0019BC  0012               	return		;funcret
  2027   0019BE                     __end_of_fputc:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _putch *****************
  2031 ;; Defined at:
  2032 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  c               1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  c               1    0[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_fputc
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text8
  2060   001F64                     __ptext8:
  2061                           	callstack 0
  2062   001F64                     _putch:
  2063                           	callstack 26
  2064   001F64  0012               	return		;funcret
  2065   001F66                     __end_of_putch:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _abs *****************
  2069 ;; Defined at:
  2070 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  a               2   18[COMRAM] int 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  2   18[COMRAM] int 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;Total ram usage:        4 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_dtoa
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text9
  2098   001D9A                     __ptext9:
  2099                           	callstack 0
  2100   001D9A                     _abs:
  2101                           	callstack 26
  2102   001D9A  BE14               	btfsc	(abs@a+1)^0,7,c
  2103   001D9C  EFDA  F00E         	goto	u860
  2104   001DA0  5014               	movf	(abs@a+1)^0,w,c
  2105   001DA2  E106               	bnz	u861
  2106   001DA4  0413               	decf	abs@a^0,w,c
  2107   001DA6  B0D8               	btfsc	status,0,c
  2108   001DA8  EFD8  F00E         	goto	u861
  2109   001DAC  EFDA  F00E         	goto	u860
  2110   001DB0                     u861:
  2111   001DB0  EFE8  F00E         	goto	l1106
  2112   001DB4                     u860:
  2113   001DB4  C013  F015         	movff	abs@a,??_abs
  2114   001DB8  C014  F016         	movff	abs@a+1,??_abs+1
  2115   001DBC  1E15               	comf	??_abs^0,f,c
  2116   001DBE  1E16               	comf	(??_abs+1)^0,f,c
  2117   001DC0  4A15               	infsnz	??_abs^0,f,c
  2118   001DC2  2A16               	incf	(??_abs+1)^0,f,c
  2119   001DC4  C015  F013         	movff	??_abs,?_abs
  2120   001DC8  C016  F014         	movff	??_abs+1,?_abs+1
  2121   001DCC  EFEC  F00E         	goto	l1109
  2122   001DD0                     l1106:
  2123   001DD0  C013  F013         	movff	abs@a,?_abs
  2124   001DD4  C014  F014         	movff	abs@a+1,?_abs+1
  2125   001DD8                     l1109:
  2126   001DD8  0012               	return		;funcret
  2127   001DDA                     __end_of_abs:
  2128                           	callstack 0
  2129                           
  2130 ;; *************** function ___aomod *****************
  2131 ;; Defined at:
  2132 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  dividend        8    0[COMRAM] long long 
  2135 ;;  divisor         8    8[COMRAM] long long 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  sign            1   17[COMRAM] unsigned char 
  2138 ;;  counter         1   16[COMRAM] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  8    0[COMRAM] long long 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2148 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;Total ram usage:       18 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_dtoa
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text10
  2162   001514                     __ptext10:
  2163                           	callstack 0
  2164   001514                     ___aomod:
  2165                           	callstack 26
  2166   001514  0E00               	movlw	0
  2167   001516  6E12               	movwf	___aomod@sign^0,c
  2168   001518  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2169   00151A  EF93  F00A         	goto	u780
  2170   00151E  EF91  F00A         	goto	u781
  2171   001522                     u781:
  2172   001522  EFA5  F00A         	goto	l1872
  2173   001526                     u780:
  2174   001526  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2175   001528  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2176   00152A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2177   00152C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2178   00152E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2179   001530  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2180   001532  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2181   001534  6C01               	negf	___aomod@dividend^0,c
  2182   001536  0E00               	movlw	0
  2183   001538  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2184   00153A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2185   00153C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2186   00153E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2187   001540  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2188   001542  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2189   001544  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2190   001546  0E01               	movlw	1
  2191   001548  6E12               	movwf	___aomod@sign^0,c
  2192   00154A                     l1872:
  2193   00154A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2194   00154C  EFAC  F00A         	goto	u790
  2195   001550  EFAA  F00A         	goto	u791
  2196   001554                     u791:
  2197   001554  EFBC  F00A         	goto	l1876
  2198   001558                     u790:
  2199   001558  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2200   00155A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2201   00155C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2202   00155E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2203   001560  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2204   001562  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2205   001564  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2206   001566  6C09               	negf	___aomod@divisor^0,c
  2207   001568  0E00               	movlw	0
  2208   00156A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2209   00156C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2210   00156E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2211   001570  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2212   001572  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2213   001574  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2214   001576  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2215   001578                     l1876:
  2216   001578  5009               	movf	___aomod@divisor^0,w,c
  2217   00157A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2218   00157C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2219   00157E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2220   001580  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2221   001582  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2222   001584  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2223   001586  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2224   001588  B4D8               	btfsc	status,2,c
  2225   00158A  EFC9  F00A         	goto	u801
  2226   00158E  EFCB  F00A         	goto	u800
  2227   001592                     u801:
  2228   001592  EF13  F00B         	goto	l1892
  2229   001596                     u800:
  2230   001596  0E01               	movlw	1
  2231   001598  6E11               	movwf	___aomod@counter^0,c
  2232   00159A  EFD9  F00A         	goto	l1882
  2233   00159E                     l1880:
  2234   00159E  90D8               	bcf	status,0,c
  2235   0015A0  3609               	rlcf	___aomod@divisor^0,f,c
  2236   0015A2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2237   0015A4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2238   0015A6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2239   0015A8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2240   0015AA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2241   0015AC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2242   0015AE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2243   0015B0  2A11               	incf	___aomod@counter^0,f,c
  2244   0015B2                     l1882:
  2245   0015B2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2246   0015B4  EFDE  F00A         	goto	u811
  2247   0015B8  EFE0  F00A         	goto	u810
  2248   0015BC                     u811:
  2249   0015BC  EFCF  F00A         	goto	l1880
  2250   0015C0                     u810:
  2251   0015C0                     l1884:
  2252   0015C0  5009               	movf	___aomod@divisor^0,w,c
  2253   0015C2  5C01               	subwf	___aomod@dividend^0,w,c
  2254   0015C4  500A               	movf	(___aomod@divisor+1)^0,w,c
  2255   0015C6  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2256   0015C8  500B               	movf	(___aomod@divisor+2)^0,w,c
  2257   0015CA  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2258   0015CC  500C               	movf	(___aomod@divisor+3)^0,w,c
  2259   0015CE  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2260   0015D0  500D               	movf	(___aomod@divisor+4)^0,w,c
  2261   0015D2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2262   0015D4  500E               	movf	(___aomod@divisor+5)^0,w,c
  2263   0015D6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2264   0015D8  500F               	movf	(___aomod@divisor+6)^0,w,c
  2265   0015DA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2266   0015DC  5010               	movf	(___aomod@divisor+7)^0,w,c
  2267   0015DE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2268   0015E0  A0D8               	btfss	status,0,c
  2269   0015E2  EFF5  F00A         	goto	u821
  2270   0015E6  EFF7  F00A         	goto	u820
  2271   0015EA                     u821:
  2272   0015EA  EF07  F00B         	goto	l1888
  2273   0015EE                     u820:
  2274   0015EE  5009               	movf	___aomod@divisor^0,w,c
  2275   0015F0  5E01               	subwf	___aomod@dividend^0,f,c
  2276   0015F2  500A               	movf	(___aomod@divisor+1)^0,w,c
  2277   0015F4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2278   0015F6  500B               	movf	(___aomod@divisor+2)^0,w,c
  2279   0015F8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2280   0015FA  500C               	movf	(___aomod@divisor+3)^0,w,c
  2281   0015FC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2282   0015FE  500D               	movf	(___aomod@divisor+4)^0,w,c
  2283   001600  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2284   001602  500E               	movf	(___aomod@divisor+5)^0,w,c
  2285   001604  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2286   001606  500F               	movf	(___aomod@divisor+6)^0,w,c
  2287   001608  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2288   00160A  5010               	movf	(___aomod@divisor+7)^0,w,c
  2289   00160C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2290   00160E                     l1888:
  2291   00160E  90D8               	bcf	status,0,c
  2292   001610  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2293   001612  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2294   001614  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2295   001616  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2296   001618  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2297   00161A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2298   00161C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2299   00161E  3209               	rrcf	___aomod@divisor^0,f,c
  2300   001620  2E11               	decfsz	___aomod@counter^0,f,c
  2301   001622  EFE0  F00A         	goto	l1884
  2302   001626                     l1892:
  2303   001626  5012               	movf	___aomod@sign^0,w,c
  2304   001628  B4D8               	btfsc	status,2,c
  2305   00162A  EF19  F00B         	goto	u831
  2306   00162E  EF1B  F00B         	goto	u830
  2307   001632                     u831:
  2308   001632  EF2B  F00B         	goto	l1896
  2309   001636                     u830:
  2310   001636  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2311   001638  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2312   00163A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2313   00163C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2314   00163E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2315   001640  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2316   001642  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2317   001644  6C01               	negf	___aomod@dividend^0,c
  2318   001646  0E00               	movlw	0
  2319   001648  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2320   00164A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2321   00164C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2322   00164E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2323   001650  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2324   001652  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2325   001654  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2326   001656                     l1896:
  2327   001656  C001  F001         	movff	___aomod@dividend,?___aomod
  2328   00165A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2329   00165E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2330   001662  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2331   001666  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2332   00166A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2333   00166E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2334   001672  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2335   001676  0012               	return		;funcret
  2336   001678                     __end_of___aomod:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function ___aodiv *****************
  2340 ;; Defined at:
  2341 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  dividend        8    0[COMRAM] long long 
  2344 ;;  divisor         8    8[COMRAM] long long 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  quotient        8   18[COMRAM] long long 
  2347 ;;  sign            1   17[COMRAM] unsigned char 
  2348 ;;  counter         1   16[COMRAM] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  8    0[COMRAM] long long 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2358 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;Total ram usage:       26 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_dtoa
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text11
  2372   0010A6                     __ptext11:
  2373                           	callstack 0
  2374   0010A6                     ___aodiv:
  2375                           	callstack 26
  2376   0010A6  0E00               	movlw	0
  2377   0010A8  6E12               	movwf	___aodiv@sign^0,c
  2378   0010AA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2379   0010AC  EF5C  F008         	goto	u710
  2380   0010B0  EF5A  F008         	goto	u711
  2381   0010B4                     u711:
  2382   0010B4  EF6E  F008         	goto	l1828
  2383   0010B8                     u710:
  2384   0010B8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2385   0010BA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2386   0010BC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2387   0010BE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2388   0010C0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2389   0010C2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2390   0010C4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2391   0010C6  6C09               	negf	___aodiv@divisor^0,c
  2392   0010C8  0E00               	movlw	0
  2393   0010CA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2394   0010CC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2395   0010CE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2396   0010D0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2397   0010D2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2398   0010D4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2399   0010D6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2400   0010D8  0E01               	movlw	1
  2401   0010DA  6E12               	movwf	___aodiv@sign^0,c
  2402   0010DC                     l1828:
  2403   0010DC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2404   0010DE  EF75  F008         	goto	u720
  2405   0010E2  EF73  F008         	goto	u721
  2406   0010E6                     u721:
  2407   0010E6  EF87  F008         	goto	l1834
  2408   0010EA                     u720:
  2409   0010EA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2410   0010EC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2411   0010EE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2412   0010F0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2413   0010F2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2414   0010F4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2415   0010F6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2416   0010F8  6C01               	negf	___aodiv@dividend^0,c
  2417   0010FA  0E00               	movlw	0
  2418   0010FC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2419   0010FE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2420   001100  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2421   001102  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2422   001104  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2423   001106  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2424   001108  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2425   00110A  0E01               	movlw	1
  2426   00110C  1A12               	xorwf	___aodiv@sign^0,f,c
  2427   00110E                     l1834:
  2428   00110E  EE20  F013         	lfsr	2,___aodiv@quotient
  2429   001112  0E07               	movlw	7
  2430   001114                     u731:
  2431   001114  6ADE               	clrf	postinc2,c
  2432   001116  06E8               	decf	wreg,f,c
  2433   001118  E2FD               	bc	u731
  2434   00111A  5009               	movf	___aodiv@divisor^0,w,c
  2435   00111C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2436   00111E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2437   001120  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2438   001122  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2439   001124  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2440   001126  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2441   001128  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2442   00112A  B4D8               	btfsc	status,2,c
  2443   00112C  EF9A  F008         	goto	u741
  2444   001130  EF9C  F008         	goto	u740
  2445   001134                     u741:
  2446   001134  EFEE  F008         	goto	l1856
  2447   001138                     u740:
  2448   001138  0E01               	movlw	1
  2449   00113A  6E11               	movwf	___aodiv@counter^0,c
  2450   00113C  EFAA  F008         	goto	l1842
  2451   001140                     l1840:
  2452   001140  90D8               	bcf	status,0,c
  2453   001142  3609               	rlcf	___aodiv@divisor^0,f,c
  2454   001144  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2455   001146  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2456   001148  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2457   00114A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2458   00114C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2459   00114E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2460   001150  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2461   001152  2A11               	incf	___aodiv@counter^0,f,c
  2462   001154                     l1842:
  2463   001154  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2464   001156  EFAF  F008         	goto	u751
  2465   00115A  EFB1  F008         	goto	u750
  2466   00115E                     u751:
  2467   00115E  EFA0  F008         	goto	l1840
  2468   001162                     u750:
  2469   001162                     l1844:
  2470   001162  90D8               	bcf	status,0,c
  2471   001164  3613               	rlcf	___aodiv@quotient^0,f,c
  2472   001166  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2473   001168  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2474   00116A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2475   00116C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2476   00116E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2477   001170  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2478   001172  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2479   001174  5009               	movf	___aodiv@divisor^0,w,c
  2480   001176  5C01               	subwf	___aodiv@dividend^0,w,c
  2481   001178  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2482   00117A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2483   00117C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2484   00117E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2485   001180  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2486   001182  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2487   001184  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2488   001186  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2489   001188  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2490   00118A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2491   00118C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2492   00118E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2493   001190  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2494   001192  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2495   001194  A0D8               	btfss	status,0,c
  2496   001196  EFCF  F008         	goto	u761
  2497   00119A  EFD1  F008         	goto	u760
  2498   00119E                     u761:
  2499   00119E  EFE2  F008         	goto	l1852
  2500   0011A2                     u760:
  2501   0011A2  5009               	movf	___aodiv@divisor^0,w,c
  2502   0011A4  5E01               	subwf	___aodiv@dividend^0,f,c
  2503   0011A6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2504   0011A8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2505   0011AA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2506   0011AC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2507   0011AE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2508   0011B0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2509   0011B2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2510   0011B4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2511   0011B6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2512   0011B8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2513   0011BA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2514   0011BC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2515   0011BE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2516   0011C0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2517   0011C2  8013               	bsf	___aodiv@quotient^0,0,c
  2518   0011C4                     l1852:
  2519   0011C4  90D8               	bcf	status,0,c
  2520   0011C6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2521   0011C8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2522   0011CA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2523   0011CC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2524   0011CE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2525   0011D0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2526   0011D2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2527   0011D4  3209               	rrcf	___aodiv@divisor^0,f,c
  2528   0011D6  2E11               	decfsz	___aodiv@counter^0,f,c
  2529   0011D8  EFB1  F008         	goto	l1844
  2530   0011DC                     l1856:
  2531   0011DC  5012               	movf	___aodiv@sign^0,w,c
  2532   0011DE  B4D8               	btfsc	status,2,c
  2533   0011E0  EFF4  F008         	goto	u771
  2534   0011E4  EFF6  F008         	goto	u770
  2535   0011E8                     u771:
  2536   0011E8  EF06  F009         	goto	l1860
  2537   0011EC                     u770:
  2538   0011EC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2539   0011EE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2540   0011F0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2541   0011F2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2542   0011F4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2543   0011F6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2544   0011F8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2545   0011FA  6C13               	negf	___aodiv@quotient^0,c
  2546   0011FC  0E00               	movlw	0
  2547   0011FE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2548   001200  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2549   001202  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2550   001204  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2551   001206  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2552   001208  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2553   00120A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2554   00120C                     l1860:
  2555   00120C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2556   001210  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2557   001214  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2558   001218  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2559   00121C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2560   001220  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2561   001224  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2562   001228  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2563   00122C  0012               	return		;funcret
  2564   00122E                     __end_of___aodiv:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _setMotorPWM *****************
  2568 ;; Defined at:
  2569 ;;		line 61 in file "dc_motor.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  m               2   13[COMRAM] PTR struct DC_motor
  2572 ;;		 -> main@motorR(9), main@motorL(9), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  negDuty         1   18[COMRAM] unsigned char 
  2575 ;;  posDuty         1   17[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;Total ram usage:        6 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 1
  2592 ;; This function calls:
  2593 ;;		___lwdiv
  2594 ;;		___wmul
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;;		_stop
  2598 ;;		_turnLeft45
  2599 ;;		_turnRight45
  2600 ;;		_fullSpeedAhead
  2601 ;;		_reverseFullSpeed
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text12
  2606   0013A8                     __ptext12:
  2607                           	callstack 0
  2608   0013A8                     _setMotorPWM:
  2609                           	callstack 29
  2610   0013A8                     
  2611                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2612   0013A8  EE20 F002          	lfsr	2,2
  2613   0013AC  500E               	movf	setMotorPWM@m^0,w,c
  2614   0013AE  26D9               	addwf	fsr2l,f,c
  2615   0013B0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2616   0013B2  22DA               	addwfc	fsr2h,f,c
  2617   0013B4  50DF               	movf	indf2,w,c
  2618   0013B6  B4D8               	btfsc	status,2,c
  2619   0013B8  EFE0  F009         	goto	u1091
  2620   0013BC  EFE2  F009         	goto	u1090
  2621   0013C0                     u1091:
  2622   0013C0  EF16  F00A         	goto	l2146
  2623   0013C4                     u1090:
  2624   0013C4                     
  2625                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2626   0013C4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2627   0013C8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2628   0013CC  50DF               	movf	indf2,w,c
  2629   0013CE  6E10               	movwf	??_setMotorPWM^0,c
  2630   0013D0  5010               	movf	??_setMotorPWM^0,w,c
  2631   0013D2  6E01               	movwf	___wmul@multiplier^0,c
  2632   0013D4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2633   0013D6  EE20 F003          	lfsr	2,3
  2634   0013DA  500E               	movf	setMotorPWM@m^0,w,c
  2635   0013DC  26D9               	addwf	fsr2l,f,c
  2636   0013DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2637   0013E0  22DA               	addwfc	fsr2h,f,c
  2638   0013E2  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2639   0013E6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2640   0013EA  EC48  F00F         	call	___wmul	;wreg free
  2641   0013EE  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2642   0013F2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2643   0013F6  0E00               	movlw	0
  2644   0013F8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2645   0013FA  0E64               	movlw	100
  2646   0013FC  6E09               	movwf	___lwdiv@divisor^0,c
  2647   0013FE  EC60  F00D         	call	___lwdiv	;wreg free
  2648   001402  EE20 F003          	lfsr	2,3
  2649   001406  500E               	movf	setMotorPWM@m^0,w,c
  2650   001408  26D9               	addwf	fsr2l,f,c
  2651   00140A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2652   00140C  22DA               	addwfc	fsr2h,f,c
  2653   00140E  50DF               	movf	indf2,w,c
  2654   001410  6E11               	movwf	(??_setMotorPWM+1)^0,c
  2655   001412  5007               	movf	?___lwdiv^0,w,c
  2656   001414  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  2657   001416  6E12               	movwf	setMotorPWM@posDuty^0,c
  2658   001418                     
  2659                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2660   001418  EE20 F003          	lfsr	2,3
  2661   00141C  500E               	movf	setMotorPWM@m^0,w,c
  2662   00141E  26D9               	addwf	fsr2l,f,c
  2663   001420  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2664   001422  22DA               	addwfc	fsr2h,f,c
  2665   001424  50DF               	movf	indf2,w,c
  2666   001426  6E13               	movwf	setMotorPWM@negDuty^0,c
  2667                           
  2668                           ;dc_motor.c: 68:     }
  2669   001428  EF39  F00A         	goto	l2150
  2670   00142C                     l2146:
  2671                           
  2672                           ;dc_motor.c: 70:         posDuty=0;
  2673   00142C  0E00               	movlw	0
  2674   00142E  6E12               	movwf	setMotorPWM@posDuty^0,c
  2675   001430                     
  2676                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2677   001430  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2678   001434  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2679   001438  50DF               	movf	indf2,w,c
  2680   00143A  6E10               	movwf	??_setMotorPWM^0,c
  2681   00143C  5010               	movf	??_setMotorPWM^0,w,c
  2682   00143E  6E01               	movwf	___wmul@multiplier^0,c
  2683   001440  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2684   001442  EE20 F003          	lfsr	2,3
  2685   001446  500E               	movf	setMotorPWM@m^0,w,c
  2686   001448  26D9               	addwf	fsr2l,f,c
  2687   00144A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2688   00144C  22DA               	addwfc	fsr2h,f,c
  2689   00144E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2690   001452  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2691   001456  EC48  F00F         	call	___wmul	;wreg free
  2692   00145A  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2693   00145E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2694   001462  0E00               	movlw	0
  2695   001464  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2696   001466  0E64               	movlw	100
  2697   001468  6E09               	movwf	___lwdiv@divisor^0,c
  2698   00146A  EC60  F00D         	call	___lwdiv	;wreg free
  2699   00146E  5007               	movf	?___lwdiv^0,w,c
  2700   001470  6E13               	movwf	setMotorPWM@negDuty^0,c
  2701   001472                     l2150:
  2702                           
  2703                           ;dc_motor.c: 74:     if (m->direction) {
  2704   001472  EE20 F001          	lfsr	2,1
  2705   001476  500E               	movf	setMotorPWM@m^0,w,c
  2706   001478  26D9               	addwf	fsr2l,f,c
  2707   00147A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2708   00147C  22DA               	addwfc	fsr2h,f,c
  2709   00147E  50DF               	movf	indf2,w,c
  2710   001480  B4D8               	btfsc	status,2,c
  2711   001482  EF45  F00A         	goto	u1101
  2712   001486  EF47  F00A         	goto	u1100
  2713   00148A                     u1101:
  2714   00148A  EF69  F00A         	goto	l2154
  2715   00148E                     u1100:
  2716   00148E                     
  2717                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2718   00148E  EE20 F005          	lfsr	2,5
  2719   001492  500E               	movf	setMotorPWM@m^0,w,c
  2720   001494  26D9               	addwf	fsr2l,f,c
  2721   001496  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2722   001498  22DA               	addwfc	fsr2h,f,c
  2723   00149A  CFDE F010          	movff	postinc2,??_setMotorPWM
  2724   00149E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2725   0014A2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2726   0014A6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2727   0014AA  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2728                           
  2729                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2730   0014AE  EE20 F007          	lfsr	2,7
  2731   0014B2  500E               	movf	setMotorPWM@m^0,w,c
  2732   0014B4  26D9               	addwf	fsr2l,f,c
  2733   0014B6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2734   0014B8  22DA               	addwfc	fsr2h,f,c
  2735   0014BA  CFDE F010          	movff	postinc2,??_setMotorPWM
  2736   0014BE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2737   0014C2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2738   0014C6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2739   0014CA  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2740                           
  2741                           ;dc_motor.c: 77:     } else {
  2742   0014CE  EF89  F00A         	goto	l95
  2743   0014D2                     l2154:
  2744                           
  2745                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2746   0014D2  EE20 F005          	lfsr	2,5
  2747   0014D6  500E               	movf	setMotorPWM@m^0,w,c
  2748   0014D8  26D9               	addwf	fsr2l,f,c
  2749   0014DA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2750   0014DC  22DA               	addwfc	fsr2h,f,c
  2751   0014DE  CFDE F010          	movff	postinc2,??_setMotorPWM
  2752   0014E2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2753   0014E6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2754   0014EA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2755   0014EE  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2756                           
  2757                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2758   0014F2  EE20 F007          	lfsr	2,7
  2759   0014F6  500E               	movf	setMotorPWM@m^0,w,c
  2760   0014F8  26D9               	addwf	fsr2l,f,c
  2761   0014FA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2762   0014FC  22DA               	addwfc	fsr2h,f,c
  2763   0014FE  CFDE F010          	movff	postinc2,??_setMotorPWM
  2764   001502  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2765   001506  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2766   00150A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2767   00150E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2768   001512                     l95:
  2769   001512  0012               	return		;funcret
  2770   001514                     __end_of_setMotorPWM:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function ___wmul *****************
  2774 ;; Defined at:
  2775 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  multiplier      2    0[COMRAM] unsigned int 
  2778 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  product         2    4[COMRAM] unsigned int 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  2    0[COMRAM] unsigned int 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, prodl, prodh
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2794 ;;Total ram usage:        6 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_setMotorPWM
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text13
  2804   001E90                     __ptext13:
  2805                           	callstack 0
  2806   001E90                     ___wmul:
  2807                           	callstack 29
  2808   001E90  5001               	movf	___wmul@multiplier^0,w,c
  2809   001E92  0203               	mulwf	___wmul@multiplicand^0,c
  2810   001E94  CFF3 F005          	movff	prodl,___wmul@product
  2811   001E98  CFF4 F006          	movff	prodh,___wmul@product+1
  2812   001E9C  5001               	movf	___wmul@multiplier^0,w,c
  2813   001E9E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2814   001EA0  50F3               	movf	243,w,c
  2815   001EA2  2606               	addwf	(___wmul@product+1)^0,f,c
  2816   001EA4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2817   001EA6  0203               	mulwf	___wmul@multiplicand^0,c
  2818   001EA8  50F3               	movf	243,w,c
  2819   001EAA  2606               	addwf	(___wmul@product+1)^0,f,c
  2820   001EAC  C005  F001         	movff	___wmul@product,?___wmul
  2821   001EB0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2822   001EB4  0012               	return		;funcret
  2823   001EB6                     __end_of___wmul:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function _sendStringSerial4 *****************
  2827 ;; Defined at:
  2828 ;;		line 39 in file "serial.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  string          2    1[COMRAM] PTR unsigned char 
  2831 ;;		 -> main@buf(20), 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2847 ;;Total ram usage:        2 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 1
  2850 ;; This function calls:
  2851 ;;		_sendCharSerial4
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text14
  2858   001E0E                     __ptext14:
  2859                           	callstack 0
  2860   001E0E                     _sendStringSerial4:
  2861                           	callstack 29
  2862   001E0E                     
  2863                           ;serial.c: 40:  while(*string != 0) {
  2864   001E0E  EF12  F00F         	goto	l2190
  2865   001E12                     l2186:
  2866                           
  2867                           ;serial.c: 41:         sendCharSerial4(*string++);
  2868   001E12  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2869   001E16  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2870   001E1A  50DF               	movf	indf2,w,c
  2871   001E1C  EC8C  F00F         	call	_sendCharSerial4
  2872   001E20  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2873   001E22  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2874   001E24                     l2190:
  2875                           
  2876                           ;serial.c: 40:  while(*string != 0) {
  2877   001E24  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2878   001E28  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2879   001E2C  50DF               	movf	indf2,w,c
  2880   001E2E  A4D8               	btfss	status,2,c
  2881   001E30  EF1C  F00F         	goto	u1111
  2882   001E34  EF1E  F00F         	goto	u1110
  2883   001E38                     u1111:
  2884   001E38  EF09  F00F         	goto	l2186
  2885   001E3C                     u1110:
  2886   001E3C  0012               	return		;funcret
  2887   001E3E                     __end_of_sendStringSerial4:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function _sendCharSerial4 *****************
  2891 ;; Defined at:
  2892 ;;		line 32 in file "serial.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  charToSend      1    wreg     unsigned char 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  charToSend      1    0[COMRAM] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;Total ram usage:        1 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_sendStringSerial4
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text15
  2920   001F18                     __ptext15:
  2921                           	callstack 0
  2922   001F18                     _sendCharSerial4:
  2923                           	callstack 29
  2924                           
  2925                           ;incstack = 0
  2926                           ;sendCharSerial4@charToSend stored from wreg
  2927   001F18  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2928   001F1A                     l322:
  2929   001F1A  010E               	movlb	14	; () banked
  2930   001F1C  A537               	btfss	55,2,b	;volatile
  2931   001F1E  EF93  F00F         	goto	u1041
  2932   001F22  EF95  F00F         	goto	u1040
  2933   001F26                     u1041:
  2934   001F26  EF8D  F00F         	goto	l322
  2935   001F2A                     u1040:
  2936   001F2A                     
  2937                           ; BSR set to: 14
  2938                           ;serial.c: 34:     TX4REG = charToSend;
  2939   001F2A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2940   001F2E                     
  2941                           ; BSR set to: 14
  2942   001F2E  0012               	return		;funcret
  2943   001F30                     __end_of_sendCharSerial4:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function _initUSART4 *****************
  2947 ;; Defined at:
  2948 ;;		line 6 in file "serial.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2966 ;;Total ram usage:        0 bytes
  2967 ;; Hardware stack levels used: 1
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text16
  2976   001ED8                     __ptext16:
  2977                           	callstack 0
  2978   001ED8                     _initUSART4:
  2979                           	callstack 30
  2980   001ED8                     
  2981                           ;serial.c: 10:     RC0PPS = 0x12;
  2982   001ED8  0E12               	movlw	18
  2983   001EDA  010E               	movlb	14	; () banked
  2984   001EDC  6F62               	movwf	98,b	;volatile
  2985                           
  2986                           ;serial.c: 11:     RX4PPS = 0x11;
  2987   001EDE  0E11               	movlw	17
  2988   001EE0  6F15               	movwf	21,b	;volatile
  2989   001EE2                     
  2990                           ; BSR set to: 14
  2991                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  2992   001EE2  8283               	bsf	131,1,c	;volatile
  2993   001EE4                     
  2994                           ; BSR set to: 14
  2995                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  2996   001EE4  97E9               	bcf	233,3,b	;volatile
  2997   001EE6                     
  2998                           ; BSR set to: 14
  2999                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3000   001EE6  95E8               	bcf	232,2,b	;volatile
  3001                           
  3002                           ;serial.c: 17:     SP4BRGL = 51;
  3003   001EE8  0E33               	movlw	51
  3004   001EEA  6FE5               	movwf	229,b	;volatile
  3005                           
  3006                           ;serial.c: 18:     SP4BRGH = 0;
  3007   001EEC  0E00               	movlw	0
  3008   001EEE  6FE6               	movwf	230,b	;volatile
  3009   001EF0                     
  3010                           ; BSR set to: 14
  3011                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3012   001EF0  89E7               	bsf	231,4,b	;volatile
  3013   001EF2                     
  3014                           ; BSR set to: 14
  3015                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3016   001EF2  8BE8               	bsf	232,5,b	;volatile
  3017   001EF4                     
  3018                           ; BSR set to: 14
  3019                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3020   001EF4  8FE7               	bsf	231,7,b	;volatile
  3021   001EF6                     
  3022                           ; BSR set to: 14
  3023   001EF6  0012               	return		;funcret
  3024   001EF8                     __end_of_initUSART4:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _initDCmotorsPWM *****************
  3028 ;; Defined at:
  3029 ;;		line 6 in file "dc_motor.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_main
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text17
  3057   0019BE                     __ptext17:
  3058                           	callstack 0
  3059   0019BE                     _initDCmotorsPWM:
  3060                           	callstack 30
  3061   0019BE                     
  3062                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3063   0019BE  9485               	bcf	133,2,c	;volatile
  3064                           
  3065                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3066   0019C0  9885               	bcf	133,4,c	;volatile
  3067                           
  3068                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3069   0019C2  9E83               	bcf	131,7,c	;volatile
  3070                           
  3071                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3072   0019C4  9C87               	bcf	135,6,c	;volatile
  3073   0019C6                     
  3074                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3075   0019C6  0E05               	movlw	5
  3076   0019C8  010E               	movlb	14	; () banked
  3077   0019CA  6F74               	movwf	116,b	;volatile
  3078                           
  3079                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3080   0019CC  0E06               	movlw	6
  3081   0019CE  6F76               	movwf	118,b	;volatile
  3082                           
  3083                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3084   0019D0  0E07               	movlw	7
  3085   0019D2  6F69               	movwf	105,b	;volatile
  3086                           
  3087                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3088   0019D4  0E08               	movlw	8
  3089   0019D6  6F88               	movwf	136,b	;volatile
  3090                           
  3091                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3092   0019D8  50BD               	movf	189,w,c	;volatile
  3093   0019DA  0B8F               	andlw	-113
  3094   0019DC  0940               	iorlw	64
  3095   0019DE  6EBD               	movwf	189,c	;volatile
  3096                           
  3097                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3098   0019E0  0EE0               	movlw	-32
  3099   0019E2  16BE               	andwf	190,f,c	;volatile
  3100                           
  3101                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3102   0019E4  50BF               	movf	191,w,c	;volatile
  3103   0019E6  0BF0               	andlw	-16
  3104   0019E8  0901               	iorlw	1
  3105   0019EA  6EBF               	movwf	191,c	;volatile
  3106                           
  3107                           ;dc_motor.c: 26:     T2PR=99;
  3108   0019EC  0E63               	movlw	99
  3109   0019EE  6EBC               	movwf	188,c	;volatile
  3110   0019F0                     
  3111                           ; BSR set to: 14
  3112                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3113   0019F0  8EBD               	bsf	189,7,c	;volatile
  3114                           
  3115                           ;dc_motor.c: 31:     CCPR1H=0;
  3116   0019F2  0E00               	movlw	0
  3117   0019F4  6EAA               	movwf	170,c	;volatile
  3118                           
  3119                           ;dc_motor.c: 32:     CCPR2H=0;
  3120   0019F6  0E00               	movlw	0
  3121   0019F8  6EA6               	movwf	166,c	;volatile
  3122                           
  3123                           ;dc_motor.c: 33:     CCPR3H=0;
  3124   0019FA  0E00               	movlw	0
  3125   0019FC  010F               	movlb	15	; () banked
  3126   0019FE  6F25               	movwf	37,b	;volatile
  3127                           
  3128                           ;dc_motor.c: 34:     CCPR4H=0;
  3129   001A00  0E00               	movlw	0
  3130   001A02  6F21               	movwf	33,b	;volatile
  3131                           
  3132                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3133   001A04  0EFC               	movlw	-4
  3134   001A06  16AD               	andwf	173,f,c	;volatile
  3135                           
  3136                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3137   001A08  0EF3               	movlw	-13
  3138   001A0A  16AD               	andwf	173,f,c	;volatile
  3139                           
  3140                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3141   001A0C  0ECF               	movlw	-49
  3142   001A0E  16AD               	andwf	173,f,c	;volatile
  3143                           
  3144                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3145   001A10  0E3F               	movlw	-193
  3146   001A12  16AD               	andwf	173,f,c	;volatile
  3147   001A14                     
  3148                           ; BSR set to: 15
  3149                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3150   001A14  88AB               	bsf	171,4,c	;volatile
  3151                           
  3152                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3153   001A16  50AB               	movf	171,w,c	;volatile
  3154   001A18  0BF0               	andlw	-16
  3155   001A1A  090C               	iorlw	12
  3156   001A1C  6EAB               	movwf	171,c	;volatile
  3157   001A1E                     
  3158                           ; BSR set to: 15
  3159                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3160   001A1E  8EAB               	bsf	171,7,c	;volatile
  3161   001A20                     
  3162                           ; BSR set to: 15
  3163                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3164   001A20  88A7               	bsf	167,4,c	;volatile
  3165                           
  3166                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3167   001A22  50A7               	movf	167,w,c	;volatile
  3168   001A24  0BF0               	andlw	-16
  3169   001A26  090C               	iorlw	12
  3170   001A28  6EA7               	movwf	167,c	;volatile
  3171   001A2A                     
  3172                           ; BSR set to: 15
  3173                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3174   001A2A  8EA7               	bsf	167,7,c	;volatile
  3175   001A2C                     
  3176                           ; BSR set to: 15
  3177                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3178   001A2C  8926               	bsf	38,4,b	;volatile
  3179                           
  3180                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3181   001A2E  5126               	movf	38,w,b	;volatile
  3182   001A30  0BF0               	andlw	-16
  3183   001A32  090C               	iorlw	12
  3184   001A34  6F26               	movwf	38,b	;volatile
  3185   001A36                     
  3186                           ; BSR set to: 15
  3187                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3188   001A36  8F26               	bsf	38,7,b	;volatile
  3189   001A38                     
  3190                           ; BSR set to: 15
  3191                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3192   001A38  8922               	bsf	34,4,b	;volatile
  3193                           
  3194                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3195   001A3A  5122               	movf	34,w,b	;volatile
  3196   001A3C  0BF0               	andlw	-16
  3197   001A3E  090C               	iorlw	12
  3198   001A40  6F22               	movwf	34,b	;volatile
  3199   001A42                     
  3200                           ; BSR set to: 15
  3201                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3202   001A42  8F22               	bsf	34,7,b	;volatile
  3203   001A44                     
  3204                           ; BSR set to: 15
  3205   001A44  0012               	return		;funcret
  3206   001A46                     __end_of_initDCmotorsPWM:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _color_click_init *****************
  3210 ;; Defined at:
  3211 ;;		line 5 in file "color.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;Total ram usage:        1 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 3
  3232 ;; This function calls:
  3233 ;;		_I2C_2_Master_Init
  3234 ;;		_color_writetoaddr
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text18
  3241   001DDA                     __ptext18:
  3242                           	callstack 0
  3243   001DDA                     _color_click_init:
  3244                           	callstack 27
  3245   001DDA                     
  3246                           ;color.c: 8:     I2C_2_Master_Init();
  3247   001DDA  EC1F  F00F         	call	_I2C_2_Master_Init	;wreg free
  3248   001DDE                     
  3249                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3250   001DDE  0E01               	movlw	1
  3251   001DE0  6E03               	movwf	color_writetoaddr@value^0,c
  3252   001DE2  0E00               	movlw	0
  3253   001DE4  EC7C  F00F         	call	_color_writetoaddr
  3254   001DE8                     
  3255                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3256   001DE8  0E3F               	movlw	63
  3257   001DEA  6E05               	movwf	??_color_click_init^0,c
  3258   001DEC  0E55               	movlw	85
  3259   001DEE                     u1287:
  3260   001DEE  2EE8               	decfsz	wreg,f,c
  3261   001DF0  D7FE               	bra	u1287
  3262   001DF2  2E05               	decfsz	??_color_click_init^0,f,c
  3263   001DF4  D7FC               	bra	u1287
  3264   001DF6  F000               	nop	
  3265   001DF8                     
  3266                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3267   001DF8  0E03               	movlw	3
  3268   001DFA  6E03               	movwf	color_writetoaddr@value^0,c
  3269   001DFC  0E00               	movlw	0
  3270   001DFE  EC7C  F00F         	call	_color_writetoaddr
  3271   001E02                     
  3272                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3273   001E02  0ED5               	movlw	213
  3274   001E04  6E03               	movwf	color_writetoaddr@value^0,c
  3275   001E06  0E01               	movlw	1
  3276   001E08  EC7C  F00F         	call	_color_writetoaddr
  3277   001E0C  0012               	return		;funcret
  3278   001E0E                     __end_of_color_click_init:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function _color_writetoaddr *****************
  3282 ;; Defined at:
  3283 ;;		line 21 in file "color.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  address         1    wreg     unsigned char 
  3286 ;;  value           1    2[COMRAM] unsigned char 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  address         1    3[COMRAM] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3298 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;Total ram usage:        2 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 2
  3305 ;; This function calls:
  3306 ;;		_I2C_2_Master_Start
  3307 ;;		_I2C_2_Master_Stop
  3308 ;;		_I2C_2_Master_Write
  3309 ;; This function is called by:
  3310 ;;		_color_click_init
  3311 ;;		_enable_color_interrupt
  3312 ;;		_set_interrupt_threshold
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text19
  3317   001EF8                     __ptext19:
  3318                           	callstack 0
  3319   001EF8                     _color_writetoaddr:
  3320                           	callstack 27
  3321                           
  3322                           ;incstack = 0
  3323                           ;color_writetoaddr@address stored from wreg
  3324   001EF8  6E04               	movwf	color_writetoaddr@address^0,c
  3325   001EFA                     
  3326                           ;color.c: 22:     I2C_2_Master_Start();
  3327   001EFA  ECA3  F00F         	call	_I2C_2_Master_Start	;wreg free
  3328                           
  3329                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3330   001EFE  0E52               	movlw	82
  3331   001F00  EC98  F00F         	call	_I2C_2_Master_Write
  3332                           
  3333                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3334   001F04  5004               	movf	color_writetoaddr@address^0,w,c
  3335   001F06  0980               	iorlw	128
  3336   001F08  EC98  F00F         	call	_I2C_2_Master_Write
  3337                           
  3338                           ;color.c: 25:     I2C_2_Master_Write(value);
  3339   001F0C  5003               	movf	color_writetoaddr@value^0,w,c
  3340   001F0E  EC98  F00F         	call	_I2C_2_Master_Write
  3341                           
  3342                           ;color.c: 26:     I2C_2_Master_Stop();
  3343   001F12  EC9E  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3344   001F16  0012               	return		;funcret
  3345   001F18                     __end_of_color_writetoaddr:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _I2C_2_Master_Init *****************
  3349 ;; Defined at:
  3350 ;;		line 4 in file "i2c.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_color_click_init
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text20
  3379   001E3E                     __ptext20:
  3380                           	callstack 0
  3381   001E3E                     _I2C_2_Master_Init:
  3382                           	callstack 29
  3383   001E3E                     
  3384                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3385   001E3E  010E               	movlb	14	; () banked
  3386   001E40  51D9               	movf	217,w,b	;volatile
  3387   001E42  0BF0               	andlw	-16
  3388   001E44  0908               	iorlw	8
  3389   001E46  6FD9               	movwf	217,b	;volatile
  3390   001E48                     
  3391                           ; BSR set to: 14
  3392                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3393   001E48  8BD9               	bsf	217,5,b	;volatile
  3394                           
  3395                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3396   001E4A  0E9F               	movlw	159
  3397   001E4C  6FD6               	movwf	214,b	;volatile
  3398   001E4E                     
  3399                           ; BSR set to: 14
  3400                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3401   001E4E  8A84               	bsf	132,5,c	;volatile
  3402   001E50                     
  3403                           ; BSR set to: 14
  3404                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3405   001E50  8C84               	bsf	132,6,c	;volatile
  3406   001E52                     
  3407                           ; BSR set to: 14
  3408                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3409   001E52  9BA7               	bcf	167,5,b	;volatile
  3410   001E54                     
  3411                           ; BSR set to: 14
  3412                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3413   001E54  9DA7               	bcf	167,6,b	;volatile
  3414                           
  3415                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3416   001E56  0E1D               	movlw	29
  3417   001E58  6F1D               	movwf	29,b	;volatile
  3418                           
  3419                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3420   001E5A  0E1E               	movlw	30
  3421   001E5C  6F1C               	movwf	28,b	;volatile
  3422                           
  3423                           ;i2c.c: 18:   RD5PPS=0x1C;
  3424   001E5E  0E1C               	movlw	28
  3425   001E60  6F6F               	movwf	111,b	;volatile
  3426                           
  3427                           ;i2c.c: 19:   RD6PPS=0x1B;
  3428   001E62  0E1B               	movlw	27
  3429   001E64  6F70               	movwf	112,b	;volatile
  3430   001E66                     
  3431                           ; BSR set to: 14
  3432   001E66  0012               	return		;funcret
  3433   001E68                     __end_of_I2C_2_Master_Init:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _collect_avg_readings *****************
  3437 ;; Defined at:
  3438 ;;		line 24 in file "colour_identify.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  red_read        2   13[COMRAM] PTR unsigned int 
  3441 ;;		 -> main@red_read(2), 
  3442 ;;  green_read      2   15[COMRAM] PTR unsigned int 
  3443 ;;		 -> main@green_read(2), 
  3444 ;;  blue_read       2   17[COMRAM] PTR unsigned int 
  3445 ;;		 -> main@blue_read(2), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  i               1   22[COMRAM] enum E14551
  3448 ;;  i               1   21[COMRAM] enum E14551
  3449 ;;  i               1   20[COMRAM] enum E14551
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3459 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3462 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3463 ;;Total ram usage:       10 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 3
  3466 ;; This function calls:
  3467 ;;		___lwdiv
  3468 ;;		_color_read_Blue
  3469 ;;		_color_read_Green
  3470 ;;		_color_read_Red
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text21
  3477   0017C6                     __ptext21:
  3478                           	callstack 0
  3479   0017C6                     _collect_avg_readings:
  3480                           	callstack 27
  3481   0017C6                     
  3482                           ;colour_identify.c: 24: void collect_avg_readings(unsigned int *red_read, unsigned int *
      +                          green_read, unsigned int *blue_read);colour_identify.c: 25: {;colour_identify.c: 28:    
      +                           for(colour i = RED; i <= BLUE; i++){
  3483   0017C6  0E00               	movlw	0
  3484   0017C8  6E15               	movwf	collect_avg_readings@i^0,c
  3485   0017CA                     l2198:
  3486                           
  3487                           ;colour_identify.c: 29:         *red_read += color_read_Red();
  3488   0017CA  ECEB  F00D         	call	_color_read_Red	;wreg free
  3489   0017CE  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  3490   0017D2  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  3491   0017D6  5005               	movf	?_color_read_Red^0,w,c
  3492   0017D8  26DE               	addwf	postinc2,f,c
  3493   0017DA  5006               	movf	(?_color_read_Red+1)^0,w,c
  3494   0017DC  22DD               	addwfc	postdec2,f,c
  3495   0017DE                     
  3496                           ;colour_identify.c: 30:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3497   0017DE  0ED0               	movlw	208
  3498   0017E0  6E14               	movwf	??_collect_avg_readings^0,c
  3499   0017E2  0ECA               	movlw	202
  3500   0017E4                     u1297:
  3501   0017E4  2EE8               	decfsz	wreg,f,c
  3502   0017E6  D7FE               	bra	u1297
  3503   0017E8  2E14               	decfsz	??_collect_avg_readings^0,f,c
  3504   0017EA  D7FC               	bra	u1297
  3505   0017EC                     
  3506                           ;colour_identify.c: 31:     }
  3507   0017EC  2A15               	incf	collect_avg_readings@i^0,f,c
  3508   0017EE  0E02               	movlw	2
  3509   0017F0  6415               	cpfsgt	collect_avg_readings@i^0,c
  3510   0017F2  EFFD  F00B         	goto	u1121
  3511   0017F6  EFFF  F00B         	goto	u1120
  3512   0017FA                     u1121:
  3513   0017FA  EFE5  F00B         	goto	l2198
  3514   0017FE                     u1120:
  3515   0017FE                     
  3516                           ;colour_identify.c: 32:     *red_read = *red_read/3;
  3517   0017FE  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  3518   001802  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  3519   001806  CFDE F007          	movff	postinc2,___lwdiv@dividend
  3520   00180A  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  3521   00180E  0E00               	movlw	0
  3522   001810  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3523   001812  0E03               	movlw	3
  3524   001814  6E09               	movwf	___lwdiv@divisor^0,c
  3525   001816  EC60  F00D         	call	___lwdiv	;wreg free
  3526   00181A  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  3527   00181E  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  3528   001822  C007  FFDE         	movff	?___lwdiv,postinc2
  3529   001826  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3530   00182A                     
  3531                           ;colour_identify.c: 34:     for(colour i = RED; i <= BLUE; i++){
  3532   00182A  0E00               	movlw	0
  3533   00182C  6E16               	movwf	collect_avg_readings@i_1417^0,c
  3534   00182E                     l2214:
  3535                           
  3536                           ;colour_identify.c: 35:         *green_read += color_read_Green();
  3537   00182E  EC13  F00E         	call	_color_read_Green	;wreg free
  3538   001832  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  3539   001836  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  3540   00183A  5005               	movf	?_color_read_Green^0,w,c
  3541   00183C  26DE               	addwf	postinc2,f,c
  3542   00183E  5006               	movf	(?_color_read_Green+1)^0,w,c
  3543   001840  22DD               	addwfc	postdec2,f,c
  3544   001842                     
  3545                           ;colour_identify.c: 36:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3546   001842  0ED0               	movlw	208
  3547   001844  6E14               	movwf	??_collect_avg_readings^0,c
  3548   001846  0ECA               	movlw	202
  3549   001848                     u1307:
  3550   001848  2EE8               	decfsz	wreg,f,c
  3551   00184A  D7FE               	bra	u1307
  3552   00184C  2E14               	decfsz	??_collect_avg_readings^0,f,c
  3553   00184E  D7FC               	bra	u1307
  3554   001850                     
  3555                           ;colour_identify.c: 37:     }
  3556   001850  2A16               	incf	collect_avg_readings@i_1417^0,f,c
  3557   001852  0E02               	movlw	2
  3558   001854  6416               	cpfsgt	collect_avg_readings@i_1417^0,c
  3559   001856  EF2F  F00C         	goto	u1131
  3560   00185A  EF31  F00C         	goto	u1130
  3561   00185E                     u1131:
  3562   00185E  EF17  F00C         	goto	l2214
  3563   001862                     u1130:
  3564   001862                     
  3565                           ;colour_identify.c: 38:     *green_read = *green_read/3;
  3566   001862  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  3567   001866  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  3568   00186A  CFDE F007          	movff	postinc2,___lwdiv@dividend
  3569   00186E  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  3570   001872  0E00               	movlw	0
  3571   001874  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3572   001876  0E03               	movlw	3
  3573   001878  6E09               	movwf	___lwdiv@divisor^0,c
  3574   00187A  EC60  F00D         	call	___lwdiv	;wreg free
  3575   00187E  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  3576   001882  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  3577   001886  C007  FFDE         	movff	?___lwdiv,postinc2
  3578   00188A  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3579   00188E                     
  3580                           ;colour_identify.c: 40:     for(colour i = RED; i <= BLUE; i++){
  3581   00188E  0E00               	movlw	0
  3582   001890  6E17               	movwf	collect_avg_readings@i_1418^0,c
  3583   001892                     l2230:
  3584                           
  3585                           ;colour_identify.c: 41:         *blue_read += color_read_Blue();
  3586   001892  EC3B  F00E         	call	_color_read_Blue	;wreg free
  3587   001896  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  3588   00189A  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  3589   00189E  5005               	movf	?_color_read_Blue^0,w,c
  3590   0018A0  26DE               	addwf	postinc2,f,c
  3591   0018A2  5006               	movf	(?_color_read_Blue+1)^0,w,c
  3592   0018A4  22DD               	addwfc	postdec2,f,c
  3593   0018A6                     
  3594                           ;colour_identify.c: 42:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3595   0018A6  0ED0               	movlw	208
  3596   0018A8  6E14               	movwf	??_collect_avg_readings^0,c
  3597   0018AA  0ECA               	movlw	202
  3598   0018AC                     u1317:
  3599   0018AC  2EE8               	decfsz	wreg,f,c
  3600   0018AE  D7FE               	bra	u1317
  3601   0018B0  2E14               	decfsz	??_collect_avg_readings^0,f,c
  3602   0018B2  D7FC               	bra	u1317
  3603   0018B4                     
  3604                           ;colour_identify.c: 43:     }
  3605   0018B4  2A17               	incf	collect_avg_readings@i_1418^0,f,c
  3606   0018B6  0E02               	movlw	2
  3607   0018B8  6417               	cpfsgt	collect_avg_readings@i_1418^0,c
  3608   0018BA  EF61  F00C         	goto	u1141
  3609   0018BE  EF63  F00C         	goto	u1140
  3610   0018C2                     u1141:
  3611   0018C2  EF49  F00C         	goto	l2230
  3612   0018C6                     u1140:
  3613   0018C6                     
  3614                           ;colour_identify.c: 44:     *blue_read = *blue_read/3;
  3615   0018C6  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  3616   0018CA  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  3617   0018CE  CFDE F007          	movff	postinc2,___lwdiv@dividend
  3618   0018D2  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  3619   0018D6  0E00               	movlw	0
  3620   0018D8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3621   0018DA  0E03               	movlw	3
  3622   0018DC  6E09               	movwf	___lwdiv@divisor^0,c
  3623   0018DE  EC60  F00D         	call	___lwdiv	;wreg free
  3624   0018E2  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  3625   0018E6  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  3626   0018EA  C007  FFDE         	movff	?___lwdiv,postinc2
  3627   0018EE  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3628   0018F2  0012               	return		;funcret
  3629   0018F4                     __end_of_collect_avg_readings:
  3630                           	callstack 0
  3631                           
  3632 ;; *************** function _color_read_Red *****************
  3633 ;; Defined at:
  3634 ;;		line 29 in file "color.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  tmp             2    9[COMRAM] unsigned int 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  2    4[COMRAM] unsigned int 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3651 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;Total ram usage:        7 bytes
  3653 ;; Hardware stack levels used: 1
  3654 ;; Hardware stack levels required when called: 2
  3655 ;; This function calls:
  3656 ;;		_I2C_2_Master_Read
  3657 ;;		_I2C_2_Master_RepStart
  3658 ;;		_I2C_2_Master_Start
  3659 ;;		_I2C_2_Master_Stop
  3660 ;;		_I2C_2_Master_Write
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;;		_collect_avg_readings
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text22
  3668   001BD6                     __ptext22:
  3669                           	callstack 0
  3670   001BD6                     _color_read_Red:
  3671                           	callstack 28
  3672   001BD6                     
  3673                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  3674   001BD6  ECA3  F00F         	call	_I2C_2_Master_Start	;wreg free
  3675                           
  3676                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  3677   001BDA  0E52               	movlw	82
  3678   001BDC  EC98  F00F         	call	_I2C_2_Master_Write
  3679                           
  3680                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  3681   001BE0  0EB6               	movlw	182
  3682   001BE2  EC98  F00F         	call	_I2C_2_Master_Write
  3683                           
  3684                           ;color.c: 35:  I2C_2_Master_RepStart();
  3685   001BE6  ECA8  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3686                           
  3687                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  3688   001BEA  0E53               	movlw	83
  3689   001BEC  EC98  F00F         	call	_I2C_2_Master_Write
  3690                           
  3691                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  3692   001BF0  0E01               	movlw	1
  3693   001BF2  ECAC  F00E         	call	_I2C_2_Master_Read
  3694   001BF6  6E07               	movwf	??_color_read_Red^0,c
  3695   001BF8  5007               	movf	??_color_read_Red^0,w,c
  3696   001BFA  6E0A               	movwf	color_read_Red@tmp^0,c
  3697   001BFC  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3698                           
  3699                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3700   001BFE  0E00               	movlw	0
  3701   001C00  ECAC  F00E         	call	_I2C_2_Master_Read
  3702   001C04  6E07               	movwf	??_color_read_Red^0,c
  3703   001C06  5007               	movf	??_color_read_Red^0,w,c
  3704   001C08  6E09               	movwf	(??_color_read_Red+2)^0,c
  3705   001C0A  6A08               	clrf	(??_color_read_Red+1)^0,c
  3706   001C0C  500A               	movf	color_read_Red@tmp^0,w,c
  3707   001C0E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3708   001C10  6E0A               	movwf	color_read_Red@tmp^0,c
  3709   001C12  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3710   001C14  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3711   001C16  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3712                           
  3713                           ;color.c: 39:  I2C_2_Master_Stop();
  3714   001C18  EC9E  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3715   001C1C                     
  3716                           ;color.c: 40:  return tmp;
  3717   001C1C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3718   001C20  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3719   001C24  0012               	return		;funcret
  3720   001C26                     __end_of_color_read_Red:
  3721                           	callstack 0
  3722                           
  3723 ;; *************** function _color_read_Green *****************
  3724 ;; Defined at:
  3725 ;;		line 43 in file "color.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;		None
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  tmp             2    9[COMRAM] unsigned int 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  2    4[COMRAM] unsigned int 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3743 ;;Total ram usage:        7 bytes
  3744 ;; Hardware stack levels used: 1
  3745 ;; Hardware stack levels required when called: 2
  3746 ;; This function calls:
  3747 ;;		_I2C_2_Master_Read
  3748 ;;		_I2C_2_Master_RepStart
  3749 ;;		_I2C_2_Master_Start
  3750 ;;		_I2C_2_Master_Stop
  3751 ;;		_I2C_2_Master_Write
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;;		_collect_avg_readings
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text23
  3759   001C26                     __ptext23:
  3760                           	callstack 0
  3761   001C26                     _color_read_Green:
  3762                           	callstack 28
  3763   001C26                     
  3764                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  3765   001C26  ECA3  F00F         	call	_I2C_2_Master_Start	;wreg free
  3766                           
  3767                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3768   001C2A  0E52               	movlw	82
  3769   001C2C  EC98  F00F         	call	_I2C_2_Master_Write
  3770                           
  3771                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  3772   001C30  0EB8               	movlw	184
  3773   001C32  EC98  F00F         	call	_I2C_2_Master_Write
  3774                           
  3775                           ;color.c: 49:  I2C_2_Master_RepStart();
  3776   001C36  ECA8  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3777                           
  3778                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3779   001C3A  0E53               	movlw	83
  3780   001C3C  EC98  F00F         	call	_I2C_2_Master_Write
  3781                           
  3782                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  3783   001C40  0E01               	movlw	1
  3784   001C42  ECAC  F00E         	call	_I2C_2_Master_Read
  3785   001C46  6E07               	movwf	??_color_read_Green^0,c
  3786   001C48  5007               	movf	??_color_read_Green^0,w,c
  3787   001C4A  6E0A               	movwf	color_read_Green@tmp^0,c
  3788   001C4C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3789                           
  3790                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3791   001C4E  0E00               	movlw	0
  3792   001C50  ECAC  F00E         	call	_I2C_2_Master_Read
  3793   001C54  6E07               	movwf	??_color_read_Green^0,c
  3794   001C56  5007               	movf	??_color_read_Green^0,w,c
  3795   001C58  6E09               	movwf	(??_color_read_Green+2)^0,c
  3796   001C5A  6A08               	clrf	(??_color_read_Green+1)^0,c
  3797   001C5C  500A               	movf	color_read_Green@tmp^0,w,c
  3798   001C5E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3799   001C60  6E0A               	movwf	color_read_Green@tmp^0,c
  3800   001C62  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3801   001C64  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3802   001C66  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3803                           
  3804                           ;color.c: 53:  I2C_2_Master_Stop();
  3805   001C68  EC9E  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3806   001C6C                     
  3807                           ;color.c: 54:  return tmp;
  3808   001C6C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3809   001C70  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3810   001C74  0012               	return		;funcret
  3811   001C76                     __end_of_color_read_Green:
  3812                           	callstack 0
  3813                           
  3814 ;; *************** function _color_read_Blue *****************
  3815 ;; Defined at:
  3816 ;;		line 57 in file "color.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  tmp             2    9[COMRAM] unsigned int 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  2    4[COMRAM] unsigned int 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3834 ;;Total ram usage:        7 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 2
  3837 ;; This function calls:
  3838 ;;		_I2C_2_Master_Read
  3839 ;;		_I2C_2_Master_RepStart
  3840 ;;		_I2C_2_Master_Start
  3841 ;;		_I2C_2_Master_Stop
  3842 ;;		_I2C_2_Master_Write
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;;		_collect_avg_readings
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text24
  3850   001C76                     __ptext24:
  3851                           	callstack 0
  3852   001C76                     _color_read_Blue:
  3853                           	callstack 28
  3854   001C76                     
  3855                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  3856   001C76  ECA3  F00F         	call	_I2C_2_Master_Start	;wreg free
  3857                           
  3858                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  3859   001C7A  0E52               	movlw	82
  3860   001C7C  EC98  F00F         	call	_I2C_2_Master_Write
  3861                           
  3862                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  3863   001C80  0EBA               	movlw	186
  3864   001C82  EC98  F00F         	call	_I2C_2_Master_Write
  3865                           
  3866                           ;color.c: 63:  I2C_2_Master_RepStart();
  3867   001C86  ECA8  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3868                           
  3869                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  3870   001C8A  0E53               	movlw	83
  3871   001C8C  EC98  F00F         	call	_I2C_2_Master_Write
  3872                           
  3873                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  3874   001C90  0E01               	movlw	1
  3875   001C92  ECAC  F00E         	call	_I2C_2_Master_Read
  3876   001C96  6E07               	movwf	??_color_read_Blue^0,c
  3877   001C98  5007               	movf	??_color_read_Blue^0,w,c
  3878   001C9A  6E0A               	movwf	color_read_Blue@tmp^0,c
  3879   001C9C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3880                           
  3881                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3882   001C9E  0E00               	movlw	0
  3883   001CA0  ECAC  F00E         	call	_I2C_2_Master_Read
  3884   001CA4  6E07               	movwf	??_color_read_Blue^0,c
  3885   001CA6  5007               	movf	??_color_read_Blue^0,w,c
  3886   001CA8  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3887   001CAA  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3888   001CAC  500A               	movf	color_read_Blue@tmp^0,w,c
  3889   001CAE  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3890   001CB0  6E0A               	movwf	color_read_Blue@tmp^0,c
  3891   001CB2  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3892   001CB4  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3893   001CB6  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3894                           
  3895                           ;color.c: 67:  I2C_2_Master_Stop();
  3896   001CB8  EC9E  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3897   001CBC                     
  3898                           ;color.c: 68:  return tmp;
  3899   001CBC  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3900   001CC0  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3901   001CC4  0012               	return		;funcret
  3902   001CC6                     __end_of_color_read_Blue:
  3903                           	callstack 0
  3904                           
  3905 ;; *************** function _I2C_2_Master_Write *****************
  3906 ;; Defined at:
  3907 ;;		line 45 in file "i2c.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  data_byte       1    wreg     unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  data_byte       1    1[COMRAM] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;Total ram usage:        1 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 1
  3928 ;; This function calls:
  3929 ;;		_I2C_2_Master_Idle
  3930 ;; This function is called by:
  3931 ;;		_color_writetoaddr
  3932 ;;		_color_read_Red
  3933 ;;		_color_read_Green
  3934 ;;		_color_read_Blue
  3935 ;;		_color_read_Clear
  3936 ;;		_read_interrupt_status
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text25
  3941   001F30                     __ptext25:
  3942                           	callstack 0
  3943   001F30                     _I2C_2_Master_Write:
  3944                           	callstack 28
  3945                           
  3946                           ;incstack = 0
  3947                           ;I2C_2_Master_Write@data_byte stored from wreg
  3948   001F30  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3949   001F32                     
  3950                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3951   001F32  EC34  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3952   001F36                     
  3953                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3954   001F36  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3955   001F3A  0012               	return		;funcret
  3956   001F3C                     __end_of_I2C_2_Master_Write:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function _I2C_2_Master_Stop *****************
  3960 ;; Defined at:
  3961 ;;		line 39 in file "i2c.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 1
  3982 ;; This function calls:
  3983 ;;		_I2C_2_Master_Idle
  3984 ;; This function is called by:
  3985 ;;		_color_writetoaddr
  3986 ;;		_color_read_Red
  3987 ;;		_color_read_Green
  3988 ;;		_color_read_Blue
  3989 ;;		_color_read_Clear
  3990 ;;		_read_interrupt_status
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text26
  3995   001F3C                     __ptext26:
  3996                           	callstack 0
  3997   001F3C                     _I2C_2_Master_Stop:
  3998                           	callstack 28
  3999   001F3C                     
  4000                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4001   001F3C  EC34  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4002   001F40                     
  4003                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4004   001F40  010E               	movlb	14	; () banked
  4005   001F42  85DA               	bsf	218,2,b	;volatile
  4006   001F44                     
  4007                           ; BSR set to: 14
  4008   001F44  0012               	return		;funcret
  4009   001F46                     __end_of_I2C_2_Master_Stop:
  4010                           	callstack 0
  4011                           
  4012 ;; *************** function _I2C_2_Master_Start *****************
  4013 ;; Defined at:
  4014 ;;		line 27 in file "i2c.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used: 1
  4034 ;; Hardware stack levels required when called: 1
  4035 ;; This function calls:
  4036 ;;		_I2C_2_Master_Idle
  4037 ;; This function is called by:
  4038 ;;		_color_writetoaddr
  4039 ;;		_color_read_Red
  4040 ;;		_color_read_Green
  4041 ;;		_color_read_Blue
  4042 ;;		_color_read_Clear
  4043 ;;		_read_interrupt_status
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text27
  4048   001F46                     __ptext27:
  4049                           	callstack 0
  4050   001F46                     _I2C_2_Master_Start:
  4051                           	callstack 28
  4052   001F46                     
  4053                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4054   001F46  EC34  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4055   001F4A                     
  4056                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4057   001F4A  010E               	movlb	14	; () banked
  4058   001F4C  81DA               	bsf	218,0,b	;volatile
  4059   001F4E                     
  4060                           ; BSR set to: 14
  4061   001F4E  0012               	return		;funcret
  4062   001F50                     __end_of_I2C_2_Master_Start:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _I2C_2_Master_RepStart *****************
  4066 ;; Defined at:
  4067 ;;		line 33 in file "i2c.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 1
  4088 ;; This function calls:
  4089 ;;		_I2C_2_Master_Idle
  4090 ;; This function is called by:
  4091 ;;		_color_read_Red
  4092 ;;		_color_read_Green
  4093 ;;		_color_read_Blue
  4094 ;;		_color_read_Clear
  4095 ;;		_read_interrupt_status
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text28
  4100   001F50                     __ptext28:
  4101                           	callstack 0
  4102   001F50                     _I2C_2_Master_RepStart:
  4103                           	callstack 28
  4104   001F50                     
  4105                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4106   001F50  EC34  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4107   001F54                     
  4108                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4109   001F54  010E               	movlb	14	; () banked
  4110   001F56  83DA               	bsf	218,1,b	;volatile
  4111   001F58                     
  4112                           ; BSR set to: 14
  4113   001F58  0012               	return		;funcret
  4114   001F5A                     __end_of_I2C_2_Master_RepStart:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function _I2C_2_Master_Read *****************
  4118 ;; Defined at:
  4119 ;;		line 51 in file "i2c.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  ack             1    wreg     unsigned char 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  ack             1    2[COMRAM] unsigned char 
  4124 ;;  tmp             1    3[COMRAM] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      unsigned char 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;Total ram usage:        3 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; Hardware stack levels required when called: 1
  4141 ;; This function calls:
  4142 ;;		_I2C_2_Master_Idle
  4143 ;; This function is called by:
  4144 ;;		_color_read_Red
  4145 ;;		_color_read_Green
  4146 ;;		_color_read_Blue
  4147 ;;		_color_read_Clear
  4148 ;;		_read_interrupt_status
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text29
  4153   001D58                     __ptext29:
  4154                           	callstack 0
  4155   001D58                     _I2C_2_Master_Read:
  4156                           	callstack 28
  4157                           
  4158                           ; BSR set to: 14
  4159                           ;incstack = 0
  4160                           ;I2C_2_Master_Read@ack stored from wreg
  4161   001D58  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4162   001D5A                     
  4163                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4164   001D5A  EC34  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4165   001D5E                     
  4166                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4167   001D5E  010E               	movlb	14	; () banked
  4168   001D60  87DA               	bsf	218,3,b	;volatile
  4169                           
  4170                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4171   001D62  EC34  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4172   001D66                     
  4173                           ;i2c.c: 57:   tmp = SSP2BUF;
  4174   001D66  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4175                           
  4176                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4177   001D6A  EC34  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4178   001D6E                     
  4179                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4180   001D6E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4181   001D70  B4D8               	btfsc	status,2,c
  4182   001D72  EFBD  F00E         	goto	u991
  4183   001D76  EFC1  F00E         	goto	u990
  4184   001D7A                     u991:
  4185   001D7A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4186   001D7C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4187   001D7E  EFC2  F00E         	goto	u1008
  4188   001D82                     u990:
  4189   001D82  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4190   001D84                     u1008:
  4191   001D84  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4192   001D86  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4193   001D88  010E               	movlb	14	; () banked
  4194   001D8A  51DA               	movf	218,w,b	;volatile
  4195   001D8C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4196   001D8E  0BDF               	andlw	-33
  4197   001D90  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4198   001D92  6FDA               	movwf	218,b	;volatile
  4199   001D94                     
  4200                           ; BSR set to: 14
  4201                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4202   001D94  89DA               	bsf	218,4,b	;volatile
  4203   001D96                     
  4204                           ; BSR set to: 14
  4205                           ;i2c.c: 61:   return tmp;
  4206   001D96  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4207   001D98                     
  4208                           ; BSR set to: 14
  4209   001D98  0012               	return		;funcret
  4210   001D9A                     __end_of_I2C_2_Master_Read:
  4211                           	callstack 0
  4212                           
  4213 ;; *************** function _I2C_2_Master_Idle *****************
  4214 ;; Defined at:
  4215 ;;		line 22 in file "i2c.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;		None
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      void 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;Total ram usage:        1 bytes
  4234 ;; Hardware stack levels used: 1
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_I2C_2_Master_Start
  4239 ;;		_I2C_2_Master_RepStart
  4240 ;;		_I2C_2_Master_Stop
  4241 ;;		_I2C_2_Master_Write
  4242 ;;		_I2C_2_Master_Read
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text30
  4247   001E68                     __ptext30:
  4248                           	callstack 0
  4249   001E68                     _I2C_2_Master_Idle:
  4250                           	callstack 28
  4251   001E68                     l154:
  4252   001E68  010E               	movlb	14	; () banked
  4253   001E6A  B5D8               	btfsc	216,2,b	;volatile
  4254   001E6C  EF3A  F00F         	goto	u871
  4255   001E70  EF3C  F00F         	goto	u870
  4256   001E74                     u871:
  4257   001E74  EF34  F00F         	goto	l154
  4258   001E78                     u870:
  4259   001E78                     
  4260                           ; BSR set to: 14
  4261   001E78  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4262   001E7C  0E1F               	movlw	31
  4263   001E7E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4264   001E80  A4D8               	btfss	status,2,c
  4265   001E82  EF45  F00F         	goto	u881
  4266   001E86  EF47  F00F         	goto	u880
  4267   001E8A                     u881:
  4268   001E8A  EF34  F00F         	goto	l154
  4269   001E8E                     u880:
  4270   001E8E                     
  4271                           ; BSR set to: 14
  4272   001E8E  0012               	return		;funcret
  4273   001E90                     __end_of_I2C_2_Master_Idle:
  4274                           	callstack 0
  4275                           
  4276 ;; *************** function ___lwdiv *****************
  4277 ;; Defined at:
  4278 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  dividend        2    6[COMRAM] unsigned int 
  4281 ;;  divisor         2    8[COMRAM] unsigned int 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  quotient        2   10[COMRAM] unsigned int 
  4284 ;;  counter         1   12[COMRAM] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  2    6[COMRAM] unsigned int 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4297 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4298 ;;Total ram usage:        7 bytes
  4299 ;; Hardware stack levels used: 1
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_setMotorPWM
  4304 ;;		_collect_avg_readings
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text31
  4309   001AC0                     __ptext31:
  4310                           	callstack 0
  4311   001AC0                     ___lwdiv:
  4312                           	callstack 29
  4313   001AC0  0E00               	movlw	0
  4314   001AC2  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4315   001AC4  0E00               	movlw	0
  4316   001AC6  6E0B               	movwf	___lwdiv@quotient^0,c
  4317   001AC8  5009               	movf	___lwdiv@divisor^0,w,c
  4318   001ACA  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4319   001ACC  B4D8               	btfsc	status,2,c
  4320   001ACE  EF6B  F00D         	goto	u1051
  4321   001AD2  EF6D  F00D         	goto	u1050
  4322   001AD6                     u1051:
  4323   001AD6  EF95  F00D         	goto	l857
  4324   001ADA                     u1050:
  4325   001ADA  0E01               	movlw	1
  4326   001ADC  6E0D               	movwf	___lwdiv@counter^0,c
  4327   001ADE  EF75  F00D         	goto	l2084
  4328   001AE2                     l2082:
  4329   001AE2  90D8               	bcf	status,0,c
  4330   001AE4  3609               	rlcf	___lwdiv@divisor^0,f,c
  4331   001AE6  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4332   001AE8  2A0D               	incf	___lwdiv@counter^0,f,c
  4333   001AEA                     l2084:
  4334   001AEA  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4335   001AEC  EF7A  F00D         	goto	u1061
  4336   001AF0  EF7C  F00D         	goto	u1060
  4337   001AF4                     u1061:
  4338   001AF4  EF71  F00D         	goto	l2082
  4339   001AF8                     u1060:
  4340   001AF8                     l2086:
  4341   001AF8  90D8               	bcf	status,0,c
  4342   001AFA  360B               	rlcf	___lwdiv@quotient^0,f,c
  4343   001AFC  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4344   001AFE  5009               	movf	___lwdiv@divisor^0,w,c
  4345   001B00  5C07               	subwf	___lwdiv@dividend^0,w,c
  4346   001B02  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4347   001B04  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4348   001B06  A0D8               	btfss	status,0,c
  4349   001B08  EF88  F00D         	goto	u1071
  4350   001B0C  EF8A  F00D         	goto	u1070
  4351   001B10                     u1071:
  4352   001B10  EF8F  F00D         	goto	l2094
  4353   001B14                     u1070:
  4354   001B14  5009               	movf	___lwdiv@divisor^0,w,c
  4355   001B16  5E07               	subwf	___lwdiv@dividend^0,f,c
  4356   001B18  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4357   001B1A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4358   001B1C  800B               	bsf	___lwdiv@quotient^0,0,c
  4359   001B1E                     l2094:
  4360   001B1E  90D8               	bcf	status,0,c
  4361   001B20  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4362   001B22  3209               	rrcf	___lwdiv@divisor^0,f,c
  4363   001B24  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4364   001B26  EF7C  F00D         	goto	l2086
  4365   001B2A                     l857:
  4366   001B2A  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4367   001B2E  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4368   001B32  0012               	return		;funcret
  4369   001B34                     __end_of___lwdiv:
  4370                           	callstack 0
  4371                           
  4372 ;; *************** function _LEDSon_init *****************
  4373 ;; Defined at:
  4374 ;;		line 18 in file "LEDsOn.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		None
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_main
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text32
  4402   001EB6                     __ptext32:
  4403                           	callstack 0
  4404   001EB6                     _LEDSon_init:
  4405                           	callstack 30
  4406   001EB6                     
  4407                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  4408   001EB6  9288               	bcf	136,1,c	;volatile
  4409                           
  4410                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  4411   001EB8  9088               	bcf	136,0,c	;volatile
  4412                           
  4413                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  4414   001EBA  9884               	bcf	132,4,c	;volatile
  4415                           
  4416                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  4417   001EBC  9684               	bcf	132,3,c	;volatile
  4418                           
  4419                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  4420   001EBE  9086               	bcf	134,0,c	;volatile
  4421                           
  4422                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  4423   001EC0  9287               	bcf	135,1,c	;volatile
  4424                           
  4425                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  4426   001EC2  9E86               	bcf	134,7,c	;volatile
  4427                           
  4428                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  4429   001EC4  9881               	bcf	129,4,c	;volatile
  4430                           
  4431                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  4432   001EC6  8E7E               	bsf	126,7,c	;volatile
  4433                           
  4434                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  4435   001EC8  827F               	bsf	127,1,c	;volatile
  4436                           
  4437                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  4438   001ECA  8879               	bsf	121,4,c	;volatile
  4439                           
  4440                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  4441   001ECC  987C               	bcf	124,4,c	;volatile
  4442                           
  4443                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  4444   001ECE  9280               	bcf	128,1,c	;volatile
  4445                           
  4446                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  4447   001ED0  907E               	bcf	126,0,c	;volatile
  4448                           
  4449                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  4450   001ED2  9080               	bcf	128,0,c	;volatile
  4451                           
  4452                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  4453   001ED4  967C               	bcf	124,3,c	;volatile
  4454   001ED6  0012               	return		;funcret
  4455   001ED8                     __end_of_LEDSon_init:
  4456                           	callstack 0
  4457                           
  4458                           	psect	rparam
  4459   000000                     
  4460                           	psect	idloc
  4461                           
  4462                           ;Config register IDLOC0 @ 0x200000
  4463                           ;	unspecified, using default values
  4464   200000                     	org	2097152
  4465   200000  0FFF               	dw	4095
  4466                           
  4467                           ;Config register IDLOC1 @ 0x200002
  4468                           ;	unspecified, using default values
  4469   200002                     	org	2097154
  4470   200002  0FFF               	dw	4095
  4471                           
  4472                           ;Config register IDLOC2 @ 0x200004
  4473                           ;	unspecified, using default values
  4474   200004                     	org	2097156
  4475   200004  0FFF               	dw	4095
  4476                           
  4477                           ;Config register IDLOC3 @ 0x200006
  4478                           ;	unspecified, using default values
  4479   200006                     	org	2097158
  4480   200006  0FFF               	dw	4095
  4481                           
  4482                           ;Config register IDLOC4 @ 0x200008
  4483                           ;	unspecified, using default values
  4484   200008                     	org	2097160
  4485   200008  0FFF               	dw	4095
  4486                           
  4487                           ;Config register IDLOC5 @ 0x20000A
  4488                           ;	unspecified, using default values
  4489   20000A                     	org	2097162
  4490   20000A  0FFF               	dw	4095
  4491                           
  4492                           ;Config register IDLOC6 @ 0x20000C
  4493                           ;	unspecified, using default values
  4494   20000C                     	org	2097164
  4495   20000C  0FFF               	dw	4095
  4496                           
  4497                           ;Config register IDLOC7 @ 0x20000E
  4498                           ;	unspecified, using default values
  4499   20000E                     	org	2097166
  4500   20000E  0FFF               	dw	4095
  4501                           
  4502                           	psect	config
  4503                           
  4504                           ;Config register CONFIG1L @ 0x300000
  4505                           ;	External Oscillator mode Selection bits
  4506                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4507                           ;	Power-up default value for COSC bits
  4508                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4509   300000                     	org	3145728
  4510   300000  AA                 	db	170
  4511                           
  4512                           ;Config register CONFIG1H @ 0x300001
  4513                           ;	unspecified, using default values
  4514                           ;	Clock Out Enable bit
  4515                           ;	CLKOUTEN = 0x1, unprogrammed default
  4516                           ;	Clock Switch Enable bit
  4517                           ;	CSWEN = 0x1, unprogrammed default
  4518                           ;	Fail-Safe Clock Monitor Enable bit
  4519                           ;	FCMEN = 0x1, unprogrammed default
  4520   300001                     	org	3145729
  4521   300001  FF                 	db	255
  4522                           
  4523                           ;Config register CONFIG2L @ 0x300002
  4524                           ;	unspecified, using default values
  4525                           ;	Master Clear Enable bit
  4526                           ;	MCLRE = 0x1, unprogrammed default
  4527                           ;	Power-up Timer Enable bit
  4528                           ;	PWRTE = 0x1, unprogrammed default
  4529                           ;	Low-power BOR enable bit
  4530                           ;	LPBOREN = 0x1, unprogrammed default
  4531                           ;	Brown-out Reset Enable bits
  4532                           ;	BOREN = 0x3, unprogrammed default
  4533   300002                     	org	3145730
  4534   300002  FF                 	db	255
  4535                           
  4536                           ;Config register CONFIG2H @ 0x300003
  4537                           ;	unspecified, using default values
  4538                           ;	Brown Out Reset Voltage selection bits
  4539                           ;	BORV = 0x3, unprogrammed default
  4540                           ;	ZCD Disable bit
  4541                           ;	ZCD = 0x1, unprogrammed default
  4542                           ;	PPSLOCK bit One-Way Set Enable bit
  4543                           ;	PPS1WAY = 0x1, unprogrammed default
  4544                           ;	Stack Full/Underflow Reset Enable bit
  4545                           ;	STVREN = 0x1, unprogrammed default
  4546                           ;	Debugger Enable bit
  4547                           ;	DEBUG = 0x1, unprogrammed default
  4548                           ;	Extended Instruction Set Enable bit
  4549                           ;	XINST = 0x1, unprogrammed default
  4550   300003                     	org	3145731
  4551   300003  FF                 	db	255
  4552                           
  4553                           ;Config register CONFIG3L @ 0x300004
  4554                           ;	WDT Period Select bits
  4555                           ;	WDTCPS = 0x1F, unprogrammed default
  4556                           ;	WDT operating mode
  4557                           ;	WDTE = OFF, WDT Disabled
  4558   300004                     	org	3145732
  4559   300004  9F                 	db	159
  4560                           
  4561                           ;Config register CONFIG3H @ 0x300005
  4562                           ;	unspecified, using default values
  4563                           ;	WDT Window Select bits
  4564                           ;	WDTCWS = 0x7, unprogrammed default
  4565                           ;	WDT input clock selector
  4566                           ;	WDTCCS = 0x7, unprogrammed default
  4567   300005                     	org	3145733
  4568   300005  FF                 	db	255
  4569                           
  4570                           ;Config register CONFIG4L @ 0x300006
  4571                           ;	unspecified, using default values
  4572                           ;	Write Protection Block 0
  4573                           ;	WRT0 = 0x1, unprogrammed default
  4574                           ;	Write Protection Block 1
  4575                           ;	WRT1 = 0x1, unprogrammed default
  4576                           ;	Write Protection Block 2
  4577                           ;	WRT2 = 0x1, unprogrammed default
  4578                           ;	Write Protection Block 3
  4579                           ;	WRT3 = 0x1, unprogrammed default
  4580                           ;	Write Protection Block 3
  4581                           ;	WRT4 = 0x1, unprogrammed default
  4582                           ;	Write Protection Block 3
  4583                           ;	WRT5 = 0x1, unprogrammed default
  4584                           ;	Write Protection Block 3
  4585                           ;	WRT6 = 0x1, unprogrammed default
  4586                           ;	Write Protection Block 3
  4587                           ;	WRT7 = 0x1, unprogrammed default
  4588   300006                     	org	3145734
  4589   300006  FF                 	db	255
  4590                           
  4591                           ;Config register CONFIG4H @ 0x300007
  4592                           ;	unspecified, using default values
  4593                           ;	Configuration Register Write Protection bit
  4594                           ;	WRTC = 0x1, unprogrammed default
  4595                           ;	Boot Block Write Protection bit
  4596                           ;	WRTB = 0x1, unprogrammed default
  4597                           ;	Data EEPROM Write Protection bit
  4598                           ;	WRTD = 0x1, unprogrammed default
  4599                           ;	Scanner Enable bit
  4600                           ;	SCANE = 0x1, unprogrammed default
  4601                           ;	Low Voltage Programming Enable bit
  4602                           ;	LVP = 0x1, unprogrammed default
  4603   300007                     	org	3145735
  4604   300007  FF                 	db	255
  4605                           
  4606                           ;Config register CONFIG5L @ 0x300008
  4607                           ;	unspecified, using default values
  4608                           ;	UserNVM Program Memory Code Protection bit
  4609                           ;	CP = 0x1, unprogrammed default
  4610                           ;	DataNVM Memory Code Protection bit
  4611                           ;	CPD = 0x1, unprogrammed default
  4612   300008                     	org	3145736
  4613   300008  FF                 	db	255
  4614                           
  4615                           ;Config register CONFIG5H @ 0x300009
  4616                           ;	unspecified, using default values
  4617   300009                     	org	3145737
  4618   300009  FF                 	db	255
  4619                           
  4620                           ;Config register CONFIG6L @ 0x30000A
  4621                           ;	unspecified, using default values
  4622                           ;	Table Read Protection Block 0
  4623                           ;	EBTR0 = 0x1, unprogrammed default
  4624                           ;	Table Read Protection Block 1
  4625                           ;	EBTR1 = 0x1, unprogrammed default
  4626                           ;	Table Read Protection Block 2
  4627                           ;	EBTR2 = 0x1, unprogrammed default
  4628                           ;	Table Read Protection Block 3
  4629                           ;	EBTR3 = 0x1, unprogrammed default
  4630                           ;	Table Read Protection Block 4
  4631                           ;	EBTR4 = 0x1, unprogrammed default
  4632                           ;	Table Read Protection Block 5
  4633                           ;	EBTR5 = 0x1, unprogrammed default
  4634                           ;	Table Read Protection Block 6
  4635                           ;	EBTR6 = 0x1, unprogrammed default
  4636                           ;	Table Read Protection Block 7
  4637                           ;	EBTR7 = 0x1, unprogrammed default
  4638   30000A                     	org	3145738
  4639   30000A  FF                 	db	255
  4640                           
  4641                           ;Config register CONFIG6H @ 0x30000B
  4642                           ;	unspecified, using default values
  4643                           ;	Boot Block Table Read Protection bit
  4644                           ;	EBTRB = 0x1, unprogrammed default
  4645   30000B                     	org	3145739
  4646   30000B  FF                 	db	255
  4647                           tosu	equ	0xFFF
  4648                           tosh	equ	0xFFE
  4649                           tosl	equ	0xFFD
  4650                           stkptr	equ	0xFFC
  4651                           pclatu	equ	0xFFB
  4652                           pclath	equ	0xFFA
  4653                           pcl	equ	0xFF9
  4654                           tblptru	equ	0xFF8
  4655                           tblptrh	equ	0xFF7
  4656                           tblptrl	equ	0xFF6
  4657                           tablat	equ	0xFF5
  4658                           prodh	equ	0xFF4
  4659                           prodl	equ	0xFF3
  4660                           indf0	equ	0xFEF
  4661                           postinc0	equ	0xFEE
  4662                           postdec0	equ	0xFED
  4663                           preinc0	equ	0xFEC
  4664                           plusw0	equ	0xFEB
  4665                           fsr0h	equ	0xFEA
  4666                           fsr0l	equ	0xFE9
  4667                           wreg	equ	0xFE8
  4668                           indf1	equ	0xFE7
  4669                           postinc1	equ	0xFE6
  4670                           postdec1	equ	0xFE5
  4671                           preinc1	equ	0xFE4
  4672                           plusw1	equ	0xFE3
  4673                           fsr1h	equ	0xFE2
  4674                           fsr1l	equ	0xFE1
  4675                           bsr	equ	0xFE0
  4676                           indf2	equ	0xFDF
  4677                           postinc2	equ	0xFDE
  4678                           postdec2	equ	0xFDD
  4679                           preinc2	equ	0xFDC
  4680                           plusw2	equ	0xFDB
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    0
    Data        9
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160     77     142
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2086$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2033$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2033$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    collect_avg_readings@blue_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@blue_read(BANK0[2]), 

    collect_avg_readings@green_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@green_read(BANK0[2]), 

    collect_avg_readings@red_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@red_read(BANK0[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S532DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S532DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _collect_avg_readings->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               105   105      0   11702
                                             88 COMRAM     2     2      0
                                             23 BANK0     54    54      0
                  _I2C_2_Master_Init
                        _LEDSon_init
               _collect_avg_readings
                   _color_click_init
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    5722
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    2437
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     598
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     598
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _collect_avg_readings                                10     4      6    1717
                                             13 COMRAM    10     4      6
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     814
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _collect_avg_readings
     ___lwdiv
       ___wmul (ARG)
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_read_Blue
   _color_read_Green
   _color_read_Red
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4D      8E       5       88.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITBIGSFRllhhhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllhhhl     37      0       0      42        0.0%
BITBIGSFRllhhhl     2D      0       0      45        0.0%
BITBIGSFRllllhl     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllhhhl     1E      0       0      46        0.0%
BITBIGSFRhhlll      1D      0       0      36        0.0%
BITBIGSFRllhhl      11      0       0      47        0.0%
BITBIGSFRllllhl      F      0       0      54        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhl      9      0       0      53        0.0%
BITBIGSFRllhhhl      8      0       0      43        0.0%
BITBIGSFRlllllh      6      0       0      55        0.0%
BITBIGSFRllllhh      6      0       0      51        0.0%
BITBIGSFRlllhl       5      0       0      50        0.0%
BITBIGSFRlllhh       3      0       0      49        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRllhhhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhhhh      1      0       0      37        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhl      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllhl        1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     129      57        0.0%
DATA                 0      0     129       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 15:16:12 2022

                _color_read_Red 1BD6                 _color_read_Blue 1C76                              l22 1F16  
                            l31 1CC4                              l25 1C24                              l19 1E0C  
                            l28 1C74                              l95 1512                              l88 1A44  
           ___wmul@multiplicand 0003                _color_read_Green 1C26                             l151 1E66  
                           l160 1F4E                             l313 1EF6                             l154 1E68  
                           l322 1F1A                             l163 1F58                             l331 1E3C  
                           l172 1D98                             l157 1E8E                             l325 1F2E  
                           l166 1F44                             l257 1ED6                             l169 1F3A  
                           l274 18F2                             l366 1EB4                             l480 122C  
                           l493 1676                             l864 1B32                             l857 1B2A  
                           u700 1D56                             u701 1D52                             u710 10B8  
                           u711 10B4                             u720 10EA                             u800 1596  
                           u721 10E6                             u801 1592                             u810 15C0  
                           u731 1114                             u811 15BC                             u740 1138  
                           u820 15EE                             u660 1906                             u900 0E5C  
                           u741 1134                             u821 15EA                             u661 1902  
                           u750 1162                             u830 1636                             u670 1918  
                           u910 0E6E                             u751 115E                             u831 1632  
                           u671 1914                             u911 0E6A                             u760 11A2  
                           u680 1940                             u840 1A54                             u920 0EAA  
                           u761 119E                             u681 193C                             u841 1A50  
                           u921 0EA6                             u770 11EC                             u690 1976  
                           u850 1AAA                             u930 0ED6                             u771 11E8  
                           u691 1972                             u851 1AA6                             u931 0ED2  
                           u780 1526                             u860 1DB4                             u940 0EEC  
                           u781 1522                             u861 1DB0                             u941 0EE8  
                           u870 1E78                             u790 1558                             u950 1026  
                           u871 1E74                             u791 1554                             u951 1022  
                           u880 1E8E                             u960 1044                             u881 1E8A  
                           u961 1040                             u970 105E                             u890 0E5A  
                           u971 105A                             u891 0E54                             u980 106E  
                           u981 106A                             u990 1D82                             u991 1D7A  
                           _abs 1D9A                             _pad 1A46                             wreg 000FE8  
                          l1102 1D12                            l2000 1D96                            l1121 19BC  
                          l1106 1DD0                            l2010 16B8                            ?_abs 0013  
                          l1132 1F64                            l2020 175A                            l2012 16BC  
                          l2004 1678                            l2100 1CD2                            l1044 1B84  
                          l1109 1DD8                            l2110 1DDE                            l1070 1ABE  
                          l2014 16CC                            l2006 169C                            l2102 1CEE  
                          l2200 17DE                            l2040 1E50                            l2112 1DE8  
                          l2120 19C6                            l2024 178A                            l2016 16E8  
                          l2008 16AA                            l2104 1D0A                            l1129 1D56  
                          l2050 1C1C                            l2202 17EC                            l2042 1E52  
                          l2034 1E3E                            l2114 1DF8                            l2130 1A2A  
                          l2122 19F0                            l1066 1A68                            l2018 1704  
                          l1075 0EB6                            l2060 1C76                            l2220 1852  
                          l2204 17EE                            l2044 1E54                            l2036 1E48  
                          l2116 1E02                            l2108 1DDA                            l2132 1A2C  
                          l2124 1A14                            l2140 13A8                            l2028 179C  
                          l1077 0EBE                            l2062 1CBC                            l2054 1C26  
                          l2230 1892                            l2222 1862                            l2214 182E  
                          l2206 17FE                            l2038 1E4E                            l2046 1EFA  
                          l2134 1A36                            l2126 1A1E                            l2118 19BE  
                          l2070 1E90                            l2150 1472                            l2142 13C4  
                          l1078 0F04                            l2080 1ADA                            l2056 1C6C  
                          l2048 1BD6                            l2232 18A6                            l2224 188E  
                          l2216 1842                            l2208 182A                            l2136 1A38  
                          l2128 1A20                            l2160 1EE2                            l2072 1EAC  
                          l2152 148E                            l2144 1418                            l1096 17C4  
                          l2400 1326                            l1089 10A4                            l2090 1B14  
                          l2082 1AE2                            l2234 18B4                            l2218 1850  
                          l2138 1A42                            l2170 1EF4                            l2162 1EE4  
                          l2066 1F1A                            l2154 14D2                            l2146 142C  
                          l2402 1332                            l2156 1EB6                            l2092 1B1C  
                          l2084 1AEA                            l2076 1AC0                            l2236 18B6  
                          l2164 1EE6                            l2068 1F2A                            l2148 1430  
                          l2180 1B72                            l2172 1B34                            l2404 134A  
                          l2340 1232                            l2094 1B1E                            l2086 1AF8  
                          l2078 1AC8                            l2238 18C6                            l2166 1EF0  
                          l2158 1ED8                            l2190 1E24                            l2174 1B46  
                          l2406 1366                            l2350 1246                            l2342 1236  
                          l2096 1B24                            l2088 1AFE                            l2192 17C6  
                          l2168 1EF2                            l2184 1E0E                            l1800 1906  
                          l2176 1B4E                            l2408 1394                            l2360 1264  
                          l2352 124C                            l2344 123A                            l2186 1E12  
                          l1802 1918                            l2098 1CC6                            l2178 1B56  
                          l2370 127E                            l2362 126A                            l2354 1250  
                          l2346 123E                            l2338 122E                            l2188 1E20  
                          l1820 10A6                            l1804 1922                            l1812 1D14  
                          l1900 1A46                            l2380 12A4                            l2372 1286  
                          l2364 126E                            l2356 1254                            l2348 1242  
                          l2198 17CA                            l1830 10EA                            l1822 10AA  
                          l1806 1940                            l1814 1D20                            l1910 1A8C  
                          l1902 1A54                            l2390 12D2                            l2382 12B6  
                          l2374 128C                            l2366 1272                            l2358 125C  
                          l1920 1E78                            l1840 1140                            l1832 110A  
                          l1824 10B8                            l1808 1976                            l1816 1D32  
                          l1912 1AAA                            l1904 1A60                            l2392 12D4  
                          l2384 12C0                            l2376 1298                            l2368 1276  
                          l1850 11C2                            l1842 1154                            l1834 110E  
                          l1826 10D8                            l1914 1D9A                            l1818 1D36  
                          l1906 1A74                            l1930 0E8E                            l1922 0E2A  
                          l2394 12E0                            l2386 12C8                            l2378 12A4  
                          l1860 120C                            l1852 11C4                            l1844 1162  
                          l1836 111A                            l1828 10DC                            l1916 1DB4  
                          l1908 1A88                            l1940 0EEC                            l1932 0EAA  
                          l1924 0E4A                            l2396 12EC                            l2388 12D0  
                          l1918 1E68                            l1854 11D6                            l1846 1174  
                          l1838 1138                            l1870 1546                            l1950 0F1A  
                          l1942 0EF8                            l1934 0EC6                            l1926 0E5E  
                          l2398 12F8                            l1848 11A2                            l1856 11DC  
                          l1880 159E                            l1872 154A                            l1864 1514  
                          l1960 1026                            l1952 0F9C                            l1944 0F00  
                          l1936 0ED6                            l1928 0E6E                            l1858 11EC  
                          l1890 1620                            l1882 15B2                            l1874 1558  
                          l1866 1518                            l1970 1084                            l1962 1044  
                          l1954 0FA2                            l1946 0F0C                            l1938 0EDC  
                          l1980 1F36                            l1884 15C0                            l1892 1626  
                          l1876 1578                            l1868 1526                            l1964 105E  
                          l1956 0FA8                            l1948 0F14                            l1990 1D5A  
                          l1974 1F46                            l1982 1F3C                            l1894 1636  
                          l1886 15EE                            l1878 1596                            l1798 18F4  
                          l1966 106E                            l1958 100C                            ?_pad 0011  
                          l1992 1D5E                            l1976 1F4A                            l1984 1F40  
                          l1896 1656                            l1888 160E                            l1968 1074  
                          l1994 1D66                            l1986 1F50                            l1978 1F32  
                          l1996 1D6E                            l1988 1F54                            l1998 1D94  
                          STR_1 0E17                            STR_2 0E01                            u1010 169C  
                          u1011 1698                            u1100 148E                            u1020 16E8  
                          u1101 148A                            u1021 16E4                            u1110 1E3C  
                          u1030 1704                            u1111 1E38                            u1031 1700  
                          u1008 1D84                            u1120 17FE                            u1040 1F2A  
                          u1121 17FA                            u1041 1F26                            u1050 1ADA  
                          u1130 1862                            u1051 1AD6                            u1131 185E  
                          u1060 1AF8                            u1140 18C6                    ?_LEDSon_init 0001  
                          u1061 1AF4                            u1141 18C2                            u1221 12AE  
                          u1070 1B14                            u1071 1B10                            u1080 1D0A  
                          u1081 1D06                            u1090 13C4                            u1307 1848  
                          u1091 13C0                            u1317 18AC                    _BAUD4CONbits 000EE9  
                          u1277 133C                            u1287 1DEE                            u1297 17E4  
                          _T2PR 000FBC                            abs@a 0013                            _dbuf 00C5  
                          _main 122E                            _dtoa 0E2A                            _prec 00C3  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            prodh 000FF4  
                          prodl 000FF3                            start 0000          __end_of_color_read_Red 1C26  
                  ___param_bank 000000                           ??_abs 0015                           ??_pad 0017  
               __end_of___aodiv 122E                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 1678                 __end_of___lwdiv 1B34                    vfpfcnvrt@fmt 0041  
                  main@red_read 00A7         __end_of_sendCharSerial4 1F30      __end_of_I2C_2_Master_Start 1F50  
    __end_of_I2C_2_Master_Write 1F3C                           _flags 005B                           _fputc 18F4  
                         _fputs 1D14                           pad@fp 0011                           _width 00C1  
                         _putch 1F64                           dtoa@d 001E                           dtoa@i 003C  
                         dtoa@n 0034                           dtoa@p 0030                           dtoa@s 003E  
                         dtoa@w 0032                           tablat 000FF5                           plusw1 000FE3  
                         plusw2 000FDB                           status 000FD8                 __end_of_sprintf 1B86  
       __end_of_color_read_Blue 1CC6           _I2C_2_Master_RepStart 1F50                 ?_color_read_Red 0005  
               __initialization 1B86                    __end_of_main 13A8                    __end_of_dtoa 10A6  
                        ??_main 0059                          ??_dtoa 0026                   __activetblptr 000001  
                 main@blue_read 00AB                    ?_setMotorPWM 000E                          ?_fputc 0001  
                        ?_fputs 000A                          _CCPR1H 000FAA                          _CCPR2H 000FA6  
                        _CCPR3H 000F25                          _CCPR4H 000F21    collect_avg_readings@red_read 000E  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          _RE4PPS 000E76                          _RG6PPS 000E88  
      __end_of_color_click_init 1E0E                          _RX4PPS 000E15                          _TX4REG 000EE4  
                  _CCPTMRS0bits 000FAD                    vfprintf@cfmt 0057                       ??___aodiv 0011  
                     ??___aomod 0011                          ___wmul 1E90                       ??___lwdiv 000B  
                        clear_0 1BAC                          clear_1 1BB8                          isa$std 000001  
                        pad@buf 0013                          dtoa@fp 001C                          fputc@c 0001  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                          putch@c 0001  
              __end_of_vfprintf 1D14               ??_initDCmotorsPWM 0001                       ??_sprintf 0059  
                    __accesstop 0060         __end_of__initialization 1BC8        __end_of_color_read_Green 1C76  
        ?_I2C_2_Master_RepStart 0001                   ___rparam_used 000001                ?_color_read_Blue 0005  
  __end_of_collect_avg_readings 18F4                  __pcstackCOMRAM 0001                    __pidataBANK0 1F5A  
    collect_avg_readings@i_1417 0016      collect_avg_readings@i_1418 0017                   __end_of_fputc 19BE  
                 __end_of_fputs 1D58                   __end_of_putch 1F66                         ??_fputc 0005  
                       ??_fputs 000E                         ??_putch 0001                      __pbssBANK0 00AD  
                    __pbssBANK1 0100               _color_writetoaddr 1EF8                    _T2CLKCONbits 000FBF  
            ?_color_writetoaddr 0003                         ?___wmul 0001             ??_color_writetoaddr 0004  
                main@green_read 00A9                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5          color_writetoaddr@value 0003  
              ??_color_read_Red 0007       __end_of_color_writetoaddr 1F18              _I2C_2_Master_Start 1F46  
                    _initUSART4 1ED8              _I2C_2_Master_Write 1F30                         __Hparam 0000  
                       __Lparam 0000               color_read_Red@tmp 000A         sendStringSerial4@string 0002  
                       ___aodiv 10A6                         ___aomod 1514             ?_I2C_2_Master_Start 0001  
                       ___lwdiv 1AC0             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0051  
                  __psmallconst 0E00                         __pcinit 1B86                         __ramtop 0E00  
                       __ptext0 122E                         __ptext1 1B34                         __ptext2 1CC6  
                       __ptext3 1678                         __ptext4 0E2A                         __ptext5 1A46  
                       __ptext6 1D14                         __ptext7 18F4                         __ptext8 1F64  
                       __ptext9 1D9A                       _T2CONbits 000FBD                       _T2HLTbits 000FBE  
                 _RxBufWriteCnt 005F            _collect_avg_readings 17C6                         main@buf 0080  
                       _sprintf 1B34            ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002  
          end_of_initialization 1BC8  collect_avg_readings@green_read 0010                         fputc@fp 0003  
                       fputs@fp 000C               ?_color_click_init 0001              ??_color_click_init 0005  
             __end_of_vfpfcnvrt 17C6                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
              vfpfcnvrt@convarg 0047                      main@F14639 00E5                      ??_vfprintf 0057  
               _initDCmotorsPWM 19BE              setMotorPWM@negDuty 0013                       _TRISAbits 000F81  
            setMotorPWM@posDuty 0012                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88           ?_collect_avg_readings 000E        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                     _CCP1CONbits 000FAB                    _EUSART4RXbuf 00AD  
                  _EUSART4TXbuf 0100                     _CCP2CONbits 000FA7               ?_color_read_Green 0005  
                   _CCP3CONbits 000F26                     ?_initUSART4 0001                     _CCP4CONbits 000F22  
     sendCharSerial4@charToSend 0001                      main@motorL 0095                      main@motorR 009E  
            ??_color_read_Green 0007            main@master_closeness 0077                     vfpfcnvrt@ap 0043  
                   vfpfcnvrt@cp 004F                     vfpfcnvrt@fp 003F                  __end_of___wmul 1EB6  
           start_initialization 1B86                     __end_of_abs 1DDA                     __end_of_pad 1AC0  
                 _TxBufWriteCnt 005D                   ??_LEDSon_init 0001             color_read_Green@tmp 000A  
       __end_of_initDCmotorsPWM 1A46                     vfprintf@fmt 0053                        ??___wmul 0005  
                   __pdataBANK0 00E5                     __pbssCOMRAM 005B          ??_collect_avg_readings 0014  
                 __pcstackBANK0 0060                ___aodiv@dividend 0001             __end_of_LEDSon_init 1ED8  
              ___lwdiv@dividend 0007                       _dtoa$2114 002E                        ?___aodiv 0001  
                      ?___aomod 0001                ___aodiv@quotient 0013                        ?___lwdiv 0007  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                     __smallconst 0E00  
             _I2C_2_Master_Idle 1E68               _I2C_2_Master_Init 1E3E               _I2C_2_Master_Read 1D58  
             _I2C_2_Master_Stop 1F3C                    _RxBufReadCnt 005E              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0010  
            ?_I2C_2_Master_Stop 0001                ___lwdiv@quotient 000B                        ?_sprintf 0060  
             _sendStringSerial4 1E0E             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                  ___wmul@product 0005                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATDbits 000F7C                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                        _PIR4bits 000E37                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8                       _vfpfcnvrt 1678       __end_of_I2C_2_Master_Idle 1E90  
     __end_of_I2C_2_Master_Init 1E68       __end_of_I2C_2_Master_Read 1D9A               ___wmul@multiplier 0001  
     __end_of_I2C_2_Master_Stop 1F46                    setMotorPWM@m 000E     I2C_2_Master_Write@data_byte 0002  
             ??_color_read_Blue 0007                    _TxBufReadCnt 005C                       copy_data0 1B9A  
     __end_of_sendStringSerial4 1E3E                     _LEDSon_init 1EB6   __end_of_I2C_2_Master_RepStart 1F5A  
            color_read_Blue@tmp 000A             __end_of_setMotorPWM 1514                    ??_initUSART4 0001  
                      __Hrparam 0000                      vfprintf@ap 0055                        __Lrparam 0000  
                    vfprintf@fp 0051                    __Lsmallconst 0E00                      ?_vfpfcnvrt 003F  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    sprintf@fmt 0062                 ___lwdiv@divisor 0009              __end_of_initUSART4 1EF8  
               ___lwdiv@counter 000D                        __ptext10 1514                        __ptext11 10A6  
                      __ptext20 1E3E                        __ptext12 13A8                        __ptext21 17C6  
                      __ptext13 1E90                        __ptext30 1E68                        __ptext22 1BD6  
                      __ptext14 1E0E                        __ptext31 1AC0                        __ptext23 1C26  
                      __ptext15 1F18                        __ptext32 1EB6                        __ptext24 1C76  
                      __ptext16 1ED8                        __ptext25 1F30                        __ptext17 19BE  
                      __ptext26 1F3C                        __ptext18 1DDA                        __ptext27 1F46  
                      __ptext19 1EF8                        __ptext28 1F50                        __ptext29 1D58  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA                        isa$xinst 000000  
                    _RC4STAbits 000EE7                        _vfprintf 1CC6                ___aomod@dividend 0001  
         collect_avg_readings@i 0015                     _setMotorPWM 13A8   collect_avg_readings@blue_read 0012  
                     sprintf@ap 006A                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0045  
               ___aomod@counter 0011                _color_click_init 1DDA                        sprintf@f 006C  
                      sprintf@s 0060                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0012                 _sendCharSerial4 1F18  
                  ___aomod@sign 0012                    main@PWMcycle 0094  
