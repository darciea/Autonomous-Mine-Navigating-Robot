

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 11:09:35 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.35
    56                           ; Generated 05/05/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _TX4REG	set	3812
    91   000000                     _RC4STAbits	set	3815
    92   000000                     _SP4BRGH	set	3814
    93   000000                     _LATHbits	set	3968
    94   000000                     _LATGbits	set	3967
    95   000000                     _TRISAbits	set	3969
    96   000000                     _TRISFbits	set	3974
    97   000000                     _TRISDbits	set	3972
    98   000000                     _TRISGbits	set	3975
    99   000000                     _SSP2CON2bits	set	3802
   100   000000                     _RX4PPS	set	3605
   101   000000                     _SSP2CLKPPS	set	3612
   102   000000                     _SSP2DATPPS	set	3613
   103   000000                     _RC7PPS	set	3689
   104   000000                     _RE2PPS	set	3700
   105   000000                     _TRISCbits	set	3971
   106   000000                     _TRISEbits	set	3973
   107   000000                     _TRISHbits	set	3976
   108   000000                     _PORTFbits	set	3982
   109   000000                     _T2PR	set	4028
   110   000000                     _T2CONbits	set	4029
   111   000000                     _CCPR2H	set	4006
   112   000000                     _CCPR1H	set	4010
   113   000000                     _RE4PPS	set	3702
   114   000000                     _RG6PPS	set	3720
   115   000000                     _RD5PPS	set	3695
   116   000000                     _ANSELDbits	set	3751
   117   000000                     _SSP2ADD	set	3798
   118   000000                     _SSP2CON1bits	set	3801
   119   000000                     _CCPR4H	set	3873
   120   000000                     _CCPR3H	set	3877
   121   000000                     _T2CLKCONbits	set	4031
   122   000000                     _T2HLTbits	set	4030
   123   000000                     _CCP1CONbits	set	4011
   124   000000                     _CCPTMRS0bits	set	4013
   125   000000                     _CCP2CONbits	set	4007
   126   000000                     _LATAbits	set	3961
   127   000000                     _LATDbits	set	3964
   128   000000                     _CCP3CONbits	set	3878
   129   000000                     _CCP4CONbits	set	3874
   130   000000                     _RC4REG	set	3811
   131   000000                     _SP4BRGL	set	3813
   132   000000                     _TX4STAbits	set	3816
   133   000000                     _BAUD4CONbits	set	3817
   134   000000                     _SSP2CON2	set	3802
   135   000000                     _SSP2STAT	set	3800
   136   000000                     _ANSELFbits	set	3764
   137   000000                     _SSP2BUF	set	3797
   138   000000                     _PIE4bits	set	3629
   139   000000                     _PIR4bits	set	3639
   140   000000                     _RC0PPS	set	3682
   141   000000                     _RD6PPS	set	3696
   142   000000                     _LATFbits	set	3966
   143                           
   144                           	psect	smallconst
   145   000E00                     __psmallconst:
   146                           	callstack 0
   147   000E00  00                 	db	0
   148   000E01                     STR_1:
   149   000E01  0A                 	db	10
   150   000E02  20                 	db	32
   151   000E03  41                 	db	65	;'A'
   152   000E04  56                 	db	86	;'V'
   153   000E05  47                 	db	71	;'G'
   154   000E06  3A                 	db	58	;':'
   155   000E07  20                 	db	32
   156   000E08  52                 	db	82	;'R'
   157   000E09  20                 	db	32
   158   000E0A  25                 	db	37
   159   000E0B  64                 	db	100	;'d'
   160   000E0C  2C                 	db	44
   161   000E0D  20                 	db	32
   162   000E0E  47                 	db	71	;'G'
   163   000E0F  20                 	db	32
   164   000E10  25                 	db	37
   165   000E11  64                 	db	100	;'d'
   166   000E12  2C                 	db	44
   167   000E13  20                 	db	32
   168   000E14  42                 	db	66	;'B'
   169   000E15  20                 	db	32
   170   000E16  25                 	db	37
   171   000E17  64                 	db	100	;'d'
   172   000E18  20                 	db	32
   173   000E19  0A                 	db	10
   174   000E1A  00                 	db	0
   175   000E1B                     STR_2:
   176   000E1B  43                 	db	67	;'C'
   177   000E1C  41                 	db	65	;'A'
   178   000E1D  52                 	db	82	;'R'
   179   000E1E  44                 	db	68	;'D'
   180   000E1F  20                 	db	32
   181   000E20  25                 	db	37
   182   000E21  64                 	db	100	;'d'
   183   000E22  20                 	db	32
   184   000E23  0A                 	db	10
   185   000E24  00                 	db	0
   186   000E25  00                 	db	0	; dummy byte at the end
   187   000000                     
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191   002352                     __pcinit:
   192                           	callstack 0
   193   002352                     start_initialization:
   194                           	callstack 0
   195   002352                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Clear objects allocated to BANK2 (60 bytes)
   199   002352  EE02  F000         	lfsr	0,__pbssBANK2
   200   002356  0E3C               	movlw	60
   201   002358                     clear_0:
   202   002358  6AEE               	clrf	postinc0,c
   203   00235A  06E8               	decf	wreg,f,c
   204   00235C  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to BANK1 (52 bytes)
   207   00235E  EE01  F0A8         	lfsr	0,__pbssBANK1
   208   002362  0E34               	movlw	52
   209   002364                     clear_1:
   210   002364  6AEE               	clrf	postinc0,c
   211   002366  06E8               	decf	wreg,f,c
   212   002368  E1FD               	bnz	clear_1
   213                           
   214                           ; Clear objects allocated to BANK0 (8 bytes)
   215   00236A  EE00  F0F8         	lfsr	0,__pbssBANK0
   216   00236E  0E08               	movlw	8
   217   002370                     clear_2:
   218   002370  6AEE               	clrf	postinc0,c
   219   002372  06E8               	decf	wreg,f,c
   220   002374  E1FD               	bnz	clear_2
   221                           
   222                           ; Clear objects allocated to COMRAM (1 bytes)
   223   002376  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   224   002378                     end_of_initialization:
   225                           	callstack 0
   226   002378                     __end_of__initialization:
   227                           	callstack 0
   228   002378  0100               	movlb	0
   229   00237A  EF8A  F009         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232   00005F                     __pbssCOMRAM:
   233                           	callstack 0
   234   00005F                     _TxBufWriteCnt:
   235                           	callstack 0
   236   00005F                     	ds	1
   237                           
   238                           	psect	bssBANK0
   239   0000F8                     __pbssBANK0:
   240                           	callstack 0
   241   0000F8                     _width:
   242                           	callstack 0
   243   0000F8                     	ds	2
   244   0000FA                     _prec:
   245                           	callstack 0
   246   0000FA                     	ds	2
   247   0000FC                     _flags:
   248                           	callstack 0
   249   0000FC                     	ds	1
   250   0000FD                     _TxBufReadCnt:
   251                           	callstack 0
   252   0000FD                     	ds	1
   253   0000FE                     _RxBufReadCnt:
   254                           	callstack 0
   255   0000FE                     	ds	1
   256   0000FF                     _RxBufWriteCnt:
   257                           	callstack 0
   258   0000FF                     	ds	1
   259                           
   260                           	psect	bssBANK1
   261   0001A8                     __pbssBANK1:
   262                           	callstack 0
   263   0001A8                     _EUSART4RXbuf:
   264                           	callstack 0
   265   0001A8                     	ds	20
   266   0001BC                     _dbuf:
   267                           	callstack 0
   268   0001BC                     	ds	32
   269                           
   270                           	psect	bssBANK2
   271   000200                     __pbssBANK2:
   272                           	callstack 0
   273   000200                     _EUSART4TXbuf:
   274                           	callstack 0
   275   000200                     	ds	60
   276                           
   277                           	psect	cstackBANK1
   278   000100                     __pcstackBANK1:
   279                           	callstack 0
   280   000100                     main@buf:
   281                           	callstack 0
   282                           
   283                           ; 150 bytes @ 0x0
   284   000100                     	ds	150
   285   000196                     main@motorL:
   286                           	callstack 0
   287                           
   288                           ; 9 bytes @ 0x96
   289   000196                     	ds	9
   290   00019F                     main@motorR:
   291                           	callstack 0
   292                           
   293                           ; 9 bytes @ 0x9F
   294   00019F                     	ds	9
   295                           
   296                           	psect	cstackBANK0
   297   000060                     __pcstackBANK0:
   298                           	callstack 0
   299   000060                     ?_sprintf:
   300                           	callstack 0
   301   000060                     sprintf@s:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x0
   305   000060                     	ds	2
   306   000062                     sprintf@fmt:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x2
   310   000062                     	ds	8
   311   00006A                     sprintf@ap:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xA
   315   00006A                     	ds	2
   316   00006C                     sprintf@f:
   317                           	callstack 0
   318                           
   319                           ; 11 bytes @ 0xC
   320   00006C                     	ds	11
   321   000077                     main@normalised_values:
   322                           	callstack 0
   323                           
   324                           ; 54 bytes @ 0x17
   325   000077                     	ds	54
   326   0000AD                     main@expected_values:
   327                           	callstack 0
   328                           
   329                           ; 54 bytes @ 0x4D
   330   0000AD                     	ds	54
   331   0000E3                     main@master_closeness:
   332                           	callstack 0
   333                           
   334                           ; 18 bytes @ 0x83
   335   0000E3                     	ds	18
   336   0000F5                     main@i:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x95
   340   0000F5                     	ds	1
   341   0000F6                     main@blue_read:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x96
   345   0000F6                     	ds	2
   346                           
   347                           	psect	cstackCOMRAM
   348   000001                     __pcstackCOMRAM:
   349                           	callstack 0
   350   000001                     ??_I2C_2_Master_Idle:
   351   000001                     ?___wmul:
   352                           	callstack 0
   353   000001                     ?___aodiv:
   354                           	callstack 0
   355   000001                     ?___aomod:
   356                           	callstack 0
   357   000001                     sendCharSerial4@charToSend:
   358                           	callstack 0
   359   000001                     determine_card@master_closeness:
   360                           	callstack 0
   361   000001                     ___wmul@multiplier:
   362                           	callstack 0
   363   000001                     fputc@c:
   364                           	callstack 0
   365   000001                     ___aodiv@dividend:
   366                           	callstack 0
   367   000001                     ___aomod@dividend:
   368                           	callstack 0
   369                           
   370                           ; 8 bytes @ 0x0
   371   000001                     	ds	1
   372   000002                     ??_I2C_2_Master_Read:
   373   000002                     I2C_2_Master_Write@data_byte:
   374                           	callstack 0
   375   000002                     sendStringSerial4@string:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x1
   379   000002                     	ds	1
   380   000003                     ??_determine_card:
   381   000003                     color_writetoaddr@value:
   382                           	callstack 0
   383   000003                     I2C_2_Master_Read@ack:
   384                           	callstack 0
   385   000003                     ___wmul@multiplicand:
   386                           	callstack 0
   387   000003                     fputc@fp:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2
   391   000003                     	ds	1
   392   000004                     color_writetoaddr@address:
   393                           	callstack 0
   394   000004                     I2C_2_Master_Read@tmp:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x3
   398   000004                     	ds	1
   399   000005                     ??_fputc:
   400   000005                     ??_color_click_init:
   401   000005                     ?_color_read_Red:
   402                           	callstack 0
   403   000005                     ?_color_read_Green:
   404                           	callstack 0
   405   000005                     ?_color_read_Blue:
   406                           	callstack 0
   407   000005                     ___wmul@product:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x4
   411   000005                     	ds	2
   412   000007                     ??_color_read_Red:
   413   000007                     ??_color_read_Green:
   414   000007                     ??_color_read_Blue:
   415   000007                     ?___lwdiv:
   416                           	callstack 0
   417   000007                     determine_card@current_smallest:
   418                           	callstack 0
   419   000007                     ___lwdiv@dividend:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x6
   423   000007                     	ds	2
   424   000009                     determine_card@predicted_colour:
   425                           	callstack 0
   426   000009                     ___lwdiv@divisor:
   427                           	callstack 0
   428   000009                     ___aodiv@divisor:
   429                           	callstack 0
   430   000009                     ___aomod@divisor:
   431                           	callstack 0
   432                           
   433                           ; 8 bytes @ 0x8
   434   000009                     	ds	1
   435   00000A                     determine_card@i:
   436                           	callstack 0
   437   00000A                     color_read_Red@tmp:
   438                           	callstack 0
   439   00000A                     color_read_Green@tmp:
   440                           	callstack 0
   441   00000A                     color_read_Blue@tmp:
   442                           	callstack 0
   443   00000A                     fputs@s:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x9
   447   00000A                     	ds	1
   448   00000B                     ___lwdiv@quotient:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0xA
   452   00000B                     	ds	1
   453   00000C                     fputs@fp:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xB
   457   00000C                     	ds	1
   458   00000D                     ___lwdiv@counter:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0xC
   462   00000D                     	ds	1
   463   00000E                     fputs@c:
   464                           	callstack 0
   465   00000E                     setMotorPWM@m:
   466                           	callstack 0
   467   00000E                     collect_avg_readings@red_read:
   468                           	callstack 0
   469   00000E                     make_master_closeness@buf:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0xD
   473   00000E                     	ds	1
   474   00000F                     fputs@i:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xE
   478   00000F                     	ds	1
   479   000010                     ??_setMotorPWM:
   480   000010                     collect_avg_readings@green_read:
   481                           	callstack 0
   482   000010                     make_master_closeness@normalised_values:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0xF
   486   000010                     	ds	1
   487   000011                     ___aodiv@counter:
   488                           	callstack 0
   489   000011                     ___aomod@counter:
   490                           	callstack 0
   491   000011                     pad@fp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x10
   495   000011                     	ds	1
   496   000012                     setMotorPWM@posDuty:
   497                           	callstack 0
   498   000012                     ___aodiv@sign:
   499                           	callstack 0
   500   000012                     ___aomod@sign:
   501                           	callstack 0
   502   000012                     collect_avg_readings@blue_read:
   503                           	callstack 0
   504   000012                     make_master_closeness@master_closeness:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x11
   508   000012                     	ds	1
   509   000013                     ?_abs:
   510                           	callstack 0
   511   000013                     setMotorPWM@negDuty:
   512                           	callstack 0
   513   000013                     abs@a:
   514                           	callstack 0
   515   000013                     pad@buf:
   516                           	callstack 0
   517   000013                     ___aodiv@quotient:
   518                           	callstack 0
   519                           
   520                           ; 8 bytes @ 0x12
   521   000013                     	ds	1
   522   000014                     ??_collect_avg_readings:
   523   000014                     ??_make_master_closeness:
   524                           
   525                           ; 1 bytes @ 0x13
   526   000014                     	ds	1
   527   000015                     ??_abs:
   528   000015                     pad@p:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x14
   532   000015                     	ds	1
   533   000016                     collect_avg_readings@i:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x15
   537   000016                     	ds	1
   538   000017                     ??_pad:
   539   000017                     normalise_readings@buf:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x16
   543   000017                     	ds	1
   544   000018                     collect_avg_readings@i_1551:
   545                           	callstack 0
   546   000018                     pad@i:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x17
   550   000018                     	ds	1
   551   000019                     normalise_readings@red_read:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x18
   555   000019                     	ds	1
   556   00001A                     collect_avg_readings@i_1552:
   557                           	callstack 0
   558   00001A                     pad@w:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x19
   562   00001A                     	ds	1
   563   00001B                     normalise_readings@green_read:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x1A
   567   00001B                     	ds	1
   568   00001C                     collect_avg_readings@i_1553:
   569                           	callstack 0
   570   00001C                     dtoa@fp:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x1B
   574   00001C                     	ds	1
   575   00001D                     normalise_readings@blue_read:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x1C
   579   00001D                     	ds	1
   580   00001E                     dtoa@d:
   581                           	callstack 0
   582                           
   583                           ; 8 bytes @ 0x1D
   584   00001E                     	ds	1
   585   00001F                     normalise_readings@expected_values:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x1E
   589   00001F                     	ds	2
   590   000021                     normalise_readings@normalised_values:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x20
   594   000021                     	ds	2
   595   000023                     ??_normalise_readings:
   596                           
   597                           ; 1 bytes @ 0x22
   598   000023                     	ds	3
   599   000026                     ??_dtoa:
   600                           
   601                           ; 1 bytes @ 0x25
   602   000026                     	ds	2
   603   000028                     make_master_closeness@i:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x27
   607   000028                     	ds	3
   608   00002B                     normalise_readings@difference:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x2A
   612   00002B                     	ds	2
   613   00002D                     normalise_readings@i:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x2C
   617   00002D                     	ds	1
   618   00002E                     _dtoa$2277:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x2D
   622   00002E                     	ds	2
   623   000030                     dtoa@p:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x2F
   627   000030                     	ds	2
   628   000032                     dtoa@w:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x31
   632   000032                     	ds	2
   633   000034                     dtoa@n:
   634                           	callstack 0
   635                           
   636                           ; 8 bytes @ 0x33
   637   000034                     	ds	8
   638   00003C                     dtoa@i:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x3B
   642   00003C                     	ds	2
   643   00003E                     dtoa@s:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x3D
   647   00003E                     	ds	1
   648   00003F                     vfpfcnvrt@fp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x3E
   652   00003F                     	ds	2
   653   000041                     vfpfcnvrt@fmt:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x40
   657   000041                     	ds	2
   658   000043                     vfpfcnvrt@ap:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x42
   662   000043                     	ds	2
   663   000045                     ??_vfpfcnvrt:
   664                           
   665                           ; 1 bytes @ 0x44
   666   000045                     	ds	2
   667   000047                     vfpfcnvrt@convarg:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x46
   671   000047                     	ds	8
   672   00004F                     vfpfcnvrt@cp:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x4E
   676   00004F                     	ds	2
   677   000051                     ?_vfprintf:
   678                           	callstack 0
   679   000051                     vfprintf@fp:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x50
   683   000051                     	ds	2
   684   000053                     vfprintf@fmt:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x52
   688   000053                     	ds	2
   689   000055                     vfprintf@ap:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x54
   693   000055                     	ds	2
   694   000057                     vfprintf@cfmt:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x56
   698   000057                     	ds	2
   699   000059                     main@card:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x58
   703   000059                     	ds	1
   704   00005A                     main@PWMcycle:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x59
   708   00005A                     	ds	1
   709   00005B                     main@red_read:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x5A
   713   00005B                     	ds	2
   714   00005D                     main@green_read:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x5C
   718   00005D                     	ds	2
   719                           
   720 ;;
   721 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   722 ;;
   723 ;; *************** function _main *****************
   724 ;; Defined at:
   725 ;;		line 20 in file "main.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  i               1  149[BANK0 ] enum E14575
   730 ;;  buf           150    0[BANK1 ] unsigned char [150]
   731 ;;  expected_val   54   77[BANK0 ] unsigned int [9][3]
   732 ;;  normalised_v   54   23[BANK0 ] unsigned int [9][3]
   733 ;;  master_close   18  131[BANK0 ] unsigned int [9]
   734 ;;  motorR          9  159[BANK1 ] struct DC_motor
   735 ;;  motorL          9  150[BANK1 ] struct DC_motor
   736 ;;  blue_read       2  150[BANK0 ] unsigned int 
   737 ;;  green_read      2   92[COMRAM] unsigned int 
   738 ;;  red_read        2   90[COMRAM] unsigned int 
   739 ;;  PWMcycle        1   89[COMRAM] unsigned char 
   740 ;;  card            1   88[COMRAM] enum E14575
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   751 ;;      Locals:         6     129     168       0       0       0       0       0       0       0       0       0       
      +0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;      Totals:         6     129     168       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;Total ram usage:      303 bytes
   755 ;; Hardware stack levels required when called: 8
   756 ;; This function calls:
   757 ;;		_I2C_2_Master_Init
   758 ;;		_LEDSon_init
   759 ;;		_collect_avg_readings
   760 ;;		_color_click_init
   761 ;;		_determine_card
   762 ;;		_initDCmotorsPWM
   763 ;;		_initUSART4
   764 ;;		_make_master_closeness
   765 ;;		_normalise_readings
   766 ;;		_sendStringSerial4
   767 ;;		_setMotorPWM
   768 ;;		_sprintf
   769 ;; This function is called by:
   770 ;;		Startup code after reset
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text0
   775   001314                     __ptext0:
   776                           	callstack 0
   777   001314                     _main:
   778                           	callstack 23
   779   001314                     
   780                           ;main.c: 25:     LEDSon_init();
   781   001314  ECFB  F011         	call	_LEDSon_init	;wreg free
   782   001318                     
   783                           ;main.c: 26:     I2C_2_Master_Init();
   784   001318  ECBF  F011         	call	_I2C_2_Master_Init	;wreg free
   785   00131C                     
   786                           ;main.c: 27:     color_click_init();
   787   00131C  EC77  F011         	call	_color_click_init	;wreg free
   788   001320                     
   789                           ;main.c: 28:     initDCmotorsPWM();
   790   001320  EC4F  F00F         	call	_initDCmotorsPWM	;wreg free
   791   001324                     
   792                           ;main.c: 29:     initUSART4();
   793   001324  EC0C  F012         	call	_initUSART4	;wreg free
   794   001328                     
   795                           ;main.c: 37:     unsigned char PWMcycle = T2PR;
   796   001328  CFBC F05A          	movff	4028,main@PWMcycle	;volatile
   797   00132C                     
   798                           ;main.c: 39:     struct DC_motor motorL, motorR;;main.c: 41:     motorL.power=0;
   799   00132C  0E00               	movlw	0
   800   00132E  0101               	movlb	1	; () banked
   801   001330  6F96               	movwf	main@motorL& (0+255),b
   802   001332                     
   803                           ; BSR set to: 1
   804                           ;main.c: 42:     motorL.direction=1;
   805   001332  0E01               	movlw	1
   806   001334  6F97               	movwf	(main@motorL+1)& (0+255),b
   807   001336                     
   808                           ; BSR set to: 1
   809                           ;main.c: 43:     motorL.brakemode=1;
   810   001336  0E01               	movlw	1
   811   001338  6F98               	movwf	(main@motorL+2)& (0+255),b
   812   00133A                     
   813                           ; BSR set to: 1
   814                           ;main.c: 44:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   815   00133A  0EAA               	movlw	170
   816   00133C  6F9B               	movwf	(main@motorL+5)& (0+255),b
   817   00133E  0E0F               	movlw	15
   818   001340  6F9C               	movwf	(main@motorL+6)& (0+255),b
   819   001342                     
   820                           ; BSR set to: 1
   821                           ;main.c: 45:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   822   001342  0EA6               	movlw	166
   823   001344  6F9D               	movwf	(main@motorL+7)& (0+255),b
   824   001346  0E0F               	movlw	15
   825   001348  6F9E               	movwf	(main@motorL+8)& (0+255),b
   826   00134A                     
   827                           ; BSR set to: 1
   828                           ;main.c: 46:     motorL.PWMperiod=PWMcycle;
   829   00134A  C05A  F199         	movff	main@PWMcycle,main@motorL+3
   830   00134E  6B9A               	clrf	(main@motorL+4)& (0+255),b
   831   001350                     
   832                           ; BSR set to: 1
   833                           ;main.c: 48:     motorR.power=0;
   834   001350  0E00               	movlw	0
   835   001352  6F9F               	movwf	main@motorR& (0+255),b
   836   001354                     
   837                           ; BSR set to: 1
   838                           ;main.c: 49:     motorR.direction=1;
   839   001354  0E01               	movlw	1
   840   001356  6FA0               	movwf	(main@motorR+1)& (0+255),b
   841   001358                     
   842                           ; BSR set to: 1
   843                           ;main.c: 50:     motorR.brakemode=1;
   844   001358  0E01               	movlw	1
   845   00135A  6FA1               	movwf	(main@motorR+2)& (0+255),b
   846   00135C                     
   847                           ; BSR set to: 1
   848                           ;main.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   849   00135C  0E25               	movlw	37
   850   00135E  6FA4               	movwf	(main@motorR+5)& (0+255),b
   851   001360  0E0F               	movlw	15
   852   001362  6FA5               	movwf	(main@motorR+6)& (0+255),b
   853   001364                     
   854                           ; BSR set to: 1
   855                           ;main.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   856   001364  0E21               	movlw	33
   857   001366  6FA6               	movwf	(main@motorR+7)& (0+255),b
   858   001368  0E0F               	movlw	15
   859   00136A  6FA7               	movwf	(main@motorR+8)& (0+255),b
   860   00136C                     
   861                           ; BSR set to: 1
   862                           ;main.c: 53:     motorR.PWMperiod=PWMcycle;
   863   00136C  C05A  F1A2         	movff	main@PWMcycle,main@motorR+3
   864   001370  6BA3               	clrf	(main@motorR+4)& (0+255),b
   865   001372                     
   866                           ; BSR set to: 1
   867                           ;main.c: 55:     setMotorPWM(&motorL);
   868   001372  0E96               	movlw	low main@motorL
   869   001374  6E0E               	movwf	setMotorPWM@m^0,c
   870   001376  0E01               	movlw	high main@motorL
   871   001378  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   872   00137A  EC5D  F00C         	call	_setMotorPWM	;wreg free
   873   00137E                     
   874                           ;main.c: 56:     setMotorPWM(&motorR);
   875   00137E  0E9F               	movlw	low main@motorR
   876   001380  6E0E               	movwf	setMotorPWM@m^0,c
   877   001382  0E01               	movlw	high main@motorR
   878   001384  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   879   001386  EC5D  F00C         	call	_setMotorPWM	;wreg free
   880   00138A                     
   881                           ;main.c: 62:     unsigned int expected_values[3][9];;main.c: 63:     unsigned int normal
      +                          ised_values[3][9];;main.c: 64:     unsigned int master_closeness[9];;main.c: 65:     uns
      +                          igned int red_read = 0;
   882   00138A  0E00               	movlw	0
   883   00138C  6E5C               	movwf	(main@red_read+1)^0,c
   884   00138E  0E00               	movlw	0
   885   001390  6E5B               	movwf	main@red_read^0,c
   886   001392                     
   887                           ;main.c: 66:     unsigned int green_read = 0;
   888   001392  0E00               	movlw	0
   889   001394  6E5E               	movwf	(main@green_read+1)^0,c
   890   001396  0E00               	movlw	0
   891   001398  6E5D               	movwf	main@green_read^0,c
   892   00139A                     
   893                           ;main.c: 67:     unsigned int blue_read = 0;
   894   00139A  0E00               	movlw	0
   895   00139C  0100               	movlb	0	; () banked
   896   00139E  6FF7               	movwf	(main@blue_read+1)& (0+255),b
   897   0013A0  0E00               	movlw	0
   898   0013A2  6FF6               	movwf	main@blue_read& (0+255),b
   899   0013A4                     
   900                           ; BSR set to: 0
   901                           ;main.c: 78:     LATDbits.LATD4 = 0;
   902   0013A4  987C               	bcf	124,4,c	;volatile
   903   0013A6                     
   904                           ; BSR set to: 0
   905                           ;main.c: 79:     TRISFbits.TRISF2=1;
   906   0013A6  8486               	bsf	134,2,c	;volatile
   907   0013A8                     
   908                           ; BSR set to: 0
   909                           ;main.c: 80:     ANSELFbits.ANSELF2=0;
   910   0013A8  010E               	movlb	14	; () banked
   911   0013AA  95B4               	bcf	180,2,b	;volatile
   912   0013AC                     
   913                           ; BSR set to: 14
   914                           ;main.c: 81:     for(colour i = RED; i<= BLACK; i++){
   915   0013AC  0E00               	movlw	0
   916   0013AE  0100               	movlb	0	; () banked
   917   0013B0  6FF5               	movwf	main@i& (0+255),b
   918   0013B2  EFDC  F009         	goto	l235
   919   0013B6                     l236:
   920                           
   921                           ;main.c: 83:             LATDbits.LATD4 = 1;
   922   0013B6  887C               	bsf	124,4,c	;volatile
   923   0013B8                     l235:
   924                           
   925                           ;main.c: 82:         while(PORTFbits.RF2){
   926   0013B8  B48E               	btfsc	142,2,c	;volatile
   927   0013BA  EFE1  F009         	goto	u1361
   928   0013BE  EFE3  F009         	goto	u1360
   929   0013C2                     u1361:
   930   0013C2  EFDB  F009         	goto	l236
   931   0013C6                     u1360:
   932   0013C6                     
   933                           ;main.c: 85:         LATDbits.LATD4 = 0;
   934   0013C6  987C               	bcf	124,4,c	;volatile
   935   0013C8                     
   936                           ;main.c: 86:         collect_avg_readings(&red_read, &green_read, &blue_read);
   937   0013C8  0E5B               	movlw	low main@red_read
   938   0013CA  6E0E               	movwf	collect_avg_readings@red_read^0,c
   939   0013CC  0E00               	movlw	high main@red_read
   940   0013CE  6E0F               	movwf	(collect_avg_readings@red_read+1)^0,c
   941   0013D0  0E5D               	movlw	low main@green_read
   942   0013D2  6E10               	movwf	collect_avg_readings@green_read^0,c
   943   0013D4  0E00               	movlw	high main@green_read
   944   0013D6  6E11               	movwf	(collect_avg_readings@green_read+1)^0,c
   945   0013D8  0EF6               	movlw	low main@blue_read
   946   0013DA  6E12               	movwf	collect_avg_readings@blue_read^0,c
   947   0013DC  0E00               	movlw	high main@blue_read
   948   0013DE  6E13               	movwf	(collect_avg_readings@blue_read+1)^0,c
   949   0013E0  ECA6  F00A         	call	_collect_avg_readings	;wreg free
   950   0013E4                     
   951                           ;main.c: 87:         expected_values[i][RED] = red_read;
   952   0013E4  0100               	movlb	0	; () banked
   953   0013E6  51F5               	movf	main@i& (0+255),w,b
   954   0013E8  0D12               	mullw	18
   955   0013EA  0EAD               	movlw	low main@expected_values
   956   0013EC  24F3               	addwf	243,w,c
   957   0013EE  6ED9               	movwf	fsr2l,c
   958   0013F0  0E00               	movlw	high main@expected_values
   959   0013F2  20F4               	addwfc	prodh,w,c
   960   0013F4  6EDA               	movwf	fsr2h,c
   961   0013F6  C05B  FFDE         	movff	main@red_read,postinc2
   962   0013FA  C05C  FFDD         	movff	main@red_read+1,postdec2
   963   0013FE                     
   964                           ; BSR set to: 0
   965                           ;main.c: 88:         expected_values[i][GREEN] = green_read;
   966   0013FE  51F5               	movf	main@i& (0+255),w,b
   967   001400  0D12               	mullw	18
   968   001402  0E02               	movlw	2
   969   001404  26F3               	addwf	243,f,c
   970   001406  0E00               	movlw	0
   971   001408  22F4               	addwfc	244,f,c
   972   00140A  0EAD               	movlw	low main@expected_values
   973   00140C  24F3               	addwf	243,w,c
   974   00140E  6ED9               	movwf	fsr2l,c
   975   001410  0E00               	movlw	high main@expected_values
   976   001412  20F4               	addwfc	prodh,w,c
   977   001414  6EDA               	movwf	fsr2h,c
   978   001416  C05D  FFDE         	movff	main@green_read,postinc2
   979   00141A  C05E  FFDD         	movff	main@green_read+1,postdec2
   980   00141E                     
   981                           ; BSR set to: 0
   982                           ;main.c: 89:         expected_values[i][BLUE] = blue_read;
   983   00141E  51F5               	movf	main@i& (0+255),w,b
   984   001420  0D12               	mullw	18
   985   001422  0E04               	movlw	4
   986   001424  26F3               	addwf	243,f,c
   987   001426  0E00               	movlw	0
   988   001428  22F4               	addwfc	244,f,c
   989   00142A  0EAD               	movlw	low main@expected_values
   990   00142C  24F3               	addwf	243,w,c
   991   00142E  6ED9               	movwf	fsr2l,c
   992   001430  0E00               	movlw	high main@expected_values
   993   001432  20F4               	addwfc	prodh,w,c
   994   001434  6EDA               	movwf	fsr2h,c
   995   001436  C0F6  FFDE         	movff	main@blue_read,postinc2
   996   00143A  C0F7  FFDD         	movff	main@blue_read+1,postdec2
   997   00143E                     
   998                           ; BSR set to: 0
   999                           ;main.c: 91:     }
  1000   00143E  2BF5               	incf	main@i& (0+255),f,b
  1001   001440                     
  1002                           ; BSR set to: 0
  1003   001440  0E08               	movlw	8
  1004   001442  65F5               	cpfsgt	main@i& (0+255),b
  1005   001444  EF26  F00A         	goto	u1371
  1006   001448  EF28  F00A         	goto	u1370
  1007   00144C                     u1371:
  1008   00144C  EFDC  F009         	goto	l235
  1009   001450                     u1370:
  1010   001450  EF2C  F00A         	goto	l239
  1011   001454                     l240:
  1012                           
  1013                           ;main.c: 118:             LATDbits.LATD4 = 1;
  1014   001454  887C               	bsf	124,4,c	;volatile
  1015                           
  1016                           ;main.c: 119:             LATFbits.LATF0 = 1;
  1017   001456  807E               	bsf	126,0,c	;volatile
  1018   001458                     l239:
  1019                           
  1020                           ;main.c: 117:         while(PORTFbits.RF2){
  1021   001458  B48E               	btfsc	142,2,c	;volatile
  1022   00145A  EF31  F00A         	goto	u1381
  1023   00145E  EF33  F00A         	goto	u1380
  1024   001462                     u1381:
  1025   001462  EF2A  F00A         	goto	l240
  1026   001466                     u1380:
  1027   001466                     
  1028                           ;main.c: 121:         LATFbits.LATF0 = 0;
  1029   001466  907E               	bcf	126,0,c	;volatile
  1030   001468                     
  1031                           ;main.c: 123:         collect_avg_readings(&red_read, &green_read, &blue_read);
  1032   001468  0E5B               	movlw	low main@red_read
  1033   00146A  6E0E               	movwf	collect_avg_readings@red_read^0,c
  1034   00146C  0E00               	movlw	high main@red_read
  1035   00146E  6E0F               	movwf	(collect_avg_readings@red_read+1)^0,c
  1036   001470  0E5D               	movlw	low main@green_read
  1037   001472  6E10               	movwf	collect_avg_readings@green_read^0,c
  1038   001474  0E00               	movlw	high main@green_read
  1039   001476  6E11               	movwf	(collect_avg_readings@green_read+1)^0,c
  1040   001478  0EF6               	movlw	low main@blue_read
  1041   00147A  6E12               	movwf	collect_avg_readings@blue_read^0,c
  1042   00147C  0E00               	movlw	high main@blue_read
  1043   00147E  6E13               	movwf	(collect_avg_readings@blue_read+1)^0,c
  1044   001480  ECA6  F00A         	call	_collect_avg_readings	;wreg free
  1045   001484                     
  1046                           ;main.c: 125:         sprintf(buf, "\n AVG: R %d, G %d, B %d \n", red_read, green_read, 
      +                          blue_read);
  1047   001484  0E00               	movlw	low main@buf
  1048   001486  0100               	movlb	0	; () banked
  1049   001488  6F60               	movwf	sprintf@s& (0+255),b
  1050   00148A  0E01               	movlw	high main@buf
  1051   00148C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1052   00148E  0E01               	movlw	low STR_1
  1053   001490  6F62               	movwf	sprintf@fmt& (0+255),b
  1054   001492  0E0E               	movlw	high STR_1
  1055   001494  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1056   001496  C05B  F064         	movff	main@red_read,?_sprintf+4
  1057   00149A  C05C  F065         	movff	main@red_read+1,?_sprintf+5
  1058   00149E  C05D  F066         	movff	main@green_read,?_sprintf+6
  1059   0014A2  C05E  F067         	movff	main@green_read+1,?_sprintf+7
  1060   0014A6  C0F6  F068         	movff	main@blue_read,?_sprintf+8
  1061   0014AA  C0F7  F069         	movff	main@blue_read+1,?_sprintf+9
  1062   0014AE  EC4A  F010         	call	_sprintf	;wreg free
  1063   0014B2                     
  1064                           ;main.c: 126:         sendStringSerial4(buf);
  1065   0014B2  0E00               	movlw	low main@buf
  1066   0014B4  6E02               	movwf	sendStringSerial4@string^0,c
  1067   0014B6  0E01               	movlw	high main@buf
  1068   0014B8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1069   0014BA  EC91  F011         	call	_sendStringSerial4	;wreg free
  1070   0014BE                     
  1071                           ;main.c: 128:         normalise_readings(buf, red_read, green_read, blue_read, expected_
      +                          values, normalised_values);
  1072   0014BE  0E00               	movlw	low main@buf
  1073   0014C0  6E17               	movwf	normalise_readings@buf^0,c
  1074   0014C2  0E01               	movlw	high main@buf
  1075   0014C4  6E18               	movwf	(normalise_readings@buf+1)^0,c
  1076   0014C6  C05B  F019         	movff	main@red_read,normalise_readings@red_read
  1077   0014CA  C05C  F01A         	movff	main@red_read+1,normalise_readings@red_read+1
  1078   0014CE  C05D  F01B         	movff	main@green_read,normalise_readings@green_read
  1079   0014D2  C05E  F01C         	movff	main@green_read+1,normalise_readings@green_read+1
  1080   0014D6  C0F6  F01D         	movff	main@blue_read,normalise_readings@blue_read
  1081   0014DA  C0F7  F01E         	movff	main@blue_read+1,normalise_readings@blue_read+1
  1082   0014DE  0EAD               	movlw	low main@expected_values
  1083   0014E0  6E1F               	movwf	normalise_readings@expected_values^0,c
  1084   0014E2  0E00               	movlw	high main@expected_values
  1085   0014E4  6E20               	movwf	(normalise_readings@expected_values+1)^0,c
  1086   0014E6  0E77               	movlw	low main@normalised_values
  1087   0014E8  6E21               	movwf	normalise_readings@normalised_values^0,c
  1088   0014EA  0E00               	movlw	high main@normalised_values
  1089   0014EC  6E22               	movwf	(normalise_readings@normalised_values+1)^0,c
  1090   0014EE  EC52  F008         	call	_normalise_readings	;wreg free
  1091   0014F2                     
  1092                           ;main.c: 129:         make_master_closeness(buf, normalised_values,master_closeness);
  1093   0014F2  0E00               	movlw	low main@buf
  1094   0014F4  6E0E               	movwf	make_master_closeness@buf^0,c
  1095   0014F6  0E01               	movlw	high main@buf
  1096   0014F8  6E0F               	movwf	(make_master_closeness@buf+1)^0,c
  1097   0014FA  0E77               	movlw	low main@normalised_values
  1098   0014FC  6E10               	movwf	make_master_closeness@normalised_values^0,c
  1099   0014FE  0E00               	movlw	high main@normalised_values
  1100   001500  6E11               	movwf	(make_master_closeness@normalised_values+1)^0,c
  1101   001502  0EE3               	movlw	low main@master_closeness
  1102   001504  6E12               	movwf	make_master_closeness@master_closeness^0,c
  1103   001506  0E00               	movlw	high main@master_closeness
  1104   001508  6E13               	movwf	(make_master_closeness@master_closeness+1)^0,c
  1105   00150A  EC74  F00E         	call	_make_master_closeness	;wreg free
  1106   00150E                     
  1107                           ;main.c: 130:         card = determine_card(master_closeness);
  1108   00150E  0EE3               	movlw	low main@master_closeness
  1109   001510  6E01               	movwf	determine_card@master_closeness^0,c
  1110   001512  0E00               	movlw	high main@master_closeness
  1111   001514  6E02               	movwf	(determine_card@master_closeness+1)^0,c
  1112   001516  EC93  F00F         	call	_determine_card	;wreg free
  1113   00151A  6E59               	movwf	main@card^0,c
  1114   00151C                     
  1115                           ;main.c: 131:         sprintf(buf, "CARD %d \n", card);
  1116   00151C  0E00               	movlw	low main@buf
  1117   00151E  0100               	movlb	0	; () banked
  1118   001520  6F60               	movwf	sprintf@s& (0+255),b
  1119   001522  0E01               	movlw	high main@buf
  1120   001524  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1121   001526  0E1B               	movlw	low STR_2
  1122   001528  6F62               	movwf	sprintf@fmt& (0+255),b
  1123   00152A  0E0E               	movlw	high STR_2
  1124   00152C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1125   00152E  C059  F064         	movff	main@card,?_sprintf+4
  1126   001532  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1127   001534  EC4A  F010         	call	_sprintf	;wreg free
  1128   001538                     
  1129                           ;main.c: 132:         sendStringSerial4(buf);
  1130   001538  0E00               	movlw	low main@buf
  1131   00153A  6E02               	movwf	sendStringSerial4@string^0,c
  1132   00153C  0E01               	movlw	high main@buf
  1133   00153E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1134   001540  EC91  F011         	call	_sendStringSerial4	;wreg free
  1135   001544  EF2C  F00A         	goto	l239
  1136   001548  EF00  F000         	goto	start
  1137   00154C                     __end_of_main:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _sprintf *****************
  1141 ;; Defined at:
  1142 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1145 ;;		 -> main@buf(150), 
  1146 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1147 ;;		 -> STR_2(10), STR_1(26), 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  f              11   12[BANK0 ] struct _IO_FILE
  1150 ;;  ap              2   10[BANK0 ] PTR void [1]
  1151 ;;		 -> ?_sprintf(2), 
  1152 ;;  ret             2    0        int 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  2    0[BANK0 ] int 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1162 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1163 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1165 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1166 ;;Total ram usage:       23 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; Hardware stack levels required when called: 7
  1169 ;; This function calls:
  1170 ;;		_vfprintf
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text1
  1177   002094                     __ptext1:
  1178                           	callstack 0
  1179   002094                     _sprintf:
  1180                           	callstack 23
  1181   002094  0E64               	movlw	low (?_sprintf+4)
  1182   002096  0100               	movlb	0	; () banked
  1183   002098  6F6A               	movwf	sprintf@ap& (0+255),b
  1184   00209A  0E00               	movlw	high (?_sprintf+4)
  1185   00209C  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1186   00209E  C060  F06C         	movff	sprintf@s,sprintf@f
  1187   0020A2  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1188   0020A6                     
  1189                           ; BSR set to: 0
  1190   0020A6  0E00               	movlw	0
  1191   0020A8  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1192   0020AA  0E00               	movlw	0
  1193   0020AC  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1194   0020AE                     
  1195                           ; BSR set to: 0
  1196   0020AE  0E00               	movlw	0
  1197   0020B0  6F76               	movwf	(sprintf@f+10)& (0+255),b
  1198   0020B2  0E00               	movlw	0
  1199   0020B4  6F75               	movwf	(sprintf@f+9)& (0+255),b
  1200   0020B6                     
  1201                           ; BSR set to: 0
  1202   0020B6  0E6C               	movlw	low sprintf@f
  1203   0020B8  6E51               	movwf	vfprintf@fp^0,c
  1204   0020BA  0E00               	movlw	high sprintf@f
  1205   0020BC  6E52               	movwf	(vfprintf@fp+1)^0,c
  1206   0020BE  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1207   0020C2  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1208   0020C6  0E6A               	movlw	low sprintf@ap
  1209   0020C8  6E55               	movwf	vfprintf@ap^0,c
  1210   0020CA  0E00               	movlw	high sprintf@ap
  1211   0020CC  6E56               	movwf	(vfprintf@ap+1)^0,c
  1212   0020CE  EC73  F010         	call	_vfprintf	;wreg free
  1213   0020D2  0100               	movlb	0	; () banked
  1214   0020D4  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1215   0020D6  2560               	addwf	sprintf@s& (0+255),w,b
  1216   0020D8  6ED9               	movwf	fsr2l,c
  1217   0020DA  5170               	movf	(sprintf@f+4)& (0+255),w,b
  1218   0020DC  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1219   0020DE  6EDA               	movwf	fsr2h,c
  1220   0020E0  0E00               	movlw	0
  1221   0020E2  6EDF               	movwf	indf2,c
  1222   0020E4                     
  1223                           ; BSR set to: 0
  1224   0020E4  0012               	return		;funcret
  1225   0020E6                     __end_of_sprintf:
  1226                           	callstack 0
  1227                           
  1228 ;; *************** function _vfprintf *****************
  1229 ;; Defined at:
  1230 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1233 ;;		 -> sprintf@f(11), 
  1234 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1235 ;;		 -> STR_2(10), STR_1(26), 
  1236 ;;  ap              2   84[COMRAM] PTR PTR void 
  1237 ;;		 -> sprintf@ap(2), 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1240 ;;		 -> STR_2(10), STR_1(26), 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  2   80[COMRAM] int 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1250 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1253 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1254 ;;Total ram usage:        8 bytes
  1255 ;; Hardware stack levels used: 1
  1256 ;; Hardware stack levels required when called: 6
  1257 ;; This function calls:
  1258 ;;		_vfpfcnvrt
  1259 ;; This function is called by:
  1260 ;;		_sprintf
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text2
  1265   0020E6                     __ptext2:
  1266                           	callstack 0
  1267   0020E6                     _vfprintf:
  1268                           	callstack 23
  1269   0020E6                     
  1270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1271   0020E6  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1272   0020EA  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1273                           
  1274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1275   0020EE  EF87  F010         	goto	l2303
  1276   0020F2                     l2301:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1279   0020F2  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1280   0020F6  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1281   0020FA  0E57               	movlw	low vfprintf@cfmt
  1282   0020FC  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1283   0020FE  0E00               	movlw	high vfprintf@cfmt
  1284   002100  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1285   002102  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1286   002106  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1287   00210A  ECC5  F00D         	call	_vfpfcnvrt	;wreg free
  1288   00210E                     l2303:
  1289                           
  1290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1291   00210E  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1292   002112  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1293   002116                     	if	0	;tblptru may be non-zero
  1294   002116                     	endif
  1295   002116                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1296   002116  0E00               	movlw	low (__mediumconst shr (0+16))
  1297   002118  6EF8               	movwf	tblptru,c
  1298   00211A                     	endif
  1299   00211A  0008               	tblrd		*
  1300   00211C  50F5               	movf	tablat,w,c
  1301   00211E  0900               	iorlw	0
  1302   002120  A4D8               	btfss	status,2,c
  1303   002122  EF95  F010         	goto	u1151
  1304   002126  EF97  F010         	goto	u1150
  1305   00212A                     u1151:
  1306   00212A  EF79  F010         	goto	l2301
  1307   00212E                     u1150:
  1308   00212E                     
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1310   00212E  0E00               	movlw	0
  1311   002130  6E52               	movwf	(?_vfprintf+1)^0,c
  1312   002132  0E00               	movlw	0
  1313   002134  6E51               	movwf	?_vfprintf^0,c
  1314   002136  0012               	return		;funcret
  1315   002138                     __end_of_vfprintf:
  1316                           	callstack 0
  1317                           
  1318 ;; *************** function _vfpfcnvrt *****************
  1319 ;; Defined at:
  1320 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1323 ;;		 -> sprintf@f(11), 
  1324 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1325 ;;		 -> vfprintf@cfmt(2), 
  1326 ;;  ap              2   66[COMRAM] PTR PTR void 
  1327 ;;		 -> sprintf@ap(2), 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  convarg         8   70[COMRAM] struct .
  1330 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1331 ;;		 -> STR_2(10), STR_1(26), 
  1332 ;;  i               2    0        int 
  1333 ;;  done            2    0        int 
  1334 ;;  c               1    0        unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1344 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1345 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;Total ram usage:       18 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 5
  1351 ;; This function calls:
  1352 ;;		_dtoa
  1353 ;;		_fputc
  1354 ;; This function is called by:
  1355 ;;		_vfprintf
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text3
  1360   001B8A                     __ptext3:
  1361                           	callstack 0
  1362   001B8A                     _vfpfcnvrt:
  1363                           	callstack 23
  1364   001B8A                     
  1365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1366   001B8A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1367   001B8E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1368   001B92  CFDE FFF6          	movff	postinc2,tblptrl
  1369   001B96  CFDD FFF7          	movff	postdec2,tblptrh
  1370   001B9A                     	if	0	;tblptru may be non-zero
  1371   001B9A                     	endif
  1372   001B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1373   001B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  1374   001B9C  6EF8               	movwf	tblptru,c
  1375   001B9E                     	endif
  1376   001B9E  0008               	tblrd		*
  1377   001BA0  50F5               	movf	tablat,w,c
  1378   001BA2  0A25               	xorlw	37
  1379   001BA4  A4D8               	btfss	status,2,c
  1380   001BA6  EFD7  F00D         	goto	u1081
  1381   001BAA  EFD9  F00D         	goto	u1080
  1382   001BAE                     u1081:
  1383   001BAE  EF5D  F00E         	goto	l2229
  1384   001BB2                     u1080:
  1385   001BB2                     
  1386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1387   001BB2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1388   001BB6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1389   001BBA  2ADE               	incf	postinc2,f,c
  1390   001BBC  0E00               	movlw	0
  1391   001BBE  22DD               	addwfc	postdec2,f,c
  1392   001BC0                     
  1393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1394   001BC0  0E00               	movlw	0
  1395   001BC2  0100               	movlb	0	; () banked
  1396   001BC4  6FF9               	movwf	(_width+1)& (0+255),b
  1397   001BC6  0E00               	movlw	0
  1398   001BC8  6FF8               	movwf	_width& (0+255),b
  1399   001BCA  C0F8  F0FC         	movff	_width,_flags
  1400   001BCE                     
  1401                           ; BSR set to: 0
  1402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1403   001BCE  69FA               	setf	_prec& (0+255),b
  1404   001BD0  69FB               	setf	(_prec+1)& (0+255),b
  1405   001BD2                     
  1406                           ; BSR set to: 0
  1407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1408   001BD2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1409   001BD6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1410   001BDA  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1411   001BDE  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1412   001BE2                     
  1413                           ; BSR set to: 0
  1414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1415   001BE2  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1416   001BE6  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1417   001BEA                     	if	0	;tblptru may be non-zero
  1418   001BEA                     	endif
  1419   001BEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1420   001BEA  0E00               	movlw	low (__mediumconst shr (0+16))
  1421   001BEC  6EF8               	movwf	tblptru,c
  1422   001BEE                     	endif
  1423   001BEE  0008               	tblrd		*
  1424   001BF0  50F5               	movf	tablat,w,c
  1425   001BF2  0A64               	xorlw	100
  1426   001BF4  B4D8               	btfsc	status,2,c
  1427   001BF6  EFFF  F00D         	goto	u1091
  1428   001BFA  EF01  F00E         	goto	u1090
  1429   001BFE                     u1091:
  1430   001BFE  EF11  F00E         	goto	l2219
  1431   001C02                     u1090:
  1432   001C02                     
  1433                           ; BSR set to: 0
  1434   001C02  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1435   001C06  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1436   001C0A                     	if	0	;tblptru may be non-zero
  1437   001C0A                     	endif
  1438   001C0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1439   001C0A  0E00               	movlw	low (__mediumconst shr (0+16))
  1440   001C0C  6EF8               	movwf	tblptru,c
  1441   001C0E                     	endif
  1442   001C0E  0008               	tblrd		*
  1443   001C10  50F5               	movf	tablat,w,c
  1444   001C12  0A69               	xorlw	105
  1445   001C14  A4D8               	btfss	status,2,c
  1446   001C16  EF0F  F00E         	goto	u1101
  1447   001C1A  EF11  F00E         	goto	u1100
  1448   001C1E                     u1101:
  1449   001C1E  EF54  F00E         	goto	l2225
  1450   001C22                     u1100:
  1451   001C22                     l2219:
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1455   001C22  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1456   001C26  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1457   001C2A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1458   001C2E  0E02               	movlw	2
  1459   001C30  26DE               	addwf	postinc2,f,c
  1460   001C32  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1461   001C36  0E00               	movlw	0
  1462   001C38  22DD               	addwfc	postdec2,f,c
  1463   001C3A  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1464   001C3E  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1465   001C42  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1466   001C46  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1467   001C4A  0E00               	movlw	0
  1468   001C4C  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1469   001C4E  0EFF               	movlw	-1
  1470   001C50  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1471   001C52  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1472   001C54  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1473   001C56  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1474   001C58  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1475   001C5A  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1478   001C5C  0E01               	movlw	1
  1479   001C5E  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1480   001C60  6E45               	movwf	??_vfpfcnvrt^0,c
  1481   001C62  0E00               	movlw	0
  1482   001C64  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1483   001C66  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1484   001C68  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1485   001C6C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1486   001C70  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1487   001C74  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1488   001C78                     
  1489                           ; BSR set to: 0
  1490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1491   001C78  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1492   001C7C  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1493   001C80  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1494   001C84  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1495   001C88  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1496   001C8C  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1497   001C90  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1498   001C94  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1499   001C98  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1500   001C9C  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1501   001CA0  EC13  F007         	call	_dtoa	;wreg free
  1502   001CA4  EF73  F00E         	goto	l1162
  1503   001CA8                     l2225:
  1504                           
  1505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1506   001CA8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1507   001CAC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1508   001CB0  2ADE               	incf	postinc2,f,c
  1509   001CB2  0E00               	movlw	0
  1510   001CB4  22DD               	addwfc	postdec2,f,c
  1511   001CB6  EF73  F00E         	goto	l1162
  1512   001CBA                     l2229:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1515   001CBA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1516   001CBE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1517   001CC2  CFDE FFF6          	movff	postinc2,tblptrl
  1518   001CC6  CFDD FFF7          	movff	postdec2,tblptrh
  1519   001CCA                     	if	0	;tblptru may be non-zero
  1520   001CCA                     	endif
  1521   001CCA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1522   001CCA  0E00               	movlw	low (__mediumconst shr (0+16))
  1523   001CCC  6EF8               	movwf	tblptru,c
  1524   001CCE                     	endif
  1525   001CCE  0008               	tblrd		*
  1526   001CD0  50F5               	movf	tablat,w,c
  1527   001CD2  6E01               	movwf	fputc@c^0,c
  1528   001CD4  6A02               	clrf	(fputc@c+1)^0,c
  1529   001CD6  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1530   001CDA  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1531   001CDE  ECEA  F00E         	call	_fputc	;wreg free
  1532   001CE2  EF54  F00E         	goto	l2225
  1533   001CE6                     l1162:
  1534   001CE6  0012               	return		;funcret
  1535   001CE8                     __end_of_vfpfcnvrt:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function _dtoa *****************
  1539 ;; Defined at:
  1540 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1543 ;;		 -> sprintf@f(11), 
  1544 ;;  d               8   29[COMRAM] long long 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  n               8   51[COMRAM] long long 
  1547 ;;  i               2   59[COMRAM] int 
  1548 ;;  w               2   49[COMRAM] int 
  1549 ;;  p               2   47[COMRAM] int 
  1550 ;;  s               1   61[COMRAM] unsigned char 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1560 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;Total ram usage:       35 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; Hardware stack levels required when called: 4
  1567 ;; This function calls:
  1568 ;;		___aodiv
  1569 ;;		___aomod
  1570 ;;		_abs
  1571 ;;		_pad
  1572 ;; This function is called by:
  1573 ;;		_vfpfcnvrt
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text4
  1578   000E26                     __ptext4:
  1579                           	callstack 0
  1580   000E26                     _dtoa:
  1581                           	callstack 23
  1582   000E26                     
  1583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1584   000E26  C01E  F034         	movff	dtoa@d,dtoa@n
  1585   000E2A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1586   000E2E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1587   000E32  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1588   000E36  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1589   000E3A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1590   000E3E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1591   000E42  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1592   000E46                     
  1593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1594   000E46  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1595   000E48  EF28  F007         	goto	u961
  1596   000E4C  EF2B  F007         	goto	u960
  1597   000E50                     u961:
  1598   000E50  0E01               	movlw	1
  1599   000E52  EF2C  F007         	goto	u970
  1600   000E56                     u960:
  1601   000E56  0E00               	movlw	0
  1602   000E58                     u970:
  1603   000E58  6E3E               	movwf	dtoa@s^0,c
  1604   000E5A                     
  1605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1606   000E5A  503E               	movf	dtoa@s^0,w,c
  1607   000E5C  B4D8               	btfsc	status,2,c
  1608   000E5E  EF33  F007         	goto	u981
  1609   000E62  EF35  F007         	goto	u980
  1610   000E66                     u981:
  1611   000E66  EF45  F007         	goto	l2131
  1612   000E6A                     u980:
  1613   000E6A                     
  1614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1615   000E6A  1E3B               	comf	(dtoa@n+7)^0,f,c
  1616   000E6C  1E3A               	comf	(dtoa@n+6)^0,f,c
  1617   000E6E  1E39               	comf	(dtoa@n+5)^0,f,c
  1618   000E70  1E38               	comf	(dtoa@n+4)^0,f,c
  1619   000E72  1E37               	comf	(dtoa@n+3)^0,f,c
  1620   000E74  1E36               	comf	(dtoa@n+2)^0,f,c
  1621   000E76  1E35               	comf	(dtoa@n+1)^0,f,c
  1622   000E78  6C34               	negf	dtoa@n^0,c
  1623   000E7A  0E00               	movlw	0
  1624   000E7C  2235               	addwfc	(dtoa@n+1)^0,f,c
  1625   000E7E  2236               	addwfc	(dtoa@n+2)^0,f,c
  1626   000E80  2237               	addwfc	(dtoa@n+3)^0,f,c
  1627   000E82  2238               	addwfc	(dtoa@n+4)^0,f,c
  1628   000E84  2239               	addwfc	(dtoa@n+5)^0,f,c
  1629   000E86  223A               	addwfc	(dtoa@n+6)^0,f,c
  1630   000E88  223B               	addwfc	(dtoa@n+7)^0,f,c
  1631   000E8A                     l2131:
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1634   000E8A  0100               	movlb	0	; () banked
  1635   000E8C  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  1636   000E8E  EF53  F007         	goto	u990
  1637   000E92  51FB               	movf	(_prec+1)& (0+255),w,b
  1638   000E94  E106               	bnz	u991
  1639   000E96  05FA               	decf	_prec& (0+255),w,b
  1640   000E98  B0D8               	btfsc	status,0,c
  1641   000E9A  EF51  F007         	goto	u991
  1642   000E9E  EF53  F007         	goto	u990
  1643   000EA2                     u991:
  1644   000EA2  EF59  F007         	goto	l1141
  1645   000EA6                     u990:
  1646   000EA6                     
  1647                           ; BSR set to: 0
  1648   000EA6  0E00               	movlw	0
  1649   000EA8  6E31               	movwf	(dtoa@p+1)^0,c
  1650   000EAA  0E01               	movlw	1
  1651   000EAC  6E30               	movwf	dtoa@p^0,c
  1652   000EAE  EF5D  F007         	goto	l1143
  1653   000EB2                     l1141:
  1654                           
  1655                           ; BSR set to: 0
  1656   000EB2  C0FA  F030         	movff	_prec,dtoa@p
  1657   000EB6  C0FB  F031         	movff	_prec+1,dtoa@p+1
  1658   000EBA                     l1143:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1662   000EBA  C0F8  F032         	movff	_width,dtoa@w
  1663   000EBE  C0F9  F033         	movff	_width+1,dtoa@w+1
  1664   000EC2                     
  1665                           ; BSR set to: 0
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1667   000EC2  503E               	movf	dtoa@s^0,w,c
  1668   000EC4  B4D8               	btfsc	status,2,c
  1669   000EC6  EF67  F007         	goto	u1001
  1670   000ECA  EF69  F007         	goto	u1000
  1671   000ECE                     u1001:
  1672   000ECE  EF80  F007         	goto	l1144
  1673   000ED2                     u1000:
  1674   000ED2                     
  1675                           ; BSR set to: 0
  1676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1677   000ED2  0632               	decf	dtoa@w^0,f,c
  1678   000ED4  A0D8               	btfss	status,0,c
  1679   000ED6  0633               	decf	(dtoa@w+1)^0,f,c
  1680   000ED8                     
  1681                           ; BSR set to: 0
  1682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1683   000ED8  503E               	movf	dtoa@s^0,w,c
  1684   000EDA  A4D8               	btfss	status,2,c
  1685   000EDC  EF72  F007         	goto	u1011
  1686   000EE0  EF74  F007         	goto	u1010
  1687   000EE4                     u1011:
  1688   000EE4  EF7A  F007         	goto	l2143
  1689   000EE8                     u1010:
  1690   000EE8                     
  1691                           ; BSR set to: 0
  1692   000EE8  0E00               	movlw	0
  1693   000EEA  6E2F               	movwf	(_dtoa$2277+1)^0,c
  1694   000EEC  0E2B               	movlw	43
  1695   000EEE  6E2E               	movwf	_dtoa$2277^0,c
  1696   000EF0  EF7E  F007         	goto	l2145
  1697   000EF4                     l2143:
  1698                           
  1699                           ; BSR set to: 0
  1700   000EF4  0E00               	movlw	0
  1701   000EF6  6E2F               	movwf	(_dtoa$2277+1)^0,c
  1702   000EF8  0E2D               	movlw	45
  1703   000EFA  6E2E               	movwf	_dtoa$2277^0,c
  1704   000EFC                     l2145:
  1705                           
  1706                           ; BSR set to: 0
  1707   000EFC  C02E  F03E         	movff	_dtoa$2277,dtoa@s
  1708   000F00                     l1144:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1712   000F00  0E00               	movlw	0
  1713   000F02  6E3D               	movwf	(dtoa@i+1)^0,c
  1714   000F04  0E1F               	movlw	31
  1715   000F06  6E3C               	movwf	dtoa@i^0,c
  1716   000F08                     
  1717                           ; BSR set to: 0
  1718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1719   000F08  0E00               	movlw	0
  1720   000F0A  0101               	movlb	1	; () banked
  1721   000F0C  6FDB               	movwf	(_dbuf+31)& (0+255),b
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1724   000F0E  EF05  F008         	goto	l2159
  1725   000F12                     l2149:
  1726                           
  1727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1728   000F12  063C               	decf	dtoa@i^0,f,c
  1729   000F14  A0D8               	btfss	status,0,c
  1730   000F16  063D               	decf	(dtoa@i+1)^0,f,c
  1731   000F18                     
  1732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1733   000F18  0EBC               	movlw	low _dbuf
  1734   000F1A  243C               	addwf	dtoa@i^0,w,c
  1735   000F1C  6ED9               	movwf	fsr2l,c
  1736   000F1E  0E01               	movlw	high _dbuf
  1737   000F20  203D               	addwfc	(dtoa@i+1)^0,w,c
  1738   000F22  6EDA               	movwf	fsr2h,c
  1739   000F24  C034  F001         	movff	dtoa@n,___aomod@dividend
  1740   000F28  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1741   000F2C  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1742   000F30  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1743   000F34  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1744   000F38  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1745   000F3C  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1746   000F40  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1747   000F44  0E0A               	movlw	10
  1748   000F46  6E09               	movwf	___aomod@divisor^0,c
  1749   000F48  0E00               	movlw	0
  1750   000F4A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1751   000F4C  0E00               	movlw	0
  1752   000F4E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1753   000F50  0E00               	movlw	0
  1754   000F52  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1755   000F54  0E00               	movlw	0
  1756   000F56  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1757   000F58  0E00               	movlw	0
  1758   000F5A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1759   000F5C  0E00               	movlw	0
  1760   000F5E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1761   000F60  0E00               	movlw	0
  1762   000F62  6E10               	movwf	(___aomod@divisor+7)^0,c
  1763   000F64  EC13  F00D         	call	___aomod	;wreg free
  1764   000F68  C001  F026         	movff	?___aomod,??_dtoa
  1765   000F6C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1766   000F70  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1767   000F74  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1768   000F78  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1769   000F7C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1770   000F80  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1771   000F84  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1772   000F88  C026  F013         	movff	??_dtoa,abs@a
  1773   000F8C  C027  F014         	movff	??_dtoa+1,abs@a+1
  1774   000F90  EC57  F011         	call	_abs	;wreg free
  1775   000F94  5013               	movf	?_abs^0,w,c
  1776   000F96  0F30               	addlw	48
  1777   000F98  6EDF               	movwf	indf2,c
  1778   000F9A                     
  1779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1780   000F9A  0630               	decf	dtoa@p^0,f,c
  1781   000F9C  A0D8               	btfss	status,0,c
  1782   000F9E  0631               	decf	(dtoa@p+1)^0,f,c
  1783   000FA0                     
  1784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1785   000FA0  0632               	decf	dtoa@w^0,f,c
  1786   000FA2  A0D8               	btfss	status,0,c
  1787   000FA4  0633               	decf	(dtoa@w+1)^0,f,c
  1788   000FA6                     
  1789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1790   000FA6  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1791   000FAA  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1792   000FAE  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1793   000FB2  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1794   000FB6  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1795   000FBA  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1796   000FBE  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1797   000FC2  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1798   000FC6  0E0A               	movlw	10
  1799   000FC8  6E09               	movwf	___aodiv@divisor^0,c
  1800   000FCA  0E00               	movlw	0
  1801   000FCC  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1802   000FCE  0E00               	movlw	0
  1803   000FD0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1804   000FD2  0E00               	movlw	0
  1805   000FD4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1806   000FD6  0E00               	movlw	0
  1807   000FD8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1808   000FDA  0E00               	movlw	0
  1809   000FDC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1810   000FDE  0E00               	movlw	0
  1811   000FE0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1812   000FE2  0E00               	movlw	0
  1813   000FE4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1814   000FE6  EC99  F00B         	call	___aodiv	;wreg free
  1815   000FEA  C001  F034         	movff	?___aodiv,dtoa@n
  1816   000FEE  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1817   000FF2  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1818   000FF6  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1819   000FFA  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1820   000FFE  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1821   001002  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1822   001006  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1823   00100A                     l2159:
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1826   00100A  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1827   00100C  EF10  F008         	goto	u1021
  1828   001010  503D               	movf	(dtoa@i+1)^0,w,c
  1829   001012  E108               	bnz	u1020
  1830   001014  043C               	decf	dtoa@i^0,w,c
  1831   001016  A0D8               	btfss	status,0,c
  1832   001018  EF10  F008         	goto	u1021
  1833   00101C  EF12  F008         	goto	u1020
  1834   001020                     u1021:
  1835   001020  EF2E  F008         	goto	l2165
  1836   001024                     u1020:
  1837   001024  5034               	movf	dtoa@n^0,w,c
  1838   001026  1035               	iorwf	(dtoa@n+1)^0,w,c
  1839   001028  1036               	iorwf	(dtoa@n+2)^0,w,c
  1840   00102A  1037               	iorwf	(dtoa@n+3)^0,w,c
  1841   00102C  1038               	iorwf	(dtoa@n+4)^0,w,c
  1842   00102E  1039               	iorwf	(dtoa@n+5)^0,w,c
  1843   001030  103A               	iorwf	(dtoa@n+6)^0,w,c
  1844   001032  103B               	iorwf	(dtoa@n+7)^0,w,c
  1845   001034  A4D8               	btfss	status,2,c
  1846   001036  EF1F  F008         	goto	u1031
  1847   00103A  EF21  F008         	goto	u1030
  1848   00103E                     u1031:
  1849   00103E  EF89  F007         	goto	l2149
  1850   001042                     u1030:
  1851   001042  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1852   001044  EF2E  F008         	goto	u1040
  1853   001048  5031               	movf	(dtoa@p+1)^0,w,c
  1854   00104A  E106               	bnz	u1041
  1855   00104C  0430               	decf	dtoa@p^0,w,c
  1856   00104E  B0D8               	btfsc	status,0,c
  1857   001050  EF2C  F008         	goto	u1041
  1858   001054  EF2E  F008         	goto	u1040
  1859   001058                     u1041:
  1860   001058  EF89  F007         	goto	l2149
  1861   00105C                     u1040:
  1862   00105C                     l2165:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1865   00105C  503E               	movf	dtoa@s^0,w,c
  1866   00105E  B4D8               	btfsc	status,2,c
  1867   001060  EF34  F008         	goto	u1051
  1868   001064  EF36  F008         	goto	u1050
  1869   001068                     u1051:
  1870   001068  EF41  F008         	goto	l2171
  1871   00106C                     u1050:
  1872   00106C                     
  1873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1874   00106C  063C               	decf	dtoa@i^0,f,c
  1875   00106E  A0D8               	btfss	status,0,c
  1876   001070  063D               	decf	(dtoa@i+1)^0,f,c
  1877   001072                     
  1878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1879   001072  0EBC               	movlw	low _dbuf
  1880   001074  243C               	addwf	dtoa@i^0,w,c
  1881   001076  6ED9               	movwf	fsr2l,c
  1882   001078  0E01               	movlw	high _dbuf
  1883   00107A  203D               	addwfc	(dtoa@i+1)^0,w,c
  1884   00107C  6EDA               	movwf	fsr2h,c
  1885   00107E  C03E  FFDF         	movff	dtoa@s,indf2
  1886   001082                     l2171:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1889   001082  C01C  F011         	movff	dtoa@fp,pad@fp
  1890   001086  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1891   00108A  0EBC               	movlw	low _dbuf
  1892   00108C  243C               	addwf	dtoa@i^0,w,c
  1893   00108E  6E13               	movwf	pad@buf^0,c
  1894   001090  0E01               	movlw	high _dbuf
  1895   001092  203D               	addwfc	(dtoa@i+1)^0,w,c
  1896   001094  6E14               	movwf	(pad@buf+1)^0,c
  1897   001096  C032  F015         	movff	dtoa@w,pad@p
  1898   00109A  C033  F016         	movff	dtoa@w+1,pad@p+1
  1899   00109E  ECD3  F00F         	call	_pad	;wreg free
  1900   0010A2  0012               	return		;funcret
  1901   0010A4                     __end_of_dtoa:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _pad *****************
  1905 ;; Defined at:
  1906 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1909 ;;		 -> sprintf@f(11), 
  1910 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1911 ;;		 -> dbuf(32), 
  1912 ;;  p               2   20[COMRAM] int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  w               2   25[COMRAM] int 
  1915 ;;  i               2   23[COMRAM] int 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1925 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;Total ram usage:       11 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 3
  1932 ;; This function calls:
  1933 ;;		_fputc
  1934 ;;		_fputs
  1935 ;; This function is called by:
  1936 ;;		_dtoa
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text5
  1941   001FA6                     __ptext5:
  1942                           	callstack 0
  1943   001FA6                     _pad:
  1944                           	callstack 23
  1945   001FA6                     
  1946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1947   001FA6  BE16               	btfsc	(pad@p+1)^0,7,c
  1948   001FA8  EFD8  F00F         	goto	u921
  1949   001FAC  EFDA  F00F         	goto	u920
  1950   001FB0                     u921:
  1951   001FB0  EFE0  F00F         	goto	l2109
  1952   001FB4                     u920:
  1953   001FB4  C015  F01A         	movff	pad@p,pad@w
  1954   001FB8  C016  F01B         	movff	pad@p+1,pad@w+1
  1955   001FBC  EFE4  F00F         	goto	l1132
  1956   001FC0                     l2109:
  1957   001FC0  0E00               	movlw	0
  1958   001FC2  6E1B               	movwf	(pad@w+1)^0,c
  1959   001FC4  0E00               	movlw	0
  1960   001FC6  6E1A               	movwf	pad@w^0,c
  1961   001FC8                     l1132:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1964   001FC8  0E00               	movlw	0
  1965   001FCA  6E19               	movwf	(pad@i+1)^0,c
  1966   001FCC  0E00               	movlw	0
  1967   001FCE  6E18               	movwf	pad@i^0,c
  1968                           
  1969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1970   001FD0  EFF6  F00F         	goto	l2115
  1971   001FD4                     l2111:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1974   001FD4  0E00               	movlw	0
  1975   001FD6  6E02               	movwf	(fputc@c+1)^0,c
  1976   001FD8  0E20               	movlw	32
  1977   001FDA  6E01               	movwf	fputc@c^0,c
  1978   001FDC  C011  F003         	movff	pad@fp,fputc@fp
  1979   001FE0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1980   001FE4  ECEA  F00E         	call	_fputc	;wreg free
  1981   001FE8                     
  1982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1983   001FE8  4A18               	infsnz	pad@i^0,f,c
  1984   001FEA  2A19               	incf	(pad@i+1)^0,f,c
  1985   001FEC                     l2115:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1988   001FEC  501A               	movf	pad@w^0,w,c
  1989   001FEE  5C18               	subwf	pad@i^0,w,c
  1990   001FF0  5019               	movf	(pad@i+1)^0,w,c
  1991   001FF2  0A80               	xorlw	128
  1992   001FF4  6E17               	movwf	??_pad^0,c
  1993   001FF6  501B               	movf	(pad@w+1)^0,w,c
  1994   001FF8  0A80               	xorlw	128
  1995   001FFA  5817               	subwfb	??_pad^0,w,c
  1996   001FFC  A0D8               	btfss	status,0,c
  1997   001FFE  EF03  F010         	goto	u931
  1998   002002  EF05  F010         	goto	u930
  1999   002006                     u931:
  2000   002006  EFEA  F00F         	goto	l2111
  2001   00200A                     u930:
  2002   00200A                     
  2003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2004   00200A  C013  F00A         	movff	pad@buf,fputs@s
  2005   00200E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2006   002012  C011  F00C         	movff	pad@fp,fputs@fp
  2007   002016  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2008   00201A  EC14  F011         	call	_fputs	;wreg free
  2009   00201E  0012               	return		;funcret
  2010   002020                     __end_of_pad:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _fputs *****************
  2014 ;; Defined at:
  2015 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2018 ;;		 -> dbuf(32), 
  2019 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2020 ;;		 -> sprintf@f(11), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  i               2   14[COMRAM] int 
  2023 ;;  c               1   13[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  2    9[COMRAM] int 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;Total ram usage:        7 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 2
  2040 ;; This function calls:
  2041 ;;		_fputc
  2042 ;; This function is called by:
  2043 ;;		_pad
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text6
  2048   002228                     __ptext6:
  2049                           	callstack 0
  2050   002228                     _fputs:
  2051                           	callstack 23
  2052   002228  0E00               	movlw	0
  2053   00222A  6E10               	movwf	(fputs@i+1)^0,c
  2054   00222C  0E00               	movlw	0
  2055   00222E  6E0F               	movwf	fputs@i^0,c
  2056   002230  EF25  F011         	goto	l2019
  2057   002234                     l2015:
  2058   002234  C00E  F001         	movff	fputs@c,fputc@c
  2059   002238  6A02               	clrf	(fputc@c+1)^0,c
  2060   00223A  C00C  F003         	movff	fputs@fp,fputc@fp
  2061   00223E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2062   002242  ECEA  F00E         	call	_fputc	;wreg free
  2063   002246  4A0F               	infsnz	fputs@i^0,f,c
  2064   002248  2A10               	incf	(fputs@i+1)^0,f,c
  2065   00224A                     l2019:
  2066   00224A  500F               	movf	fputs@i^0,w,c
  2067   00224C  240A               	addwf	fputs@s^0,w,c
  2068   00224E  6ED9               	movwf	fsr2l,c
  2069   002250  5010               	movf	(fputs@i+1)^0,w,c
  2070   002252  200B               	addwfc	(fputs@s+1)^0,w,c
  2071   002254  6EDA               	movwf	fsr2h,c
  2072   002256  50DF               	movf	indf2,w,c
  2073   002258  6E0E               	movwf	fputs@c^0,c
  2074   00225A  500E               	movf	fputs@c^0,w,c
  2075   00225C  A4D8               	btfss	status,2,c
  2076   00225E  EF33  F011         	goto	u771
  2077   002262  EF35  F011         	goto	u770
  2078   002266                     u771:
  2079   002266  EF1A  F011         	goto	l2015
  2080   00226A                     u770:
  2081   00226A  0012               	return		;funcret
  2082   00226C                     __end_of_fputs:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _fputc *****************
  2086 ;; Defined at:
  2087 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  c               2    0[COMRAM] int 
  2090 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2091 ;;		 -> sprintf@f(11), 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  2    0[COMRAM] int 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2105 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2106 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;Total ram usage:        9 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 1
  2110 ;; This function calls:
  2111 ;;		_putch
  2112 ;; This function is called by:
  2113 ;;		_pad
  2114 ;;		_vfpfcnvrt
  2115 ;;		_fputs
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text7
  2120   001DD4                     __ptext7:
  2121                           	callstack 0
  2122   001DD4                     _fputc:
  2123                           	callstack 26
  2124   001DD4  5003               	movf	fputc@fp^0,w,c
  2125   001DD6  1004               	iorwf	(fputc@fp+1)^0,w,c
  2126   001DD8  B4D8               	btfsc	status,2,c
  2127   001DDA  EFF1  F00E         	goto	u731
  2128   001DDE  EFF3  F00E         	goto	u730
  2129   001DE2                     u731:
  2130   001DE2  EFFC  F00E         	goto	l2003
  2131   001DE6                     u730:
  2132   001DE6  5003               	movf	fputc@fp^0,w,c
  2133   001DE8  1004               	iorwf	(fputc@fp+1)^0,w,c
  2134   001DEA  A4D8               	btfss	status,2,c
  2135   001DEC  EFFA  F00E         	goto	u741
  2136   001DF0  EFFC  F00E         	goto	u740
  2137   001DF4                     u741:
  2138   001DF4  EF01  F00F         	goto	l2005
  2139   001DF8                     u740:
  2140   001DF8                     l2003:
  2141   001DF8  5001               	movf	fputc@c^0,w,c
  2142   001DFA  EC4D  F012         	call	_putch
  2143   001DFE  EF4E  F00F         	goto	l1180
  2144   001E02                     l2005:
  2145   001E02  EE20 F009          	lfsr	2,9
  2146   001E06  5003               	movf	fputc@fp^0,w,c
  2147   001E08  26D9               	addwf	fsr2l,f,c
  2148   001E0A  5004               	movf	(fputc@fp+1)^0,w,c
  2149   001E0C  22DA               	addwfc	fsr2h,f,c
  2150   001E0E  50DE               	movf	postinc2,w,c
  2151   001E10  10DE               	iorwf	postinc2,w,c
  2152   001E12  B4D8               	btfsc	status,2,c
  2153   001E14  EF0E  F00F         	goto	u751
  2154   001E18  EF10  F00F         	goto	u750
  2155   001E1C                     u751:
  2156   001E1C  EF2B  F00F         	goto	l2009
  2157   001E20                     u750:
  2158   001E20  EE20 F009          	lfsr	2,9
  2159   001E24  5003               	movf	fputc@fp^0,w,c
  2160   001E26  26D9               	addwf	fsr2l,f,c
  2161   001E28  5004               	movf	(fputc@fp+1)^0,w,c
  2162   001E2A  22DA               	addwfc	fsr2h,f,c
  2163   001E2C  EE10 F003          	lfsr	1,3
  2164   001E30  5003               	movf	fputc@fp^0,w,c
  2165   001E32  26E1               	addwf	fsr1l,f,c
  2166   001E34  5004               	movf	(fputc@fp+1)^0,w,c
  2167   001E36  22E2               	addwfc	fsr1h,f,c
  2168   001E38  50DE               	movf	postinc2,w,c
  2169   001E3A  5CE6               	subwf	postinc1,w,c
  2170   001E3C  50E6               	movf	postinc1,w,c
  2171   001E3E  0A80               	xorlw	128
  2172   001E40  6E09               	movwf	(??_fputc+4)^0,c
  2173   001E42  50DE               	movf	postinc2,w,c
  2174   001E44  0A80               	xorlw	128
  2175   001E46  5809               	subwfb	(??_fputc+4)^0,w,c
  2176   001E48  B0D8               	btfsc	status,0,c
  2177   001E4A  EF29  F00F         	goto	u761
  2178   001E4E  EF2B  F00F         	goto	u760
  2179   001E52                     u761:
  2180   001E52  EF4E  F00F         	goto	l1180
  2181   001E56                     u760:
  2182   001E56                     l2009:
  2183   001E56  EE20 F003          	lfsr	2,3
  2184   001E5A  5003               	movf	fputc@fp^0,w,c
  2185   001E5C  26D9               	addwf	fsr2l,f,c
  2186   001E5E  5004               	movf	(fputc@fp+1)^0,w,c
  2187   001E60  22DA               	addwfc	fsr2h,f,c
  2188   001E62  CFDE F005          	movff	postinc2,??_fputc
  2189   001E66  CFDD F006          	movff	postdec2,??_fputc+1
  2190   001E6A  C003  FFD9         	movff	fputc@fp,fsr2l
  2191   001E6E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2192   001E72  CFDE F007          	movff	postinc2,??_fputc+2
  2193   001E76  CFDD F008          	movff	postdec2,??_fputc+3
  2194   001E7A  5005               	movf	??_fputc^0,w,c
  2195   001E7C  2407               	addwf	(??_fputc+2)^0,w,c
  2196   001E7E  6ED9               	movwf	fsr2l,c
  2197   001E80  5006               	movf	(??_fputc+1)^0,w,c
  2198   001E82  2008               	addwfc	(??_fputc+3)^0,w,c
  2199   001E84  6EDA               	movwf	fsr2h,c
  2200   001E86  C001  FFDF         	movff	fputc@c,indf2
  2201   001E8A  EE20 F003          	lfsr	2,3
  2202   001E8E  5003               	movf	fputc@fp^0,w,c
  2203   001E90  26D9               	addwf	fsr2l,f,c
  2204   001E92  5004               	movf	(fputc@fp+1)^0,w,c
  2205   001E94  22DA               	addwfc	fsr2h,f,c
  2206   001E96  2ADE               	incf	postinc2,f,c
  2207   001E98  0E00               	movlw	0
  2208   001E9A  22DD               	addwfc	postdec2,f,c
  2209   001E9C                     l1180:
  2210   001E9C  0012               	return		;funcret
  2211   001E9E                     __end_of_fputc:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _putch *****************
  2215 ;; Defined at:
  2216 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  c               1    wreg     unsigned char 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  c               1    0[COMRAM] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_fputc
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text8
  2244   00249A                     __ptext8:
  2245                           	callstack 0
  2246   00249A                     _putch:
  2247                           	callstack 26
  2248   00249A  0012               	return		;funcret
  2249   00249C                     __end_of_putch:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function ___aomod *****************
  2253 ;; Defined at:
  2254 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  dividend        8    0[COMRAM] long long 
  2257 ;;  divisor         8    8[COMRAM] long long 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  sign            1   17[COMRAM] unsigned char 
  2260 ;;  counter         1   16[COMRAM] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  8    0[COMRAM] long long 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2270 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2273 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2274 ;;Total ram usage:       18 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_dtoa
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text9
  2284   001A26                     __ptext9:
  2285                           	callstack 0
  2286   001A26                     ___aomod:
  2287                           	callstack 26
  2288   001A26  0E00               	movlw	0
  2289   001A28  6E12               	movwf	___aomod@sign^0,c
  2290   001A2A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2291   001A2C  EF1C  F00D         	goto	u860
  2292   001A30  EF1A  F00D         	goto	u861
  2293   001A34                     u861:
  2294   001A34  EF2E  F00D         	goto	l2077
  2295   001A38                     u860:
  2296   001A38  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2297   001A3A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2298   001A3C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2299   001A3E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2300   001A40  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2301   001A42  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2302   001A44  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2303   001A46  6C01               	negf	___aomod@dividend^0,c
  2304   001A48  0E00               	movlw	0
  2305   001A4A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2306   001A4C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2307   001A4E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2308   001A50  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2309   001A52  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2310   001A54  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2311   001A56  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2312   001A58  0E01               	movlw	1
  2313   001A5A  6E12               	movwf	___aomod@sign^0,c
  2314   001A5C                     l2077:
  2315   001A5C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2316   001A5E  EF35  F00D         	goto	u870
  2317   001A62  EF33  F00D         	goto	u871
  2318   001A66                     u871:
  2319   001A66  EF45  F00D         	goto	l2081
  2320   001A6A                     u870:
  2321   001A6A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2322   001A6C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2323   001A6E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2324   001A70  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2325   001A72  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2326   001A74  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2327   001A76  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2328   001A78  6C09               	negf	___aomod@divisor^0,c
  2329   001A7A  0E00               	movlw	0
  2330   001A7C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2331   001A7E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2332   001A80  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2333   001A82  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2334   001A84  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2335   001A86  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2336   001A88  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2337   001A8A                     l2081:
  2338   001A8A  5009               	movf	___aomod@divisor^0,w,c
  2339   001A8C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2340   001A8E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2341   001A90  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2342   001A92  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2343   001A94  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2344   001A96  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2345   001A98  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2346   001A9A  B4D8               	btfsc	status,2,c
  2347   001A9C  EF52  F00D         	goto	u881
  2348   001AA0  EF54  F00D         	goto	u880
  2349   001AA4                     u881:
  2350   001AA4  EF9C  F00D         	goto	l2097
  2351   001AA8                     u880:
  2352   001AA8  0E01               	movlw	1
  2353   001AAA  6E11               	movwf	___aomod@counter^0,c
  2354   001AAC  EF62  F00D         	goto	l2087
  2355   001AB0                     l2085:
  2356   001AB0  90D8               	bcf	status,0,c
  2357   001AB2  3609               	rlcf	___aomod@divisor^0,f,c
  2358   001AB4  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2359   001AB6  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2360   001AB8  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2361   001ABA  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2362   001ABC  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2363   001ABE  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2364   001AC0  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2365   001AC2  2A11               	incf	___aomod@counter^0,f,c
  2366   001AC4                     l2087:
  2367   001AC4  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2368   001AC6  EF67  F00D         	goto	u891
  2369   001ACA  EF69  F00D         	goto	u890
  2370   001ACE                     u891:
  2371   001ACE  EF58  F00D         	goto	l2085
  2372   001AD2                     u890:
  2373   001AD2                     l2089:
  2374   001AD2  5009               	movf	___aomod@divisor^0,w,c
  2375   001AD4  5C01               	subwf	___aomod@dividend^0,w,c
  2376   001AD6  500A               	movf	(___aomod@divisor+1)^0,w,c
  2377   001AD8  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2378   001ADA  500B               	movf	(___aomod@divisor+2)^0,w,c
  2379   001ADC  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2380   001ADE  500C               	movf	(___aomod@divisor+3)^0,w,c
  2381   001AE0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2382   001AE2  500D               	movf	(___aomod@divisor+4)^0,w,c
  2383   001AE4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2384   001AE6  500E               	movf	(___aomod@divisor+5)^0,w,c
  2385   001AE8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2386   001AEA  500F               	movf	(___aomod@divisor+6)^0,w,c
  2387   001AEC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2388   001AEE  5010               	movf	(___aomod@divisor+7)^0,w,c
  2389   001AF0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2390   001AF2  A0D8               	btfss	status,0,c
  2391   001AF4  EF7E  F00D         	goto	u901
  2392   001AF8  EF80  F00D         	goto	u900
  2393   001AFC                     u901:
  2394   001AFC  EF90  F00D         	goto	l2093
  2395   001B00                     u900:
  2396   001B00  5009               	movf	___aomod@divisor^0,w,c
  2397   001B02  5E01               	subwf	___aomod@dividend^0,f,c
  2398   001B04  500A               	movf	(___aomod@divisor+1)^0,w,c
  2399   001B06  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2400   001B08  500B               	movf	(___aomod@divisor+2)^0,w,c
  2401   001B0A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2402   001B0C  500C               	movf	(___aomod@divisor+3)^0,w,c
  2403   001B0E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2404   001B10  500D               	movf	(___aomod@divisor+4)^0,w,c
  2405   001B12  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2406   001B14  500E               	movf	(___aomod@divisor+5)^0,w,c
  2407   001B16  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2408   001B18  500F               	movf	(___aomod@divisor+6)^0,w,c
  2409   001B1A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2410   001B1C  5010               	movf	(___aomod@divisor+7)^0,w,c
  2411   001B1E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2412   001B20                     l2093:
  2413   001B20  90D8               	bcf	status,0,c
  2414   001B22  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2415   001B24  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2416   001B26  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2417   001B28  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2418   001B2A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2419   001B2C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2420   001B2E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2421   001B30  3209               	rrcf	___aomod@divisor^0,f,c
  2422   001B32  2E11               	decfsz	___aomod@counter^0,f,c
  2423   001B34  EF69  F00D         	goto	l2089
  2424   001B38                     l2097:
  2425   001B38  5012               	movf	___aomod@sign^0,w,c
  2426   001B3A  B4D8               	btfsc	status,2,c
  2427   001B3C  EFA2  F00D         	goto	u911
  2428   001B40  EFA4  F00D         	goto	u910
  2429   001B44                     u911:
  2430   001B44  EFB4  F00D         	goto	l2101
  2431   001B48                     u910:
  2432   001B48  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2433   001B4A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2434   001B4C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2435   001B4E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2436   001B50  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2437   001B52  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2438   001B54  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2439   001B56  6C01               	negf	___aomod@dividend^0,c
  2440   001B58  0E00               	movlw	0
  2441   001B5A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2442   001B5C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2443   001B5E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2444   001B60  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2445   001B62  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2446   001B64  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2447   001B66  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2448   001B68                     l2101:
  2449   001B68  C001  F001         	movff	___aomod@dividend,?___aomod
  2450   001B6C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2451   001B70  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2452   001B74  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2453   001B78  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2454   001B7C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2455   001B80  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2456   001B84  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2457   001B88  0012               	return		;funcret
  2458   001B8A                     __end_of___aomod:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function ___aodiv *****************
  2462 ;; Defined at:
  2463 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  dividend        8    0[COMRAM] long long 
  2466 ;;  divisor         8    8[COMRAM] long long 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  quotient        8   18[COMRAM] long long 
  2469 ;;  sign            1   17[COMRAM] unsigned char 
  2470 ;;  counter         1   16[COMRAM] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  8    0[COMRAM] long long 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2480 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;Total ram usage:       26 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_dtoa
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text10
  2494   001732                     __ptext10:
  2495                           	callstack 0
  2496   001732                     ___aodiv:
  2497                           	callstack 26
  2498   001732  0E00               	movlw	0
  2499   001734  6E12               	movwf	___aodiv@sign^0,c
  2500   001736  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2501   001738  EFA2  F00B         	goto	u790
  2502   00173C  EFA0  F00B         	goto	u791
  2503   001740                     u791:
  2504   001740  EFB4  F00B         	goto	l2033
  2505   001744                     u790:
  2506   001744  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2507   001746  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2508   001748  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2509   00174A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2510   00174C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2511   00174E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2512   001750  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2513   001752  6C09               	negf	___aodiv@divisor^0,c
  2514   001754  0E00               	movlw	0
  2515   001756  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2516   001758  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2517   00175A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2518   00175C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2519   00175E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2520   001760  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2521   001762  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2522   001764  0E01               	movlw	1
  2523   001766  6E12               	movwf	___aodiv@sign^0,c
  2524   001768                     l2033:
  2525   001768  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2526   00176A  EFBB  F00B         	goto	u800
  2527   00176E  EFB9  F00B         	goto	u801
  2528   001772                     u801:
  2529   001772  EFCD  F00B         	goto	l2039
  2530   001776                     u800:
  2531   001776  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2532   001778  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2533   00177A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2534   00177C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2535   00177E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2536   001780  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2537   001782  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2538   001784  6C01               	negf	___aodiv@dividend^0,c
  2539   001786  0E00               	movlw	0
  2540   001788  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2541   00178A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2542   00178C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2543   00178E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2544   001790  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2545   001792  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2546   001794  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2547   001796  0E01               	movlw	1
  2548   001798  1A12               	xorwf	___aodiv@sign^0,f,c
  2549   00179A                     l2039:
  2550   00179A  EE20  F013         	lfsr	2,___aodiv@quotient
  2551   00179E  0E07               	movlw	7
  2552   0017A0                     u811:
  2553   0017A0  6ADE               	clrf	postinc2,c
  2554   0017A2  06E8               	decf	wreg,f,c
  2555   0017A4  E2FD               	bc	u811
  2556   0017A6  5009               	movf	___aodiv@divisor^0,w,c
  2557   0017A8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2558   0017AA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2559   0017AC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2560   0017AE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2561   0017B0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2562   0017B2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2563   0017B4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2564   0017B6  B4D8               	btfsc	status,2,c
  2565   0017B8  EFE0  F00B         	goto	u821
  2566   0017BC  EFE2  F00B         	goto	u820
  2567   0017C0                     u821:
  2568   0017C0  EF34  F00C         	goto	l2061
  2569   0017C4                     u820:
  2570   0017C4  0E01               	movlw	1
  2571   0017C6  6E11               	movwf	___aodiv@counter^0,c
  2572   0017C8  EFF0  F00B         	goto	l2047
  2573   0017CC                     l2045:
  2574   0017CC  90D8               	bcf	status,0,c
  2575   0017CE  3609               	rlcf	___aodiv@divisor^0,f,c
  2576   0017D0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2577   0017D2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2578   0017D4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2579   0017D6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2580   0017D8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2581   0017DA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2582   0017DC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2583   0017DE  2A11               	incf	___aodiv@counter^0,f,c
  2584   0017E0                     l2047:
  2585   0017E0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2586   0017E2  EFF5  F00B         	goto	u831
  2587   0017E6  EFF7  F00B         	goto	u830
  2588   0017EA                     u831:
  2589   0017EA  EFE6  F00B         	goto	l2045
  2590   0017EE                     u830:
  2591   0017EE                     l2049:
  2592   0017EE  90D8               	bcf	status,0,c
  2593   0017F0  3613               	rlcf	___aodiv@quotient^0,f,c
  2594   0017F2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2595   0017F4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2596   0017F6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2597   0017F8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2598   0017FA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2599   0017FC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2600   0017FE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2601   001800  5009               	movf	___aodiv@divisor^0,w,c
  2602   001802  5C01               	subwf	___aodiv@dividend^0,w,c
  2603   001804  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2604   001806  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2605   001808  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2606   00180A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2607   00180C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2608   00180E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2609   001810  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2610   001812  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2611   001814  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2612   001816  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2613   001818  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2614   00181A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2615   00181C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2616   00181E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2617   001820  A0D8               	btfss	status,0,c
  2618   001822  EF15  F00C         	goto	u841
  2619   001826  EF17  F00C         	goto	u840
  2620   00182A                     u841:
  2621   00182A  EF28  F00C         	goto	l2057
  2622   00182E                     u840:
  2623   00182E  5009               	movf	___aodiv@divisor^0,w,c
  2624   001830  5E01               	subwf	___aodiv@dividend^0,f,c
  2625   001832  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2626   001834  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2627   001836  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2628   001838  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2629   00183A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2630   00183C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2631   00183E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2632   001840  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2633   001842  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2634   001844  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2635   001846  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2636   001848  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2637   00184A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2638   00184C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2639   00184E  8013               	bsf	___aodiv@quotient^0,0,c
  2640   001850                     l2057:
  2641   001850  90D8               	bcf	status,0,c
  2642   001852  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2643   001854  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2644   001856  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2645   001858  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2646   00185A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2647   00185C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2648   00185E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2649   001860  3209               	rrcf	___aodiv@divisor^0,f,c
  2650   001862  2E11               	decfsz	___aodiv@counter^0,f,c
  2651   001864  EFF7  F00B         	goto	l2049
  2652   001868                     l2061:
  2653   001868  5012               	movf	___aodiv@sign^0,w,c
  2654   00186A  B4D8               	btfsc	status,2,c
  2655   00186C  EF3A  F00C         	goto	u851
  2656   001870  EF3C  F00C         	goto	u850
  2657   001874                     u851:
  2658   001874  EF4C  F00C         	goto	l2065
  2659   001878                     u850:
  2660   001878  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2661   00187A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2662   00187C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2663   00187E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2664   001880  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2665   001882  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2666   001884  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2667   001886  6C13               	negf	___aodiv@quotient^0,c
  2668   001888  0E00               	movlw	0
  2669   00188A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2670   00188C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2671   00188E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2672   001890  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2673   001892  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2674   001894  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2675   001896  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2676   001898                     l2065:
  2677   001898  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2678   00189C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2679   0018A0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2680   0018A4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2681   0018A8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2682   0018AC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2683   0018B0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2684   0018B4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2685   0018B8  0012               	return		;funcret
  2686   0018BA                     __end_of___aodiv:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _setMotorPWM *****************
  2690 ;; Defined at:
  2691 ;;		line 61 in file "dc_motor.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  m               2   13[COMRAM] PTR struct DC_motor
  2694 ;;		 -> main@motorR(9), main@motorL(9), 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  negDuty         1   18[COMRAM] unsigned char 
  2697 ;;  posDuty         1   17[COMRAM] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;Total ram usage:        6 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 1
  2714 ;; This function calls:
  2715 ;;		___lwdiv
  2716 ;;		___wmul
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;;		_stop
  2720 ;;		_turnLeft45
  2721 ;;		_turnRight45
  2722 ;;		_fullSpeedAhead
  2723 ;;		_reverseFullSpeed
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text11
  2728   0018BA                     __ptext11:
  2729                           	callstack 0
  2730   0018BA                     _setMotorPWM:
  2731                           	callstack 29
  2732   0018BA                     
  2733                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2734   0018BA  EE20 F002          	lfsr	2,2
  2735   0018BE  500E               	movf	setMotorPWM@m^0,w,c
  2736   0018C0  26D9               	addwf	fsr2l,f,c
  2737   0018C2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2738   0018C4  22DA               	addwfc	fsr2h,f,c
  2739   0018C6  50DF               	movf	indf2,w,c
  2740   0018C8  B4D8               	btfsc	status,2,c
  2741   0018CA  EF69  F00C         	goto	u1161
  2742   0018CE  EF6B  F00C         	goto	u1160
  2743   0018D2                     u1161:
  2744   0018D2  EF9F  F00C         	goto	l2347
  2745   0018D6                     u1160:
  2746   0018D6                     
  2747                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2748   0018D6  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2749   0018DA  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2750   0018DE  50DF               	movf	indf2,w,c
  2751   0018E0  6E10               	movwf	??_setMotorPWM^0,c
  2752   0018E2  5010               	movf	??_setMotorPWM^0,w,c
  2753   0018E4  6E01               	movwf	___wmul@multiplier^0,c
  2754   0018E6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2755   0018E8  EE20 F003          	lfsr	2,3
  2756   0018EC  500E               	movf	setMotorPWM@m^0,w,c
  2757   0018EE  26D9               	addwf	fsr2l,f,c
  2758   0018F0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2759   0018F2  22DA               	addwfc	fsr2h,f,c
  2760   0018F4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2761   0018F8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2762   0018FC  ECE8  F011         	call	___wmul	;wreg free
  2763   001900  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2764   001904  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2765   001908  0E00               	movlw	0
  2766   00190A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2767   00190C  0E64               	movlw	100
  2768   00190E  6E09               	movwf	___lwdiv@divisor^0,c
  2769   001910  EC10  F010         	call	___lwdiv	;wreg free
  2770   001914  EE20 F003          	lfsr	2,3
  2771   001918  500E               	movf	setMotorPWM@m^0,w,c
  2772   00191A  26D9               	addwf	fsr2l,f,c
  2773   00191C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2774   00191E  22DA               	addwfc	fsr2h,f,c
  2775   001920  50DF               	movf	indf2,w,c
  2776   001922  6E11               	movwf	(??_setMotorPWM+1)^0,c
  2777   001924  5007               	movf	?___lwdiv^0,w,c
  2778   001926  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  2779   001928  6E12               	movwf	setMotorPWM@posDuty^0,c
  2780   00192A                     
  2781                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2782   00192A  EE20 F003          	lfsr	2,3
  2783   00192E  500E               	movf	setMotorPWM@m^0,w,c
  2784   001930  26D9               	addwf	fsr2l,f,c
  2785   001932  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2786   001934  22DA               	addwfc	fsr2h,f,c
  2787   001936  50DF               	movf	indf2,w,c
  2788   001938  6E13               	movwf	setMotorPWM@negDuty^0,c
  2789                           
  2790                           ;dc_motor.c: 68:     }
  2791   00193A  EFC2  F00C         	goto	l2351
  2792   00193E                     l2347:
  2793                           
  2794                           ;dc_motor.c: 70:         posDuty=0;
  2795   00193E  0E00               	movlw	0
  2796   001940  6E12               	movwf	setMotorPWM@posDuty^0,c
  2797   001942                     
  2798                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2799   001942  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2800   001946  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2801   00194A  50DF               	movf	indf2,w,c
  2802   00194C  6E10               	movwf	??_setMotorPWM^0,c
  2803   00194E  5010               	movf	??_setMotorPWM^0,w,c
  2804   001950  6E01               	movwf	___wmul@multiplier^0,c
  2805   001952  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2806   001954  EE20 F003          	lfsr	2,3
  2807   001958  500E               	movf	setMotorPWM@m^0,w,c
  2808   00195A  26D9               	addwf	fsr2l,f,c
  2809   00195C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2810   00195E  22DA               	addwfc	fsr2h,f,c
  2811   001960  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2812   001964  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2813   001968  ECE8  F011         	call	___wmul	;wreg free
  2814   00196C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2815   001970  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2816   001974  0E00               	movlw	0
  2817   001976  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2818   001978  0E64               	movlw	100
  2819   00197A  6E09               	movwf	___lwdiv@divisor^0,c
  2820   00197C  EC10  F010         	call	___lwdiv	;wreg free
  2821   001980  5007               	movf	?___lwdiv^0,w,c
  2822   001982  6E13               	movwf	setMotorPWM@negDuty^0,c
  2823   001984                     l2351:
  2824                           
  2825                           ;dc_motor.c: 74:     if (m->direction) {
  2826   001984  EE20 F001          	lfsr	2,1
  2827   001988  500E               	movf	setMotorPWM@m^0,w,c
  2828   00198A  26D9               	addwf	fsr2l,f,c
  2829   00198C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2830   00198E  22DA               	addwfc	fsr2h,f,c
  2831   001990  50DF               	movf	indf2,w,c
  2832   001992  B4D8               	btfsc	status,2,c
  2833   001994  EFCE  F00C         	goto	u1171
  2834   001998  EFD0  F00C         	goto	u1170
  2835   00199C                     u1171:
  2836   00199C  EFF2  F00C         	goto	l2355
  2837   0019A0                     u1170:
  2838   0019A0                     
  2839                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2840   0019A0  EE20 F005          	lfsr	2,5
  2841   0019A4  500E               	movf	setMotorPWM@m^0,w,c
  2842   0019A6  26D9               	addwf	fsr2l,f,c
  2843   0019A8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2844   0019AA  22DA               	addwfc	fsr2h,f,c
  2845   0019AC  CFDE F010          	movff	postinc2,??_setMotorPWM
  2846   0019B0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2847   0019B4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2848   0019B8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2849   0019BC  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2850                           
  2851                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2852   0019C0  EE20 F007          	lfsr	2,7
  2853   0019C4  500E               	movf	setMotorPWM@m^0,w,c
  2854   0019C6  26D9               	addwf	fsr2l,f,c
  2855   0019C8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2856   0019CA  22DA               	addwfc	fsr2h,f,c
  2857   0019CC  CFDE F010          	movff	postinc2,??_setMotorPWM
  2858   0019D0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2859   0019D4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2860   0019D8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2861   0019DC  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2862                           
  2863                           ;dc_motor.c: 77:     } else {
  2864   0019E0  EF12  F00D         	goto	l95
  2865   0019E4                     l2355:
  2866                           
  2867                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2868   0019E4  EE20 F005          	lfsr	2,5
  2869   0019E8  500E               	movf	setMotorPWM@m^0,w,c
  2870   0019EA  26D9               	addwf	fsr2l,f,c
  2871   0019EC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2872   0019EE  22DA               	addwfc	fsr2h,f,c
  2873   0019F0  CFDE F010          	movff	postinc2,??_setMotorPWM
  2874   0019F4  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2875   0019F8  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2876   0019FC  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2877   001A00  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2878                           
  2879                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2880   001A04  EE20 F007          	lfsr	2,7
  2881   001A08  500E               	movf	setMotorPWM@m^0,w,c
  2882   001A0A  26D9               	addwf	fsr2l,f,c
  2883   001A0C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2884   001A0E  22DA               	addwfc	fsr2h,f,c
  2885   001A10  CFDE F010          	movff	postinc2,??_setMotorPWM
  2886   001A14  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2887   001A18  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2888   001A1C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2889   001A20  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2890   001A24                     l95:
  2891   001A24  0012               	return		;funcret
  2892   001A26                     __end_of_setMotorPWM:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _sendStringSerial4 *****************
  2896 ;; Defined at:
  2897 ;;		line 39 in file "serial.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  string          2    1[COMRAM] PTR unsigned char 
  2900 ;;		 -> main@buf(150), 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;Total ram usage:        2 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; Hardware stack levels required when called: 1
  2919 ;; This function calls:
  2920 ;;		_sendCharSerial4
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text12
  2927   002322                     __ptext12:
  2928                           	callstack 0
  2929   002322                     _sendStringSerial4:
  2930                           	callstack 29
  2931   002322                     
  2932                           ;serial.c: 40:  while(*string != 0) {
  2933   002322  EF9C  F011         	goto	l2515
  2934   002326                     l2511:
  2935                           
  2936                           ;serial.c: 41:         sendCharSerial4(*string++);
  2937   002326  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2938   00232A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2939   00232E  50DF               	movf	indf2,w,c
  2940   002330  EC2C  F012         	call	_sendCharSerial4
  2941   002334  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2942   002336  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2943   002338                     l2515:
  2944                           
  2945                           ;serial.c: 40:  while(*string != 0) {
  2946   002338  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2947   00233C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2948   002340  50DF               	movf	indf2,w,c
  2949   002342  A4D8               	btfss	status,2,c
  2950   002344  EFA6  F011         	goto	u1271
  2951   002348  EFA8  F011         	goto	u1270
  2952   00234C                     u1271:
  2953   00234C  EF93  F011         	goto	l2511
  2954   002350                     u1270:
  2955   002350  0012               	return		;funcret
  2956   002352                     __end_of_sendStringSerial4:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _sendCharSerial4 *****************
  2960 ;; Defined at:
  2961 ;;		line 32 in file "serial.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  charToSend      1    wreg     unsigned char 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  charToSend      1    0[COMRAM] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;Total ram usage:        1 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_sendStringSerial4
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text13
  2989   002458                     __ptext13:
  2990                           	callstack 0
  2991   002458                     _sendCharSerial4:
  2992                           	callstack 29
  2993                           
  2994                           ;incstack = 0
  2995                           ;sendCharSerial4@charToSend stored from wreg
  2996   002458  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2997   00245A                     l381:
  2998   00245A  010E               	movlb	14	; () banked
  2999   00245C  A537               	btfss	55,2,b	;volatile
  3000   00245E  EF33  F012         	goto	u1111
  3001   002462  EF35  F012         	goto	u1110
  3002   002466                     u1111:
  3003   002466  EF2D  F012         	goto	l381
  3004   00246A                     u1110:
  3005   00246A                     
  3006                           ; BSR set to: 14
  3007                           ;serial.c: 34:     TX4REG = charToSend;
  3008   00246A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3009   00246E                     
  3010                           ; BSR set to: 14
  3011   00246E  0012               	return		;funcret
  3012   002470                     __end_of_sendCharSerial4:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function _normalise_readings *****************
  3016 ;; Defined at:
  3017 ;;		line 64 in file "colour_identify.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  buf             2   22[COMRAM] PTR unsigned char 
  3020 ;;		 -> main@buf(150), 
  3021 ;;  red_read        2   24[COMRAM] unsigned int 
  3022 ;;  green_read      2   26[COMRAM] unsigned int 
  3023 ;;  blue_read       2   28[COMRAM] unsigned int 
  3024 ;;  expected_val    2   30[COMRAM] PTR unsigned int [9]
  3025 ;;		 -> main@expected_values(54), 
  3026 ;;  normalised_v    2   32[COMRAM] PTR unsigned int [9]
  3027 ;;		 -> main@normalised_values(54), 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  difference      2   42[COMRAM] unsigned int 
  3030 ;;  i               1   44[COMRAM] enum E14551
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3040 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;Total ram usage:       23 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 1
  3047 ;; This function calls:
  3048 ;;		___lwdiv
  3049 ;;		___wmul
  3050 ;;		_abs
  3051 ;; This function is called by:
  3052 ;;		_main
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text14
  3057   0010A4                     __ptext14:
  3058                           	callstack 0
  3059   0010A4                     _normalise_readings:
  3060                           	callstack 29
  3061   0010A4                     
  3062                           ;colour_identify.c: 71:     for(colour i = RED; i<= BLACK; i++){
  3063   0010A4  0E00               	movlw	0
  3064   0010A6  6E2D               	movwf	normalise_readings@i^0,c
  3065   0010A8                     l2523:
  3066                           
  3067                           ;colour_identify.c: 74:         unsigned int difference = abs(red_read - expected_values
      +                          [i][RED]);
  3068   0010A8  502D               	movf	normalise_readings@i^0,w,c
  3069   0010AA  0D12               	mullw	18
  3070   0010AC  CFF3 F023          	movff	prodl,??_normalise_readings
  3071   0010B0  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3072   0010B4  5023               	movf	??_normalise_readings^0,w,c
  3073   0010B6  241F               	addwf	normalise_readings@expected_values^0,w,c
  3074   0010B8  6ED9               	movwf	fsr2l,c
  3075   0010BA  5024               	movf	(??_normalise_readings+1)^0,w,c
  3076   0010BC  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3077   0010BE  6EDA               	movwf	fsr2h,c
  3078   0010C0  CFDE F025          	movff	postinc2,??_normalise_readings+2
  3079   0010C4  CFDD F026          	movff	postdec2,??_normalise_readings+3
  3080   0010C8  5025               	movf	(??_normalise_readings+2)^0,w,c
  3081   0010CA  5C19               	subwf	normalise_readings@red_read^0,w,c
  3082   0010CC  6E13               	movwf	abs@a^0,c
  3083   0010CE  5026               	movf	(??_normalise_readings+3)^0,w,c
  3084   0010D0  581A               	subwfb	(normalise_readings@red_read+1)^0,w,c
  3085   0010D2  6E14               	movwf	(abs@a+1)^0,c
  3086   0010D4  EC57  F011         	call	_abs	;wreg free
  3087   0010D8  C013  F02B         	movff	?_abs,normalise_readings@difference
  3088   0010DC  C014  F02C         	movff	?_abs+1,normalise_readings@difference+1
  3089                           
  3090                           ;colour_identify.c: 76:         normalised_values[i][RED] = (difference*100) / expected_
      +                          values[i][RED];
  3091   0010E0  C02B  F001         	movff	normalise_readings@difference,___wmul@multiplier
  3092   0010E4  C02C  F002         	movff	normalise_readings@difference+1,___wmul@multiplier+1
  3093   0010E8  0E00               	movlw	0
  3094   0010EA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3095   0010EC  0E64               	movlw	100
  3096   0010EE  6E03               	movwf	___wmul@multiplicand^0,c
  3097   0010F0  ECE8  F011         	call	___wmul	;wreg free
  3098   0010F4  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3099   0010F8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3100   0010FC  502D               	movf	normalise_readings@i^0,w,c
  3101   0010FE  0D12               	mullw	18
  3102   001100  CFF3 F023          	movff	prodl,??_normalise_readings
  3103   001104  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3104   001108  5023               	movf	??_normalise_readings^0,w,c
  3105   00110A  241F               	addwf	normalise_readings@expected_values^0,w,c
  3106   00110C  6ED9               	movwf	fsr2l,c
  3107   00110E  5024               	movf	(??_normalise_readings+1)^0,w,c
  3108   001110  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3109   001112  6EDA               	movwf	fsr2h,c
  3110   001114  CFDE F009          	movff	postinc2,___lwdiv@divisor
  3111   001118  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  3112   00111C  EC10  F010         	call	___lwdiv	;wreg free
  3113   001120  502D               	movf	normalise_readings@i^0,w,c
  3114   001122  0D12               	mullw	18
  3115   001124  CFF3 F025          	movff	prodl,??_normalise_readings+2
  3116   001128  CFF4 F026          	movff	prodh,??_normalise_readings+3
  3117   00112C  5025               	movf	(??_normalise_readings+2)^0,w,c
  3118   00112E  2421               	addwf	normalise_readings@normalised_values^0,w,c
  3119   001130  6ED9               	movwf	fsr2l,c
  3120   001132  5026               	movf	(??_normalise_readings+3)^0,w,c
  3121   001134  2022               	addwfc	(normalise_readings@normalised_values+1)^0,w,c
  3122   001136  6EDA               	movwf	fsr2h,c
  3123   001138  C007  FFDE         	movff	?___lwdiv,postinc2
  3124   00113C  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3125   001140                     
  3126                           ;colour_identify.c: 79:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3127   001140  0E52               	movlw	82
  3128   001142  6E24               	movwf	(??_normalise_readings+1)^0,c
  3129   001144  0E2B               	movlw	43
  3130   001146  6E23               	movwf	??_normalise_readings^0,c
  3131   001148  0E00               	movlw	0
  3132   00114A                     u1447:
  3133   00114A  2EE8               	decfsz	wreg,f,c
  3134   00114C  D7FE               	bra	u1447
  3135   00114E  2E23               	decfsz	??_normalise_readings^0,f,c
  3136   001150  D7FC               	bra	u1447
  3137   001152  2E24               	decfsz	(??_normalise_readings+1)^0,f,c
  3138   001154  D7FA               	bra	u1447
  3139   001156  D000               	nop2	
  3140   001158                     
  3141                           ;colour_identify.c: 82:         difference = abs(green_read - expected_values[i][GREEN])
      +                          ;
  3142   001158  502D               	movf	normalise_readings@i^0,w,c
  3143   00115A  0D12               	mullw	18
  3144   00115C  CFF3 F023          	movff	prodl,??_normalise_readings
  3145   001160  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3146   001164  5023               	movf	??_normalise_readings^0,w,c
  3147   001166  241F               	addwf	normalise_readings@expected_values^0,w,c
  3148   001168  6E25               	movwf	(??_normalise_readings+2)^0,c
  3149   00116A  5024               	movf	(??_normalise_readings+1)^0,w,c
  3150   00116C  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3151   00116E  6E26               	movwf	(??_normalise_readings+3)^0,c
  3152   001170  0E02               	movlw	2
  3153   001172  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3154   001174  6ED9               	movwf	fsr2l,c
  3155   001176  0E00               	movlw	0
  3156   001178  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3157   00117A  6EDA               	movwf	fsr2h,c
  3158   00117C  CFDE F027          	movff	postinc2,??_normalise_readings+4
  3159   001180  CFDD F028          	movff	postdec2,??_normalise_readings+5
  3160   001184  5027               	movf	(??_normalise_readings+4)^0,w,c
  3161   001186  5C1B               	subwf	normalise_readings@green_read^0,w,c
  3162   001188  6E13               	movwf	abs@a^0,c
  3163   00118A  5028               	movf	(??_normalise_readings+5)^0,w,c
  3164   00118C  581C               	subwfb	(normalise_readings@green_read+1)^0,w,c
  3165   00118E  6E14               	movwf	(abs@a+1)^0,c
  3166   001190  EC57  F011         	call	_abs	;wreg free
  3167   001194  C013  F02B         	movff	?_abs,normalise_readings@difference
  3168   001198  C014  F02C         	movff	?_abs+1,normalise_readings@difference+1
  3169   00119C                     
  3170                           ;colour_identify.c: 84:         normalised_values[i][GREEN] = (difference*100) / expecte
      +                          d_values[i][GREEN];
  3171   00119C  C02B  F001         	movff	normalise_readings@difference,___wmul@multiplier
  3172   0011A0  C02C  F002         	movff	normalise_readings@difference+1,___wmul@multiplier+1
  3173   0011A4  0E00               	movlw	0
  3174   0011A6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3175   0011A8  0E64               	movlw	100
  3176   0011AA  6E03               	movwf	___wmul@multiplicand^0,c
  3177   0011AC  ECE8  F011         	call	___wmul	;wreg free
  3178   0011B0  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3179   0011B4  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3180   0011B8  502D               	movf	normalise_readings@i^0,w,c
  3181   0011BA  0D12               	mullw	18
  3182   0011BC  CFF3 F023          	movff	prodl,??_normalise_readings
  3183   0011C0  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3184   0011C4  5023               	movf	??_normalise_readings^0,w,c
  3185   0011C6  241F               	addwf	normalise_readings@expected_values^0,w,c
  3186   0011C8  6E25               	movwf	(??_normalise_readings+2)^0,c
  3187   0011CA  5024               	movf	(??_normalise_readings+1)^0,w,c
  3188   0011CC  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3189   0011CE  6E26               	movwf	(??_normalise_readings+3)^0,c
  3190   0011D0  0E02               	movlw	2
  3191   0011D2  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3192   0011D4  6ED9               	movwf	fsr2l,c
  3193   0011D6  0E00               	movlw	0
  3194   0011D8  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3195   0011DA  6EDA               	movwf	fsr2h,c
  3196   0011DC  CFDE F009          	movff	postinc2,___lwdiv@divisor
  3197   0011E0  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  3198   0011E4  EC10  F010         	call	___lwdiv	;wreg free
  3199   0011E8  502D               	movf	normalise_readings@i^0,w,c
  3200   0011EA  0D12               	mullw	18
  3201   0011EC  CFF3 F027          	movff	prodl,??_normalise_readings+4
  3202   0011F0  CFF4 F028          	movff	prodh,??_normalise_readings+5
  3203   0011F4  5027               	movf	(??_normalise_readings+4)^0,w,c
  3204   0011F6  2421               	addwf	normalise_readings@normalised_values^0,w,c
  3205   0011F8  6E29               	movwf	(??_normalise_readings+6)^0,c
  3206   0011FA  5028               	movf	(??_normalise_readings+5)^0,w,c
  3207   0011FC  2022               	addwfc	(normalise_readings@normalised_values+1)^0,w,c
  3208   0011FE  6E2A               	movwf	(??_normalise_readings+7)^0,c
  3209   001200  0E02               	movlw	2
  3210   001202  2429               	addwf	(??_normalise_readings+6)^0,w,c
  3211   001204  6ED9               	movwf	fsr2l,c
  3212   001206  0E00               	movlw	0
  3213   001208  202A               	addwfc	(??_normalise_readings+7)^0,w,c
  3214   00120A  6EDA               	movwf	fsr2h,c
  3215   00120C  C007  FFDE         	movff	?___lwdiv,postinc2
  3216   001210  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3217   001214                     
  3218                           ;colour_identify.c: 87:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3219   001214  0E52               	movlw	82
  3220   001216  6E24               	movwf	(??_normalise_readings+1)^0,c
  3221   001218  0E2B               	movlw	43
  3222   00121A  6E23               	movwf	??_normalise_readings^0,c
  3223   00121C  0E00               	movlw	0
  3224   00121E                     u1457:
  3225   00121E  2EE8               	decfsz	wreg,f,c
  3226   001220  D7FE               	bra	u1457
  3227   001222  2E23               	decfsz	??_normalise_readings^0,f,c
  3228   001224  D7FC               	bra	u1457
  3229   001226  2E24               	decfsz	(??_normalise_readings+1)^0,f,c
  3230   001228  D7FA               	bra	u1457
  3231   00122A  D000               	nop2	
  3232                           
  3233                           ;colour_identify.c: 90:         difference = abs(blue_read - expected_values[i][BLUE]);
  3234   00122C  502D               	movf	normalise_readings@i^0,w,c
  3235   00122E  0D12               	mullw	18
  3236   001230  CFF3 F023          	movff	prodl,??_normalise_readings
  3237   001234  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3238   001238  5023               	movf	??_normalise_readings^0,w,c
  3239   00123A  241F               	addwf	normalise_readings@expected_values^0,w,c
  3240   00123C  6E25               	movwf	(??_normalise_readings+2)^0,c
  3241   00123E  5024               	movf	(??_normalise_readings+1)^0,w,c
  3242   001240  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3243   001242  6E26               	movwf	(??_normalise_readings+3)^0,c
  3244   001244  0E04               	movlw	4
  3245   001246  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3246   001248  6ED9               	movwf	fsr2l,c
  3247   00124A  0E00               	movlw	0
  3248   00124C  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3249   00124E  6EDA               	movwf	fsr2h,c
  3250   001250  CFDE F027          	movff	postinc2,??_normalise_readings+4
  3251   001254  CFDD F028          	movff	postdec2,??_normalise_readings+5
  3252   001258  5027               	movf	(??_normalise_readings+4)^0,w,c
  3253   00125A  5C1D               	subwf	normalise_readings@blue_read^0,w,c
  3254   00125C  6E13               	movwf	abs@a^0,c
  3255   00125E  5028               	movf	(??_normalise_readings+5)^0,w,c
  3256   001260  581E               	subwfb	(normalise_readings@blue_read+1)^0,w,c
  3257   001262  6E14               	movwf	(abs@a+1)^0,c
  3258   001264  EC57  F011         	call	_abs	;wreg free
  3259   001268  C013  F02B         	movff	?_abs,normalise_readings@difference
  3260   00126C  C014  F02C         	movff	?_abs+1,normalise_readings@difference+1
  3261                           
  3262                           ;colour_identify.c: 92:         normalised_values[i][BLUE] = (difference*100) / expected
      +                          _values[i][BLUE];
  3263   001270  C02B  F001         	movff	normalise_readings@difference,___wmul@multiplier
  3264   001274  C02C  F002         	movff	normalise_readings@difference+1,___wmul@multiplier+1
  3265   001278  0E00               	movlw	0
  3266   00127A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3267   00127C  0E64               	movlw	100
  3268   00127E  6E03               	movwf	___wmul@multiplicand^0,c
  3269   001280  ECE8  F011         	call	___wmul	;wreg free
  3270   001284  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3271   001288  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3272   00128C  502D               	movf	normalise_readings@i^0,w,c
  3273   00128E  0D12               	mullw	18
  3274   001290  CFF3 F023          	movff	prodl,??_normalise_readings
  3275   001294  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3276   001298  5023               	movf	??_normalise_readings^0,w,c
  3277   00129A  241F               	addwf	normalise_readings@expected_values^0,w,c
  3278   00129C  6E25               	movwf	(??_normalise_readings+2)^0,c
  3279   00129E  5024               	movf	(??_normalise_readings+1)^0,w,c
  3280   0012A0  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3281   0012A2  6E26               	movwf	(??_normalise_readings+3)^0,c
  3282   0012A4  0E04               	movlw	4
  3283   0012A6  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3284   0012A8  6ED9               	movwf	fsr2l,c
  3285   0012AA  0E00               	movlw	0
  3286   0012AC  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3287   0012AE  6EDA               	movwf	fsr2h,c
  3288   0012B0  CFDE F009          	movff	postinc2,___lwdiv@divisor
  3289   0012B4  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  3290   0012B8  EC10  F010         	call	___lwdiv	;wreg free
  3291   0012BC  502D               	movf	normalise_readings@i^0,w,c
  3292   0012BE  0D12               	mullw	18
  3293   0012C0  CFF3 F027          	movff	prodl,??_normalise_readings+4
  3294   0012C4  CFF4 F028          	movff	prodh,??_normalise_readings+5
  3295   0012C8  5027               	movf	(??_normalise_readings+4)^0,w,c
  3296   0012CA  2421               	addwf	normalise_readings@normalised_values^0,w,c
  3297   0012CC  6E29               	movwf	(??_normalise_readings+6)^0,c
  3298   0012CE  5028               	movf	(??_normalise_readings+5)^0,w,c
  3299   0012D0  2022               	addwfc	(normalise_readings@normalised_values+1)^0,w,c
  3300   0012D2  6E2A               	movwf	(??_normalise_readings+7)^0,c
  3301   0012D4  0E04               	movlw	4
  3302   0012D6  2429               	addwf	(??_normalise_readings+6)^0,w,c
  3303   0012D8  6ED9               	movwf	fsr2l,c
  3304   0012DA  0E00               	movlw	0
  3305   0012DC  202A               	addwfc	(??_normalise_readings+7)^0,w,c
  3306   0012DE  6EDA               	movwf	fsr2h,c
  3307   0012E0  C007  FFDE         	movff	?___lwdiv,postinc2
  3308   0012E4  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3309   0012E8                     
  3310                           ;colour_identify.c: 95:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3311   0012E8  0E52               	movlw	82
  3312   0012EA  6E24               	movwf	(??_normalise_readings+1)^0,c
  3313   0012EC  0E2B               	movlw	43
  3314   0012EE  6E23               	movwf	??_normalise_readings^0,c
  3315   0012F0  0E00               	movlw	0
  3316   0012F2                     u1467:
  3317   0012F2  2EE8               	decfsz	wreg,f,c
  3318   0012F4  D7FE               	bra	u1467
  3319   0012F6  2E23               	decfsz	??_normalise_readings^0,f,c
  3320   0012F8  D7FC               	bra	u1467
  3321   0012FA  2E24               	decfsz	(??_normalise_readings+1)^0,f,c
  3322   0012FC  D7FA               	bra	u1467
  3323   0012FE  D000               	nop2	
  3324   001300                     
  3325                           ;colour_identify.c: 96:     }
  3326   001300  2A2D               	incf	normalise_readings@i^0,f,c
  3327   001302  0E08               	movlw	8
  3328   001304  642D               	cpfsgt	normalise_readings@i^0,c
  3329   001306  EF87  F009         	goto	u1281
  3330   00130A  EF89  F009         	goto	u1280
  3331   00130E                     u1281:
  3332   00130E  EF54  F008         	goto	l2523
  3333   001312                     u1280:
  3334   001312  0012               	return		;funcret
  3335   001314                     __end_of_normalise_readings:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _abs *****************
  3339 ;; Defined at:
  3340 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  a               2   18[COMRAM] int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2   18[COMRAM] int 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;Total ram usage:        4 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_normalise_readings
  3364 ;;		_dtoa
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text15
  3369   0022AE                     __ptext15:
  3370                           	callstack 0
  3371   0022AE                     _abs:
  3372                           	callstack 26
  3373   0022AE  BE14               	btfsc	(abs@a+1)^0,7,c
  3374   0022B0  EF64  F011         	goto	u780
  3375   0022B4  5014               	movf	(abs@a+1)^0,w,c
  3376   0022B6  E106               	bnz	u781
  3377   0022B8  0413               	decf	abs@a^0,w,c
  3378   0022BA  B0D8               	btfsc	status,0,c
  3379   0022BC  EF62  F011         	goto	u781
  3380   0022C0  EF64  F011         	goto	u780
  3381   0022C4                     u781:
  3382   0022C4  EF72  F011         	goto	l1100
  3383   0022C8                     u780:
  3384   0022C8  C013  F015         	movff	abs@a,??_abs
  3385   0022CC  C014  F016         	movff	abs@a+1,??_abs+1
  3386   0022D0  1E15               	comf	??_abs^0,f,c
  3387   0022D2  1E16               	comf	(??_abs+1)^0,f,c
  3388   0022D4  4A15               	infsnz	??_abs^0,f,c
  3389   0022D6  2A16               	incf	(??_abs+1)^0,f,c
  3390   0022D8  C015  F013         	movff	??_abs,?_abs
  3391   0022DC  C016  F014         	movff	??_abs+1,?_abs+1
  3392   0022E0  EF76  F011         	goto	l1103
  3393   0022E4                     l1100:
  3394   0022E4  C013  F013         	movff	abs@a,?_abs
  3395   0022E8  C014  F014         	movff	abs@a+1,?_abs+1
  3396   0022EC                     l1103:
  3397   0022EC  0012               	return		;funcret
  3398   0022EE                     __end_of_abs:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function ___wmul *****************
  3402 ;; Defined at:
  3403 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  multiplier      2    0[COMRAM] unsigned int 
  3406 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  product         2    4[COMRAM] unsigned int 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  2    0[COMRAM] unsigned int 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0, prodl, prodh
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;Total ram usage:        6 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		_setMotorPWM
  3428 ;;		_normalise_readings
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text16
  3433   0023D0                     __ptext16:
  3434                           	callstack 0
  3435   0023D0                     ___wmul:
  3436                           	callstack 29
  3437   0023D0  5001               	movf	___wmul@multiplier^0,w,c
  3438   0023D2  0203               	mulwf	___wmul@multiplicand^0,c
  3439   0023D4  CFF3 F005          	movff	prodl,___wmul@product
  3440   0023D8  CFF4 F006          	movff	prodh,___wmul@product+1
  3441   0023DC  5001               	movf	___wmul@multiplier^0,w,c
  3442   0023DE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3443   0023E0  50F3               	movf	243,w,c
  3444   0023E2  2606               	addwf	(___wmul@product+1)^0,f,c
  3445   0023E4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3446   0023E6  0203               	mulwf	___wmul@multiplicand^0,c
  3447   0023E8  50F3               	movf	243,w,c
  3448   0023EA  2606               	addwf	(___wmul@product+1)^0,f,c
  3449   0023EC  C005  F001         	movff	___wmul@product,?___wmul
  3450   0023F0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3451   0023F4  0012               	return		;funcret
  3452   0023F6                     __end_of___wmul:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _make_master_closeness *****************
  3456 ;; Defined at:
  3457 ;;		line 100 in file "colour_identify.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  buf             2   13[COMRAM] PTR unsigned char 
  3460 ;;		 -> main@buf(150), 
  3461 ;;  normalised_v    2   15[COMRAM] PTR unsigned int [9]
  3462 ;;		 -> main@normalised_values(54), 
  3463 ;;  master_close    2   17[COMRAM] PTR unsigned int 
  3464 ;;		 -> main@master_closeness(18), 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  i               1   39[COMRAM] enum E14551
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3476 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;Total ram usage:       27 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 1
  3483 ;; This function calls:
  3484 ;;		___lwdiv
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text17
  3491   001CE8                     __ptext17:
  3492                           	callstack 0
  3493   001CE8                     _make_master_closeness:
  3494                           	callstack 29
  3495   001CE8                     
  3496                           ;colour_identify.c: 101:     for(colour i = RED; i<=BLACK; i++){
  3497   001CE8  0E00               	movlw	0
  3498   001CEA  6E28               	movwf	make_master_closeness@i^0,c
  3499   001CEC                     l2545:
  3500                           
  3501                           ;colour_identify.c: 102:         master_closeness[i] = (normalised_values[i][RED] + norm
      +                          alised_values[i][GREEN] + normalised_values[i][BLUE])/3;
  3502   001CEC  5028               	movf	make_master_closeness@i^0,w,c
  3503   001CEE  0D12               	mullw	18
  3504   001CF0  CFF3 F014          	movff	prodl,??_make_master_closeness
  3505   001CF4  CFF4 F015          	movff	prodh,??_make_master_closeness+1
  3506   001CF8  5014               	movf	??_make_master_closeness^0,w,c
  3507   001CFA  2410               	addwf	make_master_closeness@normalised_values^0,w,c
  3508   001CFC  6E16               	movwf	(??_make_master_closeness+2)^0,c
  3509   001CFE  5015               	movf	(??_make_master_closeness+1)^0,w,c
  3510   001D00  2011               	addwfc	(make_master_closeness@normalised_values+1)^0,w,c
  3511   001D02  6E17               	movwf	(??_make_master_closeness+3)^0,c
  3512   001D04  0E04               	movlw	4
  3513   001D06  2416               	addwf	(??_make_master_closeness+2)^0,w,c
  3514   001D08  6ED9               	movwf	fsr2l,c
  3515   001D0A  0E00               	movlw	0
  3516   001D0C  2017               	addwfc	(??_make_master_closeness+3)^0,w,c
  3517   001D0E  6EDA               	movwf	fsr2h,c
  3518   001D10  CFDE F018          	movff	postinc2,??_make_master_closeness+4
  3519   001D14  CFDD F019          	movff	postdec2,??_make_master_closeness+5
  3520   001D18  5028               	movf	make_master_closeness@i^0,w,c
  3521   001D1A  0D12               	mullw	18
  3522   001D1C  CFF3 F01A          	movff	prodl,??_make_master_closeness+6
  3523   001D20  CFF4 F01B          	movff	prodh,??_make_master_closeness+7
  3524   001D24  501A               	movf	(??_make_master_closeness+6)^0,w,c
  3525   001D26  2410               	addwf	make_master_closeness@normalised_values^0,w,c
  3526   001D28  6E1C               	movwf	(??_make_master_closeness+8)^0,c
  3527   001D2A  501B               	movf	(??_make_master_closeness+7)^0,w,c
  3528   001D2C  2011               	addwfc	(make_master_closeness@normalised_values+1)^0,w,c
  3529   001D2E  6E1D               	movwf	(??_make_master_closeness+9)^0,c
  3530   001D30  0E02               	movlw	2
  3531   001D32  241C               	addwf	(??_make_master_closeness+8)^0,w,c
  3532   001D34  6ED9               	movwf	fsr2l,c
  3533   001D36  0E00               	movlw	0
  3534   001D38  201D               	addwfc	(??_make_master_closeness+9)^0,w,c
  3535   001D3A  6EDA               	movwf	fsr2h,c
  3536   001D3C  CFDE F01E          	movff	postinc2,??_make_master_closeness+10
  3537   001D40  CFDD F01F          	movff	postdec2,??_make_master_closeness+11
  3538   001D44  5028               	movf	make_master_closeness@i^0,w,c
  3539   001D46  0D12               	mullw	18
  3540   001D48  CFF3 F020          	movff	prodl,??_make_master_closeness+12
  3541   001D4C  CFF4 F021          	movff	prodh,??_make_master_closeness+13
  3542   001D50  5020               	movf	(??_make_master_closeness+12)^0,w,c
  3543   001D52  2410               	addwf	make_master_closeness@normalised_values^0,w,c
  3544   001D54  6ED9               	movwf	fsr2l,c
  3545   001D56  5021               	movf	(??_make_master_closeness+13)^0,w,c
  3546   001D58  2011               	addwfc	(make_master_closeness@normalised_values+1)^0,w,c
  3547   001D5A  6EDA               	movwf	fsr2h,c
  3548   001D5C  CFDE F022          	movff	postinc2,??_make_master_closeness+14
  3549   001D60  CFDD F023          	movff	postdec2,??_make_master_closeness+15
  3550   001D64  501E               	movf	(??_make_master_closeness+10)^0,w,c
  3551   001D66  2422               	addwf	(??_make_master_closeness+14)^0,w,c
  3552   001D68  6E24               	movwf	(??_make_master_closeness+16)^0,c
  3553   001D6A  501F               	movf	(??_make_master_closeness+11)^0,w,c
  3554   001D6C  2023               	addwfc	(??_make_master_closeness+15)^0,w,c
  3555   001D6E  6E25               	movwf	(??_make_master_closeness+17)^0,c
  3556   001D70  5018               	movf	(??_make_master_closeness+4)^0,w,c
  3557   001D72  2424               	addwf	(??_make_master_closeness+16)^0,w,c
  3558   001D74  6E07               	movwf	___lwdiv@dividend^0,c
  3559   001D76  5019               	movf	(??_make_master_closeness+5)^0,w,c
  3560   001D78  2025               	addwfc	(??_make_master_closeness+17)^0,w,c
  3561   001D7A  6E08               	movwf	(___lwdiv@dividend+1)^0,c
  3562   001D7C  0E00               	movlw	0
  3563   001D7E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3564   001D80  0E03               	movlw	3
  3565   001D82  6E09               	movwf	___lwdiv@divisor^0,c
  3566   001D84  EC10  F010         	call	___lwdiv	;wreg free
  3567   001D88  5028               	movf	make_master_closeness@i^0,w,c
  3568   001D8A  0D02               	mullw	2
  3569   001D8C  CFF3 F026          	movff	prodl,??_make_master_closeness+18
  3570   001D90  CFF4 F027          	movff	prodh,??_make_master_closeness+19
  3571   001D94  5026               	movf	(??_make_master_closeness+18)^0,w,c
  3572   001D96  2412               	addwf	make_master_closeness@master_closeness^0,w,c
  3573   001D98  6ED9               	movwf	fsr2l,c
  3574   001D9A  5027               	movf	(??_make_master_closeness+19)^0,w,c
  3575   001D9C  2013               	addwfc	(make_master_closeness@master_closeness+1)^0,w,c
  3576   001D9E  6EDA               	movwf	fsr2h,c
  3577   001DA0  C007  FFDE         	movff	?___lwdiv,postinc2
  3578   001DA4  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3579   001DA8                     
  3580                           ;colour_identify.c: 104:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3581   001DA8  0E52               	movlw	82
  3582   001DAA  6E15               	movwf	(??_make_master_closeness+1)^0,c
  3583   001DAC  0E2B               	movlw	43
  3584   001DAE  6E14               	movwf	??_make_master_closeness^0,c
  3585   001DB0  0E00               	movlw	0
  3586   001DB2                     u1477:
  3587   001DB2  2EE8               	decfsz	wreg,f,c
  3588   001DB4  D7FE               	bra	u1477
  3589   001DB6  2E14               	decfsz	??_make_master_closeness^0,f,c
  3590   001DB8  D7FC               	bra	u1477
  3591   001DBA  2E15               	decfsz	(??_make_master_closeness+1)^0,f,c
  3592   001DBC  D7FA               	bra	u1477
  3593   001DBE  D000               	nop2	
  3594   001DC0                     
  3595                           ;colour_identify.c: 106:     }
  3596   001DC0  2A28               	incf	make_master_closeness@i^0,f,c
  3597   001DC2  0E08               	movlw	8
  3598   001DC4  6428               	cpfsgt	make_master_closeness@i^0,c
  3599   001DC6  EFE7  F00E         	goto	u1291
  3600   001DCA  EFE9  F00E         	goto	u1290
  3601   001DCE                     u1291:
  3602   001DCE  EF76  F00E         	goto	l2545
  3603   001DD2                     u1290:
  3604   001DD2  0012               	return		;funcret
  3605   001DD4                     __end_of_make_master_closeness:
  3606                           	callstack 0
  3607                           
  3608 ;; *************** function _initUSART4 *****************
  3609 ;; Defined at:
  3610 ;;		line 6 in file "serial.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text18
  3638   002418                     __ptext18:
  3639                           	callstack 0
  3640   002418                     _initUSART4:
  3641                           	callstack 30
  3642   002418                     
  3643                           ;serial.c: 10:     RC0PPS = 0x12;
  3644   002418  0E12               	movlw	18
  3645   00241A  010E               	movlb	14	; () banked
  3646   00241C  6F62               	movwf	98,b	;volatile
  3647                           
  3648                           ;serial.c: 11:     RX4PPS = 0x11;
  3649   00241E  0E11               	movlw	17
  3650   002420  6F15               	movwf	21,b	;volatile
  3651   002422                     
  3652                           ; BSR set to: 14
  3653                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3654   002422  8283               	bsf	131,1,c	;volatile
  3655   002424                     
  3656                           ; BSR set to: 14
  3657                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3658   002424  97E9               	bcf	233,3,b	;volatile
  3659   002426                     
  3660                           ; BSR set to: 14
  3661                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3662   002426  95E8               	bcf	232,2,b	;volatile
  3663                           
  3664                           ;serial.c: 17:     SP4BRGL = 51;
  3665   002428  0E33               	movlw	51
  3666   00242A  6FE5               	movwf	229,b	;volatile
  3667                           
  3668                           ;serial.c: 18:     SP4BRGH = 0;
  3669   00242C  0E00               	movlw	0
  3670   00242E  6FE6               	movwf	230,b	;volatile
  3671   002430                     
  3672                           ; BSR set to: 14
  3673                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3674   002430  89E7               	bsf	231,4,b	;volatile
  3675   002432                     
  3676                           ; BSR set to: 14
  3677                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3678   002432  8BE8               	bsf	232,5,b	;volatile
  3679   002434                     
  3680                           ; BSR set to: 14
  3681                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3682   002434  8FE7               	bsf	231,7,b	;volatile
  3683   002436                     
  3684                           ; BSR set to: 14
  3685   002436  0012               	return		;funcret
  3686   002438                     __end_of_initUSART4:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _initDCmotorsPWM *****************
  3690 ;; Defined at:
  3691 ;;		line 6 in file "dc_motor.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, status,2
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;Total ram usage:        0 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_main
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text19
  3719   001E9E                     __ptext19:
  3720                           	callstack 0
  3721   001E9E                     _initDCmotorsPWM:
  3722                           	callstack 30
  3723   001E9E                     
  3724                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3725   001E9E  9485               	bcf	133,2,c	;volatile
  3726                           
  3727                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3728   001EA0  9885               	bcf	133,4,c	;volatile
  3729                           
  3730                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3731   001EA2  9E83               	bcf	131,7,c	;volatile
  3732                           
  3733                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3734   001EA4  9C87               	bcf	135,6,c	;volatile
  3735   001EA6                     
  3736                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3737   001EA6  0E05               	movlw	5
  3738   001EA8  010E               	movlb	14	; () banked
  3739   001EAA  6F74               	movwf	116,b	;volatile
  3740                           
  3741                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3742   001EAC  0E06               	movlw	6
  3743   001EAE  6F76               	movwf	118,b	;volatile
  3744                           
  3745                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3746   001EB0  0E07               	movlw	7
  3747   001EB2  6F69               	movwf	105,b	;volatile
  3748                           
  3749                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3750   001EB4  0E08               	movlw	8
  3751   001EB6  6F88               	movwf	136,b	;volatile
  3752                           
  3753                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3754   001EB8  50BD               	movf	189,w,c	;volatile
  3755   001EBA  0B8F               	andlw	-113
  3756   001EBC  0940               	iorlw	64
  3757   001EBE  6EBD               	movwf	189,c	;volatile
  3758                           
  3759                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3760   001EC0  0EE0               	movlw	-32
  3761   001EC2  16BE               	andwf	190,f,c	;volatile
  3762                           
  3763                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3764   001EC4  50BF               	movf	191,w,c	;volatile
  3765   001EC6  0BF0               	andlw	-16
  3766   001EC8  0901               	iorlw	1
  3767   001ECA  6EBF               	movwf	191,c	;volatile
  3768                           
  3769                           ;dc_motor.c: 26:     T2PR=99;
  3770   001ECC  0E63               	movlw	99
  3771   001ECE  6EBC               	movwf	188,c	;volatile
  3772   001ED0                     
  3773                           ; BSR set to: 14
  3774                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3775   001ED0  8EBD               	bsf	189,7,c	;volatile
  3776                           
  3777                           ;dc_motor.c: 31:     CCPR1H=0;
  3778   001ED2  0E00               	movlw	0
  3779   001ED4  6EAA               	movwf	170,c	;volatile
  3780                           
  3781                           ;dc_motor.c: 32:     CCPR2H=0;
  3782   001ED6  0E00               	movlw	0
  3783   001ED8  6EA6               	movwf	166,c	;volatile
  3784                           
  3785                           ;dc_motor.c: 33:     CCPR3H=0;
  3786   001EDA  0E00               	movlw	0
  3787   001EDC  010F               	movlb	15	; () banked
  3788   001EDE  6F25               	movwf	37,b	;volatile
  3789                           
  3790                           ;dc_motor.c: 34:     CCPR4H=0;
  3791   001EE0  0E00               	movlw	0
  3792   001EE2  6F21               	movwf	33,b	;volatile
  3793                           
  3794                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3795   001EE4  0EFC               	movlw	-4
  3796   001EE6  16AD               	andwf	173,f,c	;volatile
  3797                           
  3798                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3799   001EE8  0EF3               	movlw	-13
  3800   001EEA  16AD               	andwf	173,f,c	;volatile
  3801                           
  3802                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3803   001EEC  0ECF               	movlw	-49
  3804   001EEE  16AD               	andwf	173,f,c	;volatile
  3805                           
  3806                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3807   001EF0  0E3F               	movlw	-193
  3808   001EF2  16AD               	andwf	173,f,c	;volatile
  3809   001EF4                     
  3810                           ; BSR set to: 15
  3811                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3812   001EF4  88AB               	bsf	171,4,c	;volatile
  3813                           
  3814                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3815   001EF6  50AB               	movf	171,w,c	;volatile
  3816   001EF8  0BF0               	andlw	-16
  3817   001EFA  090C               	iorlw	12
  3818   001EFC  6EAB               	movwf	171,c	;volatile
  3819   001EFE                     
  3820                           ; BSR set to: 15
  3821                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3822   001EFE  8EAB               	bsf	171,7,c	;volatile
  3823   001F00                     
  3824                           ; BSR set to: 15
  3825                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3826   001F00  88A7               	bsf	167,4,c	;volatile
  3827                           
  3828                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3829   001F02  50A7               	movf	167,w,c	;volatile
  3830   001F04  0BF0               	andlw	-16
  3831   001F06  090C               	iorlw	12
  3832   001F08  6EA7               	movwf	167,c	;volatile
  3833   001F0A                     
  3834                           ; BSR set to: 15
  3835                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3836   001F0A  8EA7               	bsf	167,7,c	;volatile
  3837   001F0C                     
  3838                           ; BSR set to: 15
  3839                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3840   001F0C  8926               	bsf	38,4,b	;volatile
  3841                           
  3842                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3843   001F0E  5126               	movf	38,w,b	;volatile
  3844   001F10  0BF0               	andlw	-16
  3845   001F12  090C               	iorlw	12
  3846   001F14  6F26               	movwf	38,b	;volatile
  3847   001F16                     
  3848                           ; BSR set to: 15
  3849                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3850   001F16  8F26               	bsf	38,7,b	;volatile
  3851   001F18                     
  3852                           ; BSR set to: 15
  3853                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3854   001F18  8922               	bsf	34,4,b	;volatile
  3855                           
  3856                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3857   001F1A  5122               	movf	34,w,b	;volatile
  3858   001F1C  0BF0               	andlw	-16
  3859   001F1E  090C               	iorlw	12
  3860   001F20  6F22               	movwf	34,b	;volatile
  3861   001F22                     
  3862                           ; BSR set to: 15
  3863                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3864   001F22  8F22               	bsf	34,7,b	;volatile
  3865   001F24                     
  3866                           ; BSR set to: 15
  3867   001F24  0012               	return		;funcret
  3868   001F26                     __end_of_initDCmotorsPWM:
  3869                           	callstack 0
  3870                           
  3871 ;; *************** function _determine_card *****************
  3872 ;; Defined at:
  3873 ;;		line 109 in file "colour_identify.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  master_close    2    0[COMRAM] PTR unsigned int 
  3876 ;;		 -> main@master_closeness(18), 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  i               1    9[COMRAM] enum E14551
  3879 ;;  current_smal    2    6[COMRAM] unsigned int 
  3880 ;;  predicted_co    1    8[COMRAM] enum E14551
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      enum E14575
  3883 ;; Registers used:
  3884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;Total ram usage:       10 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text20
  3904   001F26                     __ptext20:
  3905                           	callstack 0
  3906   001F26                     _determine_card:
  3907                           	callstack 30
  3908   001F26                     
  3909                           ;colour_identify.c: 110:     colour predicted_colour = RED;
  3910   001F26  0E00               	movlw	0
  3911   001F28  6E09               	movwf	determine_card@predicted_colour^0,c
  3912   001F2A                     
  3913                           ;colour_identify.c: 111:     unsigned int current_smallest = master_closeness[RED];
  3914   001F2A  C001  FFD9         	movff	determine_card@master_closeness,fsr2l
  3915   001F2E  C002  FFDA         	movff	determine_card@master_closeness+1,fsr2h
  3916   001F32  CFDE F007          	movff	postinc2,determine_card@current_smallest
  3917   001F36  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  3918   001F3A                     
  3919                           ;colour_identify.c: 112:     for(colour i = GREEN; i<=BLACK; i++){
  3920   001F3A  0E01               	movlw	1
  3921   001F3C  6E0A               	movwf	determine_card@i^0,c
  3922   001F3E                     l2563:
  3923                           
  3924                           ;colour_identify.c: 113:         if(master_closeness[i] < current_smallest){
  3925   001F3E  500A               	movf	determine_card@i^0,w,c
  3926   001F40  0D02               	mullw	2
  3927   001F42  CFF3 F003          	movff	prodl,??_determine_card
  3928   001F46  CFF4 F004          	movff	prodh,??_determine_card+1
  3929   001F4A  5003               	movf	??_determine_card^0,w,c
  3930   001F4C  2401               	addwf	determine_card@master_closeness^0,w,c
  3931   001F4E  6ED9               	movwf	fsr2l,c
  3932   001F50  5004               	movf	(??_determine_card+1)^0,w,c
  3933   001F52  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  3934   001F54  6EDA               	movwf	fsr2h,c
  3935   001F56  5007               	movf	determine_card@current_smallest^0,w,c
  3936   001F58  5CDE               	subwf	postinc2,w,c
  3937   001F5A  5008               	movf	(determine_card@current_smallest+1)^0,w,c
  3938   001F5C  58DE               	subwfb	postinc2,w,c
  3939   001F5E  B0D8               	btfsc	status,0,c
  3940   001F60  EFB4  F00F         	goto	u1301
  3941   001F64  EFB6  F00F         	goto	u1300
  3942   001F68                     u1301:
  3943   001F68  EFC8  F00F         	goto	l2569
  3944   001F6C                     u1300:
  3945   001F6C                     
  3946                           ;colour_identify.c: 114:             current_smallest = master_closeness[i];
  3947   001F6C  500A               	movf	determine_card@i^0,w,c
  3948   001F6E  0D02               	mullw	2
  3949   001F70  CFF3 F003          	movff	prodl,??_determine_card
  3950   001F74  CFF4 F004          	movff	prodh,??_determine_card+1
  3951   001F78  5003               	movf	??_determine_card^0,w,c
  3952   001F7A  2401               	addwf	determine_card@master_closeness^0,w,c
  3953   001F7C  6ED9               	movwf	fsr2l,c
  3954   001F7E  5004               	movf	(??_determine_card+1)^0,w,c
  3955   001F80  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  3956   001F82  6EDA               	movwf	fsr2h,c
  3957   001F84  CFDE F007          	movff	postinc2,determine_card@current_smallest
  3958   001F88  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  3959   001F8C                     
  3960                           ;colour_identify.c: 115:             predicted_colour = i;
  3961   001F8C  C00A  F009         	movff	determine_card@i,determine_card@predicted_colour
  3962   001F90                     l2569:
  3963                           
  3964                           ;colour_identify.c: 117:     }
  3965   001F90  2A0A               	incf	determine_card@i^0,f,c
  3966   001F92  0E08               	movlw	8
  3967   001F94  640A               	cpfsgt	determine_card@i^0,c
  3968   001F96  EFCF  F00F         	goto	u1311
  3969   001F9A  EFD1  F00F         	goto	u1310
  3970   001F9E                     u1311:
  3971   001F9E  EF9F  F00F         	goto	l2563
  3972   001FA2                     u1310:
  3973   001FA2                     
  3974                           ;colour_identify.c: 118:     return predicted_colour;
  3975   001FA2  5009               	movf	determine_card@predicted_colour^0,w,c
  3976   001FA4  0012               	return		;funcret
  3977   001FA6                     __end_of_determine_card:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function _color_click_init *****************
  3981 ;; Defined at:
  3982 ;;		line 5 in file "color.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;Total ram usage:        1 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 3
  4003 ;; This function calls:
  4004 ;;		_I2C_2_Master_Init
  4005 ;;		_color_writetoaddr
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text21
  4012   0022EE                     __ptext21:
  4013                           	callstack 0
  4014   0022EE                     _color_click_init:
  4015                           	callstack 27
  4016   0022EE                     
  4017                           ;color.c: 8:     I2C_2_Master_Init();
  4018   0022EE  ECBF  F011         	call	_I2C_2_Master_Init	;wreg free
  4019   0022F2                     
  4020                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  4021   0022F2  0E01               	movlw	1
  4022   0022F4  6E03               	movwf	color_writetoaddr@value^0,c
  4023   0022F6  0E00               	movlw	0
  4024   0022F8  EC1C  F012         	call	_color_writetoaddr
  4025   0022FC                     
  4026                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4027   0022FC  0E3F               	movlw	63
  4028   0022FE  6E05               	movwf	??_color_click_init^0,c
  4029   002300  0E55               	movlw	85
  4030   002302                     u1487:
  4031   002302  2EE8               	decfsz	wreg,f,c
  4032   002304  D7FE               	bra	u1487
  4033   002306  2E05               	decfsz	??_color_click_init^0,f,c
  4034   002308  D7FC               	bra	u1487
  4035   00230A  F000               	nop	
  4036   00230C                     
  4037                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  4038   00230C  0E03               	movlw	3
  4039   00230E  6E03               	movwf	color_writetoaddr@value^0,c
  4040   002310  0E00               	movlw	0
  4041   002312  EC1C  F012         	call	_color_writetoaddr
  4042   002316                     
  4043                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  4044   002316  0ED5               	movlw	213
  4045   002318  6E03               	movwf	color_writetoaddr@value^0,c
  4046   00231A  0E01               	movlw	1
  4047   00231C  EC1C  F012         	call	_color_writetoaddr
  4048   002320  0012               	return		;funcret
  4049   002322                     __end_of_color_click_init:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _color_writetoaddr *****************
  4053 ;; Defined at:
  4054 ;;		line 21 in file "color.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  address         1    wreg     unsigned char 
  4057 ;;  value           1    2[COMRAM] unsigned char 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  address         1    3[COMRAM] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4069 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;Total ram usage:        2 bytes
  4074 ;; Hardware stack levels used: 1
  4075 ;; Hardware stack levels required when called: 2
  4076 ;; This function calls:
  4077 ;;		_I2C_2_Master_Start
  4078 ;;		_I2C_2_Master_Stop
  4079 ;;		_I2C_2_Master_Write
  4080 ;; This function is called by:
  4081 ;;		_color_click_init
  4082 ;;		_enable_color_interrupt
  4083 ;;		_set_interrupt_threshold
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text22
  4088   002438                     __ptext22:
  4089                           	callstack 0
  4090   002438                     _color_writetoaddr:
  4091                           	callstack 27
  4092                           
  4093                           ;incstack = 0
  4094                           ;color_writetoaddr@address stored from wreg
  4095   002438  6E04               	movwf	color_writetoaddr@address^0,c
  4096   00243A                     
  4097                           ;color.c: 22:     I2C_2_Master_Start();
  4098   00243A  EC43  F012         	call	_I2C_2_Master_Start	;wreg free
  4099                           
  4100                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4101   00243E  0E52               	movlw	82
  4102   002440  EC38  F012         	call	_I2C_2_Master_Write
  4103                           
  4104                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4105   002444  5004               	movf	color_writetoaddr@address^0,w,c
  4106   002446  0980               	iorlw	128
  4107   002448  EC38  F012         	call	_I2C_2_Master_Write
  4108                           
  4109                           ;color.c: 25:     I2C_2_Master_Write(value);
  4110   00244C  5003               	movf	color_writetoaddr@value^0,w,c
  4111   00244E  EC38  F012         	call	_I2C_2_Master_Write
  4112                           
  4113                           ;color.c: 26:     I2C_2_Master_Stop();
  4114   002452  EC3E  F012         	call	_I2C_2_Master_Stop	;wreg free
  4115   002456  0012               	return		;funcret
  4116   002458                     __end_of_color_writetoaddr:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function _I2C_2_Master_Init *****************
  4120 ;; Defined at:
  4121 ;;		line 4 in file "i2c.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_color_click_init
  4145 ;;		_main
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text23
  4150   00237E                     __ptext23:
  4151                           	callstack 0
  4152   00237E                     _I2C_2_Master_Init:
  4153                           	callstack 29
  4154   00237E                     
  4155                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4156   00237E  010E               	movlb	14	; () banked
  4157   002380  51D9               	movf	217,w,b	;volatile
  4158   002382  0BF0               	andlw	-16
  4159   002384  0908               	iorlw	8
  4160   002386  6FD9               	movwf	217,b	;volatile
  4161   002388                     
  4162                           ; BSR set to: 14
  4163                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4164   002388  8BD9               	bsf	217,5,b	;volatile
  4165                           
  4166                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4167   00238A  0E9F               	movlw	159
  4168   00238C  6FD6               	movwf	214,b	;volatile
  4169   00238E                     
  4170                           ; BSR set to: 14
  4171                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4172   00238E  8A84               	bsf	132,5,c	;volatile
  4173   002390                     
  4174                           ; BSR set to: 14
  4175                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4176   002390  8C84               	bsf	132,6,c	;volatile
  4177   002392                     
  4178                           ; BSR set to: 14
  4179                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4180   002392  9BA7               	bcf	167,5,b	;volatile
  4181   002394                     
  4182                           ; BSR set to: 14
  4183                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4184   002394  9DA7               	bcf	167,6,b	;volatile
  4185                           
  4186                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4187   002396  0E1D               	movlw	29
  4188   002398  6F1D               	movwf	29,b	;volatile
  4189                           
  4190                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4191   00239A  0E1E               	movlw	30
  4192   00239C  6F1C               	movwf	28,b	;volatile
  4193                           
  4194                           ;i2c.c: 18:   RD5PPS=0x1C;
  4195   00239E  0E1C               	movlw	28
  4196   0023A0  6F6F               	movwf	111,b	;volatile
  4197                           
  4198                           ;i2c.c: 19:   RD6PPS=0x1B;
  4199   0023A2  0E1B               	movlw	27
  4200   0023A4  6F70               	movwf	112,b	;volatile
  4201   0023A6                     
  4202                           ; BSR set to: 14
  4203   0023A6  0012               	return		;funcret
  4204   0023A8                     __end_of_I2C_2_Master_Init:
  4205                           	callstack 0
  4206                           
  4207 ;; *************** function _collect_avg_readings *****************
  4208 ;; Defined at:
  4209 ;;		line 25 in file "colour_identify.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  red_read        2   13[COMRAM] PTR unsigned int 
  4212 ;;		 -> main@red_read(2), 
  4213 ;;  green_read      2   15[COMRAM] PTR unsigned int 
  4214 ;;		 -> main@green_read(2), 
  4215 ;;  blue_read       2   17[COMRAM] PTR unsigned int 
  4216 ;;		 -> main@blue_read(2), 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  i               2   27[COMRAM] int 
  4219 ;;  i               2   25[COMRAM] int 
  4220 ;;  i               2   23[COMRAM] int 
  4221 ;;  i               2   21[COMRAM] int 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4231 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;Total ram usage:       16 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 3
  4238 ;; This function calls:
  4239 ;;		___lwdiv
  4240 ;;		_color_read_Blue
  4241 ;;		_color_read_Green
  4242 ;;		_color_read_Red
  4243 ;; This function is called by:
  4244 ;;		_main
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text24
  4249   00154C                     __ptext24:
  4250                           	callstack 0
  4251   00154C                     _collect_avg_readings:
  4252                           	callstack 27
  4253   00154C                     
  4254                           ;colour_identify.c: 25: void collect_avg_readings( unsigned int *red_read, unsigned int 
      +                          *green_read, unsigned int *blue_read);colour_identify.c: 26: {;colour_identify.c: 29:   
      +                            for (int i = 0; i <= 500; i++){
  4255   00154C  0E00               	movlw	0
  4256   00154E  6E17               	movwf	(collect_avg_readings@i+1)^0,c
  4257   001550  0E00               	movlw	0
  4258   001552  6E16               	movwf	collect_avg_readings@i^0,c
  4259   001554                     l2443:
  4260                           
  4261                           ;colour_identify.c: 30:         *red_read = color_read_Red();
  4262   001554  EC9C  F010         	call	_color_read_Red	;wreg free
  4263   001558  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4264   00155C  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4265   001560  C005  FFDE         	movff	?_color_read_Red,postinc2
  4266   001564  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4267                           
  4268                           ;colour_identify.c: 31:         *green_read = color_read_Green();
  4269   001568  ECC4  F010         	call	_color_read_Green	;wreg free
  4270   00156C  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4271   001570  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4272   001574  C005  FFDE         	movff	?_color_read_Green,postinc2
  4273   001578  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4274                           
  4275                           ;colour_identify.c: 32:         *blue_read = color_read_Blue();
  4276   00157C  ECEC  F010         	call	_color_read_Blue	;wreg free
  4277   001580  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4278   001584  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4279   001588  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4280   00158C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4281   001590                     
  4282                           ;colour_identify.c: 33:     }
  4283   001590  4A16               	infsnz	collect_avg_readings@i^0,f,c
  4284   001592  2A17               	incf	(collect_avg_readings@i+1)^0,f,c
  4285   001594  BE17               	btfsc	(collect_avg_readings@i+1)^0,7,c
  4286   001596  EFD6  F00A         	goto	u1231
  4287   00159A  0EF5               	movlw	245
  4288   00159C  5C16               	subwf	collect_avg_readings@i^0,w,c
  4289   00159E  0E01               	movlw	1
  4290   0015A0  5817               	subwfb	(collect_avg_readings@i+1)^0,w,c
  4291   0015A2  A0D8               	btfss	status,0,c
  4292   0015A4  EFD6  F00A         	goto	u1231
  4293   0015A8  EFD8  F00A         	goto	u1230
  4294   0015AC                     u1231:
  4295   0015AC  EFAA  F00A         	goto	l2443
  4296   0015B0                     u1230:
  4297   0015B0                     
  4298                           ;colour_identify.c: 35:     for(int i = 0; i <= 2; i++){
  4299   0015B0  0E00               	movlw	0
  4300   0015B2  6E19               	movwf	(collect_avg_readings@i_1551+1)^0,c
  4301   0015B4  0E00               	movlw	0
  4302   0015B6  6E18               	movwf	collect_avg_readings@i_1551^0,c
  4303   0015B8                     l2455:
  4304                           
  4305                           ;colour_identify.c: 36:         *red_read += color_read_Red();
  4306   0015B8  EC9C  F010         	call	_color_read_Red	;wreg free
  4307   0015BC  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4308   0015C0  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4309   0015C4  5005               	movf	?_color_read_Red^0,w,c
  4310   0015C6  26DE               	addwf	postinc2,f,c
  4311   0015C8  5006               	movf	(?_color_read_Red+1)^0,w,c
  4312   0015CA  22DD               	addwfc	postdec2,f,c
  4313   0015CC                     
  4314                           ;colour_identify.c: 37:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4315   0015CC  0E11               	movlw	17
  4316   0015CE  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4317   0015D0  0E3C               	movlw	60
  4318   0015D2  6E14               	movwf	??_collect_avg_readings^0,c
  4319   0015D4  0ECB               	movlw	203
  4320   0015D6                     u1497:
  4321   0015D6  2EE8               	decfsz	wreg,f,c
  4322   0015D8  D7FE               	bra	u1497
  4323   0015DA  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4324   0015DC  D7FC               	bra	u1497
  4325   0015DE  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4326   0015E0  D7FA               	bra	u1497
  4327   0015E2  F000               	nop	
  4328   0015E4                     
  4329                           ;colour_identify.c: 38:     }
  4330   0015E4  4A18               	infsnz	collect_avg_readings@i_1551^0,f,c
  4331   0015E6  2A19               	incf	(collect_avg_readings@i_1551+1)^0,f,c
  4332   0015E8  BE19               	btfsc	(collect_avg_readings@i_1551+1)^0,7,c
  4333   0015EA  EF00  F00B         	goto	u1241
  4334   0015EE  5019               	movf	(collect_avg_readings@i_1551+1)^0,w,c
  4335   0015F0  E109               	bnz	u1240
  4336   0015F2  0E03               	movlw	3
  4337   0015F4  5C18               	subwf	collect_avg_readings@i_1551^0,w,c
  4338   0015F6  A0D8               	btfss	status,0,c
  4339   0015F8  EF00  F00B         	goto	u1241
  4340   0015FC  EF02  F00B         	goto	u1240
  4341   001600                     u1241:
  4342   001600  EFDC  F00A         	goto	l2455
  4343   001604                     u1240:
  4344   001604                     
  4345                           ;colour_identify.c: 39:     *red_read = *red_read/3;
  4346   001604  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4347   001608  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4348   00160C  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4349   001610  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4350   001614  0E00               	movlw	0
  4351   001616  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4352   001618  0E03               	movlw	3
  4353   00161A  6E09               	movwf	___lwdiv@divisor^0,c
  4354   00161C  EC10  F010         	call	___lwdiv	;wreg free
  4355   001620  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4356   001624  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4357   001628  C007  FFDE         	movff	?___lwdiv,postinc2
  4358   00162C  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4359   001630                     
  4360                           ;colour_identify.c: 44:     for(int i = 0; i <= 2; i++){
  4361   001630  0E00               	movlw	0
  4362   001632  6E1B               	movwf	(collect_avg_readings@i_1552+1)^0,c
  4363   001634  0E00               	movlw	0
  4364   001636  6E1A               	movwf	collect_avg_readings@i_1552^0,c
  4365   001638                     l2471:
  4366                           
  4367                           ;colour_identify.c: 45:         *green_read += color_read_Green();
  4368   001638  ECC4  F010         	call	_color_read_Green	;wreg free
  4369   00163C  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4370   001640  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4371   001644  5005               	movf	?_color_read_Green^0,w,c
  4372   001646  26DE               	addwf	postinc2,f,c
  4373   001648  5006               	movf	(?_color_read_Green+1)^0,w,c
  4374   00164A  22DD               	addwfc	postdec2,f,c
  4375   00164C                     
  4376                           ;colour_identify.c: 46:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4377   00164C  0E11               	movlw	17
  4378   00164E  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4379   001650  0E3C               	movlw	60
  4380   001652  6E14               	movwf	??_collect_avg_readings^0,c
  4381   001654  0ECB               	movlw	203
  4382   001656                     u1507:
  4383   001656  2EE8               	decfsz	wreg,f,c
  4384   001658  D7FE               	bra	u1507
  4385   00165A  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4386   00165C  D7FC               	bra	u1507
  4387   00165E  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4388   001660  D7FA               	bra	u1507
  4389   001662  F000               	nop	
  4390   001664                     
  4391                           ;colour_identify.c: 47:     }
  4392   001664  4A1A               	infsnz	collect_avg_readings@i_1552^0,f,c
  4393   001666  2A1B               	incf	(collect_avg_readings@i_1552+1)^0,f,c
  4394   001668  BE1B               	btfsc	(collect_avg_readings@i_1552+1)^0,7,c
  4395   00166A  EF40  F00B         	goto	u1251
  4396   00166E  501B               	movf	(collect_avg_readings@i_1552+1)^0,w,c
  4397   001670  E109               	bnz	u1250
  4398   001672  0E03               	movlw	3
  4399   001674  5C1A               	subwf	collect_avg_readings@i_1552^0,w,c
  4400   001676  A0D8               	btfss	status,0,c
  4401   001678  EF40  F00B         	goto	u1251
  4402   00167C  EF42  F00B         	goto	u1250
  4403   001680                     u1251:
  4404   001680  EF1C  F00B         	goto	l2471
  4405   001684                     u1250:
  4406   001684                     
  4407                           ;colour_identify.c: 48:     *green_read = *green_read/3;
  4408   001684  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4409   001688  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4410   00168C  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4411   001690  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4412   001694  0E00               	movlw	0
  4413   001696  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4414   001698  0E03               	movlw	3
  4415   00169A  6E09               	movwf	___lwdiv@divisor^0,c
  4416   00169C  EC10  F010         	call	___lwdiv	;wreg free
  4417   0016A0  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4418   0016A4  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4419   0016A8  C007  FFDE         	movff	?___lwdiv,postinc2
  4420   0016AC  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4421   0016B0                     
  4422                           ;colour_identify.c: 53:     for(int i = 0; i <= 2; i++){
  4423   0016B0  0E00               	movlw	0
  4424   0016B2  6E1D               	movwf	(collect_avg_readings@i_1553+1)^0,c
  4425   0016B4  0E00               	movlw	0
  4426   0016B6  6E1C               	movwf	collect_avg_readings@i_1553^0,c
  4427   0016B8                     l2487:
  4428                           
  4429                           ;colour_identify.c: 54:         *blue_read += color_read_Blue();
  4430   0016B8  ECEC  F010         	call	_color_read_Blue	;wreg free
  4431   0016BC  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4432   0016C0  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4433   0016C4  5005               	movf	?_color_read_Blue^0,w,c
  4434   0016C6  26DE               	addwf	postinc2,f,c
  4435   0016C8  5006               	movf	(?_color_read_Blue+1)^0,w,c
  4436   0016CA  22DD               	addwfc	postdec2,f,c
  4437   0016CC                     
  4438                           ;colour_identify.c: 55:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4439   0016CC  0E11               	movlw	17
  4440   0016CE  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4441   0016D0  0E3C               	movlw	60
  4442   0016D2  6E14               	movwf	??_collect_avg_readings^0,c
  4443   0016D4  0ECB               	movlw	203
  4444   0016D6                     u1517:
  4445   0016D6  2EE8               	decfsz	wreg,f,c
  4446   0016D8  D7FE               	bra	u1517
  4447   0016DA  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4448   0016DC  D7FC               	bra	u1517
  4449   0016DE  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4450   0016E0  D7FA               	bra	u1517
  4451   0016E2  F000               	nop	
  4452   0016E4                     
  4453                           ;colour_identify.c: 56:     }
  4454   0016E4  4A1C               	infsnz	collect_avg_readings@i_1553^0,f,c
  4455   0016E6  2A1D               	incf	(collect_avg_readings@i_1553+1)^0,f,c
  4456   0016E8  BE1D               	btfsc	(collect_avg_readings@i_1553+1)^0,7,c
  4457   0016EA  EF80  F00B         	goto	u1261
  4458   0016EE  501D               	movf	(collect_avg_readings@i_1553+1)^0,w,c
  4459   0016F0  E109               	bnz	u1260
  4460   0016F2  0E03               	movlw	3
  4461   0016F4  5C1C               	subwf	collect_avg_readings@i_1553^0,w,c
  4462   0016F6  A0D8               	btfss	status,0,c
  4463   0016F8  EF80  F00B         	goto	u1261
  4464   0016FC  EF82  F00B         	goto	u1260
  4465   001700                     u1261:
  4466   001700  EF5C  F00B         	goto	l2487
  4467   001704                     u1260:
  4468   001704                     
  4469                           ;colour_identify.c: 57:     *blue_read = *blue_read/3;
  4470   001704  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4471   001708  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4472   00170C  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4473   001710  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4474   001714  0E00               	movlw	0
  4475   001716  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4476   001718  0E03               	movlw	3
  4477   00171A  6E09               	movwf	___lwdiv@divisor^0,c
  4478   00171C  EC10  F010         	call	___lwdiv	;wreg free
  4479   001720  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4480   001724  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4481   001728  C007  FFDE         	movff	?___lwdiv,postinc2
  4482   00172C  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4483   001730  0012               	return		;funcret
  4484   001732                     __end_of_collect_avg_readings:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _color_read_Red *****************
  4488 ;; Defined at:
  4489 ;;		line 29 in file "color.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  tmp             2    9[COMRAM] unsigned int 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  2    4[COMRAM] unsigned int 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4506 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4507 ;;Total ram usage:        7 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 2
  4510 ;; This function calls:
  4511 ;;		_I2C_2_Master_Read
  4512 ;;		_I2C_2_Master_RepStart
  4513 ;;		_I2C_2_Master_Start
  4514 ;;		_I2C_2_Master_Stop
  4515 ;;		_I2C_2_Master_Write
  4516 ;; This function is called by:
  4517 ;;		_collect_avg_readings
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text25
  4522   002138                     __ptext25:
  4523                           	callstack 0
  4524   002138                     _color_read_Red:
  4525                           	callstack 27
  4526   002138                     
  4527                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  4528   002138  EC43  F012         	call	_I2C_2_Master_Start	;wreg free
  4529                           
  4530                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  4531   00213C  0E52               	movlw	82
  4532   00213E  EC38  F012         	call	_I2C_2_Master_Write
  4533                           
  4534                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  4535   002142  0EB6               	movlw	182
  4536   002144  EC38  F012         	call	_I2C_2_Master_Write
  4537                           
  4538                           ;color.c: 35:  I2C_2_Master_RepStart();
  4539   002148  EC48  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4540                           
  4541                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  4542   00214C  0E53               	movlw	83
  4543   00214E  EC38  F012         	call	_I2C_2_Master_Write
  4544                           
  4545                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  4546   002152  0E01               	movlw	1
  4547   002154  EC36  F011         	call	_I2C_2_Master_Read
  4548   002158  6E07               	movwf	??_color_read_Red^0,c
  4549   00215A  5007               	movf	??_color_read_Red^0,w,c
  4550   00215C  6E0A               	movwf	color_read_Red@tmp^0,c
  4551   00215E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4552                           
  4553                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4554   002160  0E00               	movlw	0
  4555   002162  EC36  F011         	call	_I2C_2_Master_Read
  4556   002166  6E07               	movwf	??_color_read_Red^0,c
  4557   002168  5007               	movf	??_color_read_Red^0,w,c
  4558   00216A  6E09               	movwf	(??_color_read_Red+2)^0,c
  4559   00216C  6A08               	clrf	(??_color_read_Red+1)^0,c
  4560   00216E  500A               	movf	color_read_Red@tmp^0,w,c
  4561   002170  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4562   002172  6E0A               	movwf	color_read_Red@tmp^0,c
  4563   002174  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4564   002176  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4565   002178  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4566                           
  4567                           ;color.c: 39:  I2C_2_Master_Stop();
  4568   00217A  EC3E  F012         	call	_I2C_2_Master_Stop	;wreg free
  4569   00217E                     
  4570                           ;color.c: 40:  return tmp;
  4571   00217E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4572   002182  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4573   002186  0012               	return		;funcret
  4574   002188                     __end_of_color_read_Red:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _color_read_Green *****************
  4578 ;; Defined at:
  4579 ;;		line 43 in file "color.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  tmp             2    9[COMRAM] unsigned int 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  2    4[COMRAM] unsigned int 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4596 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4597 ;;Total ram usage:        7 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 2
  4600 ;; This function calls:
  4601 ;;		_I2C_2_Master_Read
  4602 ;;		_I2C_2_Master_RepStart
  4603 ;;		_I2C_2_Master_Start
  4604 ;;		_I2C_2_Master_Stop
  4605 ;;		_I2C_2_Master_Write
  4606 ;; This function is called by:
  4607 ;;		_collect_avg_readings
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text26
  4612   002188                     __ptext26:
  4613                           	callstack 0
  4614   002188                     _color_read_Green:
  4615                           	callstack 27
  4616   002188                     
  4617                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  4618   002188  EC43  F012         	call	_I2C_2_Master_Start	;wreg free
  4619                           
  4620                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  4621   00218C  0E52               	movlw	82
  4622   00218E  EC38  F012         	call	_I2C_2_Master_Write
  4623                           
  4624                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  4625   002192  0EB8               	movlw	184
  4626   002194  EC38  F012         	call	_I2C_2_Master_Write
  4627                           
  4628                           ;color.c: 49:  I2C_2_Master_RepStart();
  4629   002198  EC48  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4630                           
  4631                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  4632   00219C  0E53               	movlw	83
  4633   00219E  EC38  F012         	call	_I2C_2_Master_Write
  4634                           
  4635                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  4636   0021A2  0E01               	movlw	1
  4637   0021A4  EC36  F011         	call	_I2C_2_Master_Read
  4638   0021A8  6E07               	movwf	??_color_read_Green^0,c
  4639   0021AA  5007               	movf	??_color_read_Green^0,w,c
  4640   0021AC  6E0A               	movwf	color_read_Green@tmp^0,c
  4641   0021AE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4642                           
  4643                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4644   0021B0  0E00               	movlw	0
  4645   0021B2  EC36  F011         	call	_I2C_2_Master_Read
  4646   0021B6  6E07               	movwf	??_color_read_Green^0,c
  4647   0021B8  5007               	movf	??_color_read_Green^0,w,c
  4648   0021BA  6E09               	movwf	(??_color_read_Green+2)^0,c
  4649   0021BC  6A08               	clrf	(??_color_read_Green+1)^0,c
  4650   0021BE  500A               	movf	color_read_Green@tmp^0,w,c
  4651   0021C0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4652   0021C2  6E0A               	movwf	color_read_Green@tmp^0,c
  4653   0021C4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4654   0021C6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4655   0021C8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4656                           
  4657                           ;color.c: 53:  I2C_2_Master_Stop();
  4658   0021CA  EC3E  F012         	call	_I2C_2_Master_Stop	;wreg free
  4659   0021CE                     
  4660                           ;color.c: 54:  return tmp;
  4661   0021CE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4662   0021D2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4663   0021D6  0012               	return		;funcret
  4664   0021D8                     __end_of_color_read_Green:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _color_read_Blue *****************
  4668 ;; Defined at:
  4669 ;;		line 57 in file "color.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  tmp             2    9[COMRAM] unsigned int 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  2    4[COMRAM] unsigned int 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;Total ram usage:        7 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 2
  4690 ;; This function calls:
  4691 ;;		_I2C_2_Master_Read
  4692 ;;		_I2C_2_Master_RepStart
  4693 ;;		_I2C_2_Master_Start
  4694 ;;		_I2C_2_Master_Stop
  4695 ;;		_I2C_2_Master_Write
  4696 ;; This function is called by:
  4697 ;;		_collect_avg_readings
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text27
  4702   0021D8                     __ptext27:
  4703                           	callstack 0
  4704   0021D8                     _color_read_Blue:
  4705                           	callstack 27
  4706   0021D8                     
  4707                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  4708   0021D8  EC43  F012         	call	_I2C_2_Master_Start	;wreg free
  4709                           
  4710                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  4711   0021DC  0E52               	movlw	82
  4712   0021DE  EC38  F012         	call	_I2C_2_Master_Write
  4713                           
  4714                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  4715   0021E2  0EBA               	movlw	186
  4716   0021E4  EC38  F012         	call	_I2C_2_Master_Write
  4717                           
  4718                           ;color.c: 63:  I2C_2_Master_RepStart();
  4719   0021E8  EC48  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4720                           
  4721                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  4722   0021EC  0E53               	movlw	83
  4723   0021EE  EC38  F012         	call	_I2C_2_Master_Write
  4724                           
  4725                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  4726   0021F2  0E01               	movlw	1
  4727   0021F4  EC36  F011         	call	_I2C_2_Master_Read
  4728   0021F8  6E07               	movwf	??_color_read_Blue^0,c
  4729   0021FA  5007               	movf	??_color_read_Blue^0,w,c
  4730   0021FC  6E0A               	movwf	color_read_Blue@tmp^0,c
  4731   0021FE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4732                           
  4733                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4734   002200  0E00               	movlw	0
  4735   002202  EC36  F011         	call	_I2C_2_Master_Read
  4736   002206  6E07               	movwf	??_color_read_Blue^0,c
  4737   002208  5007               	movf	??_color_read_Blue^0,w,c
  4738   00220A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4739   00220C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4740   00220E  500A               	movf	color_read_Blue@tmp^0,w,c
  4741   002210  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4742   002212  6E0A               	movwf	color_read_Blue@tmp^0,c
  4743   002214  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4744   002216  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4745   002218  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4746                           
  4747                           ;color.c: 67:  I2C_2_Master_Stop();
  4748   00221A  EC3E  F012         	call	_I2C_2_Master_Stop	;wreg free
  4749   00221E                     
  4750                           ;color.c: 68:  return tmp;
  4751   00221E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4752   002222  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4753   002226  0012               	return		;funcret
  4754   002228                     __end_of_color_read_Blue:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _I2C_2_Master_Write *****************
  4758 ;; Defined at:
  4759 ;;		line 45 in file "i2c.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  data_byte       1    wreg     unsigned char 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  data_byte       1    1[COMRAM] unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;Total ram usage:        1 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 1
  4780 ;; This function calls:
  4781 ;;		_I2C_2_Master_Idle
  4782 ;; This function is called by:
  4783 ;;		_color_writetoaddr
  4784 ;;		_color_read_Red
  4785 ;;		_color_read_Green
  4786 ;;		_color_read_Blue
  4787 ;;		_color_read_Clear
  4788 ;;		_read_interrupt_status
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text28
  4793   002470                     __ptext28:
  4794                           	callstack 0
  4795   002470                     _I2C_2_Master_Write:
  4796                           	callstack 27
  4797                           
  4798                           ;incstack = 0
  4799                           ;I2C_2_Master_Write@data_byte stored from wreg
  4800   002470  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4801   002472                     
  4802                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4803   002472  ECD4  F011         	call	_I2C_2_Master_Idle	;wreg free
  4804   002476                     
  4805                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4806   002476  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4807   00247A  0012               	return		;funcret
  4808   00247C                     __end_of_I2C_2_Master_Write:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _I2C_2_Master_Stop *****************
  4812 ;; Defined at:
  4813 ;;		line 39 in file "i2c.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 1
  4834 ;; This function calls:
  4835 ;;		_I2C_2_Master_Idle
  4836 ;; This function is called by:
  4837 ;;		_color_writetoaddr
  4838 ;;		_color_read_Red
  4839 ;;		_color_read_Green
  4840 ;;		_color_read_Blue
  4841 ;;		_color_read_Clear
  4842 ;;		_read_interrupt_status
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text29
  4847   00247C                     __ptext29:
  4848                           	callstack 0
  4849   00247C                     _I2C_2_Master_Stop:
  4850                           	callstack 27
  4851   00247C                     
  4852                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4853   00247C  ECD4  F011         	call	_I2C_2_Master_Idle	;wreg free
  4854   002480                     
  4855                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4856   002480  010E               	movlb	14	; () banked
  4857   002482  85DA               	bsf	218,2,b	;volatile
  4858   002484                     
  4859                           ; BSR set to: 14
  4860   002484  0012               	return		;funcret
  4861   002486                     __end_of_I2C_2_Master_Stop:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function _I2C_2_Master_Start *****************
  4865 ;; Defined at:
  4866 ;;		line 27 in file "i2c.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 1
  4887 ;; This function calls:
  4888 ;;		_I2C_2_Master_Idle
  4889 ;; This function is called by:
  4890 ;;		_color_writetoaddr
  4891 ;;		_color_read_Red
  4892 ;;		_color_read_Green
  4893 ;;		_color_read_Blue
  4894 ;;		_color_read_Clear
  4895 ;;		_read_interrupt_status
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text30
  4900   002486                     __ptext30:
  4901                           	callstack 0
  4902   002486                     _I2C_2_Master_Start:
  4903                           	callstack 27
  4904   002486                     
  4905                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4906   002486  ECD4  F011         	call	_I2C_2_Master_Idle	;wreg free
  4907   00248A                     
  4908                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4909   00248A  010E               	movlb	14	; () banked
  4910   00248C  81DA               	bsf	218,0,b	;volatile
  4911   00248E                     
  4912                           ; BSR set to: 14
  4913   00248E  0012               	return		;funcret
  4914   002490                     __end_of_I2C_2_Master_Start:
  4915                           	callstack 0
  4916                           
  4917 ;; *************** function _I2C_2_Master_RepStart *****************
  4918 ;; Defined at:
  4919 ;;		line 33 in file "i2c.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4937 ;;Total ram usage:        0 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 1
  4940 ;; This function calls:
  4941 ;;		_I2C_2_Master_Idle
  4942 ;; This function is called by:
  4943 ;;		_color_read_Red
  4944 ;;		_color_read_Green
  4945 ;;		_color_read_Blue
  4946 ;;		_color_read_Clear
  4947 ;;		_read_interrupt_status
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text31
  4952   002490                     __ptext31:
  4953                           	callstack 0
  4954   002490                     _I2C_2_Master_RepStart:
  4955                           	callstack 27
  4956   002490                     
  4957                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4958   002490  ECD4  F011         	call	_I2C_2_Master_Idle	;wreg free
  4959   002494                     
  4960                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4961   002494  010E               	movlb	14	; () banked
  4962   002496  83DA               	bsf	218,1,b	;volatile
  4963   002498                     
  4964                           ; BSR set to: 14
  4965   002498  0012               	return		;funcret
  4966   00249A                     __end_of_I2C_2_Master_RepStart:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function _I2C_2_Master_Read *****************
  4970 ;; Defined at:
  4971 ;;		line 51 in file "i2c.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  ack             1    wreg     unsigned char 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  ack             1    2[COMRAM] unsigned char 
  4976 ;;  tmp             1    3[COMRAM] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      unsigned char 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4989 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4990 ;;Total ram usage:        3 bytes
  4991 ;; Hardware stack levels used: 1
  4992 ;; Hardware stack levels required when called: 1
  4993 ;; This function calls:
  4994 ;;		_I2C_2_Master_Idle
  4995 ;; This function is called by:
  4996 ;;		_color_read_Red
  4997 ;;		_color_read_Green
  4998 ;;		_color_read_Blue
  4999 ;;		_color_read_Clear
  5000 ;;		_read_interrupt_status
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text32
  5005   00226C                     __ptext32:
  5006                           	callstack 0
  5007   00226C                     _I2C_2_Master_Read:
  5008                           	callstack 27
  5009                           
  5010                           ; BSR set to: 14
  5011                           ;incstack = 0
  5012                           ;I2C_2_Master_Read@ack stored from wreg
  5013   00226C  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5014   00226E                     
  5015                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5016   00226E  ECD4  F011         	call	_I2C_2_Master_Idle	;wreg free
  5017   002272                     
  5018                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5019   002272  010E               	movlb	14	; () banked
  5020   002274  87DA               	bsf	218,3,b	;volatile
  5021                           
  5022                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5023   002276  ECD4  F011         	call	_I2C_2_Master_Idle	;wreg free
  5024   00227A                     
  5025                           ;i2c.c: 57:   tmp = SSP2BUF;
  5026   00227A  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5027                           
  5028                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5029   00227E  ECD4  F011         	call	_I2C_2_Master_Idle	;wreg free
  5030   002282                     
  5031                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5032   002282  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  5033   002284  B4D8               	btfsc	status,2,c
  5034   002286  EF47  F011         	goto	u1061
  5035   00228A  EF4B  F011         	goto	u1060
  5036   00228E                     u1061:
  5037   00228E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5038   002290  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  5039   002292  EF4C  F011         	goto	u1078
  5040   002296                     u1060:
  5041   002296  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5042   002298                     u1078:
  5043   002298  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  5044   00229A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  5045   00229C  010E               	movlb	14	; () banked
  5046   00229E  51DA               	movf	218,w,b	;volatile
  5047   0022A0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5048   0022A2  0BDF               	andlw	-33
  5049   0022A4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5050   0022A6  6FDA               	movwf	218,b	;volatile
  5051   0022A8                     
  5052                           ; BSR set to: 14
  5053                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5054   0022A8  89DA               	bsf	218,4,b	;volatile
  5055   0022AA                     
  5056                           ; BSR set to: 14
  5057                           ;i2c.c: 61:   return tmp;
  5058   0022AA  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5059   0022AC                     
  5060                           ; BSR set to: 14
  5061   0022AC  0012               	return		;funcret
  5062   0022AE                     __end_of_I2C_2_Master_Read:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function _I2C_2_Master_Idle *****************
  5066 ;; Defined at:
  5067 ;;		line 22 in file "i2c.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;Total ram usage:        1 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_I2C_2_Master_Start
  5091 ;;		_I2C_2_Master_RepStart
  5092 ;;		_I2C_2_Master_Stop
  5093 ;;		_I2C_2_Master_Write
  5094 ;;		_I2C_2_Master_Read
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text33
  5099   0023A8                     __ptext33:
  5100                           	callstack 0
  5101   0023A8                     _I2C_2_Master_Idle:
  5102                           	callstack 27
  5103   0023A8                     l154:
  5104   0023A8  010E               	movlb	14	; () banked
  5105   0023AA  B5D8               	btfsc	216,2,b	;volatile
  5106   0023AC  EFDA  F011         	goto	u941
  5107   0023B0  EFDC  F011         	goto	u940
  5108   0023B4                     u941:
  5109   0023B4  EFD4  F011         	goto	l154
  5110   0023B8                     u940:
  5111   0023B8                     
  5112                           ; BSR set to: 14
  5113   0023B8  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5114   0023BC  0E1F               	movlw	31
  5115   0023BE  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  5116   0023C0  A4D8               	btfss	status,2,c
  5117   0023C2  EFE5  F011         	goto	u951
  5118   0023C6  EFE7  F011         	goto	u950
  5119   0023CA                     u951:
  5120   0023CA  EFD4  F011         	goto	l154
  5121   0023CE                     u950:
  5122   0023CE                     
  5123                           ; BSR set to: 14
  5124   0023CE  0012               	return		;funcret
  5125   0023D0                     __end_of_I2C_2_Master_Idle:
  5126                           	callstack 0
  5127                           
  5128 ;; *************** function ___lwdiv *****************
  5129 ;; Defined at:
  5130 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  dividend        2    6[COMRAM] unsigned int 
  5133 ;;  divisor         2    8[COMRAM] unsigned int 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  quotient        2   10[COMRAM] unsigned int 
  5136 ;;  counter         1   12[COMRAM] unsigned char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  2    6[COMRAM] unsigned int 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;Total ram usage:        7 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_setMotorPWM
  5156 ;;		_collect_avg_readings
  5157 ;;		_normalise_readings
  5158 ;;		_make_master_closeness
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text34
  5163   002020                     __ptext34:
  5164                           	callstack 0
  5165   002020                     ___lwdiv:
  5166                           	callstack 29
  5167   002020  0E00               	movlw	0
  5168   002022  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  5169   002024  0E00               	movlw	0
  5170   002026  6E0B               	movwf	___lwdiv@quotient^0,c
  5171   002028  5009               	movf	___lwdiv@divisor^0,w,c
  5172   00202A  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5173   00202C  B4D8               	btfsc	status,2,c
  5174   00202E  EF1B  F010         	goto	u1121
  5175   002032  EF1D  F010         	goto	u1120
  5176   002036                     u1121:
  5177   002036  EF45  F010         	goto	l916
  5178   00203A                     u1120:
  5179   00203A  0E01               	movlw	1
  5180   00203C  6E0D               	movwf	___lwdiv@counter^0,c
  5181   00203E  EF25  F010         	goto	l2285
  5182   002042                     l2283:
  5183   002042  90D8               	bcf	status,0,c
  5184   002044  3609               	rlcf	___lwdiv@divisor^0,f,c
  5185   002046  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5186   002048  2A0D               	incf	___lwdiv@counter^0,f,c
  5187   00204A                     l2285:
  5188   00204A  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  5189   00204C  EF2A  F010         	goto	u1131
  5190   002050  EF2C  F010         	goto	u1130
  5191   002054                     u1131:
  5192   002054  EF21  F010         	goto	l2283
  5193   002058                     u1130:
  5194   002058                     l2287:
  5195   002058  90D8               	bcf	status,0,c
  5196   00205A  360B               	rlcf	___lwdiv@quotient^0,f,c
  5197   00205C  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5198   00205E  5009               	movf	___lwdiv@divisor^0,w,c
  5199   002060  5C07               	subwf	___lwdiv@dividend^0,w,c
  5200   002062  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5201   002064  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5202   002066  A0D8               	btfss	status,0,c
  5203   002068  EF38  F010         	goto	u1141
  5204   00206C  EF3A  F010         	goto	u1140
  5205   002070                     u1141:
  5206   002070  EF3F  F010         	goto	l2295
  5207   002074                     u1140:
  5208   002074  5009               	movf	___lwdiv@divisor^0,w,c
  5209   002076  5E07               	subwf	___lwdiv@dividend^0,f,c
  5210   002078  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5211   00207A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5212   00207C  800B               	bsf	___lwdiv@quotient^0,0,c
  5213   00207E                     l2295:
  5214   00207E  90D8               	bcf	status,0,c
  5215   002080  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5216   002082  3209               	rrcf	___lwdiv@divisor^0,f,c
  5217   002084  2E0D               	decfsz	___lwdiv@counter^0,f,c
  5218   002086  EF2C  F010         	goto	l2287
  5219   00208A                     l916:
  5220   00208A  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  5221   00208E  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5222   002092  0012               	return		;funcret
  5223   002094                     __end_of___lwdiv:
  5224                           	callstack 0
  5225                           
  5226 ;; *************** function _LEDSon_init *****************
  5227 ;; Defined at:
  5228 ;;		line 18 in file "LEDsOn.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1    wreg      void 
  5235 ;; Registers used:
  5236 ;;		None
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;Total ram usage:        0 bytes
  5247 ;; Hardware stack levels used: 1
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_main
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text35
  5256   0023F6                     __ptext35:
  5257                           	callstack 0
  5258   0023F6                     _LEDSon_init:
  5259                           	callstack 30
  5260   0023F6                     
  5261                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  5262   0023F6  9288               	bcf	136,1,c	;volatile
  5263                           
  5264                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  5265   0023F8  9088               	bcf	136,0,c	;volatile
  5266                           
  5267                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  5268   0023FA  9884               	bcf	132,4,c	;volatile
  5269                           
  5270                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  5271   0023FC  9684               	bcf	132,3,c	;volatile
  5272                           
  5273                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  5274   0023FE  9086               	bcf	134,0,c	;volatile
  5275                           
  5276                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  5277   002400  9287               	bcf	135,1,c	;volatile
  5278                           
  5279                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  5280   002402  9E86               	bcf	134,7,c	;volatile
  5281                           
  5282                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  5283   002404  9881               	bcf	129,4,c	;volatile
  5284                           
  5285                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  5286   002406  8E7E               	bsf	126,7,c	;volatile
  5287                           
  5288                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  5289   002408  827F               	bsf	127,1,c	;volatile
  5290                           
  5291                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  5292   00240A  8879               	bsf	121,4,c	;volatile
  5293                           
  5294                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  5295   00240C  987C               	bcf	124,4,c	;volatile
  5296                           
  5297                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  5298   00240E  9280               	bcf	128,1,c	;volatile
  5299                           
  5300                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  5301   002410  907E               	bcf	126,0,c	;volatile
  5302                           
  5303                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  5304   002412  9080               	bcf	128,0,c	;volatile
  5305                           
  5306                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  5307   002414  967C               	bcf	124,3,c	;volatile
  5308   002416  0012               	return		;funcret
  5309   002418                     __end_of_LEDSon_init:
  5310                           	callstack 0
  5311                           
  5312                           	psect	rparam
  5313   000000                     
  5314                           	psect	idloc
  5315                           
  5316                           ;Config register IDLOC0 @ 0x200000
  5317                           ;	unspecified, using default values
  5318   200000                     	org	2097152
  5319   200000  0FFF               	dw	4095
  5320                           
  5321                           ;Config register IDLOC1 @ 0x200002
  5322                           ;	unspecified, using default values
  5323   200002                     	org	2097154
  5324   200002  0FFF               	dw	4095
  5325                           
  5326                           ;Config register IDLOC2 @ 0x200004
  5327                           ;	unspecified, using default values
  5328   200004                     	org	2097156
  5329   200004  0FFF               	dw	4095
  5330                           
  5331                           ;Config register IDLOC3 @ 0x200006
  5332                           ;	unspecified, using default values
  5333   200006                     	org	2097158
  5334   200006  0FFF               	dw	4095
  5335                           
  5336                           ;Config register IDLOC4 @ 0x200008
  5337                           ;	unspecified, using default values
  5338   200008                     	org	2097160
  5339   200008  0FFF               	dw	4095
  5340                           
  5341                           ;Config register IDLOC5 @ 0x20000A
  5342                           ;	unspecified, using default values
  5343   20000A                     	org	2097162
  5344   20000A  0FFF               	dw	4095
  5345                           
  5346                           ;Config register IDLOC6 @ 0x20000C
  5347                           ;	unspecified, using default values
  5348   20000C                     	org	2097164
  5349   20000C  0FFF               	dw	4095
  5350                           
  5351                           ;Config register IDLOC7 @ 0x20000E
  5352                           ;	unspecified, using default values
  5353   20000E                     	org	2097166
  5354   20000E  0FFF               	dw	4095
  5355                           
  5356                           	psect	config
  5357                           
  5358                           ;Config register CONFIG1L @ 0x300000
  5359                           ;	External Oscillator mode Selection bits
  5360                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5361                           ;	Power-up default value for COSC bits
  5362                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5363   300000                     	org	3145728
  5364   300000  AA                 	db	170
  5365                           
  5366                           ;Config register CONFIG1H @ 0x300001
  5367                           ;	unspecified, using default values
  5368                           ;	Clock Out Enable bit
  5369                           ;	CLKOUTEN = 0x1, unprogrammed default
  5370                           ;	Clock Switch Enable bit
  5371                           ;	CSWEN = 0x1, unprogrammed default
  5372                           ;	Fail-Safe Clock Monitor Enable bit
  5373                           ;	FCMEN = 0x1, unprogrammed default
  5374   300001                     	org	3145729
  5375   300001  FF                 	db	255
  5376                           
  5377                           ;Config register CONFIG2L @ 0x300002
  5378                           ;	unspecified, using default values
  5379                           ;	Master Clear Enable bit
  5380                           ;	MCLRE = 0x1, unprogrammed default
  5381                           ;	Power-up Timer Enable bit
  5382                           ;	PWRTE = 0x1, unprogrammed default
  5383                           ;	Low-power BOR enable bit
  5384                           ;	LPBOREN = 0x1, unprogrammed default
  5385                           ;	Brown-out Reset Enable bits
  5386                           ;	BOREN = 0x3, unprogrammed default
  5387   300002                     	org	3145730
  5388   300002  FF                 	db	255
  5389                           
  5390                           ;Config register CONFIG2H @ 0x300003
  5391                           ;	unspecified, using default values
  5392                           ;	Brown Out Reset Voltage selection bits
  5393                           ;	BORV = 0x3, unprogrammed default
  5394                           ;	ZCD Disable bit
  5395                           ;	ZCD = 0x1, unprogrammed default
  5396                           ;	PPSLOCK bit One-Way Set Enable bit
  5397                           ;	PPS1WAY = 0x1, unprogrammed default
  5398                           ;	Stack Full/Underflow Reset Enable bit
  5399                           ;	STVREN = 0x1, unprogrammed default
  5400                           ;	Debugger Enable bit
  5401                           ;	DEBUG = 0x1, unprogrammed default
  5402                           ;	Extended Instruction Set Enable bit
  5403                           ;	XINST = 0x1, unprogrammed default
  5404   300003                     	org	3145731
  5405   300003  FF                 	db	255
  5406                           
  5407                           ;Config register CONFIG3L @ 0x300004
  5408                           ;	WDT Period Select bits
  5409                           ;	WDTCPS = 0x1F, unprogrammed default
  5410                           ;	WDT operating mode
  5411                           ;	WDTE = OFF, WDT Disabled
  5412   300004                     	org	3145732
  5413   300004  9F                 	db	159
  5414                           
  5415                           ;Config register CONFIG3H @ 0x300005
  5416                           ;	unspecified, using default values
  5417                           ;	WDT Window Select bits
  5418                           ;	WDTCWS = 0x7, unprogrammed default
  5419                           ;	WDT input clock selector
  5420                           ;	WDTCCS = 0x7, unprogrammed default
  5421   300005                     	org	3145733
  5422   300005  FF                 	db	255
  5423                           
  5424                           ;Config register CONFIG4L @ 0x300006
  5425                           ;	unspecified, using default values
  5426                           ;	Write Protection Block 0
  5427                           ;	WRT0 = 0x1, unprogrammed default
  5428                           ;	Write Protection Block 1
  5429                           ;	WRT1 = 0x1, unprogrammed default
  5430                           ;	Write Protection Block 2
  5431                           ;	WRT2 = 0x1, unprogrammed default
  5432                           ;	Write Protection Block 3
  5433                           ;	WRT3 = 0x1, unprogrammed default
  5434                           ;	Write Protection Block 3
  5435                           ;	WRT4 = 0x1, unprogrammed default
  5436                           ;	Write Protection Block 3
  5437                           ;	WRT5 = 0x1, unprogrammed default
  5438                           ;	Write Protection Block 3
  5439                           ;	WRT6 = 0x1, unprogrammed default
  5440                           ;	Write Protection Block 3
  5441                           ;	WRT7 = 0x1, unprogrammed default
  5442   300006                     	org	3145734
  5443   300006  FF                 	db	255
  5444                           
  5445                           ;Config register CONFIG4H @ 0x300007
  5446                           ;	unspecified, using default values
  5447                           ;	Configuration Register Write Protection bit
  5448                           ;	WRTC = 0x1, unprogrammed default
  5449                           ;	Boot Block Write Protection bit
  5450                           ;	WRTB = 0x1, unprogrammed default
  5451                           ;	Data EEPROM Write Protection bit
  5452                           ;	WRTD = 0x1, unprogrammed default
  5453                           ;	Scanner Enable bit
  5454                           ;	SCANE = 0x1, unprogrammed default
  5455                           ;	Low Voltage Programming Enable bit
  5456                           ;	LVP = 0x1, unprogrammed default
  5457   300007                     	org	3145735
  5458   300007  FF                 	db	255
  5459                           
  5460                           ;Config register CONFIG5L @ 0x300008
  5461                           ;	unspecified, using default values
  5462                           ;	UserNVM Program Memory Code Protection bit
  5463                           ;	CP = 0x1, unprogrammed default
  5464                           ;	DataNVM Memory Code Protection bit
  5465                           ;	CPD = 0x1, unprogrammed default
  5466   300008                     	org	3145736
  5467   300008  FF                 	db	255
  5468                           
  5469                           ;Config register CONFIG5H @ 0x300009
  5470                           ;	unspecified, using default values
  5471   300009                     	org	3145737
  5472   300009  FF                 	db	255
  5473                           
  5474                           ;Config register CONFIG6L @ 0x30000A
  5475                           ;	unspecified, using default values
  5476                           ;	Table Read Protection Block 0
  5477                           ;	EBTR0 = 0x1, unprogrammed default
  5478                           ;	Table Read Protection Block 1
  5479                           ;	EBTR1 = 0x1, unprogrammed default
  5480                           ;	Table Read Protection Block 2
  5481                           ;	EBTR2 = 0x1, unprogrammed default
  5482                           ;	Table Read Protection Block 3
  5483                           ;	EBTR3 = 0x1, unprogrammed default
  5484                           ;	Table Read Protection Block 4
  5485                           ;	EBTR4 = 0x1, unprogrammed default
  5486                           ;	Table Read Protection Block 5
  5487                           ;	EBTR5 = 0x1, unprogrammed default
  5488                           ;	Table Read Protection Block 6
  5489                           ;	EBTR6 = 0x1, unprogrammed default
  5490                           ;	Table Read Protection Block 7
  5491                           ;	EBTR7 = 0x1, unprogrammed default
  5492   30000A                     	org	3145738
  5493   30000A  FF                 	db	255
  5494                           
  5495                           ;Config register CONFIG6H @ 0x30000B
  5496                           ;	unspecified, using default values
  5497                           ;	Boot Block Table Read Protection bit
  5498                           ;	EBTRB = 0x1, unprogrammed default
  5499   30000B                     	org	3145739
  5500   30000B  FF                 	db	255
  5501                           tosu	equ	0xFFF
  5502                           tosh	equ	0xFFE
  5503                           tosl	equ	0xFFD
  5504                           stkptr	equ	0xFFC
  5505                           pclatu	equ	0xFFB
  5506                           pclath	equ	0xFFA
  5507                           pcl	equ	0xFF9
  5508                           tblptru	equ	0xFF8
  5509                           tblptrh	equ	0xFF7
  5510                           tblptrl	equ	0xFF6
  5511                           tablat	equ	0xFF5
  5512                           prodh	equ	0xFF4
  5513                           prodl	equ	0xFF3
  5514                           indf0	equ	0xFEF
  5515                           postinc0	equ	0xFEE
  5516                           postdec0	equ	0xFED
  5517                           preinc0	equ	0xFEC
  5518                           plusw0	equ	0xFEB
  5519                           fsr0h	equ	0xFEA
  5520                           fsr0l	equ	0xFE9
  5521                           wreg	equ	0xFE8
  5522                           indf1	equ	0xFE7
  5523                           postinc1	equ	0xFE6
  5524                           postdec1	equ	0xFE5
  5525                           preinc1	equ	0xFE4
  5526                           plusw1	equ	0xFE3
  5527                           fsr1h	equ	0xFE2
  5528                           fsr1l	equ	0xFE1
  5529                           bsr	equ	0xFE0
  5530                           indf2	equ	0xFDF
  5531                           postinc2	equ	0xFDE
  5532                           postdec2	equ	0xFDD
  5533                           preinc2	equ	0xFDC
  5534                           plusw2	equ	0xFDB
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    152     160
    BANK1           256    168     220
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    make_master_closeness@buf	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    normalise_readings@buf	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2249$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2200$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2200$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    determine_card@master_closeness	PTR unsigned int  size(2) Largest target is 18
		 -> main@master_closeness(BANK0[18]), 

    make_master_closeness@normalised_values	PTR unsigned int [9] size(2) Largest target is 54
		 -> main@normalised_values(BANK0[54]), 

    make_master_closeness@master_closeness	PTR unsigned int  size(2) Largest target is 18
		 -> main@master_closeness(BANK0[18]), 

    normalise_readings@normalised_values	PTR unsigned int [9] size(2) Largest target is 54
		 -> main@normalised_values(BANK0[54]), 

    normalise_readings@expected_values	PTR unsigned int [9] size(2) Largest target is 54
		 -> main@expected_values(BANK0[54]), 

    collect_avg_readings@blue_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@blue_read(BANK0[2]), 

    collect_avg_readings@green_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@green_read(COMRAM[2]), 

    collect_avg_readings@red_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@red_read(COMRAM[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    S532DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    S532DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _setMotorPWM->___lwdiv
    _sendStringSerial4->_sendCharSerial4
    _normalise_readings->_abs
    _abs->___aomod
    _make_master_closeness->___lwdiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _collect_avg_readings->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               303   303      0   19064
                                             88 COMRAM     6     6      0
                                             23 BANK0    129   129      0
                                              0 BANK1    168   168      0
                  _I2C_2_Master_Init
                        _LEDSon_init
               _collect_avg_readings
                   _color_click_init
                     _determine_card
                    _initDCmotorsPWM
                         _initUSART4
              _make_master_closeness
                 _normalise_readings
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    5950
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5447
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    5097
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3877
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3285
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _normalise_readings                                  23    11     12    3420
                                             22 COMRAM    23    11     12
                            ___lwdiv
                             ___wmul
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     370
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _make_master_closeness                               27    21      6    1656
                                             13 COMRAM    27    21      6
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _determine_card                                      10     8      2     302
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     598
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     598
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _collect_avg_readings                                16    10      6    2449
                                             13 COMRAM    16    10      6
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1206
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _collect_avg_readings
     ___lwdiv
       ___wmul (ARG)
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_card
   _initDCmotorsPWM
   _initUSART4
   _make_master_closeness
     ___lwdiv
   _normalise_readings
     ___lwdiv
     ___wmul
     _abs
       ___aomod (ARG)
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A8      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllhhhl     37      0       0      43        0.0%
BITBIGSFRllllhl     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllhhhl     20      0       0      46        0.0%
BITBIGSFRllhhhl     1E      0       0      48        0.0%
BITBIGSFRhhlllh     17      0       0      36        0.0%
BITBIGSFRllhhl      11      0       0      49        0.0%
BITBIGSFRllllhl      F      0       0      56        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllhhhl      C      0       0      47        0.0%
BITBIGSFRllllhl      9      0       0      55        0.0%
BITBIGSFRllhhhl      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      57        0.0%
BITBIGSFRllllhh      6      0       0      53        0.0%
BITBIGSFRlllhl       5      0       0      52        0.0%
BITBIGSFRhhllll      5      0       0      37        0.0%
BITBIGSFRlllhh       3      0       0      51        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllhhhl      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllhl        1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     217      59        0.0%
DATA                 0      0     217       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 11:09:35 2022

                        _color_read_Red 2138                         _color_read_Blue 21D8  
                                    l22 2456                                      l31 2226  
                                    l25 2186                                      l19 2320  
                                    l28 21D6                                      l95 1A24  
                                    l88 1F24                     ___wmul@multiplicand 0003  
                      _color_read_Green 2188                                     l151 23A6  
                                   l160 248E                                     l240 1454  
                                   l313 1312                                     l241 1466  
                                   l154 23A8                                     l163 2498  
                                   l235 13B8                                     l172 22AC  
                                   l308 1730                                     l324 1FA4  
                                   l236 13B6                                     l157 23CE  
                                   l237 13C6                                     l166 2484  
                                   l318 1DD2                                     l239 1458  
                                   l169 247A                                     l425 23F4  
                                   l267 2416                                     l372 2436  
                                   l381 245A                                     l390 2350  
                                   l384 246E                                     l552 1B88  
                                   l539 18B8                                     l923 2092  
                                   l916 208A                                     u800 1776  
                                   u801 1772                                     u730 1DE6  
                                   u811 17A0                                     u731 1DE2  
                                   u820 17C4                                     u900 1B00  
                                   u740 1DF8                                     u821 17C0  
                                   u901 1AFC                                     u741 1DF4  
                                   u830 17EE                                     u910 1B48  
                                   u750 1E20                                     u831 17EA  
                                   u911 1B44                                     u751 1E1C  
                                   u840 182E                                     u760 1E56  
                                   u920 1FB4                                     u841 182A  
                                   u761 1E52                                     u921 1FB0  
                                   u850 1878                                     u770 226A  
                                   u930 200A                                     u851 1874  
                                   u771 2266                                     u931 2006  
                                   u940 23B8                                     u780 22C8  
                                   u860 1A38                                     u941 23B4  
                                   u781 22C4                                     u861 1A34  
                                   u950 23CE                                     u790 1744  
                                   u870 1A6A                                     u951 23CA  
                                   u791 1740                                     u871 1A66  
                                   u880 1AA8                                     u960 0E56  
                                   u881 1AA4                                     u961 0E50  
                                   u890 1AD2                                     u970 0E58  
                                   u891 1ACE                                     u980 0E6A  
                                   u981 0E66                                     u990 0EA6  
                                   u991 0EA2     normalise_readings@normalised_values 0021  
                                   _abs 22AE                                     _pad 1FA6  
                                   prod 000FF3                                     wreg 000FE8  
                                  l1100 22E4                                    l1110 20E4  
                                  l1103 22EC                                    l2001 1DE6  
                                  l2003 1DF8                                    ?_abs 0013  
                                  l1132 1FC8                                    l2021 22AE  
                                  l2101 1B68                                    l2005 1E02  
                                  l2013 2228                                    l1141 0EB2  
                                  l2023 22C8                                    l2031 1764  
                                  l2007 1E20                                    l2015 2234  
                                  l2111 1FD4                                    l1143 0EBA  
                                  l1136 201E                                    l1144 0F00  
                                  l2121 23B8                                    l2201 22AA  
                                  l2041 17A6                                    l2033 1768  
                                  l2025 1732                                    l2009 1E56  
                                  l2017 2246                                    l2113 1FE8  
                                  l2105 1FA6                                    l1162 1CE6  
                                  l2051 1800                                    l2043 17C4  
                                  l2035 1776                                    l2027 1736  
                                  l2019 224A                                    l2115 1FEC  
                                  l2107 1FB4                                    l1155 10A2  
                                  l2131 0E8A                                    l2123 0E26  
                                  l2211 1BCE                                    l1180 1E9C  
                                  l2053 182E                                    l2045 17CC  
                                  l2061 1868                                    l2037 1796  
                                  l2029 1744                                    l2117 200A  
                                  l2109 1FC0                                    l2141 0EE8  
                                  l2133 0EA6                                    l2125 0E46  
                                  l2221 1C78                                    l2213 1BD2  
                                  l2205 1B8A                                    l2301 20F2  
                                  l2119 23A8                                    l2311 22F2  
                                  l2063 1878                                    l2055 184E  
                                  l2047 17E0                                    l2039 179A  
                                  l2071 1A2A                                    l1191 249A  
                                  l2151 0F18                                    l2143 0EF4  
                                  l2135 0EC2                                    l2127 0E5A  
                                  l2215 1BE2                                    l2207 1BB2  
                                  l2303 210E                                    l1168 2136  
                                  l2241 2390                                    l2313 22FC  
                                  l2321 1EA6                                    l2065 1898  
                                  l2057 1850                                    l2049 17EE  
                                  l2081 1A8A                                    l2073 1A38  
                                  l2161 1024                                    l2153 0F9A  
                                  l2145 0EFC                                    l2137 0ED2  
                                  l2129 0E6A                                    l2225 1CA8  
                                  l2217 1C02                                    l2209 1BC0  
                                  l2305 212E                                    l2251 217E  
                                  l2243 2392                                    l2235 237E  
                                  l2315 230C                                    l2331 1F0A  
                                  l2323 1ED0                                    l2059 1862  
                                  l2091 1B00                                    l2083 1AA8  
                                  l2075 1A58                                    l2171 1082  
                                  l2163 1042                                    l2155 0FA0  
                                  l2147 0F08                                    l2139 0ED8  
                                  l2219 1C22                                    l1188 226A  
                                  l2421 23F6                                    l2181 2476  
                                  l2261 21D8                                    l2245 2394  
                                  l2237 2388                                    l2317 2316  
                                  l2309 22EE                                    l2333 1F0C  
                                  l2325 1EF4                                    l2341 18BA  
                                  l2093 1B20                                    l2085 1AB0  
                                  l2077 1A5C                                    l2069 1A26  
                                  l2165 105C                                    l2157 0FA6  
                                  l2149 0F12                                    l2229 1CBA  
                                  l2501 20AE                                    l2191 226E  
                                  l2175 2486                                    l2183 247C  
                                  l2263 221E                                    l2255 2188  
                                  l2239 238E                                    l2247 243A  
                                  l2335 1F16                                    l2327 1EFE  
                                  l2319 1E9E                                    l2431 2430  
                                  l2423 2418                                    l2271 23D0  
                                  l2511 2326                                    l2351 1984  
                                  l2343 18D6                                    l2095 1B32  
                                  l2087 1AC4                                    l2079 1A6A  
                                  l2167 106C                                    l2159 100A  
                                  l2503 20B6                                    l2281 203A  
                                  l2193 2272                                    l2177 248A  
                                  l2185 2480                                    l2257 21CE  
                                  l2249 2138                                    l2337 1F18  
                                  l2329 1F00                                    l2433 2432  
                                  l2425 2422                                    l2273 23EC  
                                  l2513 2334                                    l2353 19A0  
                                  l2345 192A                                    l2089 1AD2  
                                  l2097 1B38                                    l2169 1072  
                                  l2505 20D2                                    l2291 2074  
                                  l2283 2042                                    l2195 227A  
                                  l2187 2490                                    l2179 2472  
                                  l2443 1554                                    l2339 1F22  
                                  l2435 2434                                    l2427 2424  
                                  l2531 1214                                    l2523 10A8  
                                  l2267 245A                                    l2515 2338  
                                  l2355 19E4                                    l2347 193E  
                                  l2099 1B48                                    l2293 207C  
                                  l2285 204A                                    l2277 2020  
                                  l2197 2282                                    l2189 2494  
                                  l2461 15E8                                    l2445 1590  
                                  l2437 154C                                    l2429 2426  
                                  l2533 12E8                                    l2525 1140  
                                  l2517 10A4                                    l2269 246A  
                                  l2509 2322                                    l2349 1942  
                                  l2701 1538                                    l2621 1320  
                                  l2295 207E                                    l2287 2058  
                                  l2279 2028                                    l2199 22A8  
                                  l2471 1638                                    l2463 1604  
                                  l2455 15B8                                    l2447 1594  
                                  l2551 1DC2                                    l2535 1300  
                                  l2527 1158                                    l2631 1336  
                                  l2623 1324                                    l2615 1314  
                                  l2297 2084                                    l2289 205E  
                                  l2481 16B0                                    l2473 164C  
                                  l2465 1630                                    l2457 15CC  
                                  l2449 15B0                                    l2553 1F26  
                                  l2545 1CEC                                    l2537 1302  
                                  l2529 119C                                    l2641 1354  
                                  l2633 133A                                    l2625 1328  
                                  l2617 1318                                    l2491 16E4  
                                  l2475 1664                                    l2459 15E4  
                                  l2571 1F92                                    l2563 1F3E  
                                  l2555 1F2A                                    l2547 1DA8  
                                  l2539 1CE8                                    l2299 20E6  
                                  l2651 1372                                    l2643 1358  
                                  l2635 1342                                    l2627 132C  
                                  l2619 131C                                    l2493 16E8  
                                  l2477 1668                                    l2573 1FA2  
                                  l2565 1F6C                                    l2557 1F3A  
                                  l2549 1DC0                                    l2661 139A  
                                  l2653 137E                                    l2645 135C  
                                  l2637 134A                                    l2629 1332  
                                  l2495 1704                                    l2487 16B8  
                                  l2479 1684                                    l2567 1F8C  
                                  l2663 13A4                                    l2655 138A  
                                  l2647 1364                                    l2639 1350  
                                  l2489 16CC                                    l2569 1F90  
                                  l2497 2094                                    l2681 141E  
                                  l2665 13A6                                    l2657 138A  
                                  l2649 136C                                    l2499 20A6  
                                  l2691 14B2                                    l2683 143E  
                                  l2675 13C8                                    l2667 13A8  
                                  l2659 1392                                    l2693 14BE  
                                  l2685 1440                                    l2677 13E4  
                                  l2669 13AC                                    ?_pad 0011  
                                  l2695 14F2                                    l2687 1468  
                                  l2679 13FE                                    l2697 150E  
                                  l2689 1484                                    l2699 151C  
                                  l1999 1DD4                                    STR_1 0E01  
                                  STR_2 0E1B                                    u1000 0ED2  
                                  u1001 0ECE                                    u1010 0EE8  
                                  u1011 0EE4                                    u1020 1024  
                                  u1100 1C22                                    u1021 1020  
                                  u1101 1C1E                                    u1110 246A  
                                  u1030 1042                                    u1111 2466  
                                  u1031 103E                                    u1120 203A  
                                  u1040 105C                                    u1121 2036  
                                  u1041 1058                                    u1130 2058  
                                  u1050 106C                                    u1131 2054  
                                  u1051 1068                                    u1140 2074  
                                  u1060 2296                                    u1300 1F6C  
                          ?_LEDSon_init 0001                                    u1141 2070  
                                  u1061 228E                                    u1301 1F68  
                                  u1230 15B0                                    u1310 1FA2  
                                  u1150 212E                                    u1231 15AC  
                                  u1311 1F9E                                    u1151 212A  
                                  u1240 1604                                    u1160 18D6  
                                  u1080 1BB2                                    u1241 1600  
                                  u1161 18D2                                    u1081 1BAE  
                                  u1250 1684                                    u1170 19A0  
                                  u1090 1C02                                    u1251 1680  
                                  u1171 199C                                    u1091 1BFE  
                                  u1260 1704                                    u1261 1700  
                                  u1078 2298                                    u1270 2350  
                                  u1271 234C                                    u1280 1312  
                                  u1360 13C6                            _BAUD4CONbits 000EE9  
                                  u1281 130E                                    u1361 13C2  
                                  u1290 1DD2                                    u1370 1450  
                                  u1507 1656                                    u1291 1DCE  
                                  u1371 144C                                    u1380 1466  
                                  u1517 16D6                                    u1381 1462  
                                  u1447 114A                                    u1457 121E  
                                  _T2PR 000FBC                                    u1467 12F2  
                                  u1477 1DB2                                    u1487 2302  
                                  u1497 15D6              normalise_readings@red_read 0019  
                                  abs@a 0013                                    _dbuf 01BC  
                                  _main 1314                                    _dtoa 0E26  
                                  _prec 00FA                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                __end_of_color_read_Red 2188             normalise_readings@blue_read 001D  
                          ___param_bank 000000                                   ??_abs 0015  
                                 ??_pad 0017                         __end_of___aodiv 18BA  
                                 ?_main 0001                                   ?_dtoa 001C  
                       __end_of___aomod 1B8A                         __end_of___lwdiv 2094  
                          vfpfcnvrt@fmt 0041                            main@red_read 005B  
               __end_of_sendCharSerial4 2470              __end_of_I2C_2_Master_Start 2490  
            __end_of_I2C_2_Master_Write 247C                                   _flags 00FC  
                                 _fputc 1DD4                                   _fputs 2228  
                                 pad@fp 0011          determine_card@master_closeness 0001  
               ??_make_master_closeness 0014                                   _width 00F8  
                                 _putch 249A                                   main@i 00F5  
                                 dtoa@d 001E                                   dtoa@i 003C  
                                 dtoa@n 0034                                   dtoa@p 0030  
                                 dtoa@s 003E                                   dtoa@w 0032  
                   normalise_readings@i 002D                                   tablat 000FF5  
                                 status 000FD8                         __end_of_sprintf 20E6  
               __end_of_color_read_Blue 2228                   _I2C_2_Master_RepStart 2490  
                       ?_color_read_Red 0005                         __initialization 2352  
                          __end_of_main 154C                            __end_of_dtoa 10A4  
                                ??_main 0059                                  ??_dtoa 0026  
                         __activetblptr 000003                           main@blue_read 00F6  
                          ?_setMotorPWM 000E                                  ?_fputc 0001  
                                ?_fputs 000A                                  _CCPR1H 000FAA  
                                _CCPR2H 000FA6                                  _CCPR3H 000F25  
                                _CCPR4H 000F21            collect_avg_readings@red_read 000E  
                                ?_putch 0001                                  _RC0PPS 000E62  
                                _RC4REG 000EE3                                  _RE2PPS 000E74  
                                _RD5PPS 000E6F                                  _RC7PPS 000E69  
                                _RD6PPS 000E70                                  _RE4PPS 000E76  
                                _RG6PPS 000E88                __end_of_color_click_init 2322  
                make_master_closeness@i 0028                                  _RX4PPS 000E15  
                                _TX4REG 000EE4                            _CCPTMRS0bits 000FAD  
                          vfprintf@cfmt 0057                               ??___aodiv 0011  
                             ??___aomod 0011                                  ___wmul 23D0  
                    _normalise_readings 10A4                               ??___lwdiv 000B  
                                clear_0 2358                                  clear_1 2364  
                                clear_2 2370                                  isa$std 000001  
                                pad@buf 0013                                  dtoa@fp 001C  
                   ?_normalise_readings 0017                                  fputc@c 0001  
                                fputs@c 000E                                  fputs@i 000F  
                                fputs@s 000A                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                        ?_sendCharSerial4 0001  
                                putch@c 0001                        __end_of_vfprintf 2138  
                     ??_initDCmotorsPWM 0001                               ??_sprintf 0059  
                            __accesstop 0060                 __end_of__initialization 2378  
              __end_of_color_read_Green 21D8                  ?_I2C_2_Master_RepStart 0001  
                  ??_normalise_readings 0023                           ___rparam_used 000001  
                      ?_color_read_Blue 0005            __end_of_collect_avg_readings 1732  
                        __pcstackCOMRAM 0001              collect_avg_readings@i_1551 0018  
            collect_avg_readings@i_1552 001A              collect_avg_readings@i_1553 001C  
                         __end_of_fputc 1E9E                           __end_of_fputs 226C  
                         __end_of_putch 249C                   main@normalised_values 0077  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00F8  
                            __pbssBANK1 01A8                              __pbssBANK2 0200  
                     _color_writetoaddr 2438                            _T2CLKCONbits 000FBF  
                    ?_color_writetoaddr 0003                                 ?___wmul 0001  
                   ??_color_writetoaddr 0004                          main@green_read 005D  
                               _SP4BRGH 000EE6                                 _SP4BRGL 000EE5  
                               _SSP2ADD 000ED6                                 _SSP2BUF 000ED5  
                color_writetoaddr@value 0003                        ??_color_read_Red 0007  
         __end_of_make_master_closeness 1DD4          determine_card@predicted_colour 0009  
             __end_of_color_writetoaddr 2458                      _I2C_2_Master_Start 2486  
                            _initUSART4 2418                      _I2C_2_Master_Write 2470  
                               __Hparam 0000                                 __Lparam 0000  
                     color_read_Red@tmp 000A  make_master_closeness@normalised_values 0010  
               sendStringSerial4@string 0002                                 ___aodiv 1732  
                               ___aomod 1A26                     ?_I2C_2_Master_Start 0001  
                               ___lwdiv 2020                     ?_I2C_2_Master_Write 0001  
                             ?_vfprintf 0051                            __psmallconst 0E00  
                               __pcinit 2352                                 __ramtop 0E00  
                               __ptext0 1314                                 __ptext1 2094  
                               __ptext2 20E6                                 __ptext3 1B8A  
                               __ptext4 0E26                                 __ptext5 1FA6  
                               __ptext6 2228                                 __ptext7 1DD4  
                               __ptext8 249A                                 __ptext9 1A26  
                             _T2CONbits 000FBD                               _T2HLTbits 000FBE  
                         _RxBufWriteCnt 00FF                    _collect_avg_readings 154C  
                               main@buf 0100                                 _sprintf 2094  
                  ??_I2C_2_Master_Start 0002                    ??_I2C_2_Master_Write 0002  
                  end_of_initialization 2378          collect_avg_readings@green_read 0010  
                 normalise_readings@buf 0017                                 fputc@fp 0003  
                               fputs@fp 000C                       ?_color_click_init 0001  
                    ??_color_click_init 0005                       __end_of_vfpfcnvrt 1CE8  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                      vfpfcnvrt@convarg 0047                              ??_vfprintf 0057  
                       _initDCmotorsPWM 1E9E                               _PORTFbits 000F8E  
                    setMotorPWM@negDuty 0013       normalise_readings@expected_values 001F  
                             _TRISAbits 000F81                      setMotorPWM@posDuty 0012  
                             _TRISCbits 000F83                               _TRISDbits 000F84  
                             _TRISEbits 000F85                               _TRISFbits 000F86  
                             _TRISGbits 000F87                               _TRISHbits 000F88  
                 ?_collect_avg_readings 000E                     main@expected_values 00AD  
              color_writetoaddr@address 0004                 ??_I2C_2_Master_RepStart 0002  
                           _CCP1CONbits 000FAB                            _EUSART4RXbuf 01A8  
                          _EUSART4TXbuf 0200                             _CCP2CONbits 000FA7  
                     ?_color_read_Green 0005                             _CCP3CONbits 000F26  
                           ?_initUSART4 0001                             _CCP4CONbits 000F22  
             sendCharSerial4@charToSend 0001                              main@motorL 0196  
                            main@motorR 019F                      ??_color_read_Green 0007  
                  main@master_closeness 00E3                             vfpfcnvrt@ap 0043  
                           vfpfcnvrt@cp 004F                             vfpfcnvrt@fp 003F  
                        __end_of___wmul 23F6                         determine_card@i 000A  
                   start_initialization 2352                             __end_of_abs 22EE  
                           __end_of_pad 2020                           _TxBufWriteCnt 005F  
                         ??_LEDSon_init 0001                     color_read_Green@tmp 000A  
               __end_of_initDCmotorsPWM 1F26                             vfprintf@fmt 0053  
                              ??___wmul 0005                          _determine_card 1F26  
                           __pbssCOMRAM 005F                  ??_collect_avg_readings 0014  
                         __pcstackBANK0 0060                           __pcstackBANK1 0100  
                      ___aodiv@dividend 0001                     __end_of_LEDSon_init 2418  
                      ___lwdiv@dividend 0007                               _dtoa$2277 002E  
                              ?___aodiv 0001                                ?___aomod 0001  
                      ___aodiv@quotient 0013                  __end_of_determine_card 1FA6  
                              ?___lwdiv 0007                    I2C_2_Master_Read@ack 0003  
                  I2C_2_Master_Read@tmp 0004                             __smallconst 0E00  
                     _I2C_2_Master_Idle 23A8                       _I2C_2_Master_Init 237E  
                     _I2C_2_Master_Read 226C                       _I2C_2_Master_Stop 247C  
                          _RxBufReadCnt 00FE            normalise_readings@difference 002B  
                    ?_I2C_2_Master_Idle 0001                      ?_I2C_2_Master_Init 0001  
                    ?_I2C_2_Master_Read 0001                           ??_setMotorPWM 0010  
                    ?_I2C_2_Master_Stop 0001                        ___lwdiv@quotient 000B  
                              ?_sprintf 0060                       _sendStringSerial4 2322  
                   ??_I2C_2_Master_Idle 0001                     ??_I2C_2_Master_Init 0001  
                   ??_I2C_2_Master_Read 0002                          ___wmul@product 0005  
                              _LATAbits 000F79                     ??_I2C_2_Master_Stop 0002  
                              _LATDbits 000F7C                                _LATFbits 000F7E  
                              _LATGbits 000F7F                                _LATHbits 000F80  
                    ?_sendStringSerial4 0002                                _PIE4bits 000E2D  
                 _make_master_closeness 1CE8                                _PIR4bits 000E37  
                      ?_initDCmotorsPWM 0001                       ??_sendCharSerial4 0001  
              make_master_closeness@buf 000E                                _SSP2CON2 000EDA  
                   ??_sendStringSerial4 0004                                _SSP2STAT 000ED8  
                       ?_determine_card 0001                               _vfpfcnvrt 1B8A  
             __end_of_I2C_2_Master_Idle 23D0               __end_of_I2C_2_Master_Init 23A8  
             __end_of_I2C_2_Master_Read 22AE                       ___wmul@multiplier 0001  
             __end_of_I2C_2_Master_Stop 2486                            setMotorPWM@m 000E  
           I2C_2_Master_Write@data_byte 0002            normalise_readings@green_read 001B  
                     ??_color_read_Blue 0007                            _TxBufReadCnt 00FD  
             __end_of_sendStringSerial4 2352                             _LEDSon_init 23F6  
         __end_of_I2C_2_Master_RepStart 249A                      color_read_Blue@tmp 000A  
                   __end_of_setMotorPWM 1A26                            ??_initUSART4 0001  
                              __Hrparam 0000                              vfprintf@ap 0055  
                              __Lrparam 0000                              vfprintf@fp 0051  
 make_master_closeness@master_closeness 0012                              ?_vfpfcnvrt 003F  
                       ___aodiv@divisor 0009                         ___aodiv@counter 0011  
                            _ANSELDbits 000EA7                              _ANSELFbits 000EB4  
                            sprintf@fmt 0062                         ___lwdiv@divisor 0009  
                    __end_of_initUSART4 2438                         ___lwdiv@counter 000D  
                              __ptext10 1732                                __ptext11 18BA  
                              __ptext20 1F26                                __ptext12 2322  
                              __ptext21 22EE                                __ptext13 2458  
                              __ptext30 2486                                __ptext22 2438  
                              __ptext14 10A4                                __ptext31 2490  
                              __ptext23 237E                                __ptext15 22AE  
                              __ptext32 226C                                __ptext24 154C  
                              __ptext16 23D0                                __ptext33 23A8  
                              __ptext25 2138                                __ptext17 1CE8  
                              __ptext34 2020                                __ptext26 2188  
                              __ptext18 2418                                __ptext35 23F6  
                              __ptext27 21D8                                __ptext19 1E9E  
                              __ptext28 2470                                __ptext29 247C  
                          _SSP2CON1bits 000ED9                            _SSP2CON2bits 000EDA  
                ?_make_master_closeness 000E                                isa$xinst 000000  
                            _RC4STAbits 000EE7                                _vfprintf 20E6  
                              main@card 0059                        ___aomod@dividend 0001  
                 collect_avg_readings@i 0016                             _setMotorPWM 18BA  
         collect_avg_readings@blue_read 0012                               sprintf@ap 006A  
            __end_of_normalise_readings 1314          determine_card@current_smallest 0007  
                       ___aomod@divisor 0009                             ??_vfpfcnvrt 0045  
                       ___aomod@counter 0011                        _color_click_init 22EE  
                              sprintf@f 006C                                sprintf@s 0060  
                            _SSP2DATPPS 000E1D                              _SSP2CLKPPS 000E1C  
                            _TX4STAbits 000EE8                            ___aodiv@sign 0012  
                       _sendCharSerial4 2458                            ___aomod@sign 0012  
                      ??_determine_card 0003                            main@PWMcycle 005A  
