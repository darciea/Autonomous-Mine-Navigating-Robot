

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 20:00:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Version 2.35
    63                           ; Generated 05/05/2021 GMT
    64                           ; 
    65                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     _TRISBbits	set	3970
    98   000000                     _TX4REG	set	3812
    99   000000                     _RC4STAbits	set	3815
   100   000000                     _SP4BRGH	set	3814
   101   000000                     _LATGbits	set	3967
   102   000000                     _TRISAbits	set	3969
   103   000000                     _TRISFbits	set	3974
   104   000000                     _TRISDbits	set	3972
   105   000000                     _TRISGbits	set	3975
   106   000000                     _SSP2CON2bits	set	3802
   107   000000                     _INT1PPS	set	3569
   108   000000                     _RX4PPS	set	3605
   109   000000                     _SSP2CLKPPS	set	3612
   110   000000                     _SSP2DATPPS	set	3613
   111   000000                     _RC7PPS	set	3689
   112   000000                     _RE2PPS	set	3700
   113   000000                     _TRISCbits	set	3971
   114   000000                     _TRISEbits	set	3973
   115   000000                     _TRISHbits	set	3976
   116   000000                     _PORTFbits	set	3982
   117   000000                     _T2PR	set	4028
   118   000000                     _T2CONbits	set	4029
   119   000000                     _CCPR2H	set	4006
   120   000000                     _CCPR1H	set	4010
   121   000000                     _RE4PPS	set	3702
   122   000000                     _RG6PPS	set	3720
   123   000000                     _RD5PPS	set	3695
   124   000000                     _ANSELBbits	set	3738
   125   000000                     _ANSELDbits	set	3751
   126   000000                     _SSP2ADD	set	3798
   127   000000                     _SSP2CON1bits	set	3801
   128   000000                     _CCPR4H	set	3873
   129   000000                     _CCPR3H	set	3877
   130   000000                     _INTCONbits	set	4082
   131   000000                     _T2CLKCONbits	set	4031
   132   000000                     _T2HLTbits	set	4030
   133   000000                     _CCP1CONbits	set	4011
   134   000000                     _CCPTMRS0bits	set	4013
   135   000000                     _CCP2CONbits	set	4007
   136   000000                     _LATAbits	set	3961
   137   000000                     _LATDbits	set	3964
   138   000000                     _CCP3CONbits	set	3878
   139   000000                     _CCP4CONbits	set	3874
   140   000000                     _RC4REG	set	3811
   141   000000                     _SP4BRGL	set	3813
   142   000000                     _TX4STAbits	set	3816
   143   000000                     _BAUD4CONbits	set	3817
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _SSP2STAT	set	3800
   146   000000                     _ANSELFbits	set	3764
   147   000000                     _SSP2BUF	set	3797
   148   000000                     _IPR0bits	set	3615
   149   000000                     _PIE0bits	set	3625
   150   000000                     _PIE4bits	set	3629
   151   000000                     _PIR4bits	set	3639
   152   000000                     _RC0PPS	set	3682
   153   000000                     _RD6PPS	set	3696
   154   000000                     _LATFbits	set	3966
   155   000000                     _LATHbits	set	3968
   156   000000                     _PIR0bits	set	3635
   157                           
   158                           	psect	smallconst
   159   000E00                     __psmallconst:
   160                           	callstack 0
   161   000E00  00                 	db	0
   162   000E01                     STR_1:
   163                           
   164                           ; BSR set to: 14
   165   000E01  0A                 	db	10
   166   000E02  20                 	db	32
   167   000E03  45                 	db	69	;'E'
   168   000E04  58                 	db	88	;'X'
   169   000E05  50                 	db	80	;'P'
   170   000E06  45                 	db	69	;'E'
   171   000E07  43                 	db	67	;'C'
   172   000E08  54                 	db	84	;'T'
   173   000E09  45                 	db	69	;'E'
   174   000E0A  44                 	db	68	;'D'
   175   000E0B  3A                 	db	58	;':'
   176   000E0C  20                 	db	32
   177   000E0D  52                 	db	82	;'R'
   178   000E0E  20                 	db	32
   179   000E0F  25                 	db	37
   180   000E10  64                 	db	100	;'d'
   181   000E11  2C                 	db	44
   182   000E12  20                 	db	32
   183   000E13  47                 	db	71	;'G'
   184   000E14  20                 	db	32
   185   000E15  25                 	db	37
   186   000E16  64                 	db	100	;'d'
   187   000E17  2C                 	db	44
   188   000E18  20                 	db	32
   189   000E19  42                 	db	66	;'B'
   190   000E1A  20                 	db	32
   191   000E1B  25                 	db	37
   192   000E1C  64                 	db	100	;'d'
   193   000E1D  20                 	db	32
   194   000E1E  20                 	db	32
   195   000E1F  43                 	db	67	;'C'
   196   000E20  41                 	db	65	;'A'
   197   000E21  52                 	db	82	;'R'
   198   000E22  44                 	db	68	;'D'
   199   000E23  3A                 	db	58	;':'
   200   000E24  20                 	db	32
   201   000E25  25                 	db	37
   202   000E26  64                 	db	100	;'d'
   203   000E27  20                 	db	32
   204   000E28  0A                 	db	10
   205   000E29  00                 	db	0
   206   000E2A                     
   207                           ; BSR set to: 14
   208   000E2A  0A                 	db	10
   209   000E2B  20                 	db	32
   210   000E2C  41                 	db	65	;'A'
   211   000E2D  56                 	db	86	;'V'
   212   000E2E  47                 	db	71	;'G'
   213   000E2F  3A                 	db	58	;':'
   214   000E30  20                 	db	32
   215   000E31  52                 	db	82	;'R'
   216   000E32  20                 	db	32
   217   000E33  25                 	db	37
   218   000E34  64                 	db	100	;'d'
   219   000E35  2C                 	db	44
   220   000E36  20                 	db	32
   221   000E37  47                 	db	71	;'G'
   222   000E38  20                 	db	32
   223   000E39  25                 	db	37
   224   000E3A  64                 	db	100	;'d'
   225   000E3B  2C                 	db	44
   226   000E3C  20                 	db	32
   227   000E3D  42                 	db	66	;'B'
   228   000E3E  20                 	db	32
   229   000E3F  25                 	db	37
   230   000E40  64                 	db	100	;'d'
   231   000E41  20                 	db	32
   232   000E42  0A                 	db	10
   233   000E43  00                 	db	0
   234   000E44                     STR_2:
   235                           
   236                           ; BSR set to: 14
   237   000E44  0A                 	db	10
   238   000E45  20                 	db	32
   239   000E46  45                 	db	69	;'E'
   240   000E47  78                 	db	120	;'x'
   241   000E48  70                 	db	112	;'p'
   242   000E49  65                 	db	101	;'e'
   243   000E4A  63                 	db	99	;'c'
   244   000E4B  74                 	db	116	;'t'
   245   000E4C  65                 	db	101	;'e'
   246   000E4D  64                 	db	100	;'d'
   247   000E4E  20                 	db	32
   248   000E4F  63                 	db	99	;'c'
   249   000E50  6C                 	db	108	;'l'
   250   000E51  65                 	db	101	;'e'
   251   000E52  61                 	db	97	;'a'
   252   000E53  72                 	db	114	;'r'
   253   000E54  3A                 	db	58	;':'
   254   000E55  20                 	db	32
   255   000E56  25                 	db	37
   256   000E57  64                 	db	100	;'d'
   257   000E58  20                 	db	32
   258   000E59  0A                 	db	10
   259   000E5A  00                 	db	0
   260   000E5B                     STR_3:
   261                           
   262                           ; BSR set to: 14
   263   000E5B  52                 	db	82	;'R'
   264   000E5C  61                 	db	97	;'a'
   265   000E5D  77                 	db	119	;'w'
   266   000E5E  20                 	db	32
   267   000E5F  25                 	db	37
   268   000E60  64                 	db	100	;'d'
   269   000E61  2C                 	db	44
   270   000E62  20                 	db	32
   271   000E63  25                 	db	37
   272   000E64  64                 	db	100	;'d'
   273   000E65  2C                 	db	44
   274   000E66  20                 	db	32
   275   000E67  25                 	db	37
   276   000E68  64                 	db	100	;'d'
   277   000E69  2C                 	db	44
   278   000E6A  20                 	db	32
   279   000E6B  25                 	db	37
   280   000E6C  64                 	db	100	;'d'
   281   000E6D  20                 	db	32
   282   000E6E  0A                 	db	10
   283   000E6F  00                 	db	0
   284   000E70                     
   285                           ; BSR set to: 14
   286   000E70  43                 	db	67	;'C'
   287   000E71  41                 	db	65	;'A'
   288   000E72  52                 	db	82	;'R'
   289   000E73  44                 	db	68	;'D'
   290   000E74  20                 	db	32
   291   000E75  25                 	db	37
   292   000E76  64                 	db	100	;'d'
   293   000E77  20                 	db	32
   294   000E78  0A                 	db	10
   295   000E79  00                 	db	0
   296   000E7A  00                 	db	0	; dummy byte at the end
   297   000000                     
   298                           ; #config settings
   299                           
   300                           	psect	cinit
   301   002322                     __pcinit:
   302                           	callstack 0
   303   002322                     start_initialization:
   304                           	callstack 0
   305   002322                     __initialization:
   306                           	callstack 0
   307                           
   308                           ; Clear objects allocated to BANK0 (121 bytes)
   309   002322  EE00  F060         	lfsr	0,__pbssBANK0
   310   002326  0E79               	movlw	121
   311   002328                     clear_0:
   312   002328  6AEE               	clrf	postinc0,c
   313   00232A  06E8               	decf	wreg,f,c
   314   00232C  E1FD               	bnz	clear_0
   315                           
   316                           ; Clear objects allocated to COMRAM (4 bytes)
   317   00232E  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   318   002330  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   319   002332  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   320   002334  6A57               	clrf	__pbssCOMRAM& (0+255),c
   321   002336                     end_of_initialization:
   322                           	callstack 0
   323   002336                     __end_of__initialization:
   324                           	callstack 0
   325   002336  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   326   002338  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327   00233A  0100               	movlb	0
   328   00233C  EF3E  F007         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331   000057                     __pbssCOMRAM:
   332                           	callstack 0
   333   000057                     _TxBufReadCnt:
   334                           	callstack 0
   335   000057                     	ds	1
   336   000058                     _TxBufWriteCnt:
   337                           	callstack 0
   338   000058                     	ds	1
   339   000059                     _RxBufReadCnt:
   340                           	callstack 0
   341   000059                     	ds	1
   342   00005A                     _RxBufWriteCnt:
   343                           	callstack 0
   344   00005A                     	ds	1
   345                           
   346                           	psect	bssBANK0
   347   000060                     __pbssBANK0:
   348                           	callstack 0
   349   000060                     _EUSART4TXbuf:
   350                           	callstack 0
   351   000060                     	ds	60
   352   00009C                     _EUSART4RXbuf:
   353                           	callstack 0
   354   00009C                     	ds	20
   355   0000B0                     _width:
   356                           	callstack 0
   357   0000B0                     	ds	2
   358   0000B2                     _prec:
   359                           	callstack 0
   360   0000B2                     	ds	2
   361   0000B4                     _card_detected:
   362                           	callstack 0
   363   0000B4                     	ds	2
   364   0000B6                     _response_in_progress:
   365                           	callstack 0
   366   0000B6                     	ds	2
   367   0000B8                     _flags:
   368                           	callstack 0
   369   0000B8                     	ds	1
   370   0000B9                     _dbuf:
   371                           	callstack 0
   372   0000B9                     	ds	32
   373                           
   374                           	psect	cstackBANK1
   375   000100                     __pcstackBANK1:
   376                           	callstack 0
   377   000100                     main@buf:
   378                           	callstack 0
   379                           
   380                           ; 150 bytes @ 0x0
   381   000100                     	ds	150
   382   000196                     main@expected_values:
   383                           	callstack 0
   384                           
   385                           ; 54 bytes @ 0x96
   386   000196                     	ds	54
   387   0001CC                     main@clear_read_check:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0xCC
   391   0001CC                     	ds	2
   392   0001CE                     main@PWMcycle:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0xCE
   396   0001CE                     	ds	1
   397   0001CF                     main@i_1241:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0xCF
   401   0001CF                     	ds	2
   402   0001D1                     main@i_1243:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0xD1
   406   0001D1                     	ds	2
   407   0001D3                     main@red_read:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0xD3
   411   0001D3                     	ds	2
   412   0001D5                     main@green_read:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xD5
   416   0001D5                     	ds	2
   417   0001D7                     main@blue_read:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0xD7
   421   0001D7                     	ds	2
   422   0001D9                     main@clear_read:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0xD9
   426   0001D9                     	ds	2
   427   0001DB                     main@i:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0xDB
   431   0001DB                     	ds	1
   432   0001DC                     main@motorL:
   433                           	callstack 0
   434                           
   435                           ; 9 bytes @ 0xDC
   436   0001DC                     	ds	9
   437   0001E5                     main@motorR:
   438                           	callstack 0
   439                           
   440                           ; 9 bytes @ 0xE5
   441   0001E5                     	ds	9
   442                           
   443                           	psect	cstackBANK0
   444   0000D9                     __pcstackBANK0:
   445                           	callstack 0
   446   0000D9                     ?_vfprintf:
   447                           	callstack 0
   448   0000D9                     vfprintf@fp:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x0
   452   0000D9                     	ds	2
   453   0000DB                     vfprintf@fmt:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x2
   457   0000DB                     	ds	2
   458   0000DD                     vfprintf@ap:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x4
   462   0000DD                     	ds	2
   463   0000DF                     ?_sprintf:
   464                           	callstack 0
   465   0000DF                     sprintf@s:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x6
   469   0000DF                     	ds	2
   470   0000E1                     sprintf@fmt:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x8
   474   0000E1                     	ds	10
   475   0000EB                     sprintf@ap:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x12
   479   0000EB                     	ds	2
   480   0000ED                     sprintf@f:
   481                           	callstack 0
   482                           
   483                           ; 11 bytes @ 0x14
   484   0000ED                     	ds	11
   485   0000F8                     ??_main:
   486                           
   487                           ; 1 bytes @ 0x1F
   488   0000F8                     	ds	2
   489                           
   490                           	psect	cstackCOMRAM
   491   000001                     __pcstackCOMRAM:
   492                           	callstack 0
   493   000001                     ??i2_I2C_2_Master_Idle:
   494   000001                     
   495                           ; 1 bytes @ 0x0
   496   000001                     	ds	1
   497   000002                     i2I2C_2_Master_Write@data_byte:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x1
   501   000002                     	ds	1
   502   000003                     ??_HighISR:
   503   000003                     
   504                           ; 1 bytes @ 0x2
   505   000003                     	ds	2
   506   000005                     ??_I2C_2_Master_Idle:
   507   000005                     ?___wmul:
   508                           	callstack 0
   509   000005                     ?___aodiv:
   510                           	callstack 0
   511   000005                     ?___aomod:
   512                           	callstack 0
   513   000005                     sendCharSerial4@charToSend:
   514                           	callstack 0
   515   000005                     ___wmul@multiplier:
   516                           	callstack 0
   517   000005                     fputc@c:
   518                           	callstack 0
   519   000005                     ___aodiv@dividend:
   520                           	callstack 0
   521   000005                     ___aomod@dividend:
   522                           	callstack 0
   523                           
   524                           ; 8 bytes @ 0x4
   525   000005                     	ds	1
   526   000006                     ??_I2C_2_Master_Read:
   527   000006                     I2C_2_Master_Write@data_byte:
   528                           	callstack 0
   529   000006                     sendStringSerial4@string:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x5
   533   000006                     	ds	1
   534   000007                     color_writetoaddr@value:
   535                           	callstack 0
   536   000007                     I2C_2_Master_Read@ack:
   537                           	callstack 0
   538   000007                     ___wmul@multiplicand:
   539                           	callstack 0
   540   000007                     fputc@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x6
   544   000007                     	ds	1
   545   000008                     color_writetoaddr@address:
   546                           	callstack 0
   547   000008                     I2C_2_Master_Read@tmp:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x7
   551   000008                     	ds	1
   552   000009                     ??_fputc:
   553   000009                     ??_color_click_init:
   554   000009                     ?_color_read_Red:
   555                           	callstack 0
   556   000009                     ?_color_read_Green:
   557                           	callstack 0
   558   000009                     ?_color_read_Blue:
   559                           	callstack 0
   560   000009                     ?_color_read_Clear:
   561                           	callstack 0
   562   000009                     set_interrupt_threshold@AILT:
   563                           	callstack 0
   564   000009                     ___wmul@product:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x8
   568   000009                     	ds	2
   569   00000B                     ??_color_read_Red:
   570   00000B                     ??_color_read_Green:
   571   00000B                     ??_color_read_Blue:
   572   00000B                     ??_color_read_Clear:
   573   00000B                     ?___lwdiv:
   574                           	callstack 0
   575   00000B                     set_interrupt_threshold@AIHT:
   576                           	callstack 0
   577   00000B                     ___lwdiv@dividend:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xA
   581   00000B                     	ds	2
   582   00000D                     set_interrupt_threshold@persistence:
   583                           	callstack 0
   584   00000D                     ___lwdiv@divisor:
   585                           	callstack 0
   586   00000D                     ___aodiv@divisor:
   587                           	callstack 0
   588   00000D                     ___aomod@divisor:
   589                           	callstack 0
   590                           
   591                           ; 8 bytes @ 0xC
   592   00000D                     	ds	1
   593   00000E                     color_read_Red@tmp:
   594                           	callstack 0
   595   00000E                     color_read_Green@tmp:
   596                           	callstack 0
   597   00000E                     color_read_Blue@tmp:
   598                           	callstack 0
   599   00000E                     color_read_Clear@tmp:
   600                           	callstack 0
   601   00000E                     fputs@s:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0xD
   605   00000E                     	ds	1
   606   00000F                     _set_interrupt_threshold$2032:
   607                           	callstack 0
   608   00000F                     ___lwdiv@quotient:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0xE
   612   00000F                     	ds	1
   613   000010                     _set_interrupt_threshold$2033:
   614                           	callstack 0
   615   000010                     collect_avg_readings@red_read:
   616                           	callstack 0
   617   000010                     fputs@fp:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0xF
   621   000010                     	ds	1
   622   000011                     ___lwdiv@counter:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x10
   626   000011                     	ds	1
   627   000012                     fputs@c:
   628                           	callstack 0
   629   000012                     setMotorPWM@m:
   630                           	callstack 0
   631   000012                     collect_avg_readings@green_read:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x11
   635   000012                     	ds	1
   636   000013                     fputs@i:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x12
   640   000013                     	ds	1
   641   000014                     ??_setMotorPWM:
   642   000014                     collect_avg_readings@blue_read:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x13
   646   000014                     	ds	1
   647   000015                     ___aodiv@counter:
   648                           	callstack 0
   649   000015                     ___aomod@counter:
   650                           	callstack 0
   651   000015                     pad@fp:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x14
   655   000015                     	ds	1
   656   000016                     ??_collect_avg_readings:
   657   000016                     setMotorPWM@posDuty:
   658                           	callstack 0
   659   000016                     ___aodiv@sign:
   660                           	callstack 0
   661   000016                     ___aomod@sign:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x15
   665   000016                     	ds	1
   666   000017                     ?_abs:
   667                           	callstack 0
   668   000017                     setMotorPWM@negDuty:
   669                           	callstack 0
   670   000017                     abs@a:
   671                           	callstack 0
   672   000017                     pad@buf:
   673                           	callstack 0
   674   000017                     ___aodiv@quotient:
   675                           	callstack 0
   676                           
   677                           ; 8 bytes @ 0x16
   678   000017                     	ds	1
   679   000018                     collect_avg_readings@i:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x17
   683   000018                     	ds	1
   684   000019                     ??_abs:
   685   000019                     pad@p:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x18
   689   000019                     	ds	1
   690   00001A                     collect_avg_readings@i_1566:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x19
   694   00001A                     	ds	1
   695   00001B                     ??_pad:
   696                           
   697                           ; 1 bytes @ 0x1A
   698   00001B                     	ds	1
   699   00001C                     collect_avg_readings@i_1567:
   700                           	callstack 0
   701   00001C                     pad@i:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x1B
   705   00001C                     	ds	2
   706   00001E                     collect_avg_readings@i_1568:
   707                           	callstack 0
   708   00001E                     pad@w:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x1D
   712   00001E                     	ds	2
   713   000020                     dtoa@fp:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x1F
   717   000020                     	ds	2
   718   000022                     dtoa@d:
   719                           	callstack 0
   720                           
   721                           ; 8 bytes @ 0x21
   722   000022                     	ds	8
   723   00002A                     ??_dtoa:
   724                           
   725                           ; 1 bytes @ 0x29
   726   00002A                     	ds	8
   727   000032                     _dtoa$2551:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x31
   731   000032                     	ds	2
   732   000034                     dtoa@p:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x33
   736   000034                     	ds	2
   737   000036                     dtoa@w:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x35
   741   000036                     	ds	2
   742   000038                     dtoa@n:
   743                           	callstack 0
   744                           
   745                           ; 8 bytes @ 0x37
   746   000038                     	ds	8
   747   000040                     dtoa@s:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x3F
   751   000040                     	ds	1
   752   000041                     dtoa@i:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x40
   756   000041                     	ds	2
   757   000043                     vfpfcnvrt@fp:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x42
   761   000043                     	ds	2
   762   000045                     vfpfcnvrt@fmt:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x44
   766   000045                     	ds	2
   767   000047                     vfpfcnvrt@ap:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x46
   771   000047                     	ds	2
   772   000049                     ??_vfpfcnvrt:
   773                           
   774                           ; 1 bytes @ 0x48
   775   000049                     	ds	2
   776   00004B                     vfpfcnvrt@convarg:
   777                           	callstack 0
   778                           
   779                           ; 8 bytes @ 0x4A
   780   00004B                     	ds	8
   781   000053                     vfpfcnvrt@cp:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x52
   785   000053                     	ds	2
   786   000055                     vfprintf@cfmt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x54
   790   000055                     	ds	2
   791   000057                     
   792                           ; 1 bytes @ 0x56
   793 ;;
   794 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   795 ;;
   796 ;; *************** function _main *****************
   797 ;; Defined at:
   798 ;;		line 21 in file "main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  i               2  209[BANK1 ] int 
   803 ;;  i               2  207[BANK1 ] int 
   804 ;;  i               1  219[BANK1 ] enum E14569
   805 ;;  buf           150    0[BANK1 ] unsigned char [150]
   806 ;;  ReturnHomeAr  120    0        unsigned int [30][2]
   807 ;;  expected_val   54  150[BANK1 ] unsigned int [9][3]
   808 ;;  motorR          9  229[BANK1 ] struct DC_motor
   809 ;;  motorL          9  220[BANK1 ] struct DC_motor
   810 ;;  clear_read      2  217[BANK1 ] unsigned int 
   811 ;;  blue_read       2  215[BANK1 ] unsigned int 
   812 ;;  green_read      2  213[BANK1 ] unsigned int 
   813 ;;  red_read        2  211[BANK1 ] unsigned int 
   814 ;;  clear_read_c    2  204[BANK1 ] unsigned int 
   815 ;;  PWMcycle        1  206[BANK1 ] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;      Locals:         0       0     238       0       0       0       0       0       0       0       0       0       
      +0       0       0
   827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;      Totals:         0       2     238       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;Total ram usage:      240 bytes
   830 ;; Hardware stack levels required when called: 12
   831 ;; This function calls:
   832 ;;		_I2C_2_Master_Init
   833 ;;		_Interrupts_init
   834 ;;		_LEDSon_init
   835 ;;		_collect_avg_readings
   836 ;;		_color_click_init
   837 ;;		_color_read_Blue
   838 ;;		_color_read_Clear
   839 ;;		_color_read_Green
   840 ;;		_color_read_Red
   841 ;;		_initDCmotorsPWM
   842 ;;		_initUSART4
   843 ;;		_sendStringSerial4
   844 ;;		_setMotorPWM
   845 ;;		_sprintf
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text0
   852   000E7C                     __ptext0:
   853                           	callstack 0
   854   000E7C                     _main:
   855                           	callstack 19
   856   000E7C                     
   857                           ;main.c: 26:     LEDSon_init();
   858   000E7C  EC60  F011         	call	_LEDSon_init	;wreg free
   859   000E80                     
   860                           ;main.c: 27:     I2C_2_Master_Init();
   861   000E80  EC10  F011         	call	_I2C_2_Master_Init	;wreg free
   862   000E84                     
   863                           ;main.c: 28:     color_click_init();
   864   000E84  ECDE  F010         	call	_color_click_init	;wreg free
   865   000E88                     
   866                           ;main.c: 29:     initDCmotorsPWM();
   867   000E88  EC7A  F00E         	call	_initDCmotorsPWM	;wreg free
   868   000E8C                     
   869                           ;main.c: 30:     initUSART4();
   870   000E8C  EC71  F011         	call	_initUSART4	;wreg free
   871   000E90                     
   872                           ;main.c: 31:     Interrupts_init();
   873   000E90  ECBF  F010         	call	_Interrupts_init	;wreg free
   874   000E94                     
   875                           ;main.c: 33:     TRISFbits.TRISF2=1;
   876   000E94  8486               	bsf	134,2,c	;volatile
   877   000E96                     
   878                           ;main.c: 34:     ANSELFbits.ANSELF2=0;
   879   000E96  010E               	movlb	14	; () banked
   880   000E98  95B4               	bcf	180,2,b	;volatile
   881   000E9A                     
   882                           ; BSR set to: 14
   883                           ;main.c: 42:     unsigned char PWMcycle = T2PR;
   884   000E9A  CFBC F1CE          	movff	4028,main@PWMcycle	;volatile
   885                           
   886                           ;main.c: 44:     struct DC_motor motorL, motorR;;main.c: 46:     motorL.power=0;
   887   000E9E  0E00               	movlw	0
   888   000EA0  0101               	movlb	1	; () banked
   889   000EA2  6FDC               	movwf	main@motorL& (0+255),b
   890                           
   891                           ;main.c: 47:     motorL.direction=1;
   892   000EA4  0E01               	movlw	1
   893   000EA6  6FDD               	movwf	(main@motorL+1)& (0+255),b
   894                           
   895                           ;main.c: 48:     motorL.brakemode=1;
   896   000EA8  0E01               	movlw	1
   897   000EAA  6FDE               	movwf	(main@motorL+2)& (0+255),b
   898   000EAC                     
   899                           ; BSR set to: 1
   900                           ;main.c: 49:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   901   000EAC  0EAA               	movlw	170
   902   000EAE  6FE1               	movwf	(main@motorL+5)& (0+255),b
   903   000EB0  0E0F               	movlw	15
   904   000EB2  6FE2               	movwf	(main@motorL+6)& (0+255),b
   905   000EB4                     
   906                           ; BSR set to: 1
   907                           ;main.c: 50:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   908   000EB4  0EA6               	movlw	166
   909   000EB6  6FE3               	movwf	(main@motorL+7)& (0+255),b
   910   000EB8  0E0F               	movlw	15
   911   000EBA  6FE4               	movwf	(main@motorL+8)& (0+255),b
   912   000EBC                     
   913                           ; BSR set to: 1
   914                           ;main.c: 51:     motorL.PWMperiod=PWMcycle;
   915   000EBC  C1CE  F1DF         	movff	main@PWMcycle,main@motorL+3
   916   000EC0  6BE0               	clrf	(main@motorL+4)& (0+255),b
   917                           
   918                           ;main.c: 53:     motorR.power=0;
   919   000EC2  0E00               	movlw	0
   920   000EC4  6FE5               	movwf	main@motorR& (0+255),b
   921                           
   922                           ;main.c: 54:     motorR.direction=1;
   923   000EC6  0E01               	movlw	1
   924   000EC8  6FE6               	movwf	(main@motorR+1)& (0+255),b
   925                           
   926                           ;main.c: 55:     motorR.brakemode=1;
   927   000ECA  0E01               	movlw	1
   928   000ECC  6FE7               	movwf	(main@motorR+2)& (0+255),b
   929   000ECE                     
   930                           ; BSR set to: 1
   931                           ;main.c: 56:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   932   000ECE  0E25               	movlw	37
   933   000ED0  6FEA               	movwf	(main@motorR+5)& (0+255),b
   934   000ED2  0E0F               	movlw	15
   935   000ED4  6FEB               	movwf	(main@motorR+6)& (0+255),b
   936   000ED6                     
   937                           ; BSR set to: 1
   938                           ;main.c: 57:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   939   000ED6  0E21               	movlw	33
   940   000ED8  6FEC               	movwf	(main@motorR+7)& (0+255),b
   941   000EDA  0E0F               	movlw	15
   942   000EDC  6FED               	movwf	(main@motorR+8)& (0+255),b
   943   000EDE                     
   944                           ; BSR set to: 1
   945                           ;main.c: 58:     motorR.PWMperiod=PWMcycle;
   946   000EDE  C1CE  F1E8         	movff	main@PWMcycle,main@motorR+3
   947   000EE2  6BE9               	clrf	(main@motorR+4)& (0+255),b
   948   000EE4                     
   949                           ; BSR set to: 1
   950                           ;main.c: 60:     setMotorPWM(&motorL);
   951   000EE4  0EDC               	movlw	low main@motorL
   952   000EE6  6E12               	movwf	setMotorPWM@m^0,c
   953   000EE8  0E01               	movlw	high main@motorL
   954   000EEA  6E13               	movwf	(setMotorPWM@m+1)^0,c
   955   000EEC  ECFE  F00B         	call	_setMotorPWM	;wreg free
   956   000EF0                     
   957                           ;main.c: 61:     setMotorPWM(&motorR);
   958   000EF0  0EE5               	movlw	low main@motorR
   959   000EF2  6E12               	movwf	setMotorPWM@m^0,c
   960   000EF4  0E01               	movlw	high main@motorR
   961   000EF6  6E13               	movwf	(setMotorPWM@m+1)^0,c
   962   000EF8  ECFE  F00B         	call	_setMotorPWM	;wreg free
   963                           
   964                           ;main.c: 66:     char buf[150];;main.c: 68:     unsigned int red_read = 0;
   965   000EFC  0E00               	movlw	0
   966   000EFE  0101               	movlb	1	; () banked
   967   000F00  6FD4               	movwf	(main@red_read+1)& (0+255),b
   968   000F02  0E00               	movlw	0
   969   000F04  6FD3               	movwf	main@red_read& (0+255),b
   970                           
   971                           ;main.c: 69:     unsigned int green_read = 0;
   972   000F06  0E00               	movlw	0
   973   000F08  6FD6               	movwf	(main@green_read+1)& (0+255),b
   974   000F0A  0E00               	movlw	0
   975   000F0C  6FD5               	movwf	main@green_read& (0+255),b
   976                           
   977                           ;main.c: 70:     unsigned int blue_read = 0;
   978   000F0E  0E00               	movlw	0
   979   000F10  6FD8               	movwf	(main@blue_read+1)& (0+255),b
   980   000F12  0E00               	movlw	0
   981   000F14  6FD7               	movwf	main@blue_read& (0+255),b
   982   000F16                     
   983                           ; BSR set to: 1
   984                           ;main.c: 73:     unsigned int expected_values[3][9];;main.c: 74:     unsigned int Return
      +                          HomeArray[2][30];;main.c: 84:     LATDbits.LATD4 = 0;
   985   000F16  987C               	bcf	124,4,c	;volatile
   986                           
   987                           ;main.c: 85:     for(colour i = RED; i<= BLACK; i++){
   988   000F18  0E00               	movlw	0
   989   000F1A  6FDB               	movwf	main@i& (0+255),b
   990   000F1C  EF91  F007         	goto	l240
   991   000F20                     l241:
   992                           
   993                           ;main.c: 87:             LATDbits.LATD4 = 1;
   994   000F20  887C               	bsf	124,4,c	;volatile
   995   000F22                     l240:
   996                           
   997                           ;main.c: 86:         while(PORTFbits.RF2){
   998   000F22  B48E               	btfsc	142,2,c	;volatile
   999   000F24  EF96  F007         	goto	u2051
  1000   000F28  EF98  F007         	goto	u2050
  1001   000F2C                     u2051:
  1002   000F2C  EF90  F007         	goto	l241
  1003   000F30                     u2050:
  1004   000F30                     
  1005                           ;main.c: 89:         LATDbits.LATD4 = 0;
  1006   000F30  987C               	bcf	124,4,c	;volatile
  1007   000F32                     
  1008                           ;main.c: 90:         collect_avg_readings(&red_read, &green_read, &blue_read);
  1009   000F32  0ED3               	movlw	low main@red_read
  1010   000F34  6E10               	movwf	collect_avg_readings@red_read^0,c
  1011   000F36  0E01               	movlw	high main@red_read
  1012   000F38  6E11               	movwf	(collect_avg_readings@red_read+1)^0,c
  1013   000F3A  0ED5               	movlw	low main@green_read
  1014   000F3C  6E12               	movwf	collect_avg_readings@green_read^0,c
  1015   000F3E  0E01               	movlw	high main@green_read
  1016   000F40  6E13               	movwf	(collect_avg_readings@green_read+1)^0,c
  1017   000F42  0ED7               	movlw	low main@blue_read
  1018   000F44  6E14               	movwf	collect_avg_readings@blue_read^0,c
  1019   000F46  0E01               	movlw	high main@blue_read
  1020   000F48  6E15               	movwf	(collect_avg_readings@blue_read+1)^0,c
  1021   000F4A  EC47  F00A         	call	_collect_avg_readings	;wreg free
  1022   000F4E                     
  1023                           ;main.c: 91:         expected_values[RED][i] = red_read;
  1024   000F4E  0101               	movlb	1	; () banked
  1025   000F50  51DB               	movf	main@i& (0+255),w,b
  1026   000F52  0D02               	mullw	2
  1027   000F54  0E96               	movlw	low main@expected_values
  1028   000F56  24F3               	addwf	243,w,c
  1029   000F58  6ED9               	movwf	fsr2l,c
  1030   000F5A  0E01               	movlw	high main@expected_values
  1031   000F5C  20F4               	addwfc	prodh,w,c
  1032   000F5E  6EDA               	movwf	fsr2h,c
  1033   000F60  C1D3  FFDE         	movff	main@red_read,postinc2
  1034   000F64  C1D4  FFDD         	movff	main@red_read+1,postdec2
  1035   000F68                     
  1036                           ; BSR set to: 1
  1037                           ;main.c: 92:         expected_values[GREEN][i] = green_read;
  1038   000F68  51DB               	movf	main@i& (0+255),w,b
  1039   000F6A  0D02               	mullw	2
  1040   000F6C  0E12               	movlw	18
  1041   000F6E  26F3               	addwf	243,f,c
  1042   000F70  0E00               	movlw	0
  1043   000F72  22F4               	addwfc	244,f,c
  1044   000F74  0E96               	movlw	low main@expected_values
  1045   000F76  24F3               	addwf	243,w,c
  1046   000F78  6ED9               	movwf	fsr2l,c
  1047   000F7A  0E01               	movlw	high main@expected_values
  1048   000F7C  20F4               	addwfc	prodh,w,c
  1049   000F7E  6EDA               	movwf	fsr2h,c
  1050   000F80  C1D5  FFDE         	movff	main@green_read,postinc2
  1051   000F84  C1D6  FFDD         	movff	main@green_read+1,postdec2
  1052   000F88                     
  1053                           ; BSR set to: 1
  1054                           ;main.c: 93:         expected_values[BLUE][i] = blue_read;
  1055   000F88  51DB               	movf	main@i& (0+255),w,b
  1056   000F8A  0D02               	mullw	2
  1057   000F8C  0E24               	movlw	36
  1058   000F8E  26F3               	addwf	243,f,c
  1059   000F90  0E00               	movlw	0
  1060   000F92  22F4               	addwfc	244,f,c
  1061   000F94  0E96               	movlw	low main@expected_values
  1062   000F96  24F3               	addwf	243,w,c
  1063   000F98  6ED9               	movwf	fsr2l,c
  1064   000F9A  0E01               	movlw	high main@expected_values
  1065   000F9C  20F4               	addwfc	prodh,w,c
  1066   000F9E  6EDA               	movwf	fsr2h,c
  1067   000FA0  C1D7  FFDE         	movff	main@blue_read,postinc2
  1068   000FA4  C1D8  FFDD         	movff	main@blue_read+1,postdec2
  1069   000FA8                     
  1070                           ; BSR set to: 1
  1071                           ;main.c: 94:         sprintf(buf, "\n EXPECTED: R %d, G %d, B %d  CARD: %d \n", red_read
      +                          , green_read, blue_read, i);
  1072   000FA8  0E00               	movlw	low main@buf
  1073   000FAA  0100               	movlb	0	; () banked
  1074   000FAC  6FDF               	movwf	sprintf@s& (0+255),b
  1075   000FAE  0E01               	movlw	high main@buf
  1076   000FB0  6FE0               	movwf	(sprintf@s+1)& (0+255),b
  1077   000FB2  0E01               	movlw	low STR_1
  1078   000FB4  6FE1               	movwf	sprintf@fmt& (0+255),b
  1079   000FB6  0E0E               	movlw	high STR_1
  1080   000FB8  6FE2               	movwf	(sprintf@fmt+1)& (0+255),b
  1081   000FBA  C1D3  F0E3         	movff	main@red_read,?_sprintf+4
  1082   000FBE  C1D4  F0E4         	movff	main@red_read+1,?_sprintf+5
  1083   000FC2  C1D5  F0E5         	movff	main@green_read,?_sprintf+6
  1084   000FC6  C1D6  F0E6         	movff	main@green_read+1,?_sprintf+7
  1085   000FCA  C1D7  F0E7         	movff	main@blue_read,?_sprintf+8
  1086   000FCE  C1D8  F0E8         	movff	main@blue_read+1,?_sprintf+9
  1087   000FD2  C1DB  F0E9         	movff	main@i,?_sprintf+10
  1088   000FD6  6BEA               	clrf	(?_sprintf+11)& (0+255),b
  1089   000FD8  EC93  F00F         	call	_sprintf	;wreg free
  1090   000FDC                     
  1091                           ;main.c: 95:         sendStringSerial4(buf);
  1092   000FDC  0E00               	movlw	low main@buf
  1093   000FDE  6E06               	movwf	sendStringSerial4@string^0,c
  1094   000FE0  0E01               	movlw	high main@buf
  1095   000FE2  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1096   000FE4  ECF8  F010         	call	_sendStringSerial4	;wreg free
  1097   000FE8                     
  1098                           ;main.c: 96:     }
  1099   000FE8  0101               	movlb	1	; () banked
  1100   000FEA  2BDB               	incf	main@i& (0+255),f,b
  1101   000FEC                     
  1102                           ; BSR set to: 1
  1103   000FEC  0E08               	movlw	8
  1104   000FEE  65DB               	cpfsgt	main@i& (0+255),b
  1105   000FF0  EFFC  F007         	goto	u2061
  1106   000FF4  EFFE  F007         	goto	u2060
  1107   000FF8                     u2061:
  1108   000FF8  EF91  F007         	goto	l240
  1109   000FFC                     u2060:
  1110   000FFC  EF02  F008         	goto	l243
  1111   001000                     l244:
  1112                           
  1113                           ;main.c: 99:             LATDbits.LATD4 = 1;
  1114   001000  887C               	bsf	124,4,c	;volatile
  1115                           
  1116                           ;main.c: 100:             LATHbits.LATH0 = 1;
  1117   001002  8080               	bsf	128,0,c	;volatile
  1118   001004                     l243:
  1119                           
  1120                           ;main.c: 98:     while(PORTFbits.RF2){
  1121   001004  B48E               	btfsc	142,2,c	;volatile
  1122   001006  EF07  F008         	goto	u2071
  1123   00100A  EF09  F008         	goto	u2070
  1124   00100E                     u2071:
  1125   00100E  EF00  F008         	goto	l244
  1126   001012                     u2070:
  1127   001012                     
  1128                           ;main.c: 102:     for (int i = 0; i <= 500; i++){
  1129   001012  0E00               	movlw	0
  1130   001014  0101               	movlb	1	; () banked
  1131   001016  6FD0               	movwf	(main@i_1241+1)& (0+255),b
  1132   001018  0E00               	movlw	0
  1133   00101A  6FCF               	movwf	main@i_1241& (0+255),b
  1134   00101C                     l3492:
  1135                           
  1136                           ; BSR set to: 1
  1137                           ;main.c: 103:         clear_read = color_read_Clear();
  1138   00101C  ECBC  F00F         	call	_color_read_Clear	;wreg free
  1139   001020  C009  F1D9         	movff	?_color_read_Clear,main@clear_read
  1140   001024  C00A  F1DA         	movff	?_color_read_Clear+1,main@clear_read+1
  1141   001028                     
  1142                           ;main.c: 104:     }
  1143   001028  0101               	movlb	1	; () banked
  1144   00102A  4BCF               	infsnz	main@i_1241& (0+255),f,b
  1145   00102C  2BD0               	incf	(main@i_1241+1)& (0+255),f,b
  1146   00102E                     
  1147                           ; BSR set to: 1
  1148   00102E  BFD0               	btfsc	(main@i_1241+1)& (0+255),7,b
  1149   001030  EF23  F008         	goto	u2081
  1150   001034  0EF5               	movlw	245
  1151   001036  5DCF               	subwf	main@i_1241& (0+255),w,b
  1152   001038  0E01               	movlw	1
  1153   00103A  59D0               	subwfb	(main@i_1241+1)& (0+255),w,b
  1154   00103C  A0D8               	btfss	status,0,c
  1155   00103E  EF23  F008         	goto	u2081
  1156   001042  EF25  F008         	goto	u2080
  1157   001046                     u2081:
  1158   001046  EF0E  F008         	goto	l3492
  1159   00104A                     u2080:
  1160   00104A                     
  1161                           ; BSR set to: 1
  1162                           ;main.c: 105:     for(int i = 0; i <= 2; i++){
  1163   00104A  0E00               	movlw	0
  1164   00104C  6FD2               	movwf	(main@i_1243+1)& (0+255),b
  1165   00104E  0E00               	movlw	0
  1166   001050  6FD1               	movwf	main@i_1243& (0+255),b
  1167   001052                     l3504:
  1168                           
  1169                           ; BSR set to: 1
  1170                           ;main.c: 106:         clear_read += color_read_Clear();
  1171   001052  ECBC  F00F         	call	_color_read_Clear	;wreg free
  1172   001056  5009               	movf	?_color_read_Clear^0,w,c
  1173   001058  0101               	movlb	1	; () banked
  1174   00105A  27D9               	addwf	main@clear_read& (0+255),f,b
  1175   00105C  500A               	movf	(?_color_read_Clear+1)^0,w,c
  1176   00105E  23DA               	addwfc	(main@clear_read+1)& (0+255),f,b
  1177   001060                     
  1178                           ; BSR set to: 1
  1179                           ;main.c: 107:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1180   001060  0E11               	movlw	17
  1181   001062  0100               	movlb	0	; () banked
  1182   001064  6FF9               	movwf	(??_main+1)& (0+255),b
  1183   001066  0E3C               	movlw	60
  1184   001068  6FF8               	movwf	??_main& (0+255),b
  1185   00106A  0ECB               	movlw	203
  1186   00106C                     u2177:
  1187   00106C  2EE8               	decfsz	wreg,f,c
  1188   00106E  D7FE               	bra	u2177
  1189   001070  2FF8               	decfsz	??_main& (0+255),f,b
  1190   001072  D7FC               	bra	u2177
  1191   001074  2FF9               	decfsz	(??_main+1)& (0+255),f,b
  1192   001076  D7FA               	bra	u2177
  1193   001078                     
  1194                           ;main.c: 108:     }
  1195   001078  0101               	movlb	1	; () banked
  1196   00107A  4BD1               	infsnz	main@i_1243& (0+255),f,b
  1197   00107C  2BD2               	incf	(main@i_1243+1)& (0+255),f,b
  1198   00107E                     
  1199                           ; BSR set to: 1
  1200   00107E  BFD2               	btfsc	(main@i_1243+1)& (0+255),7,b
  1201   001080  EF4B  F008         	goto	u2091
  1202   001084  51D2               	movf	(main@i_1243+1)& (0+255),w,b
  1203   001086  E109               	bnz	u2090
  1204   001088  0E03               	movlw	3
  1205   00108A  5DD1               	subwf	main@i_1243& (0+255),w,b
  1206   00108C  A0D8               	btfss	status,0,c
  1207   00108E  EF4B  F008         	goto	u2091
  1208   001092  EF4D  F008         	goto	u2090
  1209   001096                     u2091:
  1210   001096  EF29  F008         	goto	l3504
  1211   00109A                     u2090:
  1212   00109A                     
  1213                           ; BSR set to: 1
  1214                           ;main.c: 109:     clear_read = clear_read/4;
  1215   00109A  C1D9  F0F8         	movff	main@clear_read,??_main
  1216   00109E  C1DA  F0F9         	movff	main@clear_read+1,??_main+1
  1217   0010A2  0100               	movlb	0	; () banked
  1218   0010A4  90D8               	bcf	status,0,c
  1219   0010A6  33F9               	rrcf	(??_main+1)& (0+255),f,b
  1220   0010A8  33F8               	rrcf	??_main& (0+255),f,b
  1221   0010AA  90D8               	bcf	status,0,c
  1222   0010AC  33F9               	rrcf	(??_main+1)& (0+255),f,b
  1223   0010AE  33F8               	rrcf	??_main& (0+255),f,b
  1224   0010B0  C0F8  F1D9         	movff	??_main,main@clear_read
  1225   0010B4  C0F9  F1DA         	movff	??_main+1,main@clear_read+1
  1226   0010B8                     
  1227                           ; BSR set to: 0
  1228                           ;main.c: 111:     sprintf(buf, "\n Expected clear: %d \n", clear_read);
  1229   0010B8  0E00               	movlw	low main@buf
  1230   0010BA  6FDF               	movwf	sprintf@s& (0+255),b
  1231   0010BC  0E01               	movlw	high main@buf
  1232   0010BE  6FE0               	movwf	(sprintf@s+1)& (0+255),b
  1233   0010C0  0E44               	movlw	low STR_2
  1234   0010C2  6FE1               	movwf	sprintf@fmt& (0+255),b
  1235   0010C4  0E0E               	movlw	high STR_2
  1236   0010C6  6FE2               	movwf	(sprintf@fmt+1)& (0+255),b
  1237   0010C8  C1D9  F0E3         	movff	main@clear_read,?_sprintf+4
  1238   0010CC  C1DA  F0E4         	movff	main@clear_read+1,?_sprintf+5
  1239   0010D0  EC93  F00F         	call	_sprintf	;wreg free
  1240   0010D4                     
  1241                           ;main.c: 112:     sendStringSerial4(buf);
  1242   0010D4  0E00               	movlw	low main@buf
  1243   0010D6  6E06               	movwf	sendStringSerial4@string^0,c
  1244   0010D8  0E01               	movlw	high main@buf
  1245   0010DA  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1246   0010DC  ECF8  F010         	call	_sendStringSerial4	;wreg free
  1247   0010E0                     
  1248                           ;main.c: 114:     unsigned int clear_read_check = clear_read + 800;
  1249   0010E0  0E20               	movlw	32
  1250   0010E2  0101               	movlb	1	; () banked
  1251   0010E4  25D9               	addwf	main@clear_read& (0+255),w,b
  1252   0010E6  6FCC               	movwf	main@clear_read_check& (0+255),b
  1253   0010E8  0E03               	movlw	3
  1254   0010EA  21DA               	addwfc	(main@clear_read+1)& (0+255),w,b
  1255   0010EC  6FCD               	movwf	(main@clear_read_check+1)& (0+255),b
  1256   0010EE                     
  1257                           ; BSR set to: 1
  1258                           ;main.c: 145:     LATHbits.LATH3=0;
  1259   0010EE  9680               	bcf	128,3,c	;volatile
  1260   0010F0                     
  1261                           ; BSR set to: 1
  1262                           ;main.c: 146:     TRISHbits.TRISH3=0;
  1263   0010F0  9688               	bcf	136,3,c	;volatile
  1264   0010F2                     
  1265                           ; BSR set to: 1
  1266                           ;main.c: 148:     LATDbits.LATD7=0;
  1267   0010F2  9E7C               	bcf	124,7,c	;volatile
  1268   0010F4                     
  1269                           ; BSR set to: 1
  1270                           ;main.c: 149:     TRISDbits.TRISD7=0;
  1271   0010F4  9E84               	bcf	132,7,c	;volatile
  1272   0010F6                     l3528:
  1273                           
  1274                           ;main.c: 154:         red_read = color_read_Red();
  1275   0010F6  ECE4  F00F         	call	_color_read_Red	;wreg free
  1276   0010FA  C009  F1D3         	movff	?_color_read_Red,main@red_read
  1277   0010FE  C00A  F1D4         	movff	?_color_read_Red+1,main@red_read+1
  1278   001102                     
  1279                           ;main.c: 155:         blue_read = color_read_Blue();
  1280   001102  EC34  F010         	call	_color_read_Blue	;wreg free
  1281   001106  C009  F1D7         	movff	?_color_read_Blue,main@blue_read
  1282   00110A  C00A  F1D8         	movff	?_color_read_Blue+1,main@blue_read+1
  1283   00110E                     
  1284                           ;main.c: 156:         green_read = color_read_Green();
  1285   00110E  EC0C  F010         	call	_color_read_Green	;wreg free
  1286   001112  C009  F1D5         	movff	?_color_read_Green,main@green_read
  1287   001116  C00A  F1D6         	movff	?_color_read_Green+1,main@green_read+1
  1288   00111A                     
  1289                           ;main.c: 157:         clear_read = color_read_Clear();
  1290   00111A  ECBC  F00F         	call	_color_read_Clear	;wreg free
  1291   00111E  C009  F1D9         	movff	?_color_read_Clear,main@clear_read
  1292   001122  C00A  F1DA         	movff	?_color_read_Clear+1,main@clear_read+1
  1293   001126                     
  1294                           ;main.c: 160:         sprintf(buf, "Raw %d, %d, %d, %d \n", red_read, green_read, blue_r
      +                          ead, clear_read);
  1295   001126  0E00               	movlw	low main@buf
  1296   001128  0100               	movlb	0	; () banked
  1297   00112A  6FDF               	movwf	sprintf@s& (0+255),b
  1298   00112C  0E01               	movlw	high main@buf
  1299   00112E  6FE0               	movwf	(sprintf@s+1)& (0+255),b
  1300   001130  0E5B               	movlw	low STR_3
  1301   001132  6FE1               	movwf	sprintf@fmt& (0+255),b
  1302   001134  0E0E               	movlw	high STR_3
  1303   001136  6FE2               	movwf	(sprintf@fmt+1)& (0+255),b
  1304   001138  C1D3  F0E3         	movff	main@red_read,?_sprintf+4
  1305   00113C  C1D4  F0E4         	movff	main@red_read+1,?_sprintf+5
  1306   001140  C1D5  F0E5         	movff	main@green_read,?_sprintf+6
  1307   001144  C1D6  F0E6         	movff	main@green_read+1,?_sprintf+7
  1308   001148  C1D7  F0E7         	movff	main@blue_read,?_sprintf+8
  1309   00114C  C1D8  F0E8         	movff	main@blue_read+1,?_sprintf+9
  1310   001150  C1D9  F0E9         	movff	main@clear_read,?_sprintf+10
  1311   001154  C1DA  F0EA         	movff	main@clear_read+1,?_sprintf+11
  1312   001158  EC93  F00F         	call	_sprintf	;wreg free
  1313   00115C                     
  1314                           ;main.c: 161:         sendStringSerial4(buf);
  1315   00115C  0E00               	movlw	low main@buf
  1316   00115E  6E06               	movwf	sendStringSerial4@string^0,c
  1317   001160  0E01               	movlw	high main@buf
  1318   001162  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1319   001164  ECF8  F010         	call	_sendStringSerial4	;wreg free
  1320                           
  1321                           ;main.c: 162:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1322   001168  0E09               	movlw	9
  1323   00116A  0100               	movlb	0	; () banked
  1324   00116C  6FF9               	movwf	(??_main+1)& (0+255),b
  1325   00116E  0E1E               	movlw	30
  1326   001170  6FF8               	movwf	??_main& (0+255),b
  1327   001172  0EE4               	movlw	228
  1328   001174                     u2187:
  1329   001174  2EE8               	decfsz	wreg,f,c
  1330   001176  D7FE               	bra	u2187
  1331   001178  2FF8               	decfsz	??_main& (0+255),f,b
  1332   00117A  D7FC               	bra	u2187
  1333   00117C  2FF9               	decfsz	(??_main+1)& (0+255),f,b
  1334   00117E  D7FA               	bra	u2187
  1335   001180  F000               	nop	
  1336   001182                     
  1337                           ;main.c: 163:         LATHbits.LATH3=!LATHbits.LATH3;
  1338   001182  A680               	btfss	128,3,c	;volatile
  1339   001184  EFC6  F008         	goto	u2101
  1340   001188  EFCB  F008         	goto	u2100
  1341   00118C                     u2101:
  1342   00118C  0100               	movlb	0	; () banked
  1343   00118E  6BF8               	clrf	??_main& (0+255),b
  1344   001190  2BF8               	incf	??_main& (0+255),f,b
  1345   001192  EFCD  F008         	goto	u2118
  1346   001196                     u2100:
  1347   001196  0100               	movlb	0	; () banked
  1348   001198  6BF8               	clrf	??_main& (0+255),b
  1349   00119A                     u2118:
  1350   00119A  47F8               	rlncf	??_main& (0+255),f,b
  1351   00119C  47F8               	rlncf	??_main& (0+255),f,b
  1352   00119E  47F8               	rlncf	??_main& (0+255),f,b
  1353   0011A0  5080               	movf	128,w,c	;volatile
  1354   0011A2  19F8               	xorwf	??_main& (0+255),w,b
  1355   0011A4  0BF7               	andlw	-9
  1356   0011A6  19F8               	xorwf	??_main& (0+255),w,b
  1357   0011A8  6E80               	movwf	128,c	;volatile
  1358   0011AA                     
  1359                           ; BSR set to: 0
  1360                           ;main.c: 165:         if (clear_read > clear_read_check) {
  1361   0011AA  0101               	movlb	1	; () banked
  1362   0011AC  51D9               	movf	main@clear_read& (0+255),w,b
  1363   0011AE  5DCC               	subwf	main@clear_read_check& (0+255),w,b
  1364   0011B0  51DA               	movf	(main@clear_read+1)& (0+255),w,b
  1365   0011B2  59CD               	subwfb	(main@clear_read_check+1)& (0+255),w,b
  1366   0011B4  B0D8               	btfsc	status,0,c
  1367   0011B6  EFDF  F008         	goto	u2121
  1368   0011BA  EFE1  F008         	goto	u2120
  1369   0011BE                     u2121:
  1370   0011BE  EF7B  F008         	goto	l3528
  1371   0011C2                     u2120:
  1372   0011C2                     
  1373                           ; BSR set to: 1
  1374                           ;main.c: 166:             LATDbits.LATD7=!LATDbits.LATD7;
  1375   0011C2  AE7C               	btfss	124,7,c	;volatile
  1376   0011C4  EFE6  F008         	goto	u2131
  1377   0011C8  EFEB  F008         	goto	u2130
  1378   0011CC                     u2131:
  1379   0011CC  0100               	movlb	0	; () banked
  1380   0011CE  6BF8               	clrf	??_main& (0+255),b
  1381   0011D0  2BF8               	incf	??_main& (0+255),f,b
  1382   0011D2  EFED  F008         	goto	u2148
  1383   0011D6                     u2130:
  1384   0011D6  0100               	movlb	0	; () banked
  1385   0011D8  6BF8               	clrf	??_main& (0+255),b
  1386   0011DA                     u2148:
  1387   0011DA  33F8               	rrcf	??_main& (0+255),f,b
  1388   0011DC  33F8               	rrcf	??_main& (0+255),f,b
  1389   0011DE  507C               	movf	124,w,c	;volatile
  1390   0011E0  19F8               	xorwf	??_main& (0+255),w,b
  1391   0011E2  0B7F               	andlw	-129
  1392   0011E4  19F8               	xorwf	??_main& (0+255),w,b
  1393   0011E6  6E7C               	movwf	124,c	;volatile
  1394                           
  1395                           ;main.c: 167:             LATHbits.LATH1=!LATHbits.LATH1;
  1396   0011E8  A280               	btfss	128,1,c	;volatile
  1397   0011EA  EFF9  F008         	goto	u2151
  1398   0011EE  EFFD  F008         	goto	u2150
  1399   0011F2                     u2151:
  1400   0011F2  6BF8               	clrf	??_main& (0+255),b
  1401   0011F4  2BF8               	incf	??_main& (0+255),f,b
  1402   0011F6  EFFF  F008         	goto	u2168
  1403   0011FA                     u2150:
  1404   0011FA  0100               	movlb	0	; () banked
  1405   0011FC  6BF8               	clrf	??_main& (0+255),b
  1406   0011FE                     u2168:
  1407   0011FE  47F8               	rlncf	??_main& (0+255),f,b
  1408   001200  5080               	movf	128,w,c	;volatile
  1409   001202  19F8               	xorwf	??_main& (0+255),w,b
  1410   001204  0BFD               	andlw	-3
  1411   001206  19F8               	xorwf	??_main& (0+255),w,b
  1412   001208  6E80               	movwf	128,c	;volatile
  1413   00120A  EF7B  F008         	goto	l3528
  1414   00120E  EF3B  F000         	goto	start
  1415   001212                     __end_of_main:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _sprintf *****************
  1419 ;; Defined at:
  1420 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1423 ;;		 -> main@buf(150), 
  1424 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1425 ;;		 -> STR_5(10), STR_4(26), STR_3(21), STR_2(23), 
  1426 ;;		 -> STR_1(41), 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  f              11   20[BANK0 ] struct _IO_FILE
  1429 ;;  ap              2   18[BANK0 ] PTR void [1]
  1430 ;;		 -> ?_sprintf(2), 
  1431 ;;  ret             2    0        int 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  2    6[BANK0 ] int 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1441 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1442 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1444 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1445 ;;Total ram usage:       25 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 11
  1448 ;; This function calls:
  1449 ;;		_vfprintf
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;;		_card_response
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text1
  1457   001F26                     __ptext1:
  1458                           	callstack 0
  1459   001F26                     _sprintf:
  1460                           	callstack 19
  1461   001F26  0EE3               	movlw	low (?_sprintf+4)
  1462   001F28  0100               	movlb	0	; () banked
  1463   001F2A  6FEB               	movwf	sprintf@ap& (0+255),b
  1464   001F2C  0E00               	movlw	high (?_sprintf+4)
  1465   001F2E  6FEC               	movwf	(sprintf@ap+1)& (0+255),b
  1466   001F30  C0DF  F0ED         	movff	sprintf@s,sprintf@f
  1467   001F34  C0E0  F0EE         	movff	sprintf@s+1,sprintf@f+1
  1468   001F38                     
  1469                           ; BSR set to: 0
  1470   001F38  0E00               	movlw	0
  1471   001F3A  6FF1               	movwf	(sprintf@f+4)& (0+255),b
  1472   001F3C  0E00               	movlw	0
  1473   001F3E  6FF0               	movwf	(sprintf@f+3)& (0+255),b
  1474   001F40                     
  1475                           ; BSR set to: 0
  1476   001F40  0E00               	movlw	0
  1477   001F42  6FF7               	movwf	(sprintf@f+10)& (0+255),b
  1478   001F44  0E00               	movlw	0
  1479   001F46  6FF6               	movwf	(sprintf@f+9)& (0+255),b
  1480   001F48                     
  1481                           ; BSR set to: 0
  1482   001F48  0EED               	movlw	low sprintf@f
  1483   001F4A  6FD9               	movwf	vfprintf@fp& (0+255),b
  1484   001F4C  0E00               	movlw	high sprintf@f
  1485   001F4E  6FDA               	movwf	(vfprintf@fp+1)& (0+255),b
  1486   001F50  C0E1  F0DB         	movff	sprintf@fmt,vfprintf@fmt
  1487   001F54  C0E2  F0DC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1488   001F58  0EEB               	movlw	low sprintf@ap
  1489   001F5A  6FDD               	movwf	vfprintf@ap& (0+255),b
  1490   001F5C  0E00               	movlw	high sprintf@ap
  1491   001F5E  6FDE               	movwf	(vfprintf@ap+1)& (0+255),b
  1492   001F60  EC69  F00F         	call	_vfprintf	;wreg free
  1493   001F64  0100               	movlb	0	; () banked
  1494   001F66  51F0               	movf	(sprintf@f+3)& (0+255),w,b
  1495   001F68  25DF               	addwf	sprintf@s& (0+255),w,b
  1496   001F6A  6ED9               	movwf	fsr2l,c
  1497   001F6C  51F1               	movf	(sprintf@f+4)& (0+255),w,b
  1498   001F6E  21E0               	addwfc	(sprintf@s+1)& (0+255),w,b
  1499   001F70  6EDA               	movwf	fsr2h,c
  1500   001F72  0E00               	movlw	0
  1501   001F74  6EDF               	movwf	indf2,c
  1502   001F76                     
  1503                           ; BSR set to: 0
  1504   001F76  0012               	return		;funcret
  1505   001F78                     __end_of_sprintf:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function _vfprintf *****************
  1509 ;; Defined at:
  1510 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1513 ;;		 -> sprintf@f(11), 
  1514 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1515 ;;		 -> STR_5(10), STR_4(26), STR_3(21), STR_2(23), 
  1516 ;;		 -> STR_1(41), 
  1517 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1518 ;;		 -> sprintf@ap(2), 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  1521 ;;		 -> STR_5(10), STR_4(26), STR_3(21), STR_2(23), 
  1522 ;;		 -> STR_1(41), 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2    0[BANK0 ] int 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1532 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1535 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1536 ;;Total ram usage:        8 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 10
  1539 ;; This function calls:
  1540 ;;		_vfpfcnvrt
  1541 ;; This function is called by:
  1542 ;;		_sprintf
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text2
  1547   001ED2                     __ptext2:
  1548                           	callstack 0
  1549   001ED2                     _vfprintf:
  1550                           	callstack 19
  1551   001ED2                     
  1552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1553   001ED2  C0DB  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  1554   001ED6  C0DC  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1557   001EDA  EF7D  F00F         	goto	l3400
  1558   001EDE                     l3398:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1561   001EDE  C0D9  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1562   001EE2  C0DA  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1563   001EE6  0E55               	movlw	low vfprintf@cfmt
  1564   001EE8  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1565   001EEA  0E00               	movlw	high vfprintf@cfmt
  1566   001EEC  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1567   001EEE  C0DD  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1568   001EF2  C0DE  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1569   001EF6  EC66  F00D         	call	_vfpfcnvrt	;wreg free
  1570   001EFA                     l3400:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1573   001EFA  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  1574   001EFE  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1575   001F02                     	if	0	;tblptru may be non-zero
  1576   001F02                     	endif
  1577   001F02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1578   001F02  0E00               	movlw	low (__mediumconst shr (0+16))
  1579   001F04  6EF8               	movwf	tblptru,c
  1580   001F06                     	endif
  1581   001F06  0008               	tblrd		*
  1582   001F08  50F5               	movf	tablat,w,c
  1583   001F0A  0900               	iorlw	0
  1584   001F0C  A4D8               	btfss	status,2,c
  1585   001F0E  EF8B  F00F         	goto	u2031
  1586   001F12  EF8D  F00F         	goto	u2030
  1587   001F16                     u2031:
  1588   001F16  EF6F  F00F         	goto	l3398
  1589   001F1A                     u2030:
  1590   001F1A                     
  1591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1592   001F1A  0E00               	movlw	0
  1593   001F1C  0100               	movlb	0	; () banked
  1594   001F1E  6FDA               	movwf	(?_vfprintf+1)& (0+255),b
  1595   001F20  0E00               	movlw	0
  1596   001F22  6FD9               	movwf	?_vfprintf& (0+255),b
  1597   001F24                     
  1598                           ; BSR set to: 0
  1599   001F24  0012               	return		;funcret
  1600   001F26                     __end_of_vfprintf:
  1601                           	callstack 0
  1602                           
  1603 ;; *************** function _vfpfcnvrt *****************
  1604 ;; Defined at:
  1605 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1608 ;;		 -> sprintf@f(11), 
  1609 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1610 ;;		 -> vfprintf@cfmt(2), 
  1611 ;;  ap              2   70[COMRAM] PTR PTR void 
  1612 ;;		 -> sprintf@ap(2), 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  convarg         8   74[COMRAM] struct .
  1615 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1616 ;;		 -> STR_5(10), STR_4(26), STR_3(21), STR_2(23), 
  1617 ;;		 -> STR_1(41), 
  1618 ;;  i               2    0        int 
  1619 ;;  done            2    0        int 
  1620 ;;  c               1    0        unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1630 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1633 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1634 ;;Total ram usage:       18 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 9
  1637 ;; This function calls:
  1638 ;;		_dtoa
  1639 ;;		_fputc
  1640 ;; This function is called by:
  1641 ;;		_vfprintf
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text3
  1646   001ACC                     __ptext3:
  1647                           	callstack 0
  1648   001ACC                     _vfpfcnvrt:
  1649                           	callstack 19
  1650   001ACC                     
  1651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1652   001ACC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1653   001AD0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1654   001AD4  CFDE FFF6          	movff	postinc2,tblptrl
  1655   001AD8  CFDD FFF7          	movff	postdec2,tblptrh
  1656   001ADC                     	if	0	;tblptru may be non-zero
  1657   001ADC                     	endif
  1658   001ADC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1659   001ADC  0E00               	movlw	low (__mediumconst shr (0+16))
  1660   001ADE  6EF8               	movwf	tblptru,c
  1661   001AE0                     	endif
  1662   001AE0  0008               	tblrd		*
  1663   001AE2  50F5               	movf	tablat,w,c
  1664   001AE4  0A25               	xorlw	37
  1665   001AE6  A4D8               	btfss	status,2,c
  1666   001AE8  EF78  F00D         	goto	u2001
  1667   001AEC  EF7A  F00D         	goto	u2000
  1668   001AF0                     u2001:
  1669   001AF0  EFFE  F00D         	goto	l3390
  1670   001AF4                     u2000:
  1671   001AF4                     
  1672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1673   001AF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1674   001AF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1675   001AFC  2ADE               	incf	postinc2,f,c
  1676   001AFE  0E00               	movlw	0
  1677   001B00  22DD               	addwfc	postdec2,f,c
  1678   001B02                     
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1680   001B02  0E00               	movlw	0
  1681   001B04  0100               	movlb	0	; () banked
  1682   001B06  6FB1               	movwf	(_width+1)& (0+255),b
  1683   001B08  0E00               	movlw	0
  1684   001B0A  6FB0               	movwf	_width& (0+255),b
  1685   001B0C  C0B0  F0B8         	movff	_width,_flags
  1686   001B10                     
  1687                           ; BSR set to: 0
  1688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1689   001B10  69B2               	setf	_prec& (0+255),b
  1690   001B12  69B3               	setf	(_prec+1)& (0+255),b
  1691   001B14                     
  1692                           ; BSR set to: 0
  1693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1694   001B14  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1695   001B18  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1696   001B1C  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1697   001B20  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1698   001B24                     
  1699                           ; BSR set to: 0
  1700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1701   001B24  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1702   001B28  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1703   001B2C                     	if	0	;tblptru may be non-zero
  1704   001B2C                     	endif
  1705   001B2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1706   001B2C  0E00               	movlw	low (__mediumconst shr (0+16))
  1707   001B2E  6EF8               	movwf	tblptru,c
  1708   001B30                     	endif
  1709   001B30  0008               	tblrd		*
  1710   001B32  50F5               	movf	tablat,w,c
  1711   001B34  0A64               	xorlw	100
  1712   001B36  B4D8               	btfsc	status,2,c
  1713   001B38  EFA0  F00D         	goto	u2011
  1714   001B3C  EFA2  F00D         	goto	u2010
  1715   001B40                     u2011:
  1716   001B40  EFB2  F00D         	goto	l3380
  1717   001B44                     u2010:
  1718   001B44                     
  1719                           ; BSR set to: 0
  1720   001B44  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1721   001B48  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1722   001B4C                     	if	0	;tblptru may be non-zero
  1723   001B4C                     	endif
  1724   001B4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1725   001B4C  0E00               	movlw	low (__mediumconst shr (0+16))
  1726   001B4E  6EF8               	movwf	tblptru,c
  1727   001B50                     	endif
  1728   001B50  0008               	tblrd		*
  1729   001B52  50F5               	movf	tablat,w,c
  1730   001B54  0A69               	xorlw	105
  1731   001B56  A4D8               	btfss	status,2,c
  1732   001B58  EFB0  F00D         	goto	u2021
  1733   001B5C  EFB2  F00D         	goto	u2020
  1734   001B60                     u2021:
  1735   001B60  EFF5  F00D         	goto	l3386
  1736   001B64                     u2020:
  1737   001B64                     l3380:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1741   001B64  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1742   001B68  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1743   001B6C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1744   001B70  0E02               	movlw	2
  1745   001B72  26DE               	addwf	postinc2,f,c
  1746   001B74  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1747   001B78  0E00               	movlw	0
  1748   001B7A  22DD               	addwfc	postdec2,f,c
  1749   001B7C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1750   001B80  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1751   001B84  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1752   001B88  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1753   001B8C  0E00               	movlw	0
  1754   001B8E  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1755   001B90  0EFF               	movlw	-1
  1756   001B92  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1757   001B94  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1758   001B96  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1759   001B98  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1760   001B9A  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1761   001B9C  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1764   001B9E  0E01               	movlw	1
  1765   001BA0  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1766   001BA2  6E49               	movwf	??_vfpfcnvrt^0,c
  1767   001BA4  0E00               	movlw	0
  1768   001BA6  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1769   001BA8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1770   001BAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1771   001BAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1772   001BB2  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1773   001BB6  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1774   001BBA                     
  1775                           ; BSR set to: 0
  1776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1777   001BBA  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1778   001BBE  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1779   001BC2  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1780   001BC6  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1781   001BCA  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1782   001BCE  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1783   001BD2  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1784   001BD6  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1785   001BDA  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1786   001BDE  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1787   001BE2  EC09  F009         	call	_dtoa	;wreg free
  1788   001BE6  EF14  F00E         	goto	l1243
  1789   001BEA                     l3386:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1792   001BEA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1793   001BEE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1794   001BF2  2ADE               	incf	postinc2,f,c
  1795   001BF4  0E00               	movlw	0
  1796   001BF6  22DD               	addwfc	postdec2,f,c
  1797   001BF8  EF14  F00E         	goto	l1243
  1798   001BFC                     l3390:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1801   001BFC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1802   001C00  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1803   001C04  CFDE FFF6          	movff	postinc2,tblptrl
  1804   001C08  CFDD FFF7          	movff	postdec2,tblptrh
  1805   001C0C                     	if	0	;tblptru may be non-zero
  1806   001C0C                     	endif
  1807   001C0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1808   001C0C  0E00               	movlw	low (__mediumconst shr (0+16))
  1809   001C0E  6EF8               	movwf	tblptru,c
  1810   001C10                     	endif
  1811   001C10  0008               	tblrd		*
  1812   001C12  50F5               	movf	tablat,w,c
  1813   001C14  6E05               	movwf	fputc@c^0,c
  1814   001C16  6A06               	clrf	(fputc@c+1)^0,c
  1815   001C18  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1816   001C1C  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1817   001C20  EC15  F00E         	call	_fputc	;wreg free
  1818   001C24  EFF5  F00D         	goto	l3386
  1819   001C28                     l1243:
  1820   001C28  0012               	return		;funcret
  1821   001C2A                     __end_of_vfpfcnvrt:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _dtoa *****************
  1825 ;; Defined at:
  1826 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1829 ;;		 -> sprintf@f(11), 
  1830 ;;  d               8   33[COMRAM] long long 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  n               8   55[COMRAM] long long 
  1833 ;;  i               2   64[COMRAM] int 
  1834 ;;  w               2   53[COMRAM] int 
  1835 ;;  p               2   51[COMRAM] int 
  1836 ;;  s               1   63[COMRAM] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1846 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1847 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1848 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1849 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;Total ram usage:       35 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 8
  1853 ;; This function calls:
  1854 ;;		___aodiv
  1855 ;;		___aomod
  1856 ;;		_abs
  1857 ;;		_pad
  1858 ;; This function is called by:
  1859 ;;		_vfpfcnvrt
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text4
  1864   001212                     __ptext4:
  1865                           	callstack 0
  1866   001212                     _dtoa:
  1867                           	callstack 19
  1868   001212                     
  1869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1870   001212  C022  F038         	movff	dtoa@d,dtoa@n
  1871   001216  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1872   00121A  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1873   00121E  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1874   001222  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1875   001226  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1876   00122A  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1877   00122E  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1878   001232                     
  1879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1880   001232  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1881   001234  EF1E  F009         	goto	u1901
  1882   001238  EF21  F009         	goto	u1900
  1883   00123C                     u1901:
  1884   00123C  0E01               	movlw	1
  1885   00123E  EF22  F009         	goto	u1910
  1886   001242                     u1900:
  1887   001242  0E00               	movlw	0
  1888   001244                     u1910:
  1889   001244  6E40               	movwf	dtoa@s^0,c
  1890   001246                     
  1891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1892   001246  5040               	movf	dtoa@s^0,w,c
  1893   001248  B4D8               	btfsc	status,2,c
  1894   00124A  EF29  F009         	goto	u1921
  1895   00124E  EF2B  F009         	goto	u1920
  1896   001252                     u1921:
  1897   001252  EF3B  F009         	goto	l3322
  1898   001256                     u1920:
  1899   001256                     
  1900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1901   001256  1E3F               	comf	(dtoa@n+7)^0,f,c
  1902   001258  1E3E               	comf	(dtoa@n+6)^0,f,c
  1903   00125A  1E3D               	comf	(dtoa@n+5)^0,f,c
  1904   00125C  1E3C               	comf	(dtoa@n+4)^0,f,c
  1905   00125E  1E3B               	comf	(dtoa@n+3)^0,f,c
  1906   001260  1E3A               	comf	(dtoa@n+2)^0,f,c
  1907   001262  1E39               	comf	(dtoa@n+1)^0,f,c
  1908   001264  6C38               	negf	dtoa@n^0,c
  1909   001266  0E00               	movlw	0
  1910   001268  2239               	addwfc	(dtoa@n+1)^0,f,c
  1911   00126A  223A               	addwfc	(dtoa@n+2)^0,f,c
  1912   00126C  223B               	addwfc	(dtoa@n+3)^0,f,c
  1913   00126E  223C               	addwfc	(dtoa@n+4)^0,f,c
  1914   001270  223D               	addwfc	(dtoa@n+5)^0,f,c
  1915   001272  223E               	addwfc	(dtoa@n+6)^0,f,c
  1916   001274  223F               	addwfc	(dtoa@n+7)^0,f,c
  1917   001276                     l3322:
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1920   001276  0100               	movlb	0	; () banked
  1921   001278  BFB3               	btfsc	(_prec+1)& (0+255),7,b
  1922   00127A  EF49  F009         	goto	u1930
  1923   00127E  51B3               	movf	(_prec+1)& (0+255),w,b
  1924   001280  E106               	bnz	u1931
  1925   001282  05B2               	decf	_prec& (0+255),w,b
  1926   001284  B0D8               	btfsc	status,0,c
  1927   001286  EF47  F009         	goto	u1931
  1928   00128A  EF49  F009         	goto	u1930
  1929   00128E                     u1931:
  1930   00128E  EF4F  F009         	goto	l1222
  1931   001292                     u1930:
  1932   001292                     
  1933                           ; BSR set to: 0
  1934   001292  0E00               	movlw	0
  1935   001294  6E35               	movwf	(dtoa@p+1)^0,c
  1936   001296  0E01               	movlw	1
  1937   001298  6E34               	movwf	dtoa@p^0,c
  1938   00129A  EF53  F009         	goto	l1224
  1939   00129E                     l1222:
  1940                           
  1941                           ; BSR set to: 0
  1942   00129E  C0B2  F034         	movff	_prec,dtoa@p
  1943   0012A2  C0B3  F035         	movff	_prec+1,dtoa@p+1
  1944   0012A6                     l1224:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1948   0012A6  C0B0  F036         	movff	_width,dtoa@w
  1949   0012AA  C0B1  F037         	movff	_width+1,dtoa@w+1
  1950   0012AE                     
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1953   0012AE  5040               	movf	dtoa@s^0,w,c
  1954   0012B0  B4D8               	btfsc	status,2,c
  1955   0012B2  EF5D  F009         	goto	u1941
  1956   0012B6  EF5F  F009         	goto	u1940
  1957   0012BA                     u1941:
  1958   0012BA  EF76  F009         	goto	l1225
  1959   0012BE                     u1940:
  1960   0012BE                     
  1961                           ; BSR set to: 0
  1962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1963   0012BE  0636               	decf	dtoa@w^0,f,c
  1964   0012C0  A0D8               	btfss	status,0,c
  1965   0012C2  0637               	decf	(dtoa@w+1)^0,f,c
  1966   0012C4                     
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1969   0012C4  5040               	movf	dtoa@s^0,w,c
  1970   0012C6  A4D8               	btfss	status,2,c
  1971   0012C8  EF68  F009         	goto	u1951
  1972   0012CC  EF6A  F009         	goto	u1950
  1973   0012D0                     u1951:
  1974   0012D0  EF70  F009         	goto	l3334
  1975   0012D4                     u1950:
  1976   0012D4                     
  1977                           ; BSR set to: 0
  1978   0012D4  0E00               	movlw	0
  1979   0012D6  6E33               	movwf	(_dtoa$2551+1)^0,c
  1980   0012D8  0E2B               	movlw	43
  1981   0012DA  6E32               	movwf	_dtoa$2551^0,c
  1982   0012DC  EF74  F009         	goto	l3336
  1983   0012E0                     l3334:
  1984                           
  1985                           ; BSR set to: 0
  1986   0012E0  0E00               	movlw	0
  1987   0012E2  6E33               	movwf	(_dtoa$2551+1)^0,c
  1988   0012E4  0E2D               	movlw	45
  1989   0012E6  6E32               	movwf	_dtoa$2551^0,c
  1990   0012E8                     l3336:
  1991                           
  1992                           ; BSR set to: 0
  1993   0012E8  C032  F040         	movff	_dtoa$2551,dtoa@s
  1994   0012EC                     l1225:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1998   0012EC  0E00               	movlw	0
  1999   0012EE  6E42               	movwf	(dtoa@i+1)^0,c
  2000   0012F0  0E1F               	movlw	31
  2001   0012F2  6E41               	movwf	dtoa@i^0,c
  2002   0012F4                     
  2003                           ; BSR set to: 0
  2004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2005   0012F4  0E00               	movlw	0
  2006   0012F6  6FD8               	movwf	(_dbuf+31)& (0+255),b
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2009   0012F8  EFFA  F009         	goto	l3350
  2010   0012FC                     l3340:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2013   0012FC  0641               	decf	dtoa@i^0,f,c
  2014   0012FE  A0D8               	btfss	status,0,c
  2015   001300  0642               	decf	(dtoa@i+1)^0,f,c
  2016   001302                     
  2017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2018   001302  0EB9               	movlw	low _dbuf
  2019   001304  2441               	addwf	dtoa@i^0,w,c
  2020   001306  6ED9               	movwf	fsr2l,c
  2021   001308  0E00               	movlw	high _dbuf
  2022   00130A  2042               	addwfc	(dtoa@i+1)^0,w,c
  2023   00130C  6EDA               	movwf	fsr2h,c
  2024   00130E  C038  F005         	movff	dtoa@n,___aomod@dividend
  2025   001312  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2026   001316  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2027   00131A  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2028   00131E  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2029   001322  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2030   001326  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2031   00132A  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2032   00132E  0E0A               	movlw	10
  2033   001330  6E0D               	movwf	___aomod@divisor^0,c
  2034   001332  0E00               	movlw	0
  2035   001334  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2036   001336  0E00               	movlw	0
  2037   001338  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2038   00133A  0E00               	movlw	0
  2039   00133C  6E10               	movwf	(___aomod@divisor+3)^0,c
  2040   00133E  0E00               	movlw	0
  2041   001340  6E11               	movwf	(___aomod@divisor+4)^0,c
  2042   001342  0E00               	movlw	0
  2043   001344  6E12               	movwf	(___aomod@divisor+5)^0,c
  2044   001346  0E00               	movlw	0
  2045   001348  6E13               	movwf	(___aomod@divisor+6)^0,c
  2046   00134A  0E00               	movlw	0
  2047   00134C  6E14               	movwf	(___aomod@divisor+7)^0,c
  2048   00134E  ECB4  F00C         	call	___aomod	;wreg free
  2049   001352  C005  F02A         	movff	?___aomod,??_dtoa
  2050   001356  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2051   00135A  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2052   00135E  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2053   001362  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2054   001366  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2055   00136A  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2056   00136E  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2057   001372  C02A  F017         	movff	??_dtoa,abs@a
  2058   001376  C02B  F018         	movff	??_dtoa+1,abs@a+1
  2059   00137A  EC9F  F010         	call	_abs	;wreg free
  2060   00137E  5017               	movf	?_abs^0,w,c
  2061   001380  0F30               	addlw	48
  2062   001382  6EDF               	movwf	indf2,c
  2063   001384                     
  2064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2065   001384  0634               	decf	dtoa@p^0,f,c
  2066   001386  A0D8               	btfss	status,0,c
  2067   001388  0635               	decf	(dtoa@p+1)^0,f,c
  2068   00138A                     
  2069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2070   00138A  0636               	decf	dtoa@w^0,f,c
  2071   00138C  A0D8               	btfss	status,0,c
  2072   00138E  0637               	decf	(dtoa@w+1)^0,f,c
  2073   001390                     
  2074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2075   001390  C038  F005         	movff	dtoa@n,___aodiv@dividend
  2076   001394  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2077   001398  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2078   00139C  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2079   0013A0  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2080   0013A4  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2081   0013A8  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2082   0013AC  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2083   0013B0  0E0A               	movlw	10
  2084   0013B2  6E0D               	movwf	___aodiv@divisor^0,c
  2085   0013B4  0E00               	movlw	0
  2086   0013B6  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2087   0013B8  0E00               	movlw	0
  2088   0013BA  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2089   0013BC  0E00               	movlw	0
  2090   0013BE  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2091   0013C0  0E00               	movlw	0
  2092   0013C2  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2093   0013C4  0E00               	movlw	0
  2094   0013C6  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2095   0013C8  0E00               	movlw	0
  2096   0013CA  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2097   0013CC  0E00               	movlw	0
  2098   0013CE  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2099   0013D0  EC3A  F00B         	call	___aodiv	;wreg free
  2100   0013D4  C005  F038         	movff	?___aodiv,dtoa@n
  2101   0013D8  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  2102   0013DC  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  2103   0013E0  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  2104   0013E4  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  2105   0013E8  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  2106   0013EC  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  2107   0013F0  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  2108   0013F4                     l3350:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2111   0013F4  BE42               	btfsc	(dtoa@i+1)^0,7,c
  2112   0013F6  EF05  F00A         	goto	u1961
  2113   0013FA  5042               	movf	(dtoa@i+1)^0,w,c
  2114   0013FC  E108               	bnz	u1960
  2115   0013FE  0441               	decf	dtoa@i^0,w,c
  2116   001400  A0D8               	btfss	status,0,c
  2117   001402  EF05  F00A         	goto	u1961
  2118   001406  EF07  F00A         	goto	u1960
  2119   00140A                     u1961:
  2120   00140A  EF23  F00A         	goto	l3356
  2121   00140E                     u1960:
  2122   00140E  5038               	movf	dtoa@n^0,w,c
  2123   001410  1039               	iorwf	(dtoa@n+1)^0,w,c
  2124   001412  103A               	iorwf	(dtoa@n+2)^0,w,c
  2125   001414  103B               	iorwf	(dtoa@n+3)^0,w,c
  2126   001416  103C               	iorwf	(dtoa@n+4)^0,w,c
  2127   001418  103D               	iorwf	(dtoa@n+5)^0,w,c
  2128   00141A  103E               	iorwf	(dtoa@n+6)^0,w,c
  2129   00141C  103F               	iorwf	(dtoa@n+7)^0,w,c
  2130   00141E  A4D8               	btfss	status,2,c
  2131   001420  EF14  F00A         	goto	u1971
  2132   001424  EF16  F00A         	goto	u1970
  2133   001428                     u1971:
  2134   001428  EF7E  F009         	goto	l3340
  2135   00142C                     u1970:
  2136   00142C  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2137   00142E  EF23  F00A         	goto	u1980
  2138   001432  5035               	movf	(dtoa@p+1)^0,w,c
  2139   001434  E106               	bnz	u1981
  2140   001436  0434               	decf	dtoa@p^0,w,c
  2141   001438  B0D8               	btfsc	status,0,c
  2142   00143A  EF21  F00A         	goto	u1981
  2143   00143E  EF23  F00A         	goto	u1980
  2144   001442                     u1981:
  2145   001442  EF7E  F009         	goto	l3340
  2146   001446                     u1980:
  2147   001446                     l3356:
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2150   001446  5040               	movf	dtoa@s^0,w,c
  2151   001448  B4D8               	btfsc	status,2,c
  2152   00144A  EF29  F00A         	goto	u1991
  2153   00144E  EF2B  F00A         	goto	u1990
  2154   001452                     u1991:
  2155   001452  EF36  F00A         	goto	l3362
  2156   001456                     u1990:
  2157   001456                     
  2158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2159   001456  0641               	decf	dtoa@i^0,f,c
  2160   001458  A0D8               	btfss	status,0,c
  2161   00145A  0642               	decf	(dtoa@i+1)^0,f,c
  2162   00145C                     
  2163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2164   00145C  0EB9               	movlw	low _dbuf
  2165   00145E  2441               	addwf	dtoa@i^0,w,c
  2166   001460  6ED9               	movwf	fsr2l,c
  2167   001462  0E00               	movlw	high _dbuf
  2168   001464  2042               	addwfc	(dtoa@i+1)^0,w,c
  2169   001466  6EDA               	movwf	fsr2h,c
  2170   001468  C040  FFDF         	movff	dtoa@s,indf2
  2171   00146C                     l3362:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2174   00146C  C020  F015         	movff	dtoa@fp,pad@fp
  2175   001470  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2176   001474  0EB9               	movlw	low _dbuf
  2177   001476  2441               	addwf	dtoa@i^0,w,c
  2178   001478  6E17               	movwf	pad@buf^0,c
  2179   00147A  0E00               	movlw	high _dbuf
  2180   00147C  2042               	addwfc	(dtoa@i+1)^0,w,c
  2181   00147E  6E18               	movwf	(pad@buf+1)^0,c
  2182   001480  C036  F019         	movff	dtoa@w,pad@p
  2183   001484  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2184   001488  ECBE  F00E         	call	_pad	;wreg free
  2185   00148C  0012               	return		;funcret
  2186   00148E                     __end_of_dtoa:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _pad *****************
  2190 ;; Defined at:
  2191 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2194 ;;		 -> sprintf@f(11), 
  2195 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2196 ;;		 -> dbuf(32), 
  2197 ;;  p               2   24[COMRAM] int 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  w               2   29[COMRAM] int 
  2200 ;;  i               2   27[COMRAM] int 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2210 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;Total ram usage:       11 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; Hardware stack levels required when called: 7
  2217 ;; This function calls:
  2218 ;;		_fputc
  2219 ;;		_fputs
  2220 ;; This function is called by:
  2221 ;;		_dtoa
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text5
  2226   001D7C                     __ptext5:
  2227                           	callstack 0
  2228   001D7C                     _pad:
  2229                           	callstack 19
  2230   001D7C                     
  2231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2232   001D7C  BE1A               	btfsc	(pad@p+1)^0,7,c
  2233   001D7E  EFC3  F00E         	goto	u1881
  2234   001D82  EFC5  F00E         	goto	u1880
  2235   001D86                     u1881:
  2236   001D86  EFCB  F00E         	goto	l3304
  2237   001D8A                     u1880:
  2238   001D8A  C019  F01E         	movff	pad@p,pad@w
  2239   001D8E  C01A  F01F         	movff	pad@p+1,pad@w+1
  2240   001D92  EFCF  F00E         	goto	l1213
  2241   001D96                     l3304:
  2242   001D96  0E00               	movlw	0
  2243   001D98  6E1F               	movwf	(pad@w+1)^0,c
  2244   001D9A  0E00               	movlw	0
  2245   001D9C  6E1E               	movwf	pad@w^0,c
  2246   001D9E                     l1213:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2249   001D9E  0E00               	movlw	0
  2250   001DA0  6E1D               	movwf	(pad@i+1)^0,c
  2251   001DA2  0E00               	movlw	0
  2252   001DA4  6E1C               	movwf	pad@i^0,c
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2255   001DA6  EFE1  F00E         	goto	l3310
  2256   001DAA                     l3306:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2259   001DAA  0E00               	movlw	0
  2260   001DAC  6E06               	movwf	(fputc@c+1)^0,c
  2261   001DAE  0E20               	movlw	32
  2262   001DB0  6E05               	movwf	fputc@c^0,c
  2263   001DB2  C015  F007         	movff	pad@fp,fputc@fp
  2264   001DB6  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2265   001DBA  EC15  F00E         	call	_fputc	;wreg free
  2266   001DBE                     
  2267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2268   001DBE  4A1C               	infsnz	pad@i^0,f,c
  2269   001DC0  2A1D               	incf	(pad@i+1)^0,f,c
  2270   001DC2                     l3310:
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2273   001DC2  501E               	movf	pad@w^0,w,c
  2274   001DC4  5C1C               	subwf	pad@i^0,w,c
  2275   001DC6  501D               	movf	(pad@i+1)^0,w,c
  2276   001DC8  0A80               	xorlw	128
  2277   001DCA  6E1B               	movwf	??_pad^0,c
  2278   001DCC  501F               	movf	(pad@w+1)^0,w,c
  2279   001DCE  0A80               	xorlw	128
  2280   001DD0  581B               	subwfb	??_pad^0,w,c
  2281   001DD2  A0D8               	btfss	status,0,c
  2282   001DD4  EFEE  F00E         	goto	u1891
  2283   001DD8  EFF0  F00E         	goto	u1890
  2284   001DDC                     u1891:
  2285   001DDC  EFD5  F00E         	goto	l3306
  2286   001DE0                     u1890:
  2287   001DE0                     
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2289   001DE0  C017  F00E         	movff	pad@buf,fputs@s
  2290   001DE4  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2291   001DE8  C015  F010         	movff	pad@fp,fputs@fp
  2292   001DEC  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2293   001DF0  EC5C  F010         	call	_fputs	;wreg free
  2294   001DF4  0012               	return		;funcret
  2295   001DF6                     __end_of_pad:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function _fputs *****************
  2299 ;; Defined at:
  2300 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2303 ;;		 -> dbuf(32), 
  2304 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2305 ;;		 -> sprintf@f(11), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  i               2   18[COMRAM] int 
  2308 ;;  c               1   17[COMRAM] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  2   13[COMRAM] int 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2319 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2321 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2322 ;;Total ram usage:        7 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 6
  2325 ;; This function calls:
  2326 ;;		_fputc
  2327 ;; This function is called by:
  2328 ;;		_pad
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text6
  2333   0020B8                     __ptext6:
  2334                           	callstack 0
  2335   0020B8                     _fputs:
  2336                           	callstack 19
  2337   0020B8  0E00               	movlw	0
  2338   0020BA  6E14               	movwf	(fputs@i+1)^0,c
  2339   0020BC  0E00               	movlw	0
  2340   0020BE  6E13               	movwf	fputs@i^0,c
  2341   0020C0  EF6D  F010         	goto	l3214
  2342   0020C4                     l3210:
  2343   0020C4  C012  F005         	movff	fputs@c,fputc@c
  2344   0020C8  6A06               	clrf	(fputc@c+1)^0,c
  2345   0020CA  C010  F007         	movff	fputs@fp,fputc@fp
  2346   0020CE  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2347   0020D2  EC15  F00E         	call	_fputc	;wreg free
  2348   0020D6  4A13               	infsnz	fputs@i^0,f,c
  2349   0020D8  2A14               	incf	(fputs@i+1)^0,f,c
  2350   0020DA                     l3214:
  2351   0020DA  5013               	movf	fputs@i^0,w,c
  2352   0020DC  240E               	addwf	fputs@s^0,w,c
  2353   0020DE  6ED9               	movwf	fsr2l,c
  2354   0020E0  5014               	movf	(fputs@i+1)^0,w,c
  2355   0020E2  200F               	addwfc	(fputs@s+1)^0,w,c
  2356   0020E4  6EDA               	movwf	fsr2h,c
  2357   0020E6  50DF               	movf	indf2,w,c
  2358   0020E8  6E12               	movwf	fputs@c^0,c
  2359   0020EA  5012               	movf	fputs@c^0,w,c
  2360   0020EC  A4D8               	btfss	status,2,c
  2361   0020EE  EF7B  F010         	goto	u1731
  2362   0020F2  EF7D  F010         	goto	u1730
  2363   0020F6                     u1731:
  2364   0020F6  EF62  F010         	goto	l3210
  2365   0020FA                     u1730:
  2366   0020FA  0012               	return		;funcret
  2367   0020FC                     __end_of_fputs:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function _fputc *****************
  2371 ;; Defined at:
  2372 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  c               2    4[COMRAM] int 
  2375 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2376 ;;		 -> sprintf@f(11), 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  2    4[COMRAM] int 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;Total ram usage:        9 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 5
  2395 ;; This function calls:
  2396 ;;		_putch
  2397 ;; This function is called by:
  2398 ;;		_pad
  2399 ;;		_vfpfcnvrt
  2400 ;;		_fputs
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text7
  2405   001C2A                     __ptext7:
  2406                           	callstack 0
  2407   001C2A                     _fputc:
  2408                           	callstack 22
  2409   001C2A  5007               	movf	fputc@fp^0,w,c
  2410   001C2C  1008               	iorwf	(fputc@fp+1)^0,w,c
  2411   001C2E  B4D8               	btfsc	status,2,c
  2412   001C30  EF1C  F00E         	goto	u1691
  2413   001C34  EF1E  F00E         	goto	u1690
  2414   001C38                     u1691:
  2415   001C38  EF27  F00E         	goto	l3198
  2416   001C3C                     u1690:
  2417   001C3C  5007               	movf	fputc@fp^0,w,c
  2418   001C3E  1008               	iorwf	(fputc@fp+1)^0,w,c
  2419   001C40  A4D8               	btfss	status,2,c
  2420   001C42  EF25  F00E         	goto	u1701
  2421   001C46  EF27  F00E         	goto	u1700
  2422   001C4A                     u1701:
  2423   001C4A  EF2C  F00E         	goto	l3200
  2424   001C4E                     u1700:
  2425   001C4E                     l3198:
  2426   001C4E  5005               	movf	fputc@c^0,w,c
  2427   001C50  ECEF  F011         	call	_putch
  2428   001C54  EF79  F00E         	goto	l1261
  2429   001C58                     l3200:
  2430   001C58  EE20 F009          	lfsr	2,9
  2431   001C5C  5007               	movf	fputc@fp^0,w,c
  2432   001C5E  26D9               	addwf	fsr2l,f,c
  2433   001C60  5008               	movf	(fputc@fp+1)^0,w,c
  2434   001C62  22DA               	addwfc	fsr2h,f,c
  2435   001C64  50DE               	movf	postinc2,w,c
  2436   001C66  10DE               	iorwf	postinc2,w,c
  2437   001C68  B4D8               	btfsc	status,2,c
  2438   001C6A  EF39  F00E         	goto	u1711
  2439   001C6E  EF3B  F00E         	goto	u1710
  2440   001C72                     u1711:
  2441   001C72  EF56  F00E         	goto	l3204
  2442   001C76                     u1710:
  2443   001C76  EE20 F009          	lfsr	2,9
  2444   001C7A  5007               	movf	fputc@fp^0,w,c
  2445   001C7C  26D9               	addwf	fsr2l,f,c
  2446   001C7E  5008               	movf	(fputc@fp+1)^0,w,c
  2447   001C80  22DA               	addwfc	fsr2h,f,c
  2448   001C82  EE10 F003          	lfsr	1,3
  2449   001C86  5007               	movf	fputc@fp^0,w,c
  2450   001C88  26E1               	addwf	fsr1l,f,c
  2451   001C8A  5008               	movf	(fputc@fp+1)^0,w,c
  2452   001C8C  22E2               	addwfc	fsr1h,f,c
  2453   001C8E  50DE               	movf	postinc2,w,c
  2454   001C90  5CE6               	subwf	postinc1,w,c
  2455   001C92  50E6               	movf	postinc1,w,c
  2456   001C94  0A80               	xorlw	128
  2457   001C96  6E0D               	movwf	(??_fputc+4)^0,c
  2458   001C98  50DE               	movf	postinc2,w,c
  2459   001C9A  0A80               	xorlw	128
  2460   001C9C  580D               	subwfb	(??_fputc+4)^0,w,c
  2461   001C9E  B0D8               	btfsc	status,0,c
  2462   001CA0  EF54  F00E         	goto	u1721
  2463   001CA4  EF56  F00E         	goto	u1720
  2464   001CA8                     u1721:
  2465   001CA8  EF79  F00E         	goto	l1261
  2466   001CAC                     u1720:
  2467   001CAC                     l3204:
  2468   001CAC  EE20 F003          	lfsr	2,3
  2469   001CB0  5007               	movf	fputc@fp^0,w,c
  2470   001CB2  26D9               	addwf	fsr2l,f,c
  2471   001CB4  5008               	movf	(fputc@fp+1)^0,w,c
  2472   001CB6  22DA               	addwfc	fsr2h,f,c
  2473   001CB8  CFDE F009          	movff	postinc2,??_fputc
  2474   001CBC  CFDD F00A          	movff	postdec2,??_fputc+1
  2475   001CC0  C007  FFD9         	movff	fputc@fp,fsr2l
  2476   001CC4  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2477   001CC8  CFDE F00B          	movff	postinc2,??_fputc+2
  2478   001CCC  CFDD F00C          	movff	postdec2,??_fputc+3
  2479   001CD0  5009               	movf	??_fputc^0,w,c
  2480   001CD2  240B               	addwf	(??_fputc+2)^0,w,c
  2481   001CD4  6ED9               	movwf	fsr2l,c
  2482   001CD6  500A               	movf	(??_fputc+1)^0,w,c
  2483   001CD8  200C               	addwfc	(??_fputc+3)^0,w,c
  2484   001CDA  6EDA               	movwf	fsr2h,c
  2485   001CDC  C005  FFDF         	movff	fputc@c,indf2
  2486   001CE0  EE20 F003          	lfsr	2,3
  2487   001CE4  5007               	movf	fputc@fp^0,w,c
  2488   001CE6  26D9               	addwf	fsr2l,f,c
  2489   001CE8  5008               	movf	(fputc@fp+1)^0,w,c
  2490   001CEA  22DA               	addwfc	fsr2h,f,c
  2491   001CEC  2ADE               	incf	postinc2,f,c
  2492   001CEE  0E00               	movlw	0
  2493   001CF0  22DD               	addwfc	postdec2,f,c
  2494   001CF2                     l1261:
  2495   001CF2  0012               	return		;funcret
  2496   001CF4                     __end_of_fputc:
  2497                           	callstack 0
  2498                           
  2499 ;; *************** function _putch *****************
  2500 ;; Defined at:
  2501 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  c               1    wreg     unsigned char 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  c               1    0[COMRAM] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 4
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_fputc
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text8
  2530   0023DE                     __ptext8:
  2531                           	callstack 0
  2532   0023DE                     _putch:
  2533                           	callstack 22
  2534   0023DE  0012               	return		;funcret
  2535   0023E0                     __end_of_putch:
  2536                           	callstack 0
  2537                           
  2538 ;; *************** function _abs *****************
  2539 ;; Defined at:
  2540 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  a               2   22[COMRAM] int 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  2   22[COMRAM] int 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2554 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;Total ram usage:        4 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 4
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_dtoa
  2565 ;;		_normalise_readings
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text9
  2570   00213E                     __ptext9:
  2571                           	callstack 0
  2572   00213E                     _abs:
  2573                           	callstack 22
  2574   00213E  BE18               	btfsc	(abs@a+1)^0,7,c
  2575   002140  EFAC  F010         	goto	u1740
  2576   002144  5018               	movf	(abs@a+1)^0,w,c
  2577   002146  E106               	bnz	u1741
  2578   002148  0417               	decf	abs@a^0,w,c
  2579   00214A  B0D8               	btfsc	status,0,c
  2580   00214C  EFAA  F010         	goto	u1741
  2581   002150  EFAC  F010         	goto	u1740
  2582   002154                     u1741:
  2583   002154  EFBA  F010         	goto	l1181
  2584   002158                     u1740:
  2585   002158  C017  F019         	movff	abs@a,??_abs
  2586   00215C  C018  F01A         	movff	abs@a+1,??_abs+1
  2587   002160  1E19               	comf	??_abs^0,f,c
  2588   002162  1E1A               	comf	(??_abs+1)^0,f,c
  2589   002164  4A19               	infsnz	??_abs^0,f,c
  2590   002166  2A1A               	incf	(??_abs+1)^0,f,c
  2591   002168  C019  F017         	movff	??_abs,?_abs
  2592   00216C  C01A  F018         	movff	??_abs+1,?_abs+1
  2593   002170  EFBE  F010         	goto	l1184
  2594   002174                     l1181:
  2595   002174  C017  F017         	movff	abs@a,?_abs
  2596   002178  C018  F018         	movff	abs@a+1,?_abs+1
  2597   00217C                     l1184:
  2598   00217C  0012               	return		;funcret
  2599   00217E                     __end_of_abs:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function ___aomod *****************
  2603 ;; Defined at:
  2604 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  dividend        8    4[COMRAM] long long 
  2607 ;;  divisor         8   12[COMRAM] long long 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  sign            1   21[COMRAM] unsigned char 
  2610 ;;  counter         1   20[COMRAM] unsigned char 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  8    4[COMRAM] long long 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2620 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;Total ram usage:       18 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 4
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_dtoa
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text10
  2635   001968                     __ptext10:
  2636                           	callstack 0
  2637   001968                     ___aomod:
  2638                           	callstack 22
  2639   001968  0E00               	movlw	0
  2640   00196A  6E16               	movwf	___aomod@sign^0,c
  2641   00196C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2642   00196E  EFBD  F00C         	goto	u1820
  2643   001972  EFBB  F00C         	goto	u1821
  2644   001976                     u1821:
  2645   001976  EFCF  F00C         	goto	l3272
  2646   00197A                     u1820:
  2647   00197A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2648   00197C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2649   00197E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2650   001980  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2651   001982  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2652   001984  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2653   001986  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2654   001988  6C05               	negf	___aomod@dividend^0,c
  2655   00198A  0E00               	movlw	0
  2656   00198C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2657   00198E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2658   001990  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2659   001992  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2660   001994  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2661   001996  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2662   001998  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2663   00199A  0E01               	movlw	1
  2664   00199C  6E16               	movwf	___aomod@sign^0,c
  2665   00199E                     l3272:
  2666   00199E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2667   0019A0  EFD6  F00C         	goto	u1830
  2668   0019A4  EFD4  F00C         	goto	u1831
  2669   0019A8                     u1831:
  2670   0019A8  EFE6  F00C         	goto	l3276
  2671   0019AC                     u1830:
  2672   0019AC  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2673   0019AE  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2674   0019B0  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2675   0019B2  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2676   0019B4  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2677   0019B6  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2678   0019B8  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2679   0019BA  6C0D               	negf	___aomod@divisor^0,c
  2680   0019BC  0E00               	movlw	0
  2681   0019BE  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2682   0019C0  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2683   0019C2  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2684   0019C4  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2685   0019C6  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2686   0019C8  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2687   0019CA  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2688   0019CC                     l3276:
  2689   0019CC  500D               	movf	___aomod@divisor^0,w,c
  2690   0019CE  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2691   0019D0  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2692   0019D2  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2693   0019D4  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2694   0019D6  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2695   0019D8  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2696   0019DA  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2697   0019DC  B4D8               	btfsc	status,2,c
  2698   0019DE  EFF3  F00C         	goto	u1841
  2699   0019E2  EFF5  F00C         	goto	u1840
  2700   0019E6                     u1841:
  2701   0019E6  EF3D  F00D         	goto	l3292
  2702   0019EA                     u1840:
  2703   0019EA  0E01               	movlw	1
  2704   0019EC  6E15               	movwf	___aomod@counter^0,c
  2705   0019EE  EF03  F00D         	goto	l3282
  2706   0019F2                     l3280:
  2707   0019F2  90D8               	bcf	status,0,c
  2708   0019F4  360D               	rlcf	___aomod@divisor^0,f,c
  2709   0019F6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2710   0019F8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2711   0019FA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2712   0019FC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2713   0019FE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2714   001A00  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2715   001A02  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2716   001A04  2A15               	incf	___aomod@counter^0,f,c
  2717   001A06                     l3282:
  2718   001A06  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2719   001A08  EF08  F00D         	goto	u1851
  2720   001A0C  EF0A  F00D         	goto	u1850
  2721   001A10                     u1851:
  2722   001A10  EFF9  F00C         	goto	l3280
  2723   001A14                     u1850:
  2724   001A14                     l3284:
  2725   001A14  500D               	movf	___aomod@divisor^0,w,c
  2726   001A16  5C05               	subwf	___aomod@dividend^0,w,c
  2727   001A18  500E               	movf	(___aomod@divisor+1)^0,w,c
  2728   001A1A  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2729   001A1C  500F               	movf	(___aomod@divisor+2)^0,w,c
  2730   001A1E  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2731   001A20  5010               	movf	(___aomod@divisor+3)^0,w,c
  2732   001A22  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2733   001A24  5011               	movf	(___aomod@divisor+4)^0,w,c
  2734   001A26  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2735   001A28  5012               	movf	(___aomod@divisor+5)^0,w,c
  2736   001A2A  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2737   001A2C  5013               	movf	(___aomod@divisor+6)^0,w,c
  2738   001A2E  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2739   001A30  5014               	movf	(___aomod@divisor+7)^0,w,c
  2740   001A32  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2741   001A34  A0D8               	btfss	status,0,c
  2742   001A36  EF1F  F00D         	goto	u1861
  2743   001A3A  EF21  F00D         	goto	u1860
  2744   001A3E                     u1861:
  2745   001A3E  EF31  F00D         	goto	l3288
  2746   001A42                     u1860:
  2747   001A42  500D               	movf	___aomod@divisor^0,w,c
  2748   001A44  5E05               	subwf	___aomod@dividend^0,f,c
  2749   001A46  500E               	movf	(___aomod@divisor+1)^0,w,c
  2750   001A48  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2751   001A4A  500F               	movf	(___aomod@divisor+2)^0,w,c
  2752   001A4C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2753   001A4E  5010               	movf	(___aomod@divisor+3)^0,w,c
  2754   001A50  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2755   001A52  5011               	movf	(___aomod@divisor+4)^0,w,c
  2756   001A54  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2757   001A56  5012               	movf	(___aomod@divisor+5)^0,w,c
  2758   001A58  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2759   001A5A  5013               	movf	(___aomod@divisor+6)^0,w,c
  2760   001A5C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2761   001A5E  5014               	movf	(___aomod@divisor+7)^0,w,c
  2762   001A60  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2763   001A62                     l3288:
  2764   001A62  90D8               	bcf	status,0,c
  2765   001A64  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2766   001A66  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2767   001A68  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2768   001A6A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2769   001A6C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2770   001A6E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2771   001A70  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2772   001A72  320D               	rrcf	___aomod@divisor^0,f,c
  2773   001A74  2E15               	decfsz	___aomod@counter^0,f,c
  2774   001A76  EF0A  F00D         	goto	l3284
  2775   001A7A                     l3292:
  2776   001A7A  5016               	movf	___aomod@sign^0,w,c
  2777   001A7C  B4D8               	btfsc	status,2,c
  2778   001A7E  EF43  F00D         	goto	u1871
  2779   001A82  EF45  F00D         	goto	u1870
  2780   001A86                     u1871:
  2781   001A86  EF55  F00D         	goto	l3296
  2782   001A8A                     u1870:
  2783   001A8A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2784   001A8C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2785   001A8E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2786   001A90  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2787   001A92  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2788   001A94  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2789   001A96  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2790   001A98  6C05               	negf	___aomod@dividend^0,c
  2791   001A9A  0E00               	movlw	0
  2792   001A9C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2793   001A9E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2794   001AA0  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2795   001AA2  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2796   001AA4  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2797   001AA6  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2798   001AA8  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2799   001AAA                     l3296:
  2800   001AAA  C005  F005         	movff	___aomod@dividend,?___aomod
  2801   001AAE  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2802   001AB2  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2803   001AB6  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2804   001ABA  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2805   001ABE  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2806   001AC2  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2807   001AC6  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2808   001ACA  0012               	return		;funcret
  2809   001ACC                     __end_of___aomod:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function ___aodiv *****************
  2813 ;; Defined at:
  2814 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  dividend        8    4[COMRAM] long long 
  2817 ;;  divisor         8   12[COMRAM] long long 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  quotient        8   22[COMRAM] long long 
  2820 ;;  sign            1   21[COMRAM] unsigned char 
  2821 ;;  counter         1   20[COMRAM] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  8    4[COMRAM] long long 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2831 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;Total ram usage:       26 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 4
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_dtoa
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text11
  2846   001674                     __ptext11:
  2847                           	callstack 0
  2848   001674                     ___aodiv:
  2849                           	callstack 22
  2850   001674  0E00               	movlw	0
  2851   001676  6E16               	movwf	___aodiv@sign^0,c
  2852   001678  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2853   00167A  EF43  F00B         	goto	u1750
  2854   00167E  EF41  F00B         	goto	u1751
  2855   001682                     u1751:
  2856   001682  EF55  F00B         	goto	l3228
  2857   001686                     u1750:
  2858   001686  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2859   001688  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2860   00168A  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2861   00168C  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2862   00168E  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2863   001690  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2864   001692  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2865   001694  6C0D               	negf	___aodiv@divisor^0,c
  2866   001696  0E00               	movlw	0
  2867   001698  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2868   00169A  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2869   00169C  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2870   00169E  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2871   0016A0  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2872   0016A2  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2873   0016A4  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2874   0016A6  0E01               	movlw	1
  2875   0016A8  6E16               	movwf	___aodiv@sign^0,c
  2876   0016AA                     l3228:
  2877   0016AA  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2878   0016AC  EF5C  F00B         	goto	u1760
  2879   0016B0  EF5A  F00B         	goto	u1761
  2880   0016B4                     u1761:
  2881   0016B4  EF6E  F00B         	goto	l3234
  2882   0016B8                     u1760:
  2883   0016B8  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2884   0016BA  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2885   0016BC  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2886   0016BE  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2887   0016C0  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2888   0016C2  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2889   0016C4  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2890   0016C6  6C05               	negf	___aodiv@dividend^0,c
  2891   0016C8  0E00               	movlw	0
  2892   0016CA  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2893   0016CC  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2894   0016CE  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2895   0016D0  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2896   0016D2  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2897   0016D4  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2898   0016D6  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2899   0016D8  0E01               	movlw	1
  2900   0016DA  1A16               	xorwf	___aodiv@sign^0,f,c
  2901   0016DC                     l3234:
  2902   0016DC  EE20  F017         	lfsr	2,___aodiv@quotient
  2903   0016E0  0E07               	movlw	7
  2904   0016E2                     u1771:
  2905   0016E2  6ADE               	clrf	postinc2,c
  2906   0016E4  06E8               	decf	wreg,f,c
  2907   0016E6  E2FD               	bc	u1771
  2908   0016E8  500D               	movf	___aodiv@divisor^0,w,c
  2909   0016EA  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2910   0016EC  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2911   0016EE  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2912   0016F0  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2913   0016F2  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2914   0016F4  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2915   0016F6  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2916   0016F8  B4D8               	btfsc	status,2,c
  2917   0016FA  EF81  F00B         	goto	u1781
  2918   0016FE  EF83  F00B         	goto	u1780
  2919   001702                     u1781:
  2920   001702  EFD5  F00B         	goto	l3256
  2921   001706                     u1780:
  2922   001706  0E01               	movlw	1
  2923   001708  6E15               	movwf	___aodiv@counter^0,c
  2924   00170A  EF91  F00B         	goto	l3242
  2925   00170E                     l3240:
  2926   00170E  90D8               	bcf	status,0,c
  2927   001710  360D               	rlcf	___aodiv@divisor^0,f,c
  2928   001712  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2929   001714  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2930   001716  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2931   001718  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2932   00171A  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2933   00171C  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2934   00171E  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2935   001720  2A15               	incf	___aodiv@counter^0,f,c
  2936   001722                     l3242:
  2937   001722  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2938   001724  EF96  F00B         	goto	u1791
  2939   001728  EF98  F00B         	goto	u1790
  2940   00172C                     u1791:
  2941   00172C  EF87  F00B         	goto	l3240
  2942   001730                     u1790:
  2943   001730                     l3244:
  2944   001730  90D8               	bcf	status,0,c
  2945   001732  3617               	rlcf	___aodiv@quotient^0,f,c
  2946   001734  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2947   001736  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2948   001738  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2949   00173A  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2950   00173C  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2951   00173E  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2952   001740  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2953   001742  500D               	movf	___aodiv@divisor^0,w,c
  2954   001744  5C05               	subwf	___aodiv@dividend^0,w,c
  2955   001746  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2956   001748  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2957   00174A  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2958   00174C  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2959   00174E  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2960   001750  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2961   001752  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2962   001754  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2963   001756  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2964   001758  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2965   00175A  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2966   00175C  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2967   00175E  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2968   001760  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2969   001762  A0D8               	btfss	status,0,c
  2970   001764  EFB6  F00B         	goto	u1801
  2971   001768  EFB8  F00B         	goto	u1800
  2972   00176C                     u1801:
  2973   00176C  EFC9  F00B         	goto	l3252
  2974   001770                     u1800:
  2975   001770  500D               	movf	___aodiv@divisor^0,w,c
  2976   001772  5E05               	subwf	___aodiv@dividend^0,f,c
  2977   001774  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2978   001776  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2979   001778  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2980   00177A  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2981   00177C  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2982   00177E  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2983   001780  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2984   001782  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2985   001784  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2986   001786  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2987   001788  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2988   00178A  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2989   00178C  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2990   00178E  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2991   001790  8017               	bsf	___aodiv@quotient^0,0,c
  2992   001792                     l3252:
  2993   001792  90D8               	bcf	status,0,c
  2994   001794  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2995   001796  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2996   001798  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2997   00179A  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2998   00179C  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2999   00179E  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3000   0017A0  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3001   0017A2  320D               	rrcf	___aodiv@divisor^0,f,c
  3002   0017A4  2E15               	decfsz	___aodiv@counter^0,f,c
  3003   0017A6  EF98  F00B         	goto	l3244
  3004   0017AA                     l3256:
  3005   0017AA  5016               	movf	___aodiv@sign^0,w,c
  3006   0017AC  B4D8               	btfsc	status,2,c
  3007   0017AE  EFDB  F00B         	goto	u1811
  3008   0017B2  EFDD  F00B         	goto	u1810
  3009   0017B6                     u1811:
  3010   0017B6  EFED  F00B         	goto	l3260
  3011   0017BA                     u1810:
  3012   0017BA  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3013   0017BC  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3014   0017BE  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3015   0017C0  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3016   0017C2  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3017   0017C4  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3018   0017C6  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3019   0017C8  6C17               	negf	___aodiv@quotient^0,c
  3020   0017CA  0E00               	movlw	0
  3021   0017CC  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3022   0017CE  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3023   0017D0  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3024   0017D2  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3025   0017D4  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3026   0017D6  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3027   0017D8  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3028   0017DA                     l3260:
  3029   0017DA  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3030   0017DE  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3031   0017E2  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3032   0017E6  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3033   0017EA  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3034   0017EE  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3035   0017F2  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3036   0017F6  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3037   0017FA  0012               	return		;funcret
  3038   0017FC                     __end_of___aodiv:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _setMotorPWM *****************
  3042 ;; Defined at:
  3043 ;;		line 61 in file "dc_motor.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  m               2   17[COMRAM] PTR struct DC_motor
  3046 ;;		 -> main@motorR(9), main@motorL(9), 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  negDuty         1   22[COMRAM] unsigned char 
  3049 ;;  posDuty         1   21[COMRAM] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;Total ram usage:        6 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 5
  3066 ;; This function calls:
  3067 ;;		___lwdiv
  3068 ;;		___wmul
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;;		_stop
  3072 ;;		_turnLeft45
  3073 ;;		_turnRight45
  3074 ;;		_fullSpeedAhead
  3075 ;;		_reverseFullSpeed
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text12
  3080   0017FC                     __ptext12:
  3081                           	callstack 0
  3082   0017FC                     _setMotorPWM:
  3083                           	callstack 25
  3084   0017FC                     
  3085                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  3086   0017FC  EE20 F002          	lfsr	2,2
  3087   001800  5012               	movf	setMotorPWM@m^0,w,c
  3088   001802  26D9               	addwf	fsr2l,f,c
  3089   001804  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3090   001806  22DA               	addwfc	fsr2h,f,c
  3091   001808  50DF               	movf	indf2,w,c
  3092   00180A  B4D8               	btfsc	status,2,c
  3093   00180C  EF0A  F00C         	goto	u1401
  3094   001810  EF0C  F00C         	goto	u1400
  3095   001814                     u1401:
  3096   001814  EF40  F00C         	goto	l2710
  3097   001818                     u1400:
  3098   001818                     
  3099                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  3100   001818  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  3101   00181C  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3102   001820  50DF               	movf	indf2,w,c
  3103   001822  6E14               	movwf	??_setMotorPWM^0,c
  3104   001824  5014               	movf	??_setMotorPWM^0,w,c
  3105   001826  6E05               	movwf	___wmul@multiplier^0,c
  3106   001828  6A06               	clrf	(___wmul@multiplier+1)^0,c
  3107   00182A  EE20 F003          	lfsr	2,3
  3108   00182E  5012               	movf	setMotorPWM@m^0,w,c
  3109   001830  26D9               	addwf	fsr2l,f,c
  3110   001832  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3111   001834  22DA               	addwfc	fsr2h,f,c
  3112   001836  CFDE F007          	movff	postinc2,___wmul@multiplicand
  3113   00183A  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  3114   00183E  EC4D  F011         	call	___wmul	;wreg free
  3115   001842  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  3116   001846  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  3117   00184A  0E00               	movlw	0
  3118   00184C  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  3119   00184E  0E64               	movlw	100
  3120   001850  6E0D               	movwf	___lwdiv@divisor^0,c
  3121   001852  ECFB  F00E         	call	___lwdiv	;wreg free
  3122   001856  EE20 F003          	lfsr	2,3
  3123   00185A  5012               	movf	setMotorPWM@m^0,w,c
  3124   00185C  26D9               	addwf	fsr2l,f,c
  3125   00185E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3126   001860  22DA               	addwfc	fsr2h,f,c
  3127   001862  50DF               	movf	indf2,w,c
  3128   001864  6E15               	movwf	(??_setMotorPWM+1)^0,c
  3129   001866  500B               	movf	?___lwdiv^0,w,c
  3130   001868  5C15               	subwf	(??_setMotorPWM+1)^0,w,c
  3131   00186A  6E16               	movwf	setMotorPWM@posDuty^0,c
  3132   00186C                     
  3133                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  3134   00186C  EE20 F003          	lfsr	2,3
  3135   001870  5012               	movf	setMotorPWM@m^0,w,c
  3136   001872  26D9               	addwf	fsr2l,f,c
  3137   001874  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3138   001876  22DA               	addwfc	fsr2h,f,c
  3139   001878  50DF               	movf	indf2,w,c
  3140   00187A  6E17               	movwf	setMotorPWM@negDuty^0,c
  3141                           
  3142                           ;dc_motor.c: 68:     }
  3143   00187C  EF63  F00C         	goto	l2714
  3144   001880                     l2710:
  3145                           
  3146                           ;dc_motor.c: 70:         posDuty=0;
  3147   001880  0E00               	movlw	0
  3148   001882  6E16               	movwf	setMotorPWM@posDuty^0,c
  3149   001884                     
  3150                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  3151   001884  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  3152   001888  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3153   00188C  50DF               	movf	indf2,w,c
  3154   00188E  6E14               	movwf	??_setMotorPWM^0,c
  3155   001890  5014               	movf	??_setMotorPWM^0,w,c
  3156   001892  6E05               	movwf	___wmul@multiplier^0,c
  3157   001894  6A06               	clrf	(___wmul@multiplier+1)^0,c
  3158   001896  EE20 F003          	lfsr	2,3
  3159   00189A  5012               	movf	setMotorPWM@m^0,w,c
  3160   00189C  26D9               	addwf	fsr2l,f,c
  3161   00189E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3162   0018A0  22DA               	addwfc	fsr2h,f,c
  3163   0018A2  CFDE F007          	movff	postinc2,___wmul@multiplicand
  3164   0018A6  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  3165   0018AA  EC4D  F011         	call	___wmul	;wreg free
  3166   0018AE  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  3167   0018B2  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  3168   0018B6  0E00               	movlw	0
  3169   0018B8  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  3170   0018BA  0E64               	movlw	100
  3171   0018BC  6E0D               	movwf	___lwdiv@divisor^0,c
  3172   0018BE  ECFB  F00E         	call	___lwdiv	;wreg free
  3173   0018C2  500B               	movf	?___lwdiv^0,w,c
  3174   0018C4  6E17               	movwf	setMotorPWM@negDuty^0,c
  3175   0018C6                     l2714:
  3176                           
  3177                           ;dc_motor.c: 74:     if (m->direction) {
  3178   0018C6  EE20 F001          	lfsr	2,1
  3179   0018CA  5012               	movf	setMotorPWM@m^0,w,c
  3180   0018CC  26D9               	addwf	fsr2l,f,c
  3181   0018CE  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3182   0018D0  22DA               	addwfc	fsr2h,f,c
  3183   0018D2  50DF               	movf	indf2,w,c
  3184   0018D4  B4D8               	btfsc	status,2,c
  3185   0018D6  EF6F  F00C         	goto	u1411
  3186   0018DA  EF71  F00C         	goto	u1410
  3187   0018DE                     u1411:
  3188   0018DE  EF93  F00C         	goto	l2718
  3189   0018E2                     u1410:
  3190   0018E2                     
  3191                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  3192   0018E2  EE20 F005          	lfsr	2,5
  3193   0018E6  5012               	movf	setMotorPWM@m^0,w,c
  3194   0018E8  26D9               	addwf	fsr2l,f,c
  3195   0018EA  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3196   0018EC  22DA               	addwfc	fsr2h,f,c
  3197   0018EE  CFDE F014          	movff	postinc2,??_setMotorPWM
  3198   0018F2  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  3199   0018F6  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  3200   0018FA  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3201   0018FE  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  3202                           
  3203                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  3204   001902  EE20 F007          	lfsr	2,7
  3205   001906  5012               	movf	setMotorPWM@m^0,w,c
  3206   001908  26D9               	addwf	fsr2l,f,c
  3207   00190A  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3208   00190C  22DA               	addwfc	fsr2h,f,c
  3209   00190E  CFDE F014          	movff	postinc2,??_setMotorPWM
  3210   001912  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  3211   001916  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  3212   00191A  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3213   00191E  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  3214                           
  3215                           ;dc_motor.c: 77:     } else {
  3216   001922  EFB3  F00C         	goto	l86
  3217   001926                     l2718:
  3218                           
  3219                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  3220   001926  EE20 F005          	lfsr	2,5
  3221   00192A  5012               	movf	setMotorPWM@m^0,w,c
  3222   00192C  26D9               	addwf	fsr2l,f,c
  3223   00192E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3224   001930  22DA               	addwfc	fsr2h,f,c
  3225   001932  CFDE F014          	movff	postinc2,??_setMotorPWM
  3226   001936  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  3227   00193A  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  3228   00193E  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3229   001942  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  3230                           
  3231                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  3232   001946  EE20 F007          	lfsr	2,7
  3233   00194A  5012               	movf	setMotorPWM@m^0,w,c
  3234   00194C  26D9               	addwf	fsr2l,f,c
  3235   00194E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  3236   001950  22DA               	addwfc	fsr2h,f,c
  3237   001952  CFDE F014          	movff	postinc2,??_setMotorPWM
  3238   001956  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  3239   00195A  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  3240   00195E  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3241   001962  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  3242   001966                     l86:
  3243   001966  0012               	return		;funcret
  3244   001968                     __end_of_setMotorPWM:
  3245                           	callstack 0
  3246                           
  3247 ;; *************** function ___wmul *****************
  3248 ;; Defined at:
  3249 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  multiplier      2    4[COMRAM] unsigned int 
  3252 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  product         2    8[COMRAM] unsigned int 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  2    4[COMRAM] unsigned int 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, prodl, prodh
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3267 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;Total ram usage:        6 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 4
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_setMotorPWM
  3275 ;;		_normalise_readings
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text13
  3280   00229A                     __ptext13:
  3281                           	callstack 0
  3282   00229A                     ___wmul:
  3283                           	callstack 25
  3284   00229A  5005               	movf	___wmul@multiplier^0,w,c
  3285   00229C  0207               	mulwf	___wmul@multiplicand^0,c
  3286   00229E  CFF3 F009          	movff	prodl,___wmul@product
  3287   0022A2  CFF4 F00A          	movff	prodh,___wmul@product+1
  3288   0022A6  5005               	movf	___wmul@multiplier^0,w,c
  3289   0022A8  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3290   0022AA  50F3               	movf	243,w,c
  3291   0022AC  260A               	addwf	(___wmul@product+1)^0,f,c
  3292   0022AE  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3293   0022B0  0207               	mulwf	___wmul@multiplicand^0,c
  3294   0022B2  50F3               	movf	243,w,c
  3295   0022B4  260A               	addwf	(___wmul@product+1)^0,f,c
  3296   0022B6  C009  F005         	movff	___wmul@product,?___wmul
  3297   0022BA  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3298   0022BE  0012               	return		;funcret
  3299   0022C0                     __end_of___wmul:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function ___lwdiv *****************
  3303 ;; Defined at:
  3304 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  dividend        2   10[COMRAM] unsigned int 
  3307 ;;  divisor         2   12[COMRAM] unsigned int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  quotient        2   14[COMRAM] unsigned int 
  3310 ;;  counter         1   16[COMRAM] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2   10[COMRAM] unsigned int 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;Total ram usage:        7 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 4
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_setMotorPWM
  3331 ;;		_normalise_readings
  3332 ;;		_make_master_closeness
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text14
  3337   001DF6                     __ptext14:
  3338                           	callstack 0
  3339   001DF6                     ___lwdiv:
  3340                           	callstack 25
  3341   001DF6  0E00               	movlw	0
  3342   001DF8  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  3343   001DFA  0E00               	movlw	0
  3344   001DFC  6E0F               	movwf	___lwdiv@quotient^0,c
  3345   001DFE  500D               	movf	___lwdiv@divisor^0,w,c
  3346   001E00  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3347   001E02  B4D8               	btfsc	status,2,c
  3348   001E04  EF06  F00F         	goto	u1361
  3349   001E08  EF08  F00F         	goto	u1360
  3350   001E0C                     u1361:
  3351   001E0C  EF30  F00F         	goto	l997
  3352   001E10                     u1360:
  3353   001E10  0E01               	movlw	1
  3354   001E12  6E11               	movwf	___lwdiv@counter^0,c
  3355   001E14  EF10  F00F         	goto	l2630
  3356   001E18                     l2628:
  3357   001E18  90D8               	bcf	status,0,c
  3358   001E1A  360D               	rlcf	___lwdiv@divisor^0,f,c
  3359   001E1C  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3360   001E1E  2A11               	incf	___lwdiv@counter^0,f,c
  3361   001E20                     l2630:
  3362   001E20  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  3363   001E22  EF15  F00F         	goto	u1371
  3364   001E26  EF17  F00F         	goto	u1370
  3365   001E2A                     u1371:
  3366   001E2A  EF0C  F00F         	goto	l2628
  3367   001E2E                     u1370:
  3368   001E2E                     l2632:
  3369   001E2E  90D8               	bcf	status,0,c
  3370   001E30  360F               	rlcf	___lwdiv@quotient^0,f,c
  3371   001E32  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3372   001E34  500D               	movf	___lwdiv@divisor^0,w,c
  3373   001E36  5C0B               	subwf	___lwdiv@dividend^0,w,c
  3374   001E38  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3375   001E3A  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3376   001E3C  A0D8               	btfss	status,0,c
  3377   001E3E  EF23  F00F         	goto	u1381
  3378   001E42  EF25  F00F         	goto	u1380
  3379   001E46                     u1381:
  3380   001E46  EF2A  F00F         	goto	l2640
  3381   001E4A                     u1380:
  3382   001E4A  500D               	movf	___lwdiv@divisor^0,w,c
  3383   001E4C  5E0B               	subwf	___lwdiv@dividend^0,f,c
  3384   001E4E  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3385   001E50  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3386   001E52  800F               	bsf	___lwdiv@quotient^0,0,c
  3387   001E54                     l2640:
  3388   001E54  90D8               	bcf	status,0,c
  3389   001E56  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3390   001E58  320D               	rrcf	___lwdiv@divisor^0,f,c
  3391   001E5A  2E11               	decfsz	___lwdiv@counter^0,f,c
  3392   001E5C  EF17  F00F         	goto	l2632
  3393   001E60                     l997:
  3394   001E60  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  3395   001E64  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3396   001E68  0012               	return		;funcret
  3397   001E6A                     __end_of___lwdiv:
  3398                           	callstack 0
  3399                           
  3400 ;; *************** function _sendStringSerial4 *****************
  3401 ;; Defined at:
  3402 ;;		line 39 in file "serial.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  string          2    5[COMRAM] PTR unsigned char 
  3405 ;;		 -> main@buf(150), 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3421 ;;Total ram usage:        2 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 5
  3424 ;; This function calls:
  3425 ;;		_sendCharSerial4
  3426 ;; This function is called by:
  3427 ;;		_main
  3428 ;;		_card_response
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text15
  3433   0021F0                     __ptext15:
  3434                           	callstack 0
  3435   0021F0                     _sendStringSerial4:
  3436                           	callstack 25
  3437   0021F0                     
  3438                           ;serial.c: 40:  while(*string != 0) {
  3439   0021F0  EF03  F011         	goto	l2836
  3440   0021F4                     l2832:
  3441                           
  3442                           ;serial.c: 41:         sendCharSerial4(*string++);
  3443   0021F4  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  3444   0021F8  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3445   0021FC  50DF               	movf	indf2,w,c
  3446   0021FE  ECA0  F011         	call	_sendCharSerial4
  3447   002202  4A06               	infsnz	sendStringSerial4@string^0,f,c
  3448   002204  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  3449   002206                     l2836:
  3450                           
  3451                           ;serial.c: 40:  while(*string != 0) {
  3452   002206  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  3453   00220A  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3454   00220E  50DF               	movf	indf2,w,c
  3455   002210  A4D8               	btfss	status,2,c
  3456   002212  EF0D  F011         	goto	u1461
  3457   002216  EF0F  F011         	goto	u1460
  3458   00221A                     u1461:
  3459   00221A  EFFA  F010         	goto	l2832
  3460   00221E                     u1460:
  3461   00221E  0012               	return		;funcret
  3462   002220                     __end_of_sendStringSerial4:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _sendCharSerial4 *****************
  3466 ;; Defined at:
  3467 ;;		line 32 in file "serial.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  charToSend      1    wreg     unsigned char 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  charToSend      1    4[COMRAM] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;Total ram usage:        1 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 4
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_sendStringSerial4
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text16
  3496   002340                     __ptext16:
  3497                           	callstack 0
  3498   002340                     _sendCharSerial4:
  3499                           	callstack 25
  3500                           
  3501                           ;incstack = 0
  3502                           ;sendCharSerial4@charToSend stored from wreg
  3503   002340  6E05               	movwf	sendCharSerial4@charToSend^0,c
  3504   002342                     l404:
  3505   002342  010E               	movlb	14	; () banked
  3506   002344  A537               	btfss	55,2,b	;volatile
  3507   002346  EFA7  F011         	goto	u1331
  3508   00234A  EFA9  F011         	goto	u1330
  3509   00234E                     u1331:
  3510   00234E  EFA1  F011         	goto	l404
  3511   002352                     u1330:
  3512   002352                     
  3513                           ; BSR set to: 14
  3514                           ;serial.c: 34:     TX4REG = charToSend;
  3515   002352  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3516   002356                     
  3517                           ; BSR set to: 14
  3518   002356  0012               	return		;funcret
  3519   002358                     __end_of_sendCharSerial4:
  3520                           	callstack 0
  3521                           
  3522 ;; *************** function _initUSART4 *****************
  3523 ;; Defined at:
  3524 ;;		line 6 in file "serial.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;Total ram usage:        0 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; Hardware stack levels required when called: 4
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text17
  3553   0022E2                     __ptext17:
  3554                           	callstack 0
  3555   0022E2                     _initUSART4:
  3556                           	callstack 26
  3557   0022E2                     
  3558                           ;serial.c: 10:     RC0PPS = 0x12;
  3559   0022E2  0E12               	movlw	18
  3560   0022E4  010E               	movlb	14	; () banked
  3561   0022E6  6F62               	movwf	98,b	;volatile
  3562                           
  3563                           ;serial.c: 11:     RX4PPS = 0x11;
  3564   0022E8  0E11               	movlw	17
  3565   0022EA  6F15               	movwf	21,b	;volatile
  3566   0022EC                     
  3567                           ; BSR set to: 14
  3568                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3569   0022EC  8283               	bsf	131,1,c	;volatile
  3570   0022EE                     
  3571                           ; BSR set to: 14
  3572                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3573   0022EE  97E9               	bcf	233,3,b	;volatile
  3574   0022F0                     
  3575                           ; BSR set to: 14
  3576                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3577   0022F0  95E8               	bcf	232,2,b	;volatile
  3578                           
  3579                           ;serial.c: 17:     SP4BRGL = 51;
  3580   0022F2  0E33               	movlw	51
  3581   0022F4  6FE5               	movwf	229,b	;volatile
  3582                           
  3583                           ;serial.c: 18:     SP4BRGH = 0;
  3584   0022F6  0E00               	movlw	0
  3585   0022F8  6FE6               	movwf	230,b	;volatile
  3586   0022FA                     
  3587                           ; BSR set to: 14
  3588                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3589   0022FA  89E7               	bsf	231,4,b	;volatile
  3590   0022FC                     
  3591                           ; BSR set to: 14
  3592                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3593   0022FC  8BE8               	bsf	232,5,b	;volatile
  3594   0022FE                     
  3595                           ; BSR set to: 14
  3596                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3597   0022FE  8FE7               	bsf	231,7,b	;volatile
  3598   002300                     
  3599                           ; BSR set to: 14
  3600   002300  0012               	return		;funcret
  3601   002302                     __end_of_initUSART4:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _initDCmotorsPWM *****************
  3605 ;; Defined at:
  3606 ;;		line 6 in file "dc_motor.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;Total ram usage:        0 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 4
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_main
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text18
  3635   001CF4                     __ptext18:
  3636                           	callstack 0
  3637   001CF4                     _initDCmotorsPWM:
  3638                           	callstack 26
  3639   001CF4                     
  3640                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3641   001CF4  9485               	bcf	133,2,c	;volatile
  3642                           
  3643                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3644   001CF6  9885               	bcf	133,4,c	;volatile
  3645                           
  3646                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3647   001CF8  9E83               	bcf	131,7,c	;volatile
  3648                           
  3649                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3650   001CFA  9C87               	bcf	135,6,c	;volatile
  3651   001CFC                     
  3652                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3653   001CFC  0E05               	movlw	5
  3654   001CFE  010E               	movlb	14	; () banked
  3655   001D00  6F74               	movwf	116,b	;volatile
  3656                           
  3657                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3658   001D02  0E06               	movlw	6
  3659   001D04  6F76               	movwf	118,b	;volatile
  3660                           
  3661                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3662   001D06  0E07               	movlw	7
  3663   001D08  6F69               	movwf	105,b	;volatile
  3664                           
  3665                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3666   001D0A  0E08               	movlw	8
  3667   001D0C  6F88               	movwf	136,b	;volatile
  3668                           
  3669                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3670   001D0E  50BD               	movf	189,w,c	;volatile
  3671   001D10  0B8F               	andlw	-113
  3672   001D12  0940               	iorlw	64
  3673   001D14  6EBD               	movwf	189,c	;volatile
  3674                           
  3675                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3676   001D16  0EE0               	movlw	-32
  3677   001D18  16BE               	andwf	190,f,c	;volatile
  3678                           
  3679                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3680   001D1A  50BF               	movf	191,w,c	;volatile
  3681   001D1C  0BF0               	andlw	-16
  3682   001D1E  0901               	iorlw	1
  3683   001D20  6EBF               	movwf	191,c	;volatile
  3684                           
  3685                           ;dc_motor.c: 26:     T2PR=99;
  3686   001D22  0E63               	movlw	99
  3687   001D24  6EBC               	movwf	188,c	;volatile
  3688   001D26                     
  3689                           ; BSR set to: 14
  3690                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3691   001D26  8EBD               	bsf	189,7,c	;volatile
  3692                           
  3693                           ;dc_motor.c: 31:     CCPR1H=0;
  3694   001D28  0E00               	movlw	0
  3695   001D2A  6EAA               	movwf	170,c	;volatile
  3696                           
  3697                           ;dc_motor.c: 32:     CCPR2H=0;
  3698   001D2C  0E00               	movlw	0
  3699   001D2E  6EA6               	movwf	166,c	;volatile
  3700                           
  3701                           ;dc_motor.c: 33:     CCPR3H=0;
  3702   001D30  0E00               	movlw	0
  3703   001D32  010F               	movlb	15	; () banked
  3704   001D34  6F25               	movwf	37,b	;volatile
  3705                           
  3706                           ;dc_motor.c: 34:     CCPR4H=0;
  3707   001D36  0E00               	movlw	0
  3708   001D38  6F21               	movwf	33,b	;volatile
  3709                           
  3710                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3711   001D3A  0EFC               	movlw	-4
  3712   001D3C  16AD               	andwf	173,f,c	;volatile
  3713                           
  3714                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3715   001D3E  0EF3               	movlw	-13
  3716   001D40  16AD               	andwf	173,f,c	;volatile
  3717                           
  3718                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3719   001D42  0ECF               	movlw	-49
  3720   001D44  16AD               	andwf	173,f,c	;volatile
  3721                           
  3722                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3723   001D46  0E3F               	movlw	-193
  3724   001D48  16AD               	andwf	173,f,c	;volatile
  3725   001D4A                     
  3726                           ; BSR set to: 15
  3727                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3728   001D4A  88AB               	bsf	171,4,c	;volatile
  3729                           
  3730                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3731   001D4C  50AB               	movf	171,w,c	;volatile
  3732   001D4E  0BF0               	andlw	-16
  3733   001D50  090C               	iorlw	12
  3734   001D52  6EAB               	movwf	171,c	;volatile
  3735   001D54                     
  3736                           ; BSR set to: 15
  3737                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3738   001D54  8EAB               	bsf	171,7,c	;volatile
  3739   001D56                     
  3740                           ; BSR set to: 15
  3741                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3742   001D56  88A7               	bsf	167,4,c	;volatile
  3743                           
  3744                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3745   001D58  50A7               	movf	167,w,c	;volatile
  3746   001D5A  0BF0               	andlw	-16
  3747   001D5C  090C               	iorlw	12
  3748   001D5E  6EA7               	movwf	167,c	;volatile
  3749   001D60                     
  3750                           ; BSR set to: 15
  3751                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3752   001D60  8EA7               	bsf	167,7,c	;volatile
  3753   001D62                     
  3754                           ; BSR set to: 15
  3755                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3756   001D62  8926               	bsf	38,4,b	;volatile
  3757                           
  3758                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3759   001D64  5126               	movf	38,w,b	;volatile
  3760   001D66  0BF0               	andlw	-16
  3761   001D68  090C               	iorlw	12
  3762   001D6A  6F26               	movwf	38,b	;volatile
  3763   001D6C                     
  3764                           ; BSR set to: 15
  3765                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3766   001D6C  8F26               	bsf	38,7,b	;volatile
  3767   001D6E                     
  3768                           ; BSR set to: 15
  3769                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3770   001D6E  8922               	bsf	34,4,b	;volatile
  3771                           
  3772                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3773   001D70  5122               	movf	34,w,b	;volatile
  3774   001D72  0BF0               	andlw	-16
  3775   001D74  090C               	iorlw	12
  3776   001D76  6F22               	movwf	34,b	;volatile
  3777   001D78                     
  3778                           ; BSR set to: 15
  3779                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3780   001D78  8F22               	bsf	34,7,b	;volatile
  3781   001D7A                     
  3782                           ; BSR set to: 15
  3783   001D7A  0012               	return		;funcret
  3784   001D7C                     __end_of_initDCmotorsPWM:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _color_read_Clear *****************
  3788 ;; Defined at:
  3789 ;;		line 71 in file "color.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  tmp             2   13[COMRAM] unsigned int 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  2    8[COMRAM] unsigned int 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;Total ram usage:        7 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 6
  3810 ;; This function calls:
  3811 ;;		_I2C_2_Master_Read
  3812 ;;		_I2C_2_Master_RepStart
  3813 ;;		_I2C_2_Master_Start
  3814 ;;		_I2C_2_Master_Stop
  3815 ;;		_I2C_2_Master_Write
  3816 ;; This function is called by:
  3817 ;;		_main
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text19
  3822   001F78                     __ptext19:
  3823                           	callstack 0
  3824   001F78                     _color_read_Clear:
  3825                           	callstack 24
  3826   001F78                     
  3827                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3828   001F78  ECE0  F011         	call	_I2C_2_Master_Start	;wreg free
  3829                           
  3830                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3831   001F7C  0E52               	movlw	82
  3832   001F7E  ECCA  F011         	call	_I2C_2_Master_Write
  3833                           
  3834                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  3835   001F82  0EB4               	movlw	180
  3836   001F84  ECCA  F011         	call	_I2C_2_Master_Write
  3837                           
  3838                           ;color.c: 77:  I2C_2_Master_RepStart();
  3839   001F88  ECD6  F011         	call	_I2C_2_Master_RepStart	;wreg free
  3840                           
  3841                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3842   001F8C  0E53               	movlw	83
  3843   001F8E  ECCA  F011         	call	_I2C_2_Master_Write
  3844                           
  3845                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  3846   001F92  0E01               	movlw	1
  3847   001F94  EC7E  F010         	call	_I2C_2_Master_Read
  3848   001F98  6E0B               	movwf	??_color_read_Clear^0,c
  3849   001F9A  500B               	movf	??_color_read_Clear^0,w,c
  3850   001F9C  6E0E               	movwf	color_read_Clear@tmp^0,c
  3851   001F9E  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3852                           
  3853                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3854   001FA0  0E00               	movlw	0
  3855   001FA2  EC7E  F010         	call	_I2C_2_Master_Read
  3856   001FA6  6E0B               	movwf	??_color_read_Clear^0,c
  3857   001FA8  500B               	movf	??_color_read_Clear^0,w,c
  3858   001FAA  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3859   001FAC  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3860   001FAE  500E               	movf	color_read_Clear@tmp^0,w,c
  3861   001FB0  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3862   001FB2  6E0E               	movwf	color_read_Clear@tmp^0,c
  3863   001FB4  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3864   001FB6  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3865   001FB8  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3866                           
  3867                           ;color.c: 81:  I2C_2_Master_Stop();
  3868   001FBA  ECDB  F011         	call	_I2C_2_Master_Stop	;wreg free
  3869   001FBE                     
  3870                           ;color.c: 82:  return tmp;
  3871   001FBE  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3872   001FC2  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3873   001FC6  0012               	return		;funcret
  3874   001FC8                     __end_of_color_read_Clear:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _color_click_init *****************
  3878 ;; Defined at:
  3879 ;;		line 5 in file "color.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;Total ram usage:        1 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; Hardware stack levels required when called: 7
  3900 ;; This function calls:
  3901 ;;		_I2C_2_Master_Init
  3902 ;;		_color_writetoaddr
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text20
  3909   0021BC                     __ptext20:
  3910                           	callstack 0
  3911   0021BC                     _color_click_init:
  3912                           	callstack 23
  3913   0021BC                     
  3914                           ;color.c: 8:     I2C_2_Master_Init();
  3915   0021BC  EC10  F011         	call	_I2C_2_Master_Init	;wreg free
  3916   0021C0                     
  3917                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3918   0021C0  0E01               	movlw	1
  3919   0021C2  6E07               	movwf	color_writetoaddr@value^0,c
  3920   0021C4  0E00               	movlw	0
  3921   0021C6  EC81  F011         	call	_color_writetoaddr
  3922   0021CA                     
  3923                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3924   0021CA  0E3F               	movlw	63
  3925   0021CC  6E09               	movwf	??_color_click_init^0,c
  3926   0021CE  0E55               	movlw	85
  3927   0021D0                     u2197:
  3928   0021D0  2EE8               	decfsz	wreg,f,c
  3929   0021D2  D7FE               	bra	u2197
  3930   0021D4  2E09               	decfsz	??_color_click_init^0,f,c
  3931   0021D6  D7FC               	bra	u2197
  3932   0021D8  F000               	nop	
  3933   0021DA                     
  3934                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3935   0021DA  0E03               	movlw	3
  3936   0021DC  6E07               	movwf	color_writetoaddr@value^0,c
  3937   0021DE  0E00               	movlw	0
  3938   0021E0  EC81  F011         	call	_color_writetoaddr
  3939   0021E4                     
  3940                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3941   0021E4  0ED5               	movlw	213
  3942   0021E6  6E07               	movwf	color_writetoaddr@value^0,c
  3943   0021E8  0E01               	movlw	1
  3944   0021EA  EC81  F011         	call	_color_writetoaddr
  3945   0021EE  0012               	return		;funcret
  3946   0021F0                     __end_of_color_click_init:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _I2C_2_Master_Init *****************
  3950 ;; Defined at:
  3951 ;;		line 4 in file "i2c.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 4
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_color_click_init
  3976 ;;		_main
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text21
  3981   002220                     __ptext21:
  3982                           	callstack 0
  3983   002220                     _I2C_2_Master_Init:
  3984                           	callstack 25
  3985   002220                     
  3986                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3987   002220  010E               	movlb	14	; () banked
  3988   002222  51D9               	movf	217,w,b	;volatile
  3989   002224  0BF0               	andlw	-16
  3990   002226  0908               	iorlw	8
  3991   002228  6FD9               	movwf	217,b	;volatile
  3992   00222A                     
  3993                           ; BSR set to: 14
  3994                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3995   00222A  8BD9               	bsf	217,5,b	;volatile
  3996                           
  3997                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3998   00222C  0E9F               	movlw	159
  3999   00222E  6FD6               	movwf	214,b	;volatile
  4000   002230                     
  4001                           ; BSR set to: 14
  4002                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4003   002230  8A84               	bsf	132,5,c	;volatile
  4004   002232                     
  4005                           ; BSR set to: 14
  4006                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4007   002232  8C84               	bsf	132,6,c	;volatile
  4008   002234                     
  4009                           ; BSR set to: 14
  4010                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4011   002234  9BA7               	bcf	167,5,b	;volatile
  4012   002236                     
  4013                           ; BSR set to: 14
  4014                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4015   002236  9DA7               	bcf	167,6,b	;volatile
  4016                           
  4017                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4018   002238  0E1D               	movlw	29
  4019   00223A  6F1D               	movwf	29,b	;volatile
  4020                           
  4021                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4022   00223C  0E1E               	movlw	30
  4023   00223E  6F1C               	movwf	28,b	;volatile
  4024                           
  4025                           ;i2c.c: 18:   RD5PPS=0x1C;
  4026   002240  0E1C               	movlw	28
  4027   002242  6F6F               	movwf	111,b	;volatile
  4028                           
  4029                           ;i2c.c: 19:   RD6PPS=0x1B;
  4030   002244  0E1B               	movlw	27
  4031   002246  6F70               	movwf	112,b	;volatile
  4032   002248                     
  4033                           ; BSR set to: 14
  4034   002248  0012               	return		;funcret
  4035   00224A                     __end_of_I2C_2_Master_Init:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _collect_avg_readings *****************
  4039 ;; Defined at:
  4040 ;;		line 10 in file "colour_identify.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  red_read        2   15[COMRAM] PTR unsigned int 
  4043 ;;		 -> main@red_read(2), 
  4044 ;;  green_read      2   17[COMRAM] PTR unsigned int 
  4045 ;;		 -> main@green_read(2), 
  4046 ;;  blue_read       2   19[COMRAM] PTR unsigned int 
  4047 ;;		 -> main@blue_read(2), 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  i               2   29[COMRAM] int 
  4050 ;;  i               2   27[COMRAM] int 
  4051 ;;  i               2   25[COMRAM] int 
  4052 ;;  i               2   23[COMRAM] int 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4062 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4065 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4066 ;;Total ram usage:       16 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; Hardware stack levels required when called: 7
  4069 ;; This function calls:
  4070 ;;		_color_read_Blue
  4071 ;;		_color_read_Green
  4072 ;;		_color_read_Red
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;;		_card_response
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text22
  4080   00148E                     __ptext22:
  4081                           	callstack 0
  4082   00148E                     _collect_avg_readings:
  4083                           	callstack 23
  4084   00148E                     
  4085                           ;colour_identify.c: 10: void collect_avg_readings(unsigned int *red_read, unsigned int *
      +                          green_read, unsigned int *blue_read);colour_identify.c: 11: {;colour_identify.c: 14:    
      +                           for (int i = 0; i <= 500; i++){
  4086   00148E  0E00               	movlw	0
  4087   001490  6E19               	movwf	(collect_avg_readings@i+1)^0,c
  4088   001492  0E00               	movlw	0
  4089   001494  6E18               	movwf	collect_avg_readings@i^0,c
  4090   001496                     l2764:
  4091                           
  4092                           ;colour_identify.c: 15:         *red_read = color_read_Red();
  4093   001496  ECE4  F00F         	call	_color_read_Red	;wreg free
  4094   00149A  C010  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4095   00149E  C011  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4096   0014A2  C009  FFDE         	movff	?_color_read_Red,postinc2
  4097   0014A6  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  4098                           
  4099                           ;colour_identify.c: 16:         *green_read = color_read_Green();
  4100   0014AA  EC0C  F010         	call	_color_read_Green	;wreg free
  4101   0014AE  C012  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4102   0014B2  C013  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4103   0014B6  C009  FFDE         	movff	?_color_read_Green,postinc2
  4104   0014BA  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  4105                           
  4106                           ;colour_identify.c: 17:         *blue_read = color_read_Blue();
  4107   0014BE  EC34  F010         	call	_color_read_Blue	;wreg free
  4108   0014C2  C014  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4109   0014C6  C015  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4110   0014CA  C009  FFDE         	movff	?_color_read_Blue,postinc2
  4111   0014CE  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  4112   0014D2                     
  4113                           ;colour_identify.c: 18:     }
  4114   0014D2  4A18               	infsnz	collect_avg_readings@i^0,f,c
  4115   0014D4  2A19               	incf	(collect_avg_readings@i+1)^0,f,c
  4116   0014D6  BE19               	btfsc	(collect_avg_readings@i+1)^0,7,c
  4117   0014D8  EF77  F00A         	goto	u1421
  4118   0014DC  0EF5               	movlw	245
  4119   0014DE  5C18               	subwf	collect_avg_readings@i^0,w,c
  4120   0014E0  0E01               	movlw	1
  4121   0014E2  5819               	subwfb	(collect_avg_readings@i+1)^0,w,c
  4122   0014E4  A0D8               	btfss	status,0,c
  4123   0014E6  EF77  F00A         	goto	u1421
  4124   0014EA  EF79  F00A         	goto	u1420
  4125   0014EE                     u1421:
  4126   0014EE  EF4B  F00A         	goto	l2764
  4127   0014F2                     u1420:
  4128   0014F2                     
  4129                           ;colour_identify.c: 22:     for(int i = 0; i <= 2; i++){
  4130   0014F2  0E00               	movlw	0
  4131   0014F4  6E1B               	movwf	(collect_avg_readings@i_1566+1)^0,c
  4132   0014F6  0E00               	movlw	0
  4133   0014F8  6E1A               	movwf	collect_avg_readings@i_1566^0,c
  4134   0014FA                     l2776:
  4135                           
  4136                           ;colour_identify.c: 23:         *red_read += color_read_Red();
  4137   0014FA  ECE4  F00F         	call	_color_read_Red	;wreg free
  4138   0014FE  C010  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4139   001502  C011  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4140   001506  5009               	movf	?_color_read_Red^0,w,c
  4141   001508  26DE               	addwf	postinc2,f,c
  4142   00150A  500A               	movf	(?_color_read_Red+1)^0,w,c
  4143   00150C  22DD               	addwfc	postdec2,f,c
  4144   00150E                     
  4145                           ;colour_identify.c: 24:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4146   00150E  0E11               	movlw	17
  4147   001510  6E17               	movwf	(??_collect_avg_readings+1)^0,c
  4148   001512  0E3C               	movlw	60
  4149   001514  6E16               	movwf	??_collect_avg_readings^0,c
  4150   001516  0ECB               	movlw	203
  4151   001518                     u2207:
  4152   001518  2EE8               	decfsz	wreg,f,c
  4153   00151A  D7FE               	bra	u2207
  4154   00151C  2E16               	decfsz	??_collect_avg_readings^0,f,c
  4155   00151E  D7FC               	bra	u2207
  4156   001520  2E17               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4157   001522  D7FA               	bra	u2207
  4158   001524  F000               	nop	
  4159   001526                     
  4160                           ;colour_identify.c: 25:     }
  4161   001526  4A1A               	infsnz	collect_avg_readings@i_1566^0,f,c
  4162   001528  2A1B               	incf	(collect_avg_readings@i_1566+1)^0,f,c
  4163   00152A  BE1B               	btfsc	(collect_avg_readings@i_1566+1)^0,7,c
  4164   00152C  EFA1  F00A         	goto	u1431
  4165   001530  501B               	movf	(collect_avg_readings@i_1566+1)^0,w,c
  4166   001532  E109               	bnz	u1430
  4167   001534  0E03               	movlw	3
  4168   001536  5C1A               	subwf	collect_avg_readings@i_1566^0,w,c
  4169   001538  A0D8               	btfss	status,0,c
  4170   00153A  EFA1  F00A         	goto	u1431
  4171   00153E  EFA3  F00A         	goto	u1430
  4172   001542                     u1431:
  4173   001542  EF7D  F00A         	goto	l2776
  4174   001546                     u1430:
  4175   001546                     
  4176                           ;colour_identify.c: 26:     *red_read = *red_read/4;
  4177   001546  C010  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4178   00154A  C011  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4179   00154E  CFDE F016          	movff	postinc2,??_collect_avg_readings
  4180   001552  CFDD F017          	movff	postdec2,??_collect_avg_readings+1
  4181   001556  90D8               	bcf	status,0,c
  4182   001558  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  4183   00155A  3216               	rrcf	??_collect_avg_readings^0,f,c
  4184   00155C  90D8               	bcf	status,0,c
  4185   00155E  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  4186   001560  3216               	rrcf	??_collect_avg_readings^0,f,c
  4187   001562  C010  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4188   001566  C011  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4189   00156A  C016  FFDE         	movff	??_collect_avg_readings,postinc2
  4190   00156E  C017  FFDD         	movff	??_collect_avg_readings+1,postdec2
  4191   001572                     
  4192                           ;colour_identify.c: 28:     for(int i = 0; i <= 2; i++){
  4193   001572  0E00               	movlw	0
  4194   001574  6E1D               	movwf	(collect_avg_readings@i_1567+1)^0,c
  4195   001576  0E00               	movlw	0
  4196   001578  6E1C               	movwf	collect_avg_readings@i_1567^0,c
  4197   00157A                     l2792:
  4198                           
  4199                           ;colour_identify.c: 29:         *green_read += color_read_Green();
  4200   00157A  EC0C  F010         	call	_color_read_Green	;wreg free
  4201   00157E  C012  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4202   001582  C013  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4203   001586  5009               	movf	?_color_read_Green^0,w,c
  4204   001588  26DE               	addwf	postinc2,f,c
  4205   00158A  500A               	movf	(?_color_read_Green+1)^0,w,c
  4206   00158C  22DD               	addwfc	postdec2,f,c
  4207   00158E                     
  4208                           ;colour_identify.c: 30:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4209   00158E  0E11               	movlw	17
  4210   001590  6E17               	movwf	(??_collect_avg_readings+1)^0,c
  4211   001592  0E3C               	movlw	60
  4212   001594  6E16               	movwf	??_collect_avg_readings^0,c
  4213   001596  0ECB               	movlw	203
  4214   001598                     u2217:
  4215   001598  2EE8               	decfsz	wreg,f,c
  4216   00159A  D7FE               	bra	u2217
  4217   00159C  2E16               	decfsz	??_collect_avg_readings^0,f,c
  4218   00159E  D7FC               	bra	u2217
  4219   0015A0  2E17               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4220   0015A2  D7FA               	bra	u2217
  4221   0015A4  F000               	nop	
  4222   0015A6                     
  4223                           ;colour_identify.c: 31:     }
  4224   0015A6  4A1C               	infsnz	collect_avg_readings@i_1567^0,f,c
  4225   0015A8  2A1D               	incf	(collect_avg_readings@i_1567+1)^0,f,c
  4226   0015AA  BE1D               	btfsc	(collect_avg_readings@i_1567+1)^0,7,c
  4227   0015AC  EFE1  F00A         	goto	u1441
  4228   0015B0  501D               	movf	(collect_avg_readings@i_1567+1)^0,w,c
  4229   0015B2  E109               	bnz	u1440
  4230   0015B4  0E03               	movlw	3
  4231   0015B6  5C1C               	subwf	collect_avg_readings@i_1567^0,w,c
  4232   0015B8  A0D8               	btfss	status,0,c
  4233   0015BA  EFE1  F00A         	goto	u1441
  4234   0015BE  EFE3  F00A         	goto	u1440
  4235   0015C2                     u1441:
  4236   0015C2  EFBD  F00A         	goto	l2792
  4237   0015C6                     u1440:
  4238   0015C6                     
  4239                           ;colour_identify.c: 32:     *green_read = *green_read/4;
  4240   0015C6  C012  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4241   0015CA  C013  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4242   0015CE  CFDE F016          	movff	postinc2,??_collect_avg_readings
  4243   0015D2  CFDD F017          	movff	postdec2,??_collect_avg_readings+1
  4244   0015D6  90D8               	bcf	status,0,c
  4245   0015D8  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  4246   0015DA  3216               	rrcf	??_collect_avg_readings^0,f,c
  4247   0015DC  90D8               	bcf	status,0,c
  4248   0015DE  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  4249   0015E0  3216               	rrcf	??_collect_avg_readings^0,f,c
  4250   0015E2  C012  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4251   0015E6  C013  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4252   0015EA  C016  FFDE         	movff	??_collect_avg_readings,postinc2
  4253   0015EE  C017  FFDD         	movff	??_collect_avg_readings+1,postdec2
  4254   0015F2                     
  4255                           ;colour_identify.c: 34:     for(int i = 0; i <= 2; i++){
  4256   0015F2  0E00               	movlw	0
  4257   0015F4  6E1F               	movwf	(collect_avg_readings@i_1568+1)^0,c
  4258   0015F6  0E00               	movlw	0
  4259   0015F8  6E1E               	movwf	collect_avg_readings@i_1568^0,c
  4260   0015FA                     l2808:
  4261                           
  4262                           ;colour_identify.c: 35:         *blue_read += color_read_Blue();
  4263   0015FA  EC34  F010         	call	_color_read_Blue	;wreg free
  4264   0015FE  C014  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4265   001602  C015  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4266   001606  5009               	movf	?_color_read_Blue^0,w,c
  4267   001608  26DE               	addwf	postinc2,f,c
  4268   00160A  500A               	movf	(?_color_read_Blue+1)^0,w,c
  4269   00160C  22DD               	addwfc	postdec2,f,c
  4270   00160E                     
  4271                           ;colour_identify.c: 36:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4272   00160E  0E11               	movlw	17
  4273   001610  6E17               	movwf	(??_collect_avg_readings+1)^0,c
  4274   001612  0E3C               	movlw	60
  4275   001614  6E16               	movwf	??_collect_avg_readings^0,c
  4276   001616  0ECB               	movlw	203
  4277   001618                     u2227:
  4278   001618  2EE8               	decfsz	wreg,f,c
  4279   00161A  D7FE               	bra	u2227
  4280   00161C  2E16               	decfsz	??_collect_avg_readings^0,f,c
  4281   00161E  D7FC               	bra	u2227
  4282   001620  2E17               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4283   001622  D7FA               	bra	u2227
  4284   001624  F000               	nop	
  4285   001626                     
  4286                           ;colour_identify.c: 37:     }
  4287   001626  4A1E               	infsnz	collect_avg_readings@i_1568^0,f,c
  4288   001628  2A1F               	incf	(collect_avg_readings@i_1568+1)^0,f,c
  4289   00162A  BE1F               	btfsc	(collect_avg_readings@i_1568+1)^0,7,c
  4290   00162C  EF21  F00B         	goto	u1451
  4291   001630  501F               	movf	(collect_avg_readings@i_1568+1)^0,w,c
  4292   001632  E109               	bnz	u1450
  4293   001634  0E03               	movlw	3
  4294   001636  5C1E               	subwf	collect_avg_readings@i_1568^0,w,c
  4295   001638  A0D8               	btfss	status,0,c
  4296   00163A  EF21  F00B         	goto	u1451
  4297   00163E  EF23  F00B         	goto	u1450
  4298   001642                     u1451:
  4299   001642  EFFD  F00A         	goto	l2808
  4300   001646                     u1450:
  4301   001646                     
  4302                           ;colour_identify.c: 38:     *blue_read = *blue_read/4;
  4303   001646  C014  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4304   00164A  C015  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4305   00164E  CFDE F016          	movff	postinc2,??_collect_avg_readings
  4306   001652  CFDD F017          	movff	postdec2,??_collect_avg_readings+1
  4307   001656  90D8               	bcf	status,0,c
  4308   001658  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  4309   00165A  3216               	rrcf	??_collect_avg_readings^0,f,c
  4310   00165C  90D8               	bcf	status,0,c
  4311   00165E  3217               	rrcf	(??_collect_avg_readings+1)^0,f,c
  4312   001660  3216               	rrcf	??_collect_avg_readings^0,f,c
  4313   001662  C014  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4314   001666  C015  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4315   00166A  C016  FFDE         	movff	??_collect_avg_readings,postinc2
  4316   00166E  C017  FFDD         	movff	??_collect_avg_readings+1,postdec2
  4317   001672  0012               	return		;funcret
  4318   001674                     __end_of_collect_avg_readings:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _color_read_Red *****************
  4322 ;; Defined at:
  4323 ;;		line 29 in file "color.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  tmp             2   13[COMRAM] unsigned int 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  2    8[COMRAM] unsigned int 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4340 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4341 ;;Total ram usage:        7 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 6
  4344 ;; This function calls:
  4345 ;;		_I2C_2_Master_Read
  4346 ;;		_I2C_2_Master_RepStart
  4347 ;;		_I2C_2_Master_Start
  4348 ;;		_I2C_2_Master_Stop
  4349 ;;		_I2C_2_Master_Write
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;;		_collect_avg_readings
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text23
  4357   001FC8                     __ptext23:
  4358                           	callstack 0
  4359   001FC8                     _color_read_Red:
  4360                           	callstack 24
  4361   001FC8                     
  4362                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  4363   001FC8  ECE0  F011         	call	_I2C_2_Master_Start	;wreg free
  4364                           
  4365                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  4366   001FCC  0E52               	movlw	82
  4367   001FCE  ECCA  F011         	call	_I2C_2_Master_Write
  4368                           
  4369                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  4370   001FD2  0EB6               	movlw	182
  4371   001FD4  ECCA  F011         	call	_I2C_2_Master_Write
  4372                           
  4373                           ;color.c: 35:  I2C_2_Master_RepStart();
  4374   001FD8  ECD6  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4375                           
  4376                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  4377   001FDC  0E53               	movlw	83
  4378   001FDE  ECCA  F011         	call	_I2C_2_Master_Write
  4379                           
  4380                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  4381   001FE2  0E01               	movlw	1
  4382   001FE4  EC7E  F010         	call	_I2C_2_Master_Read
  4383   001FE8  6E0B               	movwf	??_color_read_Red^0,c
  4384   001FEA  500B               	movf	??_color_read_Red^0,w,c
  4385   001FEC  6E0E               	movwf	color_read_Red@tmp^0,c
  4386   001FEE  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  4387                           
  4388                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4389   001FF0  0E00               	movlw	0
  4390   001FF2  EC7E  F010         	call	_I2C_2_Master_Read
  4391   001FF6  6E0B               	movwf	??_color_read_Red^0,c
  4392   001FF8  500B               	movf	??_color_read_Red^0,w,c
  4393   001FFA  6E0D               	movwf	(??_color_read_Red+2)^0,c
  4394   001FFC  6A0C               	clrf	(??_color_read_Red+1)^0,c
  4395   001FFE  500E               	movf	color_read_Red@tmp^0,w,c
  4396   002000  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  4397   002002  6E0E               	movwf	color_read_Red@tmp^0,c
  4398   002004  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  4399   002006  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  4400   002008  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  4401                           
  4402                           ;color.c: 39:  I2C_2_Master_Stop();
  4403   00200A  ECDB  F011         	call	_I2C_2_Master_Stop	;wreg free
  4404   00200E                     
  4405                           ;color.c: 40:  return tmp;
  4406   00200E  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  4407   002012  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4408   002016  0012               	return		;funcret
  4409   002018                     __end_of_color_read_Red:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _color_read_Green *****************
  4413 ;; Defined at:
  4414 ;;		line 43 in file "color.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  tmp             2   13[COMRAM] unsigned int 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  2    8[COMRAM] unsigned int 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;Total ram usage:        7 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 6
  4435 ;; This function calls:
  4436 ;;		_I2C_2_Master_Read
  4437 ;;		_I2C_2_Master_RepStart
  4438 ;;		_I2C_2_Master_Start
  4439 ;;		_I2C_2_Master_Stop
  4440 ;;		_I2C_2_Master_Write
  4441 ;; This function is called by:
  4442 ;;		_main
  4443 ;;		_collect_avg_readings
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text24
  4448   002018                     __ptext24:
  4449                           	callstack 0
  4450   002018                     _color_read_Green:
  4451                           	callstack 24
  4452   002018                     
  4453                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  4454   002018  ECE0  F011         	call	_I2C_2_Master_Start	;wreg free
  4455                           
  4456                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  4457   00201C  0E52               	movlw	82
  4458   00201E  ECCA  F011         	call	_I2C_2_Master_Write
  4459                           
  4460                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  4461   002022  0EB8               	movlw	184
  4462   002024  ECCA  F011         	call	_I2C_2_Master_Write
  4463                           
  4464                           ;color.c: 49:  I2C_2_Master_RepStart();
  4465   002028  ECD6  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4466                           
  4467                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  4468   00202C  0E53               	movlw	83
  4469   00202E  ECCA  F011         	call	_I2C_2_Master_Write
  4470                           
  4471                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  4472   002032  0E01               	movlw	1
  4473   002034  EC7E  F010         	call	_I2C_2_Master_Read
  4474   002038  6E0B               	movwf	??_color_read_Green^0,c
  4475   00203A  500B               	movf	??_color_read_Green^0,w,c
  4476   00203C  6E0E               	movwf	color_read_Green@tmp^0,c
  4477   00203E  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  4478                           
  4479                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4480   002040  0E00               	movlw	0
  4481   002042  EC7E  F010         	call	_I2C_2_Master_Read
  4482   002046  6E0B               	movwf	??_color_read_Green^0,c
  4483   002048  500B               	movf	??_color_read_Green^0,w,c
  4484   00204A  6E0D               	movwf	(??_color_read_Green+2)^0,c
  4485   00204C  6A0C               	clrf	(??_color_read_Green+1)^0,c
  4486   00204E  500E               	movf	color_read_Green@tmp^0,w,c
  4487   002050  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  4488   002052  6E0E               	movwf	color_read_Green@tmp^0,c
  4489   002054  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  4490   002056  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  4491   002058  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  4492                           
  4493                           ;color.c: 53:  I2C_2_Master_Stop();
  4494   00205A  ECDB  F011         	call	_I2C_2_Master_Stop	;wreg free
  4495   00205E                     
  4496                           ;color.c: 54:  return tmp;
  4497   00205E  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  4498   002062  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4499   002066  0012               	return		;funcret
  4500   002068                     __end_of_color_read_Green:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _color_read_Blue *****************
  4504 ;; Defined at:
  4505 ;;		line 57 in file "color.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;		None
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  tmp             2   13[COMRAM] unsigned int 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  2    8[COMRAM] unsigned int 
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4521 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4522 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4523 ;;Total ram usage:        7 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 6
  4526 ;; This function calls:
  4527 ;;		_I2C_2_Master_Read
  4528 ;;		_I2C_2_Master_RepStart
  4529 ;;		_I2C_2_Master_Start
  4530 ;;		_I2C_2_Master_Stop
  4531 ;;		_I2C_2_Master_Write
  4532 ;; This function is called by:
  4533 ;;		_main
  4534 ;;		_collect_avg_readings
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text25
  4539   002068                     __ptext25:
  4540                           	callstack 0
  4541   002068                     _color_read_Blue:
  4542                           	callstack 24
  4543   002068                     
  4544                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  4545   002068  ECE0  F011         	call	_I2C_2_Master_Start	;wreg free
  4546                           
  4547                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  4548   00206C  0E52               	movlw	82
  4549   00206E  ECCA  F011         	call	_I2C_2_Master_Write
  4550                           
  4551                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  4552   002072  0EBA               	movlw	186
  4553   002074  ECCA  F011         	call	_I2C_2_Master_Write
  4554                           
  4555                           ;color.c: 63:  I2C_2_Master_RepStart();
  4556   002078  ECD6  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4557                           
  4558                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  4559   00207C  0E53               	movlw	83
  4560   00207E  ECCA  F011         	call	_I2C_2_Master_Write
  4561                           
  4562                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  4563   002082  0E01               	movlw	1
  4564   002084  EC7E  F010         	call	_I2C_2_Master_Read
  4565   002088  6E0B               	movwf	??_color_read_Blue^0,c
  4566   00208A  500B               	movf	??_color_read_Blue^0,w,c
  4567   00208C  6E0E               	movwf	color_read_Blue@tmp^0,c
  4568   00208E  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  4569                           
  4570                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4571   002090  0E00               	movlw	0
  4572   002092  EC7E  F010         	call	_I2C_2_Master_Read
  4573   002096  6E0B               	movwf	??_color_read_Blue^0,c
  4574   002098  500B               	movf	??_color_read_Blue^0,w,c
  4575   00209A  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  4576   00209C  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  4577   00209E  500E               	movf	color_read_Blue@tmp^0,w,c
  4578   0020A0  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  4579   0020A2  6E0E               	movwf	color_read_Blue@tmp^0,c
  4580   0020A4  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  4581   0020A6  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  4582   0020A8  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  4583                           
  4584                           ;color.c: 67:  I2C_2_Master_Stop();
  4585   0020AA  ECDB  F011         	call	_I2C_2_Master_Stop	;wreg free
  4586   0020AE                     
  4587                           ;color.c: 68:  return tmp;
  4588   0020AE  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  4589   0020B2  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4590   0020B6  0012               	return		;funcret
  4591   0020B8                     __end_of_color_read_Blue:
  4592                           	callstack 0
  4593                           
  4594 ;; *************** function _I2C_2_Master_RepStart *****************
  4595 ;; Defined at:
  4596 ;;		line 33 in file "i2c.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;Total ram usage:        0 bytes
  4615 ;; Hardware stack levels used: 1
  4616 ;; Hardware stack levels required when called: 5
  4617 ;; This function calls:
  4618 ;;		_I2C_2_Master_Idle
  4619 ;; This function is called by:
  4620 ;;		_color_read_Red
  4621 ;;		_color_read_Green
  4622 ;;		_color_read_Blue
  4623 ;;		_color_read_Clear
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text26
  4628   0023AC                     __ptext26:
  4629                           	callstack 0
  4630   0023AC                     _I2C_2_Master_RepStart:
  4631                           	callstack 24
  4632   0023AC                     
  4633                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4634   0023AC  EC25  F011         	call	_I2C_2_Master_Idle	;wreg free
  4635   0023B0                     
  4636                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4637   0023B0  010E               	movlb	14	; () banked
  4638   0023B2  83DA               	bsf	218,1,b	;volatile
  4639   0023B4                     
  4640                           ; BSR set to: 14
  4641   0023B4  0012               	return		;funcret
  4642   0023B6                     __end_of_I2C_2_Master_RepStart:
  4643                           	callstack 0
  4644                           
  4645 ;; *************** function _I2C_2_Master_Read *****************
  4646 ;; Defined at:
  4647 ;;		line 51 in file "i2c.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  ack             1    wreg     unsigned char 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  ack             1    6[COMRAM] unsigned char 
  4652 ;;  tmp             1    7[COMRAM] unsigned char 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      unsigned char 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4665 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4666 ;;Total ram usage:        3 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 5
  4669 ;; This function calls:
  4670 ;;		_I2C_2_Master_Idle
  4671 ;; This function is called by:
  4672 ;;		_color_read_Red
  4673 ;;		_color_read_Green
  4674 ;;		_color_read_Blue
  4675 ;;		_color_read_Clear
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text27
  4680   0020FC                     __ptext27:
  4681                           	callstack 0
  4682   0020FC                     _I2C_2_Master_Read:
  4683                           	callstack 24
  4684                           
  4685                           ; BSR set to: 14
  4686                           ;incstack = 0
  4687                           ;I2C_2_Master_Read@ack stored from wreg
  4688   0020FC  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  4689   0020FE                     
  4690                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4691   0020FE  EC25  F011         	call	_I2C_2_Master_Idle	;wreg free
  4692   002102                     
  4693                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4694   002102  010E               	movlb	14	; () banked
  4695   002104  87DA               	bsf	218,3,b	;volatile
  4696                           
  4697                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4698   002106  EC25  F011         	call	_I2C_2_Master_Idle	;wreg free
  4699   00210A                     
  4700                           ;i2c.c: 57:   tmp = SSP2BUF;
  4701   00210A  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4702                           
  4703                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4704   00210E  EC25  F011         	call	_I2C_2_Master_Idle	;wreg free
  4705   002112                     
  4706                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4707   002112  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  4708   002114  B4D8               	btfsc	status,2,c
  4709   002116  EF8F  F010         	goto	u1211
  4710   00211A  EF93  F010         	goto	u1210
  4711   00211E                     u1211:
  4712   00211E  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4713   002120  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  4714   002122  EF94  F010         	goto	u1228
  4715   002126                     u1210:
  4716   002126  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4717   002128                     u1228:
  4718   002128  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  4719   00212A  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  4720   00212C  010E               	movlb	14	; () banked
  4721   00212E  51DA               	movf	218,w,b	;volatile
  4722   002130  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4723   002132  0BDF               	andlw	-33
  4724   002134  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4725   002136  6FDA               	movwf	218,b	;volatile
  4726   002138                     
  4727                           ; BSR set to: 14
  4728                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4729   002138  89DA               	bsf	218,4,b	;volatile
  4730   00213A                     
  4731                           ; BSR set to: 14
  4732                           ;i2c.c: 61:   return tmp;
  4733   00213A  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  4734   00213C                     
  4735                           ; BSR set to: 14
  4736   00213C  0012               	return		;funcret
  4737   00213E                     __end_of_I2C_2_Master_Read:
  4738                           	callstack 0
  4739                           
  4740 ;; *************** function _LEDSon_init *****************
  4741 ;; Defined at:
  4742 ;;		line 18 in file "LEDsOn.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		None
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4760 ;;Total ram usage:        0 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; Hardware stack levels required when called: 4
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text28
  4771   0022C0                     __ptext28:
  4772                           	callstack 0
  4773   0022C0                     _LEDSon_init:
  4774                           	callstack 26
  4775   0022C0                     
  4776                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  4777   0022C0  9288               	bcf	136,1,c	;volatile
  4778                           
  4779                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  4780   0022C2  9088               	bcf	136,0,c	;volatile
  4781                           
  4782                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  4783   0022C4  9884               	bcf	132,4,c	;volatile
  4784                           
  4785                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  4786   0022C6  9684               	bcf	132,3,c	;volatile
  4787                           
  4788                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  4789   0022C8  9086               	bcf	134,0,c	;volatile
  4790                           
  4791                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  4792   0022CA  9287               	bcf	135,1,c	;volatile
  4793                           
  4794                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  4795   0022CC  9E86               	bcf	134,7,c	;volatile
  4796                           
  4797                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  4798   0022CE  9881               	bcf	129,4,c	;volatile
  4799                           
  4800                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  4801   0022D0  8E7E               	bsf	126,7,c	;volatile
  4802                           
  4803                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  4804   0022D2  827F               	bsf	127,1,c	;volatile
  4805                           
  4806                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  4807   0022D4  8879               	bsf	121,4,c	;volatile
  4808                           
  4809                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  4810   0022D6  987C               	bcf	124,4,c	;volatile
  4811                           
  4812                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  4813   0022D8  9280               	bcf	128,1,c	;volatile
  4814                           
  4815                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  4816   0022DA  907E               	bcf	126,0,c	;volatile
  4817                           
  4818                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  4819   0022DC  9080               	bcf	128,0,c	;volatile
  4820                           
  4821                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  4822   0022DE  967C               	bcf	124,3,c	;volatile
  4823   0022E0  0012               	return		;funcret
  4824   0022E2                     __end_of_LEDSon_init:
  4825                           	callstack 0
  4826                           
  4827 ;; *************** function _Interrupts_init *****************
  4828 ;; Defined at:
  4829 ;;		line 7 in file "interrupts.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;		None
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4847 ;;Total ram usage:        0 bytes
  4848 ;; Hardware stack levels used: 1
  4849 ;; Hardware stack levels required when called: 8
  4850 ;; This function calls:
  4851 ;;		_enable_color_interrupt
  4852 ;;		_set_interrupt_threshold
  4853 ;; This function is called by:
  4854 ;;		_main
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text29
  4859   00217E                     __ptext29:
  4860                           	callstack 0
  4861   00217E                     _Interrupts_init:
  4862                           	callstack 22
  4863   00217E                     
  4864                           ;interrupts.c: 9:     enable_color_interrupt();
  4865   00217E  ECC2  F011         	call	_enable_color_interrupt	;wreg free
  4866                           
  4867                           ;interrupts.c: 10:     set_interrupt_threshold(1, 2000, 0b0100);
  4868   002182  0E00               	movlw	0
  4869   002184  6E0A               	movwf	(set_interrupt_threshold@AILT+1)^0,c
  4870   002186  0E01               	movlw	1
  4871   002188  6E09               	movwf	set_interrupt_threshold@AILT^0,c
  4872   00218A  0E07               	movlw	7
  4873   00218C  6E0C               	movwf	(set_interrupt_threshold@AIHT+1)^0,c
  4874   00218E  0ED0               	movlw	208
  4875   002190  6E0B               	movwf	set_interrupt_threshold@AIHT^0,c
  4876   002192  0E00               	movlw	0
  4877   002194  6E0E               	movwf	(set_interrupt_threshold@persistence+1)^0,c
  4878   002196  0E04               	movlw	4
  4879   002198  6E0D               	movwf	set_interrupt_threshold@persistence^0,c
  4880   00219A  EC35  F00F         	call	_set_interrupt_threshold	;wreg free
  4881   00219E                     
  4882                           ;interrupts.c: 12:     TRISBbits.TRISB1 = 0;
  4883   00219E  9282               	bcf	130,1,c	;volatile
  4884   0021A0                     
  4885                           ;interrupts.c: 13:     ANSELBbits.ANSELB1 = 0;
  4886   0021A0  010E               	movlb	14	; () banked
  4887   0021A2  939A               	bcf	154,1,b	;volatile
  4888   0021A4                     
  4889                           ; BSR set to: 14
  4890                           ;interrupts.c: 14:     INT1PPS=0x09;
  4891   0021A4  0E09               	movlw	9
  4892   0021A6  010D               	movlb	13	; () banked
  4893   0021A8  6FF1               	movwf	241,b	;volatile
  4894   0021AA                     
  4895                           ; BSR set to: 13
  4896                           ;interrupts.c: 15:     PIE0bits.INT1IE = 1;
  4897   0021AA  010E               	movlb	14	; () banked
  4898   0021AC  8329               	bsf	41,1,b	;volatile
  4899   0021AE                     
  4900                           ; BSR set to: 14
  4901                           ;interrupts.c: 16:     IPR0bits.INT1IP = 1;
  4902   0021AE  831F               	bsf	31,1,b	;volatile
  4903   0021B0                     
  4904                           ; BSR set to: 14
  4905                           ;interrupts.c: 17:     INTCONbits.INT1EDG = 0;
  4906   0021B0  92F2               	bcf	242,1,c	;volatile
  4907   0021B2                     
  4908                           ; BSR set to: 14
  4909                           ;interrupts.c: 18:     INTCONbits.PEIE=1;
  4910   0021B2  8CF2               	bsf	242,6,c	;volatile
  4911   0021B4                     
  4912                           ; BSR set to: 14
  4913                           ;interrupts.c: 19:     INTCONbits.IPEN = 1;
  4914   0021B4  8AF2               	bsf	242,5,c	;volatile
  4915   0021B6                     
  4916                           ; BSR set to: 14
  4917                           ;interrupts.c: 20:     INTCONbits.GIEL = 1;
  4918   0021B6  8CF2               	bsf	242,6,c	;volatile
  4919   0021B8                     
  4920                           ; BSR set to: 14
  4921                           ;interrupts.c: 21:     INTCONbits.GIEH=1;}
  4922   0021B8  8EF2               	bsf	242,7,c	;volatile
  4923   0021BA                     
  4924                           ; BSR set to: 14
  4925   0021BA  0012               	return		;funcret
  4926   0021BC                     __end_of_Interrupts_init:
  4927                           	callstack 0
  4928                           
  4929 ;; *************** function _set_interrupt_threshold *****************
  4930 ;; Defined at:
  4931 ;;		line 43 in file "interrupts.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  AILT            2    8[COMRAM] unsigned int 
  4934 ;;  AIHT            2   10[COMRAM] unsigned int 
  4935 ;;  persistence     2   12[COMRAM] unsigned int 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4947 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;Total ram usage:        8 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; Hardware stack levels required when called: 7
  4954 ;; This function calls:
  4955 ;;		_color_writetoaddr
  4956 ;; This function is called by:
  4957 ;;		_Interrupts_init
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text30
  4962   001E6A                     __ptext30:
  4963                           	callstack 0
  4964   001E6A                     _set_interrupt_threshold:
  4965                           	callstack 22
  4966   001E6A                     
  4967                           ;interrupts.c: 45:     color_writetoaddr(0x0C, persistence);
  4968   001E6A  C00D  F007         	movff	set_interrupt_threshold@persistence,color_writetoaddr@value
  4969   001E6E  0E0C               	movlw	12
  4970   001E70  EC81  F011         	call	_color_writetoaddr
  4971                           
  4972                           ;interrupts.c: 46:     color_writetoaddr(0x05, AILT >> 8);
  4973   001E74  500A               	movf	(set_interrupt_threshold@AILT+1)^0,w,c
  4974   001E76  6E07               	movwf	color_writetoaddr@value^0,c
  4975   001E78  0E05               	movlw	5
  4976   001E7A  EC81  F011         	call	_color_writetoaddr
  4977   001E7E                     
  4978                           ;interrupts.c: 47:     color_writetoaddr(0x04, AILT && 0b0000000011111111);
  4979   001E7E  0E00               	movlw	0
  4980   001E80  6E0F               	movwf	_set_interrupt_threshold$2032^0,c
  4981   001E82  5009               	movf	set_interrupt_threshold@AILT^0,w,c
  4982   001E84  100A               	iorwf	(set_interrupt_threshold@AILT+1)^0,w,c
  4983   001E86  B4D8               	btfsc	status,2,c
  4984   001E88  EF48  F00F         	goto	u1341
  4985   001E8C  EF4A  F00F         	goto	u1340
  4986   001E90                     u1341:
  4987   001E90  EF4C  F00F         	goto	l2606
  4988   001E94                     u1340:
  4989   001E94  0E01               	movlw	1
  4990   001E96  6E0F               	movwf	_set_interrupt_threshold$2032^0,c
  4991   001E98                     l2606:
  4992   001E98  C00F  F007         	movff	_set_interrupt_threshold$2032,color_writetoaddr@value
  4993   001E9C  0E04               	movlw	4
  4994   001E9E  EC81  F011         	call	_color_writetoaddr
  4995   001EA2                     
  4996                           ;interrupts.c: 48:     color_writetoaddr(0x07, AIHT >> 8);
  4997   001EA2  500C               	movf	(set_interrupt_threshold@AIHT+1)^0,w,c
  4998   001EA4  6E07               	movwf	color_writetoaddr@value^0,c
  4999   001EA6  0E07               	movlw	7
  5000   001EA8  EC81  F011         	call	_color_writetoaddr
  5001                           
  5002                           ;interrupts.c: 49:     color_writetoaddr(0x06, AIHT && 0b0000000011111111);
  5003   001EAC  0E00               	movlw	0
  5004   001EAE  6E10               	movwf	_set_interrupt_threshold$2033^0,c
  5005   001EB0  500B               	movf	set_interrupt_threshold@AIHT^0,w,c
  5006   001EB2  100C               	iorwf	(set_interrupt_threshold@AIHT+1)^0,w,c
  5007   001EB4  B4D8               	btfsc	status,2,c
  5008   001EB6  EF5F  F00F         	goto	u1351
  5009   001EBA  EF61  F00F         	goto	u1350
  5010   001EBE                     u1351:
  5011   001EBE  EF63  F00F         	goto	l2614
  5012   001EC2                     u1350:
  5013   001EC2  0E01               	movlw	1
  5014   001EC4  6E10               	movwf	_set_interrupt_threshold$2033^0,c
  5015   001EC6                     l2614:
  5016   001EC6  C010  F007         	movff	_set_interrupt_threshold$2033,color_writetoaddr@value
  5017   001ECA  0E06               	movlw	6
  5018   001ECC  EC81  F011         	call	_color_writetoaddr
  5019   001ED0  0012               	return		;funcret
  5020   001ED2                     __end_of_set_interrupt_threshold:
  5021                           	callstack 0
  5022                           
  5023 ;; *************** function _enable_color_interrupt *****************
  5024 ;; Defined at:
  5025 ;;		line 38 in file "interrupts.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used: 1
  5045 ;; Hardware stack levels required when called: 7
  5046 ;; This function calls:
  5047 ;;		_clear_interrupt_flag
  5048 ;;		_color_writetoaddr
  5049 ;; This function is called by:
  5050 ;;		_Interrupts_init
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text31
  5055   002384                     __ptext31:
  5056                           	callstack 0
  5057   002384                     _enable_color_interrupt:
  5058                           	callstack 22
  5059   002384                     
  5060                           ;interrupts.c: 39:     clear_interrupt_flag();
  5061   002384  ECAC  F011         	call	_clear_interrupt_flag	;wreg free
  5062                           
  5063                           ;interrupts.c: 40:  color_writetoaddr(0x00, 0b10011);
  5064   002388  0E13               	movlw	19
  5065   00238A  6E07               	movwf	color_writetoaddr@value^0,c
  5066   00238C  0E00               	movlw	0
  5067   00238E  EC81  F011         	call	_color_writetoaddr
  5068   002392  0012               	return		;funcret
  5069   002394                     __end_of_enable_color_interrupt:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _color_writetoaddr *****************
  5073 ;; Defined at:
  5074 ;;		line 21 in file "color.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  address         1    wreg     unsigned char 
  5077 ;;  value           1    6[COMRAM] unsigned char 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  address         1    7[COMRAM] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5089 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5093 ;;Total ram usage:        2 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 6
  5096 ;; This function calls:
  5097 ;;		_I2C_2_Master_Start
  5098 ;;		_I2C_2_Master_Stop
  5099 ;;		_I2C_2_Master_Write
  5100 ;; This function is called by:
  5101 ;;		_color_click_init
  5102 ;;		_enable_color_interrupt
  5103 ;;		_set_interrupt_threshold
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text32
  5108   002302                     __ptext32:
  5109                           	callstack 0
  5110   002302                     _color_writetoaddr:
  5111                           	callstack 23
  5112                           
  5113                           ;incstack = 0
  5114                           ;color_writetoaddr@address stored from wreg
  5115   002302  6E08               	movwf	color_writetoaddr@address^0,c
  5116   002304                     
  5117                           ;color.c: 22:     I2C_2_Master_Start();
  5118   002304  ECE0  F011         	call	_I2C_2_Master_Start	;wreg free
  5119                           
  5120                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  5121   002308  0E52               	movlw	82
  5122   00230A  ECCA  F011         	call	_I2C_2_Master_Write
  5123                           
  5124                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  5125   00230E  5008               	movf	color_writetoaddr@address^0,w,c
  5126   002310  0980               	iorlw	128
  5127   002312  ECCA  F011         	call	_I2C_2_Master_Write
  5128                           
  5129                           ;color.c: 25:     I2C_2_Master_Write(value);
  5130   002316  5007               	movf	color_writetoaddr@value^0,w,c
  5131   002318  ECCA  F011         	call	_I2C_2_Master_Write
  5132                           
  5133                           ;color.c: 26:     I2C_2_Master_Stop();
  5134   00231C  ECDB  F011         	call	_I2C_2_Master_Stop	;wreg free
  5135   002320  0012               	return		;funcret
  5136   002322                     __end_of_color_writetoaddr:
  5137                           	callstack 0
  5138                           
  5139 ;; *************** function _clear_interrupt_flag *****************
  5140 ;; Defined at:
  5141 ;;		line 52 in file "interrupts.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, status,0, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used: 1
  5161 ;; Hardware stack levels required when called: 6
  5162 ;; This function calls:
  5163 ;;		_I2C_2_Master_Start
  5164 ;;		_I2C_2_Master_Stop
  5165 ;;		_I2C_2_Master_Write
  5166 ;; This function is called by:
  5167 ;;		_enable_color_interrupt
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text33
  5172   002358                     __ptext33:
  5173                           	callstack 0
  5174   002358                     _clear_interrupt_flag:
  5175                           	callstack 22
  5176   002358                     
  5177                           ;interrupts.c: 53:     I2C_2_Master_Start();
  5178   002358  ECE0  F011         	call	_I2C_2_Master_Start	;wreg free
  5179                           
  5180                           ;interrupts.c: 54:     I2C_2_Master_Write(0x52 | 0x00);
  5181   00235C  0E52               	movlw	82
  5182   00235E  ECCA  F011         	call	_I2C_2_Master_Write
  5183                           
  5184                           ;interrupts.c: 55:     I2C_2_Master_Write(0b11100110);
  5185   002362  0EE6               	movlw	230
  5186   002364  ECCA  F011         	call	_I2C_2_Master_Write
  5187                           
  5188                           ;interrupts.c: 56:     I2C_2_Master_Stop();
  5189   002368  ECDB  F011         	call	_I2C_2_Master_Stop	;wreg free
  5190   00236C  0012               	return		;funcret
  5191   00236E                     __end_of_clear_interrupt_flag:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function _I2C_2_Master_Write *****************
  5195 ;; Defined at:
  5196 ;;		line 45 in file "i2c.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  data_byte       1    wreg     unsigned char 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  data_byte       1    5[COMRAM] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5214 ;;Total ram usage:        1 bytes
  5215 ;; Hardware stack levels used: 1
  5216 ;; Hardware stack levels required when called: 5
  5217 ;; This function calls:
  5218 ;;		_I2C_2_Master_Idle
  5219 ;; This function is called by:
  5220 ;;		_color_writetoaddr
  5221 ;;		_color_read_Red
  5222 ;;		_color_read_Green
  5223 ;;		_color_read_Blue
  5224 ;;		_color_read_Clear
  5225 ;;		_clear_interrupt_flag
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text34
  5230   002394                     __ptext34:
  5231                           	callstack 0
  5232   002394                     _I2C_2_Master_Write:
  5233                           	callstack 24
  5234                           
  5235                           ;incstack = 0
  5236                           ;I2C_2_Master_Write@data_byte stored from wreg
  5237   002394  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  5238   002396                     
  5239                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5240   002396  EC25  F011         	call	_I2C_2_Master_Idle	;wreg free
  5241   00239A                     
  5242                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5243   00239A  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5244   00239E  0012               	return		;funcret
  5245   0023A0                     __end_of_I2C_2_Master_Write:
  5246                           	callstack 0
  5247                           
  5248 ;; *************** function _I2C_2_Master_Stop *****************
  5249 ;; Defined at:
  5250 ;;		line 39 in file "i2c.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 5
  5271 ;; This function calls:
  5272 ;;		_I2C_2_Master_Idle
  5273 ;; This function is called by:
  5274 ;;		_color_writetoaddr
  5275 ;;		_color_read_Red
  5276 ;;		_color_read_Green
  5277 ;;		_color_read_Blue
  5278 ;;		_color_read_Clear
  5279 ;;		_clear_interrupt_flag
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text35
  5284   0023B6                     __ptext35:
  5285                           	callstack 0
  5286   0023B6                     _I2C_2_Master_Stop:
  5287                           	callstack 24
  5288   0023B6                     
  5289                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5290   0023B6  EC25  F011         	call	_I2C_2_Master_Idle	;wreg free
  5291   0023BA                     
  5292                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5293   0023BA  010E               	movlb	14	; () banked
  5294   0023BC  85DA               	bsf	218,2,b	;volatile
  5295   0023BE                     
  5296                           ; BSR set to: 14
  5297   0023BE  0012               	return		;funcret
  5298   0023C0                     __end_of_I2C_2_Master_Stop:
  5299                           	callstack 0
  5300                           
  5301 ;; *************** function _I2C_2_Master_Start *****************
  5302 ;; Defined at:
  5303 ;;		line 27 in file "i2c.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;		None
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      void 
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;Total ram usage:        0 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; Hardware stack levels required when called: 5
  5324 ;; This function calls:
  5325 ;;		_I2C_2_Master_Idle
  5326 ;; This function is called by:
  5327 ;;		_color_writetoaddr
  5328 ;;		_color_read_Red
  5329 ;;		_color_read_Green
  5330 ;;		_color_read_Blue
  5331 ;;		_color_read_Clear
  5332 ;;		_clear_interrupt_flag
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text36
  5337   0023C0                     __ptext36:
  5338                           	callstack 0
  5339   0023C0                     _I2C_2_Master_Start:
  5340                           	callstack 24
  5341   0023C0                     
  5342                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5343   0023C0  EC25  F011         	call	_I2C_2_Master_Idle	;wreg free
  5344   0023C4                     
  5345                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5346   0023C4  010E               	movlb	14	; () banked
  5347   0023C6  81DA               	bsf	218,0,b	;volatile
  5348   0023C8                     
  5349                           ; BSR set to: 14
  5350   0023C8  0012               	return		;funcret
  5351   0023CA                     __end_of_I2C_2_Master_Start:
  5352                           	callstack 0
  5353                           
  5354 ;; *************** function _I2C_2_Master_Idle *****************
  5355 ;; Defined at:
  5356 ;;		line 22 in file "i2c.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		wreg, status,2, status,0
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5374 ;;Total ram usage:        1 bytes
  5375 ;; Hardware stack levels used: 1
  5376 ;; Hardware stack levels required when called: 4
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_I2C_2_Master_Start
  5381 ;;		_I2C_2_Master_RepStart
  5382 ;;		_I2C_2_Master_Stop
  5383 ;;		_I2C_2_Master_Write
  5384 ;;		_I2C_2_Master_Read
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text37
  5389   00224A                     __ptext37:
  5390                           	callstack 0
  5391   00224A                     _I2C_2_Master_Idle:
  5392                           	callstack 24
  5393   00224A                     l145:
  5394   00224A  010E               	movlb	14	; () banked
  5395   00224C  B5D8               	btfsc	216,2,b	;volatile
  5396   00224E  EF2B  F011         	goto	u931
  5397   002252  EF2D  F011         	goto	u930
  5398   002256                     u931:
  5399   002256  EF25  F011         	goto	l145
  5400   00225A                     u930:
  5401   00225A                     
  5402                           ; BSR set to: 14
  5403   00225A  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5404   00225E  0E1F               	movlw	31
  5405   002260  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  5406   002262  A4D8               	btfss	status,2,c
  5407   002264  EF36  F011         	goto	u941
  5408   002268  EF38  F011         	goto	u940
  5409   00226C                     u941:
  5410   00226C  EF25  F011         	goto	l145
  5411   002270                     u940:
  5412   002270                     
  5413                           ; BSR set to: 14
  5414   002270  0012               	return		;funcret
  5415   002272                     __end_of_I2C_2_Master_Idle:
  5416                           	callstack 0
  5417                           
  5418 ;; *************** function _HighISR *****************
  5419 ;; Defined at:
  5420 ;;		line 23 in file "interrupts.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;Total ram usage:        2 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 3
  5441 ;; This function calls:
  5442 ;;		i2_clear_interrupt_flag
  5443 ;; This function is called by:
  5444 ;;		Interrupt level 2
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	intcode
  5449   000008                     __pintcode:
  5450                           	callstack 0
  5451   000008                     _HighISR:
  5452                           	callstack 19
  5453                           
  5454                           ; BSR set to: 14
  5455                           ;incstack = 0
  5456   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5457   00000A                     
  5458                           ;interrupts.c: 26:     if(PIR0bits.INT1IF == 1&& response_in_progress == 0) {
  5459   00000A  010E               	movlb	14	; () banked
  5460   00000C  A333               	btfss	51,1,b	;volatile
  5461   00000E  EF0B  F000         	goto	i2u167_41
  5462   000012  EF0D  F000         	goto	i2u167_40
  5463   000016                     i2u167_41:
  5464   000016  EF39  F000         	goto	i2l490
  5465   00001A                     i2u167_40:
  5466   00001A                     
  5467                           ; BSR set to: 14
  5468   00001A  0100               	movlb	0	; () banked
  5469   00001C  51B6               	movf	_response_in_progress& (0+255),w,b
  5470   00001E  11B7               	iorwf	(_response_in_progress+1)& (0+255),w,b
  5471   000020  A4D8               	btfss	status,2,c
  5472   000022  EF15  F000         	goto	i2u168_41
  5473   000026  EF17  F000         	goto	i2u168_40
  5474   00002A                     i2u168_41:
  5475   00002A  EF39  F000         	goto	i2l490
  5476   00002E                     i2u168_40:
  5477   00002E                     
  5478                           ; BSR set to: 0
  5479                           ;interrupts.c: 27:         card_detected = 1;
  5480   00002E  0E00               	movlw	0
  5481   000030  6FB5               	movwf	(_card_detected+1)& (0+255),b
  5482   000032  0E01               	movlw	1
  5483   000034  6FB4               	movwf	_card_detected& (0+255),b
  5484   000036                     
  5485                           ; BSR set to: 0
  5486                           ;interrupts.c: 28:         LATDbits.LATD7=1;
  5487   000036  8E7C               	bsf	124,7,c	;volatile
  5488   000038                     
  5489                           ; BSR set to: 0
  5490                           ;interrupts.c: 29:         _delay((unsigned long)((50)*(64000000/4000.0)));
  5491   000038  0E05               	movlw	5
  5492   00003A  6E04               	movwf	(??_HighISR+1)^0,c
  5493   00003C  0E0F               	movlw	15
  5494   00003E  6E03               	movwf	??_HighISR^0,c
  5495   000040  0EF1               	movlw	241
  5496   000042                     i2u223_47:
  5497   000042  2EE8               	decfsz	wreg,f,c
  5498   000044  D7FE               	bra	i2u223_47
  5499   000046  2E03               	decfsz	??_HighISR^0,f,c
  5500   000048  D7FC               	bra	i2u223_47
  5501   00004A  2E04               	decfsz	(??_HighISR+1)^0,f,c
  5502   00004C  D7FA               	bra	i2u223_47
  5503   00004E  F000               	nop	
  5504   000050                     
  5505                           ;interrupts.c: 30:         LATDbits.LATD7=0;
  5506   000050  9E7C               	bcf	124,7,c	;volatile
  5507   000052                     
  5508                           ;interrupts.c: 31:         _delay((unsigned long)((50)*(64000000/4000.0)));
  5509   000052  0E05               	movlw	5
  5510   000054  6E04               	movwf	(??_HighISR+1)^0,c
  5511   000056  0E0F               	movlw	15
  5512   000058  6E03               	movwf	??_HighISR^0,c
  5513   00005A  0EF1               	movlw	241
  5514   00005C                     i2u224_47:
  5515   00005C  2EE8               	decfsz	wreg,f,c
  5516   00005E  D7FE               	bra	i2u224_47
  5517   000060  2E03               	decfsz	??_HighISR^0,f,c
  5518   000062  D7FC               	bra	i2u224_47
  5519   000064  2E04               	decfsz	(??_HighISR+1)^0,f,c
  5520   000066  D7FA               	bra	i2u224_47
  5521   000068  F000               	nop	
  5522   00006A                     
  5523                           ;interrupts.c: 32:         clear_interrupt_flag();
  5524   00006A  ECB7  F011         	call	i2_clear_interrupt_flag	;wreg free
  5525   00006E                     
  5526                           ;interrupts.c: 33:         PIR0bits.INT1IF = 0;
  5527   00006E  010E               	movlb	14	; () banked
  5528   000070  9333               	bcf	51,1,b	;volatile
  5529   000072                     i2l490:
  5530   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5531   000074  0011               	retfie		f
  5532   000076                     __end_of_HighISR:
  5533                           	callstack 0
  5534                           
  5535 ;; *************** function i2_clear_interrupt_flag *****************
  5536 ;; Defined at:
  5537 ;;		line 52 in file "interrupts.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;		None
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;Total ram usage:        0 bytes
  5556 ;; Hardware stack levels used: 1
  5557 ;; Hardware stack levels required when called: 2
  5558 ;; This function calls:
  5559 ;;		i2_I2C_2_Master_Start
  5560 ;;		i2_I2C_2_Master_Stop
  5561 ;;		i2_I2C_2_Master_Write
  5562 ;; This function is called by:
  5563 ;;		_HighISR
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           	psect	text39
  5568   00236E                     __ptext39:
  5569                           	callstack 0
  5570   00236E                     i2_clear_interrupt_flag:
  5571                           	callstack 19
  5572   00236E                     
  5573                           ;interrupts.c: 53:     I2C_2_Master_Start();
  5574   00236E  ECEA  F011         	call	i2_I2C_2_Master_Start	;wreg free
  5575                           
  5576                           ;interrupts.c: 54:     I2C_2_Master_Write(0x52 | 0x00);
  5577   002372  0E52               	movlw	82
  5578   002374  ECD0  F011         	call	i2_I2C_2_Master_Write
  5579                           
  5580                           ;interrupts.c: 55:     I2C_2_Master_Write(0b11100110);
  5581   002378  0EE6               	movlw	230
  5582   00237A  ECD0  F011         	call	i2_I2C_2_Master_Write
  5583                           
  5584                           ;interrupts.c: 56:     I2C_2_Master_Stop();
  5585   00237E  ECE5  F011         	call	i2_I2C_2_Master_Stop	;wreg free
  5586   002382  0012               	return		;funcret
  5587   002384                     __end_ofi2_clear_interrupt_flag:
  5588                           	callstack 0
  5589                           
  5590 ;; *************** function i2_I2C_2_Master_Write *****************
  5591 ;; Defined at:
  5592 ;;		line 45 in file "i2c.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  data_byte       1    wreg     unsigned char 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  data_byte       1    1[COMRAM] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  1    wreg      void 
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0, cstack
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5610 ;;Total ram usage:        1 bytes
  5611 ;; Hardware stack levels used: 1
  5612 ;; Hardware stack levels required when called: 1
  5613 ;; This function calls:
  5614 ;;		i2_I2C_2_Master_Idle
  5615 ;; This function is called by:
  5616 ;;		i2_clear_interrupt_flag
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           	psect	text40
  5621   0023A0                     __ptext40:
  5622                           	callstack 0
  5623   0023A0                     i2_I2C_2_Master_Write:
  5624                           	callstack 19
  5625                           
  5626                           ;incstack = 0
  5627                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5628   0023A0  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5629   0023A2                     
  5630                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5631   0023A2  EC39  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5632   0023A6                     
  5633                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5634   0023A6  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5635   0023AA  0012               	return		;funcret
  5636   0023AC                     __end_ofi2_I2C_2_Master_Write:
  5637                           	callstack 0
  5638                           
  5639 ;; *************** function i2_I2C_2_Master_Stop *****************
  5640 ;; Defined at:
  5641 ;;		line 39 in file "i2c.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;		None
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		wreg, status,2, status,0, cstack
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used: 1
  5661 ;; Hardware stack levels required when called: 1
  5662 ;; This function calls:
  5663 ;;		i2_I2C_2_Master_Idle
  5664 ;; This function is called by:
  5665 ;;		i2_clear_interrupt_flag
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text41
  5670   0023CA                     __ptext41:
  5671                           	callstack 0
  5672   0023CA                     i2_I2C_2_Master_Stop:
  5673                           	callstack 19
  5674   0023CA                     
  5675                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5676   0023CA  EC39  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5677   0023CE                     
  5678                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5679   0023CE  010E               	movlb	14	; () banked
  5680   0023D0  85DA               	bsf	218,2,b	;volatile
  5681   0023D2                     
  5682                           ; BSR set to: 14
  5683   0023D2  0012               	return		;funcret
  5684   0023D4                     __end_ofi2_I2C_2_Master_Stop:
  5685                           	callstack 0
  5686                           
  5687 ;; *************** function i2_I2C_2_Master_Start *****************
  5688 ;; Defined at:
  5689 ;;		line 27 in file "i2c.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;		None
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;		None
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  1    wreg      void 
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5707 ;;Total ram usage:        0 bytes
  5708 ;; Hardware stack levels used: 1
  5709 ;; Hardware stack levels required when called: 1
  5710 ;; This function calls:
  5711 ;;		i2_I2C_2_Master_Idle
  5712 ;; This function is called by:
  5713 ;;		i2_clear_interrupt_flag
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           	psect	text42
  5718   0023D4                     __ptext42:
  5719                           	callstack 0
  5720   0023D4                     i2_I2C_2_Master_Start:
  5721                           	callstack 19
  5722   0023D4                     
  5723                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5724   0023D4  EC39  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5725   0023D8                     
  5726                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5727   0023D8  010E               	movlb	14	; () banked
  5728   0023DA  81DA               	bsf	218,0,b	;volatile
  5729   0023DC                     
  5730                           ; BSR set to: 14
  5731   0023DC  0012               	return		;funcret
  5732   0023DE                     __end_ofi2_I2C_2_Master_Start:
  5733                           	callstack 0
  5734                           
  5735 ;; *************** function i2_I2C_2_Master_Idle *****************
  5736 ;; Defined at:
  5737 ;;		line 22 in file "i2c.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5755 ;;Total ram usage:        1 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		i2_I2C_2_Master_Start
  5761 ;;		i2_I2C_2_Master_Stop
  5762 ;;		i2_I2C_2_Master_Write
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text43
  5767   002272                     __ptext43:
  5768                           	callstack 0
  5769   002272                     i2_I2C_2_Master_Idle:
  5770                           	callstack 19
  5771   002272                     i2l145:
  5772   002272  010E               	movlb	14	; () banked
  5773   002274  B5D8               	btfsc	216,2,b	;volatile
  5774   002276  EF3F  F011         	goto	i2u126_41
  5775   00227A  EF41  F011         	goto	i2u126_40
  5776   00227E                     i2u126_41:
  5777   00227E  EF39  F011         	goto	i2l145
  5778   002282                     i2u126_40:
  5779   002282                     
  5780                           ; BSR set to: 14
  5781   002282  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5782   002286  0E1F               	movlw	31
  5783   002288  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5784   00228A  A4D8               	btfss	status,2,c
  5785   00228C  EF4A  F011         	goto	i2u127_41
  5786   002290  EF4C  F011         	goto	i2u127_40
  5787   002294                     i2u127_41:
  5788   002294  EF39  F011         	goto	i2l145
  5789   002298                     i2u127_40:
  5790   002298                     
  5791                           ; BSR set to: 14
  5792   002298  0012               	return		;funcret
  5793   00229A                     __end_ofi2_I2C_2_Master_Idle:
  5794                           	callstack 0
  5795                           
  5796                           	psect	rparam
  5797   000000                     
  5798                           	psect	temp
  5799   00005B                     btemp:
  5800                           	callstack 0
  5801   00005B                     	ds	1
  5802   000000                     int$flags	set	btemp
  5803   000000                     wtemp8	set	btemp+1
  5804   000000                     ttemp5	set	btemp+1
  5805   000000                     ttemp6	set	btemp+4
  5806   000000                     ttemp7	set	btemp+8
  5807                           
  5808                           	psect	idloc
  5809                           
  5810                           ;Config register IDLOC0 @ 0x200000
  5811                           ;	unspecified, using default values
  5812   200000                     	org	2097152
  5813   200000  0FFF               	dw	4095
  5814                           
  5815                           ;Config register IDLOC1 @ 0x200002
  5816                           ;	unspecified, using default values
  5817   200002                     	org	2097154
  5818   200002  0FFF               	dw	4095
  5819                           
  5820                           ;Config register IDLOC2 @ 0x200004
  5821                           ;	unspecified, using default values
  5822   200004                     	org	2097156
  5823   200004  0FFF               	dw	4095
  5824                           
  5825                           ;Config register IDLOC3 @ 0x200006
  5826                           ;	unspecified, using default values
  5827   200006                     	org	2097158
  5828   200006  0FFF               	dw	4095
  5829                           
  5830                           ;Config register IDLOC4 @ 0x200008
  5831                           ;	unspecified, using default values
  5832   200008                     	org	2097160
  5833   200008  0FFF               	dw	4095
  5834                           
  5835                           ;Config register IDLOC5 @ 0x20000A
  5836                           ;	unspecified, using default values
  5837   20000A                     	org	2097162
  5838   20000A  0FFF               	dw	4095
  5839                           
  5840                           ;Config register IDLOC6 @ 0x20000C
  5841                           ;	unspecified, using default values
  5842   20000C                     	org	2097164
  5843   20000C  0FFF               	dw	4095
  5844                           
  5845                           ;Config register IDLOC7 @ 0x20000E
  5846                           ;	unspecified, using default values
  5847   20000E                     	org	2097166
  5848   20000E  0FFF               	dw	4095
  5849                           
  5850                           	psect	config
  5851                           
  5852                           ;Config register CONFIG1L @ 0x300000
  5853                           ;	External Oscillator mode Selection bits
  5854                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5855                           ;	Power-up default value for COSC bits
  5856                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5857   300000                     	org	3145728
  5858   300000  AA                 	db	170
  5859                           
  5860                           ;Config register CONFIG1H @ 0x300001
  5861                           ;	unspecified, using default values
  5862                           ;	Clock Out Enable bit
  5863                           ;	CLKOUTEN = 0x1, unprogrammed default
  5864                           ;	Clock Switch Enable bit
  5865                           ;	CSWEN = 0x1, unprogrammed default
  5866                           ;	Fail-Safe Clock Monitor Enable bit
  5867                           ;	FCMEN = 0x1, unprogrammed default
  5868   300001                     	org	3145729
  5869   300001  FF                 	db	255
  5870                           
  5871                           ;Config register CONFIG2L @ 0x300002
  5872                           ;	unspecified, using default values
  5873                           ;	Master Clear Enable bit
  5874                           ;	MCLRE = 0x1, unprogrammed default
  5875                           ;	Power-up Timer Enable bit
  5876                           ;	PWRTE = 0x1, unprogrammed default
  5877                           ;	Low-power BOR enable bit
  5878                           ;	LPBOREN = 0x1, unprogrammed default
  5879                           ;	Brown-out Reset Enable bits
  5880                           ;	BOREN = 0x3, unprogrammed default
  5881   300002                     	org	3145730
  5882   300002  FF                 	db	255
  5883                           
  5884                           ;Config register CONFIG2H @ 0x300003
  5885                           ;	unspecified, using default values
  5886                           ;	Brown Out Reset Voltage selection bits
  5887                           ;	BORV = 0x3, unprogrammed default
  5888                           ;	ZCD Disable bit
  5889                           ;	ZCD = 0x1, unprogrammed default
  5890                           ;	PPSLOCK bit One-Way Set Enable bit
  5891                           ;	PPS1WAY = 0x1, unprogrammed default
  5892                           ;	Stack Full/Underflow Reset Enable bit
  5893                           ;	STVREN = 0x1, unprogrammed default
  5894                           ;	Debugger Enable bit
  5895                           ;	DEBUG = 0x1, unprogrammed default
  5896                           ;	Extended Instruction Set Enable bit
  5897                           ;	XINST = 0x1, unprogrammed default
  5898   300003                     	org	3145731
  5899   300003  FF                 	db	255
  5900                           
  5901                           ;Config register CONFIG3L @ 0x300004
  5902                           ;	WDT Period Select bits
  5903                           ;	WDTCPS = 0x1F, unprogrammed default
  5904                           ;	WDT operating mode
  5905                           ;	WDTE = OFF, WDT Disabled
  5906   300004                     	org	3145732
  5907   300004  9F                 	db	159
  5908                           
  5909                           ;Config register CONFIG3H @ 0x300005
  5910                           ;	unspecified, using default values
  5911                           ;	WDT Window Select bits
  5912                           ;	WDTCWS = 0x7, unprogrammed default
  5913                           ;	WDT input clock selector
  5914                           ;	WDTCCS = 0x7, unprogrammed default
  5915   300005                     	org	3145733
  5916   300005  FF                 	db	255
  5917                           
  5918                           ;Config register CONFIG4L @ 0x300006
  5919                           ;	unspecified, using default values
  5920                           ;	Write Protection Block 0
  5921                           ;	WRT0 = 0x1, unprogrammed default
  5922                           ;	Write Protection Block 1
  5923                           ;	WRT1 = 0x1, unprogrammed default
  5924                           ;	Write Protection Block 2
  5925                           ;	WRT2 = 0x1, unprogrammed default
  5926                           ;	Write Protection Block 3
  5927                           ;	WRT3 = 0x1, unprogrammed default
  5928                           ;	Write Protection Block 3
  5929                           ;	WRT4 = 0x1, unprogrammed default
  5930                           ;	Write Protection Block 3
  5931                           ;	WRT5 = 0x1, unprogrammed default
  5932                           ;	Write Protection Block 3
  5933                           ;	WRT6 = 0x1, unprogrammed default
  5934                           ;	Write Protection Block 3
  5935                           ;	WRT7 = 0x1, unprogrammed default
  5936   300006                     	org	3145734
  5937   300006  FF                 	db	255
  5938                           
  5939                           ;Config register CONFIG4H @ 0x300007
  5940                           ;	unspecified, using default values
  5941                           ;	Configuration Register Write Protection bit
  5942                           ;	WRTC = 0x1, unprogrammed default
  5943                           ;	Boot Block Write Protection bit
  5944                           ;	WRTB = 0x1, unprogrammed default
  5945                           ;	Data EEPROM Write Protection bit
  5946                           ;	WRTD = 0x1, unprogrammed default
  5947                           ;	Scanner Enable bit
  5948                           ;	SCANE = 0x1, unprogrammed default
  5949                           ;	Low Voltage Programming Enable bit
  5950                           ;	LVP = 0x1, unprogrammed default
  5951   300007                     	org	3145735
  5952   300007  FF                 	db	255
  5953                           
  5954                           ;Config register CONFIG5L @ 0x300008
  5955                           ;	unspecified, using default values
  5956                           ;	UserNVM Program Memory Code Protection bit
  5957                           ;	CP = 0x1, unprogrammed default
  5958                           ;	DataNVM Memory Code Protection bit
  5959                           ;	CPD = 0x1, unprogrammed default
  5960   300008                     	org	3145736
  5961   300008  FF                 	db	255
  5962                           
  5963                           ;Config register CONFIG5H @ 0x300009
  5964                           ;	unspecified, using default values
  5965   300009                     	org	3145737
  5966   300009  FF                 	db	255
  5967                           
  5968                           ;Config register CONFIG6L @ 0x30000A
  5969                           ;	unspecified, using default values
  5970                           ;	Table Read Protection Block 0
  5971                           ;	EBTR0 = 0x1, unprogrammed default
  5972                           ;	Table Read Protection Block 1
  5973                           ;	EBTR1 = 0x1, unprogrammed default
  5974                           ;	Table Read Protection Block 2
  5975                           ;	EBTR2 = 0x1, unprogrammed default
  5976                           ;	Table Read Protection Block 3
  5977                           ;	EBTR3 = 0x1, unprogrammed default
  5978                           ;	Table Read Protection Block 4
  5979                           ;	EBTR4 = 0x1, unprogrammed default
  5980                           ;	Table Read Protection Block 5
  5981                           ;	EBTR5 = 0x1, unprogrammed default
  5982                           ;	Table Read Protection Block 6
  5983                           ;	EBTR6 = 0x1, unprogrammed default
  5984                           ;	Table Read Protection Block 7
  5985                           ;	EBTR7 = 0x1, unprogrammed default
  5986   30000A                     	org	3145738
  5987   30000A  FF                 	db	255
  5988                           
  5989                           ;Config register CONFIG6H @ 0x30000B
  5990                           ;	unspecified, using default values
  5991                           ;	Boot Block Table Read Protection bit
  5992                           ;	EBTRB = 0x1, unprogrammed default
  5993   30000B                     	org	3145739
  5994   30000B  FF                 	db	255
  5995                           tosu	equ	0xFFF
  5996                           tosh	equ	0xFFE
  5997                           tosl	equ	0xFFD
  5998                           stkptr	equ	0xFFC
  5999                           pclatu	equ	0xFFB
  6000                           pclath	equ	0xFFA
  6001                           pcl	equ	0xFF9
  6002                           tblptru	equ	0xFF8
  6003                           tblptrh	equ	0xFF7
  6004                           tblptrl	equ	0xFF6
  6005                           tablat	equ	0xFF5
  6006                           prodh	equ	0xFF4
  6007                           prodl	equ	0xFF3
  6008                           indf0	equ	0xFEF
  6009                           postinc0	equ	0xFEE
  6010                           postdec0	equ	0xFED
  6011                           preinc0	equ	0xFEC
  6012                           plusw0	equ	0xFEB
  6013                           fsr0h	equ	0xFEA
  6014                           fsr0l	equ	0xFE9
  6015                           wreg	equ	0xFE8
  6016                           indf1	equ	0xFE7
  6017                           postinc1	equ	0xFE6
  6018                           postdec1	equ	0xFE5
  6019                           preinc1	equ	0xFE4
  6020                           plusw1	equ	0xFE3
  6021                           fsr1h	equ	0xFE2
  6022                           fsr1l	equ	0xFE1
  6023                           bsr	equ	0xFE0
  6024                           indf2	equ	0xFDF
  6025                           postinc2	equ	0xFDE
  6026                           postdec2	equ	0xFDD
  6027                           preinc2	equ	0xFDC
  6028                           plusw2	equ	0xFDB
  6029                           fsr2h	equ	0xFDA
  6030                           fsr2l	equ	0xFD9
  6031                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     33     154
    BANK1           256    238     238
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_5(CODE[10]), STR_4(CODE[26]), STR_3(CODE[21]), STR_2(CODE[23]), 
		 -> STR_1(CODE[41]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 41
		 -> STR_5(CODE[10]), STR_4(CODE[26]), STR_3(CODE[21]), STR_2(CODE[23]), 
		 -> STR_1(CODE[41]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 41
		 -> STR_5(CODE[10]), STR_4(CODE[26]), STR_3(CODE[21]), STR_2(CODE[23]), 
		 -> STR_1(CODE[41]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2523$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_5(CODE[10]), STR_4(CODE[26]), STR_3(CODE[21]), STR_2(CODE[23]), 
		 -> STR_1(CODE[41]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2474$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2474$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    collect_avg_readings@blue_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@blue_read(BANK1[2]), 

    collect_avg_readings@green_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@green_read(BANK1[2]), 

    collect_avg_readings@red_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@red_read(BANK1[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    S525DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    S525DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_read_Clear->_I2C_2_Master_Read
    _color_click_init->_color_writetoaddr
    _collect_avg_readings->_color_read_Blue
    _collect_avg_readings->_color_read_Green
    _collect_avg_readings->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _Interrupts_init->_set_interrupt_threshold
    _set_interrupt_threshold->_color_writetoaddr
    _enable_color_interrupt->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _clear_interrupt_flag->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    i2_clear_interrupt_flag->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               360   360      0   17972
                                             31 BANK0      2     2      0
                                              0 BANK1    238   238      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _LEDSon_init
               _collect_avg_readings
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    8306
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7100
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6639
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5072
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     453
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    2991
                                             17 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     811
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     912
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     447
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _collect_avg_readings                                16    10      6    1243
                                             15 COMRAM    16    10      6
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0    1908
             _enable_color_interrupt
            _set_interrupt_threshold
 ---------------------------------------------------------------------------------
 (2) _set_interrupt_threshold                              8     2      6    1136
                                              8 COMRAM     8     2      6
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _enable_color_interrupt                               0     0      0     772
               _clear_interrupt_flag
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _clear_interrupt_flag                                 0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
             i2_clear_interrupt_flag
 ---------------------------------------------------------------------------------
 (10) i2_clear_interrupt_flag                              0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
     _enable_color_interrupt
       _clear_interrupt_flag
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _set_interrupt_threshold
       _color_writetoaddr
   _LEDSon_init
   _collect_avg_readings
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_Blue
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
   _color_read_Red
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   i2_clear_interrupt_flag
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      65        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     EE      EE       7       93.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRllhhhl     37      0       0      43        0.0%
BITBIGSFRhhhl       32      0       0      33        0.0%
BITBIGSFRllllhl     2A      0       0      55        0.0%
BITBIGSFRllllll     23      0       0      62        0.0%
BITBIGSFRllhhhl     20      0       0      46        0.0%
BITBIGSFRhhlllh     17      0       0      37        0.0%
BITBIGSFRllhhhl     11      0       0      49        0.0%
BITBIGSFRllhhl      11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      34        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllhhhl      C      0       0      48        0.0%
BITBIGSFRllhhhl      C      0       0      47        0.0%
BITBIGSFRllllhl      9      0       0      59        0.0%
BITBIGSFRllhhhl      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      61        0.0%
BITBIGSFRllllhh      6      0       0      54        0.0%
BITBIGSFRllllhl      5      0       0      57        0.0%
BITBIGSFRlllhl       5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      38        0.0%
BITBIGSFRllllhl      3      0       0      56        0.0%
BITBIGSFRllllhl      3      0       0      58        0.0%
BITBIGSFRlllhh       3      0       0      52        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      36        0.0%
BITBIGSFRllllll      2      0       0      63        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllllhl      1      0       0      60        0.0%
BITBIGSFRllhhhl      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      35        0.0%
BITBIGSFRllhl        1      0       0      51        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E2      64        0.0%
DATA                 0      0     1E2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 20:00:13 2022

                    _color_read_Red 1FC8                     _color_read_Blue 2068  
                                l22 2320                                  l31 20B6  
                                l25 2016                                  l34 1FC6  
                                l19 21EE                                  l28 2066  
                                l86 1966                                  l79 1D7A  
               ___wmul@multiplicand 0007                    _color_read_Clear 1F78  
                  _color_read_Green 2018                   ??_Interrupts_init 0011  
                               l142 2248                                 l151 23C8  
                               l160 239E                                 l240 0F22  
                               l145 224A                                 l241 0F20  
                               l154 23B4                                 l322 1672  
                               l242 0F30                                 l163 213C  
                               l243 1004                                 l148 2270  
                               l500 1ED0                                 l404 2342  
                               l244 1000                                 l157 23BE  
                               l413 221E                                 l503 236C  
                               l407 2356                                 l506 22BE  
                               l620 17FA                                 l277 22E0  
                               l633 1ACA                                 l395 2300  
                               l484 21BA                                 l493 2392  
                               l997 1E60                                 u930 225A  
                               u931 2256                                 u940 2270  
                               u941 226C                                 _abs 213E  
                               _pad 1D7C                                 prod 000FF3  
                               wreg 000FE8                                l1004 1E68  
                              ?_abs 0017                                l1213 1D9E  
                              l1222 129E                                l1224 12A6  
                              l1217 1DF4                                l1225 12EC  
                              l1243 1C28                                l1236 148C  
                              l1181 2174                                l1261 1CF2  
                              l1191 1F76                                l1184 217C  
                              l1272 23DE                                l3200 1C58  
                              l1249 1F24                                l3202 1C76  
                              l3210 20C4                                l2500 222A  
                              l3220 1674                                l3204 1CAC  
                              l3212 20D6                                l3300 1D7C  
                              l1269 20FA                                l2510 1FC8  
                              l2502 2230                                l3230 16B8  
                              l3222 1678                                l3214 20DA  
                              l3310 1DC2                                l3302 1D8A  
                              l2600 1E7E                                l2512 200E  
                              l2504 2232                                l3240 170E  
                              l3232 16D8                                l3224 1686  
                              l3216 213E                                l3208 20B8  
                              l3312 1DE0                                l3304 1D96  
                              l3320 1256                                l3400 1EFA  
                              l2442 2304                                l2610 1EB0  
                              l2602 1E82                                l2450 2102  
                              l2522 2068                                l2506 2234  
                              l3250 1790                                l3242 1722  
                              l3234 16DC                                l3226 16A6  
                              l3218 2158                                l3306 1DAA  
                              l3330 12C4                                l3322 1276  
                              l3314 1212                                l3402 1F1A  
                              l3410 1F40                                l2276 224A  
                              l2380 23C4                                l2612 1EC2  
                              l2604 1E94                                l2452 210A  
                              l2444 23AC                                l2524 20AE  
                              l2516 2018                                l2508 2236  
                              l2700 1D6E                                l3260 17DA  
                              l3252 1792                                l3244 1730  
                              l3236 16E8                                l3228 16AA  
                              l3308 1DBE                                l3340 12FC  
                              l3332 12D4                                l3324 1292  
                              l3316 1232                                l3412 1F48  
                              l2278 225A                                l2382 2396  
                              l2462 2358                                l2614 1EC6  
                              l2606 1E98                                l2454 2112  
                              l2446 23B0                                l2518 205E  
                              l2702 1D78                                l2630 1E20  
                              l2622 1DF6                                l2710 1880  
                              l3254 17A4                                l3246 1742  
                              l3238 1706                                l3270 199A  
                              l3342 1302                                l3350 13F4  
                              l3334 12E0                                l3326 12AE  
                              l3318 1246                                l3414 1F64  
                              l3406 1F26                                l3510 107E  
                              l3430 0E7C                                l2384 239A  
                              l2608 1EA2                                l2720 22C0  
                              l2456 2138                                l2448 20FE  
                              l2800 15C6                                l2640 1E54  
                              l2632 1E2E                                l2624 1DFE  
                              l2616 229A                                l2712 1884  
                              l2704 17FC                                l3248 1770  
                              l3256 17AA                                l3280 19F2  
                              l3272 199E                                l3264 1968  
                              l3360 145C                                l3352 140E  
                              l3344 1384                                l3336 12E8  
                              l3328 12BE                                l3408 1F38  
                              l3520 10EE                                l3512 109A  
                              l3504 1052                                l3440 0E90  
                              l3432 0E80                                l2378 23C0  
                              l2386 23B6                                l2458 213A  
                              l2810 160E                                l2802 15F2  
                              l2730 22FA                                l2722 22E2  
                              l2642 1E5A                                l2634 1E34  
                              l2626 1E10                                l2618 22B6  
                              l2714 18C6                                l2706 1818  
                              l3258 17BA                                l3290 1A74  
                              l3282 1A06                                l3274 19AC  
                              l3266 196C                                l3194 1C2A  
                              l3362 146C                                l3354 142C  
                              l3346 138A                                l3338 12F4  
                              l3370 1B02                                l3530 1102  
                              l3522 10F0                                l3514 10B8  
                              l3506 1060                                l3450 0EB4  
                              l3442 0E94                                l3434 0E84  
                              l2388 23BA                                l2740 21A0  
                              l2812 1626                                l2732 22FC  
                              l2724 22EC                                l2636 1E4A  
                              l2628 1E18                                l2716 18E2  
                              l2708 186C                                l3284 1A14  
                              l3292 1A7A                                l3276 19CC  
                              l3268 197A                                l3196 1C3C  
                              l3356 1446                                l3348 1390  
                              l3380 1B64                                l3372 1B10  
                              l3540 1182                                l3532 110E  
                              l3524 10F2                                l3516 10D4  
                              l3508 1078                                l3460 0EE4  
                              l3452 0EBC                                l3444 0E96  
                              l3436 0E88                                l2750 21B2  
                              l2742 21A4                                l2814 162A  
                              l2670 21CA                                l2734 22FE  
                              l2726 22EE                                l2830 21F0  
                              l2638 1E52                                l2718 1926  
                              l3294 1A8A                                l3286 1A42  
                              l3278 19EA                                l3198 1C4E  
                              l3358 1456                                l3382 1BBA  
                              l3374 1B14                                l3390 1BFC  
                              l3366 1ACC                                l3542 11AA  
                              l3534 111A                                l3526 10F4  
                              l3518 10E0                                l3470 0F32  
                              l3462 0EF0                                l3454 0ECE  
                              l3446 0E9A                                l3438 0E8C  
                              l2752 21B4                                l2744 21AA  
                              l2736 217E                                l2816 1646  
                              l2808 15FA                                l2672 21DA  
                              l2728 22F0                                l2592 2342  
                              l2832 21F4                                l3296 1AAA  
                              l3288 1A62                                l3376 1B24  
                              l3368 1AF4                                l3544 11C2  
                              l3536 1126                                l3528 10F6  
                              l3480 0FDC                                l3472 0F4E  
                              l3464 0F16                                l3456 0ED6  
                              l3448 0EAC                                l2754 21B6  
                              l2746 21AE                                l2738 219E  
                              l2770 14F2                                l2498 2220  
                              l2674 21E4                                l2666 21BC  
                              l2690 1D54                                l2682 1CF4  
                              l2594 2352                                l2834 2202  
                              l3386 1BEA                                l3378 1B44  
                              l3538 115C                                l3482 0FE8  
                              l3474 0F68                                l3458 0EDE  
                              l2596 2384                                l2756 21B8  
                              l2748 21B0                                l2780 1526  
                              l2764 1496                                l2668 21C0  
                              l2676 1F78                                l2692 1D56  
                              l2684 1CFC                                l2836 2206  
                              l3396 1ED2                                l3492 101C  
                              l3484 0FEC                                l3476 0F88  
                              l2598 1E6A                                l2782 152A  
                              l2766 14D2                                l2758 148E  
                              l2678 1FBE                                l2694 1D60  
                              l2686 1D26                                l3398 1EDE  
                              l3494 1028                                l3486 1012  
                              l3478 0FA8                                ?_pad 0015  
                              l2792 157A                                l2784 1546  
                              l2776 14FA                                l2768 14D6  
                              l2696 1D62                                l2688 1D4A  
                              l3496 102E                                l2794 158E  
                              l2786 1572                                l2778 150E  
                              l2698 1D6C                                l3498 104A  
                              l2796 15A6                                l2798 15AA  
                              STR_1 0E01                                STR_2 0E44  
                              STR_3 0E5B                                STR_4 0E2A  
                              STR_5 0E70                                u2000 1AF4  
                              u2001 1AF0                                u1210 2126  
                              u2010 1B44                                u1211 211E  
                              u2011 1B40                                u2020 1B64  
                              u2100 1196                        ?_LEDSon_init 0001  
                              u2021 1B60                                u2101 118C  
                              u2030 1F1A                                u2031 1F16  
                              u1400 1818                                u2120 11C2  
                              u1401 1814                                u2121 11BE  
                              u1330 2352                                u1410 18E2  
                              u2130 11D6                                u2050 0F30  
                              u1331 234E                                u1411 18DE  
                              u2131 11CC                                u2051 0F2C  
                              u1340 1E94                                u1228 2128  
                              u1420 14F2                                u2060 0FFC  
                              u1341 1E90                                u1421 14EE  
                              u2061 0FF8                                u1350 1EC2  
                              u1430 1546                                u2150 11FA  
                              u2118 119A                                u2070 1012  
                              u1351 1EBE                                u1431 1542  
                              u2207 1518                                u2151 11F2  
                              u2071 100E                                u1440 15C6  
                              u1360 1E10                                u2080 104A  
                      _BAUD4CONbits 000EE9                                u1441 15C2  
                              u2217 1598                                u1361 1E0C  
                              u2081 1046                                u1450 1646  
                              u1370 1E2E                                u2090 109A  
                              u1451 1642                                u2227 1618  
                              u1371 1E2A                                u2091 1096  
                              u1460 221E                                u1380 1E4A  
                              u1700 1C4E                                u2148 11DA  
                              u1461 221A                                u1381 1E46  
                              u1701 1C4A                                u1710 1C76  
                              u1711 1C72                                u1800 1770  
                              u1720 1CAC                                u2168 11FE  
                              u1801 176C                                u1721 1CA8  
                              u2177 106C                                u1810 17BA  
                              u1730 20FA                                _T2PR 000FBC  
                              u1811 17B6                                u1731 20F6  
                              u2187 1174                                u1820 197A  
                              u1740 2158                                u1900 1242  
                              u2197 21D0                                u1821 1976  
                              u1741 2154                                u1901 123C  
                              u1750 1686                                u1830 19AC  
                              u1910 1244                                u1751 1682  
                              u1831 19A8                                u1760 16B8  
                              u1840 19EA                                u1920 1256  
                              u1761 16B4                                u1841 19E6  
                              u1921 1252                                u1850 1A14  
                              u1690 1C3C                                u1930 1292  
                              u1771 16E2                                u1851 1A10  
                              u1691 1C38                                u1931 128E  
                              u1780 1706                                u1860 1A42  
                              u1940 12BE                                u1781 1702  
                              u1861 1A3E                                u1941 12BA  
                              u1790 1730                                u1870 1A8A  
                              u1950 12D4                                u1791 172C  
                              u1871 1A86                                u1951 12D0  
                              u1880 1D8A                                u1960 140E  
                              u1881 1D86                                u1961 140A  
                              u1890 1DE0                                u1970 142C  
                              u1891 1DDC                                u1971 1428  
                              u1980 1446                                u1981 1442  
                              u1990 1456                                u1991 1452  
                              abs@a 0017                                _dbuf 00B9  
                              _main 0E7C                                _dtoa 1212  
                              _prec 00B2                                pad@i 001C  
                              pad@p 0019                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 001E  
                              fsr2l 000FD9                                btemp 005B  
                              prodh 000FF4                                prodl 000FF3  
                              start 0076              __end_of_color_read_Red 2018  
                   __end_of_HighISR 0076                _response_in_progress 00B6  
                      ___param_bank 000000                               ??_abs 0019  
                             ??_pad 001B                     __end_of___aodiv 17FC  
                             ?_main 0001                               ?_dtoa 0020  
                   __end_of___aomod 1ACC                     __end_of___lwdiv 1E6A  
                             i2l151 23DC                               i2l160 23AA  
                             i2l145 2272                               i2l148 2298  
                             i2l157 23D2                               i2l503 2382  
                             i2l490 0072                        vfpfcnvrt@fmt 0045  
           ?_enable_color_interrupt 0001                        main@red_read 01D3  
           __end_of_sendCharSerial4 2358          __end_of_I2C_2_Master_Start 23CA  
        __end_of_I2C_2_Master_Write 23A0                               _flags 00B8  
                             _fputc 1C2A                               _fputs 20B8  
                             pad@fp 0015                               _width 00B0  
                             _putch 23DE                               main@i 01DB  
                             dtoa@d 0022                               dtoa@i 0041  
                             dtoa@n 0038                               dtoa@p 0034  
                             dtoa@s 0040                               dtoa@w 0036  
                             tablat 000FF5                               ttemp5 005C  
                             ttemp6 005F                               ttemp7 0063  
                             status 000FD8                               wtemp8 005C  
                   __end_of_sprintf 1F78             __end_of_color_read_Blue 20B8  
             _I2C_2_Master_RepStart 23AC                     ?_color_read_Red 0009  
                   __initialization 2322                        __end_of_main 1212  
                      __end_of_dtoa 148E      __end_of_enable_color_interrupt 2394  
                            ??_main 00F8                              ??_dtoa 002A  
                     __activetblptr 000003                       main@blue_read 01D7  
              main@clear_read_check 01CC                        ?_setMotorPWM 0012  
                            ?_fputc 0005                              ?_fputs 000E  
                            _CCPR1H 000FAA                              _CCPR2H 000FA6  
                            _CCPR3H 000F25                              _CCPR4H 000F21  
      collect_avg_readings@red_read 0010                              ?_putch 0001  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            _RE4PPS 000E76                              i2l3180 002E  
                            i2l3190 006A                              i2l3182 0036  
                            i2l3192 006E                              i2l3184 0038  
                            i2l3176 000A                              i2l3186 0050  
                            i2l3178 001A                              i2l2660 23CE  
                            i2l3188 0052                              i2l2494 2272  
                            i2l2654 23D4                              i2l2662 23A2  
                            i2l2496 2282                              i2l2656 23D8  
                            i2l2664 23A6                              i2l2658 23CA  
                            _RG6PPS 000E88                              i2l2988 236E  
                         ??_HighISR 0003            __end_of_color_click_init 21F0  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                      _CCPTMRS0bits 000FAD                        vfprintf@cfmt 0055  
                         ??___aodiv 0015                           ??___aomod 0015  
                            ___wmul 229A                           ??___lwdiv 000F  
                            clear_0 2328                              isa$std 000001  
                            pad@buf 0017                              dtoa@fp 0020  
      __end_of_clear_interrupt_flag 236E                              fputc@c 0005  
                            fputs@c 0012                              fputs@i 0013  
                            fputs@s 000E                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                    ?_sendCharSerial4 0001  
                            putch@c 0001                    __end_of_vfprintf 1F26  
                 ??_initDCmotorsPWM 0005                           ??_sprintf 0057  
           ?i2_clear_interrupt_flag 0001                          __accesstop 0060  
           __end_of__initialization 2336            __end_of_color_read_Clear 1FC8  
          __end_of_color_read_Green 2068              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                    ?_color_read_Blue 0009  
                   _Interrupts_init 217E        __end_of_collect_avg_readings 1674  
                    __pcstackCOMRAM 0001          collect_avg_readings@i_1566 001A  
        collect_avg_readings@i_1567 001C          collect_avg_readings@i_1568 001E  
           _set_interrupt_threshold 1E6A                       __end_of_fputc 1CF4  
                     __end_of_fputs 20FC                       __end_of_putch 23E0  
                    main@clear_read 01D9      __end_ofi2_clear_interrupt_flag 2384  
                           ??_fputc 0009                             ??_fputs 0012  
                           ??_putch 0005                          __pbssBANK0 0060  
                 _color_writetoaddr 2302                        _T2CLKCONbits 000FBF  
                ?_color_writetoaddr 0007                             ?___wmul 0005  
               ??_color_writetoaddr 0008                             _INT1PPS 000DF1  
                    main@green_read 01D5                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5         set_interrupt_threshold@AIHT 000B  
       set_interrupt_threshold@AILT 0009             __end_of_Interrupts_init 21BC  
            color_writetoaddr@value 0007                    ??_color_read_Red 000B  
                           _HighISR 0008           __end_of_color_writetoaddr 2322  
              _clear_interrupt_flag 2358                  _I2C_2_Master_Start 23C0  
                        _initUSART4 22E2                 i2_I2C_2_Master_Idle 2272  
                _I2C_2_Master_Write 2394                             __Hparam 0000  
               i2_I2C_2_Master_Stop 23CA                             __Lparam 0000  
                 color_read_Red@tmp 000E           ??_set_interrupt_threshold 000F  
           sendStringSerial4@string 0006                             ___aodiv 1674  
                           ___aomod 1968                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 1DF6                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 00D9                        __psmallconst 0E00  
                           __pcinit 2322                             __ramtop 0E00  
                           __ptext0 0E7C                             __ptext1 1F26  
                           __ptext2 1ED2                             __ptext3 1ACC  
                           __ptext4 1212                             __ptext5 1D7C  
                           __ptext6 20B8                             __ptext7 1C2A  
                           __ptext8 23DE                             __ptext9 213E  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
              ?i2_I2C_2_Master_Stop 0001                           _T2HLTbits 000FBE  
                     _RxBufWriteCnt 005A                _collect_avg_readings 148E  
                           main@buf 0100                             _sprintf 1F26  
              ??_I2C_2_Master_Start 0006                ??_I2C_2_Master_Write 0006  
              end_of_initialization 2336      collect_avg_readings@green_read 0012  
                           fputc@fp 0007                             fputs@fp 0010  
                 ?_color_click_init 0001               ?_clear_interrupt_flag 0001  
                ??_color_click_init 0009                       _card_detected 00B4  
                 __end_of_vfpfcnvrt 1C2A                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                    vfpfcnvrt@convarg 004B  
                        ??_vfprintf 0055                     _initDCmotorsPWM 1CF4  
                         _PORTFbits 000F8E                  setMotorPWM@negDuty 0017  
             ??i2_I2C_2_Master_Idle 0001               ??i2_I2C_2_Master_Stop 0002  
   __end_of_set_interrupt_threshold 1ED2                           _TRISAbits 000F81  
                setMotorPWM@posDuty 0016                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
             ?_collect_avg_readings 0010                          main@i_1241 01CF  
                        main@i_1243 01D1                 main@expected_values 0196  
          color_writetoaddr@address 0008             ??_I2C_2_Master_RepStart 0006  
                  ?_Interrupts_init 0001                         _CCP1CONbits 000FAB  
                 ?_color_read_Clear 0009                        _EUSART4RXbuf 009C  
                      _EUSART4TXbuf 0060                         _CCP2CONbits 000FA7  
                 ?_color_read_Green 0009                         _CCP3CONbits 000F26  
                       ?_initUSART4 0001                         _CCP4CONbits 000F22  
         sendCharSerial4@charToSend 0005                          main@motorL 01DC  
                        main@motorR 01E5                  ??_color_read_Clear 000B  
                ??_color_read_Green 000B                         vfpfcnvrt@ap 0047  
                       vfpfcnvrt@cp 0053                         vfpfcnvrt@fp 0043  
                    __end_of___wmul 22C0                 color_read_Clear@tmp 000E  
               start_initialization 2322                         __end_of_abs 217E  
                       __end_of_pad 1DF6                       _TxBufWriteCnt 0058  
                     ??_LEDSon_init 0005              ??_clear_interrupt_flag 0007  
               color_read_Green@tmp 000E             __end_of_initDCmotorsPWM 1D7C  
                       vfprintf@fmt 00DB            ??_enable_color_interrupt 0009  
                          ??___wmul 0009       i2I2C_2_Master_Write@data_byte 0002  
      __end_ofi2_I2C_2_Master_Start 23DE        __end_ofi2_I2C_2_Master_Write 23AC  
                       __pbssCOMRAM 0057              ??_collect_avg_readings 0016  
                     __pcstackBANK0 00D9                       __pcstackBANK1 0100  
                  ___aodiv@dividend 0005                            ?_HighISR 0001  
               __end_of_LEDSon_init 22E2                    ___lwdiv@dividend 000B  
                         _dtoa$2551 0032                           __pintcode 0008  
                          ?___aodiv 0005                            ?___aomod 0005  
                  ___aodiv@quotient 0017                            ?___lwdiv 000B  
              I2C_2_Master_Read@ack 0007                I2C_2_Master_Read@tmp 0008  
                       __smallconst 0E00                   _I2C_2_Master_Idle 224A  
                 _I2C_2_Master_Init 2220                   _I2C_2_Master_Read 20FC  
                 _I2C_2_Master_Stop 23B6                        _RxBufReadCnt 0059  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0014  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000F  
                          ?_sprintf 00DF                   _sendStringSerial4 21F0  
               ??_I2C_2_Master_Idle 0005                 ??_I2C_2_Master_Init 0005  
               ??_I2C_2_Master_Read 0006  set_interrupt_threshold@persistence 000D  
                    ___wmul@product 0009                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0006                            _LATDbits 000F7C  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                  ?_sendStringSerial4 0006  
                          _PIE4bits 000E2D                            i2u126_40 2282  
                          i2u126_41 227E                            i2u127_40 2298  
                          i2u127_41 2294                            i2u223_47 0042  
                          i2u224_47 005C                            i2u167_40 001A  
                          i2u167_41 0016                            _PIR0bits 000E33  
                          i2u168_40 002E                            i2u168_41 002A  
                          _PIR4bits 000E37                    ?_initDCmotorsPWM 0001  
                 ??_sendCharSerial4 0005                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 0008                            _SSP2STAT 000ED8  
                         _vfpfcnvrt 1ACC           __end_of_I2C_2_Master_Idle 2272  
         __end_of_I2C_2_Master_Init 224A           __end_of_I2C_2_Master_Read 213E  
                 ___wmul@multiplier 0005           __end_of_I2C_2_Master_Stop 23C0  
          ??i2_clear_interrupt_flag 0003                        setMotorPWM@m 0012  
       I2C_2_Master_Write@data_byte 0006                   ??_color_read_Blue 000B  
                      _TxBufReadCnt 0057           __end_of_sendStringSerial4 2220  
                       _LEDSon_init 22C0       __end_of_I2C_2_Master_RepStart 23B6  
                color_read_Blue@tmp 000E            ?_set_interrupt_threshold 0009  
               __end_of_setMotorPWM 1968                        ??_initUSART4 0005  
              i2_I2C_2_Master_Start 23D4                i2_I2C_2_Master_Write 23A0  
                          __Hrparam 0000                          vfprintf@ap 00DD  
                          __Lrparam 0000                          vfprintf@fp 00D9  
       __end_ofi2_I2C_2_Master_Idle 229A         __end_ofi2_I2C_2_Master_Stop 23D4  
                        ?_vfpfcnvrt 0043                     ___aodiv@divisor 000D  
                   ___aodiv@counter 0015                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                          _ANSELFbits 000EB4  
                        sprintf@fmt 00E1                     ___lwdiv@divisor 000D  
                __end_of_initUSART4 2302                     ___lwdiv@counter 0011  
                          __ptext10 1968                            __ptext11 1674  
                          __ptext20 21BC                            __ptext12 17FC  
                          __ptext21 2220                            __ptext13 229A  
            _enable_color_interrupt 2384                            __ptext30 1E6A  
                          __ptext22 148E                            __ptext14 1DF6  
                          __ptext31 2384                            __ptext23 1FC8  
                          __ptext15 21F0                            __ptext40 23A0  
                          __ptext32 2302                            __ptext24 2018  
                          __ptext16 2340                            __ptext41 23CA  
                          __ptext33 2358                            __ptext25 2068  
                          __ptext17 22E2                            __ptext42 23D4  
                          __ptext34 2394                            __ptext26 23AC  
                          __ptext18 1CF4                            __ptext43 2272  
                          __ptext35 23B6                            __ptext27 20FC  
                          __ptext19 1F78                            __ptext36 23C0  
                          __ptext28 22C0                            __ptext37 224A  
                          __ptext29 217E                            __ptext39 236E  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 005B                            _vfprintf 1ED2  
                  ___aomod@dividend 0005               collect_avg_readings@i 0018  
                        _INTCONbits 000FF2        _set_interrupt_threshold$2032 000F  
      _set_interrupt_threshold$2033 0010                         _setMotorPWM 17FC  
     collect_avg_readings@blue_read 0014                            intlevel2 0000  
                         sprintf@ap 00EB                     ___aomod@divisor 000D  
                       ??_vfpfcnvrt 0049                     ___aomod@counter 0015  
                  _color_click_init 21BC                            sprintf@f 00ED  
                          sprintf@s 00DF                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C                          _TX4STAbits 000EE8  
                      ___aodiv@sign 0016                     _sendCharSerial4 2340  
            ??i2_I2C_2_Master_Start 0002              ??i2_I2C_2_Master_Write 0002  
            i2_clear_interrupt_flag 236E                        ___aomod@sign 0016  
                      main@PWMcycle 01CE  
