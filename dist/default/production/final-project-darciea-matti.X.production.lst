

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 09 14:14:54 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Version 2.35
    65                           ; Generated 05/05/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F67K40 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	idataBANK1
   101   001F2A                     __pidataBANK1:
   102                           	callstack 0
   103                           
   104                           ;initializer for main@F14644
   105   001F2A  32C8               	dw	13000
   106   001F2C  0A28               	dw	2600
   107   001F2E  0708               	dw	1800
   108   001F30  20D0               	dw	8400
   109   001F32  1964               	dw	6500
   110   001F34  1388               	dw	5000
   111   001F36  1130               	dw	4400
   112   001F38  0708               	dw	1800
   113   001F3A  0AF0               	dw	2800
   114   000000                     _TRISBbits	set	3970
   115   000000                     _TX4REG	set	3812
   116   000000                     _RC4STAbits	set	3815
   117   000000                     _SP4BRGH	set	3814
   118   000000                     _LATGbits	set	3967
   119   000000                     _TRISAbits	set	3969
   120   000000                     _TRISFbits	set	3974
   121   000000                     _TRISDbits	set	3972
   122   000000                     _TRISGbits	set	3975
   123   000000                     _SSP2CON2bits	set	3802
   124   000000                     _INT1PPS	set	3569
   125   000000                     _RX4PPS	set	3605
   126   000000                     _SSP2CLKPPS	set	3612
   127   000000                     _SSP2DATPPS	set	3613
   128   000000                     _RC7PPS	set	3689
   129   000000                     _RE2PPS	set	3700
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _TRISHbits	set	3976
   133   000000                     _T2PR	set	4028
   134   000000                     _T2CONbits	set	4029
   135   000000                     _CCPR2H	set	4006
   136   000000                     _CCPR1H	set	4010
   137   000000                     _RE4PPS	set	3702
   138   000000                     _RG6PPS	set	3720
   139   000000                     _RD5PPS	set	3695
   140   000000                     _ANSELBbits	set	3738
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _CCPR4H	set	3873
   145   000000                     _CCPR3H	set	3877
   146   000000                     _INTCONbits	set	4082
   147   000000                     _T2CLKCONbits	set	4031
   148   000000                     _T2HLTbits	set	4030
   149   000000                     _CCP1CONbits	set	4011
   150   000000                     _CCPTMRS0bits	set	4013
   151   000000                     _CCP2CONbits	set	4007
   152   000000                     _LATAbits	set	3961
   153   000000                     _LATDbits	set	3964
   154   000000                     _LATHbits	set	3968
   155   000000                     _CCP3CONbits	set	3878
   156   000000                     _CCP4CONbits	set	3874
   157   000000                     _RC4REG	set	3811
   158   000000                     _SP4BRGL	set	3813
   159   000000                     _TX4STAbits	set	3816
   160   000000                     _BAUD4CONbits	set	3817
   161   000000                     _SSP2CON2	set	3802
   162   000000                     _SSP2STAT	set	3800
   163   000000                     _SSP2BUF	set	3797
   164   000000                     _IPR0bits	set	3615
   165   000000                     _PIE0bits	set	3625
   166   000000                     _PIE4bits	set	3629
   167   000000                     _PIR4bits	set	3639
   168   000000                     _RC0PPS	set	3682
   169   000000                     _RD6PPS	set	3696
   170   000000                     _LATFbits	set	3966
   171   000000                     _PIR0bits	set	3635
   172                           
   173                           	psect	smallconst
   174   000E00                     __psmallconst:
   175                           	callstack 0
   176   000E00  00                 	db	0
   177   000E01                     STR_1:
   178                           
   179                           ; BSR set to: 14
   180   000E01  52                 	db	82	;'R'
   181   000E02  61                 	db	97	;'a'
   182   000E03  77                 	db	119	;'w'
   183   000E04  20                 	db	32
   184   000E05  25                 	db	37
   185   000E06  64                 	db	100	;'d'
   186   000E07  2C                 	db	44
   187   000E08  20                 	db	32
   188   000E09  25                 	db	37
   189   000E0A  64                 	db	100	;'d'
   190   000E0B  2C                 	db	44
   191   000E0C  20                 	db	32
   192   000E0D  25                 	db	37
   193   000E0E  64                 	db	100	;'d'
   194   000E0F  2C                 	db	44
   195   000E10  20                 	db	32
   196   000E11  25                 	db	37
   197   000E12  64                 	db	100	;'d'
   198   000E13  20                 	db	32
   199   000E14  0A                 	db	10
   200   000E15  00                 	db	0
   201   000E16  00                 	db	0	; dummy byte at the end
   202   000000                     
   203                           ; #config settings
   204                           
   205                           	psect	cinit
   206   001C32                     __pcinit:
   207                           	callstack 0
   208   001C32                     start_initialization:
   209                           	callstack 0
   210   001C32                     __initialization:
   211                           	callstack 0
   212                           
   213                           ; Initialize objects allocated to BANK1 (18 bytes)
   214                           ; load TBLPTR registers with __pidataBANK1
   215   001C32  0E2A               	movlw	low __pidataBANK1
   216   001C34  6EF6               	movwf	tblptrl,c
   217   001C36  0E1F               	movlw	high __pidataBANK1
   218   001C38  6EF7               	movwf	tblptrh,c
   219   001C3A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   220   001C3C  6EF8               	movwf	tblptru,c
   221   001C3E  EE01  F0B9         	lfsr	0,__pdataBANK1
   222   001C42  EE10 F012          	lfsr	1,18
   223   001C46                     copy_data0:
   224   001C46  0009               	tblrd		*+
   225   001C48  CFF5 FFEE          	movff	tablat,postinc0
   226   001C4C  50E5               	movf	postdec1,w,c
   227   001C4E  50E1               	movf	fsr1l,w,c
   228   001C50  E1FA               	bnz	copy_data0
   229                           
   230                           ; Clear objects allocated to BANK2 (120 bytes)
   231   001C52  EE02  F000         	lfsr	0,__pbssBANK2
   232   001C56  0E78               	movlw	120
   233   001C58                     clear_0:
   234   001C58  6AEE               	clrf	postinc0,c
   235   001C5A  06E8               	decf	wreg,f,c
   236   001C5C  E1FD               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to BANK0 (123 bytes)
   239   001C5E  EE00  F060         	lfsr	0,__pbssBANK0
   240   001C62  0E7B               	movlw	123
   241   001C64                     clear_1:
   242   001C64  6AEE               	clrf	postinc0,c
   243   001C66  06E8               	decf	wreg,f,c
   244   001C68  E1FD               	bnz	clear_1
   245                           
   246                           ; Clear objects allocated to COMRAM (4 bytes)
   247   001C6A  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   248   001C6C  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   249   001C6E  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   250   001C70  6A57               	clrf	__pbssCOMRAM& (0+255),c
   251   001C72                     end_of_initialization:
   252                           	callstack 0
   253   001C72                     __end_of__initialization:
   254                           	callstack 0
   255   001C72  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   256   001C74  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   257   001C76  0100               	movlb	0
   258   001C78  EF25  F00B         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMRAM
   261   000057                     __pbssCOMRAM:
   262                           	callstack 0
   263   000057                     _TxBufReadCnt:
   264                           	callstack 0
   265   000057                     	ds	1
   266   000058                     _TxBufWriteCnt:
   267                           	callstack 0
   268   000058                     	ds	1
   269   000059                     _RxBufReadCnt:
   270                           	callstack 0
   271   000059                     	ds	1
   272   00005A                     _RxBufWriteCnt:
   273                           	callstack 0
   274   00005A                     	ds	1
   275                           
   276                           	psect	bssBANK0
   277   000060                     __pbssBANK0:
   278                           	callstack 0
   279   000060                     _EUSART4TXbuf:
   280                           	callstack 0
   281   000060                     	ds	60
   282   00009C                     _EUSART4RXbuf:
   283                           	callstack 0
   284   00009C                     	ds	20
   285   0000B0                     _width:
   286                           	callstack 0
   287   0000B0                     	ds	2
   288   0000B2                     _prec:
   289                           	callstack 0
   290   0000B2                     	ds	2
   291   0000B4                     _card_detected:
   292                           	callstack 0
   293   0000B4                     	ds	2
   294   0000B6                     _response_in_progress:
   295                           	callstack 0
   296   0000B6                     	ds	2
   297   0000B8                     _TimerFlag:
   298                           	callstack 0
   299   0000B8                     	ds	2
   300   0000BA                     _flags:
   301                           	callstack 0
   302   0000BA                     	ds	1
   303   0000BB                     _dbuf:
   304                           	callstack 0
   305   0000BB                     	ds	32
   306                           
   307                           	psect	dataBANK1
   308   0001B9                     __pdataBANK1:
   309                           	callstack 0
   310   0001B9                     main@F14644:
   311                           	callstack 0
   312   0001B9                     	ds	18
   313                           
   314                           	psect	bssBANK2
   315   000200                     __pbssBANK2:
   316                           	callstack 0
   317   000200                     	ds	120
   318                           
   319                           	psect	cstackBANK1
   320   000100                     __pcstackBANK1:
   321                           	callstack 0
   322   000100                     main@ReturnHomeArray:
   323                           	callstack 0
   324                           
   325                           ; 120 bytes @ 0x0
   326   000100                     	ds	120
   327   000178                     main@expected_values:
   328                           	callstack 0
   329                           
   330                           ; 18 bytes @ 0x78
   331   000178                     	ds	18
   332   00018A                     main@buf:
   333                           	callstack 0
   334                           
   335                           ; 20 bytes @ 0x8A
   336   00018A                     	ds	20
   337   00019E                     main@red_read:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x9E
   341   00019E                     	ds	2
   342   0001A0                     main@green_read:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0xA0
   346   0001A0                     	ds	2
   347   0001A2                     main@blue_read:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0xA2
   351   0001A2                     	ds	2
   352   0001A4                     main@clear_read:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0xA4
   356   0001A4                     	ds	2
   357   0001A6                     main@PWMcycle:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0xA6
   361   0001A6                     	ds	1
   362   0001A7                     main@motorL:
   363                           	callstack 0
   364                           
   365                           ; 9 bytes @ 0xA7
   366   0001A7                     	ds	9
   367   0001B0                     main@motorR:
   368                           	callstack 0
   369                           
   370                           ; 9 bytes @ 0xB0
   371   0001B0                     	ds	9
   372                           
   373                           	psect	cstackBANK0
   374   0000DB                     __pcstackBANK0:
   375                           	callstack 0
   376   0000DB                     ?_vfprintf:
   377                           	callstack 0
   378   0000DB                     vfprintf@fp:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x0
   382   0000DB                     	ds	2
   383   0000DD                     vfprintf@fmt:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x2
   387   0000DD                     	ds	2
   388   0000DF                     vfprintf@ap:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x4
   392   0000DF                     	ds	2
   393   0000E1                     ?_sprintf:
   394                           	callstack 0
   395   0000E1                     sprintf@s:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x6
   399   0000E1                     	ds	2
   400   0000E3                     sprintf@fmt:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x8
   404   0000E3                     	ds	10
   405   0000ED                     sprintf@ap:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x12
   409   0000ED                     	ds	2
   410   0000EF                     sprintf@f:
   411                           	callstack 0
   412                           
   413                           ; 11 bytes @ 0x14
   414   0000EF                     	ds	11
   415   0000FA                     ??_main:
   416                           
   417                           ; 1 bytes @ 0x1F
   418   0000FA                     	ds	2
   419                           
   420                           	psect	cstackCOMRAM
   421   000001                     __pcstackCOMRAM:
   422                           	callstack 0
   423   000001                     ??i2_I2C_2_Master_Idle:
   424   000001                     
   425                           ; 1 bytes @ 0x0
   426   000001                     	ds	1
   427   000002                     i2I2C_2_Master_Write@data_byte:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x1
   431   000002                     	ds	1
   432   000003                     ??_HighISR:
   433   000003                     
   434                           ; 1 bytes @ 0x2
   435   000003                     	ds	2
   436   000005                     ??_I2C_2_Master_Idle:
   437   000005                     ?___wmul:
   438                           	callstack 0
   439   000005                     ?___aodiv:
   440                           	callstack 0
   441   000005                     ?___aomod:
   442                           	callstack 0
   443   000005                     sendCharSerial4@charToSend:
   444                           	callstack 0
   445   000005                     ___wmul@multiplier:
   446                           	callstack 0
   447   000005                     fputc@c:
   448                           	callstack 0
   449   000005                     ___aodiv@dividend:
   450                           	callstack 0
   451   000005                     ___aomod@dividend:
   452                           	callstack 0
   453                           
   454                           ; 8 bytes @ 0x4
   455   000005                     	ds	1
   456   000006                     ??_I2C_2_Master_Read:
   457   000006                     I2C_2_Master_Write@data_byte:
   458                           	callstack 0
   459   000006                     sendStringSerial4@string:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x5
   463   000006                     	ds	1
   464   000007                     color_writetoaddr@value:
   465                           	callstack 0
   466   000007                     I2C_2_Master_Read@ack:
   467                           	callstack 0
   468   000007                     ___wmul@multiplicand:
   469                           	callstack 0
   470   000007                     fputc@fp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x6
   474   000007                     	ds	1
   475   000008                     color_writetoaddr@address:
   476                           	callstack 0
   477   000008                     I2C_2_Master_Read@tmp:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x7
   481   000008                     	ds	1
   482   000009                     ??_fputc:
   483   000009                     ??_color_click_init:
   484   000009                     ?_color_read_Red:
   485                           	callstack 0
   486   000009                     ?_color_read_Green:
   487                           	callstack 0
   488   000009                     ?_color_read_Blue:
   489                           	callstack 0
   490   000009                     ?_color_read_Clear:
   491                           	callstack 0
   492   000009                     set_interrupt_threshold@AILT:
   493                           	callstack 0
   494   000009                     ___wmul@product:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x8
   498   000009                     	ds	2
   499   00000B                     ??_color_read_Red:
   500   00000B                     ??_color_read_Green:
   501   00000B                     ??_color_read_Blue:
   502   00000B                     ??_color_read_Clear:
   503   00000B                     ?___lwdiv:
   504                           	callstack 0
   505   00000B                     set_interrupt_threshold@AIHT:
   506                           	callstack 0
   507   00000B                     ___lwdiv@dividend:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0xA
   511   00000B                     	ds	2
   512   00000D                     set_interrupt_threshold@persistence:
   513                           	callstack 0
   514   00000D                     ___lwdiv@divisor:
   515                           	callstack 0
   516   00000D                     ___aodiv@divisor:
   517                           	callstack 0
   518   00000D                     ___aomod@divisor:
   519                           	callstack 0
   520                           
   521                           ; 8 bytes @ 0xC
   522   00000D                     	ds	1
   523   00000E                     color_read_Red@tmp:
   524                           	callstack 0
   525   00000E                     color_read_Green@tmp:
   526                           	callstack 0
   527   00000E                     color_read_Blue@tmp:
   528                           	callstack 0
   529   00000E                     color_read_Clear@tmp:
   530                           	callstack 0
   531   00000E                     fputs@s:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xD
   535   00000E                     	ds	1
   536   00000F                     _set_interrupt_threshold$1926:
   537                           	callstack 0
   538   00000F                     ___lwdiv@quotient:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xE
   542   00000F                     	ds	1
   543   000010                     _set_interrupt_threshold$1927:
   544                           	callstack 0
   545   000010                     fputs@fp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0xF
   549   000010                     	ds	1
   550   000011                     ___lwdiv@counter:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x10
   554   000011                     	ds	1
   555   000012                     fputs@c:
   556                           	callstack 0
   557   000012                     setMotorPWM@m:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x11
   561   000012                     	ds	1
   562   000013                     fputs@i:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x12
   566   000013                     	ds	1
   567   000014                     ??_setMotorPWM:
   568                           
   569                           ; 1 bytes @ 0x13
   570   000014                     	ds	1
   571   000015                     ___aodiv@counter:
   572                           	callstack 0
   573   000015                     ___aomod@counter:
   574                           	callstack 0
   575   000015                     pad@fp:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x14
   579   000015                     	ds	1
   580   000016                     setMotorPWM@posDuty:
   581                           	callstack 0
   582   000016                     ___aodiv@sign:
   583                           	callstack 0
   584   000016                     ___aomod@sign:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x15
   588   000016                     	ds	1
   589   000017                     ?_abs:
   590                           	callstack 0
   591   000017                     setMotorPWM@negDuty:
   592                           	callstack 0
   593   000017                     abs@a:
   594                           	callstack 0
   595   000017                     pad@buf:
   596                           	callstack 0
   597   000017                     ___aodiv@quotient:
   598                           	callstack 0
   599                           
   600                           ; 8 bytes @ 0x16
   601   000017                     	ds	2
   602   000019                     ??_abs:
   603   000019                     pad@p:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x18
   607   000019                     	ds	2
   608   00001B                     ??_pad:
   609                           
   610                           ; 1 bytes @ 0x1A
   611   00001B                     	ds	1
   612   00001C                     pad@i:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x1B
   616   00001C                     	ds	2
   617   00001E                     pad@w:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x1D
   621   00001E                     	ds	2
   622   000020                     dtoa@fp:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x1F
   626   000020                     	ds	2
   627   000022                     dtoa@d:
   628                           	callstack 0
   629                           
   630                           ; 8 bytes @ 0x21
   631   000022                     	ds	8
   632   00002A                     ??_dtoa:
   633                           
   634                           ; 1 bytes @ 0x29
   635   00002A                     	ds	8
   636   000032                     _dtoa$2445:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x31
   640   000032                     	ds	2
   641   000034                     dtoa@p:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x33
   645   000034                     	ds	2
   646   000036                     dtoa@w:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x35
   650   000036                     	ds	2
   651   000038                     dtoa@n:
   652                           	callstack 0
   653                           
   654                           ; 8 bytes @ 0x37
   655   000038                     	ds	8
   656   000040                     dtoa@s:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x3F
   660   000040                     	ds	1
   661   000041                     dtoa@i:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x40
   665   000041                     	ds	2
   666   000043                     vfpfcnvrt@fp:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x42
   670   000043                     	ds	2
   671   000045                     vfpfcnvrt@fmt:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x44
   675   000045                     	ds	2
   676   000047                     vfpfcnvrt@ap:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x46
   680   000047                     	ds	2
   681   000049                     ??_vfpfcnvrt:
   682                           
   683                           ; 1 bytes @ 0x48
   684   000049                     	ds	2
   685   00004B                     vfpfcnvrt@convarg:
   686                           	callstack 0
   687                           
   688                           ; 8 bytes @ 0x4A
   689   00004B                     	ds	8
   690   000053                     vfpfcnvrt@cp:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x52
   694   000053                     	ds	2
   695   000055                     vfprintf@cfmt:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x54
   699   000055                     	ds	2
   700   000057                     
   701                           ; 1 bytes @ 0x56
   702 ;;
   703 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   704 ;;
   705 ;; *************** function _main *****************
   706 ;; Defined at:
   707 ;;		line 21 in file "main.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  ReturnHomeAr  120    0[BANK1 ] unsigned int [30][2]
   712 ;;  buf            20  138[BANK1 ] unsigned char [20]
   713 ;;  expected_val   18  120[BANK1 ] unsigned int [3][3]
   714 ;;  normalised_v   18    0        unsigned int [3][3]
   715 ;;  motorR          9  176[BANK1 ] struct DC_motor
   716 ;;  motorL          9  167[BANK1 ] struct DC_motor
   717 ;;  master_close    6    0        unsigned int [3]
   718 ;;  clear_read      2  164[BANK1 ] unsigned int 
   719 ;;  blue_read       2  162[BANK1 ] unsigned int 
   720 ;;  green_read      2  160[BANK1 ] unsigned int 
   721 ;;  red_read        2  158[BANK1 ] unsigned int 
   722 ;;  CardCount       2    0        unsigned int 
   723 ;;  TimerCount      2    0        unsigned int 
   724 ;;  PWMcycle        1  166[BANK1 ] unsigned char 
   725 ;;  card            1    0        enum E14569
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   736 ;;      Locals:         0       0     185       0       0       0       0       0       0       0       0       0       
      +0       0       0
   737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   738 ;;      Totals:         0       2     185       0       0       0       0       0       0       0       0       0       
      +0       0       0
   739 ;;Total ram usage:      187 bytes
   740 ;; Hardware stack levels required when called: 12
   741 ;; This function calls:
   742 ;;		_I2C_2_Master_Init
   743 ;;		_Interrupts_init
   744 ;;		_LEDSon_init
   745 ;;		_color_click_init
   746 ;;		_color_read_Blue
   747 ;;		_color_read_Clear
   748 ;;		_color_read_Green
   749 ;;		_color_read_Red
   750 ;;		_initDCmotorsPWM
   751 ;;		_initUSART4
   752 ;;		_sendStringSerial4
   753 ;;		_setMotorPWM
   754 ;;		_sprintf
   755 ;; This function is called by:
   756 ;;		Startup code after reset
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text0
   761   00164A                     __ptext0:
   762                           	callstack 0
   763   00164A                     _main:
   764                           	callstack 19
   765   00164A                     
   766                           ;main.c: 26:     LEDSon_init();
   767   00164A  EC42  F00F         	call	_LEDSon_init	;wreg free
   768   00164E                     
   769                           ;main.c: 27:     I2C_2_Master_Init();
   770   00164E  ECF2  F00E         	call	_I2C_2_Master_Init	;wreg free
   771   001652                     
   772                           ;main.c: 28:     color_click_init();
   773   001652  ECC0  F00E         	call	_color_click_init	;wreg free
   774   001656                     
   775                           ;main.c: 29:     initDCmotorsPWM();
   776   001656  EC37  F00C         	call	_initDCmotorsPWM	;wreg free
   777   00165A                     
   778                           ;main.c: 30:     initUSART4();
   779   00165A  EC53  F00F         	call	_initUSART4	;wreg free
   780   00165E                     
   781                           ;main.c: 31:     Interrupts_init();
   782   00165E  ECA1  F00E         	call	_Interrupts_init	;wreg free
   783   001662                     
   784                           ;main.c: 39:     unsigned char PWMcycle = T2PR;
   785   001662  CFBC F1A6          	movff	4028,main@PWMcycle	;volatile
   786                           
   787                           ;main.c: 41:     struct DC_motor motorL, motorR;;main.c: 43:     motorL.power=0;
   788   001666  0E00               	movlw	0
   789   001668  0101               	movlb	1	; () banked
   790   00166A  6FA7               	movwf	main@motorL& (0+255),b
   791                           
   792                           ;main.c: 44:     motorL.direction=1;
   793   00166C  0E01               	movlw	1
   794   00166E  6FA8               	movwf	(main@motorL+1)& (0+255),b
   795                           
   796                           ;main.c: 45:     motorL.brakemode=1;
   797   001670  0E01               	movlw	1
   798   001672  6FA9               	movwf	(main@motorL+2)& (0+255),b
   799   001674                     
   800                           ; BSR set to: 1
   801                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   802   001674  0EAA               	movlw	170
   803   001676  6FAC               	movwf	(main@motorL+5)& (0+255),b
   804   001678  0E0F               	movlw	15
   805   00167A  6FAD               	movwf	(main@motorL+6)& (0+255),b
   806   00167C                     
   807                           ; BSR set to: 1
   808                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   809   00167C  0EA6               	movlw	166
   810   00167E  6FAE               	movwf	(main@motorL+7)& (0+255),b
   811   001680  0E0F               	movlw	15
   812   001682  6FAF               	movwf	(main@motorL+8)& (0+255),b
   813   001684                     
   814                           ; BSR set to: 1
   815                           ;main.c: 48:     motorL.PWMperiod=PWMcycle;
   816   001684  C1A6  F1AA         	movff	main@PWMcycle,main@motorL+3
   817   001688  6BAB               	clrf	(main@motorL+4)& (0+255),b
   818                           
   819                           ;main.c: 50:     motorR.power=0;
   820   00168A  0E00               	movlw	0
   821   00168C  6FB0               	movwf	main@motorR& (0+255),b
   822                           
   823                           ;main.c: 51:     motorR.direction=1;
   824   00168E  0E01               	movlw	1
   825   001690  6FB1               	movwf	(main@motorR+1)& (0+255),b
   826                           
   827                           ;main.c: 52:     motorR.brakemode=1;
   828   001692  0E01               	movlw	1
   829   001694  6FB2               	movwf	(main@motorR+2)& (0+255),b
   830   001696                     
   831                           ; BSR set to: 1
   832                           ;main.c: 53:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   833   001696  0E25               	movlw	37
   834   001698  6FB5               	movwf	(main@motorR+5)& (0+255),b
   835   00169A  0E0F               	movlw	15
   836   00169C  6FB6               	movwf	(main@motorR+6)& (0+255),b
   837   00169E                     
   838                           ; BSR set to: 1
   839                           ;main.c: 54:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   840   00169E  0E21               	movlw	33
   841   0016A0  6FB7               	movwf	(main@motorR+7)& (0+255),b
   842   0016A2  0E0F               	movlw	15
   843   0016A4  6FB8               	movwf	(main@motorR+8)& (0+255),b
   844   0016A6                     
   845                           ; BSR set to: 1
   846                           ;main.c: 55:     motorR.PWMperiod=PWMcycle;
   847   0016A6  C1A6  F1B3         	movff	main@PWMcycle,main@motorR+3
   848   0016AA  6BB4               	clrf	(main@motorR+4)& (0+255),b
   849   0016AC                     
   850                           ; BSR set to: 1
   851                           ;main.c: 57:     setMotorPWM(&motorL);
   852   0016AC  0EA7               	movlw	low main@motorL
   853   0016AE  6E12               	movwf	setMotorPWM@m^0,c
   854   0016B0  0E01               	movlw	high main@motorL
   855   0016B2  6E13               	movwf	(setMotorPWM@m+1)^0,c
   856   0016B4  EC0E  F009         	call	_setMotorPWM	;wreg free
   857   0016B8                     
   858                           ;main.c: 58:     setMotorPWM(&motorR);
   859   0016B8  0EB0               	movlw	low main@motorR
   860   0016BA  6E12               	movwf	setMotorPWM@m^0,c
   861   0016BC  0E01               	movlw	high main@motorR
   862   0016BE  6E13               	movwf	(setMotorPWM@m+1)^0,c
   863   0016C0  EC0E  F009         	call	_setMotorPWM	;wreg free
   864   0016C4                     
   865                           ;main.c: 64:     unsigned int expected_values[3][3] = {{13000, 2600, 1800},{8400, 6500, 
      +                          5000},{4400, 1800, 2800}};
   866   0016C4  EE21  F0B9         	lfsr	2,main@F14644
   867   0016C8  EE11  F078         	lfsr	1,main@expected_values
   868   0016CC  0E11               	movlw	17
   869   0016CE                     u1861:
   870   0016CE  CFDB FFE3          	movff	plusw2,plusw1
   871   0016D2  06E8               	decf	wreg,f,c
   872   0016D4  E2FC               	bc	u1861
   873   0016D6                     
   874                           ;main.c: 76:     unsigned int ReturnHomeArray[2][30] = {0};
   875   0016D6  EE21  F000         	lfsr	2,main@ReturnHomeArray
   876   0016DA  0E77               	movlw	119
   877   0016DC                     u1871:
   878   0016DC  6ADE               	clrf	postinc2,c
   879   0016DE  06E8               	decf	wreg,f,c
   880   0016E0  E2FD               	bc	u1871
   881   0016E2                     
   882                           ;main.c: 134:     LATHbits.LATH3=0;
   883   0016E2  9680               	bcf	128,3,c	;volatile
   884   0016E4                     
   885                           ;main.c: 135:     TRISHbits.TRISH3=0;
   886   0016E4  9688               	bcf	136,3,c	;volatile
   887   0016E6                     
   888                           ;main.c: 137:     char buf[20];;main.c: 139:     LATDbits.LATD7=0;
   889   0016E6  9E7C               	bcf	124,7,c	;volatile
   890   0016E8                     
   891                           ;main.c: 140:     TRISDbits.TRISD7=0;
   892   0016E8  9E84               	bcf	132,7,c	;volatile
   893   0016EA                     l3298:
   894                           
   895                           ;main.c: 169:         red_read = color_read_Red();
   896   0016EA  EC79  F00D         	call	_color_read_Red	;wreg free
   897   0016EE  C009  F19E         	movff	?_color_read_Red,main@red_read
   898   0016F2  C00A  F19F         	movff	?_color_read_Red+1,main@red_read+1
   899   0016F6                     
   900                           ;main.c: 170:         blue_read = color_read_Blue();
   901   0016F6  ECF1  F00D         	call	_color_read_Blue	;wreg free
   902   0016FA  C009  F1A2         	movff	?_color_read_Blue,main@blue_read
   903   0016FE  C00A  F1A3         	movff	?_color_read_Blue+1,main@blue_read+1
   904   001702                     
   905                           ;main.c: 171:         green_read = color_read_Green();
   906   001702  ECA1  F00D         	call	_color_read_Green	;wreg free
   907   001706  C009  F1A0         	movff	?_color_read_Green,main@green_read
   908   00170A  C00A  F1A1         	movff	?_color_read_Green+1,main@green_read+1
   909   00170E                     
   910                           ;main.c: 172:         clear_read = color_read_Clear();
   911   00170E  ECC9  F00D         	call	_color_read_Clear	;wreg free
   912   001712  C009  F1A4         	movff	?_color_read_Clear,main@clear_read
   913   001716  C00A  F1A5         	movff	?_color_read_Clear+1,main@clear_read+1
   914   00171A                     
   915                           ;main.c: 175:         sprintf(buf, "Raw %d, %d, %d, %d \n", red_read, green_read, blue_r
      +                          ead, clear_read);
   916   00171A  0E8A               	movlw	low main@buf
   917   00171C  0100               	movlb	0	; () banked
   918   00171E  6FE1               	movwf	sprintf@s& (0+255),b
   919   001720  0E01               	movlw	high main@buf
   920   001722  6FE2               	movwf	(sprintf@s+1)& (0+255),b
   921   001724  0E01               	movlw	low STR_1
   922   001726  6FE3               	movwf	sprintf@fmt& (0+255),b
   923   001728  0E0E               	movlw	high STR_1
   924   00172A  6FE4               	movwf	(sprintf@fmt+1)& (0+255),b
   925   00172C  C19E  F0E5         	movff	main@red_read,?_sprintf+4
   926   001730  C19F  F0E6         	movff	main@red_read+1,?_sprintf+5
   927   001734  C1A0  F0E7         	movff	main@green_read,?_sprintf+6
   928   001738  C1A1  F0E8         	movff	main@green_read+1,?_sprintf+7
   929   00173C  C1A2  F0E9         	movff	main@blue_read,?_sprintf+8
   930   001740  C1A3  F0EA         	movff	main@blue_read+1,?_sprintf+9
   931   001744  C1A4  F0EB         	movff	main@clear_read,?_sprintf+10
   932   001748  C1A5  F0EC         	movff	main@clear_read+1,?_sprintf+11
   933   00174C  EC50  F00D         	call	_sprintf	;wreg free
   934   001750                     
   935                           ;main.c: 176:         sendStringSerial4(buf);
   936   001750  0E8A               	movlw	low main@buf
   937   001752  6E06               	movwf	sendStringSerial4@string^0,c
   938   001754  0E01               	movlw	high main@buf
   939   001756  6E07               	movwf	(sendStringSerial4@string+1)^0,c
   940   001758  ECDA  F00E         	call	_sendStringSerial4	;wreg free
   941   00175C                     
   942                           ;main.c: 177:         _delay((unsigned long)((500)*(64000000/4000.0)));
   943   00175C  0E29               	movlw	41
   944   00175E  0100               	movlb	0	; () banked
   945   001760  6FFB               	movwf	(??_main+1)& (0+255),b
   946   001762  0E96               	movlw	150
   947   001764  6FFA               	movwf	??_main& (0+255),b
   948   001766  0E7F               	movlw	127
   949   001768                     u1917:
   950   001768  2EE8               	decfsz	wreg,f,c
   951   00176A  D7FE               	bra	u1917
   952   00176C  2FFA               	decfsz	??_main& (0+255),f,b
   953   00176E  D7FC               	bra	u1917
   954   001770  2FFB               	decfsz	(??_main+1)& (0+255),f,b
   955   001772  D7FA               	bra	u1917
   956   001774                     
   957                           ;main.c: 178:          LATHbits.LATH3=!LATHbits.LATH3;
   958   001774  A680               	btfss	128,3,c	;volatile
   959   001776  EFBF  F00B         	goto	u1881
   960   00177A  EFC4  F00B         	goto	u1880
   961   00177E                     u1881:
   962   00177E  0100               	movlb	0	; () banked
   963   001780  6BFA               	clrf	??_main& (0+255),b
   964   001782  2BFA               	incf	??_main& (0+255),f,b
   965   001784  EFC6  F00B         	goto	u1898
   966   001788                     u1880:
   967   001788  0100               	movlb	0	; () banked
   968   00178A  6BFA               	clrf	??_main& (0+255),b
   969   00178C                     u1898:
   970   00178C  47FA               	rlncf	??_main& (0+255),f,b
   971   00178E  47FA               	rlncf	??_main& (0+255),f,b
   972   001790  47FA               	rlncf	??_main& (0+255),f,b
   973   001792  5080               	movf	128,w,c	;volatile
   974   001794  19FA               	xorwf	??_main& (0+255),w,b
   975   001796  0BF7               	andlw	-9
   976   001798  19FA               	xorwf	??_main& (0+255),w,b
   977   00179A  6E80               	movwf	128,c	;volatile
   978   00179C  EF75  F00B         	goto	l3298
   979   0017A0  EF3B  F000         	goto	start
   980   0017A4                     __end_of_main:
   981                           	callstack 0
   982                           
   983 ;; *************** function _sprintf *****************
   984 ;; Defined at:
   985 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  s               2    6[BANK0 ] PTR unsigned char 
   988 ;;		 -> main@buf(20), 
   989 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   990 ;;		 -> STR_1(21), 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  f              11   20[BANK0 ] struct _IO_FILE
   993 ;;  ap              2   18[BANK0 ] PTR void [1]
   994 ;;		 -> ?_sprintf(2), 
   995 ;;  ret             2    0        int 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  2    6[BANK0 ] int 
   998 ;; Registers used:
   999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1005 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1006 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;Total ram usage:       25 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; Hardware stack levels required when called: 11
  1012 ;; This function calls:
  1013 ;;		_vfprintf
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text1
  1020   001AA0                     __ptext1:
  1021                           	callstack 0
  1022   001AA0                     _sprintf:
  1023                           	callstack 19
  1024   001AA0  0EE5               	movlw	low (?_sprintf+4)
  1025   001AA2  0100               	movlb	0	; () banked
  1026   001AA4  6FED               	movwf	sprintf@ap& (0+255),b
  1027   001AA6  0E00               	movlw	high (?_sprintf+4)
  1028   001AA8  6FEE               	movwf	(sprintf@ap+1)& (0+255),b
  1029   001AAA  C0E1  F0EF         	movff	sprintf@s,sprintf@f
  1030   001AAE  C0E2  F0F0         	movff	sprintf@s+1,sprintf@f+1
  1031   001AB2                     
  1032                           ; BSR set to: 0
  1033   001AB2  0E00               	movlw	0
  1034   001AB4  6FF3               	movwf	(sprintf@f+4)& (0+255),b
  1035   001AB6  0E00               	movlw	0
  1036   001AB8  6FF2               	movwf	(sprintf@f+3)& (0+255),b
  1037   001ABA                     
  1038                           ; BSR set to: 0
  1039   001ABA  0E00               	movlw	0
  1040   001ABC  6FF9               	movwf	(sprintf@f+10)& (0+255),b
  1041   001ABE  0E00               	movlw	0
  1042   001AC0  6FF8               	movwf	(sprintf@f+9)& (0+255),b
  1043   001AC2                     
  1044                           ; BSR set to: 0
  1045   001AC2  0EEF               	movlw	low sprintf@f
  1046   001AC4  6FDB               	movwf	vfprintf@fp& (0+255),b
  1047   001AC6  0E00               	movlw	high sprintf@f
  1048   001AC8  6FDC               	movwf	(vfprintf@fp+1)& (0+255),b
  1049   001ACA  C0E3  F0DD         	movff	sprintf@fmt,vfprintf@fmt
  1050   001ACE  C0E4  F0DE         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1051   001AD2  0EED               	movlw	low sprintf@ap
  1052   001AD4  6FDF               	movwf	vfprintf@ap& (0+255),b
  1053   001AD6  0E00               	movlw	high sprintf@ap
  1054   001AD8  6FE0               	movwf	(vfprintf@ap+1)& (0+255),b
  1055   001ADA  EC26  F00D         	call	_vfprintf	;wreg free
  1056   001ADE  0100               	movlb	0	; () banked
  1057   001AE0  51F2               	movf	(sprintf@f+3)& (0+255),w,b
  1058   001AE2  25E1               	addwf	sprintf@s& (0+255),w,b
  1059   001AE4  6ED9               	movwf	fsr2l,c
  1060   001AE6  51F3               	movf	(sprintf@f+4)& (0+255),w,b
  1061   001AE8  21E2               	addwfc	(sprintf@s+1)& (0+255),w,b
  1062   001AEA  6EDA               	movwf	fsr2h,c
  1063   001AEC  0E00               	movlw	0
  1064   001AEE  6EDF               	movwf	indf2,c
  1065   001AF0                     
  1066                           ; BSR set to: 0
  1067   001AF0  0012               	return		;funcret
  1068   001AF2                     __end_of_sprintf:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _vfprintf *****************
  1072 ;; Defined at:
  1073 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1076 ;;		 -> sprintf@f(11), 
  1077 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1078 ;;		 -> STR_1(21), 
  1079 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1080 ;;		 -> sprintf@ap(2), 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  1083 ;;		 -> STR_1(21), 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  2    0[BANK0 ] int 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1093 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1096 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;Total ram usage:        8 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 10
  1100 ;; This function calls:
  1101 ;;		_vfpfcnvrt
  1102 ;; This function is called by:
  1103 ;;		_sprintf
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text2
  1108   001A4C                     __ptext2:
  1109                           	callstack 0
  1110   001A4C                     _vfprintf:
  1111                           	callstack 19
  1112   001A4C                     
  1113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1114   001A4C  C0DD  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  1115   001A50  C0DE  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1116                           
  1117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1118   001A54  EF3A  F00D         	goto	l3226
  1119   001A58                     l3224:
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1122   001A58  C0DB  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1123   001A5C  C0DC  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1124   001A60  0E55               	movlw	low vfprintf@cfmt
  1125   001A62  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1126   001A64  0E00               	movlw	high vfprintf@cfmt
  1127   001A66  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1128   001A68  C0DF  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1129   001A6C  C0E0  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1130   001A70  EC76  F00A         	call	_vfpfcnvrt	;wreg free
  1131   001A74                     l3226:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1134   001A74  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  1135   001A78  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1136   001A7C                     	if	0	;tblptru may be non-zero
  1137   001A7C                     	endif
  1138   001A7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1139   001A7C  0E00               	movlw	low (__mediumconst shr (0+16))
  1140   001A7E  6EF8               	movwf	tblptru,c
  1141   001A80                     	endif
  1142   001A80  0008               	tblrd		*
  1143   001A82  50F5               	movf	tablat,w,c
  1144   001A84  0900               	iorlw	0
  1145   001A86  A4D8               	btfss	status,2,c
  1146   001A88  EF48  F00D         	goto	u1851
  1147   001A8C  EF4A  F00D         	goto	u1850
  1148   001A90                     u1851:
  1149   001A90  EF2C  F00D         	goto	l3224
  1150   001A94                     u1850:
  1151   001A94                     
  1152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1153   001A94  0E00               	movlw	0
  1154   001A96  0100               	movlb	0	; () banked
  1155   001A98  6FDC               	movwf	(?_vfprintf+1)& (0+255),b
  1156   001A9A  0E00               	movlw	0
  1157   001A9C  6FDB               	movwf	?_vfprintf& (0+255),b
  1158   001A9E                     
  1159                           ; BSR set to: 0
  1160   001A9E  0012               	return		;funcret
  1161   001AA0                     __end_of_vfprintf:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _vfpfcnvrt *****************
  1165 ;; Defined at:
  1166 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1169 ;;		 -> sprintf@f(11), 
  1170 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1171 ;;		 -> vfprintf@cfmt(2), 
  1172 ;;  ap              2   70[COMRAM] PTR PTR void 
  1173 ;;		 -> sprintf@ap(2), 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  convarg         8   74[COMRAM] struct .
  1176 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1177 ;;		 -> STR_1(21), 
  1178 ;;  i               2    0        int 
  1179 ;;  done            2    0        int 
  1180 ;;  c               1    0        unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1190 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;Total ram usage:       18 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 9
  1197 ;; This function calls:
  1198 ;;		_dtoa
  1199 ;;		_fputc
  1200 ;; This function is called by:
  1201 ;;		_vfprintf
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text3
  1206   0014EC                     __ptext3:
  1207                           	callstack 0
  1208   0014EC                     _vfpfcnvrt:
  1209                           	callstack 19
  1210   0014EC                     
  1211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1212   0014EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1213   0014F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1214   0014F4  CFDE FFF6          	movff	postinc2,tblptrl
  1215   0014F8  CFDD FFF7          	movff	postdec2,tblptrh
  1216   0014FC                     	if	0	;tblptru may be non-zero
  1217   0014FC                     	endif
  1218   0014FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1219   0014FC  0E00               	movlw	low (__mediumconst shr (0+16))
  1220   0014FE  6EF8               	movwf	tblptru,c
  1221   001500                     	endif
  1222   001500  0008               	tblrd		*
  1223   001502  50F5               	movf	tablat,w,c
  1224   001504  0A25               	xorlw	37
  1225   001506  A4D8               	btfss	status,2,c
  1226   001508  EF88  F00A         	goto	u1821
  1227   00150C  EF8A  F00A         	goto	u1820
  1228   001510                     u1821:
  1229   001510  EF0E  F00B         	goto	l3216
  1230   001514                     u1820:
  1231   001514                     
  1232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1233   001514  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1234   001518  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1235   00151C  2ADE               	incf	postinc2,f,c
  1236   00151E  0E00               	movlw	0
  1237   001520  22DD               	addwfc	postdec2,f,c
  1238   001522                     
  1239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1240   001522  0E00               	movlw	0
  1241   001524  0100               	movlb	0	; () banked
  1242   001526  6FB1               	movwf	(_width+1)& (0+255),b
  1243   001528  0E00               	movlw	0
  1244   00152A  6FB0               	movwf	_width& (0+255),b
  1245   00152C  C0B0  F0BA         	movff	_width,_flags
  1246   001530                     
  1247                           ; BSR set to: 0
  1248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1249   001530  69B2               	setf	_prec& (0+255),b
  1250   001532  69B3               	setf	(_prec+1)& (0+255),b
  1251   001534                     
  1252                           ; BSR set to: 0
  1253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1254   001534  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1255   001538  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1256   00153C  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1257   001540  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1258   001544                     
  1259                           ; BSR set to: 0
  1260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1261   001544  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1262   001548  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1263   00154C                     	if	0	;tblptru may be non-zero
  1264   00154C                     	endif
  1265   00154C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1266   00154C  0E00               	movlw	low (__mediumconst shr (0+16))
  1267   00154E  6EF8               	movwf	tblptru,c
  1268   001550                     	endif
  1269   001550  0008               	tblrd		*
  1270   001552  50F5               	movf	tablat,w,c
  1271   001554  0A64               	xorlw	100
  1272   001556  B4D8               	btfsc	status,2,c
  1273   001558  EFB0  F00A         	goto	u1831
  1274   00155C  EFB2  F00A         	goto	u1830
  1275   001560                     u1831:
  1276   001560  EFC2  F00A         	goto	l3206
  1277   001564                     u1830:
  1278   001564                     
  1279                           ; BSR set to: 0
  1280   001564  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1281   001568  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1282   00156C                     	if	0	;tblptru may be non-zero
  1283   00156C                     	endif
  1284   00156C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1285   00156C  0E00               	movlw	low (__mediumconst shr (0+16))
  1286   00156E  6EF8               	movwf	tblptru,c
  1287   001570                     	endif
  1288   001570  0008               	tblrd		*
  1289   001572  50F5               	movf	tablat,w,c
  1290   001574  0A69               	xorlw	105
  1291   001576  A4D8               	btfss	status,2,c
  1292   001578  EFC0  F00A         	goto	u1841
  1293   00157C  EFC2  F00A         	goto	u1840
  1294   001580                     u1841:
  1295   001580  EF05  F00B         	goto	l3212
  1296   001584                     u1840:
  1297   001584                     l3206:
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1301   001584  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1302   001588  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1303   00158C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1304   001590  0E02               	movlw	2
  1305   001592  26DE               	addwf	postinc2,f,c
  1306   001594  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1307   001598  0E00               	movlw	0
  1308   00159A  22DD               	addwfc	postdec2,f,c
  1309   00159C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1310   0015A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1311   0015A4  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1312   0015A8  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1313   0015AC  0E00               	movlw	0
  1314   0015AE  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1315   0015B0  0EFF               	movlw	-1
  1316   0015B2  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1317   0015B4  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1318   0015B6  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1319   0015B8  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1320   0015BA  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1321   0015BC  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1322                           
  1323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1324   0015BE  0E01               	movlw	1
  1325   0015C0  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1326   0015C2  6E49               	movwf	??_vfpfcnvrt^0,c
  1327   0015C4  0E00               	movlw	0
  1328   0015C6  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1329   0015C8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1330   0015CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1331   0015CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1332   0015D2  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1333   0015D6  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1334   0015DA                     
  1335                           ; BSR set to: 0
  1336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1337   0015DA  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1338   0015DE  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1339   0015E2  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1340   0015E6  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1341   0015EA  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1342   0015EE  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1343   0015F2  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1344   0015F6  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1345   0015FA  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1346   0015FE  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1347   001602  EC0C  F007         	call	_dtoa	;wreg free
  1348   001606  EF24  F00B         	goto	l1221
  1349   00160A                     l3212:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1352   00160A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1353   00160E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1354   001612  2ADE               	incf	postinc2,f,c
  1355   001614  0E00               	movlw	0
  1356   001616  22DD               	addwfc	postdec2,f,c
  1357   001618  EF24  F00B         	goto	l1221
  1358   00161C                     l3216:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1361   00161C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1362   001620  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1363   001624  CFDE FFF6          	movff	postinc2,tblptrl
  1364   001628  CFDD FFF7          	movff	postdec2,tblptrh
  1365   00162C                     	if	0	;tblptru may be non-zero
  1366   00162C                     	endif
  1367   00162C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1368   00162C  0E00               	movlw	low (__mediumconst shr (0+16))
  1369   00162E  6EF8               	movwf	tblptru,c
  1370   001630                     	endif
  1371   001630  0008               	tblrd		*
  1372   001632  50F5               	movf	tablat,w,c
  1373   001634  6E05               	movwf	fputc@c^0,c
  1374   001636  6A06               	clrf	(fputc@c+1)^0,c
  1375   001638  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1376   00163C  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1377   001640  ECD2  F00B         	call	_fputc	;wreg free
  1378   001644  EF05  F00B         	goto	l3212
  1379   001648                     l1221:
  1380   001648  0012               	return		;funcret
  1381   00164A                     __end_of_vfpfcnvrt:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _dtoa *****************
  1385 ;; Defined at:
  1386 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1389 ;;		 -> sprintf@f(11), 
  1390 ;;  d               8   33[COMRAM] long long 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  n               8   55[COMRAM] long long 
  1393 ;;  i               2   64[COMRAM] int 
  1394 ;;  w               2   53[COMRAM] int 
  1395 ;;  p               2   51[COMRAM] int 
  1396 ;;  s               1   63[COMRAM] unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1406 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1408 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1409 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1410 ;;Total ram usage:       35 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 8
  1413 ;; This function calls:
  1414 ;;		___aodiv
  1415 ;;		___aomod
  1416 ;;		_abs
  1417 ;;		_pad
  1418 ;; This function is called by:
  1419 ;;		_vfpfcnvrt
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text4
  1424   000E18                     __ptext4:
  1425                           	callstack 0
  1426   000E18                     _dtoa:
  1427                           	callstack 19
  1428   000E18                     
  1429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1430   000E18  C022  F038         	movff	dtoa@d,dtoa@n
  1431   000E1C  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1432   000E20  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1433   000E24  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1434   000E28  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1435   000E2C  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1436   000E30  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1437   000E34  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1438   000E38                     
  1439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1440   000E38  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1441   000E3A  EF21  F007         	goto	u1721
  1442   000E3E  EF24  F007         	goto	u1720
  1443   000E42                     u1721:
  1444   000E42  0E01               	movlw	1
  1445   000E44  EF25  F007         	goto	u1730
  1446   000E48                     u1720:
  1447   000E48  0E00               	movlw	0
  1448   000E4A                     u1730:
  1449   000E4A  6E40               	movwf	dtoa@s^0,c
  1450   000E4C                     
  1451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1452   000E4C  5040               	movf	dtoa@s^0,w,c
  1453   000E4E  B4D8               	btfsc	status,2,c
  1454   000E50  EF2C  F007         	goto	u1741
  1455   000E54  EF2E  F007         	goto	u1740
  1456   000E58                     u1741:
  1457   000E58  EF3E  F007         	goto	l3148
  1458   000E5C                     u1740:
  1459   000E5C                     
  1460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1461   000E5C  1E3F               	comf	(dtoa@n+7)^0,f,c
  1462   000E5E  1E3E               	comf	(dtoa@n+6)^0,f,c
  1463   000E60  1E3D               	comf	(dtoa@n+5)^0,f,c
  1464   000E62  1E3C               	comf	(dtoa@n+4)^0,f,c
  1465   000E64  1E3B               	comf	(dtoa@n+3)^0,f,c
  1466   000E66  1E3A               	comf	(dtoa@n+2)^0,f,c
  1467   000E68  1E39               	comf	(dtoa@n+1)^0,f,c
  1468   000E6A  6C38               	negf	dtoa@n^0,c
  1469   000E6C  0E00               	movlw	0
  1470   000E6E  2239               	addwfc	(dtoa@n+1)^0,f,c
  1471   000E70  223A               	addwfc	(dtoa@n+2)^0,f,c
  1472   000E72  223B               	addwfc	(dtoa@n+3)^0,f,c
  1473   000E74  223C               	addwfc	(dtoa@n+4)^0,f,c
  1474   000E76  223D               	addwfc	(dtoa@n+5)^0,f,c
  1475   000E78  223E               	addwfc	(dtoa@n+6)^0,f,c
  1476   000E7A  223F               	addwfc	(dtoa@n+7)^0,f,c
  1477   000E7C                     l3148:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1480   000E7C  0100               	movlb	0	; () banked
  1481   000E7E  BFB3               	btfsc	(_prec+1)& (0+255),7,b
  1482   000E80  EF4C  F007         	goto	u1750
  1483   000E84  51B3               	movf	(_prec+1)& (0+255),w,b
  1484   000E86  E106               	bnz	u1751
  1485   000E88  05B2               	decf	_prec& (0+255),w,b
  1486   000E8A  B0D8               	btfsc	status,0,c
  1487   000E8C  EF4A  F007         	goto	u1751
  1488   000E90  EF4C  F007         	goto	u1750
  1489   000E94                     u1751:
  1490   000E94  EF52  F007         	goto	l1200
  1491   000E98                     u1750:
  1492   000E98                     
  1493                           ; BSR set to: 0
  1494   000E98  0E00               	movlw	0
  1495   000E9A  6E35               	movwf	(dtoa@p+1)^0,c
  1496   000E9C  0E01               	movlw	1
  1497   000E9E  6E34               	movwf	dtoa@p^0,c
  1498   000EA0  EF56  F007         	goto	l1202
  1499   000EA4                     l1200:
  1500                           
  1501                           ; BSR set to: 0
  1502   000EA4  C0B2  F034         	movff	_prec,dtoa@p
  1503   000EA8  C0B3  F035         	movff	_prec+1,dtoa@p+1
  1504   000EAC                     l1202:
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1508   000EAC  C0B0  F036         	movff	_width,dtoa@w
  1509   000EB0  C0B1  F037         	movff	_width+1,dtoa@w+1
  1510   000EB4                     
  1511                           ; BSR set to: 0
  1512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1513   000EB4  5040               	movf	dtoa@s^0,w,c
  1514   000EB6  B4D8               	btfsc	status,2,c
  1515   000EB8  EF60  F007         	goto	u1761
  1516   000EBC  EF62  F007         	goto	u1760
  1517   000EC0                     u1761:
  1518   000EC0  EF79  F007         	goto	l1203
  1519   000EC4                     u1760:
  1520   000EC4                     
  1521                           ; BSR set to: 0
  1522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1523   000EC4  0636               	decf	dtoa@w^0,f,c
  1524   000EC6  A0D8               	btfss	status,0,c
  1525   000EC8  0637               	decf	(dtoa@w+1)^0,f,c
  1526   000ECA                     
  1527                           ; BSR set to: 0
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1529   000ECA  5040               	movf	dtoa@s^0,w,c
  1530   000ECC  A4D8               	btfss	status,2,c
  1531   000ECE  EF6B  F007         	goto	u1771
  1532   000ED2  EF6D  F007         	goto	u1770
  1533   000ED6                     u1771:
  1534   000ED6  EF73  F007         	goto	l3160
  1535   000EDA                     u1770:
  1536   000EDA                     
  1537                           ; BSR set to: 0
  1538   000EDA  0E00               	movlw	0
  1539   000EDC  6E33               	movwf	(_dtoa$2445+1)^0,c
  1540   000EDE  0E2B               	movlw	43
  1541   000EE0  6E32               	movwf	_dtoa$2445^0,c
  1542   000EE2  EF77  F007         	goto	l3162
  1543   000EE6                     l3160:
  1544                           
  1545                           ; BSR set to: 0
  1546   000EE6  0E00               	movlw	0
  1547   000EE8  6E33               	movwf	(_dtoa$2445+1)^0,c
  1548   000EEA  0E2D               	movlw	45
  1549   000EEC  6E32               	movwf	_dtoa$2445^0,c
  1550   000EEE                     l3162:
  1551                           
  1552                           ; BSR set to: 0
  1553   000EEE  C032  F040         	movff	_dtoa$2445,dtoa@s
  1554   000EF2                     l1203:
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1558   000EF2  0E00               	movlw	0
  1559   000EF4  6E42               	movwf	(dtoa@i+1)^0,c
  1560   000EF6  0E1F               	movlw	31
  1561   000EF8  6E41               	movwf	dtoa@i^0,c
  1562   000EFA                     
  1563                           ; BSR set to: 0
  1564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1565   000EFA  0E00               	movlw	0
  1566   000EFC  6FDA               	movwf	(_dbuf+31)& (0+255),b
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1569   000EFE  EFFD  F007         	goto	l3176
  1570   000F02                     l3166:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1573   000F02  0641               	decf	dtoa@i^0,f,c
  1574   000F04  A0D8               	btfss	status,0,c
  1575   000F06  0642               	decf	(dtoa@i+1)^0,f,c
  1576   000F08                     
  1577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1578   000F08  0EBB               	movlw	low _dbuf
  1579   000F0A  2441               	addwf	dtoa@i^0,w,c
  1580   000F0C  6ED9               	movwf	fsr2l,c
  1581   000F0E  0E00               	movlw	high _dbuf
  1582   000F10  2042               	addwfc	(dtoa@i+1)^0,w,c
  1583   000F12  6EDA               	movwf	fsr2h,c
  1584   000F14  C038  F005         	movff	dtoa@n,___aomod@dividend
  1585   000F18  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1586   000F1C  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1587   000F20  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1588   000F24  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1589   000F28  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1590   000F2C  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1591   000F30  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1592   000F34  0E0A               	movlw	10
  1593   000F36  6E0D               	movwf	___aomod@divisor^0,c
  1594   000F38  0E00               	movlw	0
  1595   000F3A  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1596   000F3C  0E00               	movlw	0
  1597   000F3E  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1598   000F40  0E00               	movlw	0
  1599   000F42  6E10               	movwf	(___aomod@divisor+3)^0,c
  1600   000F44  0E00               	movlw	0
  1601   000F46  6E11               	movwf	(___aomod@divisor+4)^0,c
  1602   000F48  0E00               	movlw	0
  1603   000F4A  6E12               	movwf	(___aomod@divisor+5)^0,c
  1604   000F4C  0E00               	movlw	0
  1605   000F4E  6E13               	movwf	(___aomod@divisor+6)^0,c
  1606   000F50  0E00               	movlw	0
  1607   000F52  6E14               	movwf	(___aomod@divisor+7)^0,c
  1608   000F54  ECC4  F009         	call	___aomod	;wreg free
  1609   000F58  C005  F02A         	movff	?___aomod,??_dtoa
  1610   000F5C  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1611   000F60  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1612   000F64  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1613   000F68  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1614   000F6C  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1615   000F70  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1616   000F74  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1617   000F78  C02A  F017         	movff	??_dtoa,abs@a
  1618   000F7C  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1619   000F80  EC81  F00E         	call	_abs	;wreg free
  1620   000F84  5017               	movf	?_abs^0,w,c
  1621   000F86  0F30               	addlw	48
  1622   000F88  6EDF               	movwf	indf2,c
  1623   000F8A                     
  1624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1625   000F8A  0634               	decf	dtoa@p^0,f,c
  1626   000F8C  A0D8               	btfss	status,0,c
  1627   000F8E  0635               	decf	(dtoa@p+1)^0,f,c
  1628   000F90                     
  1629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1630   000F90  0636               	decf	dtoa@w^0,f,c
  1631   000F92  A0D8               	btfss	status,0,c
  1632   000F94  0637               	decf	(dtoa@w+1)^0,f,c
  1633   000F96                     
  1634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1635   000F96  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1636   000F9A  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1637   000F9E  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1638   000FA2  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1639   000FA6  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1640   000FAA  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1641   000FAE  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1642   000FB2  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1643   000FB6  0E0A               	movlw	10
  1644   000FB8  6E0D               	movwf	___aodiv@divisor^0,c
  1645   000FBA  0E00               	movlw	0
  1646   000FBC  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1647   000FBE  0E00               	movlw	0
  1648   000FC0  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1649   000FC2  0E00               	movlw	0
  1650   000FC4  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1651   000FC6  0E00               	movlw	0
  1652   000FC8  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1653   000FCA  0E00               	movlw	0
  1654   000FCC  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1655   000FCE  0E00               	movlw	0
  1656   000FD0  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1657   000FD2  0E00               	movlw	0
  1658   000FD4  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1659   000FD6  EC4A  F008         	call	___aodiv	;wreg free
  1660   000FDA  C005  F038         	movff	?___aodiv,dtoa@n
  1661   000FDE  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1662   000FE2  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1663   000FE6  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1664   000FEA  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1665   000FEE  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1666   000FF2  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1667   000FF6  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1668   000FFA                     l3176:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1671   000FFA  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1672   000FFC  EF08  F008         	goto	u1781
  1673   001000  5042               	movf	(dtoa@i+1)^0,w,c
  1674   001002  E108               	bnz	u1780
  1675   001004  0441               	decf	dtoa@i^0,w,c
  1676   001006  A0D8               	btfss	status,0,c
  1677   001008  EF08  F008         	goto	u1781
  1678   00100C  EF0A  F008         	goto	u1780
  1679   001010                     u1781:
  1680   001010  EF26  F008         	goto	l3182
  1681   001014                     u1780:
  1682   001014  5038               	movf	dtoa@n^0,w,c
  1683   001016  1039               	iorwf	(dtoa@n+1)^0,w,c
  1684   001018  103A               	iorwf	(dtoa@n+2)^0,w,c
  1685   00101A  103B               	iorwf	(dtoa@n+3)^0,w,c
  1686   00101C  103C               	iorwf	(dtoa@n+4)^0,w,c
  1687   00101E  103D               	iorwf	(dtoa@n+5)^0,w,c
  1688   001020  103E               	iorwf	(dtoa@n+6)^0,w,c
  1689   001022  103F               	iorwf	(dtoa@n+7)^0,w,c
  1690   001024  A4D8               	btfss	status,2,c
  1691   001026  EF17  F008         	goto	u1791
  1692   00102A  EF19  F008         	goto	u1790
  1693   00102E                     u1791:
  1694   00102E  EF81  F007         	goto	l3166
  1695   001032                     u1790:
  1696   001032  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1697   001034  EF26  F008         	goto	u1800
  1698   001038  5035               	movf	(dtoa@p+1)^0,w,c
  1699   00103A  E106               	bnz	u1801
  1700   00103C  0434               	decf	dtoa@p^0,w,c
  1701   00103E  B0D8               	btfsc	status,0,c
  1702   001040  EF24  F008         	goto	u1801
  1703   001044  EF26  F008         	goto	u1800
  1704   001048                     u1801:
  1705   001048  EF81  F007         	goto	l3166
  1706   00104C                     u1800:
  1707   00104C                     l3182:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1710   00104C  5040               	movf	dtoa@s^0,w,c
  1711   00104E  B4D8               	btfsc	status,2,c
  1712   001050  EF2C  F008         	goto	u1811
  1713   001054  EF2E  F008         	goto	u1810
  1714   001058                     u1811:
  1715   001058  EF39  F008         	goto	l3188
  1716   00105C                     u1810:
  1717   00105C                     
  1718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1719   00105C  0641               	decf	dtoa@i^0,f,c
  1720   00105E  A0D8               	btfss	status,0,c
  1721   001060  0642               	decf	(dtoa@i+1)^0,f,c
  1722   001062                     
  1723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1724   001062  0EBB               	movlw	low _dbuf
  1725   001064  2441               	addwf	dtoa@i^0,w,c
  1726   001066  6ED9               	movwf	fsr2l,c
  1727   001068  0E00               	movlw	high _dbuf
  1728   00106A  2042               	addwfc	(dtoa@i+1)^0,w,c
  1729   00106C  6EDA               	movwf	fsr2h,c
  1730   00106E  C040  FFDF         	movff	dtoa@s,indf2
  1731   001072                     l3188:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1734   001072  C020  F015         	movff	dtoa@fp,pad@fp
  1735   001076  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1736   00107A  0EBB               	movlw	low _dbuf
  1737   00107C  2441               	addwf	dtoa@i^0,w,c
  1738   00107E  6E17               	movwf	pad@buf^0,c
  1739   001080  0E00               	movlw	high _dbuf
  1740   001082  2042               	addwfc	(dtoa@i+1)^0,w,c
  1741   001084  6E18               	movwf	(pad@buf+1)^0,c
  1742   001086  C036  F019         	movff	dtoa@w,pad@p
  1743   00108A  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1744   00108E  EC7B  F00C         	call	_pad	;wreg free
  1745   001092  0012               	return		;funcret
  1746   001094                     __end_of_dtoa:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _pad *****************
  1750 ;; Defined at:
  1751 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1754 ;;		 -> sprintf@f(11), 
  1755 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1756 ;;		 -> dbuf(32), 
  1757 ;;  p               2   24[COMRAM] int 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  w               2   29[COMRAM] int 
  1760 ;;  i               2   27[COMRAM] int 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1770 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;Total ram usage:       11 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 7
  1777 ;; This function calls:
  1778 ;;		_fputc
  1779 ;;		_fputs
  1780 ;; This function is called by:
  1781 ;;		_dtoa
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text5
  1786   0018F6                     __ptext5:
  1787                           	callstack 0
  1788   0018F6                     _pad:
  1789                           	callstack 19
  1790   0018F6                     
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1792   0018F6  BE1A               	btfsc	(pad@p+1)^0,7,c
  1793   0018F8  EF80  F00C         	goto	u1701
  1794   0018FC  EF82  F00C         	goto	u1700
  1795   001900                     u1701:
  1796   001900  EF88  F00C         	goto	l3130
  1797   001904                     u1700:
  1798   001904  C019  F01E         	movff	pad@p,pad@w
  1799   001908  C01A  F01F         	movff	pad@p+1,pad@w+1
  1800   00190C  EF8C  F00C         	goto	l1191
  1801   001910                     l3130:
  1802   001910  0E00               	movlw	0
  1803   001912  6E1F               	movwf	(pad@w+1)^0,c
  1804   001914  0E00               	movlw	0
  1805   001916  6E1E               	movwf	pad@w^0,c
  1806   001918                     l1191:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1809   001918  0E00               	movlw	0
  1810   00191A  6E1D               	movwf	(pad@i+1)^0,c
  1811   00191C  0E00               	movlw	0
  1812   00191E  6E1C               	movwf	pad@i^0,c
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1815   001920  EF9E  F00C         	goto	l3136
  1816   001924                     l3132:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1819   001924  0E00               	movlw	0
  1820   001926  6E06               	movwf	(fputc@c+1)^0,c
  1821   001928  0E20               	movlw	32
  1822   00192A  6E05               	movwf	fputc@c^0,c
  1823   00192C  C015  F007         	movff	pad@fp,fputc@fp
  1824   001930  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1825   001934  ECD2  F00B         	call	_fputc	;wreg free
  1826   001938                     
  1827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1828   001938  4A1C               	infsnz	pad@i^0,f,c
  1829   00193A  2A1D               	incf	(pad@i+1)^0,f,c
  1830   00193C                     l3136:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1833   00193C  501E               	movf	pad@w^0,w,c
  1834   00193E  5C1C               	subwf	pad@i^0,w,c
  1835   001940  501D               	movf	(pad@i+1)^0,w,c
  1836   001942  0A80               	xorlw	128
  1837   001944  6E1B               	movwf	??_pad^0,c
  1838   001946  501F               	movf	(pad@w+1)^0,w,c
  1839   001948  0A80               	xorlw	128
  1840   00194A  581B               	subwfb	??_pad^0,w,c
  1841   00194C  A0D8               	btfss	status,0,c
  1842   00194E  EFAB  F00C         	goto	u1711
  1843   001952  EFAD  F00C         	goto	u1710
  1844   001956                     u1711:
  1845   001956  EF92  F00C         	goto	l3132
  1846   00195A                     u1710:
  1847   00195A                     
  1848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1849   00195A  C017  F00E         	movff	pad@buf,fputs@s
  1850   00195E  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1851   001962  C015  F010         	movff	pad@fp,fputs@fp
  1852   001966  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1853   00196A  EC3E  F00E         	call	_fputs	;wreg free
  1854   00196E  0012               	return		;funcret
  1855   001970                     __end_of_pad:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _fputs *****************
  1859 ;; Defined at:
  1860 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1863 ;;		 -> dbuf(32), 
  1864 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1865 ;;		 -> sprintf@f(11), 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  i               2   18[COMRAM] int 
  1868 ;;  c               1   17[COMRAM] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  2   13[COMRAM] int 
  1871 ;; Registers used:
  1872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1882 ;;Total ram usage:        7 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 6
  1885 ;; This function calls:
  1886 ;;		_fputc
  1887 ;; This function is called by:
  1888 ;;		_pad
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text6
  1893   001C7C                     __ptext6:
  1894                           	callstack 0
  1895   001C7C                     _fputs:
  1896                           	callstack 19
  1897   001C7C  0E00               	movlw	0
  1898   001C7E  6E14               	movwf	(fputs@i+1)^0,c
  1899   001C80  0E00               	movlw	0
  1900   001C82  6E13               	movwf	fputs@i^0,c
  1901   001C84  EF4F  F00E         	goto	l3040
  1902   001C88                     l3036:
  1903   001C88  C012  F005         	movff	fputs@c,fputc@c
  1904   001C8C  6A06               	clrf	(fputc@c+1)^0,c
  1905   001C8E  C010  F007         	movff	fputs@fp,fputc@fp
  1906   001C92  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1907   001C96  ECD2  F00B         	call	_fputc	;wreg free
  1908   001C9A  4A13               	infsnz	fputs@i^0,f,c
  1909   001C9C  2A14               	incf	(fputs@i+1)^0,f,c
  1910   001C9E                     l3040:
  1911   001C9E  5013               	movf	fputs@i^0,w,c
  1912   001CA0  240E               	addwf	fputs@s^0,w,c
  1913   001CA2  6ED9               	movwf	fsr2l,c
  1914   001CA4  5014               	movf	(fputs@i+1)^0,w,c
  1915   001CA6  200F               	addwfc	(fputs@s+1)^0,w,c
  1916   001CA8  6EDA               	movwf	fsr2h,c
  1917   001CAA  50DF               	movf	indf2,w,c
  1918   001CAC  6E12               	movwf	fputs@c^0,c
  1919   001CAE  5012               	movf	fputs@c^0,w,c
  1920   001CB0  A4D8               	btfss	status,2,c
  1921   001CB2  EF5D  F00E         	goto	u1551
  1922   001CB6  EF5F  F00E         	goto	u1550
  1923   001CBA                     u1551:
  1924   001CBA  EF44  F00E         	goto	l3036
  1925   001CBE                     u1550:
  1926   001CBE  0012               	return		;funcret
  1927   001CC0                     __end_of_fputs:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _fputc *****************
  1931 ;; Defined at:
  1932 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  c               2    4[COMRAM] int 
  1935 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1936 ;;		 -> sprintf@f(11), 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  2    4[COMRAM] int 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1951 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1952 ;;Total ram usage:        9 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 5
  1955 ;; This function calls:
  1956 ;;		_putch
  1957 ;; This function is called by:
  1958 ;;		_pad
  1959 ;;		_vfpfcnvrt
  1960 ;;		_fputs
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text7
  1965   0017A4                     __ptext7:
  1966                           	callstack 0
  1967   0017A4                     _fputc:
  1968                           	callstack 22
  1969   0017A4  5007               	movf	fputc@fp^0,w,c
  1970   0017A6  1008               	iorwf	(fputc@fp+1)^0,w,c
  1971   0017A8  B4D8               	btfsc	status,2,c
  1972   0017AA  EFD9  F00B         	goto	u1511
  1973   0017AE  EFDB  F00B         	goto	u1510
  1974   0017B2                     u1511:
  1975   0017B2  EFE4  F00B         	goto	l3024
  1976   0017B6                     u1510:
  1977   0017B6  5007               	movf	fputc@fp^0,w,c
  1978   0017B8  1008               	iorwf	(fputc@fp+1)^0,w,c
  1979   0017BA  A4D8               	btfss	status,2,c
  1980   0017BC  EFE2  F00B         	goto	u1521
  1981   0017C0  EFE4  F00B         	goto	u1520
  1982   0017C4                     u1521:
  1983   0017C4  EFE9  F00B         	goto	l3026
  1984   0017C8                     u1520:
  1985   0017C8                     l3024:
  1986   0017C8  5005               	movf	fputc@c^0,w,c
  1987   0017CA  ECCB  F00F         	call	_putch
  1988   0017CE  EF36  F00C         	goto	l1239
  1989   0017D2                     l3026:
  1990   0017D2  EE20 F009          	lfsr	2,9
  1991   0017D6  5007               	movf	fputc@fp^0,w,c
  1992   0017D8  26D9               	addwf	fsr2l,f,c
  1993   0017DA  5008               	movf	(fputc@fp+1)^0,w,c
  1994   0017DC  22DA               	addwfc	fsr2h,f,c
  1995   0017DE  50DE               	movf	postinc2,w,c
  1996   0017E0  10DE               	iorwf	postinc2,w,c
  1997   0017E2  B4D8               	btfsc	status,2,c
  1998   0017E4  EFF6  F00B         	goto	u1531
  1999   0017E8  EFF8  F00B         	goto	u1530
  2000   0017EC                     u1531:
  2001   0017EC  EF13  F00C         	goto	l3030
  2002   0017F0                     u1530:
  2003   0017F0  EE20 F009          	lfsr	2,9
  2004   0017F4  5007               	movf	fputc@fp^0,w,c
  2005   0017F6  26D9               	addwf	fsr2l,f,c
  2006   0017F8  5008               	movf	(fputc@fp+1)^0,w,c
  2007   0017FA  22DA               	addwfc	fsr2h,f,c
  2008   0017FC  EE10 F003          	lfsr	1,3
  2009   001800  5007               	movf	fputc@fp^0,w,c
  2010   001802  26E1               	addwf	fsr1l,f,c
  2011   001804  5008               	movf	(fputc@fp+1)^0,w,c
  2012   001806  22E2               	addwfc	fsr1h,f,c
  2013   001808  50DE               	movf	postinc2,w,c
  2014   00180A  5CE6               	subwf	postinc1,w,c
  2015   00180C  50E6               	movf	postinc1,w,c
  2016   00180E  0A80               	xorlw	128
  2017   001810  6E0D               	movwf	(??_fputc+4)^0,c
  2018   001812  50DE               	movf	postinc2,w,c
  2019   001814  0A80               	xorlw	128
  2020   001816  580D               	subwfb	(??_fputc+4)^0,w,c
  2021   001818  B0D8               	btfsc	status,0,c
  2022   00181A  EF11  F00C         	goto	u1541
  2023   00181E  EF13  F00C         	goto	u1540
  2024   001822                     u1541:
  2025   001822  EF36  F00C         	goto	l1239
  2026   001826                     u1540:
  2027   001826                     l3030:
  2028   001826  EE20 F003          	lfsr	2,3
  2029   00182A  5007               	movf	fputc@fp^0,w,c
  2030   00182C  26D9               	addwf	fsr2l,f,c
  2031   00182E  5008               	movf	(fputc@fp+1)^0,w,c
  2032   001830  22DA               	addwfc	fsr2h,f,c
  2033   001832  CFDE F009          	movff	postinc2,??_fputc
  2034   001836  CFDD F00A          	movff	postdec2,??_fputc+1
  2035   00183A  C007  FFD9         	movff	fputc@fp,fsr2l
  2036   00183E  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2037   001842  CFDE F00B          	movff	postinc2,??_fputc+2
  2038   001846  CFDD F00C          	movff	postdec2,??_fputc+3
  2039   00184A  5009               	movf	??_fputc^0,w,c
  2040   00184C  240B               	addwf	(??_fputc+2)^0,w,c
  2041   00184E  6ED9               	movwf	fsr2l,c
  2042   001850  500A               	movf	(??_fputc+1)^0,w,c
  2043   001852  200C               	addwfc	(??_fputc+3)^0,w,c
  2044   001854  6EDA               	movwf	fsr2h,c
  2045   001856  C005  FFDF         	movff	fputc@c,indf2
  2046   00185A  EE20 F003          	lfsr	2,3
  2047   00185E  5007               	movf	fputc@fp^0,w,c
  2048   001860  26D9               	addwf	fsr2l,f,c
  2049   001862  5008               	movf	(fputc@fp+1)^0,w,c
  2050   001864  22DA               	addwfc	fsr2h,f,c
  2051   001866  2ADE               	incf	postinc2,f,c
  2052   001868  0E00               	movlw	0
  2053   00186A  22DD               	addwfc	postdec2,f,c
  2054   00186C                     l1239:
  2055   00186C  0012               	return		;funcret
  2056   00186E                     __end_of_fputc:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _putch *****************
  2060 ;; Defined at:
  2061 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  c               1    wreg     unsigned char 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  c               1    0[COMRAM] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;Total ram usage:        0 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 4
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_fputc
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text8
  2090   001F96                     __ptext8:
  2091                           	callstack 0
  2092   001F96                     _putch:
  2093                           	callstack 22
  2094   001F96  0012               	return		;funcret
  2095   001F98                     __end_of_putch:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _abs *****************
  2099 ;; Defined at:
  2100 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  a               2   22[COMRAM] int 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2   22[COMRAM] int 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;Total ram usage:        4 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 4
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_dtoa
  2125 ;;		_normalise_readings
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text9
  2130   001D02                     __ptext9:
  2131                           	callstack 0
  2132   001D02                     _abs:
  2133                           	callstack 22
  2134   001D02  BE18               	btfsc	(abs@a+1)^0,7,c
  2135   001D04  EF8E  F00E         	goto	u1560
  2136   001D08  5018               	movf	(abs@a+1)^0,w,c
  2137   001D0A  E106               	bnz	u1561
  2138   001D0C  0417               	decf	abs@a^0,w,c
  2139   001D0E  B0D8               	btfsc	status,0,c
  2140   001D10  EF8C  F00E         	goto	u1561
  2141   001D14  EF8E  F00E         	goto	u1560
  2142   001D18                     u1561:
  2143   001D18  EF9C  F00E         	goto	l1159
  2144   001D1C                     u1560:
  2145   001D1C  C017  F019         	movff	abs@a,??_abs
  2146   001D20  C018  F01A         	movff	abs@a+1,??_abs+1
  2147   001D24  1E19               	comf	??_abs^0,f,c
  2148   001D26  1E1A               	comf	(??_abs+1)^0,f,c
  2149   001D28  4A19               	infsnz	??_abs^0,f,c
  2150   001D2A  2A1A               	incf	(??_abs+1)^0,f,c
  2151   001D2C  C019  F017         	movff	??_abs,?_abs
  2152   001D30  C01A  F018         	movff	??_abs+1,?_abs+1
  2153   001D34  EFA0  F00E         	goto	l1162
  2154   001D38                     l1159:
  2155   001D38  C017  F017         	movff	abs@a,?_abs
  2156   001D3C  C018  F018         	movff	abs@a+1,?_abs+1
  2157   001D40                     l1162:
  2158   001D40  0012               	return		;funcret
  2159   001D42                     __end_of_abs:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function ___aomod *****************
  2163 ;; Defined at:
  2164 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  dividend        8    4[COMRAM] long long 
  2167 ;;  divisor         8   12[COMRAM] long long 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  sign            1   21[COMRAM] unsigned char 
  2170 ;;  counter         1   20[COMRAM] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  8    4[COMRAM] long long 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2180 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;Total ram usage:       18 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 4
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_dtoa
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text10
  2195   001388                     __ptext10:
  2196                           	callstack 0
  2197   001388                     ___aomod:
  2198                           	callstack 22
  2199   001388  0E00               	movlw	0
  2200   00138A  6E16               	movwf	___aomod@sign^0,c
  2201   00138C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2202   00138E  EFCD  F009         	goto	u1640
  2203   001392  EFCB  F009         	goto	u1641
  2204   001396                     u1641:
  2205   001396  EFDF  F009         	goto	l3098
  2206   00139A                     u1640:
  2207   00139A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2208   00139C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2209   00139E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2210   0013A0  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2211   0013A2  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2212   0013A4  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2213   0013A6  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2214   0013A8  6C05               	negf	___aomod@dividend^0,c
  2215   0013AA  0E00               	movlw	0
  2216   0013AC  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2217   0013AE  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2218   0013B0  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2219   0013B2  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2220   0013B4  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2221   0013B6  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2222   0013B8  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2223   0013BA  0E01               	movlw	1
  2224   0013BC  6E16               	movwf	___aomod@sign^0,c
  2225   0013BE                     l3098:
  2226   0013BE  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2227   0013C0  EFE6  F009         	goto	u1650
  2228   0013C4  EFE4  F009         	goto	u1651
  2229   0013C8                     u1651:
  2230   0013C8  EFF6  F009         	goto	l3102
  2231   0013CC                     u1650:
  2232   0013CC  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2233   0013CE  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2234   0013D0  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2235   0013D2  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2236   0013D4  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2237   0013D6  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2238   0013D8  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2239   0013DA  6C0D               	negf	___aomod@divisor^0,c
  2240   0013DC  0E00               	movlw	0
  2241   0013DE  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2242   0013E0  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2243   0013E2  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2244   0013E4  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2245   0013E6  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2246   0013E8  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2247   0013EA  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2248   0013EC                     l3102:
  2249   0013EC  500D               	movf	___aomod@divisor^0,w,c
  2250   0013EE  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2251   0013F0  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2252   0013F2  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2253   0013F4  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2254   0013F6  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2255   0013F8  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2256   0013FA  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2257   0013FC  B4D8               	btfsc	status,2,c
  2258   0013FE  EF03  F00A         	goto	u1661
  2259   001402  EF05  F00A         	goto	u1660
  2260   001406                     u1661:
  2261   001406  EF4D  F00A         	goto	l3118
  2262   00140A                     u1660:
  2263   00140A  0E01               	movlw	1
  2264   00140C  6E15               	movwf	___aomod@counter^0,c
  2265   00140E  EF13  F00A         	goto	l3108
  2266   001412                     l3106:
  2267   001412  90D8               	bcf	status,0,c
  2268   001414  360D               	rlcf	___aomod@divisor^0,f,c
  2269   001416  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2270   001418  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2271   00141A  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2272   00141C  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2273   00141E  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2274   001420  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2275   001422  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2276   001424  2A15               	incf	___aomod@counter^0,f,c
  2277   001426                     l3108:
  2278   001426  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2279   001428  EF18  F00A         	goto	u1671
  2280   00142C  EF1A  F00A         	goto	u1670
  2281   001430                     u1671:
  2282   001430  EF09  F00A         	goto	l3106
  2283   001434                     u1670:
  2284   001434                     l3110:
  2285   001434  500D               	movf	___aomod@divisor^0,w,c
  2286   001436  5C05               	subwf	___aomod@dividend^0,w,c
  2287   001438  500E               	movf	(___aomod@divisor+1)^0,w,c
  2288   00143A  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2289   00143C  500F               	movf	(___aomod@divisor+2)^0,w,c
  2290   00143E  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2291   001440  5010               	movf	(___aomod@divisor+3)^0,w,c
  2292   001442  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2293   001444  5011               	movf	(___aomod@divisor+4)^0,w,c
  2294   001446  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2295   001448  5012               	movf	(___aomod@divisor+5)^0,w,c
  2296   00144A  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2297   00144C  5013               	movf	(___aomod@divisor+6)^0,w,c
  2298   00144E  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2299   001450  5014               	movf	(___aomod@divisor+7)^0,w,c
  2300   001452  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2301   001454  A0D8               	btfss	status,0,c
  2302   001456  EF2F  F00A         	goto	u1681
  2303   00145A  EF31  F00A         	goto	u1680
  2304   00145E                     u1681:
  2305   00145E  EF41  F00A         	goto	l3114
  2306   001462                     u1680:
  2307   001462  500D               	movf	___aomod@divisor^0,w,c
  2308   001464  5E05               	subwf	___aomod@dividend^0,f,c
  2309   001466  500E               	movf	(___aomod@divisor+1)^0,w,c
  2310   001468  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2311   00146A  500F               	movf	(___aomod@divisor+2)^0,w,c
  2312   00146C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2313   00146E  5010               	movf	(___aomod@divisor+3)^0,w,c
  2314   001470  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2315   001472  5011               	movf	(___aomod@divisor+4)^0,w,c
  2316   001474  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2317   001476  5012               	movf	(___aomod@divisor+5)^0,w,c
  2318   001478  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2319   00147A  5013               	movf	(___aomod@divisor+6)^0,w,c
  2320   00147C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2321   00147E  5014               	movf	(___aomod@divisor+7)^0,w,c
  2322   001480  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2323   001482                     l3114:
  2324   001482  90D8               	bcf	status,0,c
  2325   001484  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2326   001486  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2327   001488  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2328   00148A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2329   00148C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2330   00148E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2331   001490  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2332   001492  320D               	rrcf	___aomod@divisor^0,f,c
  2333   001494  2E15               	decfsz	___aomod@counter^0,f,c
  2334   001496  EF1A  F00A         	goto	l3110
  2335   00149A                     l3118:
  2336   00149A  5016               	movf	___aomod@sign^0,w,c
  2337   00149C  B4D8               	btfsc	status,2,c
  2338   00149E  EF53  F00A         	goto	u1691
  2339   0014A2  EF55  F00A         	goto	u1690
  2340   0014A6                     u1691:
  2341   0014A6  EF65  F00A         	goto	l3122
  2342   0014AA                     u1690:
  2343   0014AA  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2344   0014AC  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2345   0014AE  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2346   0014B0  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2347   0014B2  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2348   0014B4  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2349   0014B6  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2350   0014B8  6C05               	negf	___aomod@dividend^0,c
  2351   0014BA  0E00               	movlw	0
  2352   0014BC  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2353   0014BE  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2354   0014C0  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2355   0014C2  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2356   0014C4  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2357   0014C6  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2358   0014C8  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2359   0014CA                     l3122:
  2360   0014CA  C005  F005         	movff	___aomod@dividend,?___aomod
  2361   0014CE  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2362   0014D2  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2363   0014D6  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2364   0014DA  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2365   0014DE  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2366   0014E2  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2367   0014E6  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2368   0014EA  0012               	return		;funcret
  2369   0014EC                     __end_of___aomod:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function ___aodiv *****************
  2373 ;; Defined at:
  2374 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  dividend        8    4[COMRAM] long long 
  2377 ;;  divisor         8   12[COMRAM] long long 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  quotient        8   22[COMRAM] long long 
  2380 ;;  sign            1   21[COMRAM] unsigned char 
  2381 ;;  counter         1   20[COMRAM] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  8    4[COMRAM] long long 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2391 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2394 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2395 ;;Total ram usage:       26 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 4
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_dtoa
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text11
  2406   001094                     __ptext11:
  2407                           	callstack 0
  2408   001094                     ___aodiv:
  2409                           	callstack 22
  2410   001094  0E00               	movlw	0
  2411   001096  6E16               	movwf	___aodiv@sign^0,c
  2412   001098  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2413   00109A  EF53  F008         	goto	u1570
  2414   00109E  EF51  F008         	goto	u1571
  2415   0010A2                     u1571:
  2416   0010A2  EF65  F008         	goto	l3054
  2417   0010A6                     u1570:
  2418   0010A6  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2419   0010A8  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2420   0010AA  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2421   0010AC  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2422   0010AE  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2423   0010B0  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2424   0010B2  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2425   0010B4  6C0D               	negf	___aodiv@divisor^0,c
  2426   0010B6  0E00               	movlw	0
  2427   0010B8  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2428   0010BA  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2429   0010BC  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2430   0010BE  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2431   0010C0  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2432   0010C2  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2433   0010C4  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2434   0010C6  0E01               	movlw	1
  2435   0010C8  6E16               	movwf	___aodiv@sign^0,c
  2436   0010CA                     l3054:
  2437   0010CA  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2438   0010CC  EF6C  F008         	goto	u1580
  2439   0010D0  EF6A  F008         	goto	u1581
  2440   0010D4                     u1581:
  2441   0010D4  EF7E  F008         	goto	l3060
  2442   0010D8                     u1580:
  2443   0010D8  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2444   0010DA  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2445   0010DC  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2446   0010DE  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2447   0010E0  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2448   0010E2  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2449   0010E4  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2450   0010E6  6C05               	negf	___aodiv@dividend^0,c
  2451   0010E8  0E00               	movlw	0
  2452   0010EA  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2453   0010EC  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2454   0010EE  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2455   0010F0  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2456   0010F2  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2457   0010F4  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2458   0010F6  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2459   0010F8  0E01               	movlw	1
  2460   0010FA  1A16               	xorwf	___aodiv@sign^0,f,c
  2461   0010FC                     l3060:
  2462   0010FC  EE20  F017         	lfsr	2,___aodiv@quotient
  2463   001100  0E07               	movlw	7
  2464   001102                     u1591:
  2465   001102  6ADE               	clrf	postinc2,c
  2466   001104  06E8               	decf	wreg,f,c
  2467   001106  E2FD               	bc	u1591
  2468   001108  500D               	movf	___aodiv@divisor^0,w,c
  2469   00110A  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2470   00110C  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2471   00110E  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2472   001110  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2473   001112  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2474   001114  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2475   001116  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2476   001118  B4D8               	btfsc	status,2,c
  2477   00111A  EF91  F008         	goto	u1601
  2478   00111E  EF93  F008         	goto	u1600
  2479   001122                     u1601:
  2480   001122  EFE5  F008         	goto	l3082
  2481   001126                     u1600:
  2482   001126  0E01               	movlw	1
  2483   001128  6E15               	movwf	___aodiv@counter^0,c
  2484   00112A  EFA1  F008         	goto	l3068
  2485   00112E                     l3066:
  2486   00112E  90D8               	bcf	status,0,c
  2487   001130  360D               	rlcf	___aodiv@divisor^0,f,c
  2488   001132  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2489   001134  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2490   001136  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2491   001138  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2492   00113A  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2493   00113C  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2494   00113E  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2495   001140  2A15               	incf	___aodiv@counter^0,f,c
  2496   001142                     l3068:
  2497   001142  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2498   001144  EFA6  F008         	goto	u1611
  2499   001148  EFA8  F008         	goto	u1610
  2500   00114C                     u1611:
  2501   00114C  EF97  F008         	goto	l3066
  2502   001150                     u1610:
  2503   001150                     l3070:
  2504   001150  90D8               	bcf	status,0,c
  2505   001152  3617               	rlcf	___aodiv@quotient^0,f,c
  2506   001154  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2507   001156  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2508   001158  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2509   00115A  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2510   00115C  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2511   00115E  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2512   001160  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2513   001162  500D               	movf	___aodiv@divisor^0,w,c
  2514   001164  5C05               	subwf	___aodiv@dividend^0,w,c
  2515   001166  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2516   001168  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2517   00116A  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2518   00116C  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2519   00116E  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2520   001170  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2521   001172  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2522   001174  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2523   001176  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2524   001178  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2525   00117A  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2526   00117C  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2527   00117E  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2528   001180  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2529   001182  A0D8               	btfss	status,0,c
  2530   001184  EFC6  F008         	goto	u1621
  2531   001188  EFC8  F008         	goto	u1620
  2532   00118C                     u1621:
  2533   00118C  EFD9  F008         	goto	l3078
  2534   001190                     u1620:
  2535   001190  500D               	movf	___aodiv@divisor^0,w,c
  2536   001192  5E05               	subwf	___aodiv@dividend^0,f,c
  2537   001194  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2538   001196  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2539   001198  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2540   00119A  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2541   00119C  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2542   00119E  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2543   0011A0  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2544   0011A2  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2545   0011A4  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2546   0011A6  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2547   0011A8  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2548   0011AA  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2549   0011AC  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2550   0011AE  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2551   0011B0  8017               	bsf	___aodiv@quotient^0,0,c
  2552   0011B2                     l3078:
  2553   0011B2  90D8               	bcf	status,0,c
  2554   0011B4  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2555   0011B6  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2556   0011B8  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2557   0011BA  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2558   0011BC  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2559   0011BE  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2560   0011C0  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2561   0011C2  320D               	rrcf	___aodiv@divisor^0,f,c
  2562   0011C4  2E15               	decfsz	___aodiv@counter^0,f,c
  2563   0011C6  EFA8  F008         	goto	l3070
  2564   0011CA                     l3082:
  2565   0011CA  5016               	movf	___aodiv@sign^0,w,c
  2566   0011CC  B4D8               	btfsc	status,2,c
  2567   0011CE  EFEB  F008         	goto	u1631
  2568   0011D2  EFED  F008         	goto	u1630
  2569   0011D6                     u1631:
  2570   0011D6  EFFD  F008         	goto	l3086
  2571   0011DA                     u1630:
  2572   0011DA  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2573   0011DC  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2574   0011DE  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2575   0011E0  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2576   0011E2  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2577   0011E4  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2578   0011E6  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2579   0011E8  6C17               	negf	___aodiv@quotient^0,c
  2580   0011EA  0E00               	movlw	0
  2581   0011EC  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2582   0011EE  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2583   0011F0  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2584   0011F2  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2585   0011F4  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2586   0011F6  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2587   0011F8  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2588   0011FA                     l3086:
  2589   0011FA  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2590   0011FE  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2591   001202  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2592   001206  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2593   00120A  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2594   00120E  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2595   001212  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2596   001216  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2597   00121A  0012               	return		;funcret
  2598   00121C                     __end_of___aodiv:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function _setMotorPWM *****************
  2602 ;; Defined at:
  2603 ;;		line 61 in file "dc_motor.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  m               2   17[COMRAM] PTR struct DC_motor
  2606 ;;		 -> main@motorR(9), main@motorL(9), 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  negDuty         1   22[COMRAM] unsigned char 
  2609 ;;  posDuty         1   21[COMRAM] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;Total ram usage:        6 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 5
  2626 ;; This function calls:
  2627 ;;		___lwdiv
  2628 ;;		___wmul
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;;		_stop
  2632 ;;		_turnLeft45
  2633 ;;		_turnRight45
  2634 ;;		_fullSpeedAhead
  2635 ;;		_reverseFullSpeed
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text12
  2640   00121C                     __ptext12:
  2641                           	callstack 0
  2642   00121C                     _setMotorPWM:
  2643                           	callstack 25
  2644   00121C                     
  2645                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2646   00121C  EE20 F002          	lfsr	2,2
  2647   001220  5012               	movf	setMotorPWM@m^0,w,c
  2648   001222  26D9               	addwf	fsr2l,f,c
  2649   001224  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2650   001226  22DA               	addwfc	fsr2h,f,c
  2651   001228  50DF               	movf	indf2,w,c
  2652   00122A  B4D8               	btfsc	status,2,c
  2653   00122C  EF1A  F009         	goto	u1261
  2654   001230  EF1C  F009         	goto	u1260
  2655   001234                     u1261:
  2656   001234  EF50  F009         	goto	l2546
  2657   001238                     u1260:
  2658   001238                     
  2659                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2660   001238  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  2661   00123C  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2662   001240  50DF               	movf	indf2,w,c
  2663   001242  6E14               	movwf	??_setMotorPWM^0,c
  2664   001244  5014               	movf	??_setMotorPWM^0,w,c
  2665   001246  6E05               	movwf	___wmul@multiplier^0,c
  2666   001248  6A06               	clrf	(___wmul@multiplier+1)^0,c
  2667   00124A  EE20 F003          	lfsr	2,3
  2668   00124E  5012               	movf	setMotorPWM@m^0,w,c
  2669   001250  26D9               	addwf	fsr2l,f,c
  2670   001252  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2671   001254  22DA               	addwfc	fsr2h,f,c
  2672   001256  CFDE F007          	movff	postinc2,___wmul@multiplicand
  2673   00125A  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  2674   00125E  EC2F  F00F         	call	___wmul	;wreg free
  2675   001262  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2676   001266  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2677   00126A  0E00               	movlw	0
  2678   00126C  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  2679   00126E  0E64               	movlw	100
  2680   001270  6E0D               	movwf	___lwdiv@divisor^0,c
  2681   001272  ECB8  F00C         	call	___lwdiv	;wreg free
  2682   001276  EE20 F003          	lfsr	2,3
  2683   00127A  5012               	movf	setMotorPWM@m^0,w,c
  2684   00127C  26D9               	addwf	fsr2l,f,c
  2685   00127E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2686   001280  22DA               	addwfc	fsr2h,f,c
  2687   001282  50DF               	movf	indf2,w,c
  2688   001284  6E15               	movwf	(??_setMotorPWM+1)^0,c
  2689   001286  500B               	movf	?___lwdiv^0,w,c
  2690   001288  5C15               	subwf	(??_setMotorPWM+1)^0,w,c
  2691   00128A  6E16               	movwf	setMotorPWM@posDuty^0,c
  2692   00128C                     
  2693                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2694   00128C  EE20 F003          	lfsr	2,3
  2695   001290  5012               	movf	setMotorPWM@m^0,w,c
  2696   001292  26D9               	addwf	fsr2l,f,c
  2697   001294  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2698   001296  22DA               	addwfc	fsr2h,f,c
  2699   001298  50DF               	movf	indf2,w,c
  2700   00129A  6E17               	movwf	setMotorPWM@negDuty^0,c
  2701                           
  2702                           ;dc_motor.c: 68:     }
  2703   00129C  EF73  F009         	goto	l2550
  2704   0012A0                     l2546:
  2705                           
  2706                           ;dc_motor.c: 70:         posDuty=0;
  2707   0012A0  0E00               	movlw	0
  2708   0012A2  6E16               	movwf	setMotorPWM@posDuty^0,c
  2709   0012A4                     
  2710                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2711   0012A4  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  2712   0012A8  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2713   0012AC  50DF               	movf	indf2,w,c
  2714   0012AE  6E14               	movwf	??_setMotorPWM^0,c
  2715   0012B0  5014               	movf	??_setMotorPWM^0,w,c
  2716   0012B2  6E05               	movwf	___wmul@multiplier^0,c
  2717   0012B4  6A06               	clrf	(___wmul@multiplier+1)^0,c
  2718   0012B6  EE20 F003          	lfsr	2,3
  2719   0012BA  5012               	movf	setMotorPWM@m^0,w,c
  2720   0012BC  26D9               	addwf	fsr2l,f,c
  2721   0012BE  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2722   0012C0  22DA               	addwfc	fsr2h,f,c
  2723   0012C2  CFDE F007          	movff	postinc2,___wmul@multiplicand
  2724   0012C6  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  2725   0012CA  EC2F  F00F         	call	___wmul	;wreg free
  2726   0012CE  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2727   0012D2  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2728   0012D6  0E00               	movlw	0
  2729   0012D8  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  2730   0012DA  0E64               	movlw	100
  2731   0012DC  6E0D               	movwf	___lwdiv@divisor^0,c
  2732   0012DE  ECB8  F00C         	call	___lwdiv	;wreg free
  2733   0012E2  500B               	movf	?___lwdiv^0,w,c
  2734   0012E4  6E17               	movwf	setMotorPWM@negDuty^0,c
  2735   0012E6                     l2550:
  2736                           
  2737                           ;dc_motor.c: 74:     if (m->direction) {
  2738   0012E6  EE20 F001          	lfsr	2,1
  2739   0012EA  5012               	movf	setMotorPWM@m^0,w,c
  2740   0012EC  26D9               	addwf	fsr2l,f,c
  2741   0012EE  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2742   0012F0  22DA               	addwfc	fsr2h,f,c
  2743   0012F2  50DF               	movf	indf2,w,c
  2744   0012F4  B4D8               	btfsc	status,2,c
  2745   0012F6  EF7F  F009         	goto	u1271
  2746   0012FA  EF81  F009         	goto	u1270
  2747   0012FE                     u1271:
  2748   0012FE  EFA3  F009         	goto	l2554
  2749   001302                     u1270:
  2750   001302                     
  2751                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2752   001302  EE20 F005          	lfsr	2,5
  2753   001306  5012               	movf	setMotorPWM@m^0,w,c
  2754   001308  26D9               	addwf	fsr2l,f,c
  2755   00130A  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2756   00130C  22DA               	addwfc	fsr2h,f,c
  2757   00130E  CFDE F014          	movff	postinc2,??_setMotorPWM
  2758   001312  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2759   001316  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2760   00131A  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2761   00131E  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  2762                           
  2763                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2764   001322  EE20 F007          	lfsr	2,7
  2765   001326  5012               	movf	setMotorPWM@m^0,w,c
  2766   001328  26D9               	addwf	fsr2l,f,c
  2767   00132A  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2768   00132C  22DA               	addwfc	fsr2h,f,c
  2769   00132E  CFDE F014          	movff	postinc2,??_setMotorPWM
  2770   001332  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2771   001336  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2772   00133A  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2773   00133E  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  2774                           
  2775                           ;dc_motor.c: 77:     } else {
  2776   001342  EFC3  F009         	goto	l86
  2777   001346                     l2554:
  2778                           
  2779                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2780   001346  EE20 F005          	lfsr	2,5
  2781   00134A  5012               	movf	setMotorPWM@m^0,w,c
  2782   00134C  26D9               	addwf	fsr2l,f,c
  2783   00134E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2784   001350  22DA               	addwfc	fsr2h,f,c
  2785   001352  CFDE F014          	movff	postinc2,??_setMotorPWM
  2786   001356  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2787   00135A  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2788   00135E  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2789   001362  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  2790                           
  2791                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2792   001366  EE20 F007          	lfsr	2,7
  2793   00136A  5012               	movf	setMotorPWM@m^0,w,c
  2794   00136C  26D9               	addwf	fsr2l,f,c
  2795   00136E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2796   001370  22DA               	addwfc	fsr2h,f,c
  2797   001372  CFDE F014          	movff	postinc2,??_setMotorPWM
  2798   001376  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2799   00137A  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2800   00137E  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2801   001382  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  2802   001386                     l86:
  2803   001386  0012               	return		;funcret
  2804   001388                     __end_of_setMotorPWM:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function ___wmul *****************
  2808 ;; Defined at:
  2809 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  multiplier      2    4[COMRAM] unsigned int 
  2812 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  product         2    8[COMRAM] unsigned int 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  2    4[COMRAM] unsigned int 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, prodl, prodh
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2828 ;;Total ram usage:        6 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 4
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_setMotorPWM
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text13
  2839   001E5E                     __ptext13:
  2840                           	callstack 0
  2841   001E5E                     ___wmul:
  2842                           	callstack 25
  2843   001E5E  5005               	movf	___wmul@multiplier^0,w,c
  2844   001E60  0207               	mulwf	___wmul@multiplicand^0,c
  2845   001E62  CFF3 F009          	movff	prodl,___wmul@product
  2846   001E66  CFF4 F00A          	movff	prodh,___wmul@product+1
  2847   001E6A  5005               	movf	___wmul@multiplier^0,w,c
  2848   001E6C  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  2849   001E6E  50F3               	movf	243,w,c
  2850   001E70  260A               	addwf	(___wmul@product+1)^0,f,c
  2851   001E72  5006               	movf	(___wmul@multiplier+1)^0,w,c
  2852   001E74  0207               	mulwf	___wmul@multiplicand^0,c
  2853   001E76  50F3               	movf	243,w,c
  2854   001E78  260A               	addwf	(___wmul@product+1)^0,f,c
  2855   001E7A  C009  F005         	movff	___wmul@product,?___wmul
  2856   001E7E  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  2857   001E82  0012               	return		;funcret
  2858   001E84                     __end_of___wmul:
  2859                           	callstack 0
  2860                           
  2861 ;; *************** function ___lwdiv *****************
  2862 ;; Defined at:
  2863 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  dividend        2   10[COMRAM] unsigned int 
  2866 ;;  divisor         2   12[COMRAM] unsigned int 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  quotient        2   14[COMRAM] unsigned int 
  2869 ;;  counter         1   16[COMRAM] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  2   10[COMRAM] unsigned int 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;Total ram usage:        7 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 4
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_setMotorPWM
  2890 ;;		_collect_avg_readings
  2891 ;;		_normalise_readings
  2892 ;;		_make_master_closeness
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text14
  2897   001970                     __ptext14:
  2898                           	callstack 0
  2899   001970                     ___lwdiv:
  2900                           	callstack 25
  2901   001970  0E00               	movlw	0
  2902   001972  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  2903   001974  0E00               	movlw	0
  2904   001976  6E0F               	movwf	___lwdiv@quotient^0,c
  2905   001978  500D               	movf	___lwdiv@divisor^0,w,c
  2906   00197A  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2907   00197C  B4D8               	btfsc	status,2,c
  2908   00197E  EFC3  F00C         	goto	u1221
  2909   001982  EFC5  F00C         	goto	u1220
  2910   001986                     u1221:
  2911   001986  EFED  F00C         	goto	l975
  2912   00198A                     u1220:
  2913   00198A  0E01               	movlw	1
  2914   00198C  6E11               	movwf	___lwdiv@counter^0,c
  2915   00198E  EFCD  F00C         	goto	l2448
  2916   001992                     l2446:
  2917   001992  90D8               	bcf	status,0,c
  2918   001994  360D               	rlcf	___lwdiv@divisor^0,f,c
  2919   001996  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2920   001998  2A11               	incf	___lwdiv@counter^0,f,c
  2921   00199A                     l2448:
  2922   00199A  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  2923   00199C  EFD2  F00C         	goto	u1231
  2924   0019A0  EFD4  F00C         	goto	u1230
  2925   0019A4                     u1231:
  2926   0019A4  EFC9  F00C         	goto	l2446
  2927   0019A8                     u1230:
  2928   0019A8                     l2450:
  2929   0019A8  90D8               	bcf	status,0,c
  2930   0019AA  360F               	rlcf	___lwdiv@quotient^0,f,c
  2931   0019AC  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2932   0019AE  500D               	movf	___lwdiv@divisor^0,w,c
  2933   0019B0  5C0B               	subwf	___lwdiv@dividend^0,w,c
  2934   0019B2  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  2935   0019B4  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2936   0019B6  A0D8               	btfss	status,0,c
  2937   0019B8  EFE0  F00C         	goto	u1241
  2938   0019BC  EFE2  F00C         	goto	u1240
  2939   0019C0                     u1241:
  2940   0019C0  EFE7  F00C         	goto	l2458
  2941   0019C4                     u1240:
  2942   0019C4  500D               	movf	___lwdiv@divisor^0,w,c
  2943   0019C6  5E0B               	subwf	___lwdiv@dividend^0,f,c
  2944   0019C8  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  2945   0019CA  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2946   0019CC  800F               	bsf	___lwdiv@quotient^0,0,c
  2947   0019CE                     l2458:
  2948   0019CE  90D8               	bcf	status,0,c
  2949   0019D0  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2950   0019D2  320D               	rrcf	___lwdiv@divisor^0,f,c
  2951   0019D4  2E11               	decfsz	___lwdiv@counter^0,f,c
  2952   0019D6  EFD4  F00C         	goto	l2450
  2953   0019DA                     l975:
  2954   0019DA  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  2955   0019DE  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2956   0019E2  0012               	return		;funcret
  2957   0019E4                     __end_of___lwdiv:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _sendStringSerial4 *****************
  2961 ;; Defined at:
  2962 ;;		line 39 in file "serial.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  string          2    5[COMRAM] PTR unsigned char 
  2965 ;;		 -> main@buf(20), 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;Total ram usage:        2 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 5
  2984 ;; This function calls:
  2985 ;;		_sendCharSerial4
  2986 ;; This function is called by:
  2987 ;;		_main
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text15
  2992   001DB4                     __ptext15:
  2993                           	callstack 0
  2994   001DB4                     _sendStringSerial4:
  2995                           	callstack 25
  2996   001DB4                     
  2997                           ;serial.c: 40:  while(*string != 0) {
  2998   001DB4  EFE5  F00E         	goto	l2676
  2999   001DB8                     l2672:
  3000                           
  3001                           ;serial.c: 41:         sendCharSerial4(*string++);
  3002   001DB8  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  3003   001DBC  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3004   001DC0  50DF               	movf	indf2,w,c
  3005   001DC2  EC73  F00F         	call	_sendCharSerial4
  3006   001DC6  4A06               	infsnz	sendStringSerial4@string^0,f,c
  3007   001DC8  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  3008   001DCA                     l2676:
  3009                           
  3010                           ;serial.c: 40:  while(*string != 0) {
  3011   001DCA  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  3012   001DCE  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3013   001DD2  50DF               	movf	indf2,w,c
  3014   001DD4  A4D8               	btfss	status,2,c
  3015   001DD6  EFEF  F00E         	goto	u1331
  3016   001DDA  EFF1  F00E         	goto	u1330
  3017   001DDE                     u1331:
  3018   001DDE  EFDC  F00E         	goto	l2672
  3019   001DE2                     u1330:
  3020   001DE2  0012               	return		;funcret
  3021   001DE4                     __end_of_sendStringSerial4:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function _sendCharSerial4 *****************
  3025 ;; Defined at:
  3026 ;;		line 32 in file "serial.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  charToSend      1    wreg     unsigned char 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  charToSend      1    4[COMRAM] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;Total ram usage:        1 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 4
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_sendStringSerial4
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text16
  3055   001EE6                     __ptext16:
  3056                           	callstack 0
  3057   001EE6                     _sendCharSerial4:
  3058                           	callstack 25
  3059                           
  3060                           ;incstack = 0
  3061                           ;sendCharSerial4@charToSend stored from wreg
  3062   001EE6  6E05               	movwf	sendCharSerial4@charToSend^0,c
  3063   001EE8                     l380:
  3064   001EE8  010E               	movlb	14	; () banked
  3065   001EEA  A537               	btfss	55,2,b	;volatile
  3066   001EEC  EF7A  F00F         	goto	u1191
  3067   001EF0  EF7C  F00F         	goto	u1190
  3068   001EF4                     u1191:
  3069   001EF4  EF74  F00F         	goto	l380
  3070   001EF8                     u1190:
  3071   001EF8                     
  3072                           ; BSR set to: 14
  3073                           ;serial.c: 34:     TX4REG = charToSend;
  3074   001EF8  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3075   001EFC                     
  3076                           ; BSR set to: 14
  3077   001EFC  0012               	return		;funcret
  3078   001EFE                     __end_of_sendCharSerial4:
  3079                           	callstack 0
  3080                           
  3081 ;; *************** function _initUSART4 *****************
  3082 ;; Defined at:
  3083 ;;		line 6 in file "serial.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3101 ;;Total ram usage:        0 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 4
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_main
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text17
  3112   001EA6                     __ptext17:
  3113                           	callstack 0
  3114   001EA6                     _initUSART4:
  3115                           	callstack 26
  3116   001EA6                     
  3117                           ;serial.c: 10:     RC0PPS = 0x12;
  3118   001EA6  0E12               	movlw	18
  3119   001EA8  010E               	movlb	14	; () banked
  3120   001EAA  6F62               	movwf	98,b	;volatile
  3121                           
  3122                           ;serial.c: 11:     RX4PPS = 0x11;
  3123   001EAC  0E11               	movlw	17
  3124   001EAE  6F15               	movwf	21,b	;volatile
  3125   001EB0                     
  3126                           ; BSR set to: 14
  3127                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3128   001EB0  8283               	bsf	131,1,c	;volatile
  3129   001EB2                     
  3130                           ; BSR set to: 14
  3131                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3132   001EB2  97E9               	bcf	233,3,b	;volatile
  3133   001EB4                     
  3134                           ; BSR set to: 14
  3135                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3136   001EB4  95E8               	bcf	232,2,b	;volatile
  3137                           
  3138                           ;serial.c: 17:     SP4BRGL = 51;
  3139   001EB6  0E33               	movlw	51
  3140   001EB8  6FE5               	movwf	229,b	;volatile
  3141                           
  3142                           ;serial.c: 18:     SP4BRGH = 0;
  3143   001EBA  0E00               	movlw	0
  3144   001EBC  6FE6               	movwf	230,b	;volatile
  3145   001EBE                     
  3146                           ; BSR set to: 14
  3147                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3148   001EBE  89E7               	bsf	231,4,b	;volatile
  3149   001EC0                     
  3150                           ; BSR set to: 14
  3151                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3152   001EC0  8BE8               	bsf	232,5,b	;volatile
  3153   001EC2                     
  3154                           ; BSR set to: 14
  3155                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3156   001EC2  8FE7               	bsf	231,7,b	;volatile
  3157   001EC4                     
  3158                           ; BSR set to: 14
  3159   001EC4  0012               	return		;funcret
  3160   001EC6                     __end_of_initUSART4:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function _initDCmotorsPWM *****************
  3164 ;; Defined at:
  3165 ;;		line 6 in file "dc_motor.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;Total ram usage:        0 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 4
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text18
  3194   00186E                     __ptext18:
  3195                           	callstack 0
  3196   00186E                     _initDCmotorsPWM:
  3197                           	callstack 26
  3198   00186E                     
  3199                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3200   00186E  9485               	bcf	133,2,c	;volatile
  3201                           
  3202                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3203   001870  9885               	bcf	133,4,c	;volatile
  3204                           
  3205                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3206   001872  9E83               	bcf	131,7,c	;volatile
  3207                           
  3208                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3209   001874  9C87               	bcf	135,6,c	;volatile
  3210   001876                     
  3211                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3212   001876  0E05               	movlw	5
  3213   001878  010E               	movlb	14	; () banked
  3214   00187A  6F74               	movwf	116,b	;volatile
  3215                           
  3216                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3217   00187C  0E06               	movlw	6
  3218   00187E  6F76               	movwf	118,b	;volatile
  3219                           
  3220                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3221   001880  0E07               	movlw	7
  3222   001882  6F69               	movwf	105,b	;volatile
  3223                           
  3224                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3225   001884  0E08               	movlw	8
  3226   001886  6F88               	movwf	136,b	;volatile
  3227                           
  3228                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3229   001888  50BD               	movf	189,w,c	;volatile
  3230   00188A  0B8F               	andlw	-113
  3231   00188C  0940               	iorlw	64
  3232   00188E  6EBD               	movwf	189,c	;volatile
  3233                           
  3234                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3235   001890  0EE0               	movlw	-32
  3236   001892  16BE               	andwf	190,f,c	;volatile
  3237                           
  3238                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3239   001894  50BF               	movf	191,w,c	;volatile
  3240   001896  0BF0               	andlw	-16
  3241   001898  0901               	iorlw	1
  3242   00189A  6EBF               	movwf	191,c	;volatile
  3243                           
  3244                           ;dc_motor.c: 26:     T2PR=99;
  3245   00189C  0E63               	movlw	99
  3246   00189E  6EBC               	movwf	188,c	;volatile
  3247   0018A0                     
  3248                           ; BSR set to: 14
  3249                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3250   0018A0  8EBD               	bsf	189,7,c	;volatile
  3251                           
  3252                           ;dc_motor.c: 31:     CCPR1H=0;
  3253   0018A2  0E00               	movlw	0
  3254   0018A4  6EAA               	movwf	170,c	;volatile
  3255                           
  3256                           ;dc_motor.c: 32:     CCPR2H=0;
  3257   0018A6  0E00               	movlw	0
  3258   0018A8  6EA6               	movwf	166,c	;volatile
  3259                           
  3260                           ;dc_motor.c: 33:     CCPR3H=0;
  3261   0018AA  0E00               	movlw	0
  3262   0018AC  010F               	movlb	15	; () banked
  3263   0018AE  6F25               	movwf	37,b	;volatile
  3264                           
  3265                           ;dc_motor.c: 34:     CCPR4H=0;
  3266   0018B0  0E00               	movlw	0
  3267   0018B2  6F21               	movwf	33,b	;volatile
  3268                           
  3269                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3270   0018B4  0EFC               	movlw	-4
  3271   0018B6  16AD               	andwf	173,f,c	;volatile
  3272                           
  3273                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3274   0018B8  0EF3               	movlw	-13
  3275   0018BA  16AD               	andwf	173,f,c	;volatile
  3276                           
  3277                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3278   0018BC  0ECF               	movlw	-49
  3279   0018BE  16AD               	andwf	173,f,c	;volatile
  3280                           
  3281                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3282   0018C0  0E3F               	movlw	-193
  3283   0018C2  16AD               	andwf	173,f,c	;volatile
  3284   0018C4                     
  3285                           ; BSR set to: 15
  3286                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3287   0018C4  88AB               	bsf	171,4,c	;volatile
  3288                           
  3289                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3290   0018C6  50AB               	movf	171,w,c	;volatile
  3291   0018C8  0BF0               	andlw	-16
  3292   0018CA  090C               	iorlw	12
  3293   0018CC  6EAB               	movwf	171,c	;volatile
  3294   0018CE                     
  3295                           ; BSR set to: 15
  3296                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3297   0018CE  8EAB               	bsf	171,7,c	;volatile
  3298   0018D0                     
  3299                           ; BSR set to: 15
  3300                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3301   0018D0  88A7               	bsf	167,4,c	;volatile
  3302                           
  3303                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3304   0018D2  50A7               	movf	167,w,c	;volatile
  3305   0018D4  0BF0               	andlw	-16
  3306   0018D6  090C               	iorlw	12
  3307   0018D8  6EA7               	movwf	167,c	;volatile
  3308   0018DA                     
  3309                           ; BSR set to: 15
  3310                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3311   0018DA  8EA7               	bsf	167,7,c	;volatile
  3312   0018DC                     
  3313                           ; BSR set to: 15
  3314                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3315   0018DC  8926               	bsf	38,4,b	;volatile
  3316                           
  3317                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3318   0018DE  5126               	movf	38,w,b	;volatile
  3319   0018E0  0BF0               	andlw	-16
  3320   0018E2  090C               	iorlw	12
  3321   0018E4  6F26               	movwf	38,b	;volatile
  3322   0018E6                     
  3323                           ; BSR set to: 15
  3324                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3325   0018E6  8F26               	bsf	38,7,b	;volatile
  3326   0018E8                     
  3327                           ; BSR set to: 15
  3328                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3329   0018E8  8922               	bsf	34,4,b	;volatile
  3330                           
  3331                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3332   0018EA  5122               	movf	34,w,b	;volatile
  3333   0018EC  0BF0               	andlw	-16
  3334   0018EE  090C               	iorlw	12
  3335   0018F0  6F22               	movwf	34,b	;volatile
  3336   0018F2                     
  3337                           ; BSR set to: 15
  3338                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3339   0018F2  8F22               	bsf	34,7,b	;volatile
  3340   0018F4                     
  3341                           ; BSR set to: 15
  3342   0018F4  0012               	return		;funcret
  3343   0018F6                     __end_of_initDCmotorsPWM:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function _color_read_Red *****************
  3347 ;; Defined at:
  3348 ;;		line 29 in file "color.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  tmp             2   13[COMRAM] unsigned int 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  2    8[COMRAM] unsigned int 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3364 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;Total ram usage:        7 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 6
  3369 ;; This function calls:
  3370 ;;		_I2C_2_Master_Read
  3371 ;;		_I2C_2_Master_RepStart
  3372 ;;		_I2C_2_Master_Start
  3373 ;;		_I2C_2_Master_Stop
  3374 ;;		_I2C_2_Master_Write
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;;		_collect_avg_readings
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text19
  3382   001AF2                     __ptext19:
  3383                           	callstack 0
  3384   001AF2                     _color_read_Red:
  3385                           	callstack 24
  3386   001AF2                     
  3387                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  3388   001AF2  ECBC  F00F         	call	_I2C_2_Master_Start	;wreg free
  3389                           
  3390                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  3391   001AF6  0E52               	movlw	82
  3392   001AF8  ECA6  F00F         	call	_I2C_2_Master_Write
  3393                           
  3394                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  3395   001AFC  0EB6               	movlw	182
  3396   001AFE  ECA6  F00F         	call	_I2C_2_Master_Write
  3397                           
  3398                           ;color.c: 35:  I2C_2_Master_RepStart();
  3399   001B02  ECB2  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3400                           
  3401                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  3402   001B06  0E53               	movlw	83
  3403   001B08  ECA6  F00F         	call	_I2C_2_Master_Write
  3404                           
  3405                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  3406   001B0C  0E01               	movlw	1
  3407   001B0E  EC60  F00E         	call	_I2C_2_Master_Read
  3408   001B12  6E0B               	movwf	??_color_read_Red^0,c
  3409   001B14  500B               	movf	??_color_read_Red^0,w,c
  3410   001B16  6E0E               	movwf	color_read_Red@tmp^0,c
  3411   001B18  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  3412                           
  3413                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3414   001B1A  0E00               	movlw	0
  3415   001B1C  EC60  F00E         	call	_I2C_2_Master_Read
  3416   001B20  6E0B               	movwf	??_color_read_Red^0,c
  3417   001B22  500B               	movf	??_color_read_Red^0,w,c
  3418   001B24  6E0D               	movwf	(??_color_read_Red+2)^0,c
  3419   001B26  6A0C               	clrf	(??_color_read_Red+1)^0,c
  3420   001B28  500E               	movf	color_read_Red@tmp^0,w,c
  3421   001B2A  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  3422   001B2C  6E0E               	movwf	color_read_Red@tmp^0,c
  3423   001B2E  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  3424   001B30  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  3425   001B32  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  3426                           
  3427                           ;color.c: 39:  I2C_2_Master_Stop();
  3428   001B34  ECB7  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3429   001B38                     
  3430                           ;color.c: 40:  return tmp;
  3431   001B38  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  3432   001B3C  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3433   001B40  0012               	return		;funcret
  3434   001B42                     __end_of_color_read_Red:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function _color_read_Green *****************
  3438 ;; Defined at:
  3439 ;;		line 43 in file "color.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  tmp             2   13[COMRAM] unsigned int 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  2    8[COMRAM] unsigned int 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3456 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3457 ;;Total ram usage:        7 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; Hardware stack levels required when called: 6
  3460 ;; This function calls:
  3461 ;;		_I2C_2_Master_Read
  3462 ;;		_I2C_2_Master_RepStart
  3463 ;;		_I2C_2_Master_Start
  3464 ;;		_I2C_2_Master_Stop
  3465 ;;		_I2C_2_Master_Write
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;;		_collect_avg_readings
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text20
  3473   001B42                     __ptext20:
  3474                           	callstack 0
  3475   001B42                     _color_read_Green:
  3476                           	callstack 24
  3477   001B42                     
  3478                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  3479   001B42  ECBC  F00F         	call	_I2C_2_Master_Start	;wreg free
  3480                           
  3481                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3482   001B46  0E52               	movlw	82
  3483   001B48  ECA6  F00F         	call	_I2C_2_Master_Write
  3484                           
  3485                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  3486   001B4C  0EB8               	movlw	184
  3487   001B4E  ECA6  F00F         	call	_I2C_2_Master_Write
  3488                           
  3489                           ;color.c: 49:  I2C_2_Master_RepStart();
  3490   001B52  ECB2  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3491                           
  3492                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3493   001B56  0E53               	movlw	83
  3494   001B58  ECA6  F00F         	call	_I2C_2_Master_Write
  3495                           
  3496                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  3497   001B5C  0E01               	movlw	1
  3498   001B5E  EC60  F00E         	call	_I2C_2_Master_Read
  3499   001B62  6E0B               	movwf	??_color_read_Green^0,c
  3500   001B64  500B               	movf	??_color_read_Green^0,w,c
  3501   001B66  6E0E               	movwf	color_read_Green@tmp^0,c
  3502   001B68  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  3503                           
  3504                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3505   001B6A  0E00               	movlw	0
  3506   001B6C  EC60  F00E         	call	_I2C_2_Master_Read
  3507   001B70  6E0B               	movwf	??_color_read_Green^0,c
  3508   001B72  500B               	movf	??_color_read_Green^0,w,c
  3509   001B74  6E0D               	movwf	(??_color_read_Green+2)^0,c
  3510   001B76  6A0C               	clrf	(??_color_read_Green+1)^0,c
  3511   001B78  500E               	movf	color_read_Green@tmp^0,w,c
  3512   001B7A  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  3513   001B7C  6E0E               	movwf	color_read_Green@tmp^0,c
  3514   001B7E  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  3515   001B80  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  3516   001B82  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  3517                           
  3518                           ;color.c: 53:  I2C_2_Master_Stop();
  3519   001B84  ECB7  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3520   001B88                     
  3521                           ;color.c: 54:  return tmp;
  3522   001B88  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  3523   001B8C  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3524   001B90  0012               	return		;funcret
  3525   001B92                     __end_of_color_read_Green:
  3526                           	callstack 0
  3527                           
  3528 ;; *************** function _color_read_Clear *****************
  3529 ;; Defined at:
  3530 ;;		line 71 in file "color.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  tmp             2   13[COMRAM] unsigned int 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  2    8[COMRAM] unsigned int 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;Total ram usage:        7 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; Hardware stack levels required when called: 6
  3551 ;; This function calls:
  3552 ;;		_I2C_2_Master_Read
  3553 ;;		_I2C_2_Master_RepStart
  3554 ;;		_I2C_2_Master_Start
  3555 ;;		_I2C_2_Master_Stop
  3556 ;;		_I2C_2_Master_Write
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text21
  3563   001B92                     __ptext21:
  3564                           	callstack 0
  3565   001B92                     _color_read_Clear:
  3566                           	callstack 24
  3567   001B92                     
  3568                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3569   001B92  ECBC  F00F         	call	_I2C_2_Master_Start	;wreg free
  3570                           
  3571                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3572   001B96  0E52               	movlw	82
  3573   001B98  ECA6  F00F         	call	_I2C_2_Master_Write
  3574                           
  3575                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  3576   001B9C  0EB4               	movlw	180
  3577   001B9E  ECA6  F00F         	call	_I2C_2_Master_Write
  3578                           
  3579                           ;color.c: 77:  I2C_2_Master_RepStart();
  3580   001BA2  ECB2  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3581                           
  3582                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3583   001BA6  0E53               	movlw	83
  3584   001BA8  ECA6  F00F         	call	_I2C_2_Master_Write
  3585                           
  3586                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  3587   001BAC  0E01               	movlw	1
  3588   001BAE  EC60  F00E         	call	_I2C_2_Master_Read
  3589   001BB2  6E0B               	movwf	??_color_read_Clear^0,c
  3590   001BB4  500B               	movf	??_color_read_Clear^0,w,c
  3591   001BB6  6E0E               	movwf	color_read_Clear@tmp^0,c
  3592   001BB8  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3593                           
  3594                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3595   001BBA  0E00               	movlw	0
  3596   001BBC  EC60  F00E         	call	_I2C_2_Master_Read
  3597   001BC0  6E0B               	movwf	??_color_read_Clear^0,c
  3598   001BC2  500B               	movf	??_color_read_Clear^0,w,c
  3599   001BC4  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3600   001BC6  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3601   001BC8  500E               	movf	color_read_Clear@tmp^0,w,c
  3602   001BCA  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3603   001BCC  6E0E               	movwf	color_read_Clear@tmp^0,c
  3604   001BCE  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3605   001BD0  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3606   001BD2  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3607                           
  3608                           ;color.c: 81:  I2C_2_Master_Stop();
  3609   001BD4  ECB7  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3610   001BD8                     
  3611                           ;color.c: 82:  return tmp;
  3612   001BD8  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3613   001BDC  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3614   001BE0  0012               	return		;funcret
  3615   001BE2                     __end_of_color_read_Clear:
  3616                           	callstack 0
  3617                           
  3618 ;; *************** function _color_read_Blue *****************
  3619 ;; Defined at:
  3620 ;;		line 57 in file "color.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  tmp             2   13[COMRAM] unsigned int 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  2    8[COMRAM] unsigned int 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;Total ram usage:        7 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; Hardware stack levels required when called: 6
  3641 ;; This function calls:
  3642 ;;		_I2C_2_Master_Read
  3643 ;;		_I2C_2_Master_RepStart
  3644 ;;		_I2C_2_Master_Start
  3645 ;;		_I2C_2_Master_Stop
  3646 ;;		_I2C_2_Master_Write
  3647 ;; This function is called by:
  3648 ;;		_main
  3649 ;;		_collect_avg_readings
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text22
  3654   001BE2                     __ptext22:
  3655                           	callstack 0
  3656   001BE2                     _color_read_Blue:
  3657                           	callstack 24
  3658   001BE2                     
  3659                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  3660   001BE2  ECBC  F00F         	call	_I2C_2_Master_Start	;wreg free
  3661                           
  3662                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  3663   001BE6  0E52               	movlw	82
  3664   001BE8  ECA6  F00F         	call	_I2C_2_Master_Write
  3665                           
  3666                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  3667   001BEC  0EBA               	movlw	186
  3668   001BEE  ECA6  F00F         	call	_I2C_2_Master_Write
  3669                           
  3670                           ;color.c: 63:  I2C_2_Master_RepStart();
  3671   001BF2  ECB2  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3672                           
  3673                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  3674   001BF6  0E53               	movlw	83
  3675   001BF8  ECA6  F00F         	call	_I2C_2_Master_Write
  3676                           
  3677                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  3678   001BFC  0E01               	movlw	1
  3679   001BFE  EC60  F00E         	call	_I2C_2_Master_Read
  3680   001C02  6E0B               	movwf	??_color_read_Blue^0,c
  3681   001C04  500B               	movf	??_color_read_Blue^0,w,c
  3682   001C06  6E0E               	movwf	color_read_Blue@tmp^0,c
  3683   001C08  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3684                           
  3685                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3686   001C0A  0E00               	movlw	0
  3687   001C0C  EC60  F00E         	call	_I2C_2_Master_Read
  3688   001C10  6E0B               	movwf	??_color_read_Blue^0,c
  3689   001C12  500B               	movf	??_color_read_Blue^0,w,c
  3690   001C14  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3691   001C16  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3692   001C18  500E               	movf	color_read_Blue@tmp^0,w,c
  3693   001C1A  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3694   001C1C  6E0E               	movwf	color_read_Blue@tmp^0,c
  3695   001C1E  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3696   001C20  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3697   001C22  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3698                           
  3699                           ;color.c: 67:  I2C_2_Master_Stop();
  3700   001C24  ECB7  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3701   001C28                     
  3702                           ;color.c: 68:  return tmp;
  3703   001C28  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3704   001C2C  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3705   001C30  0012               	return		;funcret
  3706   001C32                     __end_of_color_read_Blue:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _I2C_2_Master_RepStart *****************
  3710 ;; Defined at:
  3711 ;;		line 33 in file "i2c.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0, cstack
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used: 1
  3731 ;; Hardware stack levels required when called: 5
  3732 ;; This function calls:
  3733 ;;		_I2C_2_Master_Idle
  3734 ;; This function is called by:
  3735 ;;		_color_read_Red
  3736 ;;		_color_read_Green
  3737 ;;		_color_read_Blue
  3738 ;;		_color_read_Clear
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text23
  3743   001F64                     __ptext23:
  3744                           	callstack 0
  3745   001F64                     _I2C_2_Master_RepStart:
  3746                           	callstack 24
  3747   001F64                     
  3748                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3749   001F64  EC07  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3750   001F68                     
  3751                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3752   001F68  010E               	movlb	14	; () banked
  3753   001F6A  83DA               	bsf	218,1,b	;volatile
  3754   001F6C                     
  3755                           ; BSR set to: 14
  3756   001F6C  0012               	return		;funcret
  3757   001F6E                     __end_of_I2C_2_Master_RepStart:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _I2C_2_Master_Read *****************
  3761 ;; Defined at:
  3762 ;;		line 51 in file "i2c.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  ack             1    wreg     unsigned char 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  ack             1    6[COMRAM] unsigned char 
  3767 ;;  tmp             1    7[COMRAM] unsigned char 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      unsigned char 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3780 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3781 ;;Total ram usage:        3 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 5
  3784 ;; This function calls:
  3785 ;;		_I2C_2_Master_Idle
  3786 ;; This function is called by:
  3787 ;;		_color_read_Red
  3788 ;;		_color_read_Green
  3789 ;;		_color_read_Blue
  3790 ;;		_color_read_Clear
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text24
  3795   001CC0                     __ptext24:
  3796                           	callstack 0
  3797   001CC0                     _I2C_2_Master_Read:
  3798                           	callstack 24
  3799                           
  3800                           ; BSR set to: 14
  3801                           ;incstack = 0
  3802                           ;I2C_2_Master_Read@ack stored from wreg
  3803   001CC0  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3804   001CC2                     
  3805                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3806   001CC2  EC07  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3807   001CC6                     
  3808                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3809   001CC6  010E               	movlb	14	; () banked
  3810   001CC8  87DA               	bsf	218,3,b	;volatile
  3811                           
  3812                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3813   001CCA  EC07  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3814   001CCE                     
  3815                           ;i2c.c: 57:   tmp = SSP2BUF;
  3816   001CCE  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3817                           
  3818                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3819   001CD2  EC07  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3820   001CD6                     
  3821                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3822   001CD6  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3823   001CD8  B4D8               	btfsc	status,2,c
  3824   001CDA  EF71  F00E         	goto	u1171
  3825   001CDE  EF75  F00E         	goto	u1170
  3826   001CE2                     u1171:
  3827   001CE2  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3828   001CE4  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3829   001CE6  EF76  F00E         	goto	u1188
  3830   001CEA                     u1170:
  3831   001CEA  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3832   001CEC                     u1188:
  3833   001CEC  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3834   001CEE  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3835   001CF0  010E               	movlb	14	; () banked
  3836   001CF2  51DA               	movf	218,w,b	;volatile
  3837   001CF4  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3838   001CF6  0BDF               	andlw	-33
  3839   001CF8  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3840   001CFA  6FDA               	movwf	218,b	;volatile
  3841   001CFC                     
  3842                           ; BSR set to: 14
  3843                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3844   001CFC  89DA               	bsf	218,4,b	;volatile
  3845   001CFE                     
  3846                           ; BSR set to: 14
  3847                           ;i2c.c: 61:   return tmp;
  3848   001CFE  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3849   001D00                     
  3850                           ; BSR set to: 14
  3851   001D00  0012               	return		;funcret
  3852   001D02                     __end_of_I2C_2_Master_Read:
  3853                           	callstack 0
  3854                           
  3855 ;; *************** function _color_click_init *****************
  3856 ;; Defined at:
  3857 ;;		line 5 in file "color.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;Total ram usage:        1 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 7
  3878 ;; This function calls:
  3879 ;;		_I2C_2_Master_Init
  3880 ;;		_color_writetoaddr
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text25
  3887   001D80                     __ptext25:
  3888                           	callstack 0
  3889   001D80                     _color_click_init:
  3890                           	callstack 23
  3891   001D80                     
  3892                           ;color.c: 8:     I2C_2_Master_Init();
  3893   001D80  ECF2  F00E         	call	_I2C_2_Master_Init	;wreg free
  3894   001D84                     
  3895                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3896   001D84  0E01               	movlw	1
  3897   001D86  6E07               	movwf	color_writetoaddr@value^0,c
  3898   001D88  0E00               	movlw	0
  3899   001D8A  EC63  F00F         	call	_color_writetoaddr
  3900   001D8E                     
  3901                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3902   001D8E  0E3F               	movlw	63
  3903   001D90  6E09               	movwf	??_color_click_init^0,c
  3904   001D92  0E55               	movlw	85
  3905   001D94                     u1927:
  3906   001D94  2EE8               	decfsz	wreg,f,c
  3907   001D96  D7FE               	bra	u1927
  3908   001D98  2E09               	decfsz	??_color_click_init^0,f,c
  3909   001D9A  D7FC               	bra	u1927
  3910   001D9C  F000               	nop	
  3911   001D9E                     
  3912                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3913   001D9E  0E03               	movlw	3
  3914   001DA0  6E07               	movwf	color_writetoaddr@value^0,c
  3915   001DA2  0E00               	movlw	0
  3916   001DA4  EC63  F00F         	call	_color_writetoaddr
  3917   001DA8                     
  3918                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3919   001DA8  0ED5               	movlw	213
  3920   001DAA  6E07               	movwf	color_writetoaddr@value^0,c
  3921   001DAC  0E01               	movlw	1
  3922   001DAE  EC63  F00F         	call	_color_writetoaddr
  3923   001DB2  0012               	return		;funcret
  3924   001DB4                     __end_of_color_click_init:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _I2C_2_Master_Init *****************
  3928 ;; Defined at:
  3929 ;;		line 4 in file "i2c.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;		None
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;Total ram usage:        0 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 4
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_color_click_init
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text26
  3959   001DE4                     __ptext26:
  3960                           	callstack 0
  3961   001DE4                     _I2C_2_Master_Init:
  3962                           	callstack 25
  3963   001DE4                     
  3964                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3965   001DE4  010E               	movlb	14	; () banked
  3966   001DE6  51D9               	movf	217,w,b	;volatile
  3967   001DE8  0BF0               	andlw	-16
  3968   001DEA  0908               	iorlw	8
  3969   001DEC  6FD9               	movwf	217,b	;volatile
  3970   001DEE                     
  3971                           ; BSR set to: 14
  3972                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3973   001DEE  8BD9               	bsf	217,5,b	;volatile
  3974                           
  3975                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3976   001DF0  0E9F               	movlw	159
  3977   001DF2  6FD6               	movwf	214,b	;volatile
  3978   001DF4                     
  3979                           ; BSR set to: 14
  3980                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3981   001DF4  8A84               	bsf	132,5,c	;volatile
  3982   001DF6                     
  3983                           ; BSR set to: 14
  3984                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3985   001DF6  8C84               	bsf	132,6,c	;volatile
  3986   001DF8                     
  3987                           ; BSR set to: 14
  3988                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3989   001DF8  9BA7               	bcf	167,5,b	;volatile
  3990   001DFA                     
  3991                           ; BSR set to: 14
  3992                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3993   001DFA  9DA7               	bcf	167,6,b	;volatile
  3994                           
  3995                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3996   001DFC  0E1D               	movlw	29
  3997   001DFE  6F1D               	movwf	29,b	;volatile
  3998                           
  3999                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4000   001E00  0E1E               	movlw	30
  4001   001E02  6F1C               	movwf	28,b	;volatile
  4002                           
  4003                           ;i2c.c: 18:   RD5PPS=0x1C;
  4004   001E04  0E1C               	movlw	28
  4005   001E06  6F6F               	movwf	111,b	;volatile
  4006                           
  4007                           ;i2c.c: 19:   RD6PPS=0x1B;
  4008   001E08  0E1B               	movlw	27
  4009   001E0A  6F70               	movwf	112,b	;volatile
  4010   001E0C                     
  4011                           ; BSR set to: 14
  4012   001E0C  0012               	return		;funcret
  4013   001E0E                     __end_of_I2C_2_Master_Init:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _LEDSon_init *****************
  4017 ;; Defined at:
  4018 ;;		line 18 in file "LEDsOn.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		None
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 4
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text27
  4047   001E84                     __ptext27:
  4048                           	callstack 0
  4049   001E84                     _LEDSon_init:
  4050                           	callstack 26
  4051   001E84                     
  4052                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  4053   001E84  9288               	bcf	136,1,c	;volatile
  4054                           
  4055                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  4056   001E86  9088               	bcf	136,0,c	;volatile
  4057                           
  4058                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  4059   001E88  9884               	bcf	132,4,c	;volatile
  4060                           
  4061                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  4062   001E8A  9684               	bcf	132,3,c	;volatile
  4063                           
  4064                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  4065   001E8C  9086               	bcf	134,0,c	;volatile
  4066                           
  4067                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  4068   001E8E  9287               	bcf	135,1,c	;volatile
  4069                           
  4070                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  4071   001E90  9E86               	bcf	134,7,c	;volatile
  4072                           
  4073                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  4074   001E92  9881               	bcf	129,4,c	;volatile
  4075                           
  4076                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  4077   001E94  8E7E               	bsf	126,7,c	;volatile
  4078                           
  4079                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  4080   001E96  827F               	bsf	127,1,c	;volatile
  4081                           
  4082                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  4083   001E98  8879               	bsf	121,4,c	;volatile
  4084                           
  4085                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  4086   001E9A  987C               	bcf	124,4,c	;volatile
  4087                           
  4088                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  4089   001E9C  9280               	bcf	128,1,c	;volatile
  4090                           
  4091                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  4092   001E9E  907E               	bcf	126,0,c	;volatile
  4093                           
  4094                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  4095   001EA0  9080               	bcf	128,0,c	;volatile
  4096                           
  4097                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  4098   001EA2  967C               	bcf	124,3,c	;volatile
  4099   001EA4  0012               	return		;funcret
  4100   001EA6                     __end_of_LEDSon_init:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _Interrupts_init *****************
  4104 ;; Defined at:
  4105 ;;		line 7 in file "interrupts.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4123 ;;Total ram usage:        0 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 8
  4126 ;; This function calls:
  4127 ;;		_enable_color_interrupt
  4128 ;;		_set_interrupt_threshold
  4129 ;; This function is called by:
  4130 ;;		_main
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text28
  4135   001D42                     __ptext28:
  4136                           	callstack 0
  4137   001D42                     _Interrupts_init:
  4138                           	callstack 22
  4139   001D42                     
  4140                           ;interrupts.c: 10:     enable_color_interrupt();
  4141   001D42  EC9E  F00F         	call	_enable_color_interrupt	;wreg free
  4142                           
  4143                           ;interrupts.c: 11:     set_interrupt_threshold(1, 2000, 0b0100);
  4144   001D46  0E00               	movlw	0
  4145   001D48  6E0A               	movwf	(set_interrupt_threshold@AILT+1)^0,c
  4146   001D4A  0E01               	movlw	1
  4147   001D4C  6E09               	movwf	set_interrupt_threshold@AILT^0,c
  4148   001D4E  0E07               	movlw	7
  4149   001D50  6E0C               	movwf	(set_interrupt_threshold@AIHT+1)^0,c
  4150   001D52  0ED0               	movlw	208
  4151   001D54  6E0B               	movwf	set_interrupt_threshold@AIHT^0,c
  4152   001D56  0E00               	movlw	0
  4153   001D58  6E0E               	movwf	(set_interrupt_threshold@persistence+1)^0,c
  4154   001D5A  0E04               	movlw	4
  4155   001D5C  6E0D               	movwf	set_interrupt_threshold@persistence^0,c
  4156   001D5E  ECF2  F00C         	call	_set_interrupt_threshold	;wreg free
  4157   001D62                     
  4158                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 0;
  4159   001D62  9282               	bcf	130,1,c	;volatile
  4160   001D64                     
  4161                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  4162   001D64  010E               	movlb	14	; () banked
  4163   001D66  939A               	bcf	154,1,b	;volatile
  4164   001D68                     
  4165                           ; BSR set to: 14
  4166                           ;interrupts.c: 15:     INT1PPS=0x09;
  4167   001D68  0E09               	movlw	9
  4168   001D6A  010D               	movlb	13	; () banked
  4169   001D6C  6FF1               	movwf	241,b	;volatile
  4170   001D6E                     
  4171                           ; BSR set to: 13
  4172                           ;interrupts.c: 16:     PIE0bits.INT1IE = 1;
  4173   001D6E  010E               	movlb	14	; () banked
  4174   001D70  8329               	bsf	41,1,b	;volatile
  4175   001D72                     
  4176                           ; BSR set to: 14
  4177                           ;interrupts.c: 17:     IPR0bits.INT1IP = 1;
  4178   001D72  831F               	bsf	31,1,b	;volatile
  4179   001D74                     
  4180                           ; BSR set to: 14
  4181                           ;interrupts.c: 18:     INTCONbits.INT1EDG = 0;
  4182   001D74  92F2               	bcf	242,1,c	;volatile
  4183   001D76                     
  4184                           ; BSR set to: 14
  4185                           ;interrupts.c: 19:     INTCONbits.PEIE=1;
  4186   001D76  8CF2               	bsf	242,6,c	;volatile
  4187   001D78                     
  4188                           ; BSR set to: 14
  4189                           ;interrupts.c: 20:     INTCONbits.IPEN = 1;
  4190   001D78  8AF2               	bsf	242,5,c	;volatile
  4191   001D7A                     
  4192                           ; BSR set to: 14
  4193                           ;interrupts.c: 35:     INTCONbits.GIEL = 1;
  4194   001D7A  8CF2               	bsf	242,6,c	;volatile
  4195   001D7C                     
  4196                           ; BSR set to: 14
  4197                           ;interrupts.c: 36:     INTCONbits.GIEH=1;}
  4198   001D7C  8EF2               	bsf	242,7,c	;volatile
  4199   001D7E                     
  4200                           ; BSR set to: 14
  4201   001D7E  0012               	return		;funcret
  4202   001D80                     __end_of_Interrupts_init:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function _set_interrupt_threshold *****************
  4206 ;; Defined at:
  4207 ;;		line 59 in file "interrupts.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  AILT            2    8[COMRAM] unsigned int 
  4210 ;;  AIHT            2   10[COMRAM] unsigned int 
  4211 ;;  persistence     2   12[COMRAM] unsigned int 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4223 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4227 ;;Total ram usage:        8 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; Hardware stack levels required when called: 7
  4230 ;; This function calls:
  4231 ;;		_color_writetoaddr
  4232 ;; This function is called by:
  4233 ;;		_Interrupts_init
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text29
  4238   0019E4                     __ptext29:
  4239                           	callstack 0
  4240   0019E4                     _set_interrupt_threshold:
  4241                           	callstack 22
  4242   0019E4                     
  4243                           ;interrupts.c: 61:     color_writetoaddr(0x0C, persistence);
  4244   0019E4  C00D  F007         	movff	set_interrupt_threshold@persistence,color_writetoaddr@value
  4245   0019E8  0E0C               	movlw	12
  4246   0019EA  EC63  F00F         	call	_color_writetoaddr
  4247                           
  4248                           ;interrupts.c: 62:     color_writetoaddr(0x05, AILT >> 8);
  4249   0019EE  500A               	movf	(set_interrupt_threshold@AILT+1)^0,w,c
  4250   0019F0  6E07               	movwf	color_writetoaddr@value^0,c
  4251   0019F2  0E05               	movlw	5
  4252   0019F4  EC63  F00F         	call	_color_writetoaddr
  4253   0019F8                     
  4254                           ;interrupts.c: 63:     color_writetoaddr(0x04, AILT && 0b0000000011111111);
  4255   0019F8  0E00               	movlw	0
  4256   0019FA  6E0F               	movwf	_set_interrupt_threshold$1926^0,c
  4257   0019FC  5009               	movf	set_interrupt_threshold@AILT^0,w,c
  4258   0019FE  100A               	iorwf	(set_interrupt_threshold@AILT+1)^0,w,c
  4259   001A00  B4D8               	btfsc	status,2,c
  4260   001A02  EF05  F00D         	goto	u1201
  4261   001A06  EF07  F00D         	goto	u1200
  4262   001A0A                     u1201:
  4263   001A0A  EF09  F00D         	goto	l2424
  4264   001A0E                     u1200:
  4265   001A0E  0E01               	movlw	1
  4266   001A10  6E0F               	movwf	_set_interrupt_threshold$1926^0,c
  4267   001A12                     l2424:
  4268   001A12  C00F  F007         	movff	_set_interrupt_threshold$1926,color_writetoaddr@value
  4269   001A16  0E04               	movlw	4
  4270   001A18  EC63  F00F         	call	_color_writetoaddr
  4271   001A1C                     
  4272                           ;interrupts.c: 64:     color_writetoaddr(0x07, AIHT >> 8);
  4273   001A1C  500C               	movf	(set_interrupt_threshold@AIHT+1)^0,w,c
  4274   001A1E  6E07               	movwf	color_writetoaddr@value^0,c
  4275   001A20  0E07               	movlw	7
  4276   001A22  EC63  F00F         	call	_color_writetoaddr
  4277                           
  4278                           ;interrupts.c: 65:     color_writetoaddr(0x06, AIHT && 0b0000000011111111);
  4279   001A26  0E00               	movlw	0
  4280   001A28  6E10               	movwf	_set_interrupt_threshold$1927^0,c
  4281   001A2A  500B               	movf	set_interrupt_threshold@AIHT^0,w,c
  4282   001A2C  100C               	iorwf	(set_interrupt_threshold@AIHT+1)^0,w,c
  4283   001A2E  B4D8               	btfsc	status,2,c
  4284   001A30  EF1C  F00D         	goto	u1211
  4285   001A34  EF1E  F00D         	goto	u1210
  4286   001A38                     u1211:
  4287   001A38  EF20  F00D         	goto	l2432
  4288   001A3C                     u1210:
  4289   001A3C  0E01               	movlw	1
  4290   001A3E  6E10               	movwf	_set_interrupt_threshold$1927^0,c
  4291   001A40                     l2432:
  4292   001A40  C010  F007         	movff	_set_interrupt_threshold$1927,color_writetoaddr@value
  4293   001A44  0E06               	movlw	6
  4294   001A46  EC63  F00F         	call	_color_writetoaddr
  4295   001A4A  0012               	return		;funcret
  4296   001A4C                     __end_of_set_interrupt_threshold:
  4297                           	callstack 0
  4298                           
  4299 ;; *************** function _enable_color_interrupt *****************
  4300 ;; Defined at:
  4301 ;;		line 54 in file "interrupts.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used: 1
  4321 ;; Hardware stack levels required when called: 7
  4322 ;; This function calls:
  4323 ;;		_clear_interrupt_flag
  4324 ;;		_color_writetoaddr
  4325 ;; This function is called by:
  4326 ;;		_Interrupts_init
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text30
  4331   001F3C                     __ptext30:
  4332                           	callstack 0
  4333   001F3C                     _enable_color_interrupt:
  4334                           	callstack 22
  4335   001F3C                     
  4336                           ;interrupts.c: 55:     clear_interrupt_flag();
  4337   001F3C  EC7F  F00F         	call	_clear_interrupt_flag	;wreg free
  4338                           
  4339                           ;interrupts.c: 56:  color_writetoaddr(0x00, 0b10011);
  4340   001F40  0E13               	movlw	19
  4341   001F42  6E07               	movwf	color_writetoaddr@value^0,c
  4342   001F44  0E00               	movlw	0
  4343   001F46  EC63  F00F         	call	_color_writetoaddr
  4344   001F4A  0012               	return		;funcret
  4345   001F4C                     __end_of_enable_color_interrupt:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function _color_writetoaddr *****************
  4349 ;; Defined at:
  4350 ;;		line 21 in file "color.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  address         1    wreg     unsigned char 
  4353 ;;  value           1    6[COMRAM] unsigned char 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  address         1    7[COMRAM] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4365 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;Total ram usage:        2 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; Hardware stack levels required when called: 6
  4372 ;; This function calls:
  4373 ;;		_I2C_2_Master_Start
  4374 ;;		_I2C_2_Master_Stop
  4375 ;;		_I2C_2_Master_Write
  4376 ;; This function is called by:
  4377 ;;		_color_click_init
  4378 ;;		_enable_color_interrupt
  4379 ;;		_set_interrupt_threshold
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text31
  4384   001EC6                     __ptext31:
  4385                           	callstack 0
  4386   001EC6                     _color_writetoaddr:
  4387                           	callstack 23
  4388                           
  4389                           ;incstack = 0
  4390                           ;color_writetoaddr@address stored from wreg
  4391   001EC6  6E08               	movwf	color_writetoaddr@address^0,c
  4392   001EC8                     
  4393                           ;color.c: 22:     I2C_2_Master_Start();
  4394   001EC8  ECBC  F00F         	call	_I2C_2_Master_Start	;wreg free
  4395                           
  4396                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4397   001ECC  0E52               	movlw	82
  4398   001ECE  ECA6  F00F         	call	_I2C_2_Master_Write
  4399                           
  4400                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4401   001ED2  5008               	movf	color_writetoaddr@address^0,w,c
  4402   001ED4  0980               	iorlw	128
  4403   001ED6  ECA6  F00F         	call	_I2C_2_Master_Write
  4404                           
  4405                           ;color.c: 25:     I2C_2_Master_Write(value);
  4406   001EDA  5007               	movf	color_writetoaddr@value^0,w,c
  4407   001EDC  ECA6  F00F         	call	_I2C_2_Master_Write
  4408                           
  4409                           ;color.c: 26:     I2C_2_Master_Stop();
  4410   001EE0  ECB7  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4411   001EE4  0012               	return		;funcret
  4412   001EE6                     __end_of_color_writetoaddr:
  4413                           	callstack 0
  4414                           
  4415 ;; *************** function _clear_interrupt_flag *****************
  4416 ;; Defined at:
  4417 ;;		line 68 in file "interrupts.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4435 ;;Total ram usage:        0 bytes
  4436 ;; Hardware stack levels used: 1
  4437 ;; Hardware stack levels required when called: 6
  4438 ;; This function calls:
  4439 ;;		_I2C_2_Master_Start
  4440 ;;		_I2C_2_Master_Stop
  4441 ;;		_I2C_2_Master_Write
  4442 ;; This function is called by:
  4443 ;;		_enable_color_interrupt
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text32
  4448   001EFE                     __ptext32:
  4449                           	callstack 0
  4450   001EFE                     _clear_interrupt_flag:
  4451                           	callstack 22
  4452   001EFE                     
  4453                           ;interrupts.c: 69:     I2C_2_Master_Start();
  4454   001EFE  ECBC  F00F         	call	_I2C_2_Master_Start	;wreg free
  4455                           
  4456                           ;interrupts.c: 70:     I2C_2_Master_Write(0x52 | 0x00);
  4457   001F02  0E52               	movlw	82
  4458   001F04  ECA6  F00F         	call	_I2C_2_Master_Write
  4459                           
  4460                           ;interrupts.c: 71:     I2C_2_Master_Write(0b11100110);
  4461   001F08  0EE6               	movlw	230
  4462   001F0A  ECA6  F00F         	call	_I2C_2_Master_Write
  4463                           
  4464                           ;interrupts.c: 72:     I2C_2_Master_Stop();
  4465   001F0E  ECB7  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4466   001F12  0012               	return		;funcret
  4467   001F14                     __end_of_clear_interrupt_flag:
  4468                           	callstack 0
  4469                           
  4470 ;; *************** function _I2C_2_Master_Write *****************
  4471 ;; Defined at:
  4472 ;;		line 45 in file "i2c.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  data_byte       1    wreg     unsigned char 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  data_byte       1    5[COMRAM] unsigned char 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;Total ram usage:        1 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 5
  4493 ;; This function calls:
  4494 ;;		_I2C_2_Master_Idle
  4495 ;; This function is called by:
  4496 ;;		_color_writetoaddr
  4497 ;;		_color_read_Red
  4498 ;;		_color_read_Green
  4499 ;;		_color_read_Blue
  4500 ;;		_color_read_Clear
  4501 ;;		_clear_interrupt_flag
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text33
  4506   001F4C                     __ptext33:
  4507                           	callstack 0
  4508   001F4C                     _I2C_2_Master_Write:
  4509                           	callstack 24
  4510                           
  4511                           ;incstack = 0
  4512                           ;I2C_2_Master_Write@data_byte stored from wreg
  4513   001F4C  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  4514   001F4E                     
  4515                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4516   001F4E  EC07  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4517   001F52                     
  4518                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4519   001F52  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4520   001F56  0012               	return		;funcret
  4521   001F58                     __end_of_I2C_2_Master_Write:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _I2C_2_Master_Stop *****************
  4525 ;; Defined at:
  4526 ;;		line 39 in file "i2c.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 5
  4547 ;; This function calls:
  4548 ;;		_I2C_2_Master_Idle
  4549 ;; This function is called by:
  4550 ;;		_color_writetoaddr
  4551 ;;		_color_read_Red
  4552 ;;		_color_read_Green
  4553 ;;		_color_read_Blue
  4554 ;;		_color_read_Clear
  4555 ;;		_clear_interrupt_flag
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text34
  4560   001F6E                     __ptext34:
  4561                           	callstack 0
  4562   001F6E                     _I2C_2_Master_Stop:
  4563                           	callstack 24
  4564   001F6E                     
  4565                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4566   001F6E  EC07  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4567   001F72                     
  4568                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4569   001F72  010E               	movlb	14	; () banked
  4570   001F74  85DA               	bsf	218,2,b	;volatile
  4571   001F76                     
  4572                           ; BSR set to: 14
  4573   001F76  0012               	return		;funcret
  4574   001F78                     __end_of_I2C_2_Master_Stop:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _I2C_2_Master_Start *****************
  4578 ;; Defined at:
  4579 ;;		line 27 in file "i2c.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 5
  4600 ;; This function calls:
  4601 ;;		_I2C_2_Master_Idle
  4602 ;; This function is called by:
  4603 ;;		_color_writetoaddr
  4604 ;;		_color_read_Red
  4605 ;;		_color_read_Green
  4606 ;;		_color_read_Blue
  4607 ;;		_color_read_Clear
  4608 ;;		_clear_interrupt_flag
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text35
  4613   001F78                     __ptext35:
  4614                           	callstack 0
  4615   001F78                     _I2C_2_Master_Start:
  4616                           	callstack 24
  4617   001F78                     
  4618                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4619   001F78  EC07  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4620   001F7C                     
  4621                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4622   001F7C  010E               	movlb	14	; () banked
  4623   001F7E  81DA               	bsf	218,0,b	;volatile
  4624   001F80                     
  4625                           ; BSR set to: 14
  4626   001F80  0012               	return		;funcret
  4627   001F82                     __end_of_I2C_2_Master_Start:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _I2C_2_Master_Idle *****************
  4631 ;; Defined at:
  4632 ;;		line 22 in file "i2c.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;Total ram usage:        1 bytes
  4651 ;; Hardware stack levels used: 1
  4652 ;; Hardware stack levels required when called: 4
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_I2C_2_Master_Start
  4657 ;;		_I2C_2_Master_RepStart
  4658 ;;		_I2C_2_Master_Stop
  4659 ;;		_I2C_2_Master_Write
  4660 ;;		_I2C_2_Master_Read
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text36
  4665   001E0E                     __ptext36:
  4666                           	callstack 0
  4667   001E0E                     _I2C_2_Master_Idle:
  4668                           	callstack 24
  4669   001E0E                     l145:
  4670   001E0E  010E               	movlb	14	; () banked
  4671   001E10  B5D8               	btfsc	216,2,b	;volatile
  4672   001E12  EF0D  F00F         	goto	u841
  4673   001E16  EF0F  F00F         	goto	u840
  4674   001E1A                     u841:
  4675   001E1A  EF07  F00F         	goto	l145
  4676   001E1E                     u840:
  4677   001E1E                     
  4678                           ; BSR set to: 14
  4679   001E1E  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4680   001E22  0E1F               	movlw	31
  4681   001E24  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  4682   001E26  A4D8               	btfss	status,2,c
  4683   001E28  EF18  F00F         	goto	u851
  4684   001E2C  EF1A  F00F         	goto	u850
  4685   001E30                     u851:
  4686   001E30  EF07  F00F         	goto	l145
  4687   001E34                     u850:
  4688   001E34                     
  4689                           ; BSR set to: 14
  4690   001E34  0012               	return		;funcret
  4691   001E36                     __end_of_I2C_2_Master_Idle:
  4692                           	callstack 0
  4693                           
  4694 ;; *************** function _HighISR *****************
  4695 ;; Defined at:
  4696 ;;		line 40 in file "interrupts.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;Total ram usage:        2 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; Hardware stack levels required when called: 3
  4717 ;; This function calls:
  4718 ;;		i2_clear_interrupt_flag
  4719 ;; This function is called by:
  4720 ;;		Interrupt level 2
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	intcode
  4725   000008                     __pintcode:
  4726                           	callstack 0
  4727   000008                     _HighISR:
  4728                           	callstack 19
  4729                           
  4730                           ; BSR set to: 14
  4731                           ;incstack = 0
  4732   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4733   00000A                     
  4734                           ;interrupts.c: 43:     if(PIR0bits.INT1IF == 1&& response_in_progress == 0) {
  4735   00000A  010E               	movlb	14	; () banked
  4736   00000C  A333               	btfss	51,1,b	;volatile
  4737   00000E  EF0B  F000         	goto	i2u149_41
  4738   000012  EF0D  F000         	goto	i2u149_40
  4739   000016                     i2u149_41:
  4740   000016  EF39  F000         	goto	i2l468
  4741   00001A                     i2u149_40:
  4742   00001A                     
  4743                           ; BSR set to: 14
  4744   00001A  0100               	movlb	0	; () banked
  4745   00001C  51B6               	movf	_response_in_progress& (0+255),w,b
  4746   00001E  11B7               	iorwf	(_response_in_progress+1)& (0+255),w,b
  4747   000020  A4D8               	btfss	status,2,c
  4748   000022  EF15  F000         	goto	i2u150_41
  4749   000026  EF17  F000         	goto	i2u150_40
  4750   00002A                     i2u150_41:
  4751   00002A  EF39  F000         	goto	i2l468
  4752   00002E                     i2u150_40:
  4753   00002E                     
  4754                           ; BSR set to: 0
  4755                           ;interrupts.c: 44:         card_detected = 1;
  4756   00002E  0E00               	movlw	0
  4757   000030  6FB5               	movwf	(_card_detected+1)& (0+255),b
  4758   000032  0E01               	movlw	1
  4759   000034  6FB4               	movwf	_card_detected& (0+255),b
  4760   000036                     
  4761                           ; BSR set to: 0
  4762                           ;interrupts.c: 45:         LATDbits.LATD7=1;
  4763   000036  8E7C               	bsf	124,7,c	;volatile
  4764   000038                     
  4765                           ; BSR set to: 0
  4766                           ;interrupts.c: 46:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4767   000038  0E05               	movlw	5
  4768   00003A  6E04               	movwf	(??_HighISR+1)^0,c
  4769   00003C  0E0F               	movlw	15
  4770   00003E  6E03               	movwf	??_HighISR^0,c
  4771   000040  0EF1               	movlw	241
  4772   000042                     i2u193_47:
  4773   000042  2EE8               	decfsz	wreg,f,c
  4774   000044  D7FE               	bra	i2u193_47
  4775   000046  2E03               	decfsz	??_HighISR^0,f,c
  4776   000048  D7FC               	bra	i2u193_47
  4777   00004A  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4778   00004C  D7FA               	bra	i2u193_47
  4779   00004E  F000               	nop	
  4780   000050                     
  4781                           ;interrupts.c: 47:         LATDbits.LATD7=0;
  4782   000050  9E7C               	bcf	124,7,c	;volatile
  4783   000052                     
  4784                           ;interrupts.c: 48:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4785   000052  0E05               	movlw	5
  4786   000054  6E04               	movwf	(??_HighISR+1)^0,c
  4787   000056  0E0F               	movlw	15
  4788   000058  6E03               	movwf	??_HighISR^0,c
  4789   00005A  0EF1               	movlw	241
  4790   00005C                     i2u194_47:
  4791   00005C  2EE8               	decfsz	wreg,f,c
  4792   00005E  D7FE               	bra	i2u194_47
  4793   000060  2E03               	decfsz	??_HighISR^0,f,c
  4794   000062  D7FC               	bra	i2u194_47
  4795   000064  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4796   000066  D7FA               	bra	i2u194_47
  4797   000068  F000               	nop	
  4798   00006A                     
  4799                           ;interrupts.c: 49:         clear_interrupt_flag();
  4800   00006A  EC8A  F00F         	call	i2_clear_interrupt_flag	;wreg free
  4801   00006E                     
  4802                           ;interrupts.c: 50:         PIR0bits.INT1IF = 0;
  4803   00006E  010E               	movlb	14	; () banked
  4804   000070  9333               	bcf	51,1,b	;volatile
  4805   000072                     i2l468:
  4806   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4807   000074  0011               	retfie		f
  4808   000076                     __end_of_HighISR:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function i2_clear_interrupt_flag *****************
  4812 ;; Defined at:
  4813 ;;		line 68 in file "interrupts.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 2
  4834 ;; This function calls:
  4835 ;;		i2_I2C_2_Master_Start
  4836 ;;		i2_I2C_2_Master_Stop
  4837 ;;		i2_I2C_2_Master_Write
  4838 ;; This function is called by:
  4839 ;;		_HighISR
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text38
  4844   001F14                     __ptext38:
  4845                           	callstack 0
  4846   001F14                     i2_clear_interrupt_flag:
  4847                           	callstack 19
  4848   001F14                     
  4849                           ;interrupts.c: 69:     I2C_2_Master_Start();
  4850   001F14  ECC6  F00F         	call	i2_I2C_2_Master_Start	;wreg free
  4851                           
  4852                           ;interrupts.c: 70:     I2C_2_Master_Write(0x52 | 0x00);
  4853   001F18  0E52               	movlw	82
  4854   001F1A  ECAC  F00F         	call	i2_I2C_2_Master_Write
  4855                           
  4856                           ;interrupts.c: 71:     I2C_2_Master_Write(0b11100110);
  4857   001F1E  0EE6               	movlw	230
  4858   001F20  ECAC  F00F         	call	i2_I2C_2_Master_Write
  4859                           
  4860                           ;interrupts.c: 72:     I2C_2_Master_Stop();
  4861   001F24  ECC1  F00F         	call	i2_I2C_2_Master_Stop	;wreg free
  4862   001F28  0012               	return		;funcret
  4863   001F2A                     __end_ofi2_clear_interrupt_flag:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function i2_I2C_2_Master_Write *****************
  4867 ;; Defined at:
  4868 ;;		line 45 in file "i2c.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  data_byte       1    wreg     unsigned char 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  data_byte       1    1[COMRAM] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;Total ram usage:        1 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 1
  4889 ;; This function calls:
  4890 ;;		i2_I2C_2_Master_Idle
  4891 ;; This function is called by:
  4892 ;;		i2_clear_interrupt_flag
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text39
  4897   001F58                     __ptext39:
  4898                           	callstack 0
  4899   001F58                     i2_I2C_2_Master_Write:
  4900                           	callstack 19
  4901                           
  4902                           ;incstack = 0
  4903                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  4904   001F58  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  4905   001F5A                     
  4906                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4907   001F5A  EC1B  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4908   001F5E                     
  4909                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4910   001F5E  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  4911   001F62  0012               	return		;funcret
  4912   001F64                     __end_ofi2_I2C_2_Master_Write:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function i2_I2C_2_Master_Stop *****************
  4916 ;; Defined at:
  4917 ;;		line 39 in file "i2c.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used: 1
  4937 ;; Hardware stack levels required when called: 1
  4938 ;; This function calls:
  4939 ;;		i2_I2C_2_Master_Idle
  4940 ;; This function is called by:
  4941 ;;		i2_clear_interrupt_flag
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text40
  4946   001F82                     __ptext40:
  4947                           	callstack 0
  4948   001F82                     i2_I2C_2_Master_Stop:
  4949                           	callstack 19
  4950   001F82                     
  4951                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4952   001F82  EC1B  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4953   001F86                     
  4954                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4955   001F86  010E               	movlb	14	; () banked
  4956   001F88  85DA               	bsf	218,2,b	;volatile
  4957   001F8A                     
  4958                           ; BSR set to: 14
  4959   001F8A  0012               	return		;funcret
  4960   001F8C                     __end_ofi2_I2C_2_Master_Stop:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function i2_I2C_2_Master_Start *****************
  4964 ;; Defined at:
  4965 ;;		line 27 in file "i2c.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 1
  4986 ;; This function calls:
  4987 ;;		i2_I2C_2_Master_Idle
  4988 ;; This function is called by:
  4989 ;;		i2_clear_interrupt_flag
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text41
  4994   001F8C                     __ptext41:
  4995                           	callstack 0
  4996   001F8C                     i2_I2C_2_Master_Start:
  4997                           	callstack 19
  4998   001F8C                     
  4999                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5000   001F8C  EC1B  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  5001   001F90                     
  5002                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5003   001F90  010E               	movlb	14	; () banked
  5004   001F92  81DA               	bsf	218,0,b	;volatile
  5005   001F94                     
  5006                           ; BSR set to: 14
  5007   001F94  0012               	return		;funcret
  5008   001F96                     __end_ofi2_I2C_2_Master_Start:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function i2_I2C_2_Master_Idle *****************
  5012 ;; Defined at:
  5013 ;;		line 22 in file "i2c.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;Total ram usage:        1 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		i2_I2C_2_Master_Start
  5037 ;;		i2_I2C_2_Master_Stop
  5038 ;;		i2_I2C_2_Master_Write
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text42
  5043   001E36                     __ptext42:
  5044                           	callstack 0
  5045   001E36                     i2_I2C_2_Master_Idle:
  5046                           	callstack 19
  5047   001E36                     i2l145:
  5048   001E36  010E               	movlb	14	; () banked
  5049   001E38  B5D8               	btfsc	216,2,b	;volatile
  5050   001E3A  EF21  F00F         	goto	i2u115_41
  5051   001E3E  EF23  F00F         	goto	i2u115_40
  5052   001E42                     i2u115_41:
  5053   001E42  EF1B  F00F         	goto	i2l145
  5054   001E46                     i2u115_40:
  5055   001E46                     
  5056                           ; BSR set to: 14
  5057   001E46  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5058   001E4A  0E1F               	movlw	31
  5059   001E4C  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5060   001E4E  A4D8               	btfss	status,2,c
  5061   001E50  EF2C  F00F         	goto	i2u116_41
  5062   001E54  EF2E  F00F         	goto	i2u116_40
  5063   001E58                     i2u116_41:
  5064   001E58  EF1B  F00F         	goto	i2l145
  5065   001E5C                     i2u116_40:
  5066   001E5C                     
  5067                           ; BSR set to: 14
  5068   001E5C  0012               	return		;funcret
  5069   001E5E                     __end_ofi2_I2C_2_Master_Idle:
  5070                           	callstack 0
  5071                           
  5072                           	psect	rparam
  5073   000000                     
  5074                           	psect	temp
  5075   00005B                     btemp:
  5076                           	callstack 0
  5077   00005B                     	ds	1
  5078   000000                     int$flags	set	btemp
  5079   000000                     wtemp8	set	btemp+1
  5080   000000                     ttemp5	set	btemp+1
  5081   000000                     ttemp6	set	btemp+4
  5082   000000                     ttemp7	set	btemp+8
  5083                           
  5084                           	psect	idloc
  5085                           
  5086                           ;Config register IDLOC0 @ 0x200000
  5087                           ;	unspecified, using default values
  5088   200000                     	org	2097152
  5089   200000  0FFF               	dw	4095
  5090                           
  5091                           ;Config register IDLOC1 @ 0x200002
  5092                           ;	unspecified, using default values
  5093   200002                     	org	2097154
  5094   200002  0FFF               	dw	4095
  5095                           
  5096                           ;Config register IDLOC2 @ 0x200004
  5097                           ;	unspecified, using default values
  5098   200004                     	org	2097156
  5099   200004  0FFF               	dw	4095
  5100                           
  5101                           ;Config register IDLOC3 @ 0x200006
  5102                           ;	unspecified, using default values
  5103   200006                     	org	2097158
  5104   200006  0FFF               	dw	4095
  5105                           
  5106                           ;Config register IDLOC4 @ 0x200008
  5107                           ;	unspecified, using default values
  5108   200008                     	org	2097160
  5109   200008  0FFF               	dw	4095
  5110                           
  5111                           ;Config register IDLOC5 @ 0x20000A
  5112                           ;	unspecified, using default values
  5113   20000A                     	org	2097162
  5114   20000A  0FFF               	dw	4095
  5115                           
  5116                           ;Config register IDLOC6 @ 0x20000C
  5117                           ;	unspecified, using default values
  5118   20000C                     	org	2097164
  5119   20000C  0FFF               	dw	4095
  5120                           
  5121                           ;Config register IDLOC7 @ 0x20000E
  5122                           ;	unspecified, using default values
  5123   20000E                     	org	2097166
  5124   20000E  0FFF               	dw	4095
  5125                           
  5126                           	psect	config
  5127                           
  5128                           ;Config register CONFIG1L @ 0x300000
  5129                           ;	External Oscillator mode Selection bits
  5130                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5131                           ;	Power-up default value for COSC bits
  5132                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5133   300000                     	org	3145728
  5134   300000  AA                 	db	170
  5135                           
  5136                           ;Config register CONFIG1H @ 0x300001
  5137                           ;	unspecified, using default values
  5138                           ;	Clock Out Enable bit
  5139                           ;	CLKOUTEN = 0x1, unprogrammed default
  5140                           ;	Clock Switch Enable bit
  5141                           ;	CSWEN = 0x1, unprogrammed default
  5142                           ;	Fail-Safe Clock Monitor Enable bit
  5143                           ;	FCMEN = 0x1, unprogrammed default
  5144   300001                     	org	3145729
  5145   300001  FF                 	db	255
  5146                           
  5147                           ;Config register CONFIG2L @ 0x300002
  5148                           ;	unspecified, using default values
  5149                           ;	Master Clear Enable bit
  5150                           ;	MCLRE = 0x1, unprogrammed default
  5151                           ;	Power-up Timer Enable bit
  5152                           ;	PWRTE = 0x1, unprogrammed default
  5153                           ;	Low-power BOR enable bit
  5154                           ;	LPBOREN = 0x1, unprogrammed default
  5155                           ;	Brown-out Reset Enable bits
  5156                           ;	BOREN = 0x3, unprogrammed default
  5157   300002                     	org	3145730
  5158   300002  FF                 	db	255
  5159                           
  5160                           ;Config register CONFIG2H @ 0x300003
  5161                           ;	unspecified, using default values
  5162                           ;	Brown Out Reset Voltage selection bits
  5163                           ;	BORV = 0x3, unprogrammed default
  5164                           ;	ZCD Disable bit
  5165                           ;	ZCD = 0x1, unprogrammed default
  5166                           ;	PPSLOCK bit One-Way Set Enable bit
  5167                           ;	PPS1WAY = 0x1, unprogrammed default
  5168                           ;	Stack Full/Underflow Reset Enable bit
  5169                           ;	STVREN = 0x1, unprogrammed default
  5170                           ;	Debugger Enable bit
  5171                           ;	DEBUG = 0x1, unprogrammed default
  5172                           ;	Extended Instruction Set Enable bit
  5173                           ;	XINST = 0x1, unprogrammed default
  5174   300003                     	org	3145731
  5175   300003  FF                 	db	255
  5176                           
  5177                           ;Config register CONFIG3L @ 0x300004
  5178                           ;	WDT Period Select bits
  5179                           ;	WDTCPS = 0x1F, unprogrammed default
  5180                           ;	WDT operating mode
  5181                           ;	WDTE = OFF, WDT Disabled
  5182   300004                     	org	3145732
  5183   300004  9F                 	db	159
  5184                           
  5185                           ;Config register CONFIG3H @ 0x300005
  5186                           ;	unspecified, using default values
  5187                           ;	WDT Window Select bits
  5188                           ;	WDTCWS = 0x7, unprogrammed default
  5189                           ;	WDT input clock selector
  5190                           ;	WDTCCS = 0x7, unprogrammed default
  5191   300005                     	org	3145733
  5192   300005  FF                 	db	255
  5193                           
  5194                           ;Config register CONFIG4L @ 0x300006
  5195                           ;	unspecified, using default values
  5196                           ;	Write Protection Block 0
  5197                           ;	WRT0 = 0x1, unprogrammed default
  5198                           ;	Write Protection Block 1
  5199                           ;	WRT1 = 0x1, unprogrammed default
  5200                           ;	Write Protection Block 2
  5201                           ;	WRT2 = 0x1, unprogrammed default
  5202                           ;	Write Protection Block 3
  5203                           ;	WRT3 = 0x1, unprogrammed default
  5204                           ;	Write Protection Block 3
  5205                           ;	WRT4 = 0x1, unprogrammed default
  5206                           ;	Write Protection Block 3
  5207                           ;	WRT5 = 0x1, unprogrammed default
  5208                           ;	Write Protection Block 3
  5209                           ;	WRT6 = 0x1, unprogrammed default
  5210                           ;	Write Protection Block 3
  5211                           ;	WRT7 = 0x1, unprogrammed default
  5212   300006                     	org	3145734
  5213   300006  FF                 	db	255
  5214                           
  5215                           ;Config register CONFIG4H @ 0x300007
  5216                           ;	unspecified, using default values
  5217                           ;	Configuration Register Write Protection bit
  5218                           ;	WRTC = 0x1, unprogrammed default
  5219                           ;	Boot Block Write Protection bit
  5220                           ;	WRTB = 0x1, unprogrammed default
  5221                           ;	Data EEPROM Write Protection bit
  5222                           ;	WRTD = 0x1, unprogrammed default
  5223                           ;	Scanner Enable bit
  5224                           ;	SCANE = 0x1, unprogrammed default
  5225                           ;	Low Voltage Programming Enable bit
  5226                           ;	LVP = 0x1, unprogrammed default
  5227   300007                     	org	3145735
  5228   300007  FF                 	db	255
  5229                           
  5230                           ;Config register CONFIG5L @ 0x300008
  5231                           ;	unspecified, using default values
  5232                           ;	UserNVM Program Memory Code Protection bit
  5233                           ;	CP = 0x1, unprogrammed default
  5234                           ;	DataNVM Memory Code Protection bit
  5235                           ;	CPD = 0x1, unprogrammed default
  5236   300008                     	org	3145736
  5237   300008  FF                 	db	255
  5238                           
  5239                           ;Config register CONFIG5H @ 0x300009
  5240                           ;	unspecified, using default values
  5241   300009                     	org	3145737
  5242   300009  FF                 	db	255
  5243                           
  5244                           ;Config register CONFIG6L @ 0x30000A
  5245                           ;	unspecified, using default values
  5246                           ;	Table Read Protection Block 0
  5247                           ;	EBTR0 = 0x1, unprogrammed default
  5248                           ;	Table Read Protection Block 1
  5249                           ;	EBTR1 = 0x1, unprogrammed default
  5250                           ;	Table Read Protection Block 2
  5251                           ;	EBTR2 = 0x1, unprogrammed default
  5252                           ;	Table Read Protection Block 3
  5253                           ;	EBTR3 = 0x1, unprogrammed default
  5254                           ;	Table Read Protection Block 4
  5255                           ;	EBTR4 = 0x1, unprogrammed default
  5256                           ;	Table Read Protection Block 5
  5257                           ;	EBTR5 = 0x1, unprogrammed default
  5258                           ;	Table Read Protection Block 6
  5259                           ;	EBTR6 = 0x1, unprogrammed default
  5260                           ;	Table Read Protection Block 7
  5261                           ;	EBTR7 = 0x1, unprogrammed default
  5262   30000A                     	org	3145738
  5263   30000A  FF                 	db	255
  5264                           
  5265                           ;Config register CONFIG6H @ 0x30000B
  5266                           ;	unspecified, using default values
  5267                           ;	Boot Block Table Read Protection bit
  5268                           ;	EBTRB = 0x1, unprogrammed default
  5269   30000B                     	org	3145739
  5270   30000B  FF                 	db	255
  5271                           tosu	equ	0xFFF
  5272                           tosh	equ	0xFFE
  5273                           tosl	equ	0xFFD
  5274                           stkptr	equ	0xFFC
  5275                           pclatu	equ	0xFFB
  5276                           pclath	equ	0xFFA
  5277                           pcl	equ	0xFF9
  5278                           tblptru	equ	0xFF8
  5279                           tblptrh	equ	0xFF7
  5280                           tblptrl	equ	0xFF6
  5281                           tablat	equ	0xFF5
  5282                           prodh	equ	0xFF4
  5283                           prodl	equ	0xFF3
  5284                           indf0	equ	0xFEF
  5285                           postinc0	equ	0xFEE
  5286                           postdec0	equ	0xFED
  5287                           preinc0	equ	0xFEC
  5288                           plusw0	equ	0xFEB
  5289                           fsr0h	equ	0xFEA
  5290                           fsr0l	equ	0xFE9
  5291                           wreg	equ	0xFE8
  5292                           indf1	equ	0xFE7
  5293                           postinc1	equ	0xFE6
  5294                           postdec1	equ	0xFE5
  5295                           preinc1	equ	0xFE4
  5296                           plusw1	equ	0xFE3
  5297                           fsr1h	equ	0xFE2
  5298                           fsr1l	equ	0xFE1
  5299                           bsr	equ	0xFE0
  5300                           indf2	equ	0xFDF
  5301                           postinc2	equ	0xFDE
  5302                           postdec2	equ	0xFDD
  5303                           preinc2	equ	0xFDC
  5304                           plusw2	equ	0xFDB
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        18
    BSS         247
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     33     156
    BANK1           256    185     203
    BANK2           256      0     120
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2417$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2368$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2368$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK1[20]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S525DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S525DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _Interrupts_init->_set_interrupt_threshold
    _set_interrupt_threshold->_color_writetoaddr
    _enable_color_interrupt->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _clear_interrupt_flag->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    i2_clear_interrupt_flag->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               216   216      0   14702
                                             31 BANK0      2     2      0
                                              0 BANK1    185   185      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _LEDSon_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7586
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7100
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6639
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5072
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     453
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3045
                                             17 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1422
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0    1908
             _enable_color_interrupt
            _set_interrupt_threshold
 ---------------------------------------------------------------------------------
 (2) _set_interrupt_threshold                              8     2      6    1136
                                              8 COMRAM     8     2      6
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _enable_color_interrupt                               0     0      0     772
               _clear_interrupt_flag
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _clear_interrupt_flag                                 0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
             i2_clear_interrupt_flag
 ---------------------------------------------------------------------------------
 (10) i2_clear_interrupt_flag                              0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
     _enable_color_interrupt
       _clear_interrupt_flag
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _set_interrupt_threshold
       _color_writetoaddr
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   i2_clear_interrupt_flag
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      78       9       46.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B9      CB       7       79.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRllhhhh     52      0       0      40        0.0%
BITBIGSFRllhhhl     37      0       0      42        0.0%
BITBIGSFRhhhl       32      0       0      33        0.0%
BITBIGSFRllhhhl     2D      0       0      45        0.0%
BITBIGSFRllllhl     2A      0       0      53        0.0%
BITBIGSFRllllll     23      0       0      60        0.0%
BITBIGSFRhhlll      1D      0       0      37        0.0%
BITBIGSFRllhhhl     11      0       0      47        0.0%
BITBIGSFRllhhl      11      0       0      48        0.0%
BITBIGSFRhhlhh       E      0       0      34        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllhhhl      C      0       0      46        0.0%
BITBIGSFRllllhl      9      0       0      57        0.0%
BITBIGSFRllhhhl      8      0       0      43        0.0%
BITBIGSFRlllllh      6      0       0      59        0.0%
BITBIGSFRllllhh      6      0       0      52        0.0%
BITBIGSFRllllhl      5      0       0      55        0.0%
BITBIGSFRlllhl       5      0       0      51        0.0%
BITBIGSFRllllhl      3      0       0      54        0.0%
BITBIGSFRllllhl      3      0       0      56        0.0%
BITBIGSFRlllhh       3      0       0      50        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRllhhhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      36        0.0%
BITBIGSFRllllll      2      0       0      61        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllllhl      1      0       0      58        0.0%
BITBIGSFRllhhhl      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      35        0.0%
BITBIGSFRllhl        1      0       0      49        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     239      62        0.0%
DATA                 0      0     239       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 09 14:14:54 2022

                    _color_read_Red 1AF2                     _color_read_Blue 1BE2  
                                l22 1EE4                                  l31 1C30  
                                l25 1B40                                  l34 1BE0  
                                l19 1DB2                                  l28 1B90  
                                l86 1386                                  l79 18F4  
               ___wmul@multiplicand 0007                    _color_read_Clear 1B92  
                  _color_read_Green 1B42                   ??_Interrupts_init 0011  
                               l142 1E0C                                 l151 1F80  
                               l160 1F56                                 l145 1E0E  
                               l154 1F6C                                 l163 1D00  
                               l148 1E34                                 l157 1F76  
                               l262 1EA4                                 l371 1EC4  
                               l611 14EA                                 l380 1EE8  
                               l462 1D7E                                 l471 1F4A  
                               l383 1EFC                                 l481 1F12  
                               l484 1E82                                 l389 1DE2  
                               l478 1A4A                                 l598 121A  
                               l982 19E2                                 l975 19DA  
                               u840 1E1E                                 u841 1E1A  
                               u850 1E34                                 u851 1E30  
                               _abs 1D02                                 _pad 18F6  
                               wreg 000FE8                                l1200 0EA4  
                              l1202 0EAC                                l1203 0EF2  
                              ?_abs 0017                                l1221 1648  
                              l1214 1092                                l1162 1D40  
                              l1250 1F96                                l1227 1A9E  
                              l3100 13CC                                l3020 17A4  
                              l3110 1434                                l3102 13EC  
                              l3030 1826                                l3022 17B6  
                              l1159 1D38                                l1239 186C  
                              l1247 1CBE                                l1191 1918  
                              l2400 1CCE                                l3120 14AA  
                              l3112 1462                                l3104 140A  
                              l3024 17C8                                l3040 1C9E  
                              l3200 1534                                l1169 1AF0  
                              l2402 1CD6                                l2410 1EE8  
                              l3050 10A6                                l3122 14CA  
                              l3114 1482                                l3106 1412  
                              l3042 1D02                                l3026 17D2  
                              l3034 1C7C                                l3130 1910  
                              l3202 1544                                l1195 196E  
                              l2420 19FC                                l2404 1CFC  
                              l2500 1B42                                l2412 1EF8  
                              l3060 10FC                                l3052 10C6  
                              l3116 1494                                l3108 1426  
                              l3044 1D1C                                l3028 17F0  
                              l3036 1C88                                l3132 1924  
                              l3140 0E18                                l3212 160A  
                              l3204 1564                                l3300 16F6  
                              l2342 1EC8                                l2414 1F3C  
                              l2430 1A3C                                l2422 1A0E  
                              l2406 1CFE                                l2502 1B88  
                              l3070 1150                                l3062 1108  
                              l3054 10CA                                l3046 1094  
                              l3118 149A                                l3038 1C9A  
                              l3134 1938                                l3126 18F6  
                              l3150 0E98                                l3142 0E38  
                              l3206 1584                                l3222 1A4C  
                              l3310 175C                                l3302 1702  
                              l2176 1E0E                                l2280 1F7C  
                              l2344 1EFE                                l2432 1A40  
                              l2424 1A12                                l2416 19E4  
                              l2512 1B92                                l2520 1876  
                              l2440 1970                                l3080 11C4  
                              l3072 1162                                l3064 1126  
                              l3056 10D8                                l3048 1098  
                              l3136 193C                                l3128 1904  
                              l3160 0EE6                                l3152 0EB4  
                              l3144 0E4C                                l3208 15DA  
                              l3216 161C                                l3224 1A58  
                              l3240 1ADE                                l3232 1AA0  
                              l3312 1774                                l3304 170E  
                              l2178 1E1E                                l2282 1F4E  
                              l2426 1A1C                                l2418 19F8  
                              l2506 1BE2                                l2514 1BD8  
                              l2530 18DA                                l2522 18A0  
                              l2450 19A8                                l2442 1978  
                              l2434 1E5E                                l3074 1190  
                              l3066 112E                                l3082 11CA  
                              l3058 10F8                                l3090 1388  
                              l3138 195A                                l3170 0F8A  
                              l3162 0EEE                                l3154 0EC4  
                              l3146 0E5C                                l3226 1A74  
                              l3234 1AB2                                l3306 171A  
                              l3250 1656                                l2284 1F52  
                              l2428 1A2A                                l2620 1E84  
                              l2380 1DE4                                l2508 1C28  
                              l2532 18DC                                l2524 18C4  
                              l2460 19D4                                l2452 19AE  
                              l2444 198A                                l2436 1E7A  
                              l2540 121C                                l3084 11DA  
                              l3076 11B0                                l3068 1142  
                              l3092 138C                                l3180 1032  
                              l3172 0F90                                l3164 0EFA  
                              l3156 0ECA                                l3148 0E7C  
                              l3228 1A94                                l3236 1ABA  
                              l3308 1750                                l3260 167C  
                              l3252 165A                                l3244 164A  
                              l2278 1F78                                l2286 1F6E  
                              l2390 1DFA                                l2382 1DEE  
                              l2534 18E6                                l2526 18CE  
                              l2518 186E                                l2630 1EBE  
                              l2622 1EA6                                l2454 19C4  
                              l2446 1992                                l2550 12E6  
                              l2542 1238                                l3086 11FA  
                              l3078 11B2                                l3094 139A  
                              l3182 104C                                l3174 0F96  
                              l3166 0F02                                l3158 0EDA  
                              l3238 1AC2                                l3270 16AC  
                              l3262 1684                                l3254 165E  
                              l3246 164E                                l2288 1F72  
                              l2640 1D64                                l2384 1DF4  
                              l2392 1F64                                l2536 18E8  
                              l2528 18D0                                l2632 1EC0  
                              l2624 1EB0                                l2456 19CC  
                              l2448 199A                                l2552 1302  
                              l2544 128C                                l3096 13BA  
                              l3184 105C                                l3168 0F08  
                              l3176 0FFA                                l3192 14EC  
                              l3280 16D6                                l3272 16B8  
                              l3264 1696                                l3256 1662  
                              l3248 1652                                l2650 1D76  
                              l2642 1D68                                l2386 1DF6  
                              l2490 1D9E                                l2394 1F68  
                              l2538 18F2                                l2634 1EC2  
                              l2626 1EB2                                l2458 19CE  
                              l2554 1346                                l2546 12A0  
                              l3098 13BE                                l3186 1062  
                              l3178 1014                                l3194 1514  
                              l3290 16E2                                l3282 16D6  
                              l3274 16C4                                l3266 169E  
                              l3258 1674                                l2652 1D78  
                              l2644 1D6E                                l2636 1D42  
                              l2388 1DF8                                l2492 1DA8  
                              l2484 1D80                                l2396 1CC2  
                              l2628 1EB4                                l2548 12A4  
                              l3188 1072                                l3196 1522  
                              l3292 16E4                                l3284 16D6  
                              l3276 16D6                                l3268 16A6  
                              l2654 1D7A                                l2646 1D72  
                              l2638 1D62                                l2486 1D84  
                              l2398 1CC6                                l2494 1AF2  
                              l2670 1DB4                                l3198 1530  
                              l3294 16E6                                l3286 16D6  
                              l3278 16D6                                l2656 1D7C  
                              l2648 1D74                                l2488 1D8E  
                              l2496 1B38                                l2672 1DB8  
                              l3296 16E8                                l3288 16D6  
                              l2674 1DC6                                l3298 16EA  
                              l2676 1DCA                                ?_pad 0015  
                              STR_1 0E01                                u1200 1A0E  
                              u1201 1A0A                                u1210 1A3C  
                              u1211 1A38                                u1220 198A  
                      ?_LEDSon_init 0001                                u1221 1986  
                              u1230 19A8                                u1231 19A4  
                              u1240 19C4                                u1241 19C0  
                              u1170 1CEA                                u1330 1DE2  
                              u1171 1CE2                                u1331 1DDE  
                              u1260 1238                                u1261 1234  
                              u1190 1EF8                                u1270 1302  
                              u1510 17B6                                u1191 1EF4  
                              u1271 12FE                                u1511 17B2  
                              u1600 1126                                u1520 17C8  
                      _BAUD4CONbits 000EE9                                u1601 1122  
                              u1521 17C4                                u1610 1150  
                              u1530 17F0                                u1611 114C  
                              u1531 17EC                                u1188 1CEC  
                              u1620 1190                                u1540 1826  
                              u1700 1904                                u1621 118C  
                              u1541 1822                                u1701 1900  
                              u1630 11DA                                u1550 1CBE  
                              u1710 195A                                u1631 11D6  
                              u1551 1CBA                                u1711 1956  
                              u1640 139A                                u1560 1D1C  
                              u1800 104C                                u1720 0E48  
                              u1641 1396                                u1561 1D18  
                              u1801 1048                                u1721 0E42  
                              u1570 10A6                                u1650 13CC  
                              u1810 105C                                u1730 0E4A  
                              _T2PR 000FBC                                u1571 10A2  
                              u1651 13C8                                u1811 1058  
                              u1580 10D8                                u1660 140A  
                              u1740 0E5C                                u1820 1514  
                              u1581 10D4                                u1661 1406  
                              u1741 0E58                                u1821 1510  
                              u1670 1434                                u1750 0E98  
                              u1830 1564                                u1591 1102  
                              u1671 1430                                u1751 0E94  
                              u1831 1560                                u1680 1462  
                              u1760 0EC4                                u1840 1584  
                              u1681 145E                                u1761 0EC0  
                              u1841 1580                                u1690 14AA  
                              u1770 0EDA                                u1850 1A94  
                              u1691 14A6                                u1771 0ED6  
                              u1851 1A90                                u1780 1014  
                              u1781 1010                                u1917 1768  
                              u1861 16CE                                u1790 1032  
                              u1927 1D94                                u1791 102E  
                              u1871 16DC                                u1880 1788  
                              u1881 177E                                u1898 178C  
                              abs@a 0017                                _dbuf 00BB  
                              _main 164A                                _dtoa 0E18  
                              _prec 00B2                                pad@i 001C  
                              pad@p 0019                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 001E  
                              fsr2l 000FD9                                btemp 005B  
                              prodh 000FF4                                prodl 000FF3  
                              start 0076              __end_of_color_read_Red 1B42  
                   __end_of_HighISR 0076                _response_in_progress 00B6  
                      ___param_bank 000000                               ??_abs 0019  
                             ??_pad 001B                     __end_of___aodiv 121C  
                             ?_main 0001                               ?_dtoa 0020  
                   __end_of___aomod 14EC                     __end_of___lwdiv 19E4  
                             i2l151 1F94                               i2l160 1F62  
                             i2l145 1E36                               i2l148 1E5C  
                             i2l157 1F8A                               i2l481 1F28  
                             i2l468 0072                        vfpfcnvrt@fmt 0045  
           ?_enable_color_interrupt 0001                        main@red_read 019E  
           __end_of_sendCharSerial4 1EFE          __end_of_I2C_2_Master_Start 1F82  
        __end_of_I2C_2_Master_Write 1F58                               _flags 00BA  
                             _fputc 17A4                               _fputs 1C7C  
                             pad@fp 0015                               _width 00B0  
                             _putch 1F96                               dtoa@d 0022  
                             dtoa@i 0041                               dtoa@n 0038  
                             dtoa@p 0034                               dtoa@s 0040  
                             dtoa@w 0036                               tablat 000FF5  
                             plusw1 000FE3                               plusw2 000FDB  
                             ttemp5 005C                               ttemp6 005F  
                             ttemp7 0063                               status 000FD8  
                             wtemp8 005C                     __end_of_sprintf 1AF2  
           __end_of_color_read_Blue 1C32               _I2C_2_Master_RepStart 1F64  
                   ?_color_read_Red 0009                     __initialization 1C32  
                      __end_of_main 17A4                        __end_of_dtoa 1094  
    __end_of_enable_color_interrupt 1F4C                              ??_main 00FA  
                            ??_dtoa 002A                       __activetblptr 000003  
                     main@blue_read 01A2                        ?_setMotorPWM 0012  
                            ?_fputc 0005                              ?_fputs 000E  
                            _CCPR1H 000FAA                              _CCPR2H 000FA6  
                            _CCPR3H 000F25                              _CCPR4H 000F21  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              _RE4PPS 000E76  
                            i2l3010 0038                              i2l3002 000A  
                            i2l3012 0050                              i2l3004 001A  
                            i2l3014 0052                              i2l3006 002E  
                            i2l3016 006A                              i2l3008 0036  
                            i2l3018 006E                              i2l2376 1E36  
                            i2l2472 1F8C                              i2l2480 1F5A  
                            i2l2378 1E46                              i2l2474 1F90  
                            i2l2482 1F5E                              i2l2476 1F82  
                            i2l2478 1F86                              i2l2686 1F14  
                            _RG6PPS 000E88                           ??_HighISR 0003  
          __end_of_color_click_init 1DB4                              _RX4PPS 000E15  
                            _TX4REG 000EE4                        _CCPTMRS0bits 000FAD  
                      vfprintf@cfmt 0055                           ??___aodiv 0015  
                         ??___aomod 0015                              ___wmul 1E5E  
                         ??___lwdiv 000F                              clear_0 1C58  
                            clear_1 1C64                              isa$std 000001  
                            pad@buf 0017                              dtoa@fp 0020  
      __end_of_clear_interrupt_flag 1F14                              fputc@c 0005  
                            fputs@c 0012                              fputs@i 0013  
                            fputs@s 000E                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                    ?_sendCharSerial4 0001  
                            putch@c 0001                    __end_of_vfprintf 1AA0  
                 ??_initDCmotorsPWM 0005                           ??_sprintf 0057  
           ?i2_clear_interrupt_flag 0001                          __accesstop 0060  
           __end_of__initialization 1C72            __end_of_color_read_Clear 1BE2  
          __end_of_color_read_Green 1B92              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                    ?_color_read_Blue 0009  
                   _Interrupts_init 1D42                      __pcstackCOMRAM 0001  
                      __pidataBANK1 1F2A             _set_interrupt_threshold 19E4  
                     __end_of_fputc 186E                       __end_of_fputs 1CC0  
                     __end_of_putch 1F98                      main@clear_read 01A4  
    __end_ofi2_clear_interrupt_flag 1F2A                             ??_fputc 0009  
                           ??_fputs 0012                             ??_putch 0005  
                        __pbssBANK0 0060                          __pbssBANK2 0200  
                 _color_writetoaddr 1EC6                        _T2CLKCONbits 000FBF  
                ?_color_writetoaddr 0007                             ?___wmul 0005  
               ??_color_writetoaddr 0008                             _INT1PPS 000DF1  
                    main@green_read 01A0                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5         set_interrupt_threshold@AIHT 000B  
       set_interrupt_threshold@AILT 0009             __end_of_Interrupts_init 1D80  
            color_writetoaddr@value 0007                    ??_color_read_Red 000B  
                           _HighISR 0008           __end_of_color_writetoaddr 1EE6  
              _clear_interrupt_flag 1EFE                  _I2C_2_Master_Start 1F78  
                        _initUSART4 1EA6                 i2_I2C_2_Master_Idle 1E36  
                _I2C_2_Master_Write 1F4C                             __Hparam 0000  
               i2_I2C_2_Master_Stop 1F82                             __Lparam 0000  
                 color_read_Red@tmp 000E           ??_set_interrupt_threshold 000F  
           sendStringSerial4@string 0006                             ___aodiv 1094  
                           ___aomod 1388                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 1970                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 00DB                        __psmallconst 0E00  
                           __pcinit 1C32                             __ramtop 0E00  
                           __ptext0 164A                             __ptext1 1AA0  
                           __ptext2 1A4C                             __ptext3 14EC  
                           __ptext4 0E18                             __ptext5 18F6  
                           __ptext6 1C7C                             __ptext7 17A4  
                           __ptext8 1F96                             __ptext9 1D02  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
              ?i2_I2C_2_Master_Stop 0001                           _T2HLTbits 000FBE  
                     _RxBufWriteCnt 005A                             main@buf 018A  
                           _sprintf 1AA0                ??_I2C_2_Master_Start 0006  
              ??_I2C_2_Master_Write 0006                end_of_initialization 1C72  
                           fputc@fp 0007                             fputs@fp 0010  
                 ?_color_click_init 0001               ?_clear_interrupt_flag 0001  
                ??_color_click_init 0009                       _card_detected 00B4  
                 __end_of_vfpfcnvrt 164A                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                  vfpfcnvrt@convarg 004B                          main@F14644 01B9  
                        main@F14657 0200                          ??_vfprintf 0055  
                   _initDCmotorsPWM 186E                  setMotorPWM@negDuty 0017  
             ??i2_I2C_2_Master_Idle 0001               ??i2_I2C_2_Master_Stop 0002  
   __end_of_set_interrupt_threshold 1A4C                           _TRISAbits 000F81  
                setMotorPWM@posDuty 0016                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
               main@expected_values 0178            color_writetoaddr@address 0008  
           ??_I2C_2_Master_RepStart 0006                    ?_Interrupts_init 0001  
                       _CCP1CONbits 000FAB                   ?_color_read_Clear 0009  
                      _EUSART4RXbuf 009C                        _EUSART4TXbuf 0060  
                       _CCP2CONbits 000FA7                   ?_color_read_Green 0009  
                       _CCP3CONbits 000F26                         ?_initUSART4 0001  
                       _CCP4CONbits 000F22           sendCharSerial4@charToSend 0005  
                        main@motorL 01A7                          main@motorR 01B0  
                ??_color_read_Clear 000B                  ??_color_read_Green 000B  
                       vfpfcnvrt@ap 0047                         vfpfcnvrt@cp 0053  
                       vfpfcnvrt@fp 0043                      __end_of___wmul 1E84  
               color_read_Clear@tmp 000E                 start_initialization 1C32  
                       __end_of_abs 1D42                         __end_of_pad 1970  
                     _TxBufWriteCnt 0058                       ??_LEDSon_init 0005  
            ??_clear_interrupt_flag 0007                 color_read_Green@tmp 000E  
           __end_of_initDCmotorsPWM 18F6                         vfprintf@fmt 00DD  
                         _TimerFlag 00B8            ??_enable_color_interrupt 0009  
                          ??___wmul 0009                         __pdataBANK1 01B9  
     i2I2C_2_Master_Write@data_byte 0002        __end_ofi2_I2C_2_Master_Start 1F96  
      __end_ofi2_I2C_2_Master_Write 1F64                         __pbssCOMRAM 0057  
                     __pcstackBANK0 00DB                       __pcstackBANK1 0100  
                  ___aodiv@dividend 0005                            ?_HighISR 0001  
               __end_of_LEDSon_init 1EA6                    ___lwdiv@dividend 000B  
                         _dtoa$2445 0032                           __pintcode 0008  
                          ?___aodiv 0005                            ?___aomod 0005  
                  ___aodiv@quotient 0017                            ?___lwdiv 000B  
              I2C_2_Master_Read@ack 0007                I2C_2_Master_Read@tmp 0008  
                       __smallconst 0E00                   _I2C_2_Master_Idle 1E0E  
                 _I2C_2_Master_Init 1DE4                   _I2C_2_Master_Read 1CC0  
                 _I2C_2_Master_Stop 1F6E                        _RxBufReadCnt 0059  
               main@ReturnHomeArray 0100                  ?_I2C_2_Master_Idle 0001  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                     ??_setMotorPWM 0014                  ?_I2C_2_Master_Stop 0001  
                  ___lwdiv@quotient 000F                            ?_sprintf 00E1  
                 _sendStringSerial4 1DB4                 ??_I2C_2_Master_Idle 0005  
               ??_I2C_2_Master_Init 0005                 ??_I2C_2_Master_Read 0006  
set_interrupt_threshold@persistence 000D                      ___wmul@product 0009  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0006  
                          _LATDbits 000F7C                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _IPR0bits 000E1F                            _PIE0bits 000E29  
                ?_sendStringSerial4 0006                            _PIE4bits 000E2D  
                          i2u115_40 1E46                            i2u115_41 1E42  
                          i2u116_40 1E5C                            i2u116_41 1E58  
                          i2u150_40 002E                            i2u150_41 002A  
                          i2u149_40 001A                            i2u149_41 0016  
                          _PIR0bits 000E33                            i2u193_47 0042  
                          i2u194_47 005C                            _PIR4bits 000E37  
                  ?_initDCmotorsPWM 0001                   ??_sendCharSerial4 0005  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 0008  
                          _SSP2STAT 000ED8                           _vfpfcnvrt 14EC  
         __end_of_I2C_2_Master_Idle 1E36           __end_of_I2C_2_Master_Init 1E0E  
         __end_of_I2C_2_Master_Read 1D02                   ___wmul@multiplier 0005  
         __end_of_I2C_2_Master_Stop 1F78            ??i2_clear_interrupt_flag 0003  
                      setMotorPWM@m 0012         I2C_2_Master_Write@data_byte 0006  
                 ??_color_read_Blue 000B                        _TxBufReadCnt 0057  
                         copy_data0 1C46           __end_of_sendStringSerial4 1DE4  
                       _LEDSon_init 1E84       __end_of_I2C_2_Master_RepStart 1F6E  
                color_read_Blue@tmp 000E            ?_set_interrupt_threshold 0009  
               __end_of_setMotorPWM 1388                        ??_initUSART4 0005  
              i2_I2C_2_Master_Start 1F8C                i2_I2C_2_Master_Write 1F58  
                          __Hrparam 0000                          vfprintf@ap 00DF  
                          __Lrparam 0000                          vfprintf@fp 00DB  
       __end_ofi2_I2C_2_Master_Idle 1E5E         __end_ofi2_I2C_2_Master_Stop 1F8C  
                        ?_vfpfcnvrt 0043                     ___aodiv@divisor 000D  
                   ___aodiv@counter 0015                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                          sprintf@fmt 00E3  
                   ___lwdiv@divisor 000D                  __end_of_initUSART4 1EC6  
                   ___lwdiv@counter 0011                            __ptext10 1388  
                          __ptext11 1094                            __ptext20 1B42  
                          __ptext12 121C                            __ptext21 1B92  
                          __ptext13 1E5E              _enable_color_interrupt 1F3C  
                          __ptext30 1F3C                            __ptext22 1BE2  
                          __ptext14 1970                            __ptext31 1EC6  
                          __ptext23 1F64                            __ptext15 1DB4  
                          __ptext40 1F82                            __ptext32 1EFE  
                          __ptext24 1CC0                            __ptext16 1EE6  
                          __ptext41 1F8C                            __ptext33 1F4C  
                          __ptext25 1D80                            __ptext17 1EA6  
                          __ptext42 1E36                            __ptext34 1F6E  
                          __ptext26 1DE4                            __ptext18 186E  
                          __ptext35 1F78                            __ptext27 1E84  
                          __ptext19 1AF2                            __ptext36 1E0E  
                          __ptext28 1D42                            __ptext29 19E4  
                          __ptext38 1F14                            __ptext39 1F58  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 005B                            _vfprintf 1A4C  
                  ___aomod@dividend 0005                          _INTCONbits 000FF2  
      _set_interrupt_threshold$1926 000F        _set_interrupt_threshold$1927 0010  
                       _setMotorPWM 121C                            intlevel2 0000  
                         sprintf@ap 00ED                     ___aomod@divisor 000D  
                       ??_vfpfcnvrt 0049                     ___aomod@counter 0015  
                  _color_click_init 1D80                            sprintf@f 00EF  
                          sprintf@s 00E1                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C                          _TX4STAbits 000EE8  
                      ___aodiv@sign 0016                     _sendCharSerial4 1EE6  
            ??i2_I2C_2_Master_Start 0002              ??i2_I2C_2_Master_Write 0002  
            i2_clear_interrupt_flag 1F14                        ___aomod@sign 0016  
                      main@PWMcycle 01A6  
