

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 15:34:57 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.35
    56                           ; Generated 05/05/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _TX4REG	set	3812
    91   000000                     _RC4STAbits	set	3815
    92   000000                     _SP4BRGH	set	3814
    93   000000                     _LATHbits	set	3968
    94   000000                     _LATGbits	set	3967
    95   000000                     _TRISAbits	set	3969
    96   000000                     _TRISFbits	set	3974
    97   000000                     _TRISDbits	set	3972
    98   000000                     _TRISGbits	set	3975
    99   000000                     _SSP2CON2bits	set	3802
   100   000000                     _RX4PPS	set	3605
   101   000000                     _SSP2CLKPPS	set	3612
   102   000000                     _SSP2DATPPS	set	3613
   103   000000                     _RC7PPS	set	3689
   104   000000                     _RE2PPS	set	3700
   105   000000                     _TRISCbits	set	3971
   106   000000                     _TRISEbits	set	3973
   107   000000                     _TRISHbits	set	3976
   108   000000                     _PORTFbits	set	3982
   109   000000                     _T2PR	set	4028
   110   000000                     _T2CONbits	set	4029
   111   000000                     _CCPR2H	set	4006
   112   000000                     _CCPR1H	set	4010
   113   000000                     _RE4PPS	set	3702
   114   000000                     _RG6PPS	set	3720
   115   000000                     _RD5PPS	set	3695
   116   000000                     _ANSELDbits	set	3751
   117   000000                     _SSP2ADD	set	3798
   118   000000                     _SSP2CON1bits	set	3801
   119   000000                     _CCPR4H	set	3873
   120   000000                     _CCPR3H	set	3877
   121   000000                     _T2CLKCONbits	set	4031
   122   000000                     _T2HLTbits	set	4030
   123   000000                     _CCP1CONbits	set	4011
   124   000000                     _CCPTMRS0bits	set	4013
   125   000000                     _CCP2CONbits	set	4007
   126   000000                     _LATAbits	set	3961
   127   000000                     _LATDbits	set	3964
   128   000000                     _CCP3CONbits	set	3878
   129   000000                     _CCP4CONbits	set	3874
   130   000000                     _RC4REG	set	3811
   131   000000                     _SP4BRGL	set	3813
   132   000000                     _TX4STAbits	set	3816
   133   000000                     _BAUD4CONbits	set	3817
   134   000000                     _SSP2CON2	set	3802
   135   000000                     _SSP2STAT	set	3800
   136   000000                     _ANSELFbits	set	3764
   137   000000                     _SSP2BUF	set	3797
   138   000000                     _PIE4bits	set	3629
   139   000000                     _PIR4bits	set	3639
   140   000000                     _RC0PPS	set	3682
   141   000000                     _RD6PPS	set	3696
   142   000000                     _LATFbits	set	3966
   143                           
   144                           	psect	smallconst
   145   000E00                     __psmallconst:
   146                           	callstack 0
   147   000E00  00                 	db	0
   148   000E01                     STR_1:
   149   000E01  0A                 	db	10
   150   000E02  20                 	db	32
   151   000E03  41                 	db	65	;'A'
   152   000E04  56                 	db	86	;'V'
   153   000E05  47                 	db	71	;'G'
   154   000E06  3A                 	db	58	;':'
   155   000E07  20                 	db	32
   156   000E08  52                 	db	82	;'R'
   157   000E09  20                 	db	32
   158   000E0A  25                 	db	37
   159   000E0B  64                 	db	100	;'d'
   160   000E0C  2C                 	db	44
   161   000E0D  20                 	db	32
   162   000E0E  47                 	db	71	;'G'
   163   000E0F  20                 	db	32
   164   000E10  25                 	db	37
   165   000E11  64                 	db	100	;'d'
   166   000E12  2C                 	db	44
   167   000E13  20                 	db	32
   168   000E14  42                 	db	66	;'B'
   169   000E15  20                 	db	32
   170   000E16  25                 	db	37
   171   000E17  64                 	db	100	;'d'
   172   000E18  20                 	db	32
   173   000E19  0A                 	db	10
   174   000E1A  00                 	db	0
   175   000E1B                     STR_2:
   176   000E1B  43                 	db	67	;'C'
   177   000E1C  41                 	db	65	;'A'
   178   000E1D  52                 	db	82	;'R'
   179   000E1E  44                 	db	68	;'D'
   180   000E1F  20                 	db	32
   181   000E20  25                 	db	37
   182   000E21  64                 	db	100	;'d'
   183   000E22  20                 	db	32
   184   000E23  0A                 	db	10
   185   000E24  00                 	db	0
   186   000E25  00                 	db	0	; dummy byte at the end
   187   000000                     
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191   00233A                     __pcinit:
   192                           	callstack 0
   193   00233A                     start_initialization:
   194                           	callstack 0
   195   00233A                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Clear objects allocated to BANK2 (60 bytes)
   199   00233A  EE02  F000         	lfsr	0,__pbssBANK2
   200   00233E  0E3C               	movlw	60
   201   002340                     clear_0:
   202   002340  6AEE               	clrf	postinc0,c
   203   002342  06E8               	decf	wreg,f,c
   204   002344  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to BANK1 (54 bytes)
   207   002346  EE01  F0A8         	lfsr	0,__pbssBANK1
   208   00234A  0E36               	movlw	54
   209   00234C                     clear_1:
   210   00234C  6AEE               	clrf	postinc0,c
   211   00234E  06E8               	decf	wreg,f,c
   212   002350  E1FD               	bnz	clear_1
   213                           
   214                           ; Clear objects allocated to BANK0 (6 bytes)
   215   002352  0100               	movlb	0
   216   002354  6BFF               	clrf	(__pbssBANK0+5)& (0+255),b
   217   002356  6BFE               	clrf	(__pbssBANK0+4)& (0+255),b
   218   002358  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
   219   00235A  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
   220   00235C  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   221   00235E  6BFA               	clrf	__pbssBANK0& (0+255),b
   222                           
   223                           ; Clear objects allocated to COMRAM (1 bytes)
   224   002360  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   225   002362                     end_of_initialization:
   226                           	callstack 0
   227   002362                     __end_of__initialization:
   228                           	callstack 0
   229   002362  0100               	movlb	0
   230   002364  EF52  F008         	goto	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMRAM
   233   00005F                     __pbssCOMRAM:
   234                           	callstack 0
   235   00005F                     _TxBufWriteCnt:
   236                           	callstack 0
   237   00005F                     	ds	1
   238                           
   239                           	psect	bssBANK0
   240   0000FA                     __pbssBANK0:
   241                           	callstack 0
   242   0000FA                     _prec:
   243                           	callstack 0
   244   0000FA                     	ds	2
   245   0000FC                     _flags:
   246                           	callstack 0
   247   0000FC                     	ds	1
   248   0000FD                     _TxBufReadCnt:
   249                           	callstack 0
   250   0000FD                     	ds	1
   251   0000FE                     _RxBufReadCnt:
   252                           	callstack 0
   253   0000FE                     	ds	1
   254   0000FF                     _RxBufWriteCnt:
   255                           	callstack 0
   256   0000FF                     	ds	1
   257                           
   258                           	psect	bssBANK1
   259   0001A8                     __pbssBANK1:
   260                           	callstack 0
   261   0001A8                     _EUSART4RXbuf:
   262                           	callstack 0
   263   0001A8                     	ds	20
   264   0001BC                     _width:
   265                           	callstack 0
   266   0001BC                     	ds	2
   267   0001BE                     _dbuf:
   268                           	callstack 0
   269   0001BE                     	ds	32
   270                           
   271                           	psect	bssBANK2
   272   000200                     __pbssBANK2:
   273                           	callstack 0
   274   000200                     _EUSART4TXbuf:
   275                           	callstack 0
   276   000200                     	ds	60
   277                           
   278                           	psect	cstackBANK1
   279   000100                     __pcstackBANK1:
   280                           	callstack 0
   281   000100                     main@buf:
   282                           	callstack 0
   283                           
   284                           ; 150 bytes @ 0x0
   285   000100                     	ds	150
   286   000196                     main@motorL:
   287                           	callstack 0
   288                           
   289                           ; 9 bytes @ 0x96
   290   000196                     	ds	9
   291   00019F                     main@motorR:
   292                           	callstack 0
   293                           
   294                           ; 9 bytes @ 0x9F
   295   00019F                     	ds	9
   296                           
   297                           	psect	cstackBANK0
   298   000060                     __pcstackBANK0:
   299                           	callstack 0
   300   000060                     ?_sprintf:
   301                           	callstack 0
   302   000060                     sprintf@s:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x0
   306   000060                     	ds	2
   307   000062                     sprintf@fmt:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x2
   311   000062                     	ds	8
   312   00006A                     sprintf@ap:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xA
   316   00006A                     	ds	2
   317   00006C                     sprintf@f:
   318                           	callstack 0
   319                           
   320                           ; 11 bytes @ 0xC
   321   00006C                     	ds	11
   322   000077                     main@normalised_values:
   323                           	callstack 0
   324                           
   325                           ; 54 bytes @ 0x17
   326   000077                     	ds	54
   327   0000AD                     main@expected_values:
   328                           	callstack 0
   329                           
   330                           ; 54 bytes @ 0x4D
   331   0000AD                     	ds	54
   332   0000E3                     main@master_closeness:
   333                           	callstack 0
   334                           
   335                           ; 18 bytes @ 0x83
   336   0000E3                     	ds	18
   337   0000F5                     main@i:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x95
   341   0000F5                     	ds	1
   342   0000F6                     main@green_read:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x96
   346   0000F6                     	ds	2
   347   0000F8                     main@blue_read:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x98
   351   0000F8                     	ds	2
   352                           
   353                           	psect	cstackCOMRAM
   354   000001                     __pcstackCOMRAM:
   355                           	callstack 0
   356   000001                     ??_I2C_2_Master_Idle:
   357   000001                     ?___wmul:
   358                           	callstack 0
   359   000001                     ?___aodiv:
   360                           	callstack 0
   361   000001                     ?___aomod:
   362                           	callstack 0
   363   000001                     sendCharSerial4@charToSend:
   364                           	callstack 0
   365   000001                     determine_card@master_closeness:
   366                           	callstack 0
   367   000001                     ___wmul@multiplier:
   368                           	callstack 0
   369   000001                     fputc@c:
   370                           	callstack 0
   371   000001                     ___aodiv@dividend:
   372                           	callstack 0
   373   000001                     ___aomod@dividend:
   374                           	callstack 0
   375                           
   376                           ; 8 bytes @ 0x0
   377   000001                     	ds	1
   378   000002                     ??_I2C_2_Master_Read:
   379   000002                     I2C_2_Master_Write@data_byte:
   380                           	callstack 0
   381   000002                     sendStringSerial4@string:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x1
   385   000002                     	ds	1
   386   000003                     ??_determine_card:
   387   000003                     color_writetoaddr@value:
   388                           	callstack 0
   389   000003                     I2C_2_Master_Read@ack:
   390                           	callstack 0
   391   000003                     ___wmul@multiplicand:
   392                           	callstack 0
   393   000003                     fputc@fp:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x2
   397   000003                     	ds	1
   398   000004                     color_writetoaddr@address:
   399                           	callstack 0
   400   000004                     I2C_2_Master_Read@tmp:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x3
   404   000004                     	ds	1
   405   000005                     ??_fputc:
   406   000005                     ??_color_click_init:
   407   000005                     ?_color_read_Red:
   408                           	callstack 0
   409   000005                     ?_color_read_Green:
   410                           	callstack 0
   411   000005                     ?_color_read_Blue:
   412                           	callstack 0
   413   000005                     ___wmul@product:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x4
   417   000005                     	ds	2
   418   000007                     ??_color_read_Red:
   419   000007                     ??_color_read_Green:
   420   000007                     ??_color_read_Blue:
   421   000007                     ?___lwdiv:
   422                           	callstack 0
   423   000007                     determine_card@current_smallest:
   424                           	callstack 0
   425   000007                     ___lwdiv@dividend:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x6
   429   000007                     	ds	2
   430   000009                     determine_card@predicted_colour:
   431                           	callstack 0
   432   000009                     ___lwdiv@divisor:
   433                           	callstack 0
   434   000009                     ___aodiv@divisor:
   435                           	callstack 0
   436   000009                     ___aomod@divisor:
   437                           	callstack 0
   438                           
   439                           ; 8 bytes @ 0x8
   440   000009                     	ds	1
   441   00000A                     determine_card@i:
   442                           	callstack 0
   443   00000A                     color_read_Red@tmp:
   444                           	callstack 0
   445   00000A                     color_read_Green@tmp:
   446                           	callstack 0
   447   00000A                     color_read_Blue@tmp:
   448                           	callstack 0
   449   00000A                     fputs@s:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x9
   453   00000A                     	ds	1
   454   00000B                     ___lwdiv@quotient:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xA
   458   00000B                     	ds	1
   459   00000C                     fputs@fp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xB
   463   00000C                     	ds	1
   464   00000D                     ___lwdiv@counter:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0xC
   468   00000D                     	ds	1
   469   00000E                     fputs@c:
   470                           	callstack 0
   471   00000E                     setMotorPWM@m:
   472                           	callstack 0
   473   00000E                     collect_avg_readings@red_read:
   474                           	callstack 0
   475   00000E                     make_master_closeness@buf:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xD
   479   00000E                     	ds	1
   480   00000F                     fputs@i:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xE
   484   00000F                     	ds	1
   485   000010                     ??_setMotorPWM:
   486   000010                     collect_avg_readings@green_read:
   487                           	callstack 0
   488   000010                     make_master_closeness@normalised_values:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0xF
   492   000010                     	ds	1
   493   000011                     ___aodiv@counter:
   494                           	callstack 0
   495   000011                     ___aomod@counter:
   496                           	callstack 0
   497   000011                     pad@fp:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x10
   501   000011                     	ds	1
   502   000012                     setMotorPWM@posDuty:
   503                           	callstack 0
   504   000012                     ___aodiv@sign:
   505                           	callstack 0
   506   000012                     ___aomod@sign:
   507                           	callstack 0
   508   000012                     collect_avg_readings@blue_read:
   509                           	callstack 0
   510   000012                     make_master_closeness@master_closeness:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x11
   514   000012                     	ds	1
   515   000013                     ?_abs:
   516                           	callstack 0
   517   000013                     setMotorPWM@negDuty:
   518                           	callstack 0
   519   000013                     abs@a:
   520                           	callstack 0
   521   000013                     pad@buf:
   522                           	callstack 0
   523   000013                     ___aodiv@quotient:
   524                           	callstack 0
   525                           
   526                           ; 8 bytes @ 0x12
   527   000013                     	ds	1
   528   000014                     ??_collect_avg_readings:
   529   000014                     ??_make_master_closeness:
   530                           
   531                           ; 1 bytes @ 0x13
   532   000014                     	ds	1
   533   000015                     ??_abs:
   534   000015                     pad@p:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x14
   538   000015                     	ds	1
   539   000016                     collect_avg_readings@i:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x15
   543   000016                     	ds	1
   544   000017                     ??_pad:
   545   000017                     normalise_readings@buf:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x16
   549   000017                     	ds	1
   550   000018                     collect_avg_readings@i_1553:
   551                           	callstack 0
   552   000018                     pad@i:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x17
   556   000018                     	ds	1
   557   000019                     normalise_readings@red_read:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x18
   561   000019                     	ds	1
   562   00001A                     collect_avg_readings@i_1554:
   563                           	callstack 0
   564   00001A                     pad@w:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x19
   568   00001A                     	ds	1
   569   00001B                     normalise_readings@green_read:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1A
   573   00001B                     	ds	1
   574   00001C                     collect_avg_readings@i_1555:
   575                           	callstack 0
   576   00001C                     dtoa@fp:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x1B
   580   00001C                     	ds	1
   581   00001D                     normalise_readings@blue_read:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x1C
   585   00001D                     	ds	1
   586   00001E                     dtoa@d:
   587                           	callstack 0
   588                           
   589                           ; 8 bytes @ 0x1D
   590   00001E                     	ds	1
   591   00001F                     normalise_readings@expected_values:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x1E
   595   00001F                     	ds	2
   596   000021                     normalise_readings@normalised_values:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x20
   600   000021                     	ds	2
   601   000023                     ??_normalise_readings:
   602                           
   603                           ; 1 bytes @ 0x22
   604   000023                     	ds	3
   605   000026                     ??_dtoa:
   606                           
   607                           ; 1 bytes @ 0x25
   608   000026                     	ds	2
   609   000028                     make_master_closeness@i:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x27
   613   000028                     	ds	3
   614   00002B                     normalise_readings@difference:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x2A
   618   00002B                     	ds	2
   619   00002D                     normalise_readings@i:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x2C
   623   00002D                     	ds	1
   624   00002E                     _dtoa$2279:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x2D
   628   00002E                     	ds	2
   629   000030                     dtoa@p:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2F
   633   000030                     	ds	2
   634   000032                     dtoa@w:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x31
   638   000032                     	ds	2
   639   000034                     dtoa@n:
   640                           	callstack 0
   641                           
   642                           ; 8 bytes @ 0x33
   643   000034                     	ds	8
   644   00003C                     dtoa@i:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x3B
   648   00003C                     	ds	2
   649   00003E                     dtoa@s:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x3D
   653   00003E                     	ds	1
   654   00003F                     vfpfcnvrt@fp:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x3E
   658   00003F                     	ds	2
   659   000041                     vfpfcnvrt@fmt:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x40
   663   000041                     	ds	2
   664   000043                     vfpfcnvrt@ap:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x42
   668   000043                     	ds	2
   669   000045                     ??_vfpfcnvrt:
   670                           
   671                           ; 1 bytes @ 0x44
   672   000045                     	ds	2
   673   000047                     vfpfcnvrt@convarg:
   674                           	callstack 0
   675                           
   676                           ; 8 bytes @ 0x46
   677   000047                     	ds	8
   678   00004F                     vfpfcnvrt@cp:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x4E
   682   00004F                     	ds	2
   683   000051                     ?_vfprintf:
   684                           	callstack 0
   685   000051                     vfprintf@fp:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x50
   689   000051                     	ds	2
   690   000053                     vfprintf@fmt:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x52
   694   000053                     	ds	2
   695   000055                     vfprintf@ap:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x54
   699   000055                     	ds	2
   700   000057                     vfprintf@cfmt:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x56
   704   000057                     	ds	2
   705   000059                     ??_main:
   706                           
   707                           ; 1 bytes @ 0x58
   708   000059                     	ds	2
   709   00005B                     main@card:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x5A
   713   00005B                     	ds	1
   714   00005C                     main@PWMcycle:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x5B
   718   00005C                     	ds	1
   719   00005D                     main@red_read:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x5C
   723   00005D                     	ds	2
   724                           
   725 ;;
   726 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   727 ;;
   728 ;; *************** function _main *****************
   729 ;; Defined at:
   730 ;;		line 20 in file "main.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  i               1  149[BANK0 ] enum E14575
   735 ;;  buf           150    0[BANK1 ] unsigned char [150]
   736 ;;  expected_val   54   77[BANK0 ] unsigned int [9][3]
   737 ;;  normalised_v   54   23[BANK0 ] unsigned int [9][3]
   738 ;;  master_close   18  131[BANK0 ] unsigned int [9]
   739 ;;  motorR          9  159[BANK1 ] struct DC_motor
   740 ;;  motorL          9  150[BANK1 ] struct DC_motor
   741 ;;  blue_read       2  152[BANK0 ] unsigned int 
   742 ;;  green_read      2  150[BANK0 ] unsigned int 
   743 ;;  red_read        2   92[COMRAM] unsigned int 
   744 ;;  PWMcycle        1   91[COMRAM] unsigned char 
   745 ;;  card            1   90[COMRAM] enum E14575
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Locals:         4     131     168       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Totals:         6     131     168       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;Total ram usage:      305 bytes
   760 ;; Hardware stack levels required when called: 8
   761 ;; This function calls:
   762 ;;		_I2C_2_Master_Init
   763 ;;		_LEDSon_init
   764 ;;		_collect_avg_readings
   765 ;;		_color_click_init
   766 ;;		_determine_card
   767 ;;		_initDCmotorsPWM
   768 ;;		_initUSART4
   769 ;;		_make_master_closeness
   770 ;;		_normalise_readings
   771 ;;		_sendStringSerial4
   772 ;;		_setMotorPWM
   773 ;;		_sprintf
   774 ;; This function is called by:
   775 ;;		Startup code after reset
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text0
   780   0010A4                     __ptext0:
   781                           	callstack 0
   782   0010A4                     _main:
   783                           	callstack 23
   784   0010A4                     
   785                           ;main.c: 25:     LEDSon_init();
   786   0010A4  ECF0  F011         	call	_LEDSon_init	;wreg free
   787   0010A8                     
   788                           ;main.c: 26:     I2C_2_Master_Init();
   789   0010A8  ECB4  F011         	call	_I2C_2_Master_Init	;wreg free
   790   0010AC                     
   791                           ;main.c: 27:     color_click_init();
   792   0010AC  EC6B  F011         	call	_color_click_init	;wreg free
   793   0010B0                     
   794                           ;main.c: 28:     initDCmotorsPWM();
   795   0010B0  EC43  F00F         	call	_initDCmotorsPWM	;wreg free
   796   0010B4                     
   797                           ;main.c: 29:     initUSART4();
   798   0010B4  EC01  F012         	call	_initUSART4	;wreg free
   799   0010B8                     
   800                           ;main.c: 31:     TRISFbits.TRISF2=1;
   801   0010B8  8486               	bsf	134,2,c	;volatile
   802   0010BA                     
   803                           ;main.c: 32:     ANSELFbits.ANSELF2=0;
   804   0010BA  010E               	movlb	14	; () banked
   805   0010BC  95B4               	bcf	180,2,b	;volatile
   806   0010BE                     
   807                           ; BSR set to: 14
   808                           ;main.c: 40:     unsigned char PWMcycle = T2PR;
   809   0010BE  CFBC F05C          	movff	4028,main@PWMcycle	;volatile
   810   0010C2                     
   811                           ; BSR set to: 14
   812                           ;main.c: 42:     struct DC_motor motorL, motorR;;main.c: 44:     motorL.power=0;
   813   0010C2  0E00               	movlw	0
   814   0010C4  0101               	movlb	1	; () banked
   815   0010C6  6F96               	movwf	main@motorL& (0+255),b
   816   0010C8                     
   817                           ; BSR set to: 1
   818                           ;main.c: 45:     motorL.direction=1;
   819   0010C8  0E01               	movlw	1
   820   0010CA  6F97               	movwf	(main@motorL+1)& (0+255),b
   821   0010CC                     
   822                           ; BSR set to: 1
   823                           ;main.c: 46:     motorL.brakemode=1;
   824   0010CC  0E01               	movlw	1
   825   0010CE  6F98               	movwf	(main@motorL+2)& (0+255),b
   826   0010D0                     
   827                           ; BSR set to: 1
   828                           ;main.c: 47:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   829   0010D0  0EAA               	movlw	170
   830   0010D2  6F9B               	movwf	(main@motorL+5)& (0+255),b
   831   0010D4  0E0F               	movlw	15
   832   0010D6  6F9C               	movwf	(main@motorL+6)& (0+255),b
   833   0010D8                     
   834                           ; BSR set to: 1
   835                           ;main.c: 48:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   836   0010D8  0EA6               	movlw	166
   837   0010DA  6F9D               	movwf	(main@motorL+7)& (0+255),b
   838   0010DC  0E0F               	movlw	15
   839   0010DE  6F9E               	movwf	(main@motorL+8)& (0+255),b
   840   0010E0                     
   841                           ; BSR set to: 1
   842                           ;main.c: 49:     motorL.PWMperiod=PWMcycle;
   843   0010E0  C05C  F199         	movff	main@PWMcycle,main@motorL+3
   844   0010E4  6B9A               	clrf	(main@motorL+4)& (0+255),b
   845   0010E6                     
   846                           ; BSR set to: 1
   847                           ;main.c: 51:     motorR.power=0;
   848   0010E6  0E00               	movlw	0
   849   0010E8  6F9F               	movwf	main@motorR& (0+255),b
   850   0010EA                     
   851                           ; BSR set to: 1
   852                           ;main.c: 52:     motorR.direction=1;
   853   0010EA  0E01               	movlw	1
   854   0010EC  6FA0               	movwf	(main@motorR+1)& (0+255),b
   855   0010EE                     
   856                           ; BSR set to: 1
   857                           ;main.c: 53:     motorR.brakemode=1;
   858   0010EE  0E01               	movlw	1
   859   0010F0  6FA1               	movwf	(main@motorR+2)& (0+255),b
   860   0010F2                     
   861                           ; BSR set to: 1
   862                           ;main.c: 54:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   863   0010F2  0E25               	movlw	37
   864   0010F4  6FA4               	movwf	(main@motorR+5)& (0+255),b
   865   0010F6  0E0F               	movlw	15
   866   0010F8  6FA5               	movwf	(main@motorR+6)& (0+255),b
   867   0010FA                     
   868                           ; BSR set to: 1
   869                           ;main.c: 55:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   870   0010FA  0E21               	movlw	33
   871   0010FC  6FA6               	movwf	(main@motorR+7)& (0+255),b
   872   0010FE  0E0F               	movlw	15
   873   001100  6FA7               	movwf	(main@motorR+8)& (0+255),b
   874   001102                     
   875                           ; BSR set to: 1
   876                           ;main.c: 56:     motorR.PWMperiod=PWMcycle;
   877   001102  C05C  F1A2         	movff	main@PWMcycle,main@motorR+3
   878   001106  6BA3               	clrf	(main@motorR+4)& (0+255),b
   879   001108                     
   880                           ; BSR set to: 1
   881                           ;main.c: 58:     setMotorPWM(&motorL);
   882   001108  0E96               	movlw	low main@motorL
   883   00110A  6E0E               	movwf	setMotorPWM@m^0,c
   884   00110C  0E01               	movlw	high main@motorL
   885   00110E  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   886   001110  EC50  F00C         	call	_setMotorPWM	;wreg free
   887   001114                     
   888                           ;main.c: 59:     setMotorPWM(&motorR);
   889   001114  0E9F               	movlw	low main@motorR
   890   001116  6E0E               	movwf	setMotorPWM@m^0,c
   891   001118  0E01               	movlw	high main@motorR
   892   00111A  6E0F               	movwf	(setMotorPWM@m+1)^0,c
   893   00111C  EC50  F00C         	call	_setMotorPWM	;wreg free
   894   001120                     
   895                           ;main.c: 66:     unsigned int expected_values[3][9];;main.c: 67:     unsigned int normal
      +                          ised_values[3][9];;main.c: 68:     unsigned int master_closeness[9];;main.c: 69:     uns
      +                          igned int red_read = 0;
   896   001120  0E00               	movlw	0
   897   001122  6E5E               	movwf	(main@red_read+1)^0,c
   898   001124  0E00               	movlw	0
   899   001126  6E5D               	movwf	main@red_read^0,c
   900   001128                     
   901                           ;main.c: 70:     unsigned int green_read = 0;
   902   001128  0E00               	movlw	0
   903   00112A  0100               	movlb	0	; () banked
   904   00112C  6FF7               	movwf	(main@green_read+1)& (0+255),b
   905   00112E  0E00               	movlw	0
   906   001130  6FF6               	movwf	main@green_read& (0+255),b
   907   001132                     
   908                           ; BSR set to: 0
   909                           ;main.c: 71:     unsigned int blue_read = 0;
   910   001132  0E00               	movlw	0
   911   001134  6FF9               	movwf	(main@blue_read+1)& (0+255),b
   912   001136  0E00               	movlw	0
   913   001138  6FF8               	movwf	main@blue_read& (0+255),b
   914   00113A                     
   915                           ; BSR set to: 0
   916                           ;main.c: 83:     LATDbits.LATD4 = 0;
   917   00113A  987C               	bcf	124,4,c	;volatile
   918   00113C                     
   919                           ; BSR set to: 0
   920                           ;main.c: 84:     for(colour i = RED; i<= BLACK; i++){
   921   00113C  0E00               	movlw	0
   922   00113E  6FF5               	movwf	main@i& (0+255),b
   923   001140  EFA3  F008         	goto	l237
   924   001144                     l238:
   925                           
   926                           ;main.c: 86:             LATDbits.LATD4 = 1;
   927   001144  887C               	bsf	124,4,c	;volatile
   928   001146                     l237:
   929                           
   930                           ;main.c: 85:         while(PORTFbits.RF2){
   931   001146  B48E               	btfsc	142,2,c	;volatile
   932   001148  EFA8  F008         	goto	u1361
   933   00114C  EFAA  F008         	goto	u1360
   934   001150                     u1361:
   935   001150  EFA2  F008         	goto	l238
   936   001154                     u1360:
   937   001154                     
   938                           ;main.c: 88:         LATDbits.LATD4 = 0;
   939   001154  987C               	bcf	124,4,c	;volatile
   940   001156                     
   941                           ;main.c: 89:         _delay((unsigned long)((500)*(64000000/4000.0)));
   942   001156  0E29               	movlw	41
   943   001158  6E5A               	movwf	(??_main+1)^0,c
   944   00115A  0E96               	movlw	150
   945   00115C  6E59               	movwf	??_main^0,c
   946   00115E  0E7F               	movlw	127
   947   001160                     u1447:
   948   001160  2EE8               	decfsz	wreg,f,c
   949   001162  D7FE               	bra	u1447
   950   001164  2E59               	decfsz	??_main^0,f,c
   951   001166  D7FC               	bra	u1447
   952   001168  2E5A               	decfsz	(??_main+1)^0,f,c
   953   00116A  D7FA               	bra	u1447
   954   00116C  F000               	nop	
   955   00116E                     
   956                           ;main.c: 90:         collect_avg_readings(&red_read, &green_read, &blue_read);
   957   00116E  0E5D               	movlw	low main@red_read
   958   001170  6E0E               	movwf	collect_avg_readings@red_read^0,c
   959   001172  0E00               	movlw	high main@red_read
   960   001174  6E0F               	movwf	(collect_avg_readings@red_read+1)^0,c
   961   001176  0EF6               	movlw	low main@green_read
   962   001178  6E10               	movwf	collect_avg_readings@green_read^0,c
   963   00117A  0E00               	movlw	high main@green_read
   964   00117C  6E11               	movwf	(collect_avg_readings@green_read+1)^0,c
   965   00117E  0EF8               	movlw	low main@blue_read
   966   001180  6E12               	movwf	collect_avg_readings@blue_read^0,c
   967   001182  0E00               	movlw	high main@blue_read
   968   001184  6E13               	movwf	(collect_avg_readings@blue_read+1)^0,c
   969   001186  EC99  F00A         	call	_collect_avg_readings	;wreg free
   970   00118A                     
   971                           ;main.c: 91:         expected_values[RED][i] = red_read;
   972   00118A  0100               	movlb	0	; () banked
   973   00118C  51F5               	movf	main@i& (0+255),w,b
   974   00118E  0D02               	mullw	2
   975   001190  0EAD               	movlw	low main@expected_values
   976   001192  24F3               	addwf	243,w,c
   977   001194  6ED9               	movwf	fsr2l,c
   978   001196  0E00               	movlw	high main@expected_values
   979   001198  20F4               	addwfc	prodh,w,c
   980   00119A  6EDA               	movwf	fsr2h,c
   981   00119C  C05D  FFDE         	movff	main@red_read,postinc2
   982   0011A0  C05E  FFDD         	movff	main@red_read+1,postdec2
   983   0011A4                     
   984                           ; BSR set to: 0
   985                           ;main.c: 92:         expected_values[GREEN][i] = green_read;
   986   0011A4  51F5               	movf	main@i& (0+255),w,b
   987   0011A6  0D02               	mullw	2
   988   0011A8  0E12               	movlw	18
   989   0011AA  26F3               	addwf	243,f,c
   990   0011AC  0E00               	movlw	0
   991   0011AE  22F4               	addwfc	244,f,c
   992   0011B0  0EAD               	movlw	low main@expected_values
   993   0011B2  24F3               	addwf	243,w,c
   994   0011B4  6ED9               	movwf	fsr2l,c
   995   0011B6  0E00               	movlw	high main@expected_values
   996   0011B8  20F4               	addwfc	prodh,w,c
   997   0011BA  6EDA               	movwf	fsr2h,c
   998   0011BC  C0F6  FFDE         	movff	main@green_read,postinc2
   999   0011C0  C0F7  FFDD         	movff	main@green_read+1,postdec2
  1000   0011C4                     
  1001                           ; BSR set to: 0
  1002                           ;main.c: 93:         expected_values[BLUE][i] = blue_read;
  1003   0011C4  51F5               	movf	main@i& (0+255),w,b
  1004   0011C6  0D02               	mullw	2
  1005   0011C8  0E24               	movlw	36
  1006   0011CA  26F3               	addwf	243,f,c
  1007   0011CC  0E00               	movlw	0
  1008   0011CE  22F4               	addwfc	244,f,c
  1009   0011D0  0EAD               	movlw	low main@expected_values
  1010   0011D2  24F3               	addwf	243,w,c
  1011   0011D4  6ED9               	movwf	fsr2l,c
  1012   0011D6  0E00               	movlw	high main@expected_values
  1013   0011D8  20F4               	addwfc	prodh,w,c
  1014   0011DA  6EDA               	movwf	fsr2h,c
  1015   0011DC  C0F8  FFDE         	movff	main@blue_read,postinc2
  1016   0011E0  C0F9  FFDD         	movff	main@blue_read+1,postdec2
  1017   0011E4                     
  1018                           ; BSR set to: 0
  1019                           ;main.c: 94:     }
  1020   0011E4  2BF5               	incf	main@i& (0+255),f,b
  1021   0011E6                     
  1022                           ; BSR set to: 0
  1023   0011E6  0E08               	movlw	8
  1024   0011E8  65F5               	cpfsgt	main@i& (0+255),b
  1025   0011EA  EFF9  F008         	goto	u1371
  1026   0011EE  EFFB  F008         	goto	u1370
  1027   0011F2                     u1371:
  1028   0011F2  EFA3  F008         	goto	l237
  1029   0011F6                     u1370:
  1030   0011F6  EFFF  F008         	goto	l241
  1031   0011FA                     l242:
  1032                           
  1033                           ;main.c: 118:             LATDbits.LATD4 = 1;
  1034   0011FA  887C               	bsf	124,4,c	;volatile
  1035                           
  1036                           ;main.c: 119:             LATFbits.LATF0 = 1;
  1037   0011FC  807E               	bsf	126,0,c	;volatile
  1038   0011FE                     l241:
  1039                           
  1040                           ;main.c: 117:         while(PORTFbits.RF2){
  1041   0011FE  B48E               	btfsc	142,2,c	;volatile
  1042   001200  EF04  F009         	goto	u1381
  1043   001204  EF06  F009         	goto	u1380
  1044   001208                     u1381:
  1045   001208  EFFD  F008         	goto	l242
  1046   00120C                     u1380:
  1047   00120C                     
  1048                           ;main.c: 121:         LATFbits.LATF0 = 0;
  1049   00120C  907E               	bcf	126,0,c	;volatile
  1050   00120E                     
  1051                           ;main.c: 124:         collect_avg_readings(&red_read, &green_read, &blue_read);
  1052   00120E  0E5D               	movlw	low main@red_read
  1053   001210  6E0E               	movwf	collect_avg_readings@red_read^0,c
  1054   001212  0E00               	movlw	high main@red_read
  1055   001214  6E0F               	movwf	(collect_avg_readings@red_read+1)^0,c
  1056   001216  0EF6               	movlw	low main@green_read
  1057   001218  6E10               	movwf	collect_avg_readings@green_read^0,c
  1058   00121A  0E00               	movlw	high main@green_read
  1059   00121C  6E11               	movwf	(collect_avg_readings@green_read+1)^0,c
  1060   00121E  0EF8               	movlw	low main@blue_read
  1061   001220  6E12               	movwf	collect_avg_readings@blue_read^0,c
  1062   001222  0E00               	movlw	high main@blue_read
  1063   001224  6E13               	movwf	(collect_avg_readings@blue_read+1)^0,c
  1064   001226  EC99  F00A         	call	_collect_avg_readings	;wreg free
  1065   00122A                     
  1066                           ;main.c: 125:         sprintf(buf, "\n AVG: R %d, G %d, B %d \n", red_read, green_read, 
      +                          blue_read);
  1067   00122A  0E00               	movlw	low main@buf
  1068   00122C  0100               	movlb	0	; () banked
  1069   00122E  6F60               	movwf	sprintf@s& (0+255),b
  1070   001230  0E01               	movlw	high main@buf
  1071   001232  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1072   001234  0E01               	movlw	low STR_1
  1073   001236  6F62               	movwf	sprintf@fmt& (0+255),b
  1074   001238  0E0E               	movlw	high STR_1
  1075   00123A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1076   00123C  C05D  F064         	movff	main@red_read,?_sprintf+4
  1077   001240  C05E  F065         	movff	main@red_read+1,?_sprintf+5
  1078   001244  C0F6  F066         	movff	main@green_read,?_sprintf+6
  1079   001248  C0F7  F067         	movff	main@green_read+1,?_sprintf+7
  1080   00124C  C0F8  F068         	movff	main@blue_read,?_sprintf+8
  1081   001250  C0F9  F069         	movff	main@blue_read+1,?_sprintf+9
  1082   001254  EC3E  F010         	call	_sprintf	;wreg free
  1083   001258                     
  1084                           ;main.c: 126:         sendStringSerial4(buf);
  1085   001258  0E00               	movlw	low main@buf
  1086   00125A  6E02               	movwf	sendStringSerial4@string^0,c
  1087   00125C  0E01               	movlw	high main@buf
  1088   00125E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1089   001260  EC85  F011         	call	_sendStringSerial4	;wreg free
  1090   001264                     
  1091                           ;main.c: 128:         normalise_readings(buf, red_read, green_read, blue_read, expected_
      +                          values, normalised_values);
  1092   001264  0E00               	movlw	low main@buf
  1093   001266  6E17               	movwf	normalise_readings@buf^0,c
  1094   001268  0E01               	movlw	high main@buf
  1095   00126A  6E18               	movwf	(normalise_readings@buf+1)^0,c
  1096   00126C  C05D  F019         	movff	main@red_read,normalise_readings@red_read
  1097   001270  C05E  F01A         	movff	main@red_read+1,normalise_readings@red_read+1
  1098   001274  C0F6  F01B         	movff	main@green_read,normalise_readings@green_read
  1099   001278  C0F7  F01C         	movff	main@green_read+1,normalise_readings@green_read+1
  1100   00127C  C0F8  F01D         	movff	main@blue_read,normalise_readings@blue_read
  1101   001280  C0F9  F01E         	movff	main@blue_read+1,normalise_readings@blue_read+1
  1102   001284  0EAD               	movlw	low main@expected_values
  1103   001286  6E1F               	movwf	normalise_readings@expected_values^0,c
  1104   001288  0E00               	movlw	high main@expected_values
  1105   00128A  6E20               	movwf	(normalise_readings@expected_values+1)^0,c
  1106   00128C  0E77               	movlw	low main@normalised_values
  1107   00128E  6E21               	movwf	normalise_readings@normalised_values^0,c
  1108   001290  0E00               	movlw	high main@normalised_values
  1109   001292  6E22               	movwf	(normalise_readings@normalised_values+1)^0,c
  1110   001294  EC79  F009         	call	_normalise_readings	;wreg free
  1111   001298                     
  1112                           ;main.c: 129:         make_master_closeness(buf, normalised_values,master_closeness);
  1113   001298  0E00               	movlw	low main@buf
  1114   00129A  6E0E               	movwf	make_master_closeness@buf^0,c
  1115   00129C  0E01               	movlw	high main@buf
  1116   00129E  6E0F               	movwf	(make_master_closeness@buf+1)^0,c
  1117   0012A0  0E77               	movlw	low main@normalised_values
  1118   0012A2  6E10               	movwf	make_master_closeness@normalised_values^0,c
  1119   0012A4  0E00               	movlw	high main@normalised_values
  1120   0012A6  6E11               	movwf	(make_master_closeness@normalised_values+1)^0,c
  1121   0012A8  0EE3               	movlw	low main@master_closeness
  1122   0012AA  6E12               	movwf	make_master_closeness@master_closeness^0,c
  1123   0012AC  0E00               	movlw	high main@master_closeness
  1124   0012AE  6E13               	movwf	(make_master_closeness@master_closeness+1)^0,c
  1125   0012B0  EC68  F00E         	call	_make_master_closeness	;wreg free
  1126   0012B4                     
  1127                           ;main.c: 130:         card = determine_card(master_closeness);
  1128   0012B4  0EE3               	movlw	low main@master_closeness
  1129   0012B6  6E01               	movwf	determine_card@master_closeness^0,c
  1130   0012B8  0E00               	movlw	high main@master_closeness
  1131   0012BA  6E02               	movwf	(determine_card@master_closeness+1)^0,c
  1132   0012BC  EC87  F00F         	call	_determine_card	;wreg free
  1133   0012C0  6E5B               	movwf	main@card^0,c
  1134   0012C2                     
  1135                           ;main.c: 131:         sprintf(buf, "CARD %d \n", card);
  1136   0012C2  0E00               	movlw	low main@buf
  1137   0012C4  0100               	movlb	0	; () banked
  1138   0012C6  6F60               	movwf	sprintf@s& (0+255),b
  1139   0012C8  0E01               	movlw	high main@buf
  1140   0012CA  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1141   0012CC  0E1B               	movlw	low STR_2
  1142   0012CE  6F62               	movwf	sprintf@fmt& (0+255),b
  1143   0012D0  0E0E               	movlw	high STR_2
  1144   0012D2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1145   0012D4  C05B  F064         	movff	main@card,?_sprintf+4
  1146   0012D8  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1147   0012DA  EC3E  F010         	call	_sprintf	;wreg free
  1148   0012DE                     
  1149                           ;main.c: 132:         sendStringSerial4(buf);
  1150   0012DE  0E00               	movlw	low main@buf
  1151   0012E0  6E02               	movwf	sendStringSerial4@string^0,c
  1152   0012E2  0E01               	movlw	high main@buf
  1153   0012E4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1154   0012E6  EC85  F011         	call	_sendStringSerial4	;wreg free
  1155   0012EA  EFFF  F008         	goto	l241
  1156   0012EE  EF00  F000         	goto	start
  1157   0012F2                     __end_of_main:
  1158                           	callstack 0
  1159                           
  1160 ;; *************** function _sprintf *****************
  1161 ;; Defined at:
  1162 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1165 ;;		 -> main@buf(150), 
  1166 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1167 ;;		 -> STR_2(10), STR_1(26), 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  f              11   12[BANK0 ] struct _IO_FILE
  1170 ;;  ap              2   10[BANK0 ] PTR void [1]
  1171 ;;		 -> ?_sprintf(2), 
  1172 ;;  ret             2    0        int 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  2    0[BANK0 ] int 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1182 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;Total ram usage:       23 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 7
  1189 ;; This function calls:
  1190 ;;		_vfprintf
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text1
  1197   00207C                     __ptext1:
  1198                           	callstack 0
  1199   00207C                     _sprintf:
  1200                           	callstack 23
  1201   00207C  0E64               	movlw	low (?_sprintf+4)
  1202   00207E  0100               	movlb	0	; () banked
  1203   002080  6F6A               	movwf	sprintf@ap& (0+255),b
  1204   002082  0E00               	movlw	high (?_sprintf+4)
  1205   002084  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1206   002086  C060  F06C         	movff	sprintf@s,sprintf@f
  1207   00208A  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1208   00208E                     
  1209                           ; BSR set to: 0
  1210   00208E  0E00               	movlw	0
  1211   002090  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1212   002092  0E00               	movlw	0
  1213   002094  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1214   002096                     
  1215                           ; BSR set to: 0
  1216   002096  0E00               	movlw	0
  1217   002098  6F76               	movwf	(sprintf@f+10)& (0+255),b
  1218   00209A  0E00               	movlw	0
  1219   00209C  6F75               	movwf	(sprintf@f+9)& (0+255),b
  1220   00209E                     
  1221                           ; BSR set to: 0
  1222   00209E  0E6C               	movlw	low sprintf@f
  1223   0020A0  6E51               	movwf	vfprintf@fp^0,c
  1224   0020A2  0E00               	movlw	high sprintf@f
  1225   0020A4  6E52               	movwf	(vfprintf@fp+1)^0,c
  1226   0020A6  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1227   0020AA  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1228   0020AE  0E6A               	movlw	low sprintf@ap
  1229   0020B0  6E55               	movwf	vfprintf@ap^0,c
  1230   0020B2  0E00               	movlw	high sprintf@ap
  1231   0020B4  6E56               	movwf	(vfprintf@ap+1)^0,c
  1232   0020B6  EC67  F010         	call	_vfprintf	;wreg free
  1233   0020BA  0100               	movlb	0	; () banked
  1234   0020BC  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1235   0020BE  2560               	addwf	sprintf@s& (0+255),w,b
  1236   0020C0  6ED9               	movwf	fsr2l,c
  1237   0020C2  5170               	movf	(sprintf@f+4)& (0+255),w,b
  1238   0020C4  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1239   0020C6  6EDA               	movwf	fsr2h,c
  1240   0020C8  0E00               	movlw	0
  1241   0020CA  6EDF               	movwf	indf2,c
  1242   0020CC                     
  1243                           ; BSR set to: 0
  1244   0020CC  0012               	return		;funcret
  1245   0020CE                     __end_of_sprintf:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _vfprintf *****************
  1249 ;; Defined at:
  1250 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1253 ;;		 -> sprintf@f(11), 
  1254 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1255 ;;		 -> STR_2(10), STR_1(26), 
  1256 ;;  ap              2   84[COMRAM] PTR PTR void 
  1257 ;;		 -> sprintf@ap(2), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1260 ;;		 -> STR_2(10), STR_1(26), 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2   80[COMRAM] int 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1270 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;Total ram usage:        8 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 6
  1277 ;; This function calls:
  1278 ;;		_vfpfcnvrt
  1279 ;; This function is called by:
  1280 ;;		_sprintf
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text2
  1285   0020CE                     __ptext2:
  1286                           	callstack 0
  1287   0020CE                     _vfprintf:
  1288                           	callstack 23
  1289   0020CE                     
  1290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1291   0020CE  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1292   0020D2  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1295   0020D6  EF7B  F010         	goto	l2299
  1296   0020DA                     l2297:
  1297                           
  1298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1299   0020DA  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1300   0020DE  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1301   0020E2  0E57               	movlw	low vfprintf@cfmt
  1302   0020E4  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1303   0020E6  0E00               	movlw	high vfprintf@cfmt
  1304   0020E8  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1305   0020EA  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1306   0020EE  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1307   0020F2  ECB8  F00D         	call	_vfpfcnvrt	;wreg free
  1308   0020F6                     l2299:
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1311   0020F6  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1312   0020FA  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1313   0020FE                     	if	0	;tblptru may be non-zero
  1314   0020FE                     	endif
  1315   0020FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1316   0020FE  0E00               	movlw	low (__mediumconst shr (0+16))
  1317   002100  6EF8               	movwf	tblptru,c
  1318   002102                     	endif
  1319   002102  0008               	tblrd		*
  1320   002104  50F5               	movf	tablat,w,c
  1321   002106  0900               	iorlw	0
  1322   002108  A4D8               	btfss	status,2,c
  1323   00210A  EF89  F010         	goto	u1151
  1324   00210E  EF8B  F010         	goto	u1150
  1325   002112                     u1151:
  1326   002112  EF6D  F010         	goto	l2297
  1327   002116                     u1150:
  1328   002116                     
  1329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1330   002116  0E00               	movlw	0
  1331   002118  6E52               	movwf	(?_vfprintf+1)^0,c
  1332   00211A  0E00               	movlw	0
  1333   00211C  6E51               	movwf	?_vfprintf^0,c
  1334   00211E  0012               	return		;funcret
  1335   002120                     __end_of_vfprintf:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _vfpfcnvrt *****************
  1339 ;; Defined at:
  1340 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1343 ;;		 -> sprintf@f(11), 
  1344 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1345 ;;		 -> vfprintf@cfmt(2), 
  1346 ;;  ap              2   66[COMRAM] PTR PTR void 
  1347 ;;		 -> sprintf@ap(2), 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  convarg         8   70[COMRAM] struct .
  1350 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1351 ;;		 -> STR_2(10), STR_1(26), 
  1352 ;;  i               2    0        int 
  1353 ;;  done            2    0        int 
  1354 ;;  c               1    0        unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1364 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1367 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1368 ;;Total ram usage:       18 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; Hardware stack levels required when called: 5
  1371 ;; This function calls:
  1372 ;;		_dtoa
  1373 ;;		_fputc
  1374 ;; This function is called by:
  1375 ;;		_vfprintf
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text3
  1380   001B70                     __ptext3:
  1381                           	callstack 0
  1382   001B70                     _vfpfcnvrt:
  1383                           	callstack 23
  1384   001B70                     
  1385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1386   001B70  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1387   001B74  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1388   001B78  CFDE FFF6          	movff	postinc2,tblptrl
  1389   001B7C  CFDD FFF7          	movff	postdec2,tblptrh
  1390   001B80                     	if	0	;tblptru may be non-zero
  1391   001B80                     	endif
  1392   001B80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1393   001B80  0E00               	movlw	low (__mediumconst shr (0+16))
  1394   001B82  6EF8               	movwf	tblptru,c
  1395   001B84                     	endif
  1396   001B84  0008               	tblrd		*
  1397   001B86  50F5               	movf	tablat,w,c
  1398   001B88  0A25               	xorlw	37
  1399   001B8A  A4D8               	btfss	status,2,c
  1400   001B8C  EFCA  F00D         	goto	u1081
  1401   001B90  EFCC  F00D         	goto	u1080
  1402   001B94                     u1081:
  1403   001B94  EF51  F00E         	goto	l2225
  1404   001B98                     u1080:
  1405   001B98                     
  1406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1407   001B98  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1408   001B9C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1409   001BA0  2ADE               	incf	postinc2,f,c
  1410   001BA2  0E00               	movlw	0
  1411   001BA4  22DD               	addwfc	postdec2,f,c
  1412   001BA6                     
  1413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1414   001BA6  0E00               	movlw	0
  1415   001BA8  0101               	movlb	1	; () banked
  1416   001BAA  6FBD               	movwf	(_width+1)& (0+255),b
  1417   001BAC  0E00               	movlw	0
  1418   001BAE  6FBC               	movwf	_width& (0+255),b
  1419   001BB0  C1BC  F0FC         	movff	_width,_flags
  1420   001BB4                     
  1421                           ; BSR set to: 1
  1422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1423   001BB4  0100               	movlb	0	; () banked
  1424   001BB6  69FA               	setf	_prec& (0+255),b
  1425   001BB8  69FB               	setf	(_prec+1)& (0+255),b
  1426   001BBA                     
  1427                           ; BSR set to: 0
  1428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1429   001BBA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1430   001BBE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1431   001BC2  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1432   001BC6  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1433   001BCA                     
  1434                           ; BSR set to: 0
  1435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1436   001BCA  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1437   001BCE  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1438   001BD2                     	if	0	;tblptru may be non-zero
  1439   001BD2                     	endif
  1440   001BD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1441   001BD2  0E00               	movlw	low (__mediumconst shr (0+16))
  1442   001BD4  6EF8               	movwf	tblptru,c
  1443   001BD6                     	endif
  1444   001BD6  0008               	tblrd		*
  1445   001BD8  50F5               	movf	tablat,w,c
  1446   001BDA  0A64               	xorlw	100
  1447   001BDC  B4D8               	btfsc	status,2,c
  1448   001BDE  EFF3  F00D         	goto	u1091
  1449   001BE2  EFF5  F00D         	goto	u1090
  1450   001BE6                     u1091:
  1451   001BE6  EF05  F00E         	goto	l2215
  1452   001BEA                     u1090:
  1453   001BEA                     
  1454                           ; BSR set to: 0
  1455   001BEA  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1456   001BEE  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1457   001BF2                     	if	0	;tblptru may be non-zero
  1458   001BF2                     	endif
  1459   001BF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1460   001BF2  0E00               	movlw	low (__mediumconst shr (0+16))
  1461   001BF4  6EF8               	movwf	tblptru,c
  1462   001BF6                     	endif
  1463   001BF6  0008               	tblrd		*
  1464   001BF8  50F5               	movf	tablat,w,c
  1465   001BFA  0A69               	xorlw	105
  1466   001BFC  A4D8               	btfss	status,2,c
  1467   001BFE  EF03  F00E         	goto	u1101
  1468   001C02  EF05  F00E         	goto	u1100
  1469   001C06                     u1101:
  1470   001C06  EF48  F00E         	goto	l2221
  1471   001C0A                     u1100:
  1472   001C0A                     l2215:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1476   001C0A  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1477   001C0E  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1478   001C12  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1479   001C16  0E02               	movlw	2
  1480   001C18  26DE               	addwf	postinc2,f,c
  1481   001C1A  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1482   001C1E  0E00               	movlw	0
  1483   001C20  22DD               	addwfc	postdec2,f,c
  1484   001C22  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1485   001C26  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1486   001C2A  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1487   001C2E  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1488   001C32  0E00               	movlw	0
  1489   001C34  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1490   001C36  0EFF               	movlw	-1
  1491   001C38  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1492   001C3A  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1493   001C3C  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1494   001C3E  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1495   001C40  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1496   001C42  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1499   001C44  0E01               	movlw	1
  1500   001C46  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1501   001C48  6E45               	movwf	??_vfpfcnvrt^0,c
  1502   001C4A  0E00               	movlw	0
  1503   001C4C  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1504   001C4E  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1505   001C50  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1506   001C54  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1507   001C58  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1508   001C5C  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1509   001C60                     
  1510                           ; BSR set to: 0
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1512   001C60  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1513   001C64  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1514   001C68  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1515   001C6C  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1516   001C70  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1517   001C74  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1518   001C78  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1519   001C7C  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1520   001C80  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1521   001C84  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1522   001C88  EC13  F007         	call	_dtoa	;wreg free
  1523   001C8C  EF67  F00E         	goto	l1164
  1524   001C90                     l2221:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1527   001C90  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1528   001C94  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1529   001C98  2ADE               	incf	postinc2,f,c
  1530   001C9A  0E00               	movlw	0
  1531   001C9C  22DD               	addwfc	postdec2,f,c
  1532   001C9E  EF67  F00E         	goto	l1164
  1533   001CA2                     l2225:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1536   001CA2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1537   001CA6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1538   001CAA  CFDE FFF6          	movff	postinc2,tblptrl
  1539   001CAE  CFDD FFF7          	movff	postdec2,tblptrh
  1540   001CB2                     	if	0	;tblptru may be non-zero
  1541   001CB2                     	endif
  1542   001CB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1543   001CB2  0E00               	movlw	low (__mediumconst shr (0+16))
  1544   001CB4  6EF8               	movwf	tblptru,c
  1545   001CB6                     	endif
  1546   001CB6  0008               	tblrd		*
  1547   001CB8  50F5               	movf	tablat,w,c
  1548   001CBA  6E01               	movwf	fputc@c^0,c
  1549   001CBC  6A02               	clrf	(fputc@c+1)^0,c
  1550   001CBE  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1551   001CC2  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1552   001CC6  ECDE  F00E         	call	_fputc	;wreg free
  1553   001CCA  EF48  F00E         	goto	l2221
  1554   001CCE                     l1164:
  1555   001CCE  0012               	return		;funcret
  1556   001CD0                     __end_of_vfpfcnvrt:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _dtoa *****************
  1560 ;; Defined at:
  1561 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1564 ;;		 -> sprintf@f(11), 
  1565 ;;  d               8   29[COMRAM] long long 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  n               8   51[COMRAM] long long 
  1568 ;;  i               2   59[COMRAM] int 
  1569 ;;  w               2   49[COMRAM] int 
  1570 ;;  p               2   47[COMRAM] int 
  1571 ;;  s               1   61[COMRAM] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1581 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1582 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1583 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1584 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1585 ;;Total ram usage:       35 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 4
  1588 ;; This function calls:
  1589 ;;		___aodiv
  1590 ;;		___aomod
  1591 ;;		_abs
  1592 ;;		_pad
  1593 ;; This function is called by:
  1594 ;;		_vfpfcnvrt
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text4
  1599   000E26                     __ptext4:
  1600                           	callstack 0
  1601   000E26                     _dtoa:
  1602                           	callstack 23
  1603   000E26                     
  1604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1605   000E26  C01E  F034         	movff	dtoa@d,dtoa@n
  1606   000E2A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1607   000E2E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1608   000E32  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1609   000E36  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1610   000E3A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1611   000E3E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1612   000E42  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1613   000E46                     
  1614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1615   000E46  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1616   000E48  EF28  F007         	goto	u961
  1617   000E4C  EF2B  F007         	goto	u960
  1618   000E50                     u961:
  1619   000E50  0E01               	movlw	1
  1620   000E52  EF2C  F007         	goto	u970
  1621   000E56                     u960:
  1622   000E56  0E00               	movlw	0
  1623   000E58                     u970:
  1624   000E58  6E3E               	movwf	dtoa@s^0,c
  1625   000E5A                     
  1626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1627   000E5A  503E               	movf	dtoa@s^0,w,c
  1628   000E5C  B4D8               	btfsc	status,2,c
  1629   000E5E  EF33  F007         	goto	u981
  1630   000E62  EF35  F007         	goto	u980
  1631   000E66                     u981:
  1632   000E66  EF45  F007         	goto	l2127
  1633   000E6A                     u980:
  1634   000E6A                     
  1635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1636   000E6A  1E3B               	comf	(dtoa@n+7)^0,f,c
  1637   000E6C  1E3A               	comf	(dtoa@n+6)^0,f,c
  1638   000E6E  1E39               	comf	(dtoa@n+5)^0,f,c
  1639   000E70  1E38               	comf	(dtoa@n+4)^0,f,c
  1640   000E72  1E37               	comf	(dtoa@n+3)^0,f,c
  1641   000E74  1E36               	comf	(dtoa@n+2)^0,f,c
  1642   000E76  1E35               	comf	(dtoa@n+1)^0,f,c
  1643   000E78  6C34               	negf	dtoa@n^0,c
  1644   000E7A  0E00               	movlw	0
  1645   000E7C  2235               	addwfc	(dtoa@n+1)^0,f,c
  1646   000E7E  2236               	addwfc	(dtoa@n+2)^0,f,c
  1647   000E80  2237               	addwfc	(dtoa@n+3)^0,f,c
  1648   000E82  2238               	addwfc	(dtoa@n+4)^0,f,c
  1649   000E84  2239               	addwfc	(dtoa@n+5)^0,f,c
  1650   000E86  223A               	addwfc	(dtoa@n+6)^0,f,c
  1651   000E88  223B               	addwfc	(dtoa@n+7)^0,f,c
  1652   000E8A                     l2127:
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1655   000E8A  0100               	movlb	0	; () banked
  1656   000E8C  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  1657   000E8E  EF53  F007         	goto	u990
  1658   000E92  51FB               	movf	(_prec+1)& (0+255),w,b
  1659   000E94  E106               	bnz	u991
  1660   000E96  05FA               	decf	_prec& (0+255),w,b
  1661   000E98  B0D8               	btfsc	status,0,c
  1662   000E9A  EF51  F007         	goto	u991
  1663   000E9E  EF53  F007         	goto	u990
  1664   000EA2                     u991:
  1665   000EA2  EF59  F007         	goto	l1143
  1666   000EA6                     u990:
  1667   000EA6                     
  1668                           ; BSR set to: 0
  1669   000EA6  0E00               	movlw	0
  1670   000EA8  6E31               	movwf	(dtoa@p+1)^0,c
  1671   000EAA  0E01               	movlw	1
  1672   000EAC  6E30               	movwf	dtoa@p^0,c
  1673   000EAE  EF5D  F007         	goto	l1145
  1674   000EB2                     l1143:
  1675                           
  1676                           ; BSR set to: 0
  1677   000EB2  C0FA  F030         	movff	_prec,dtoa@p
  1678   000EB6  C0FB  F031         	movff	_prec+1,dtoa@p+1
  1679   000EBA                     l1145:
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1683   000EBA  C1BC  F032         	movff	_width,dtoa@w
  1684   000EBE  C1BD  F033         	movff	_width+1,dtoa@w+1
  1685   000EC2                     
  1686                           ; BSR set to: 0
  1687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1688   000EC2  503E               	movf	dtoa@s^0,w,c
  1689   000EC4  B4D8               	btfsc	status,2,c
  1690   000EC6  EF67  F007         	goto	u1001
  1691   000ECA  EF69  F007         	goto	u1000
  1692   000ECE                     u1001:
  1693   000ECE  EF80  F007         	goto	l1146
  1694   000ED2                     u1000:
  1695   000ED2                     
  1696                           ; BSR set to: 0
  1697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1698   000ED2  0632               	decf	dtoa@w^0,f,c
  1699   000ED4  A0D8               	btfss	status,0,c
  1700   000ED6  0633               	decf	(dtoa@w+1)^0,f,c
  1701   000ED8                     
  1702                           ; BSR set to: 0
  1703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1704   000ED8  503E               	movf	dtoa@s^0,w,c
  1705   000EDA  A4D8               	btfss	status,2,c
  1706   000EDC  EF72  F007         	goto	u1011
  1707   000EE0  EF74  F007         	goto	u1010
  1708   000EE4                     u1011:
  1709   000EE4  EF7A  F007         	goto	l2139
  1710   000EE8                     u1010:
  1711   000EE8                     
  1712                           ; BSR set to: 0
  1713   000EE8  0E00               	movlw	0
  1714   000EEA  6E2F               	movwf	(_dtoa$2279+1)^0,c
  1715   000EEC  0E2B               	movlw	43
  1716   000EEE  6E2E               	movwf	_dtoa$2279^0,c
  1717   000EF0  EF7E  F007         	goto	l2141
  1718   000EF4                     l2139:
  1719                           
  1720                           ; BSR set to: 0
  1721   000EF4  0E00               	movlw	0
  1722   000EF6  6E2F               	movwf	(_dtoa$2279+1)^0,c
  1723   000EF8  0E2D               	movlw	45
  1724   000EFA  6E2E               	movwf	_dtoa$2279^0,c
  1725   000EFC                     l2141:
  1726                           
  1727                           ; BSR set to: 0
  1728   000EFC  C02E  F03E         	movff	_dtoa$2279,dtoa@s
  1729   000F00                     l1146:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1733   000F00  0E00               	movlw	0
  1734   000F02  6E3D               	movwf	(dtoa@i+1)^0,c
  1735   000F04  0E1F               	movlw	31
  1736   000F06  6E3C               	movwf	dtoa@i^0,c
  1737   000F08                     
  1738                           ; BSR set to: 0
  1739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1740   000F08  0E00               	movlw	0
  1741   000F0A  0101               	movlb	1	; () banked
  1742   000F0C  6FDD               	movwf	(_dbuf+31)& (0+255),b
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1745   000F0E  EF05  F008         	goto	l2155
  1746   000F12                     l2145:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1749   000F12  063C               	decf	dtoa@i^0,f,c
  1750   000F14  A0D8               	btfss	status,0,c
  1751   000F16  063D               	decf	(dtoa@i+1)^0,f,c
  1752   000F18                     
  1753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1754   000F18  0EBE               	movlw	low _dbuf
  1755   000F1A  243C               	addwf	dtoa@i^0,w,c
  1756   000F1C  6ED9               	movwf	fsr2l,c
  1757   000F1E  0E01               	movlw	high _dbuf
  1758   000F20  203D               	addwfc	(dtoa@i+1)^0,w,c
  1759   000F22  6EDA               	movwf	fsr2h,c
  1760   000F24  C034  F001         	movff	dtoa@n,___aomod@dividend
  1761   000F28  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1762   000F2C  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1763   000F30  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1764   000F34  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1765   000F38  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1766   000F3C  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1767   000F40  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1768   000F44  0E0A               	movlw	10
  1769   000F46  6E09               	movwf	___aomod@divisor^0,c
  1770   000F48  0E00               	movlw	0
  1771   000F4A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1772   000F4C  0E00               	movlw	0
  1773   000F4E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1774   000F50  0E00               	movlw	0
  1775   000F52  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1776   000F54  0E00               	movlw	0
  1777   000F56  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1778   000F58  0E00               	movlw	0
  1779   000F5A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1780   000F5C  0E00               	movlw	0
  1781   000F5E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1782   000F60  0E00               	movlw	0
  1783   000F62  6E10               	movwf	(___aomod@divisor+7)^0,c
  1784   000F64  EC06  F00D         	call	___aomod	;wreg free
  1785   000F68  C001  F026         	movff	?___aomod,??_dtoa
  1786   000F6C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1787   000F70  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1788   000F74  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1789   000F78  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1790   000F7C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1791   000F80  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1792   000F84  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1793   000F88  C026  F013         	movff	??_dtoa,abs@a
  1794   000F8C  C027  F014         	movff	??_dtoa+1,abs@a+1
  1795   000F90  EC4B  F011         	call	_abs	;wreg free
  1796   000F94  5013               	movf	?_abs^0,w,c
  1797   000F96  0F30               	addlw	48
  1798   000F98  6EDF               	movwf	indf2,c
  1799   000F9A                     
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1801   000F9A  0630               	decf	dtoa@p^0,f,c
  1802   000F9C  A0D8               	btfss	status,0,c
  1803   000F9E  0631               	decf	(dtoa@p+1)^0,f,c
  1804   000FA0                     
  1805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1806   000FA0  0632               	decf	dtoa@w^0,f,c
  1807   000FA2  A0D8               	btfss	status,0,c
  1808   000FA4  0633               	decf	(dtoa@w+1)^0,f,c
  1809   000FA6                     
  1810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1811   000FA6  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1812   000FAA  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1813   000FAE  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1814   000FB2  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1815   000FB6  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1816   000FBA  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1817   000FBE  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1818   000FC2  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1819   000FC6  0E0A               	movlw	10
  1820   000FC8  6E09               	movwf	___aodiv@divisor^0,c
  1821   000FCA  0E00               	movlw	0
  1822   000FCC  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1823   000FCE  0E00               	movlw	0
  1824   000FD0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1825   000FD2  0E00               	movlw	0
  1826   000FD4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1827   000FD6  0E00               	movlw	0
  1828   000FD8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1829   000FDA  0E00               	movlw	0
  1830   000FDC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1831   000FDE  0E00               	movlw	0
  1832   000FE0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1833   000FE2  0E00               	movlw	0
  1834   000FE4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1835   000FE6  EC8C  F00B         	call	___aodiv	;wreg free
  1836   000FEA  C001  F034         	movff	?___aodiv,dtoa@n
  1837   000FEE  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1838   000FF2  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1839   000FF6  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1840   000FFA  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1841   000FFE  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1842   001002  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1843   001006  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1844   00100A                     l2155:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1847   00100A  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1848   00100C  EF10  F008         	goto	u1021
  1849   001010  503D               	movf	(dtoa@i+1)^0,w,c
  1850   001012  E108               	bnz	u1020
  1851   001014  043C               	decf	dtoa@i^0,w,c
  1852   001016  A0D8               	btfss	status,0,c
  1853   001018  EF10  F008         	goto	u1021
  1854   00101C  EF12  F008         	goto	u1020
  1855   001020                     u1021:
  1856   001020  EF2E  F008         	goto	l2161
  1857   001024                     u1020:
  1858   001024  5034               	movf	dtoa@n^0,w,c
  1859   001026  1035               	iorwf	(dtoa@n+1)^0,w,c
  1860   001028  1036               	iorwf	(dtoa@n+2)^0,w,c
  1861   00102A  1037               	iorwf	(dtoa@n+3)^0,w,c
  1862   00102C  1038               	iorwf	(dtoa@n+4)^0,w,c
  1863   00102E  1039               	iorwf	(dtoa@n+5)^0,w,c
  1864   001030  103A               	iorwf	(dtoa@n+6)^0,w,c
  1865   001032  103B               	iorwf	(dtoa@n+7)^0,w,c
  1866   001034  A4D8               	btfss	status,2,c
  1867   001036  EF1F  F008         	goto	u1031
  1868   00103A  EF21  F008         	goto	u1030
  1869   00103E                     u1031:
  1870   00103E  EF89  F007         	goto	l2145
  1871   001042                     u1030:
  1872   001042  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1873   001044  EF2E  F008         	goto	u1040
  1874   001048  5031               	movf	(dtoa@p+1)^0,w,c
  1875   00104A  E106               	bnz	u1041
  1876   00104C  0430               	decf	dtoa@p^0,w,c
  1877   00104E  B0D8               	btfsc	status,0,c
  1878   001050  EF2C  F008         	goto	u1041
  1879   001054  EF2E  F008         	goto	u1040
  1880   001058                     u1041:
  1881   001058  EF89  F007         	goto	l2145
  1882   00105C                     u1040:
  1883   00105C                     l2161:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1886   00105C  503E               	movf	dtoa@s^0,w,c
  1887   00105E  B4D8               	btfsc	status,2,c
  1888   001060  EF34  F008         	goto	u1051
  1889   001064  EF36  F008         	goto	u1050
  1890   001068                     u1051:
  1891   001068  EF41  F008         	goto	l2167
  1892   00106C                     u1050:
  1893   00106C                     
  1894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1895   00106C  063C               	decf	dtoa@i^0,f,c
  1896   00106E  A0D8               	btfss	status,0,c
  1897   001070  063D               	decf	(dtoa@i+1)^0,f,c
  1898   001072                     
  1899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1900   001072  0EBE               	movlw	low _dbuf
  1901   001074  243C               	addwf	dtoa@i^0,w,c
  1902   001076  6ED9               	movwf	fsr2l,c
  1903   001078  0E01               	movlw	high _dbuf
  1904   00107A  203D               	addwfc	(dtoa@i+1)^0,w,c
  1905   00107C  6EDA               	movwf	fsr2h,c
  1906   00107E  C03E  FFDF         	movff	dtoa@s,indf2
  1907   001082                     l2167:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1910   001082  C01C  F011         	movff	dtoa@fp,pad@fp
  1911   001086  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1912   00108A  0EBE               	movlw	low _dbuf
  1913   00108C  243C               	addwf	dtoa@i^0,w,c
  1914   00108E  6E13               	movwf	pad@buf^0,c
  1915   001090  0E01               	movlw	high _dbuf
  1916   001092  203D               	addwfc	(dtoa@i+1)^0,w,c
  1917   001094  6E14               	movwf	(pad@buf+1)^0,c
  1918   001096  C032  F015         	movff	dtoa@w,pad@p
  1919   00109A  C033  F016         	movff	dtoa@w+1,pad@p+1
  1920   00109E  ECC7  F00F         	call	_pad	;wreg free
  1921   0010A2  0012               	return		;funcret
  1922   0010A4                     __end_of_dtoa:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function _pad *****************
  1926 ;; Defined at:
  1927 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1930 ;;		 -> sprintf@f(11), 
  1931 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1932 ;;		 -> dbuf(32), 
  1933 ;;  p               2   20[COMRAM] int 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  w               2   25[COMRAM] int 
  1936 ;;  i               2   23[COMRAM] int 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1946 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;Total ram usage:       11 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 3
  1953 ;; This function calls:
  1954 ;;		_fputc
  1955 ;;		_fputs
  1956 ;; This function is called by:
  1957 ;;		_dtoa
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text5
  1962   001F8E                     __ptext5:
  1963                           	callstack 0
  1964   001F8E                     _pad:
  1965                           	callstack 23
  1966   001F8E                     
  1967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1968   001F8E  BE16               	btfsc	(pad@p+1)^0,7,c
  1969   001F90  EFCC  F00F         	goto	u921
  1970   001F94  EFCE  F00F         	goto	u920
  1971   001F98                     u921:
  1972   001F98  EFD4  F00F         	goto	l2105
  1973   001F9C                     u920:
  1974   001F9C  C015  F01A         	movff	pad@p,pad@w
  1975   001FA0  C016  F01B         	movff	pad@p+1,pad@w+1
  1976   001FA4  EFD8  F00F         	goto	l1134
  1977   001FA8                     l2105:
  1978   001FA8  0E00               	movlw	0
  1979   001FAA  6E1B               	movwf	(pad@w+1)^0,c
  1980   001FAC  0E00               	movlw	0
  1981   001FAE  6E1A               	movwf	pad@w^0,c
  1982   001FB0                     l1134:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1985   001FB0  0E00               	movlw	0
  1986   001FB2  6E19               	movwf	(pad@i+1)^0,c
  1987   001FB4  0E00               	movlw	0
  1988   001FB6  6E18               	movwf	pad@i^0,c
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1991   001FB8  EFEA  F00F         	goto	l2111
  1992   001FBC                     l2107:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1995   001FBC  0E00               	movlw	0
  1996   001FBE  6E02               	movwf	(fputc@c+1)^0,c
  1997   001FC0  0E20               	movlw	32
  1998   001FC2  6E01               	movwf	fputc@c^0,c
  1999   001FC4  C011  F003         	movff	pad@fp,fputc@fp
  2000   001FC8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2001   001FCC  ECDE  F00E         	call	_fputc	;wreg free
  2002   001FD0                     
  2003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2004   001FD0  4A18               	infsnz	pad@i^0,f,c
  2005   001FD2  2A19               	incf	(pad@i+1)^0,f,c
  2006   001FD4                     l2111:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2009   001FD4  501A               	movf	pad@w^0,w,c
  2010   001FD6  5C18               	subwf	pad@i^0,w,c
  2011   001FD8  5019               	movf	(pad@i+1)^0,w,c
  2012   001FDA  0A80               	xorlw	128
  2013   001FDC  6E17               	movwf	??_pad^0,c
  2014   001FDE  501B               	movf	(pad@w+1)^0,w,c
  2015   001FE0  0A80               	xorlw	128
  2016   001FE2  5817               	subwfb	??_pad^0,w,c
  2017   001FE4  A0D8               	btfss	status,0,c
  2018   001FE6  EFF7  F00F         	goto	u931
  2019   001FEA  EFF9  F00F         	goto	u930
  2020   001FEE                     u931:
  2021   001FEE  EFDE  F00F         	goto	l2107
  2022   001FF2                     u930:
  2023   001FF2                     
  2024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2025   001FF2  C013  F00A         	movff	pad@buf,fputs@s
  2026   001FF6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2027   001FFA  C011  F00C         	movff	pad@fp,fputs@fp
  2028   001FFE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2029   002002  EC08  F011         	call	_fputs	;wreg free
  2030   002006  0012               	return		;funcret
  2031   002008                     __end_of_pad:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _fputs *****************
  2035 ;; Defined at:
  2036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2039 ;;		 -> dbuf(32), 
  2040 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2041 ;;		 -> sprintf@f(11), 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  i               2   14[COMRAM] int 
  2044 ;;  c               1   13[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2    9[COMRAM] int 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2057 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2058 ;;Total ram usage:        7 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 2
  2061 ;; This function calls:
  2062 ;;		_fputc
  2063 ;; This function is called by:
  2064 ;;		_pad
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text6
  2069   002210                     __ptext6:
  2070                           	callstack 0
  2071   002210                     _fputs:
  2072                           	callstack 23
  2073   002210  0E00               	movlw	0
  2074   002212  6E10               	movwf	(fputs@i+1)^0,c
  2075   002214  0E00               	movlw	0
  2076   002216  6E0F               	movwf	fputs@i^0,c
  2077   002218  EF19  F011         	goto	l2015
  2078   00221C                     l2011:
  2079   00221C  C00E  F001         	movff	fputs@c,fputc@c
  2080   002220  6A02               	clrf	(fputc@c+1)^0,c
  2081   002222  C00C  F003         	movff	fputs@fp,fputc@fp
  2082   002226  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2083   00222A  ECDE  F00E         	call	_fputc	;wreg free
  2084   00222E  4A0F               	infsnz	fputs@i^0,f,c
  2085   002230  2A10               	incf	(fputs@i+1)^0,f,c
  2086   002232                     l2015:
  2087   002232  500F               	movf	fputs@i^0,w,c
  2088   002234  240A               	addwf	fputs@s^0,w,c
  2089   002236  6ED9               	movwf	fsr2l,c
  2090   002238  5010               	movf	(fputs@i+1)^0,w,c
  2091   00223A  200B               	addwfc	(fputs@s+1)^0,w,c
  2092   00223C  6EDA               	movwf	fsr2h,c
  2093   00223E  50DF               	movf	indf2,w,c
  2094   002240  6E0E               	movwf	fputs@c^0,c
  2095   002242  500E               	movf	fputs@c^0,w,c
  2096   002244  A4D8               	btfss	status,2,c
  2097   002246  EF27  F011         	goto	u771
  2098   00224A  EF29  F011         	goto	u770
  2099   00224E                     u771:
  2100   00224E  EF0E  F011         	goto	l2011
  2101   002252                     u770:
  2102   002252  0012               	return		;funcret
  2103   002254                     __end_of_fputs:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function _fputc *****************
  2107 ;; Defined at:
  2108 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  c               2    0[COMRAM] int 
  2111 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2112 ;;		 -> sprintf@f(11), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2    0[COMRAM] int 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2128 ;;Total ram usage:        9 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 1
  2131 ;; This function calls:
  2132 ;;		_putch
  2133 ;; This function is called by:
  2134 ;;		_pad
  2135 ;;		_vfpfcnvrt
  2136 ;;		_fputs
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text7
  2141   001DBC                     __ptext7:
  2142                           	callstack 0
  2143   001DBC                     _fputc:
  2144                           	callstack 26
  2145   001DBC  5003               	movf	fputc@fp^0,w,c
  2146   001DBE  1004               	iorwf	(fputc@fp+1)^0,w,c
  2147   001DC0  B4D8               	btfsc	status,2,c
  2148   001DC2  EFE5  F00E         	goto	u731
  2149   001DC6  EFE7  F00E         	goto	u730
  2150   001DCA                     u731:
  2151   001DCA  EFF0  F00E         	goto	l1999
  2152   001DCE                     u730:
  2153   001DCE  5003               	movf	fputc@fp^0,w,c
  2154   001DD0  1004               	iorwf	(fputc@fp+1)^0,w,c
  2155   001DD2  A4D8               	btfss	status,2,c
  2156   001DD4  EFEE  F00E         	goto	u741
  2157   001DD8  EFF0  F00E         	goto	u740
  2158   001DDC                     u741:
  2159   001DDC  EFF5  F00E         	goto	l2001
  2160   001DE0                     u740:
  2161   001DE0                     l1999:
  2162   001DE0  5001               	movf	fputc@c^0,w,c
  2163   001DE2  EC42  F012         	call	_putch
  2164   001DE6  EF42  F00F         	goto	l1182
  2165   001DEA                     l2001:
  2166   001DEA  EE20 F009          	lfsr	2,9
  2167   001DEE  5003               	movf	fputc@fp^0,w,c
  2168   001DF0  26D9               	addwf	fsr2l,f,c
  2169   001DF2  5004               	movf	(fputc@fp+1)^0,w,c
  2170   001DF4  22DA               	addwfc	fsr2h,f,c
  2171   001DF6  50DE               	movf	postinc2,w,c
  2172   001DF8  10DE               	iorwf	postinc2,w,c
  2173   001DFA  B4D8               	btfsc	status,2,c
  2174   001DFC  EF02  F00F         	goto	u751
  2175   001E00  EF04  F00F         	goto	u750
  2176   001E04                     u751:
  2177   001E04  EF1F  F00F         	goto	l2005
  2178   001E08                     u750:
  2179   001E08  EE20 F009          	lfsr	2,9
  2180   001E0C  5003               	movf	fputc@fp^0,w,c
  2181   001E0E  26D9               	addwf	fsr2l,f,c
  2182   001E10  5004               	movf	(fputc@fp+1)^0,w,c
  2183   001E12  22DA               	addwfc	fsr2h,f,c
  2184   001E14  EE10 F003          	lfsr	1,3
  2185   001E18  5003               	movf	fputc@fp^0,w,c
  2186   001E1A  26E1               	addwf	fsr1l,f,c
  2187   001E1C  5004               	movf	(fputc@fp+1)^0,w,c
  2188   001E1E  22E2               	addwfc	fsr1h,f,c
  2189   001E20  50DE               	movf	postinc2,w,c
  2190   001E22  5CE6               	subwf	postinc1,w,c
  2191   001E24  50E6               	movf	postinc1,w,c
  2192   001E26  0A80               	xorlw	128
  2193   001E28  6E09               	movwf	(??_fputc+4)^0,c
  2194   001E2A  50DE               	movf	postinc2,w,c
  2195   001E2C  0A80               	xorlw	128
  2196   001E2E  5809               	subwfb	(??_fputc+4)^0,w,c
  2197   001E30  B0D8               	btfsc	status,0,c
  2198   001E32  EF1D  F00F         	goto	u761
  2199   001E36  EF1F  F00F         	goto	u760
  2200   001E3A                     u761:
  2201   001E3A  EF42  F00F         	goto	l1182
  2202   001E3E                     u760:
  2203   001E3E                     l2005:
  2204   001E3E  EE20 F003          	lfsr	2,3
  2205   001E42  5003               	movf	fputc@fp^0,w,c
  2206   001E44  26D9               	addwf	fsr2l,f,c
  2207   001E46  5004               	movf	(fputc@fp+1)^0,w,c
  2208   001E48  22DA               	addwfc	fsr2h,f,c
  2209   001E4A  CFDE F005          	movff	postinc2,??_fputc
  2210   001E4E  CFDD F006          	movff	postdec2,??_fputc+1
  2211   001E52  C003  FFD9         	movff	fputc@fp,fsr2l
  2212   001E56  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2213   001E5A  CFDE F007          	movff	postinc2,??_fputc+2
  2214   001E5E  CFDD F008          	movff	postdec2,??_fputc+3
  2215   001E62  5005               	movf	??_fputc^0,w,c
  2216   001E64  2407               	addwf	(??_fputc+2)^0,w,c
  2217   001E66  6ED9               	movwf	fsr2l,c
  2218   001E68  5006               	movf	(??_fputc+1)^0,w,c
  2219   001E6A  2008               	addwfc	(??_fputc+3)^0,w,c
  2220   001E6C  6EDA               	movwf	fsr2h,c
  2221   001E6E  C001  FFDF         	movff	fputc@c,indf2
  2222   001E72  EE20 F003          	lfsr	2,3
  2223   001E76  5003               	movf	fputc@fp^0,w,c
  2224   001E78  26D9               	addwf	fsr2l,f,c
  2225   001E7A  5004               	movf	(fputc@fp+1)^0,w,c
  2226   001E7C  22DA               	addwfc	fsr2h,f,c
  2227   001E7E  2ADE               	incf	postinc2,f,c
  2228   001E80  0E00               	movlw	0
  2229   001E82  22DD               	addwfc	postdec2,f,c
  2230   001E84                     l1182:
  2231   001E84  0012               	return		;funcret
  2232   001E86                     __end_of_fputc:
  2233                           	callstack 0
  2234                           
  2235 ;; *************** function _putch *****************
  2236 ;; Defined at:
  2237 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  c               1    wreg     unsigned char 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  c               1    0[COMRAM] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_fputc
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text8
  2265   002484                     __ptext8:
  2266                           	callstack 0
  2267   002484                     _putch:
  2268                           	callstack 26
  2269   002484  0012               	return		;funcret
  2270   002486                     __end_of_putch:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function ___aomod *****************
  2274 ;; Defined at:
  2275 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  dividend        8    0[COMRAM] long long 
  2278 ;;  divisor         8    8[COMRAM] long long 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  sign            1   17[COMRAM] unsigned char 
  2281 ;;  counter         1   16[COMRAM] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  8    0[COMRAM] long long 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:       18 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_dtoa
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text9
  2305   001A0C                     __ptext9:
  2306                           	callstack 0
  2307   001A0C                     ___aomod:
  2308                           	callstack 26
  2309   001A0C  0E00               	movlw	0
  2310   001A0E  6E12               	movwf	___aomod@sign^0,c
  2311   001A10  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2312   001A12  EF0F  F00D         	goto	u860
  2313   001A16  EF0D  F00D         	goto	u861
  2314   001A1A                     u861:
  2315   001A1A  EF21  F00D         	goto	l2073
  2316   001A1E                     u860:
  2317   001A1E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2318   001A20  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2319   001A22  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2320   001A24  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2321   001A26  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2322   001A28  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2323   001A2A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2324   001A2C  6C01               	negf	___aomod@dividend^0,c
  2325   001A2E  0E00               	movlw	0
  2326   001A30  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2327   001A32  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2328   001A34  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2329   001A36  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2330   001A38  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2331   001A3A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2332   001A3C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2333   001A3E  0E01               	movlw	1
  2334   001A40  6E12               	movwf	___aomod@sign^0,c
  2335   001A42                     l2073:
  2336   001A42  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2337   001A44  EF28  F00D         	goto	u870
  2338   001A48  EF26  F00D         	goto	u871
  2339   001A4C                     u871:
  2340   001A4C  EF38  F00D         	goto	l2077
  2341   001A50                     u870:
  2342   001A50  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2343   001A52  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2344   001A54  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2345   001A56  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2346   001A58  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2347   001A5A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2348   001A5C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2349   001A5E  6C09               	negf	___aomod@divisor^0,c
  2350   001A60  0E00               	movlw	0
  2351   001A62  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2352   001A64  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2353   001A66  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2354   001A68  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2355   001A6A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2356   001A6C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2357   001A6E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2358   001A70                     l2077:
  2359   001A70  5009               	movf	___aomod@divisor^0,w,c
  2360   001A72  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2361   001A74  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2362   001A76  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2363   001A78  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2364   001A7A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2365   001A7C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2366   001A7E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2367   001A80  B4D8               	btfsc	status,2,c
  2368   001A82  EF45  F00D         	goto	u881
  2369   001A86  EF47  F00D         	goto	u880
  2370   001A8A                     u881:
  2371   001A8A  EF8F  F00D         	goto	l2093
  2372   001A8E                     u880:
  2373   001A8E  0E01               	movlw	1
  2374   001A90  6E11               	movwf	___aomod@counter^0,c
  2375   001A92  EF55  F00D         	goto	l2083
  2376   001A96                     l2081:
  2377   001A96  90D8               	bcf	status,0,c
  2378   001A98  3609               	rlcf	___aomod@divisor^0,f,c
  2379   001A9A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2380   001A9C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2381   001A9E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2382   001AA0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2383   001AA2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2384   001AA4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2385   001AA6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2386   001AA8  2A11               	incf	___aomod@counter^0,f,c
  2387   001AAA                     l2083:
  2388   001AAA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2389   001AAC  EF5A  F00D         	goto	u891
  2390   001AB0  EF5C  F00D         	goto	u890
  2391   001AB4                     u891:
  2392   001AB4  EF4B  F00D         	goto	l2081
  2393   001AB8                     u890:
  2394   001AB8                     l2085:
  2395   001AB8  5009               	movf	___aomod@divisor^0,w,c
  2396   001ABA  5C01               	subwf	___aomod@dividend^0,w,c
  2397   001ABC  500A               	movf	(___aomod@divisor+1)^0,w,c
  2398   001ABE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2399   001AC0  500B               	movf	(___aomod@divisor+2)^0,w,c
  2400   001AC2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2401   001AC4  500C               	movf	(___aomod@divisor+3)^0,w,c
  2402   001AC6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2403   001AC8  500D               	movf	(___aomod@divisor+4)^0,w,c
  2404   001ACA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2405   001ACC  500E               	movf	(___aomod@divisor+5)^0,w,c
  2406   001ACE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2407   001AD0  500F               	movf	(___aomod@divisor+6)^0,w,c
  2408   001AD2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2409   001AD4  5010               	movf	(___aomod@divisor+7)^0,w,c
  2410   001AD6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2411   001AD8  A0D8               	btfss	status,0,c
  2412   001ADA  EF71  F00D         	goto	u901
  2413   001ADE  EF73  F00D         	goto	u900
  2414   001AE2                     u901:
  2415   001AE2  EF83  F00D         	goto	l2089
  2416   001AE6                     u900:
  2417   001AE6  5009               	movf	___aomod@divisor^0,w,c
  2418   001AE8  5E01               	subwf	___aomod@dividend^0,f,c
  2419   001AEA  500A               	movf	(___aomod@divisor+1)^0,w,c
  2420   001AEC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2421   001AEE  500B               	movf	(___aomod@divisor+2)^0,w,c
  2422   001AF0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2423   001AF2  500C               	movf	(___aomod@divisor+3)^0,w,c
  2424   001AF4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2425   001AF6  500D               	movf	(___aomod@divisor+4)^0,w,c
  2426   001AF8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2427   001AFA  500E               	movf	(___aomod@divisor+5)^0,w,c
  2428   001AFC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2429   001AFE  500F               	movf	(___aomod@divisor+6)^0,w,c
  2430   001B00  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2431   001B02  5010               	movf	(___aomod@divisor+7)^0,w,c
  2432   001B04  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2433   001B06                     l2089:
  2434   001B06  90D8               	bcf	status,0,c
  2435   001B08  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2436   001B0A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2437   001B0C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2438   001B0E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2439   001B10  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2440   001B12  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2441   001B14  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2442   001B16  3209               	rrcf	___aomod@divisor^0,f,c
  2443   001B18  2E11               	decfsz	___aomod@counter^0,f,c
  2444   001B1A  EF5C  F00D         	goto	l2085
  2445   001B1E                     l2093:
  2446   001B1E  5012               	movf	___aomod@sign^0,w,c
  2447   001B20  B4D8               	btfsc	status,2,c
  2448   001B22  EF95  F00D         	goto	u911
  2449   001B26  EF97  F00D         	goto	u910
  2450   001B2A                     u911:
  2451   001B2A  EFA7  F00D         	goto	l2097
  2452   001B2E                     u910:
  2453   001B2E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2454   001B30  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2455   001B32  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2456   001B34  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2457   001B36  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2458   001B38  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2459   001B3A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2460   001B3C  6C01               	negf	___aomod@dividend^0,c
  2461   001B3E  0E00               	movlw	0
  2462   001B40  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2463   001B42  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2464   001B44  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2465   001B46  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2466   001B48  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2467   001B4A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2468   001B4C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2469   001B4E                     l2097:
  2470   001B4E  C001  F001         	movff	___aomod@dividend,?___aomod
  2471   001B52  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2472   001B56  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2473   001B5A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2474   001B5E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2475   001B62  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2476   001B66  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2477   001B6A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2478   001B6E  0012               	return		;funcret
  2479   001B70                     __end_of___aomod:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function ___aodiv *****************
  2483 ;; Defined at:
  2484 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  dividend        8    0[COMRAM] long long 
  2487 ;;  divisor         8    8[COMRAM] long long 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  quotient        8   18[COMRAM] long long 
  2490 ;;  sign            1   17[COMRAM] unsigned char 
  2491 ;;  counter         1   16[COMRAM] unsigned char 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  8    0[COMRAM] long long 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2501 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2502 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2504 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;Total ram usage:       26 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_dtoa
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text10
  2515   001718                     __ptext10:
  2516                           	callstack 0
  2517   001718                     ___aodiv:
  2518                           	callstack 26
  2519   001718  0E00               	movlw	0
  2520   00171A  6E12               	movwf	___aodiv@sign^0,c
  2521   00171C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2522   00171E  EF95  F00B         	goto	u790
  2523   001722  EF93  F00B         	goto	u791
  2524   001726                     u791:
  2525   001726  EFA7  F00B         	goto	l2029
  2526   00172A                     u790:
  2527   00172A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2528   00172C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2529   00172E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2530   001730  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2531   001732  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2532   001734  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2533   001736  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2534   001738  6C09               	negf	___aodiv@divisor^0,c
  2535   00173A  0E00               	movlw	0
  2536   00173C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2537   00173E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2538   001740  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2539   001742  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2540   001744  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2541   001746  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2542   001748  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2543   00174A  0E01               	movlw	1
  2544   00174C  6E12               	movwf	___aodiv@sign^0,c
  2545   00174E                     l2029:
  2546   00174E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2547   001750  EFAE  F00B         	goto	u800
  2548   001754  EFAC  F00B         	goto	u801
  2549   001758                     u801:
  2550   001758  EFC0  F00B         	goto	l2035
  2551   00175C                     u800:
  2552   00175C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2553   00175E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2554   001760  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2555   001762  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2556   001764  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2557   001766  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2558   001768  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2559   00176A  6C01               	negf	___aodiv@dividend^0,c
  2560   00176C  0E00               	movlw	0
  2561   00176E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2562   001770  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2563   001772  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2564   001774  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2565   001776  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2566   001778  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2567   00177A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2568   00177C  0E01               	movlw	1
  2569   00177E  1A12               	xorwf	___aodiv@sign^0,f,c
  2570   001780                     l2035:
  2571   001780  EE20  F013         	lfsr	2,___aodiv@quotient
  2572   001784  0E07               	movlw	7
  2573   001786                     u811:
  2574   001786  6ADE               	clrf	postinc2,c
  2575   001788  06E8               	decf	wreg,f,c
  2576   00178A  E2FD               	bc	u811
  2577   00178C  5009               	movf	___aodiv@divisor^0,w,c
  2578   00178E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2579   001790  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2580   001792  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2581   001794  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2582   001796  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2583   001798  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2584   00179A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2585   00179C  B4D8               	btfsc	status,2,c
  2586   00179E  EFD3  F00B         	goto	u821
  2587   0017A2  EFD5  F00B         	goto	u820
  2588   0017A6                     u821:
  2589   0017A6  EF27  F00C         	goto	l2057
  2590   0017AA                     u820:
  2591   0017AA  0E01               	movlw	1
  2592   0017AC  6E11               	movwf	___aodiv@counter^0,c
  2593   0017AE  EFE3  F00B         	goto	l2043
  2594   0017B2                     l2041:
  2595   0017B2  90D8               	bcf	status,0,c
  2596   0017B4  3609               	rlcf	___aodiv@divisor^0,f,c
  2597   0017B6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2598   0017B8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2599   0017BA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2600   0017BC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2601   0017BE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2602   0017C0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2603   0017C2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2604   0017C4  2A11               	incf	___aodiv@counter^0,f,c
  2605   0017C6                     l2043:
  2606   0017C6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2607   0017C8  EFE8  F00B         	goto	u831
  2608   0017CC  EFEA  F00B         	goto	u830
  2609   0017D0                     u831:
  2610   0017D0  EFD9  F00B         	goto	l2041
  2611   0017D4                     u830:
  2612   0017D4                     l2045:
  2613   0017D4  90D8               	bcf	status,0,c
  2614   0017D6  3613               	rlcf	___aodiv@quotient^0,f,c
  2615   0017D8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2616   0017DA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2617   0017DC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2618   0017DE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2619   0017E0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2620   0017E2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2621   0017E4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2622   0017E6  5009               	movf	___aodiv@divisor^0,w,c
  2623   0017E8  5C01               	subwf	___aodiv@dividend^0,w,c
  2624   0017EA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2625   0017EC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2626   0017EE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2627   0017F0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2628   0017F2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2629   0017F4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2630   0017F6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2631   0017F8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2632   0017FA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2633   0017FC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2634   0017FE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2635   001800  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2636   001802  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2637   001804  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2638   001806  A0D8               	btfss	status,0,c
  2639   001808  EF08  F00C         	goto	u841
  2640   00180C  EF0A  F00C         	goto	u840
  2641   001810                     u841:
  2642   001810  EF1B  F00C         	goto	l2053
  2643   001814                     u840:
  2644   001814  5009               	movf	___aodiv@divisor^0,w,c
  2645   001816  5E01               	subwf	___aodiv@dividend^0,f,c
  2646   001818  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2647   00181A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2648   00181C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2649   00181E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2650   001820  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2651   001822  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2652   001824  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2653   001826  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2654   001828  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2655   00182A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2656   00182C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2657   00182E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2658   001830  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2659   001832  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2660   001834  8013               	bsf	___aodiv@quotient^0,0,c
  2661   001836                     l2053:
  2662   001836  90D8               	bcf	status,0,c
  2663   001838  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2664   00183A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2665   00183C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2666   00183E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2667   001840  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2668   001842  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2669   001844  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2670   001846  3209               	rrcf	___aodiv@divisor^0,f,c
  2671   001848  2E11               	decfsz	___aodiv@counter^0,f,c
  2672   00184A  EFEA  F00B         	goto	l2045
  2673   00184E                     l2057:
  2674   00184E  5012               	movf	___aodiv@sign^0,w,c
  2675   001850  B4D8               	btfsc	status,2,c
  2676   001852  EF2D  F00C         	goto	u851
  2677   001856  EF2F  F00C         	goto	u850
  2678   00185A                     u851:
  2679   00185A  EF3F  F00C         	goto	l2061
  2680   00185E                     u850:
  2681   00185E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2682   001860  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2683   001862  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2684   001864  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2685   001866  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2686   001868  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2687   00186A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2688   00186C  6C13               	negf	___aodiv@quotient^0,c
  2689   00186E  0E00               	movlw	0
  2690   001870  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2691   001872  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2692   001874  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2693   001876  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2694   001878  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2695   00187A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2696   00187C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2697   00187E                     l2061:
  2698   00187E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2699   001882  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2700   001886  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2701   00188A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2702   00188E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2703   001892  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2704   001896  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2705   00189A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2706   00189E  0012               	return		;funcret
  2707   0018A0                     __end_of___aodiv:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _setMotorPWM *****************
  2711 ;; Defined at:
  2712 ;;		line 61 in file "dc_motor.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  m               2   13[COMRAM] PTR struct DC_motor
  2715 ;;		 -> main@motorR(9), main@motorL(9), 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  negDuty         1   18[COMRAM] unsigned char 
  2718 ;;  posDuty         1   17[COMRAM] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;Total ram usage:        6 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; Hardware stack levels required when called: 1
  2735 ;; This function calls:
  2736 ;;		___lwdiv
  2737 ;;		___wmul
  2738 ;; This function is called by:
  2739 ;;		_main
  2740 ;;		_stop
  2741 ;;		_turnLeft45
  2742 ;;		_turnRight45
  2743 ;;		_fullSpeedAhead
  2744 ;;		_reverseFullSpeed
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text11
  2749   0018A0                     __ptext11:
  2750                           	callstack 0
  2751   0018A0                     _setMotorPWM:
  2752                           	callstack 29
  2753   0018A0                     
  2754                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2755   0018A0  EE20 F002          	lfsr	2,2
  2756   0018A4  500E               	movf	setMotorPWM@m^0,w,c
  2757   0018A6  26D9               	addwf	fsr2l,f,c
  2758   0018A8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2759   0018AA  22DA               	addwfc	fsr2h,f,c
  2760   0018AC  50DF               	movf	indf2,w,c
  2761   0018AE  B4D8               	btfsc	status,2,c
  2762   0018B0  EF5C  F00C         	goto	u1161
  2763   0018B4  EF5E  F00C         	goto	u1160
  2764   0018B8                     u1161:
  2765   0018B8  EF92  F00C         	goto	l2343
  2766   0018BC                     u1160:
  2767   0018BC                     
  2768                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2769   0018BC  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2770   0018C0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2771   0018C4  50DF               	movf	indf2,w,c
  2772   0018C6  6E10               	movwf	??_setMotorPWM^0,c
  2773   0018C8  5010               	movf	??_setMotorPWM^0,w,c
  2774   0018CA  6E01               	movwf	___wmul@multiplier^0,c
  2775   0018CC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2776   0018CE  EE20 F003          	lfsr	2,3
  2777   0018D2  500E               	movf	setMotorPWM@m^0,w,c
  2778   0018D4  26D9               	addwf	fsr2l,f,c
  2779   0018D6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2780   0018D8  22DA               	addwfc	fsr2h,f,c
  2781   0018DA  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2782   0018DE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2783   0018E2  ECDD  F011         	call	___wmul	;wreg free
  2784   0018E6  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2785   0018EA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2786   0018EE  0E00               	movlw	0
  2787   0018F0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2788   0018F2  0E64               	movlw	100
  2789   0018F4  6E09               	movwf	___lwdiv@divisor^0,c
  2790   0018F6  EC04  F010         	call	___lwdiv	;wreg free
  2791   0018FA  EE20 F003          	lfsr	2,3
  2792   0018FE  500E               	movf	setMotorPWM@m^0,w,c
  2793   001900  26D9               	addwf	fsr2l,f,c
  2794   001902  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2795   001904  22DA               	addwfc	fsr2h,f,c
  2796   001906  50DF               	movf	indf2,w,c
  2797   001908  6E11               	movwf	(??_setMotorPWM+1)^0,c
  2798   00190A  5007               	movf	?___lwdiv^0,w,c
  2799   00190C  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  2800   00190E  6E12               	movwf	setMotorPWM@posDuty^0,c
  2801   001910                     
  2802                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2803   001910  EE20 F003          	lfsr	2,3
  2804   001914  500E               	movf	setMotorPWM@m^0,w,c
  2805   001916  26D9               	addwf	fsr2l,f,c
  2806   001918  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2807   00191A  22DA               	addwfc	fsr2h,f,c
  2808   00191C  50DF               	movf	indf2,w,c
  2809   00191E  6E13               	movwf	setMotorPWM@negDuty^0,c
  2810                           
  2811                           ;dc_motor.c: 68:     }
  2812   001920  EFB5  F00C         	goto	l2347
  2813   001924                     l2343:
  2814                           
  2815                           ;dc_motor.c: 70:         posDuty=0;
  2816   001924  0E00               	movlw	0
  2817   001926  6E12               	movwf	setMotorPWM@posDuty^0,c
  2818   001928                     
  2819                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2820   001928  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2821   00192C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2822   001930  50DF               	movf	indf2,w,c
  2823   001932  6E10               	movwf	??_setMotorPWM^0,c
  2824   001934  5010               	movf	??_setMotorPWM^0,w,c
  2825   001936  6E01               	movwf	___wmul@multiplier^0,c
  2826   001938  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2827   00193A  EE20 F003          	lfsr	2,3
  2828   00193E  500E               	movf	setMotorPWM@m^0,w,c
  2829   001940  26D9               	addwf	fsr2l,f,c
  2830   001942  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2831   001944  22DA               	addwfc	fsr2h,f,c
  2832   001946  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2833   00194A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2834   00194E  ECDD  F011         	call	___wmul	;wreg free
  2835   001952  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2836   001956  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2837   00195A  0E00               	movlw	0
  2838   00195C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2839   00195E  0E64               	movlw	100
  2840   001960  6E09               	movwf	___lwdiv@divisor^0,c
  2841   001962  EC04  F010         	call	___lwdiv	;wreg free
  2842   001966  5007               	movf	?___lwdiv^0,w,c
  2843   001968  6E13               	movwf	setMotorPWM@negDuty^0,c
  2844   00196A                     l2347:
  2845                           
  2846                           ;dc_motor.c: 74:     if (m->direction) {
  2847   00196A  EE20 F001          	lfsr	2,1
  2848   00196E  500E               	movf	setMotorPWM@m^0,w,c
  2849   001970  26D9               	addwf	fsr2l,f,c
  2850   001972  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2851   001974  22DA               	addwfc	fsr2h,f,c
  2852   001976  50DF               	movf	indf2,w,c
  2853   001978  B4D8               	btfsc	status,2,c
  2854   00197A  EFC1  F00C         	goto	u1171
  2855   00197E  EFC3  F00C         	goto	u1170
  2856   001982                     u1171:
  2857   001982  EFE5  F00C         	goto	l2351
  2858   001986                     u1170:
  2859   001986                     
  2860                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2861   001986  EE20 F005          	lfsr	2,5
  2862   00198A  500E               	movf	setMotorPWM@m^0,w,c
  2863   00198C  26D9               	addwf	fsr2l,f,c
  2864   00198E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2865   001990  22DA               	addwfc	fsr2h,f,c
  2866   001992  CFDE F010          	movff	postinc2,??_setMotorPWM
  2867   001996  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2868   00199A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2869   00199E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2870   0019A2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2871                           
  2872                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2873   0019A6  EE20 F007          	lfsr	2,7
  2874   0019AA  500E               	movf	setMotorPWM@m^0,w,c
  2875   0019AC  26D9               	addwf	fsr2l,f,c
  2876   0019AE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2877   0019B0  22DA               	addwfc	fsr2h,f,c
  2878   0019B2  CFDE F010          	movff	postinc2,??_setMotorPWM
  2879   0019B6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2880   0019BA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2881   0019BE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2882   0019C2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2883                           
  2884                           ;dc_motor.c: 77:     } else {
  2885   0019C6  EF05  F00D         	goto	l95
  2886   0019CA                     l2351:
  2887                           
  2888                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2889   0019CA  EE20 F005          	lfsr	2,5
  2890   0019CE  500E               	movf	setMotorPWM@m^0,w,c
  2891   0019D0  26D9               	addwf	fsr2l,f,c
  2892   0019D2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2893   0019D4  22DA               	addwfc	fsr2h,f,c
  2894   0019D6  CFDE F010          	movff	postinc2,??_setMotorPWM
  2895   0019DA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2896   0019DE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2897   0019E2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2898   0019E6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2899                           
  2900                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2901   0019EA  EE20 F007          	lfsr	2,7
  2902   0019EE  500E               	movf	setMotorPWM@m^0,w,c
  2903   0019F0  26D9               	addwf	fsr2l,f,c
  2904   0019F2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2905   0019F4  22DA               	addwfc	fsr2h,f,c
  2906   0019F6  CFDE F010          	movff	postinc2,??_setMotorPWM
  2907   0019FA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2908   0019FE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2909   001A02  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2910   001A06  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2911   001A0A                     l95:
  2912   001A0A  0012               	return		;funcret
  2913   001A0C                     __end_of_setMotorPWM:
  2914                           	callstack 0
  2915                           
  2916 ;; *************** function _sendStringSerial4 *****************
  2917 ;; Defined at:
  2918 ;;		line 39 in file "serial.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  string          2    1[COMRAM] PTR unsigned char 
  2921 ;;		 -> main@buf(150), 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;Total ram usage:        2 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 1
  2940 ;; This function calls:
  2941 ;;		_sendCharSerial4
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text12
  2948   00230A                     __ptext12:
  2949                           	callstack 0
  2950   00230A                     _sendStringSerial4:
  2951                           	callstack 29
  2952   00230A                     
  2953                           ;serial.c: 40:  while(*string != 0) {
  2954   00230A  EF90  F011         	goto	l2511
  2955   00230E                     l2507:
  2956                           
  2957                           ;serial.c: 41:         sendCharSerial4(*string++);
  2958   00230E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2959   002312  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2960   002316  50DF               	movf	indf2,w,c
  2961   002318  EC21  F012         	call	_sendCharSerial4
  2962   00231C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2963   00231E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2964   002320                     l2511:
  2965                           
  2966                           ;serial.c: 40:  while(*string != 0) {
  2967   002320  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2968   002324  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2969   002328  50DF               	movf	indf2,w,c
  2970   00232A  A4D8               	btfss	status,2,c
  2971   00232C  EF9A  F011         	goto	u1271
  2972   002330  EF9C  F011         	goto	u1270
  2973   002334                     u1271:
  2974   002334  EF87  F011         	goto	l2507
  2975   002338                     u1270:
  2976   002338  0012               	return		;funcret
  2977   00233A                     __end_of_sendStringSerial4:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _sendCharSerial4 *****************
  2981 ;; Defined at:
  2982 ;;		line 32 in file "serial.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  charToSend      1    wreg     unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  charToSend      1    0[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3000 ;;Total ram usage:        1 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_sendStringSerial4
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text13
  3010   002442                     __ptext13:
  3011                           	callstack 0
  3012   002442                     _sendCharSerial4:
  3013                           	callstack 29
  3014                           
  3015                           ;incstack = 0
  3016                           ;sendCharSerial4@charToSend stored from wreg
  3017   002442  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3018   002444                     l383:
  3019   002444  010E               	movlb	14	; () banked
  3020   002446  A537               	btfss	55,2,b	;volatile
  3021   002448  EF28  F012         	goto	u1111
  3022   00244C  EF2A  F012         	goto	u1110
  3023   002450                     u1111:
  3024   002450  EF22  F012         	goto	l383
  3025   002454                     u1110:
  3026   002454                     
  3027                           ; BSR set to: 14
  3028                           ;serial.c: 34:     TX4REG = charToSend;
  3029   002454  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3030   002458                     
  3031                           ; BSR set to: 14
  3032   002458  0012               	return		;funcret
  3033   00245A                     __end_of_sendCharSerial4:
  3034                           	callstack 0
  3035                           
  3036 ;; *************** function _normalise_readings *****************
  3037 ;; Defined at:
  3038 ;;		line 64 in file "colour_identify.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  buf             2   22[COMRAM] PTR unsigned char 
  3041 ;;		 -> main@buf(150), 
  3042 ;;  red_read        2   24[COMRAM] unsigned int 
  3043 ;;  green_read      2   26[COMRAM] unsigned int 
  3044 ;;  blue_read       2   28[COMRAM] unsigned int 
  3045 ;;  expected_val    2   30[COMRAM] PTR unsigned int [9]
  3046 ;;		 -> main@expected_values(54), 
  3047 ;;  normalised_v    2   32[COMRAM] PTR unsigned int [9]
  3048 ;;		 -> main@normalised_values(54), 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  difference      2   42[COMRAM] unsigned int 
  3051 ;;  i               1   44[COMRAM] enum E14551
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3061 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;Total ram usage:       23 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 1
  3068 ;; This function calls:
  3069 ;;		___lwdiv
  3070 ;;		___wmul
  3071 ;;		_abs
  3072 ;; This function is called by:
  3073 ;;		_main
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text14
  3078   0012F2                     __ptext14:
  3079                           	callstack 0
  3080   0012F2                     _normalise_readings:
  3081                           	callstack 29
  3082   0012F2                     
  3083                           ;colour_identify.c: 71:     for(colour i = RED; i<= BLACK; i++){
  3084   0012F2  0E00               	movlw	0
  3085   0012F4  6E2D               	movwf	normalise_readings@i^0,c
  3086   0012F6                     l2519:
  3087                           
  3088                           ;colour_identify.c: 74:         unsigned int difference = abs(red_read - expected_values
      +                          [RED][i]);
  3089   0012F6  502D               	movf	normalise_readings@i^0,w,c
  3090   0012F8  0D02               	mullw	2
  3091   0012FA  CFF3 F023          	movff	prodl,??_normalise_readings
  3092   0012FE  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3093   001302  5023               	movf	??_normalise_readings^0,w,c
  3094   001304  241F               	addwf	normalise_readings@expected_values^0,w,c
  3095   001306  6ED9               	movwf	fsr2l,c
  3096   001308  5024               	movf	(??_normalise_readings+1)^0,w,c
  3097   00130A  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3098   00130C  6EDA               	movwf	fsr2h,c
  3099   00130E  CFDE F025          	movff	postinc2,??_normalise_readings+2
  3100   001312  CFDD F026          	movff	postdec2,??_normalise_readings+3
  3101   001316  5025               	movf	(??_normalise_readings+2)^0,w,c
  3102   001318  5C19               	subwf	normalise_readings@red_read^0,w,c
  3103   00131A  6E13               	movwf	abs@a^0,c
  3104   00131C  5026               	movf	(??_normalise_readings+3)^0,w,c
  3105   00131E  581A               	subwfb	(normalise_readings@red_read+1)^0,w,c
  3106   001320  6E14               	movwf	(abs@a+1)^0,c
  3107   001322  EC4B  F011         	call	_abs	;wreg free
  3108   001326  C013  F02B         	movff	?_abs,normalise_readings@difference
  3109   00132A  C014  F02C         	movff	?_abs+1,normalise_readings@difference+1
  3110                           
  3111                           ;colour_identify.c: 76:         normalised_values[RED][i] = (difference*100) / expected_
      +                          values[RED][i];
  3112   00132E  C02B  F001         	movff	normalise_readings@difference,___wmul@multiplier
  3113   001332  C02C  F002         	movff	normalise_readings@difference+1,___wmul@multiplier+1
  3114   001336  0E00               	movlw	0
  3115   001338  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3116   00133A  0E64               	movlw	100
  3117   00133C  6E03               	movwf	___wmul@multiplicand^0,c
  3118   00133E  ECDD  F011         	call	___wmul	;wreg free
  3119   001342  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3120   001346  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3121   00134A  502D               	movf	normalise_readings@i^0,w,c
  3122   00134C  0D02               	mullw	2
  3123   00134E  CFF3 F023          	movff	prodl,??_normalise_readings
  3124   001352  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3125   001356  5023               	movf	??_normalise_readings^0,w,c
  3126   001358  241F               	addwf	normalise_readings@expected_values^0,w,c
  3127   00135A  6ED9               	movwf	fsr2l,c
  3128   00135C  5024               	movf	(??_normalise_readings+1)^0,w,c
  3129   00135E  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3130   001360  6EDA               	movwf	fsr2h,c
  3131   001362  CFDE F009          	movff	postinc2,___lwdiv@divisor
  3132   001366  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  3133   00136A  EC04  F010         	call	___lwdiv	;wreg free
  3134   00136E  502D               	movf	normalise_readings@i^0,w,c
  3135   001370  0D02               	mullw	2
  3136   001372  CFF3 F025          	movff	prodl,??_normalise_readings+2
  3137   001376  CFF4 F026          	movff	prodh,??_normalise_readings+3
  3138   00137A  5025               	movf	(??_normalise_readings+2)^0,w,c
  3139   00137C  2421               	addwf	normalise_readings@normalised_values^0,w,c
  3140   00137E  6ED9               	movwf	fsr2l,c
  3141   001380  5026               	movf	(??_normalise_readings+3)^0,w,c
  3142   001382  2022               	addwfc	(normalise_readings@normalised_values+1)^0,w,c
  3143   001384  6EDA               	movwf	fsr2h,c
  3144   001386  C007  FFDE         	movff	?___lwdiv,postinc2
  3145   00138A  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3146                           
  3147                           ;colour_identify.c: 81:         difference = abs(green_read - expected_values[GREEN][i])
      +                          ;
  3148   00138E  502D               	movf	normalise_readings@i^0,w,c
  3149   001390  0D02               	mullw	2
  3150   001392  CFF3 F023          	movff	prodl,??_normalise_readings
  3151   001396  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3152   00139A  5023               	movf	??_normalise_readings^0,w,c
  3153   00139C  241F               	addwf	normalise_readings@expected_values^0,w,c
  3154   00139E  6E25               	movwf	(??_normalise_readings+2)^0,c
  3155   0013A0  5024               	movf	(??_normalise_readings+1)^0,w,c
  3156   0013A2  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3157   0013A4  6E26               	movwf	(??_normalise_readings+3)^0,c
  3158   0013A6  0E12               	movlw	18
  3159   0013A8  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3160   0013AA  6ED9               	movwf	fsr2l,c
  3161   0013AC  0E00               	movlw	0
  3162   0013AE  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3163   0013B0  6EDA               	movwf	fsr2h,c
  3164   0013B2  CFDE F027          	movff	postinc2,??_normalise_readings+4
  3165   0013B6  CFDD F028          	movff	postdec2,??_normalise_readings+5
  3166   0013BA  5027               	movf	(??_normalise_readings+4)^0,w,c
  3167   0013BC  5C1B               	subwf	normalise_readings@green_read^0,w,c
  3168   0013BE  6E13               	movwf	abs@a^0,c
  3169   0013C0  5028               	movf	(??_normalise_readings+5)^0,w,c
  3170   0013C2  581C               	subwfb	(normalise_readings@green_read+1)^0,w,c
  3171   0013C4  6E14               	movwf	(abs@a+1)^0,c
  3172   0013C6  EC4B  F011         	call	_abs	;wreg free
  3173   0013CA  C013  F02B         	movff	?_abs,normalise_readings@difference
  3174   0013CE  C014  F02C         	movff	?_abs+1,normalise_readings@difference+1
  3175                           
  3176                           ;colour_identify.c: 83:         normalised_values[GREEN][i] = (difference*100) / expecte
      +                          d_values[GREEN][i];
  3177   0013D2  C02B  F001         	movff	normalise_readings@difference,___wmul@multiplier
  3178   0013D6  C02C  F002         	movff	normalise_readings@difference+1,___wmul@multiplier+1
  3179   0013DA  0E00               	movlw	0
  3180   0013DC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3181   0013DE  0E64               	movlw	100
  3182   0013E0  6E03               	movwf	___wmul@multiplicand^0,c
  3183   0013E2  ECDD  F011         	call	___wmul	;wreg free
  3184   0013E6  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3185   0013EA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3186   0013EE  502D               	movf	normalise_readings@i^0,w,c
  3187   0013F0  0D02               	mullw	2
  3188   0013F2  CFF3 F023          	movff	prodl,??_normalise_readings
  3189   0013F6  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3190   0013FA  5023               	movf	??_normalise_readings^0,w,c
  3191   0013FC  241F               	addwf	normalise_readings@expected_values^0,w,c
  3192   0013FE  6E25               	movwf	(??_normalise_readings+2)^0,c
  3193   001400  5024               	movf	(??_normalise_readings+1)^0,w,c
  3194   001402  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3195   001404  6E26               	movwf	(??_normalise_readings+3)^0,c
  3196   001406  0E12               	movlw	18
  3197   001408  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3198   00140A  6ED9               	movwf	fsr2l,c
  3199   00140C  0E00               	movlw	0
  3200   00140E  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3201   001410  6EDA               	movwf	fsr2h,c
  3202   001412  CFDE F009          	movff	postinc2,___lwdiv@divisor
  3203   001416  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  3204   00141A  EC04  F010         	call	___lwdiv	;wreg free
  3205   00141E  502D               	movf	normalise_readings@i^0,w,c
  3206   001420  0D02               	mullw	2
  3207   001422  CFF3 F027          	movff	prodl,??_normalise_readings+4
  3208   001426  CFF4 F028          	movff	prodh,??_normalise_readings+5
  3209   00142A  5027               	movf	(??_normalise_readings+4)^0,w,c
  3210   00142C  2421               	addwf	normalise_readings@normalised_values^0,w,c
  3211   00142E  6E29               	movwf	(??_normalise_readings+6)^0,c
  3212   001430  5028               	movf	(??_normalise_readings+5)^0,w,c
  3213   001432  2022               	addwfc	(normalise_readings@normalised_values+1)^0,w,c
  3214   001434  6E2A               	movwf	(??_normalise_readings+7)^0,c
  3215   001436  0E12               	movlw	18
  3216   001438  2429               	addwf	(??_normalise_readings+6)^0,w,c
  3217   00143A  6ED9               	movwf	fsr2l,c
  3218   00143C  0E00               	movlw	0
  3219   00143E  202A               	addwfc	(??_normalise_readings+7)^0,w,c
  3220   001440  6EDA               	movwf	fsr2h,c
  3221   001442  C007  FFDE         	movff	?___lwdiv,postinc2
  3222   001446  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3223                           
  3224                           ;colour_identify.c: 88:         difference = abs(blue_read - expected_values[BLUE][i]);
  3225   00144A  502D               	movf	normalise_readings@i^0,w,c
  3226   00144C  0D02               	mullw	2
  3227   00144E  CFF3 F023          	movff	prodl,??_normalise_readings
  3228   001452  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3229   001456  5023               	movf	??_normalise_readings^0,w,c
  3230   001458  241F               	addwf	normalise_readings@expected_values^0,w,c
  3231   00145A  6E25               	movwf	(??_normalise_readings+2)^0,c
  3232   00145C  5024               	movf	(??_normalise_readings+1)^0,w,c
  3233   00145E  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3234   001460  6E26               	movwf	(??_normalise_readings+3)^0,c
  3235   001462  0E24               	movlw	36
  3236   001464  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3237   001466  6ED9               	movwf	fsr2l,c
  3238   001468  0E00               	movlw	0
  3239   00146A  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3240   00146C  6EDA               	movwf	fsr2h,c
  3241   00146E  CFDE F027          	movff	postinc2,??_normalise_readings+4
  3242   001472  CFDD F028          	movff	postdec2,??_normalise_readings+5
  3243   001476  5027               	movf	(??_normalise_readings+4)^0,w,c
  3244   001478  5C1D               	subwf	normalise_readings@blue_read^0,w,c
  3245   00147A  6E13               	movwf	abs@a^0,c
  3246   00147C  5028               	movf	(??_normalise_readings+5)^0,w,c
  3247   00147E  581E               	subwfb	(normalise_readings@blue_read+1)^0,w,c
  3248   001480  6E14               	movwf	(abs@a+1)^0,c
  3249   001482  EC4B  F011         	call	_abs	;wreg free
  3250   001486  C013  F02B         	movff	?_abs,normalise_readings@difference
  3251   00148A  C014  F02C         	movff	?_abs+1,normalise_readings@difference+1
  3252                           
  3253                           ;colour_identify.c: 90:         normalised_values[BLUE][i] = (difference*100) / expected
      +                          _values[BLUE][i];
  3254   00148E  C02B  F001         	movff	normalise_readings@difference,___wmul@multiplier
  3255   001492  C02C  F002         	movff	normalise_readings@difference+1,___wmul@multiplier+1
  3256   001496  0E00               	movlw	0
  3257   001498  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3258   00149A  0E64               	movlw	100
  3259   00149C  6E03               	movwf	___wmul@multiplicand^0,c
  3260   00149E  ECDD  F011         	call	___wmul	;wreg free
  3261   0014A2  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3262   0014A6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3263   0014AA  502D               	movf	normalise_readings@i^0,w,c
  3264   0014AC  0D02               	mullw	2
  3265   0014AE  CFF3 F023          	movff	prodl,??_normalise_readings
  3266   0014B2  CFF4 F024          	movff	prodh,??_normalise_readings+1
  3267   0014B6  5023               	movf	??_normalise_readings^0,w,c
  3268   0014B8  241F               	addwf	normalise_readings@expected_values^0,w,c
  3269   0014BA  6E25               	movwf	(??_normalise_readings+2)^0,c
  3270   0014BC  5024               	movf	(??_normalise_readings+1)^0,w,c
  3271   0014BE  2020               	addwfc	(normalise_readings@expected_values+1)^0,w,c
  3272   0014C0  6E26               	movwf	(??_normalise_readings+3)^0,c
  3273   0014C2  0E24               	movlw	36
  3274   0014C4  2425               	addwf	(??_normalise_readings+2)^0,w,c
  3275   0014C6  6ED9               	movwf	fsr2l,c
  3276   0014C8  0E00               	movlw	0
  3277   0014CA  2026               	addwfc	(??_normalise_readings+3)^0,w,c
  3278   0014CC  6EDA               	movwf	fsr2h,c
  3279   0014CE  CFDE F009          	movff	postinc2,___lwdiv@divisor
  3280   0014D2  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
  3281   0014D6  EC04  F010         	call	___lwdiv	;wreg free
  3282   0014DA  502D               	movf	normalise_readings@i^0,w,c
  3283   0014DC  0D02               	mullw	2
  3284   0014DE  CFF3 F027          	movff	prodl,??_normalise_readings+4
  3285   0014E2  CFF4 F028          	movff	prodh,??_normalise_readings+5
  3286   0014E6  5027               	movf	(??_normalise_readings+4)^0,w,c
  3287   0014E8  2421               	addwf	normalise_readings@normalised_values^0,w,c
  3288   0014EA  6E29               	movwf	(??_normalise_readings+6)^0,c
  3289   0014EC  5028               	movf	(??_normalise_readings+5)^0,w,c
  3290   0014EE  2022               	addwfc	(normalise_readings@normalised_values+1)^0,w,c
  3291   0014F0  6E2A               	movwf	(??_normalise_readings+7)^0,c
  3292   0014F2  0E24               	movlw	36
  3293   0014F4  2429               	addwf	(??_normalise_readings+6)^0,w,c
  3294   0014F6  6ED9               	movwf	fsr2l,c
  3295   0014F8  0E00               	movlw	0
  3296   0014FA  202A               	addwfc	(??_normalise_readings+7)^0,w,c
  3297   0014FC  6EDA               	movwf	fsr2h,c
  3298   0014FE  C007  FFDE         	movff	?___lwdiv,postinc2
  3299   001502  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3300   001506                     
  3301                           ;colour_identify.c: 93:         _delay((unsigned long)((200)*(64000000/4000.0)));
  3302   001506  0E11               	movlw	17
  3303   001508  6E24               	movwf	(??_normalise_readings+1)^0,c
  3304   00150A  0E3C               	movlw	60
  3305   00150C  6E23               	movwf	??_normalise_readings^0,c
  3306   00150E  0ECB               	movlw	203
  3307   001510                     u1457:
  3308   001510  2EE8               	decfsz	wreg,f,c
  3309   001512  D7FE               	bra	u1457
  3310   001514  2E23               	decfsz	??_normalise_readings^0,f,c
  3311   001516  D7FC               	bra	u1457
  3312   001518  2E24               	decfsz	(??_normalise_readings+1)^0,f,c
  3313   00151A  D7FA               	bra	u1457
  3314   00151C  F000               	nop	
  3315   00151E                     
  3316                           ;colour_identify.c: 94:     }
  3317   00151E  2A2D               	incf	normalise_readings@i^0,f,c
  3318   001520  0E08               	movlw	8
  3319   001522  642D               	cpfsgt	normalise_readings@i^0,c
  3320   001524  EF96  F00A         	goto	u1281
  3321   001528  EF98  F00A         	goto	u1280
  3322   00152C                     u1281:
  3323   00152C  EF7B  F009         	goto	l2519
  3324   001530                     u1280:
  3325   001530  0012               	return		;funcret
  3326   001532                     __end_of_normalise_readings:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function _abs *****************
  3330 ;; Defined at:
  3331 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  a               2   18[COMRAM] int 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  2   18[COMRAM] int 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;Total ram usage:        4 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_normalise_readings
  3355 ;;		_dtoa
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text15
  3360   002296                     __ptext15:
  3361                           	callstack 0
  3362   002296                     _abs:
  3363                           	callstack 26
  3364   002296  BE14               	btfsc	(abs@a+1)^0,7,c
  3365   002298  EF58  F011         	goto	u780
  3366   00229C  5014               	movf	(abs@a+1)^0,w,c
  3367   00229E  E106               	bnz	u781
  3368   0022A0  0413               	decf	abs@a^0,w,c
  3369   0022A2  B0D8               	btfsc	status,0,c
  3370   0022A4  EF56  F011         	goto	u781
  3371   0022A8  EF58  F011         	goto	u780
  3372   0022AC                     u781:
  3373   0022AC  EF66  F011         	goto	l1102
  3374   0022B0                     u780:
  3375   0022B0  C013  F015         	movff	abs@a,??_abs
  3376   0022B4  C014  F016         	movff	abs@a+1,??_abs+1
  3377   0022B8  1E15               	comf	??_abs^0,f,c
  3378   0022BA  1E16               	comf	(??_abs+1)^0,f,c
  3379   0022BC  4A15               	infsnz	??_abs^0,f,c
  3380   0022BE  2A16               	incf	(??_abs+1)^0,f,c
  3381   0022C0  C015  F013         	movff	??_abs,?_abs
  3382   0022C4  C016  F014         	movff	??_abs+1,?_abs+1
  3383   0022C8  EF6A  F011         	goto	l1105
  3384   0022CC                     l1102:
  3385   0022CC  C013  F013         	movff	abs@a,?_abs
  3386   0022D0  C014  F014         	movff	abs@a+1,?_abs+1
  3387   0022D4                     l1105:
  3388   0022D4  0012               	return		;funcret
  3389   0022D6                     __end_of_abs:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function ___wmul *****************
  3393 ;; Defined at:
  3394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  multiplier      2    0[COMRAM] unsigned int 
  3397 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  product         2    4[COMRAM] unsigned int 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  2    0[COMRAM] unsigned int 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, prodl, prodh
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;Total ram usage:        6 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_setMotorPWM
  3419 ;;		_normalise_readings
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text16
  3424   0023BA                     __ptext16:
  3425                           	callstack 0
  3426   0023BA                     ___wmul:
  3427                           	callstack 29
  3428   0023BA  5001               	movf	___wmul@multiplier^0,w,c
  3429   0023BC  0203               	mulwf	___wmul@multiplicand^0,c
  3430   0023BE  CFF3 F005          	movff	prodl,___wmul@product
  3431   0023C2  CFF4 F006          	movff	prodh,___wmul@product+1
  3432   0023C6  5001               	movf	___wmul@multiplier^0,w,c
  3433   0023C8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3434   0023CA  50F3               	movf	243,w,c
  3435   0023CC  2606               	addwf	(___wmul@product+1)^0,f,c
  3436   0023CE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3437   0023D0  0203               	mulwf	___wmul@multiplicand^0,c
  3438   0023D2  50F3               	movf	243,w,c
  3439   0023D4  2606               	addwf	(___wmul@product+1)^0,f,c
  3440   0023D6  C005  F001         	movff	___wmul@product,?___wmul
  3441   0023DA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3442   0023DE  0012               	return		;funcret
  3443   0023E0                     __end_of___wmul:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function _make_master_closeness *****************
  3447 ;; Defined at:
  3448 ;;		line 98 in file "colour_identify.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  buf             2   13[COMRAM] PTR unsigned char 
  3451 ;;		 -> main@buf(150), 
  3452 ;;  normalised_v    2   15[COMRAM] PTR unsigned int [9]
  3453 ;;		 -> main@normalised_values(54), 
  3454 ;;  master_close    2   17[COMRAM] PTR unsigned int 
  3455 ;;		 -> main@master_closeness(18), 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  i               1   39[COMRAM] enum E14551
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3467 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3469 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3470 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3471 ;;Total ram usage:       27 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; Hardware stack levels required when called: 1
  3474 ;; This function calls:
  3475 ;;		___lwdiv
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text17
  3482   001CD0                     __ptext17:
  3483                           	callstack 0
  3484   001CD0                     _make_master_closeness:
  3485                           	callstack 29
  3486   001CD0                     
  3487                           ;colour_identify.c: 99:     for(colour i = RED; i<=BLACK; i++){
  3488   001CD0  0E00               	movlw	0
  3489   001CD2  6E28               	movwf	make_master_closeness@i^0,c
  3490   001CD4                     l2533:
  3491                           
  3492                           ;colour_identify.c: 100:         master_closeness[i] = (normalised_values[RED][i] + norm
      +                          alised_values[GREEN][i] + normalised_values[BLUE][i])/3;
  3493   001CD4  5028               	movf	make_master_closeness@i^0,w,c
  3494   001CD6  0D02               	mullw	2
  3495   001CD8  CFF3 F014          	movff	prodl,??_make_master_closeness
  3496   001CDC  CFF4 F015          	movff	prodh,??_make_master_closeness+1
  3497   001CE0  5014               	movf	??_make_master_closeness^0,w,c
  3498   001CE2  2410               	addwf	make_master_closeness@normalised_values^0,w,c
  3499   001CE4  6E16               	movwf	(??_make_master_closeness+2)^0,c
  3500   001CE6  5015               	movf	(??_make_master_closeness+1)^0,w,c
  3501   001CE8  2011               	addwfc	(make_master_closeness@normalised_values+1)^0,w,c
  3502   001CEA  6E17               	movwf	(??_make_master_closeness+3)^0,c
  3503   001CEC  0E24               	movlw	36
  3504   001CEE  2416               	addwf	(??_make_master_closeness+2)^0,w,c
  3505   001CF0  6ED9               	movwf	fsr2l,c
  3506   001CF2  0E00               	movlw	0
  3507   001CF4  2017               	addwfc	(??_make_master_closeness+3)^0,w,c
  3508   001CF6  6EDA               	movwf	fsr2h,c
  3509   001CF8  CFDE F018          	movff	postinc2,??_make_master_closeness+4
  3510   001CFC  CFDD F019          	movff	postdec2,??_make_master_closeness+5
  3511   001D00  5028               	movf	make_master_closeness@i^0,w,c
  3512   001D02  0D02               	mullw	2
  3513   001D04  CFF3 F01A          	movff	prodl,??_make_master_closeness+6
  3514   001D08  CFF4 F01B          	movff	prodh,??_make_master_closeness+7
  3515   001D0C  501A               	movf	(??_make_master_closeness+6)^0,w,c
  3516   001D0E  2410               	addwf	make_master_closeness@normalised_values^0,w,c
  3517   001D10  6E1C               	movwf	(??_make_master_closeness+8)^0,c
  3518   001D12  501B               	movf	(??_make_master_closeness+7)^0,w,c
  3519   001D14  2011               	addwfc	(make_master_closeness@normalised_values+1)^0,w,c
  3520   001D16  6E1D               	movwf	(??_make_master_closeness+9)^0,c
  3521   001D18  0E12               	movlw	18
  3522   001D1A  241C               	addwf	(??_make_master_closeness+8)^0,w,c
  3523   001D1C  6ED9               	movwf	fsr2l,c
  3524   001D1E  0E00               	movlw	0
  3525   001D20  201D               	addwfc	(??_make_master_closeness+9)^0,w,c
  3526   001D22  6EDA               	movwf	fsr2h,c
  3527   001D24  CFDE F01E          	movff	postinc2,??_make_master_closeness+10
  3528   001D28  CFDD F01F          	movff	postdec2,??_make_master_closeness+11
  3529   001D2C  5028               	movf	make_master_closeness@i^0,w,c
  3530   001D2E  0D02               	mullw	2
  3531   001D30  CFF3 F020          	movff	prodl,??_make_master_closeness+12
  3532   001D34  CFF4 F021          	movff	prodh,??_make_master_closeness+13
  3533   001D38  5020               	movf	(??_make_master_closeness+12)^0,w,c
  3534   001D3A  2410               	addwf	make_master_closeness@normalised_values^0,w,c
  3535   001D3C  6ED9               	movwf	fsr2l,c
  3536   001D3E  5021               	movf	(??_make_master_closeness+13)^0,w,c
  3537   001D40  2011               	addwfc	(make_master_closeness@normalised_values+1)^0,w,c
  3538   001D42  6EDA               	movwf	fsr2h,c
  3539   001D44  CFDE F022          	movff	postinc2,??_make_master_closeness+14
  3540   001D48  CFDD F023          	movff	postdec2,??_make_master_closeness+15
  3541   001D4C  501E               	movf	(??_make_master_closeness+10)^0,w,c
  3542   001D4E  2422               	addwf	(??_make_master_closeness+14)^0,w,c
  3543   001D50  6E24               	movwf	(??_make_master_closeness+16)^0,c
  3544   001D52  501F               	movf	(??_make_master_closeness+11)^0,w,c
  3545   001D54  2023               	addwfc	(??_make_master_closeness+15)^0,w,c
  3546   001D56  6E25               	movwf	(??_make_master_closeness+17)^0,c
  3547   001D58  5018               	movf	(??_make_master_closeness+4)^0,w,c
  3548   001D5A  2424               	addwf	(??_make_master_closeness+16)^0,w,c
  3549   001D5C  6E07               	movwf	___lwdiv@dividend^0,c
  3550   001D5E  5019               	movf	(??_make_master_closeness+5)^0,w,c
  3551   001D60  2025               	addwfc	(??_make_master_closeness+17)^0,w,c
  3552   001D62  6E08               	movwf	(___lwdiv@dividend+1)^0,c
  3553   001D64  0E00               	movlw	0
  3554   001D66  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3555   001D68  0E03               	movlw	3
  3556   001D6A  6E09               	movwf	___lwdiv@divisor^0,c
  3557   001D6C  EC04  F010         	call	___lwdiv	;wreg free
  3558   001D70  5028               	movf	make_master_closeness@i^0,w,c
  3559   001D72  0D02               	mullw	2
  3560   001D74  CFF3 F026          	movff	prodl,??_make_master_closeness+18
  3561   001D78  CFF4 F027          	movff	prodh,??_make_master_closeness+19
  3562   001D7C  5026               	movf	(??_make_master_closeness+18)^0,w,c
  3563   001D7E  2412               	addwf	make_master_closeness@master_closeness^0,w,c
  3564   001D80  6ED9               	movwf	fsr2l,c
  3565   001D82  5027               	movf	(??_make_master_closeness+19)^0,w,c
  3566   001D84  2013               	addwfc	(make_master_closeness@master_closeness+1)^0,w,c
  3567   001D86  6EDA               	movwf	fsr2h,c
  3568   001D88  C007  FFDE         	movff	?___lwdiv,postinc2
  3569   001D8C  C008  FFDD         	movff	?___lwdiv+1,postdec2
  3570   001D90                     
  3571                           ;colour_identify.c: 102:         _delay((unsigned long)((200)*(64000000/4000.0)));
  3572   001D90  0E11               	movlw	17
  3573   001D92  6E15               	movwf	(??_make_master_closeness+1)^0,c
  3574   001D94  0E3C               	movlw	60
  3575   001D96  6E14               	movwf	??_make_master_closeness^0,c
  3576   001D98  0ECB               	movlw	203
  3577   001D9A                     u1467:
  3578   001D9A  2EE8               	decfsz	wreg,f,c
  3579   001D9C  D7FE               	bra	u1467
  3580   001D9E  2E14               	decfsz	??_make_master_closeness^0,f,c
  3581   001DA0  D7FC               	bra	u1467
  3582   001DA2  2E15               	decfsz	(??_make_master_closeness+1)^0,f,c
  3583   001DA4  D7FA               	bra	u1467
  3584   001DA6  F000               	nop	
  3585   001DA8                     
  3586                           ;colour_identify.c: 104:     }
  3587   001DA8  2A28               	incf	make_master_closeness@i^0,f,c
  3588   001DAA  0E08               	movlw	8
  3589   001DAC  6428               	cpfsgt	make_master_closeness@i^0,c
  3590   001DAE  EFDB  F00E         	goto	u1291
  3591   001DB2  EFDD  F00E         	goto	u1290
  3592   001DB6                     u1291:
  3593   001DB6  EF6A  F00E         	goto	l2533
  3594   001DBA                     u1290:
  3595   001DBA  0012               	return		;funcret
  3596   001DBC                     __end_of_make_master_closeness:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _initUSART4 *****************
  3600 ;; Defined at:
  3601 ;;		line 6 in file "serial.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_main
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text18
  3629   002402                     __ptext18:
  3630                           	callstack 0
  3631   002402                     _initUSART4:
  3632                           	callstack 30
  3633   002402                     
  3634                           ;serial.c: 10:     RC0PPS = 0x12;
  3635   002402  0E12               	movlw	18
  3636   002404  010E               	movlb	14	; () banked
  3637   002406  6F62               	movwf	98,b	;volatile
  3638                           
  3639                           ;serial.c: 11:     RX4PPS = 0x11;
  3640   002408  0E11               	movlw	17
  3641   00240A  6F15               	movwf	21,b	;volatile
  3642   00240C                     
  3643                           ; BSR set to: 14
  3644                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3645   00240C  8283               	bsf	131,1,c	;volatile
  3646   00240E                     
  3647                           ; BSR set to: 14
  3648                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3649   00240E  97E9               	bcf	233,3,b	;volatile
  3650   002410                     
  3651                           ; BSR set to: 14
  3652                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3653   002410  95E8               	bcf	232,2,b	;volatile
  3654                           
  3655                           ;serial.c: 17:     SP4BRGL = 51;
  3656   002412  0E33               	movlw	51
  3657   002414  6FE5               	movwf	229,b	;volatile
  3658                           
  3659                           ;serial.c: 18:     SP4BRGH = 0;
  3660   002416  0E00               	movlw	0
  3661   002418  6FE6               	movwf	230,b	;volatile
  3662   00241A                     
  3663                           ; BSR set to: 14
  3664                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3665   00241A  89E7               	bsf	231,4,b	;volatile
  3666   00241C                     
  3667                           ; BSR set to: 14
  3668                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3669   00241C  8BE8               	bsf	232,5,b	;volatile
  3670   00241E                     
  3671                           ; BSR set to: 14
  3672                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3673   00241E  8FE7               	bsf	231,7,b	;volatile
  3674   002420                     
  3675                           ; BSR set to: 14
  3676   002420  0012               	return		;funcret
  3677   002422                     __end_of_initUSART4:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _initDCmotorsPWM *****************
  3681 ;; Defined at:
  3682 ;;		line 6 in file "dc_motor.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;Total ram usage:        0 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text19
  3710   001E86                     __ptext19:
  3711                           	callstack 0
  3712   001E86                     _initDCmotorsPWM:
  3713                           	callstack 30
  3714   001E86                     
  3715                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3716   001E86  9485               	bcf	133,2,c	;volatile
  3717                           
  3718                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3719   001E88  9885               	bcf	133,4,c	;volatile
  3720                           
  3721                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3722   001E8A  9E83               	bcf	131,7,c	;volatile
  3723                           
  3724                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3725   001E8C  9C87               	bcf	135,6,c	;volatile
  3726   001E8E                     
  3727                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3728   001E8E  0E05               	movlw	5
  3729   001E90  010E               	movlb	14	; () banked
  3730   001E92  6F74               	movwf	116,b	;volatile
  3731                           
  3732                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3733   001E94  0E06               	movlw	6
  3734   001E96  6F76               	movwf	118,b	;volatile
  3735                           
  3736                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3737   001E98  0E07               	movlw	7
  3738   001E9A  6F69               	movwf	105,b	;volatile
  3739                           
  3740                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3741   001E9C  0E08               	movlw	8
  3742   001E9E  6F88               	movwf	136,b	;volatile
  3743                           
  3744                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3745   001EA0  50BD               	movf	189,w,c	;volatile
  3746   001EA2  0B8F               	andlw	-113
  3747   001EA4  0940               	iorlw	64
  3748   001EA6  6EBD               	movwf	189,c	;volatile
  3749                           
  3750                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3751   001EA8  0EE0               	movlw	-32
  3752   001EAA  16BE               	andwf	190,f,c	;volatile
  3753                           
  3754                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3755   001EAC  50BF               	movf	191,w,c	;volatile
  3756   001EAE  0BF0               	andlw	-16
  3757   001EB0  0901               	iorlw	1
  3758   001EB2  6EBF               	movwf	191,c	;volatile
  3759                           
  3760                           ;dc_motor.c: 26:     T2PR=99;
  3761   001EB4  0E63               	movlw	99
  3762   001EB6  6EBC               	movwf	188,c	;volatile
  3763   001EB8                     
  3764                           ; BSR set to: 14
  3765                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3766   001EB8  8EBD               	bsf	189,7,c	;volatile
  3767                           
  3768                           ;dc_motor.c: 31:     CCPR1H=0;
  3769   001EBA  0E00               	movlw	0
  3770   001EBC  6EAA               	movwf	170,c	;volatile
  3771                           
  3772                           ;dc_motor.c: 32:     CCPR2H=0;
  3773   001EBE  0E00               	movlw	0
  3774   001EC0  6EA6               	movwf	166,c	;volatile
  3775                           
  3776                           ;dc_motor.c: 33:     CCPR3H=0;
  3777   001EC2  0E00               	movlw	0
  3778   001EC4  010F               	movlb	15	; () banked
  3779   001EC6  6F25               	movwf	37,b	;volatile
  3780                           
  3781                           ;dc_motor.c: 34:     CCPR4H=0;
  3782   001EC8  0E00               	movlw	0
  3783   001ECA  6F21               	movwf	33,b	;volatile
  3784                           
  3785                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3786   001ECC  0EFC               	movlw	-4
  3787   001ECE  16AD               	andwf	173,f,c	;volatile
  3788                           
  3789                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3790   001ED0  0EF3               	movlw	-13
  3791   001ED2  16AD               	andwf	173,f,c	;volatile
  3792                           
  3793                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3794   001ED4  0ECF               	movlw	-49
  3795   001ED6  16AD               	andwf	173,f,c	;volatile
  3796                           
  3797                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3798   001ED8  0E3F               	movlw	-193
  3799   001EDA  16AD               	andwf	173,f,c	;volatile
  3800   001EDC                     
  3801                           ; BSR set to: 15
  3802                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3803   001EDC  88AB               	bsf	171,4,c	;volatile
  3804                           
  3805                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3806   001EDE  50AB               	movf	171,w,c	;volatile
  3807   001EE0  0BF0               	andlw	-16
  3808   001EE2  090C               	iorlw	12
  3809   001EE4  6EAB               	movwf	171,c	;volatile
  3810   001EE6                     
  3811                           ; BSR set to: 15
  3812                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3813   001EE6  8EAB               	bsf	171,7,c	;volatile
  3814   001EE8                     
  3815                           ; BSR set to: 15
  3816                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3817   001EE8  88A7               	bsf	167,4,c	;volatile
  3818                           
  3819                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3820   001EEA  50A7               	movf	167,w,c	;volatile
  3821   001EEC  0BF0               	andlw	-16
  3822   001EEE  090C               	iorlw	12
  3823   001EF0  6EA7               	movwf	167,c	;volatile
  3824   001EF2                     
  3825                           ; BSR set to: 15
  3826                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3827   001EF2  8EA7               	bsf	167,7,c	;volatile
  3828   001EF4                     
  3829                           ; BSR set to: 15
  3830                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3831   001EF4  8926               	bsf	38,4,b	;volatile
  3832                           
  3833                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3834   001EF6  5126               	movf	38,w,b	;volatile
  3835   001EF8  0BF0               	andlw	-16
  3836   001EFA  090C               	iorlw	12
  3837   001EFC  6F26               	movwf	38,b	;volatile
  3838   001EFE                     
  3839                           ; BSR set to: 15
  3840                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3841   001EFE  8F26               	bsf	38,7,b	;volatile
  3842   001F00                     
  3843                           ; BSR set to: 15
  3844                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3845   001F00  8922               	bsf	34,4,b	;volatile
  3846                           
  3847                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3848   001F02  5122               	movf	34,w,b	;volatile
  3849   001F04  0BF0               	andlw	-16
  3850   001F06  090C               	iorlw	12
  3851   001F08  6F22               	movwf	34,b	;volatile
  3852   001F0A                     
  3853                           ; BSR set to: 15
  3854                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3855   001F0A  8F22               	bsf	34,7,b	;volatile
  3856   001F0C                     
  3857                           ; BSR set to: 15
  3858   001F0C  0012               	return		;funcret
  3859   001F0E                     __end_of_initDCmotorsPWM:
  3860                           	callstack 0
  3861                           
  3862 ;; *************** function _determine_card *****************
  3863 ;; Defined at:
  3864 ;;		line 107 in file "colour_identify.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  master_close    2    0[COMRAM] PTR unsigned int 
  3867 ;;		 -> main@master_closeness(18), 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  i               1    9[COMRAM] enum E14551
  3870 ;;  current_smal    2    6[COMRAM] unsigned int 
  3871 ;;  predicted_co    1    8[COMRAM] enum E14551
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      enum E14575
  3874 ;; Registers used:
  3875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3882 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;Total ram usage:       10 bytes
  3886 ;; Hardware stack levels used: 1
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text20
  3895   001F0E                     __ptext20:
  3896                           	callstack 0
  3897   001F0E                     _determine_card:
  3898                           	callstack 30
  3899   001F0E                     
  3900                           ;colour_identify.c: 108:     colour predicted_colour = RED;
  3901   001F0E  0E00               	movlw	0
  3902   001F10  6E09               	movwf	determine_card@predicted_colour^0,c
  3903   001F12                     
  3904                           ;colour_identify.c: 109:     unsigned int current_smallest = master_closeness[RED];
  3905   001F12  C001  FFD9         	movff	determine_card@master_closeness,fsr2l
  3906   001F16  C002  FFDA         	movff	determine_card@master_closeness+1,fsr2h
  3907   001F1A  CFDE F007          	movff	postinc2,determine_card@current_smallest
  3908   001F1E  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  3909   001F22                     
  3910                           ;colour_identify.c: 110:     for(colour i = GREEN; i<=BLACK; i++){
  3911   001F22  0E01               	movlw	1
  3912   001F24  6E0A               	movwf	determine_card@i^0,c
  3913   001F26                     l2551:
  3914                           
  3915                           ;colour_identify.c: 111:         if(master_closeness[i] < current_smallest){
  3916   001F26  500A               	movf	determine_card@i^0,w,c
  3917   001F28  0D02               	mullw	2
  3918   001F2A  CFF3 F003          	movff	prodl,??_determine_card
  3919   001F2E  CFF4 F004          	movff	prodh,??_determine_card+1
  3920   001F32  5003               	movf	??_determine_card^0,w,c
  3921   001F34  2401               	addwf	determine_card@master_closeness^0,w,c
  3922   001F36  6ED9               	movwf	fsr2l,c
  3923   001F38  5004               	movf	(??_determine_card+1)^0,w,c
  3924   001F3A  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  3925   001F3C  6EDA               	movwf	fsr2h,c
  3926   001F3E  5007               	movf	determine_card@current_smallest^0,w,c
  3927   001F40  5CDE               	subwf	postinc2,w,c
  3928   001F42  5008               	movf	(determine_card@current_smallest+1)^0,w,c
  3929   001F44  58DE               	subwfb	postinc2,w,c
  3930   001F46  B0D8               	btfsc	status,0,c
  3931   001F48  EFA8  F00F         	goto	u1301
  3932   001F4C  EFAA  F00F         	goto	u1300
  3933   001F50                     u1301:
  3934   001F50  EFBC  F00F         	goto	l2557
  3935   001F54                     u1300:
  3936   001F54                     
  3937                           ;colour_identify.c: 112:             current_smallest = master_closeness[i];
  3938   001F54  500A               	movf	determine_card@i^0,w,c
  3939   001F56  0D02               	mullw	2
  3940   001F58  CFF3 F003          	movff	prodl,??_determine_card
  3941   001F5C  CFF4 F004          	movff	prodh,??_determine_card+1
  3942   001F60  5003               	movf	??_determine_card^0,w,c
  3943   001F62  2401               	addwf	determine_card@master_closeness^0,w,c
  3944   001F64  6ED9               	movwf	fsr2l,c
  3945   001F66  5004               	movf	(??_determine_card+1)^0,w,c
  3946   001F68  2002               	addwfc	(determine_card@master_closeness+1)^0,w,c
  3947   001F6A  6EDA               	movwf	fsr2h,c
  3948   001F6C  CFDE F007          	movff	postinc2,determine_card@current_smallest
  3949   001F70  CFDD F008          	movff	postdec2,determine_card@current_smallest+1
  3950   001F74                     
  3951                           ;colour_identify.c: 113:             predicted_colour = i;
  3952   001F74  C00A  F009         	movff	determine_card@i,determine_card@predicted_colour
  3953   001F78                     l2557:
  3954                           
  3955                           ;colour_identify.c: 115:     }
  3956   001F78  2A0A               	incf	determine_card@i^0,f,c
  3957   001F7A  0E08               	movlw	8
  3958   001F7C  640A               	cpfsgt	determine_card@i^0,c
  3959   001F7E  EFC3  F00F         	goto	u1311
  3960   001F82  EFC5  F00F         	goto	u1310
  3961   001F86                     u1311:
  3962   001F86  EF93  F00F         	goto	l2551
  3963   001F8A                     u1310:
  3964   001F8A                     
  3965                           ;colour_identify.c: 116:     return predicted_colour;
  3966   001F8A  5009               	movf	determine_card@predicted_colour^0,w,c
  3967   001F8C  0012               	return		;funcret
  3968   001F8E                     __end_of_determine_card:
  3969                           	callstack 0
  3970                           
  3971 ;; *************** function _color_click_init *****************
  3972 ;; Defined at:
  3973 ;;		line 5 in file "color.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, status,2, status,0, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3991 ;;Total ram usage:        1 bytes
  3992 ;; Hardware stack levels used: 1
  3993 ;; Hardware stack levels required when called: 3
  3994 ;; This function calls:
  3995 ;;		_I2C_2_Master_Init
  3996 ;;		_color_writetoaddr
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text21
  4003   0022D6                     __ptext21:
  4004                           	callstack 0
  4005   0022D6                     _color_click_init:
  4006                           	callstack 27
  4007   0022D6                     
  4008                           ;color.c: 8:     I2C_2_Master_Init();
  4009   0022D6  ECB4  F011         	call	_I2C_2_Master_Init	;wreg free
  4010   0022DA                     
  4011                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  4012   0022DA  0E01               	movlw	1
  4013   0022DC  6E03               	movwf	color_writetoaddr@value^0,c
  4014   0022DE  0E00               	movlw	0
  4015   0022E0  EC11  F012         	call	_color_writetoaddr
  4016   0022E4                     
  4017                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4018   0022E4  0E3F               	movlw	63
  4019   0022E6  6E05               	movwf	??_color_click_init^0,c
  4020   0022E8  0E55               	movlw	85
  4021   0022EA                     u1477:
  4022   0022EA  2EE8               	decfsz	wreg,f,c
  4023   0022EC  D7FE               	bra	u1477
  4024   0022EE  2E05               	decfsz	??_color_click_init^0,f,c
  4025   0022F0  D7FC               	bra	u1477
  4026   0022F2  F000               	nop	
  4027   0022F4                     
  4028                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  4029   0022F4  0E03               	movlw	3
  4030   0022F6  6E03               	movwf	color_writetoaddr@value^0,c
  4031   0022F8  0E00               	movlw	0
  4032   0022FA  EC11  F012         	call	_color_writetoaddr
  4033   0022FE                     
  4034                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  4035   0022FE  0ED5               	movlw	213
  4036   002300  6E03               	movwf	color_writetoaddr@value^0,c
  4037   002302  0E01               	movlw	1
  4038   002304  EC11  F012         	call	_color_writetoaddr
  4039   002308  0012               	return		;funcret
  4040   00230A                     __end_of_color_click_init:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _color_writetoaddr *****************
  4044 ;; Defined at:
  4045 ;;		line 21 in file "color.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  address         1    wreg     unsigned char 
  4048 ;;  value           1    2[COMRAM] unsigned char 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  address         1    3[COMRAM] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4060 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4064 ;;Total ram usage:        2 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; Hardware stack levels required when called: 2
  4067 ;; This function calls:
  4068 ;;		_I2C_2_Master_Start
  4069 ;;		_I2C_2_Master_Stop
  4070 ;;		_I2C_2_Master_Write
  4071 ;; This function is called by:
  4072 ;;		_color_click_init
  4073 ;;		_enable_color_interrupt
  4074 ;;		_set_interrupt_threshold
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text22
  4079   002422                     __ptext22:
  4080                           	callstack 0
  4081   002422                     _color_writetoaddr:
  4082                           	callstack 27
  4083                           
  4084                           ;incstack = 0
  4085                           ;color_writetoaddr@address stored from wreg
  4086   002422  6E04               	movwf	color_writetoaddr@address^0,c
  4087   002424                     
  4088                           ;color.c: 22:     I2C_2_Master_Start();
  4089   002424  EC38  F012         	call	_I2C_2_Master_Start	;wreg free
  4090                           
  4091                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4092   002428  0E52               	movlw	82
  4093   00242A  EC2D  F012         	call	_I2C_2_Master_Write
  4094                           
  4095                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4096   00242E  5004               	movf	color_writetoaddr@address^0,w,c
  4097   002430  0980               	iorlw	128
  4098   002432  EC2D  F012         	call	_I2C_2_Master_Write
  4099                           
  4100                           ;color.c: 25:     I2C_2_Master_Write(value);
  4101   002436  5003               	movf	color_writetoaddr@value^0,w,c
  4102   002438  EC2D  F012         	call	_I2C_2_Master_Write
  4103                           
  4104                           ;color.c: 26:     I2C_2_Master_Stop();
  4105   00243C  EC33  F012         	call	_I2C_2_Master_Stop	;wreg free
  4106   002440  0012               	return		;funcret
  4107   002442                     __end_of_color_writetoaddr:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function _I2C_2_Master_Init *****************
  4111 ;; Defined at:
  4112 ;;		line 4 in file "i2c.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_color_click_init
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text23
  4141   002368                     __ptext23:
  4142                           	callstack 0
  4143   002368                     _I2C_2_Master_Init:
  4144                           	callstack 29
  4145   002368                     
  4146                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4147   002368  010E               	movlb	14	; () banked
  4148   00236A  51D9               	movf	217,w,b	;volatile
  4149   00236C  0BF0               	andlw	-16
  4150   00236E  0908               	iorlw	8
  4151   002370  6FD9               	movwf	217,b	;volatile
  4152   002372                     
  4153                           ; BSR set to: 14
  4154                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4155   002372  8BD9               	bsf	217,5,b	;volatile
  4156                           
  4157                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4158   002374  0E9F               	movlw	159
  4159   002376  6FD6               	movwf	214,b	;volatile
  4160   002378                     
  4161                           ; BSR set to: 14
  4162                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4163   002378  8A84               	bsf	132,5,c	;volatile
  4164   00237A                     
  4165                           ; BSR set to: 14
  4166                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4167   00237A  8C84               	bsf	132,6,c	;volatile
  4168   00237C                     
  4169                           ; BSR set to: 14
  4170                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4171   00237C  9BA7               	bcf	167,5,b	;volatile
  4172   00237E                     
  4173                           ; BSR set to: 14
  4174                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4175   00237E  9DA7               	bcf	167,6,b	;volatile
  4176                           
  4177                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4178   002380  0E1D               	movlw	29
  4179   002382  6F1D               	movwf	29,b	;volatile
  4180                           
  4181                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4182   002384  0E1E               	movlw	30
  4183   002386  6F1C               	movwf	28,b	;volatile
  4184                           
  4185                           ;i2c.c: 18:   RD5PPS=0x1C;
  4186   002388  0E1C               	movlw	28
  4187   00238A  6F6F               	movwf	111,b	;volatile
  4188                           
  4189                           ;i2c.c: 19:   RD6PPS=0x1B;
  4190   00238C  0E1B               	movlw	27
  4191   00238E  6F70               	movwf	112,b	;volatile
  4192   002390                     
  4193                           ; BSR set to: 14
  4194   002390  0012               	return		;funcret
  4195   002392                     __end_of_I2C_2_Master_Init:
  4196                           	callstack 0
  4197                           
  4198 ;; *************** function _collect_avg_readings *****************
  4199 ;; Defined at:
  4200 ;;		line 25 in file "colour_identify.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  red_read        2   13[COMRAM] PTR unsigned int 
  4203 ;;		 -> main@red_read(2), 
  4204 ;;  green_read      2   15[COMRAM] PTR unsigned int 
  4205 ;;		 -> main@green_read(2), 
  4206 ;;  blue_read       2   17[COMRAM] PTR unsigned int 
  4207 ;;		 -> main@blue_read(2), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  i               2   27[COMRAM] int 
  4210 ;;  i               2   25[COMRAM] int 
  4211 ;;  i               2   23[COMRAM] int 
  4212 ;;  i               2   21[COMRAM] int 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4222 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4223 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4225 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4226 ;;Total ram usage:       16 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 3
  4229 ;; This function calls:
  4230 ;;		___lwdiv
  4231 ;;		_color_read_Blue
  4232 ;;		_color_read_Green
  4233 ;;		_color_read_Red
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text24
  4240   001532                     __ptext24:
  4241                           	callstack 0
  4242   001532                     _collect_avg_readings:
  4243                           	callstack 27
  4244   001532                     
  4245                           ;colour_identify.c: 25: void collect_avg_readings( unsigned int *red_read, unsigned int 
      +                          *green_read, unsigned int *blue_read);colour_identify.c: 26: {;colour_identify.c: 29:   
      +                            for (int i = 0; i <= 500; i++){
  4246   001532  0E00               	movlw	0
  4247   001534  6E17               	movwf	(collect_avg_readings@i+1)^0,c
  4248   001536  0E00               	movlw	0
  4249   001538  6E16               	movwf	collect_avg_readings@i^0,c
  4250   00153A                     l2439:
  4251                           
  4252                           ;colour_identify.c: 30:         *red_read = color_read_Red();
  4253   00153A  EC90  F010         	call	_color_read_Red	;wreg free
  4254   00153E  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4255   001542  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4256   001546  C005  FFDE         	movff	?_color_read_Red,postinc2
  4257   00154A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4258                           
  4259                           ;colour_identify.c: 31:         *green_read = color_read_Green();
  4260   00154E  ECB8  F010         	call	_color_read_Green	;wreg free
  4261   001552  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4262   001556  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4263   00155A  C005  FFDE         	movff	?_color_read_Green,postinc2
  4264   00155E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4265                           
  4266                           ;colour_identify.c: 32:         *blue_read = color_read_Blue();
  4267   001562  ECE0  F010         	call	_color_read_Blue	;wreg free
  4268   001566  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4269   00156A  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4270   00156E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4271   001572  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4272   001576                     
  4273                           ;colour_identify.c: 33:     }
  4274   001576  4A16               	infsnz	collect_avg_readings@i^0,f,c
  4275   001578  2A17               	incf	(collect_avg_readings@i+1)^0,f,c
  4276   00157A  BE17               	btfsc	(collect_avg_readings@i+1)^0,7,c
  4277   00157C  EFC9  F00A         	goto	u1231
  4278   001580  0EF5               	movlw	245
  4279   001582  5C16               	subwf	collect_avg_readings@i^0,w,c
  4280   001584  0E01               	movlw	1
  4281   001586  5817               	subwfb	(collect_avg_readings@i+1)^0,w,c
  4282   001588  A0D8               	btfss	status,0,c
  4283   00158A  EFC9  F00A         	goto	u1231
  4284   00158E  EFCB  F00A         	goto	u1230
  4285   001592                     u1231:
  4286   001592  EF9D  F00A         	goto	l2439
  4287   001596                     u1230:
  4288   001596                     
  4289                           ;colour_identify.c: 35:     for(int i = 0; i <= 2; i++){
  4290   001596  0E00               	movlw	0
  4291   001598  6E19               	movwf	(collect_avg_readings@i_1553+1)^0,c
  4292   00159A  0E00               	movlw	0
  4293   00159C  6E18               	movwf	collect_avg_readings@i_1553^0,c
  4294   00159E                     l2451:
  4295                           
  4296                           ;colour_identify.c: 36:         *red_read += color_read_Red();
  4297   00159E  EC90  F010         	call	_color_read_Red	;wreg free
  4298   0015A2  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4299   0015A6  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4300   0015AA  5005               	movf	?_color_read_Red^0,w,c
  4301   0015AC  26DE               	addwf	postinc2,f,c
  4302   0015AE  5006               	movf	(?_color_read_Red+1)^0,w,c
  4303   0015B0  22DD               	addwfc	postdec2,f,c
  4304   0015B2                     
  4305                           ;colour_identify.c: 37:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4306   0015B2  0E11               	movlw	17
  4307   0015B4  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4308   0015B6  0E3C               	movlw	60
  4309   0015B8  6E14               	movwf	??_collect_avg_readings^0,c
  4310   0015BA  0ECB               	movlw	203
  4311   0015BC                     u1487:
  4312   0015BC  2EE8               	decfsz	wreg,f,c
  4313   0015BE  D7FE               	bra	u1487
  4314   0015C0  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4315   0015C2  D7FC               	bra	u1487
  4316   0015C4  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4317   0015C6  D7FA               	bra	u1487
  4318   0015C8  F000               	nop	
  4319   0015CA                     
  4320                           ;colour_identify.c: 38:     }
  4321   0015CA  4A18               	infsnz	collect_avg_readings@i_1553^0,f,c
  4322   0015CC  2A19               	incf	(collect_avg_readings@i_1553+1)^0,f,c
  4323   0015CE  BE19               	btfsc	(collect_avg_readings@i_1553+1)^0,7,c
  4324   0015D0  EFF3  F00A         	goto	u1241
  4325   0015D4  5019               	movf	(collect_avg_readings@i_1553+1)^0,w,c
  4326   0015D6  E109               	bnz	u1240
  4327   0015D8  0E03               	movlw	3
  4328   0015DA  5C18               	subwf	collect_avg_readings@i_1553^0,w,c
  4329   0015DC  A0D8               	btfss	status,0,c
  4330   0015DE  EFF3  F00A         	goto	u1241
  4331   0015E2  EFF5  F00A         	goto	u1240
  4332   0015E6                     u1241:
  4333   0015E6  EFCF  F00A         	goto	l2451
  4334   0015EA                     u1240:
  4335   0015EA                     
  4336                           ;colour_identify.c: 39:     *red_read = *red_read/3;
  4337   0015EA  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4338   0015EE  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4339   0015F2  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4340   0015F6  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4341   0015FA  0E00               	movlw	0
  4342   0015FC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4343   0015FE  0E03               	movlw	3
  4344   001600  6E09               	movwf	___lwdiv@divisor^0,c
  4345   001602  EC04  F010         	call	___lwdiv	;wreg free
  4346   001606  C00E  FFD9         	movff	collect_avg_readings@red_read,fsr2l
  4347   00160A  C00F  FFDA         	movff	collect_avg_readings@red_read+1,fsr2h
  4348   00160E  C007  FFDE         	movff	?___lwdiv,postinc2
  4349   001612  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4350   001616                     
  4351                           ;colour_identify.c: 44:     for(int i = 0; i <= 2; i++){
  4352   001616  0E00               	movlw	0
  4353   001618  6E1B               	movwf	(collect_avg_readings@i_1554+1)^0,c
  4354   00161A  0E00               	movlw	0
  4355   00161C  6E1A               	movwf	collect_avg_readings@i_1554^0,c
  4356   00161E                     l2467:
  4357                           
  4358                           ;colour_identify.c: 45:         *green_read += color_read_Green();
  4359   00161E  ECB8  F010         	call	_color_read_Green	;wreg free
  4360   001622  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4361   001626  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4362   00162A  5005               	movf	?_color_read_Green^0,w,c
  4363   00162C  26DE               	addwf	postinc2,f,c
  4364   00162E  5006               	movf	(?_color_read_Green+1)^0,w,c
  4365   001630  22DD               	addwfc	postdec2,f,c
  4366   001632                     
  4367                           ;colour_identify.c: 46:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4368   001632  0E11               	movlw	17
  4369   001634  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4370   001636  0E3C               	movlw	60
  4371   001638  6E14               	movwf	??_collect_avg_readings^0,c
  4372   00163A  0ECB               	movlw	203
  4373   00163C                     u1497:
  4374   00163C  2EE8               	decfsz	wreg,f,c
  4375   00163E  D7FE               	bra	u1497
  4376   001640  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4377   001642  D7FC               	bra	u1497
  4378   001644  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4379   001646  D7FA               	bra	u1497
  4380   001648  F000               	nop	
  4381   00164A                     
  4382                           ;colour_identify.c: 47:     }
  4383   00164A  4A1A               	infsnz	collect_avg_readings@i_1554^0,f,c
  4384   00164C  2A1B               	incf	(collect_avg_readings@i_1554+1)^0,f,c
  4385   00164E  BE1B               	btfsc	(collect_avg_readings@i_1554+1)^0,7,c
  4386   001650  EF33  F00B         	goto	u1251
  4387   001654  501B               	movf	(collect_avg_readings@i_1554+1)^0,w,c
  4388   001656  E109               	bnz	u1250
  4389   001658  0E03               	movlw	3
  4390   00165A  5C1A               	subwf	collect_avg_readings@i_1554^0,w,c
  4391   00165C  A0D8               	btfss	status,0,c
  4392   00165E  EF33  F00B         	goto	u1251
  4393   001662  EF35  F00B         	goto	u1250
  4394   001666                     u1251:
  4395   001666  EF0F  F00B         	goto	l2467
  4396   00166A                     u1250:
  4397   00166A                     
  4398                           ;colour_identify.c: 48:     *green_read = *green_read/3;
  4399   00166A  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4400   00166E  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4401   001672  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4402   001676  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4403   00167A  0E00               	movlw	0
  4404   00167C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4405   00167E  0E03               	movlw	3
  4406   001680  6E09               	movwf	___lwdiv@divisor^0,c
  4407   001682  EC04  F010         	call	___lwdiv	;wreg free
  4408   001686  C010  FFD9         	movff	collect_avg_readings@green_read,fsr2l
  4409   00168A  C011  FFDA         	movff	collect_avg_readings@green_read+1,fsr2h
  4410   00168E  C007  FFDE         	movff	?___lwdiv,postinc2
  4411   001692  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4412   001696                     
  4413                           ;colour_identify.c: 53:     for(int i = 0; i <= 2; i++){
  4414   001696  0E00               	movlw	0
  4415   001698  6E1D               	movwf	(collect_avg_readings@i_1555+1)^0,c
  4416   00169A  0E00               	movlw	0
  4417   00169C  6E1C               	movwf	collect_avg_readings@i_1555^0,c
  4418   00169E                     l2483:
  4419                           
  4420                           ;colour_identify.c: 54:         *blue_read += color_read_Blue();
  4421   00169E  ECE0  F010         	call	_color_read_Blue	;wreg free
  4422   0016A2  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4423   0016A6  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4424   0016AA  5005               	movf	?_color_read_Blue^0,w,c
  4425   0016AC  26DE               	addwf	postinc2,f,c
  4426   0016AE  5006               	movf	(?_color_read_Blue+1)^0,w,c
  4427   0016B0  22DD               	addwfc	postdec2,f,c
  4428   0016B2                     
  4429                           ;colour_identify.c: 55:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4430   0016B2  0E11               	movlw	17
  4431   0016B4  6E15               	movwf	(??_collect_avg_readings+1)^0,c
  4432   0016B6  0E3C               	movlw	60
  4433   0016B8  6E14               	movwf	??_collect_avg_readings^0,c
  4434   0016BA  0ECB               	movlw	203
  4435   0016BC                     u1507:
  4436   0016BC  2EE8               	decfsz	wreg,f,c
  4437   0016BE  D7FE               	bra	u1507
  4438   0016C0  2E14               	decfsz	??_collect_avg_readings^0,f,c
  4439   0016C2  D7FC               	bra	u1507
  4440   0016C4  2E15               	decfsz	(??_collect_avg_readings+1)^0,f,c
  4441   0016C6  D7FA               	bra	u1507
  4442   0016C8  F000               	nop	
  4443   0016CA                     
  4444                           ;colour_identify.c: 56:     }
  4445   0016CA  4A1C               	infsnz	collect_avg_readings@i_1555^0,f,c
  4446   0016CC  2A1D               	incf	(collect_avg_readings@i_1555+1)^0,f,c
  4447   0016CE  BE1D               	btfsc	(collect_avg_readings@i_1555+1)^0,7,c
  4448   0016D0  EF73  F00B         	goto	u1261
  4449   0016D4  501D               	movf	(collect_avg_readings@i_1555+1)^0,w,c
  4450   0016D6  E109               	bnz	u1260
  4451   0016D8  0E03               	movlw	3
  4452   0016DA  5C1C               	subwf	collect_avg_readings@i_1555^0,w,c
  4453   0016DC  A0D8               	btfss	status,0,c
  4454   0016DE  EF73  F00B         	goto	u1261
  4455   0016E2  EF75  F00B         	goto	u1260
  4456   0016E6                     u1261:
  4457   0016E6  EF4F  F00B         	goto	l2483
  4458   0016EA                     u1260:
  4459   0016EA                     
  4460                           ;colour_identify.c: 57:     *blue_read = *blue_read/3;
  4461   0016EA  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4462   0016EE  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4463   0016F2  CFDE F007          	movff	postinc2,___lwdiv@dividend
  4464   0016F6  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
  4465   0016FA  0E00               	movlw	0
  4466   0016FC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4467   0016FE  0E03               	movlw	3
  4468   001700  6E09               	movwf	___lwdiv@divisor^0,c
  4469   001702  EC04  F010         	call	___lwdiv	;wreg free
  4470   001706  C012  FFD9         	movff	collect_avg_readings@blue_read,fsr2l
  4471   00170A  C013  FFDA         	movff	collect_avg_readings@blue_read+1,fsr2h
  4472   00170E  C007  FFDE         	movff	?___lwdiv,postinc2
  4473   001712  C008  FFDD         	movff	?___lwdiv+1,postdec2
  4474   001716  0012               	return		;funcret
  4475   001718                     __end_of_collect_avg_readings:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _color_read_Red *****************
  4479 ;; Defined at:
  4480 ;;		line 29 in file "color.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  tmp             2    9[COMRAM] unsigned int 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  2    4[COMRAM] unsigned int 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;Total ram usage:        7 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 2
  4501 ;; This function calls:
  4502 ;;		_I2C_2_Master_Read
  4503 ;;		_I2C_2_Master_RepStart
  4504 ;;		_I2C_2_Master_Start
  4505 ;;		_I2C_2_Master_Stop
  4506 ;;		_I2C_2_Master_Write
  4507 ;; This function is called by:
  4508 ;;		_collect_avg_readings
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text25
  4513   002120                     __ptext25:
  4514                           	callstack 0
  4515   002120                     _color_read_Red:
  4516                           	callstack 27
  4517   002120                     
  4518                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  4519   002120  EC38  F012         	call	_I2C_2_Master_Start	;wreg free
  4520                           
  4521                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  4522   002124  0E52               	movlw	82
  4523   002126  EC2D  F012         	call	_I2C_2_Master_Write
  4524                           
  4525                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  4526   00212A  0EB6               	movlw	182
  4527   00212C  EC2D  F012         	call	_I2C_2_Master_Write
  4528                           
  4529                           ;color.c: 35:  I2C_2_Master_RepStart();
  4530   002130  EC3D  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4531                           
  4532                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  4533   002134  0E53               	movlw	83
  4534   002136  EC2D  F012         	call	_I2C_2_Master_Write
  4535                           
  4536                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  4537   00213A  0E01               	movlw	1
  4538   00213C  EC2A  F011         	call	_I2C_2_Master_Read
  4539   002140  6E07               	movwf	??_color_read_Red^0,c
  4540   002142  5007               	movf	??_color_read_Red^0,w,c
  4541   002144  6E0A               	movwf	color_read_Red@tmp^0,c
  4542   002146  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4543                           
  4544                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4545   002148  0E00               	movlw	0
  4546   00214A  EC2A  F011         	call	_I2C_2_Master_Read
  4547   00214E  6E07               	movwf	??_color_read_Red^0,c
  4548   002150  5007               	movf	??_color_read_Red^0,w,c
  4549   002152  6E09               	movwf	(??_color_read_Red+2)^0,c
  4550   002154  6A08               	clrf	(??_color_read_Red+1)^0,c
  4551   002156  500A               	movf	color_read_Red@tmp^0,w,c
  4552   002158  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4553   00215A  6E0A               	movwf	color_read_Red@tmp^0,c
  4554   00215C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4555   00215E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4556   002160  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4557                           
  4558                           ;color.c: 39:  I2C_2_Master_Stop();
  4559   002162  EC33  F012         	call	_I2C_2_Master_Stop	;wreg free
  4560   002166                     
  4561                           ;color.c: 40:  return tmp;
  4562   002166  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4563   00216A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4564   00216E  0012               	return		;funcret
  4565   002170                     __end_of_color_read_Red:
  4566                           	callstack 0
  4567                           
  4568 ;; *************** function _color_read_Green *****************
  4569 ;; Defined at:
  4570 ;;		line 43 in file "color.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  tmp             2    9[COMRAM] unsigned int 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  2    4[COMRAM] unsigned int 
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4586 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4587 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4588 ;;Total ram usage:        7 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; Hardware stack levels required when called: 2
  4591 ;; This function calls:
  4592 ;;		_I2C_2_Master_Read
  4593 ;;		_I2C_2_Master_RepStart
  4594 ;;		_I2C_2_Master_Start
  4595 ;;		_I2C_2_Master_Stop
  4596 ;;		_I2C_2_Master_Write
  4597 ;; This function is called by:
  4598 ;;		_collect_avg_readings
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text26
  4603   002170                     __ptext26:
  4604                           	callstack 0
  4605   002170                     _color_read_Green:
  4606                           	callstack 27
  4607   002170                     
  4608                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  4609   002170  EC38  F012         	call	_I2C_2_Master_Start	;wreg free
  4610                           
  4611                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  4612   002174  0E52               	movlw	82
  4613   002176  EC2D  F012         	call	_I2C_2_Master_Write
  4614                           
  4615                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  4616   00217A  0EB8               	movlw	184
  4617   00217C  EC2D  F012         	call	_I2C_2_Master_Write
  4618                           
  4619                           ;color.c: 49:  I2C_2_Master_RepStart();
  4620   002180  EC3D  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4621                           
  4622                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  4623   002184  0E53               	movlw	83
  4624   002186  EC2D  F012         	call	_I2C_2_Master_Write
  4625                           
  4626                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  4627   00218A  0E01               	movlw	1
  4628   00218C  EC2A  F011         	call	_I2C_2_Master_Read
  4629   002190  6E07               	movwf	??_color_read_Green^0,c
  4630   002192  5007               	movf	??_color_read_Green^0,w,c
  4631   002194  6E0A               	movwf	color_read_Green@tmp^0,c
  4632   002196  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4633                           
  4634                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4635   002198  0E00               	movlw	0
  4636   00219A  EC2A  F011         	call	_I2C_2_Master_Read
  4637   00219E  6E07               	movwf	??_color_read_Green^0,c
  4638   0021A0  5007               	movf	??_color_read_Green^0,w,c
  4639   0021A2  6E09               	movwf	(??_color_read_Green+2)^0,c
  4640   0021A4  6A08               	clrf	(??_color_read_Green+1)^0,c
  4641   0021A6  500A               	movf	color_read_Green@tmp^0,w,c
  4642   0021A8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4643   0021AA  6E0A               	movwf	color_read_Green@tmp^0,c
  4644   0021AC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4645   0021AE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4646   0021B0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4647                           
  4648                           ;color.c: 53:  I2C_2_Master_Stop();
  4649   0021B2  EC33  F012         	call	_I2C_2_Master_Stop	;wreg free
  4650   0021B6                     
  4651                           ;color.c: 54:  return tmp;
  4652   0021B6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4653   0021BA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4654   0021BE  0012               	return		;funcret
  4655   0021C0                     __end_of_color_read_Green:
  4656                           	callstack 0
  4657                           
  4658 ;; *************** function _color_read_Blue *****************
  4659 ;; Defined at:
  4660 ;;		line 57 in file "color.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  tmp             2    9[COMRAM] unsigned int 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  2    4[COMRAM] unsigned int 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;Total ram usage:        7 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; Hardware stack levels required when called: 2
  4681 ;; This function calls:
  4682 ;;		_I2C_2_Master_Read
  4683 ;;		_I2C_2_Master_RepStart
  4684 ;;		_I2C_2_Master_Start
  4685 ;;		_I2C_2_Master_Stop
  4686 ;;		_I2C_2_Master_Write
  4687 ;; This function is called by:
  4688 ;;		_collect_avg_readings
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text27
  4693   0021C0                     __ptext27:
  4694                           	callstack 0
  4695   0021C0                     _color_read_Blue:
  4696                           	callstack 27
  4697   0021C0                     
  4698                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  4699   0021C0  EC38  F012         	call	_I2C_2_Master_Start	;wreg free
  4700                           
  4701                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  4702   0021C4  0E52               	movlw	82
  4703   0021C6  EC2D  F012         	call	_I2C_2_Master_Write
  4704                           
  4705                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  4706   0021CA  0EBA               	movlw	186
  4707   0021CC  EC2D  F012         	call	_I2C_2_Master_Write
  4708                           
  4709                           ;color.c: 63:  I2C_2_Master_RepStart();
  4710   0021D0  EC3D  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4711                           
  4712                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  4713   0021D4  0E53               	movlw	83
  4714   0021D6  EC2D  F012         	call	_I2C_2_Master_Write
  4715                           
  4716                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  4717   0021DA  0E01               	movlw	1
  4718   0021DC  EC2A  F011         	call	_I2C_2_Master_Read
  4719   0021E0  6E07               	movwf	??_color_read_Blue^0,c
  4720   0021E2  5007               	movf	??_color_read_Blue^0,w,c
  4721   0021E4  6E0A               	movwf	color_read_Blue@tmp^0,c
  4722   0021E6  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4723                           
  4724                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4725   0021E8  0E00               	movlw	0
  4726   0021EA  EC2A  F011         	call	_I2C_2_Master_Read
  4727   0021EE  6E07               	movwf	??_color_read_Blue^0,c
  4728   0021F0  5007               	movf	??_color_read_Blue^0,w,c
  4729   0021F2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4730   0021F4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4731   0021F6  500A               	movf	color_read_Blue@tmp^0,w,c
  4732   0021F8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4733   0021FA  6E0A               	movwf	color_read_Blue@tmp^0,c
  4734   0021FC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4735   0021FE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4736   002200  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4737                           
  4738                           ;color.c: 67:  I2C_2_Master_Stop();
  4739   002202  EC33  F012         	call	_I2C_2_Master_Stop	;wreg free
  4740   002206                     
  4741                           ;color.c: 68:  return tmp;
  4742   002206  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4743   00220A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4744   00220E  0012               	return		;funcret
  4745   002210                     __end_of_color_read_Blue:
  4746                           	callstack 0
  4747                           
  4748 ;; *************** function _I2C_2_Master_Write *****************
  4749 ;; Defined at:
  4750 ;;		line 45 in file "i2c.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  data_byte       1    wreg     unsigned char 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  data_byte       1    1[COMRAM] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      void 
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0, cstack
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4768 ;;Total ram usage:        1 bytes
  4769 ;; Hardware stack levels used: 1
  4770 ;; Hardware stack levels required when called: 1
  4771 ;; This function calls:
  4772 ;;		_I2C_2_Master_Idle
  4773 ;; This function is called by:
  4774 ;;		_color_writetoaddr
  4775 ;;		_color_read_Red
  4776 ;;		_color_read_Green
  4777 ;;		_color_read_Blue
  4778 ;;		_color_read_Clear
  4779 ;;		_read_interrupt_status
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text28
  4784   00245A                     __ptext28:
  4785                           	callstack 0
  4786   00245A                     _I2C_2_Master_Write:
  4787                           	callstack 27
  4788                           
  4789                           ;incstack = 0
  4790                           ;I2C_2_Master_Write@data_byte stored from wreg
  4791   00245A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4792   00245C                     
  4793                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4794   00245C  ECC9  F011         	call	_I2C_2_Master_Idle	;wreg free
  4795   002460                     
  4796                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4797   002460  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4798   002464  0012               	return		;funcret
  4799   002466                     __end_of_I2C_2_Master_Write:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function _I2C_2_Master_Stop *****************
  4803 ;; Defined at:
  4804 ;;		line 39 in file "i2c.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 1
  4825 ;; This function calls:
  4826 ;;		_I2C_2_Master_Idle
  4827 ;; This function is called by:
  4828 ;;		_color_writetoaddr
  4829 ;;		_color_read_Red
  4830 ;;		_color_read_Green
  4831 ;;		_color_read_Blue
  4832 ;;		_color_read_Clear
  4833 ;;		_read_interrupt_status
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text29
  4838   002466                     __ptext29:
  4839                           	callstack 0
  4840   002466                     _I2C_2_Master_Stop:
  4841                           	callstack 27
  4842   002466                     
  4843                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4844   002466  ECC9  F011         	call	_I2C_2_Master_Idle	;wreg free
  4845   00246A                     
  4846                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4847   00246A  010E               	movlb	14	; () banked
  4848   00246C  85DA               	bsf	218,2,b	;volatile
  4849   00246E                     
  4850                           ; BSR set to: 14
  4851   00246E  0012               	return		;funcret
  4852   002470                     __end_of_I2C_2_Master_Stop:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _I2C_2_Master_Start *****************
  4856 ;; Defined at:
  4857 ;;		line 27 in file "i2c.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;Total ram usage:        0 bytes
  4876 ;; Hardware stack levels used: 1
  4877 ;; Hardware stack levels required when called: 1
  4878 ;; This function calls:
  4879 ;;		_I2C_2_Master_Idle
  4880 ;; This function is called by:
  4881 ;;		_color_writetoaddr
  4882 ;;		_color_read_Red
  4883 ;;		_color_read_Green
  4884 ;;		_color_read_Blue
  4885 ;;		_color_read_Clear
  4886 ;;		_read_interrupt_status
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text30
  4891   002470                     __ptext30:
  4892                           	callstack 0
  4893   002470                     _I2C_2_Master_Start:
  4894                           	callstack 27
  4895   002470                     
  4896                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4897   002470  ECC9  F011         	call	_I2C_2_Master_Idle	;wreg free
  4898   002474                     
  4899                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4900   002474  010E               	movlb	14	; () banked
  4901   002476  81DA               	bsf	218,0,b	;volatile
  4902   002478                     
  4903                           ; BSR set to: 14
  4904   002478  0012               	return		;funcret
  4905   00247A                     __end_of_I2C_2_Master_Start:
  4906                           	callstack 0
  4907                           
  4908 ;; *************** function _I2C_2_Master_RepStart *****************
  4909 ;; Defined at:
  4910 ;;		line 33 in file "i2c.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;		None
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;Total ram usage:        0 bytes
  4929 ;; Hardware stack levels used: 1
  4930 ;; Hardware stack levels required when called: 1
  4931 ;; This function calls:
  4932 ;;		_I2C_2_Master_Idle
  4933 ;; This function is called by:
  4934 ;;		_color_read_Red
  4935 ;;		_color_read_Green
  4936 ;;		_color_read_Blue
  4937 ;;		_color_read_Clear
  4938 ;;		_read_interrupt_status
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text31
  4943   00247A                     __ptext31:
  4944                           	callstack 0
  4945   00247A                     _I2C_2_Master_RepStart:
  4946                           	callstack 27
  4947   00247A                     
  4948                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4949   00247A  ECC9  F011         	call	_I2C_2_Master_Idle	;wreg free
  4950   00247E                     
  4951                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4952   00247E  010E               	movlb	14	; () banked
  4953   002480  83DA               	bsf	218,1,b	;volatile
  4954   002482                     
  4955                           ; BSR set to: 14
  4956   002482  0012               	return		;funcret
  4957   002484                     __end_of_I2C_2_Master_RepStart:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _I2C_2_Master_Read *****************
  4961 ;; Defined at:
  4962 ;;		line 51 in file "i2c.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  ack             1    wreg     unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  ack             1    2[COMRAM] unsigned char 
  4967 ;;  tmp             1    3[COMRAM] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      unsigned char 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;Total ram usage:        3 bytes
  4982 ;; Hardware stack levels used: 1
  4983 ;; Hardware stack levels required when called: 1
  4984 ;; This function calls:
  4985 ;;		_I2C_2_Master_Idle
  4986 ;; This function is called by:
  4987 ;;		_color_read_Red
  4988 ;;		_color_read_Green
  4989 ;;		_color_read_Blue
  4990 ;;		_color_read_Clear
  4991 ;;		_read_interrupt_status
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text32
  4996   002254                     __ptext32:
  4997                           	callstack 0
  4998   002254                     _I2C_2_Master_Read:
  4999                           	callstack 27
  5000                           
  5001                           ; BSR set to: 14
  5002                           ;incstack = 0
  5003                           ;I2C_2_Master_Read@ack stored from wreg
  5004   002254  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5005   002256                     
  5006                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5007   002256  ECC9  F011         	call	_I2C_2_Master_Idle	;wreg free
  5008   00225A                     
  5009                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5010   00225A  010E               	movlb	14	; () banked
  5011   00225C  87DA               	bsf	218,3,b	;volatile
  5012                           
  5013                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5014   00225E  ECC9  F011         	call	_I2C_2_Master_Idle	;wreg free
  5015   002262                     
  5016                           ;i2c.c: 57:   tmp = SSP2BUF;
  5017   002262  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5018                           
  5019                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5020   002266  ECC9  F011         	call	_I2C_2_Master_Idle	;wreg free
  5021   00226A                     
  5022                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5023   00226A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  5024   00226C  B4D8               	btfsc	status,2,c
  5025   00226E  EF3B  F011         	goto	u1061
  5026   002272  EF3F  F011         	goto	u1060
  5027   002276                     u1061:
  5028   002276  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5029   002278  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  5030   00227A  EF40  F011         	goto	u1078
  5031   00227E                     u1060:
  5032   00227E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5033   002280                     u1078:
  5034   002280  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  5035   002282  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  5036   002284  010E               	movlb	14	; () banked
  5037   002286  51DA               	movf	218,w,b	;volatile
  5038   002288  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5039   00228A  0BDF               	andlw	-33
  5040   00228C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5041   00228E  6FDA               	movwf	218,b	;volatile
  5042   002290                     
  5043                           ; BSR set to: 14
  5044                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5045   002290  89DA               	bsf	218,4,b	;volatile
  5046   002292                     
  5047                           ; BSR set to: 14
  5048                           ;i2c.c: 61:   return tmp;
  5049   002292  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5050   002294                     
  5051                           ; BSR set to: 14
  5052   002294  0012               	return		;funcret
  5053   002296                     __end_of_I2C_2_Master_Read:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function _I2C_2_Master_Idle *****************
  5057 ;; Defined at:
  5058 ;;		line 22 in file "i2c.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;Total ram usage:        1 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_I2C_2_Master_Start
  5082 ;;		_I2C_2_Master_RepStart
  5083 ;;		_I2C_2_Master_Stop
  5084 ;;		_I2C_2_Master_Write
  5085 ;;		_I2C_2_Master_Read
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text33
  5090   002392                     __ptext33:
  5091                           	callstack 0
  5092   002392                     _I2C_2_Master_Idle:
  5093                           	callstack 27
  5094   002392                     l154:
  5095   002392  010E               	movlb	14	; () banked
  5096   002394  B5D8               	btfsc	216,2,b	;volatile
  5097   002396  EFCF  F011         	goto	u941
  5098   00239A  EFD1  F011         	goto	u940
  5099   00239E                     u941:
  5100   00239E  EFC9  F011         	goto	l154
  5101   0023A2                     u940:
  5102   0023A2                     
  5103                           ; BSR set to: 14
  5104   0023A2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5105   0023A6  0E1F               	movlw	31
  5106   0023A8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  5107   0023AA  A4D8               	btfss	status,2,c
  5108   0023AC  EFDA  F011         	goto	u951
  5109   0023B0  EFDC  F011         	goto	u950
  5110   0023B4                     u951:
  5111   0023B4  EFC9  F011         	goto	l154
  5112   0023B8                     u950:
  5113   0023B8                     
  5114                           ; BSR set to: 14
  5115   0023B8  0012               	return		;funcret
  5116   0023BA                     __end_of_I2C_2_Master_Idle:
  5117                           	callstack 0
  5118                           
  5119 ;; *************** function ___lwdiv *****************
  5120 ;; Defined at:
  5121 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  dividend        2    6[COMRAM] unsigned int 
  5124 ;;  divisor         2    8[COMRAM] unsigned int 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  quotient        2   10[COMRAM] unsigned int 
  5127 ;;  counter         1   12[COMRAM] unsigned char 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  2    6[COMRAM] unsigned int 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, status,0
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5140 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5141 ;;Total ram usage:        7 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_setMotorPWM
  5147 ;;		_collect_avg_readings
  5148 ;;		_normalise_readings
  5149 ;;		_make_master_closeness
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text34
  5154   002008                     __ptext34:
  5155                           	callstack 0
  5156   002008                     ___lwdiv:
  5157                           	callstack 29
  5158   002008  0E00               	movlw	0
  5159   00200A  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  5160   00200C  0E00               	movlw	0
  5161   00200E  6E0B               	movwf	___lwdiv@quotient^0,c
  5162   002010  5009               	movf	___lwdiv@divisor^0,w,c
  5163   002012  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5164   002014  B4D8               	btfsc	status,2,c
  5165   002016  EF0F  F010         	goto	u1121
  5166   00201A  EF11  F010         	goto	u1120
  5167   00201E                     u1121:
  5168   00201E  EF39  F010         	goto	l918
  5169   002022                     u1120:
  5170   002022  0E01               	movlw	1
  5171   002024  6E0D               	movwf	___lwdiv@counter^0,c
  5172   002026  EF19  F010         	goto	l2281
  5173   00202A                     l2279:
  5174   00202A  90D8               	bcf	status,0,c
  5175   00202C  3609               	rlcf	___lwdiv@divisor^0,f,c
  5176   00202E  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5177   002030  2A0D               	incf	___lwdiv@counter^0,f,c
  5178   002032                     l2281:
  5179   002032  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  5180   002034  EF1E  F010         	goto	u1131
  5181   002038  EF20  F010         	goto	u1130
  5182   00203C                     u1131:
  5183   00203C  EF15  F010         	goto	l2279
  5184   002040                     u1130:
  5185   002040                     l2283:
  5186   002040  90D8               	bcf	status,0,c
  5187   002042  360B               	rlcf	___lwdiv@quotient^0,f,c
  5188   002044  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5189   002046  5009               	movf	___lwdiv@divisor^0,w,c
  5190   002048  5C07               	subwf	___lwdiv@dividend^0,w,c
  5191   00204A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5192   00204C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5193   00204E  A0D8               	btfss	status,0,c
  5194   002050  EF2C  F010         	goto	u1141
  5195   002054  EF2E  F010         	goto	u1140
  5196   002058                     u1141:
  5197   002058  EF33  F010         	goto	l2291
  5198   00205C                     u1140:
  5199   00205C  5009               	movf	___lwdiv@divisor^0,w,c
  5200   00205E  5E07               	subwf	___lwdiv@dividend^0,f,c
  5201   002060  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5202   002062  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5203   002064  800B               	bsf	___lwdiv@quotient^0,0,c
  5204   002066                     l2291:
  5205   002066  90D8               	bcf	status,0,c
  5206   002068  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5207   00206A  3209               	rrcf	___lwdiv@divisor^0,f,c
  5208   00206C  2E0D               	decfsz	___lwdiv@counter^0,f,c
  5209   00206E  EF20  F010         	goto	l2283
  5210   002072                     l918:
  5211   002072  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  5212   002076  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5213   00207A  0012               	return		;funcret
  5214   00207C                     __end_of___lwdiv:
  5215                           	callstack 0
  5216                           
  5217 ;; *************** function _LEDSon_init *****************
  5218 ;; Defined at:
  5219 ;;		line 18 in file "LEDsOn.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;		None
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;		None
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  1    wreg      void 
  5226 ;; Registers used:
  5227 ;;		None
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5237 ;;Total ram usage:        0 bytes
  5238 ;; Hardware stack levels used: 1
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_main
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text35
  5247   0023E0                     __ptext35:
  5248                           	callstack 0
  5249   0023E0                     _LEDSon_init:
  5250                           	callstack 30
  5251   0023E0                     
  5252                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  5253   0023E0  9288               	bcf	136,1,c	;volatile
  5254                           
  5255                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  5256   0023E2  9088               	bcf	136,0,c	;volatile
  5257                           
  5258                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  5259   0023E4  9884               	bcf	132,4,c	;volatile
  5260                           
  5261                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  5262   0023E6  9684               	bcf	132,3,c	;volatile
  5263                           
  5264                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  5265   0023E8  9086               	bcf	134,0,c	;volatile
  5266                           
  5267                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  5268   0023EA  9287               	bcf	135,1,c	;volatile
  5269                           
  5270                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  5271   0023EC  9E86               	bcf	134,7,c	;volatile
  5272                           
  5273                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  5274   0023EE  9881               	bcf	129,4,c	;volatile
  5275                           
  5276                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  5277   0023F0  8E7E               	bsf	126,7,c	;volatile
  5278                           
  5279                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  5280   0023F2  827F               	bsf	127,1,c	;volatile
  5281                           
  5282                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  5283   0023F4  8879               	bsf	121,4,c	;volatile
  5284                           
  5285                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  5286   0023F6  987C               	bcf	124,4,c	;volatile
  5287                           
  5288                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  5289   0023F8  9280               	bcf	128,1,c	;volatile
  5290                           
  5291                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  5292   0023FA  907E               	bcf	126,0,c	;volatile
  5293                           
  5294                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  5295   0023FC  9080               	bcf	128,0,c	;volatile
  5296                           
  5297                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  5298   0023FE  967C               	bcf	124,3,c	;volatile
  5299   002400  0012               	return		;funcret
  5300   002402                     __end_of_LEDSon_init:
  5301                           	callstack 0
  5302                           
  5303                           	psect	rparam
  5304   000000                     
  5305                           	psect	idloc
  5306                           
  5307                           ;Config register IDLOC0 @ 0x200000
  5308                           ;	unspecified, using default values
  5309   200000                     	org	2097152
  5310   200000  0FFF               	dw	4095
  5311                           
  5312                           ;Config register IDLOC1 @ 0x200002
  5313                           ;	unspecified, using default values
  5314   200002                     	org	2097154
  5315   200002  0FFF               	dw	4095
  5316                           
  5317                           ;Config register IDLOC2 @ 0x200004
  5318                           ;	unspecified, using default values
  5319   200004                     	org	2097156
  5320   200004  0FFF               	dw	4095
  5321                           
  5322                           ;Config register IDLOC3 @ 0x200006
  5323                           ;	unspecified, using default values
  5324   200006                     	org	2097158
  5325   200006  0FFF               	dw	4095
  5326                           
  5327                           ;Config register IDLOC4 @ 0x200008
  5328                           ;	unspecified, using default values
  5329   200008                     	org	2097160
  5330   200008  0FFF               	dw	4095
  5331                           
  5332                           ;Config register IDLOC5 @ 0x20000A
  5333                           ;	unspecified, using default values
  5334   20000A                     	org	2097162
  5335   20000A  0FFF               	dw	4095
  5336                           
  5337                           ;Config register IDLOC6 @ 0x20000C
  5338                           ;	unspecified, using default values
  5339   20000C                     	org	2097164
  5340   20000C  0FFF               	dw	4095
  5341                           
  5342                           ;Config register IDLOC7 @ 0x20000E
  5343                           ;	unspecified, using default values
  5344   20000E                     	org	2097166
  5345   20000E  0FFF               	dw	4095
  5346                           
  5347                           	psect	config
  5348                           
  5349                           ;Config register CONFIG1L @ 0x300000
  5350                           ;	External Oscillator mode Selection bits
  5351                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5352                           ;	Power-up default value for COSC bits
  5353                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5354   300000                     	org	3145728
  5355   300000  AA                 	db	170
  5356                           
  5357                           ;Config register CONFIG1H @ 0x300001
  5358                           ;	unspecified, using default values
  5359                           ;	Clock Out Enable bit
  5360                           ;	CLKOUTEN = 0x1, unprogrammed default
  5361                           ;	Clock Switch Enable bit
  5362                           ;	CSWEN = 0x1, unprogrammed default
  5363                           ;	Fail-Safe Clock Monitor Enable bit
  5364                           ;	FCMEN = 0x1, unprogrammed default
  5365   300001                     	org	3145729
  5366   300001  FF                 	db	255
  5367                           
  5368                           ;Config register CONFIG2L @ 0x300002
  5369                           ;	unspecified, using default values
  5370                           ;	Master Clear Enable bit
  5371                           ;	MCLRE = 0x1, unprogrammed default
  5372                           ;	Power-up Timer Enable bit
  5373                           ;	PWRTE = 0x1, unprogrammed default
  5374                           ;	Low-power BOR enable bit
  5375                           ;	LPBOREN = 0x1, unprogrammed default
  5376                           ;	Brown-out Reset Enable bits
  5377                           ;	BOREN = 0x3, unprogrammed default
  5378   300002                     	org	3145730
  5379   300002  FF                 	db	255
  5380                           
  5381                           ;Config register CONFIG2H @ 0x300003
  5382                           ;	unspecified, using default values
  5383                           ;	Brown Out Reset Voltage selection bits
  5384                           ;	BORV = 0x3, unprogrammed default
  5385                           ;	ZCD Disable bit
  5386                           ;	ZCD = 0x1, unprogrammed default
  5387                           ;	PPSLOCK bit One-Way Set Enable bit
  5388                           ;	PPS1WAY = 0x1, unprogrammed default
  5389                           ;	Stack Full/Underflow Reset Enable bit
  5390                           ;	STVREN = 0x1, unprogrammed default
  5391                           ;	Debugger Enable bit
  5392                           ;	DEBUG = 0x1, unprogrammed default
  5393                           ;	Extended Instruction Set Enable bit
  5394                           ;	XINST = 0x1, unprogrammed default
  5395   300003                     	org	3145731
  5396   300003  FF                 	db	255
  5397                           
  5398                           ;Config register CONFIG3L @ 0x300004
  5399                           ;	WDT Period Select bits
  5400                           ;	WDTCPS = 0x1F, unprogrammed default
  5401                           ;	WDT operating mode
  5402                           ;	WDTE = OFF, WDT Disabled
  5403   300004                     	org	3145732
  5404   300004  9F                 	db	159
  5405                           
  5406                           ;Config register CONFIG3H @ 0x300005
  5407                           ;	unspecified, using default values
  5408                           ;	WDT Window Select bits
  5409                           ;	WDTCWS = 0x7, unprogrammed default
  5410                           ;	WDT input clock selector
  5411                           ;	WDTCCS = 0x7, unprogrammed default
  5412   300005                     	org	3145733
  5413   300005  FF                 	db	255
  5414                           
  5415                           ;Config register CONFIG4L @ 0x300006
  5416                           ;	unspecified, using default values
  5417                           ;	Write Protection Block 0
  5418                           ;	WRT0 = 0x1, unprogrammed default
  5419                           ;	Write Protection Block 1
  5420                           ;	WRT1 = 0x1, unprogrammed default
  5421                           ;	Write Protection Block 2
  5422                           ;	WRT2 = 0x1, unprogrammed default
  5423                           ;	Write Protection Block 3
  5424                           ;	WRT3 = 0x1, unprogrammed default
  5425                           ;	Write Protection Block 3
  5426                           ;	WRT4 = 0x1, unprogrammed default
  5427                           ;	Write Protection Block 3
  5428                           ;	WRT5 = 0x1, unprogrammed default
  5429                           ;	Write Protection Block 3
  5430                           ;	WRT6 = 0x1, unprogrammed default
  5431                           ;	Write Protection Block 3
  5432                           ;	WRT7 = 0x1, unprogrammed default
  5433   300006                     	org	3145734
  5434   300006  FF                 	db	255
  5435                           
  5436                           ;Config register CONFIG4H @ 0x300007
  5437                           ;	unspecified, using default values
  5438                           ;	Configuration Register Write Protection bit
  5439                           ;	WRTC = 0x1, unprogrammed default
  5440                           ;	Boot Block Write Protection bit
  5441                           ;	WRTB = 0x1, unprogrammed default
  5442                           ;	Data EEPROM Write Protection bit
  5443                           ;	WRTD = 0x1, unprogrammed default
  5444                           ;	Scanner Enable bit
  5445                           ;	SCANE = 0x1, unprogrammed default
  5446                           ;	Low Voltage Programming Enable bit
  5447                           ;	LVP = 0x1, unprogrammed default
  5448   300007                     	org	3145735
  5449   300007  FF                 	db	255
  5450                           
  5451                           ;Config register CONFIG5L @ 0x300008
  5452                           ;	unspecified, using default values
  5453                           ;	UserNVM Program Memory Code Protection bit
  5454                           ;	CP = 0x1, unprogrammed default
  5455                           ;	DataNVM Memory Code Protection bit
  5456                           ;	CPD = 0x1, unprogrammed default
  5457   300008                     	org	3145736
  5458   300008  FF                 	db	255
  5459                           
  5460                           ;Config register CONFIG5H @ 0x300009
  5461                           ;	unspecified, using default values
  5462   300009                     	org	3145737
  5463   300009  FF                 	db	255
  5464                           
  5465                           ;Config register CONFIG6L @ 0x30000A
  5466                           ;	unspecified, using default values
  5467                           ;	Table Read Protection Block 0
  5468                           ;	EBTR0 = 0x1, unprogrammed default
  5469                           ;	Table Read Protection Block 1
  5470                           ;	EBTR1 = 0x1, unprogrammed default
  5471                           ;	Table Read Protection Block 2
  5472                           ;	EBTR2 = 0x1, unprogrammed default
  5473                           ;	Table Read Protection Block 3
  5474                           ;	EBTR3 = 0x1, unprogrammed default
  5475                           ;	Table Read Protection Block 4
  5476                           ;	EBTR4 = 0x1, unprogrammed default
  5477                           ;	Table Read Protection Block 5
  5478                           ;	EBTR5 = 0x1, unprogrammed default
  5479                           ;	Table Read Protection Block 6
  5480                           ;	EBTR6 = 0x1, unprogrammed default
  5481                           ;	Table Read Protection Block 7
  5482                           ;	EBTR7 = 0x1, unprogrammed default
  5483   30000A                     	org	3145738
  5484   30000A  FF                 	db	255
  5485                           
  5486                           ;Config register CONFIG6H @ 0x30000B
  5487                           ;	unspecified, using default values
  5488                           ;	Boot Block Table Read Protection bit
  5489                           ;	EBTRB = 0x1, unprogrammed default
  5490   30000B                     	org	3145739
  5491   30000B  FF                 	db	255
  5492                           tosu	equ	0xFFF
  5493                           tosh	equ	0xFFE
  5494                           tosl	equ	0xFFD
  5495                           stkptr	equ	0xFFC
  5496                           pclatu	equ	0xFFB
  5497                           pclath	equ	0xFFA
  5498                           pcl	equ	0xFF9
  5499                           tblptru	equ	0xFF8
  5500                           tblptrh	equ	0xFF7
  5501                           tblptrl	equ	0xFF6
  5502                           tablat	equ	0xFF5
  5503                           prodh	equ	0xFF4
  5504                           prodl	equ	0xFF3
  5505                           indf0	equ	0xFEF
  5506                           postinc0	equ	0xFEE
  5507                           postdec0	equ	0xFED
  5508                           preinc0	equ	0xFEC
  5509                           plusw0	equ	0xFEB
  5510                           fsr0h	equ	0xFEA
  5511                           fsr0l	equ	0xFE9
  5512                           wreg	equ	0xFE8
  5513                           indf1	equ	0xFE7
  5514                           postinc1	equ	0xFE6
  5515                           postdec1	equ	0xFE5
  5516                           preinc1	equ	0xFE4
  5517                           plusw1	equ	0xFE3
  5518                           fsr1h	equ	0xFE2
  5519                           fsr1l	equ	0xFE1
  5520                           bsr	equ	0xFE0
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           postdec2	equ	0xFDD
  5524                           preinc2	equ	0xFDC
  5525                           plusw2	equ	0xFDB
  5526                           fsr2h	equ	0xFDA
  5527                           fsr2l	equ	0xFD9
  5528                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    154     160
    BANK1           256    168     222
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    make_master_closeness@buf	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    normalise_readings@buf	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2251$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[10]), STR_1(CODE[26]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2202$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2202$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 150
		 -> main@buf(BANK1[150]), 

    determine_card@master_closeness	PTR unsigned int  size(2) Largest target is 18
		 -> main@master_closeness(BANK0[18]), 

    make_master_closeness@normalised_values	PTR unsigned int [9] size(2) Largest target is 54
		 -> main@normalised_values(BANK0[54]), 

    make_master_closeness@master_closeness	PTR unsigned int  size(2) Largest target is 18
		 -> main@master_closeness(BANK0[18]), 

    normalise_readings@normalised_values	PTR unsigned int [9] size(2) Largest target is 54
		 -> main@normalised_values(BANK0[54]), 

    normalise_readings@expected_values	PTR unsigned int [9] size(2) Largest target is 54
		 -> main@expected_values(BANK0[54]), 

    collect_avg_readings@blue_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@blue_read(BANK0[2]), 

    collect_avg_readings@green_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@green_read(BANK0[2]), 

    collect_avg_readings@red_read	PTR unsigned int  size(2) Largest target is 2
		 -> main@red_read(COMRAM[2]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    S532DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhlllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    S532DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhlllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _setMotorPWM->___lwdiv
    _sendStringSerial4->_sendCharSerial4
    _normalise_readings->_abs
    _abs->___aomod
    _make_master_closeness->___lwdiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _collect_avg_readings->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               305   305      0   19064
                                             88 COMRAM     6     6      0
                                             23 BANK0    131   131      0
                                              0 BANK1    168   168      0
                  _I2C_2_Master_Init
                        _LEDSon_init
               _collect_avg_readings
                   _color_click_init
                     _determine_card
                    _initDCmotorsPWM
                         _initUSART4
              _make_master_closeness
                 _normalise_readings
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    5950
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5447
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    5097
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3877
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3285
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _normalise_readings                                  23    11     12    3420
                                             22 COMRAM    23    11     12
                            ___lwdiv
                             ___wmul
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     370
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _make_master_closeness                               27    21      6    1656
                                             13 COMRAM    27    21      6
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _determine_card                                      10     8      2     302
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     598
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     598
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _collect_avg_readings                                16    10      6    2449
                                             13 COMRAM    16    10      6
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1206
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LEDSon_init
   _collect_avg_readings
     ___lwdiv
       ___wmul (ARG)
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_card
   _initDCmotorsPWM
   _initUSART4
   _make_master_closeness
     ___lwdiv
   _normalise_readings
     ___lwdiv
     ___wmul
     _abs
       ___aomod (ARG)
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A8      DE       7       86.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9A      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllhhhl     37      0       0      43        0.0%
BITBIGSFRllllhl     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllhhhl     20      0       0      46        0.0%
BITBIGSFRllhhhl     1E      0       0      48        0.0%
BITBIGSFRhhlllh     17      0       0      36        0.0%
BITBIGSFRllhhl      11      0       0      49        0.0%
BITBIGSFRllllhl      F      0       0      56        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllhhhl      C      0       0      47        0.0%
BITBIGSFRllllhl      9      0       0      55        0.0%
BITBIGSFRllhhhl      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      57        0.0%
BITBIGSFRllllhh      6      0       0      53        0.0%
BITBIGSFRlllhl       5      0       0      52        0.0%
BITBIGSFRhhllll      5      0       0      37        0.0%
BITBIGSFRlllhh       3      0       0      51        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhhhh      1      0       0      38        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllhhhl      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllhl        1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     219      59        0.0%
DATA                 0      0     219       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 15:34:57 2022

                        _color_read_Red 2120                         _color_read_Blue 21C0  
                                    l22 2440                                      l31 220E  
                                    l25 216E                                      l19 2308  
                                    l28 21BE                                      l95 1A0A  
                                    l88 1F0C                     ___wmul@multiplicand 0003  
                      _color_read_Green 2170                                     l310 1716  
                                   l151 2390                                     l160 2478  
                                   l320 1DBA                                     l241 11FE  
                                   l154 2392                                     l242 11FA  
                                   l163 2482                                     l315 1530  
                                   l243 120C                                     l172 2294  
                                   l157 23B8                                     l237 1146  
                                   l166 246E                                     l326 1F8C  
                                   l238 1144                                     l239 1154  
                                   l169 2464                                     l427 23DE  
                                   l269 2400                                     l541 189E  
                                   l374 2420                                     l383 2444  
                                   l392 2338                                     l386 2458  
                                   l554 1B6E                                     l925 207A  
                                   l918 2072                                     u800 175C  
                                   u801 1758                                     u730 1DCE  
                                   u811 1786                                     u731 1DCA  
                                   u820 17AA                                     u900 1AE6  
                                   u740 1DE0                                     u821 17A6  
                                   u901 1AE2                                     u741 1DDC  
                                   u830 17D4                                     u910 1B2E  
                                   u750 1E08                                     u831 17D0  
                                   u911 1B2A                                     u751 1E04  
                                   u840 1814                                     u760 1E3E  
                                   u920 1F9C                                     u841 1810  
                                   u761 1E3A                                     u921 1F98  
                                   u850 185E                                     u770 2252  
                                   u930 1FF2                                     u851 185A  
                                   u771 224E                                     u931 1FEE  
                                   u940 23A2                                     u780 22B0  
                                   u860 1A1E                                     u941 239E  
                                   u781 22AC                                     u861 1A1A  
                                   u950 23B8                                     u790 172A  
                                   u870 1A50                                     u951 23B4  
                                   u791 1726                                     u871 1A4C  
                                   u880 1A8E                                     u960 0E56  
                                   u881 1A8A                                     u961 0E50  
                                   u890 1AB8                                     u970 0E58  
                                   u891 1AB4                                     u980 0E6A  
                                   u981 0E66                                     u990 0EA6  
                                   u991 0EA2     normalise_readings@normalised_values 0021  
                                   _abs 2296                                     _pad 1F8E  
                                   prod 000FF3                                     wreg 000FE8  
                                  l1102 22CC                                    l1112 20CC  
                                  l1105 22D4                                    l2001 1DEA  
                                  l2003 1E08                                    l2011 221C  
                                  ?_abs 0013                                    l2021 1718  
                                  l2005 1E3E                                    l2013 222E  
                                  l2101 1F8E                                    l1134 1FB0  
                                  l2031 175C                                    l2023 171C  
                                  l2015 2232                                    l2111 1FD4  
                                  l2103 1F9C                                    l1143 0EB2  
                                  l2017 2296                                    l2041 17B2  
                                  l2033 177C                                    l2025 172A  
                                  l2009 2210                                    l2113 1FF2  
                                  l2105 1FA8                                    l1145 0EBA  
                                  l2121 0E46                                    l2201 1B70  
                                  l1138 2006                                    l1146 0F00  
                                  l1170 211E                                    l2115 2392  
                                  l2019 22B0                                    l2051 1834  
                                  l2043 17C6                                    l2035 1780  
                                  l2027 174A                                    l2107 1FBC  
                                  l2131 0EC2                                    l2123 0E5A  
                                  l2211 1BCA                                    l2203 1B98  
                                  l1164 1CCE                                    l2117 23A2  
                                  l2061 187E                                    l2053 1836  
                                  l2045 17D4                                    l2037 178C  
                                  l2029 174E                                    l2109 1FD0  
                                  l1157 10A2                                    l2141 0EFC  
                                  l2133 0ED2                                    l2125 0E6A  
                                  l2221 1C90                                    l2213 1BEA  
                                  l2205 1BA6                                    l2301 2116  
                                  l1182 1E84                                    l1190 2252  
                                  l2231 2368                                    l2311 22F4  
                                  l2055 1848                                    l2047 17E6  
                                  l2039 17AA                                    l2071 1A3E  
                                  l2151 0FA0                                    l2143 0F08  
                                  l2135 0ED8                                    l2127 0E8A  
                                  l2119 0E26                                    l2215 1C0A  
                                  l2207 1BB4                                    l2241 237E  
                                  l2233 2372                                    l2313 22FE  
                                  l2305 22D6                                    l2321 1EDC  
                                  l2049 1814                                    l2057 184E  
                                  l2081 1A96                                    l2073 1A42  
                                  l2065 1A0C                                    l1193 2484  
                                  l2161 105C                                    l2153 0FA6  
                                  l2145 0F12                                    l2137 0EE8  
                                  l2129 0EA6                                    l2217 1C60  
                                  l2209 1BBA                                    l2225 1CA2  
                                  l2171 2470                                    l2251 2170  
                                  l2235 2378                                    l2243 2424  
                                  l2307 22DA                                    l2331 1EFE  
                                  l2323 1EE6                                    l2315 1E86  
                                  l2059 185E                                    l2091 1B18  
                                  l2083 1AAA                                    l2075 1A50  
                                  l2067 1A10                                    l2163 106C  
                                  l2147 0F18                                    l2155 100A  
                                  l2139 0EF4                                    l2173 2474  
                                  l2181 246A                                    l2253 21B6  
                                  l2245 2120                                    l2237 237A  
                                  l2309 22E4                                    l2333 1F00  
                                  l2325 1EE8                                    l2317 1E8E  
                                  l2421 240C                                    l2341 1910  
                                  l2085 1AB8                                    l2093 1B1E  
                                  l2077 1A70                                    l2069 1A1E  
                                  l2165 1072                                    l2157 1024  
                                  l2149 0F9A                                    l2501 20BA  
                                  l2191 2262                                    l2183 247A  
                                  l2175 245C                                    l2247 2166  
                                  l2239 237C                                    l2335 1F0A  
                                  l2327 1EF2                                    l2319 1EB8  
                                  l2431 241E                                    l2423 240E  
                                  l2263 2444                                    l2511 2320  
                                  l2351 19CA                                    l2343 1924  
                                  l2095 1B2E                                    l2087 1AE6  
                                  l2079 1A8E                                    l2167 1082  
                                  l2159 1042                                    l2417 23E0  
                                  l2281 2032                                    l2273 2008  
                                  l2193 226A                                    l2185 247E  
                                  l2177 2460                                    l2257 21C0  
                                  l2441 1576                                    l2433 1532  
                                  l2329 1EF4                                    l2425 2410  
                                  l2521 1506                                    l2513 12F2  
                                  l2265 2454                                    l2505 230A  
                                  l2345 1928                                    l2337 18A0  
                                  l2097 1B4E                                    l2089 1B06  
                                  l2291 2066                                    l2283 2040  
                                  l2275 2010                                    l2195 2290  
                                  l2187 2256                                    l2179 2466  
                                  l2259 2206                                    l2451 159E  
                                  l2443 157A                                    l2427 241A  
                                  l2419 2402                                    l2267 23BA  
                                  l2523 151E                                    l2507 230E  
                                  l2347 196A                                    l2339 18BC  
                                  l2611 10B4                                    l2603 10A4  
                                  l2293 206C                                    l2285 2046  
                                  l2277 2022                                    l2197 2292  
                                  l2189 225A                                    l2461 1616  
                                  l2453 15B2                                    l2445 1596  
                                  l2541 1F0E                                    l2429 241C  
                                  l2533 1CD4                                    l2269 23D6  
                                  l2525 1520                                    l2509 231C  
                                  l2349 1986                                    l2621 10C8  
                                  l2613 10B8                                    l2605 10A8  
                                  l2287 205C                                    l2279 202A  
                                  l2471 164A                                    l2455 15CA  
                                  l2439 153A                                    l2551 1F26  
                                  l2543 1F12                                    l2535 1D90  
                                  l2527 1CD0                                    l2519 12F6  
                                  l2295 20CE                                    l2631 10E6  
                                  l2623 10CC                                    l2615 10BA  
                                  l2607 10AC                                    l2289 2064  
                                  l2473 164E                                    l2457 15CE  
                                  l2561 1F8A                                    l2553 1F54  
                                  l2545 1F22                                    l2537 1DA8  
                                  l2297 20DA                                    l2641 1102  
                                  l2633 10EA                                    l2625 10D0  
                                  l2617 10BE                                    l2609 10B0  
                                  l2491 16EA                                    l2483 169E  
                                  l2475 166A                                    l2467 161E  
                                  l2459 15EA                                    l2555 1F74  
                                  l2539 1DAA                                    l2299 20F6  
                                  l2651 1128                                    l2643 1108  
                                  l2635 10EE                                    l2627 10D8  
                                  l2619 10C2                                    l2485 16B2  
                                  l2477 1696                                    l2469 1632  
                                  l2557 1F78                                    l2493 207C  
                                  l2653 1132                                    l2645 1114  
                                  l2637 10F2                                    l2629 10E0  
                                  l2487 16CA                                    l2559 1F7A  
                                  l2495 208E                                    l2671 11C4  
                                  l2663 1156                                    l2655 113A  
                                  l2647 1120                                    l2639 10FA  
                                  l2489 16CE                                    l2497 2096  
                                  l2681 1258                                    l2673 11E4  
                                  l2665 116E                                    l2657 113C  
                                  l2649 1120                                    l2499 209E  
                                  l2691 12DE                                    l2683 1264  
                                  l2675 11E6                                    l2667 118A  
                                  l2685 1298                                    l2677 120E  
                                  l2669 11A4                                    ?_pad 0011  
                                  l2687 12B4                                    l2679 122A  
                                  l2689 12C2                                    l1995 1DBC  
                                  l1997 1DCE                                    l1999 1DE0  
                                  STR_1 0E01                                    STR_2 0E1B  
                                  u1000 0ED2                                    u1001 0ECE  
                                  u1010 0EE8                                    u1011 0EE4  
                                  u1020 1024                                    u1100 1C0A  
                                  u1021 1020                                    u1101 1C06  
                                  u1110 2454                                    u1030 1042  
                                  u1111 2450                                    u1031 103E  
                                  u1120 2022                                    u1040 105C  
                                  u1121 201E                                    u1041 1058  
                                  u1130 2040                                    u1050 106C  
                                  u1131 203C                                    u1051 1068  
                                  u1140 205C                                    u1060 227E  
                                  u1300 1F54                            ?_LEDSon_init 0001  
                                  u1141 2058                                    u1061 2276  
                                  u1301 1F50                                    u1230 1596  
                                  u1310 1F8A                                    u1150 2116  
                                  u1231 1592                                    u1311 1F86  
                                  u1151 2112                                    u1240 15EA  
                                  u1160 18BC                                    u1080 1B98  
                                  u1241 15E6                                    u1161 18B8  
                                  u1081 1B94                                    u1250 166A  
                                  u1170 1986                                    u1090 1BEA  
                                  u1251 1666                                    u1171 1982  
                                  u1091 1BE6                                    u1260 16EA  
                                  u1261 16E6                                    u1078 2280  
                                  u1270 2338                                    u1271 2334  
                                  u1280 1530                                    u1360 1154  
                          _BAUD4CONbits 000EE9                                    u1281 152C  
                                  u1361 1150                                    u1290 1DBA  
                                  u1370 11F6                                    u1507 16BC  
                                  u1291 1DB6                                    u1371 11F2  
                                  u1380 120C                                    u1381 1208  
                                  u1447 1160                                    u1457 1510  
                                  _T2PR 000FBC                                    u1467 1D9A  
                                  u1477 22EA                                    u1487 15BC  
                                  u1497 163C              normalise_readings@red_read 0019  
                                  abs@a 0013                                    _dbuf 01BE  
                                  _main 10A4                                    _dtoa 0E26  
                                  _prec 00FA                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                __end_of_color_read_Red 2170             normalise_readings@blue_read 001D  
                          ___param_bank 000000                                   ??_abs 0015  
                                 ??_pad 0017                         __end_of___aodiv 18A0  
                                 ?_main 0001                                   ?_dtoa 001C  
                       __end_of___aomod 1B70                         __end_of___lwdiv 207C  
                          vfpfcnvrt@fmt 0041                            main@red_read 005D  
               __end_of_sendCharSerial4 245A              __end_of_I2C_2_Master_Start 247A  
            __end_of_I2C_2_Master_Write 2466                                   _flags 00FC  
                                 _fputc 1DBC                                   _fputs 2210  
                                 pad@fp 0011          determine_card@master_closeness 0001  
               ??_make_master_closeness 0014                                   _width 01BC  
                                 _putch 2484                                   main@i 00F5  
                                 dtoa@d 001E                                   dtoa@i 003C  
                                 dtoa@n 0034                                   dtoa@p 0030  
                                 dtoa@s 003E                                   dtoa@w 0032  
                   normalise_readings@i 002D                                   tablat 000FF5  
                                 status 000FD8                         __end_of_sprintf 20CE  
               __end_of_color_read_Blue 2210                   _I2C_2_Master_RepStart 247A  
                       ?_color_read_Red 0005                         __initialization 233A  
                          __end_of_main 12F2                            __end_of_dtoa 10A4  
                                ??_main 0059                                  ??_dtoa 0026  
                         __activetblptr 000003                           main@blue_read 00F8  
                          ?_setMotorPWM 000E                                  ?_fputc 0001  
                                ?_fputs 000A                                  _CCPR1H 000FAA  
                                _CCPR2H 000FA6                                  _CCPR3H 000F25  
                                _CCPR4H 000F21            collect_avg_readings@red_read 000E  
                                ?_putch 0001                                  _RC0PPS 000E62  
                                _RC4REG 000EE3                                  _RE2PPS 000E74  
                                _RD5PPS 000E6F                                  _RC7PPS 000E69  
                                _RD6PPS 000E70                                  _RE4PPS 000E76  
                                _RG6PPS 000E88                __end_of_color_click_init 230A  
                make_master_closeness@i 0028                                  _RX4PPS 000E15  
                                _TX4REG 000EE4                            _CCPTMRS0bits 000FAD  
                          vfprintf@cfmt 0057                               ??___aodiv 0011  
                             ??___aomod 0011                                  ___wmul 23BA  
                    _normalise_readings 12F2                               ??___lwdiv 000B  
                                clear_0 2340                                  clear_1 234C  
                                isa$std 000001                                  pad@buf 0013  
                                dtoa@fp 001C                     ?_normalise_readings 0017  
                                fputc@c 0001                                  fputs@c 000E  
                                fputs@i 000F                                  fputs@s 000A  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                      ?_sendCharSerial4 0001                                  putch@c 0001  
                      __end_of_vfprintf 2120                       ??_initDCmotorsPWM 0001  
                             ??_sprintf 0059                              __accesstop 0060  
               __end_of__initialization 2362                __end_of_color_read_Green 21C0  
                ?_I2C_2_Master_RepStart 0001                    ??_normalise_readings 0023  
                         ___rparam_used 000001                        ?_color_read_Blue 0005  
          __end_of_collect_avg_readings 1718                          __pcstackCOMRAM 0001  
            collect_avg_readings@i_1553 0018              collect_avg_readings@i_1554 001A  
            collect_avg_readings@i_1555 001C                           __end_of_fputc 1E86  
                         __end_of_fputs 2254                           __end_of_putch 2486  
                 main@normalised_values 0077                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00FA                              __pbssBANK1 01A8  
                            __pbssBANK2 0200                       _color_writetoaddr 2422  
                          _T2CLKCONbits 000FBF                      ?_color_writetoaddr 0003  
                               ?___wmul 0001                     ??_color_writetoaddr 0004  
                        main@green_read 00F6                                 _SP4BRGH 000EE6  
                               _SP4BRGL 000EE5                                 _SSP2ADD 000ED6  
                               _SSP2BUF 000ED5                  color_writetoaddr@value 0003  
                      ??_color_read_Red 0007           __end_of_make_master_closeness 1DBC  
        determine_card@predicted_colour 0009               __end_of_color_writetoaddr 2442  
                    _I2C_2_Master_Start 2470                              _initUSART4 2402  
                    _I2C_2_Master_Write 245A                                 __Hparam 0000  
                               __Lparam 0000                       color_read_Red@tmp 000A  
make_master_closeness@normalised_values 0010                 sendStringSerial4@string 0002  
                               ___aodiv 1718                                 ___aomod 1A0C  
                   ?_I2C_2_Master_Start 0001                                 ___lwdiv 2008  
                   ?_I2C_2_Master_Write 0001                               ?_vfprintf 0051  
                          __psmallconst 0E00                                 __pcinit 233A  
                               __ramtop 0E00                                 __ptext0 10A4  
                               __ptext1 207C                                 __ptext2 20CE  
                               __ptext3 1B70                                 __ptext4 0E26  
                               __ptext5 1F8E                                 __ptext6 2210  
                               __ptext7 1DBC                                 __ptext8 2484  
                               __ptext9 1A0C                               _T2CONbits 000FBD  
                             _T2HLTbits 000FBE                           _RxBufWriteCnt 00FF  
                  _collect_avg_readings 1532                                 main@buf 0100  
                               _sprintf 207C                    ??_I2C_2_Master_Start 0002  
                  ??_I2C_2_Master_Write 0002                    end_of_initialization 2362  
        collect_avg_readings@green_read 0010                   normalise_readings@buf 0017  
                               fputc@fp 0003                                 fputs@fp 000C  
                     ?_color_click_init 0001                      ??_color_click_init 0005  
                     __end_of_vfpfcnvrt 1CD0                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                        vfpfcnvrt@convarg 0047  
                            ??_vfprintf 0057                         _initDCmotorsPWM 1E86  
                             _PORTFbits 000F8E                      setMotorPWM@negDuty 0013  
     normalise_readings@expected_values 001F                               _TRISAbits 000F81  
                    setMotorPWM@posDuty 0012                               _TRISCbits 000F83  
                             _TRISDbits 000F84                               _TRISEbits 000F85  
                             _TRISFbits 000F86                               _TRISGbits 000F87  
                             _TRISHbits 000F88                   ?_collect_avg_readings 000E  
                   main@expected_values 00AD                color_writetoaddr@address 0004  
               ??_I2C_2_Master_RepStart 0002                             _CCP1CONbits 000FAB  
                          _EUSART4RXbuf 01A8                            _EUSART4TXbuf 0200  
                           _CCP2CONbits 000FA7                       ?_color_read_Green 0005  
                           _CCP3CONbits 000F26                             ?_initUSART4 0001  
                           _CCP4CONbits 000F22               sendCharSerial4@charToSend 0001  
                            main@motorL 0196                              main@motorR 019F  
                    ??_color_read_Green 0007                    main@master_closeness 00E3  
                           vfpfcnvrt@ap 0043                             vfpfcnvrt@cp 004F  
                           vfpfcnvrt@fp 003F                          __end_of___wmul 23E0  
                       determine_card@i 000A                     start_initialization 233A  
                           __end_of_abs 22D6                             __end_of_pad 2008  
                         _TxBufWriteCnt 005F                           ??_LEDSon_init 0001  
                   color_read_Green@tmp 000A                 __end_of_initDCmotorsPWM 1F0E  
                           vfprintf@fmt 0053                                ??___wmul 0005  
                        _determine_card 1F0E                             __pbssCOMRAM 005F  
                ??_collect_avg_readings 0014                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                        ___aodiv@dividend 0001  
                   __end_of_LEDSon_init 2402                        ___lwdiv@dividend 0007  
                             _dtoa$2279 002E                                ?___aodiv 0001  
                              ?___aomod 0001                        ___aodiv@quotient 0013  
                __end_of_determine_card 1F8E                                ?___lwdiv 0007  
                  I2C_2_Master_Read@ack 0003                    I2C_2_Master_Read@tmp 0004  
                           __smallconst 0E00                       _I2C_2_Master_Idle 2392  
                     _I2C_2_Master_Init 2368                       _I2C_2_Master_Read 2254  
                     _I2C_2_Master_Stop 2466                            _RxBufReadCnt 00FE  
          normalise_readings@difference 002B                      ?_I2C_2_Master_Idle 0001  
                    ?_I2C_2_Master_Init 0001                      ?_I2C_2_Master_Read 0001  
                         ??_setMotorPWM 0010                      ?_I2C_2_Master_Stop 0001  
                      ___lwdiv@quotient 000B                                ?_sprintf 0060  
                     _sendStringSerial4 230A                     ??_I2C_2_Master_Idle 0001  
                   ??_I2C_2_Master_Init 0001                     ??_I2C_2_Master_Read 0002  
                        ___wmul@product 0005                                _LATAbits 000F79  
                   ??_I2C_2_Master_Stop 0002                                _LATDbits 000F7C  
                              _LATFbits 000F7E                                _LATGbits 000F7F  
                              _LATHbits 000F80                      ?_sendStringSerial4 0002  
                              _PIE4bits 000E2D                   _make_master_closeness 1CD0  
                              _PIR4bits 000E37                        ?_initDCmotorsPWM 0001  
                     ??_sendCharSerial4 0001                make_master_closeness@buf 000E  
                              _SSP2CON2 000EDA                     ??_sendStringSerial4 0004  
                              _SSP2STAT 000ED8                         ?_determine_card 0001  
                             _vfpfcnvrt 1B70               __end_of_I2C_2_Master_Idle 23BA  
             __end_of_I2C_2_Master_Init 2392               __end_of_I2C_2_Master_Read 2296  
                     ___wmul@multiplier 0001               __end_of_I2C_2_Master_Stop 2470  
                          setMotorPWM@m 000E             I2C_2_Master_Write@data_byte 0002  
          normalise_readings@green_read 001B                       ??_color_read_Blue 0007  
                          _TxBufReadCnt 00FD               __end_of_sendStringSerial4 233A  
                           _LEDSon_init 23E0           __end_of_I2C_2_Master_RepStart 2484  
                    color_read_Blue@tmp 000A                     __end_of_setMotorPWM 1A0C  
                          ??_initUSART4 0001                                __Hrparam 0000  
                            vfprintf@ap 0055                                __Lrparam 0000  
                            vfprintf@fp 0051   make_master_closeness@master_closeness 0012  
                            ?_vfpfcnvrt 003F                         ___aodiv@divisor 0009  
                       ___aodiv@counter 0011                              _ANSELDbits 000EA7  
                            _ANSELFbits 000EB4                              sprintf@fmt 0062  
                       ___lwdiv@divisor 0009                      __end_of_initUSART4 2422  
                       ___lwdiv@counter 000D                                __ptext10 1718  
                              __ptext11 18A0                                __ptext20 1F0E  
                              __ptext12 230A                                __ptext21 22D6  
                              __ptext13 2442                                __ptext30 2470  
                              __ptext22 2422                                __ptext14 12F2  
                              __ptext31 247A                                __ptext23 2368  
                              __ptext15 2296                                __ptext32 2254  
                              __ptext24 1532                                __ptext16 23BA  
                              __ptext33 2392                                __ptext25 2120  
                              __ptext17 1CD0                                __ptext34 2008  
                              __ptext26 2170                                __ptext18 2402  
                              __ptext35 23E0                                __ptext27 21C0  
                              __ptext19 1E86                                __ptext28 245A  
                              __ptext29 2466                            _SSP2CON1bits 000ED9  
                          _SSP2CON2bits 000EDA                  ?_make_master_closeness 000E  
                              isa$xinst 000000                              _RC4STAbits 000EE7  
                              _vfprintf 20CE                                main@card 005B  
                      ___aomod@dividend 0001                   collect_avg_readings@i 0016  
                           _setMotorPWM 18A0           collect_avg_readings@blue_read 0012  
                             sprintf@ap 006A              __end_of_normalise_readings 1532  
        determine_card@current_smallest 0007                         ___aomod@divisor 0009  
                           ??_vfpfcnvrt 0045                         ___aomod@counter 0011  
                      _color_click_init 22D6                                sprintf@f 006C  
                              sprintf@s 0060                              _SSP2DATPPS 000E1D  
                            _SSP2CLKPPS 000E1C                              _TX4STAbits 000EE8  
                          ___aodiv@sign 0012                         _sendCharSerial4 2442  
                          ___aomod@sign 0012                        ??_determine_card 0003  
                          main@PWMcycle 005C  
