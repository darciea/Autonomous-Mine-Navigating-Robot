

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 05 11:12:44 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Version 2.35
    64                           ; Generated 05/05/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F67K40 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99                           	psect	idataBANK0
   100   001F54                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for main@F14641
   104   001F54  32C8               	dw	13000
   105   001F56  0A28               	dw	2600
   106   001F58  0708               	dw	1800
   107   001F5A  20D0               	dw	8400
   108   001F5C  1964               	dw	6500
   109   001F5E  1388               	dw	5000
   110   001F60  1130               	dw	4400
   111   001F62  0708               	dw	1800
   112   001F64  0AF0               	dw	2800
   113   000000                     _TRISBbits	set	3970
   114   000000                     _TX4REG	set	3812
   115   000000                     _RC4STAbits	set	3815
   116   000000                     _SP4BRGH	set	3814
   117   000000                     _LATGbits	set	3967
   118   000000                     _TRISAbits	set	3969
   119   000000                     _TRISFbits	set	3974
   120   000000                     _TRISDbits	set	3972
   121   000000                     _TRISGbits	set	3975
   122   000000                     _SSP2CON2bits	set	3802
   123   000000                     _INT1PPS	set	3569
   124   000000                     _RX4PPS	set	3605
   125   000000                     _SSP2CLKPPS	set	3612
   126   000000                     _SSP2DATPPS	set	3613
   127   000000                     _RC7PPS	set	3689
   128   000000                     _RE2PPS	set	3700
   129   000000                     _TRISCbits	set	3971
   130   000000                     _TRISEbits	set	3973
   131   000000                     _TRISHbits	set	3976
   132   000000                     _PORTFbits	set	3982
   133   000000                     _T2PR	set	4028
   134   000000                     _T2CONbits	set	4029
   135   000000                     _CCPR2H	set	4006
   136   000000                     _CCPR1H	set	4010
   137   000000                     _RE4PPS	set	3702
   138   000000                     _RG6PPS	set	3720
   139   000000                     _RD5PPS	set	3695
   140   000000                     _ANSELBbits	set	3738
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _CCPR4H	set	3873
   145   000000                     _CCPR3H	set	3877
   146   000000                     _INTCONbits	set	4082
   147   000000                     _T2CLKCONbits	set	4031
   148   000000                     _T2HLTbits	set	4030
   149   000000                     _CCP1CONbits	set	4011
   150   000000                     _CCPTMRS0bits	set	4013
   151   000000                     _CCP2CONbits	set	4007
   152   000000                     _LATAbits	set	3961
   153   000000                     _LATDbits	set	3964
   154   000000                     _LATHbits	set	3968
   155   000000                     _CCP3CONbits	set	3878
   156   000000                     _CCP4CONbits	set	3874
   157   000000                     _RC4REG	set	3811
   158   000000                     _SP4BRGL	set	3813
   159   000000                     _TX4STAbits	set	3816
   160   000000                     _BAUD4CONbits	set	3817
   161   000000                     _SSP2CON2	set	3802
   162   000000                     _SSP2STAT	set	3800
   163   000000                     _SSP2BUF	set	3797
   164   000000                     _IPR0bits	set	3615
   165   000000                     _PIE0bits	set	3625
   166   000000                     _PIE4bits	set	3629
   167   000000                     _PIR4bits	set	3639
   168   000000                     _RC0PPS	set	3682
   169   000000                     _RD6PPS	set	3696
   170   000000                     _LATFbits	set	3966
   171   000000                     _PIR0bits	set	3635
   172                           
   173                           	psect	smallconst
   174   000E00                     __psmallconst:
   175                           	callstack 0
   176   000E00  00                 	db	0
   177   000E01                     STR_1:
   178                           
   179                           ; BSR set to: 14
   180   000E01  52                 	db	82	;'R'
   181   000E02  61                 	db	97	;'a'
   182   000E03  77                 	db	119	;'w'
   183   000E04  20                 	db	32
   184   000E05  25                 	db	37
   185   000E06  64                 	db	100	;'d'
   186   000E07  2C                 	db	44
   187   000E08  20                 	db	32
   188   000E09  25                 	db	37
   189   000E0A  64                 	db	100	;'d'
   190   000E0B  2C                 	db	44
   191   000E0C  20                 	db	32
   192   000E0D  25                 	db	37
   193   000E0E  64                 	db	100	;'d'
   194   000E0F  2C                 	db	44
   195   000E10  20                 	db	32
   196   000E11  25                 	db	37
   197   000E12  64                 	db	100	;'d'
   198   000E13  20                 	db	32
   199   000E14  0A                 	db	10
   200   000E15  00                 	db	0
   201   000E16  00                 	db	0	; dummy byte at the end
   202   000000                     
   203                           ; #config settings
   204                           
   205                           	psect	cinit
   206   001C6C                     __pcinit:
   207                           	callstack 0
   208   001C6C                     start_initialization:
   209                           	callstack 0
   210   001C6C                     __initialization:
   211                           	callstack 0
   212                           
   213                           ; Initialize objects allocated to BANK0 (18 bytes)
   214                           ; load TBLPTR registers with __pidataBANK0
   215   001C6C  0E54               	movlw	low __pidataBANK0
   216   001C6E  6EF6               	movwf	tblptrl,c
   217   001C70  0E1F               	movlw	high __pidataBANK0
   218   001C72  6EF7               	movwf	tblptrh,c
   219   001C74  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   220   001C76  6EF8               	movwf	tblptru,c
   221   001C78  EE00  F0DB         	lfsr	0,__pdataBANK0
   222   001C7C  EE10 F012          	lfsr	1,18
   223   001C80                     copy_data0:
   224   001C80  0009               	tblrd		*+
   225   001C82  CFF5 FFEE          	movff	tablat,postinc0
   226   001C86  50E5               	movf	postdec1,w,c
   227   001C88  50E1               	movf	fsr1l,w,c
   228   001C8A  E1FA               	bnz	copy_data0
   229                           
   230                           ; Clear objects allocated to BANK1 (92 bytes)
   231   001C8C  EE01  F000         	lfsr	0,__pbssBANK1
   232   001C90  0E5C               	movlw	92
   233   001C92                     clear_0:
   234   001C92  6AEE               	clrf	postinc0,c
   235   001C94  06E8               	decf	wreg,f,c
   236   001C96  E1FD               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to BANK0 (25 bytes)
   239   001C98  EE00  F0C2         	lfsr	0,__pbssBANK0
   240   001C9C  0E19               	movlw	25
   241   001C9E                     clear_1:
   242   001C9E  6AEE               	clrf	postinc0,c
   243   001CA0  06E8               	decf	wreg,f,c
   244   001CA2  E1FD               	bnz	clear_1
   245                           
   246                           ; Clear objects allocated to COMRAM (4 bytes)
   247   001CA4  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   248   001CA6  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   249   001CA8  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   250   001CAA  6A57               	clrf	__pbssCOMRAM& (0+255),c
   251   001CAC                     end_of_initialization:
   252                           	callstack 0
   253   001CAC                     __end_of__initialization:
   254                           	callstack 0
   255   001CAC  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   256   001CAE  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   257   001CB0  0100               	movlb	0
   258   001CB2  EFC5  F009         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMRAM
   261   000057                     __pbssCOMRAM:
   262                           	callstack 0
   263   000057                     _TxBufReadCnt:
   264                           	callstack 0
   265   000057                     	ds	1
   266   000058                     _TxBufWriteCnt:
   267                           	callstack 0
   268   000058                     	ds	1
   269   000059                     _RxBufReadCnt:
   270                           	callstack 0
   271   000059                     	ds	1
   272   00005A                     _RxBufWriteCnt:
   273                           	callstack 0
   274   00005A                     	ds	1
   275                           
   276                           	psect	bssBANK0
   277   0000C2                     __pbssBANK0:
   278                           	callstack 0
   279   0000C2                     _EUSART4RXbuf:
   280                           	callstack 0
   281   0000C2                     	ds	20
   282   0000D6                     _width:
   283                           	callstack 0
   284   0000D6                     	ds	2
   285   0000D8                     _prec:
   286                           	callstack 0
   287   0000D8                     	ds	2
   288   0000DA                     _flags:
   289                           	callstack 0
   290   0000DA                     	ds	1
   291                           
   292                           	psect	dataBANK0
   293   0000DB                     __pdataBANK0:
   294                           	callstack 0
   295   0000DB                     main@F14641:
   296                           	callstack 0
   297   0000DB                     	ds	18
   298                           
   299                           	psect	bssBANK1
   300   000100                     __pbssBANK1:
   301                           	callstack 0
   302   000100                     _EUSART4TXbuf:
   303                           	callstack 0
   304   000100                     	ds	60
   305   00013C                     _dbuf:
   306                           	callstack 0
   307   00013C                     	ds	32
   308                           
   309                           	psect	cstackBANK0
   310   000060                     __pcstackBANK0:
   311                           	callstack 0
   312   000060                     ?_vfprintf:
   313                           	callstack 0
   314   000060                     vfprintf@fp:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x0
   318   000060                     	ds	2
   319   000062                     vfprintf@fmt:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x2
   323   000062                     	ds	2
   324   000064                     vfprintf@ap:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x4
   328   000064                     	ds	2
   329   000066                     ?_sprintf:
   330                           	callstack 0
   331   000066                     sprintf@s:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x6
   335   000066                     	ds	2
   336   000068                     sprintf@fmt:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x8
   340   000068                     	ds	10
   341   000072                     sprintf@ap:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x12
   345   000072                     	ds	2
   346   000074                     sprintf@f:
   347                           	callstack 0
   348                           
   349                           ; 11 bytes @ 0x14
   350   000074                     	ds	11
   351   00007F                     ??_main:
   352                           
   353                           ; 1 bytes @ 0x1F
   354   00007F                     	ds	2
   355   000081                     main@expected_values:
   356                           	callstack 0
   357                           
   358                           ; 18 bytes @ 0x21
   359   000081                     	ds	18
   360   000093                     main@buf:
   361                           	callstack 0
   362                           
   363                           ; 20 bytes @ 0x33
   364   000093                     	ds	20
   365   0000A7                     main@red_read:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x47
   369   0000A7                     	ds	2
   370   0000A9                     main@green_read:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x49
   374   0000A9                     	ds	2
   375   0000AB                     main@blue_read:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x4B
   379   0000AB                     	ds	2
   380   0000AD                     main@clear_read:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x4D
   384   0000AD                     	ds	2
   385   0000AF                     main@PWMcycle:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x4F
   389   0000AF                     	ds	1
   390   0000B0                     main@motorL:
   391                           	callstack 0
   392                           
   393                           ; 9 bytes @ 0x50
   394   0000B0                     	ds	9
   395   0000B9                     main@motorR:
   396                           	callstack 0
   397                           
   398                           ; 9 bytes @ 0x59
   399   0000B9                     	ds	9
   400                           
   401                           	psect	cstackCOMRAM
   402   000001                     __pcstackCOMRAM:
   403                           	callstack 0
   404   000001                     ??i2_I2C_2_Master_Idle:
   405   000001                     
   406                           ; 1 bytes @ 0x0
   407   000001                     	ds	1
   408   000002                     i2I2C_2_Master_Write@data_byte:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x1
   412   000002                     	ds	1
   413   000003                     ??_HighISR:
   414   000003                     
   415                           ; 1 bytes @ 0x2
   416   000003                     	ds	2
   417   000005                     ??_I2C_2_Master_Idle:
   418   000005                     ?___wmul:
   419                           	callstack 0
   420   000005                     ?___aodiv:
   421                           	callstack 0
   422   000005                     ?___aomod:
   423                           	callstack 0
   424   000005                     sendCharSerial4@charToSend:
   425                           	callstack 0
   426   000005                     ___wmul@multiplier:
   427                           	callstack 0
   428   000005                     fputc@c:
   429                           	callstack 0
   430   000005                     ___aodiv@dividend:
   431                           	callstack 0
   432   000005                     ___aomod@dividend:
   433                           	callstack 0
   434                           
   435                           ; 8 bytes @ 0x4
   436   000005                     	ds	1
   437   000006                     ??_I2C_2_Master_Read:
   438   000006                     I2C_2_Master_Write@data_byte:
   439                           	callstack 0
   440   000006                     sendStringSerial4@string:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x5
   444   000006                     	ds	1
   445   000007                     color_writetoaddr@value:
   446                           	callstack 0
   447   000007                     I2C_2_Master_Read@ack:
   448                           	callstack 0
   449   000007                     ___wmul@multiplicand:
   450                           	callstack 0
   451   000007                     fputc@fp:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x6
   455   000007                     	ds	1
   456   000008                     color_writetoaddr@address:
   457                           	callstack 0
   458   000008                     I2C_2_Master_Read@tmp:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x7
   462   000008                     	ds	1
   463   000009                     ??_fputc:
   464   000009                     ??_color_click_init:
   465   000009                     ?_color_read_Red:
   466                           	callstack 0
   467   000009                     ?_color_read_Green:
   468                           	callstack 0
   469   000009                     ?_color_read_Blue:
   470                           	callstack 0
   471   000009                     ?_color_read_Clear:
   472                           	callstack 0
   473   000009                     set_interrupt_threshold@AIHT:
   474                           	callstack 0
   475   000009                     ___wmul@product:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x8
   479   000009                     	ds	1
   480   00000A                     set_interrupt_threshold@persistence:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x9
   484   00000A                     	ds	1
   485   00000B                     ??_color_read_Red:
   486   00000B                     ??_color_read_Green:
   487   00000B                     ??_color_read_Blue:
   488   00000B                     ??_color_read_Clear:
   489   00000B                     ?___lwdiv:
   490                           	callstack 0
   491   00000B                     _set_interrupt_threshold$1949:
   492                           	callstack 0
   493   00000B                     ___lwdiv@dividend:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0xA
   497   00000B                     	ds	1
   498   00000C                     _set_interrupt_threshold$1950:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0xB
   502   00000C                     	ds	1
   503   00000D                     _set_interrupt_threshold$1951:
   504                           	callstack 0
   505   00000D                     ___lwdiv@divisor:
   506                           	callstack 0
   507   00000D                     ___aodiv@divisor:
   508                           	callstack 0
   509   00000D                     ___aomod@divisor:
   510                           	callstack 0
   511                           
   512                           ; 8 bytes @ 0xC
   513   00000D                     	ds	1
   514   00000E                     _set_interrupt_threshold$1952:
   515                           	callstack 0
   516   00000E                     color_read_Red@tmp:
   517                           	callstack 0
   518   00000E                     color_read_Green@tmp:
   519                           	callstack 0
   520   00000E                     color_read_Blue@tmp:
   521                           	callstack 0
   522   00000E                     color_read_Clear@tmp:
   523                           	callstack 0
   524   00000E                     fputs@s:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0xD
   528   00000E                     	ds	1
   529   00000F                     set_interrupt_threshold@AILT:
   530                           	callstack 0
   531   00000F                     ___lwdiv@quotient:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xE
   535   00000F                     	ds	1
   536   000010                     fputs@fp:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xF
   540   000010                     	ds	1
   541   000011                     ___lwdiv@counter:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x10
   545   000011                     	ds	1
   546   000012                     fputs@c:
   547                           	callstack 0
   548   000012                     setMotorPWM@m:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x11
   552   000012                     	ds	1
   553   000013                     fputs@i:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x12
   557   000013                     	ds	1
   558   000014                     ??_setMotorPWM:
   559                           
   560                           ; 1 bytes @ 0x13
   561   000014                     	ds	1
   562   000015                     ___aodiv@counter:
   563                           	callstack 0
   564   000015                     ___aomod@counter:
   565                           	callstack 0
   566   000015                     pad@fp:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x14
   570   000015                     	ds	1
   571   000016                     setMotorPWM@posDuty:
   572                           	callstack 0
   573   000016                     ___aodiv@sign:
   574                           	callstack 0
   575   000016                     ___aomod@sign:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x15
   579   000016                     	ds	1
   580   000017                     ?_abs:
   581                           	callstack 0
   582   000017                     setMotorPWM@negDuty:
   583                           	callstack 0
   584   000017                     abs@a:
   585                           	callstack 0
   586   000017                     pad@buf:
   587                           	callstack 0
   588   000017                     ___aodiv@quotient:
   589                           	callstack 0
   590                           
   591                           ; 8 bytes @ 0x16
   592   000017                     	ds	2
   593   000019                     ??_abs:
   594   000019                     pad@p:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x18
   598   000019                     	ds	2
   599   00001B                     ??_pad:
   600                           
   601                           ; 1 bytes @ 0x1A
   602   00001B                     	ds	1
   603   00001C                     pad@i:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x1B
   607   00001C                     	ds	2
   608   00001E                     pad@w:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x1D
   612   00001E                     	ds	2
   613   000020                     dtoa@fp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x1F
   617   000020                     	ds	2
   618   000022                     dtoa@d:
   619                           	callstack 0
   620                           
   621                           ; 8 bytes @ 0x21
   622   000022                     	ds	8
   623   00002A                     ??_dtoa:
   624                           
   625                           ; 1 bytes @ 0x29
   626   00002A                     	ds	8
   627   000032                     _dtoa$2470:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x31
   631   000032                     	ds	2
   632   000034                     dtoa@p:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x33
   636   000034                     	ds	2
   637   000036                     dtoa@w:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x35
   641   000036                     	ds	2
   642   000038                     dtoa@n:
   643                           	callstack 0
   644                           
   645                           ; 8 bytes @ 0x37
   646   000038                     	ds	8
   647   000040                     dtoa@s:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x3F
   651   000040                     	ds	1
   652   000041                     dtoa@i:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x40
   656   000041                     	ds	2
   657   000043                     vfpfcnvrt@fp:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x42
   661   000043                     	ds	2
   662   000045                     vfpfcnvrt@fmt:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x44
   666   000045                     	ds	2
   667   000047                     vfpfcnvrt@ap:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x46
   671   000047                     	ds	2
   672   000049                     ??_vfpfcnvrt:
   673                           
   674                           ; 1 bytes @ 0x48
   675   000049                     	ds	2
   676   00004B                     vfpfcnvrt@convarg:
   677                           	callstack 0
   678                           
   679                           ; 8 bytes @ 0x4A
   680   00004B                     	ds	8
   681   000053                     vfpfcnvrt@cp:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x52
   685   000053                     	ds	2
   686   000055                     vfprintf@cfmt:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x54
   690   000055                     	ds	2
   691   000057                     
   692                           ; 1 bytes @ 0x56
   693 ;;
   694 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   695 ;;
   696 ;; *************** function _main *****************
   697 ;; Defined at:
   698 ;;		line 21 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  buf            20   51[BANK0 ] unsigned char [20]
   703 ;;  expected_val   18   33[BANK0 ] unsigned int [3][3]
   704 ;;  normalised_v   18    0        unsigned int [3][3]
   705 ;;  motorR          9   89[BANK0 ] struct DC_motor
   706 ;;  motorL          9   80[BANK0 ] struct DC_motor
   707 ;;  master_close    6    0        unsigned int [3]
   708 ;;  clear_read      2   77[BANK0 ] unsigned int 
   709 ;;  blue_read       2   75[BANK0 ] unsigned int 
   710 ;;  green_read      2   73[BANK0 ] unsigned int 
   711 ;;  red_read        2   71[BANK0 ] unsigned int 
   712 ;;  PWMcycle        1   79[BANK0 ] unsigned char 
   713 ;;  card            1    0        enum E14569
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   724 ;;      Locals:         0      65       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   725 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   726 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   727 ;;Total ram usage:       67 bytes
   728 ;; Hardware stack levels required when called: 12
   729 ;; This function calls:
   730 ;;		_I2C_2_Master_Init
   731 ;;		_Interrupts_init
   732 ;;		_LEDSon_init
   733 ;;		_color_click_init
   734 ;;		_color_read_Blue
   735 ;;		_color_read_Clear
   736 ;;		_color_read_Green
   737 ;;		_color_read_Red
   738 ;;		_initDCmotorsPWM
   739 ;;		_initUSART4
   740 ;;		_sendStringSerial4
   741 ;;		_setMotorPWM
   742 ;;		_sprintf
   743 ;; This function is called by:
   744 ;;		Startup code after reset
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text0
   749   00138A                     __ptext0:
   750                           	callstack 0
   751   00138A                     _main:
   752                           	callstack 19
   753   00138A                     
   754                           ;main.c: 26:     LEDSon_init();
   755   00138A  EC57  F00F         	call	_LEDSon_init	;wreg free
   756   00138E                     
   757                           ;main.c: 27:     I2C_2_Master_Init();
   758   00138E  EC07  F00F         	call	_I2C_2_Master_Init	;wreg free
   759   001392                     
   760                           ;main.c: 28:     color_click_init();
   761   001392  ECBE  F00E         	call	_color_click_init	;wreg free
   762   001396                     
   763                           ;main.c: 29:     initDCmotorsPWM();
   764   001396  EC88  F00C         	call	_initDCmotorsPWM	;wreg free
   765   00139A                     
   766                           ;main.c: 30:     initUSART4();
   767   00139A  EC68  F00F         	call	_initUSART4	;wreg free
   768   00139E                     
   769                           ;main.c: 31:     Interrupts_init();
   770   00139E  ECF0  F00E         	call	_Interrupts_init	;wreg free
   771   0013A2                     
   772                           ;main.c: 39:     unsigned char PWMcycle = T2PR;
   773   0013A2  CFBC F0AF          	movff	4028,main@PWMcycle	;volatile
   774                           
   775                           ;main.c: 41:     struct DC_motor motorL, motorR;;main.c: 43:     motorL.power=0;
   776   0013A6  0E00               	movlw	0
   777   0013A8  0100               	movlb	0	; () banked
   778   0013AA  6FB0               	movwf	main@motorL& (0+255),b
   779                           
   780                           ;main.c: 44:     motorL.direction=1;
   781   0013AC  0E01               	movlw	1
   782   0013AE  6FB1               	movwf	(main@motorL+1)& (0+255),b
   783                           
   784                           ;main.c: 45:     motorL.brakemode=1;
   785   0013B0  0E01               	movlw	1
   786   0013B2  6FB2               	movwf	(main@motorL+2)& (0+255),b
   787   0013B4                     
   788                           ; BSR set to: 0
   789                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   790   0013B4  0EAA               	movlw	170
   791   0013B6  6FB5               	movwf	(main@motorL+5)& (0+255),b
   792   0013B8  0E0F               	movlw	15
   793   0013BA  6FB6               	movwf	(main@motorL+6)& (0+255),b
   794   0013BC                     
   795                           ; BSR set to: 0
   796                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   797   0013BC  0EA6               	movlw	166
   798   0013BE  6FB7               	movwf	(main@motorL+7)& (0+255),b
   799   0013C0  0E0F               	movlw	15
   800   0013C2  6FB8               	movwf	(main@motorL+8)& (0+255),b
   801   0013C4                     
   802                           ; BSR set to: 0
   803                           ;main.c: 48:     motorL.PWMperiod=PWMcycle;
   804   0013C4  C0AF  F0B3         	movff	main@PWMcycle,main@motorL+3
   805   0013C8  6BB4               	clrf	(main@motorL+4)& (0+255),b
   806                           
   807                           ;main.c: 50:     motorR.power=0;
   808   0013CA  0E00               	movlw	0
   809   0013CC  6FB9               	movwf	main@motorR& (0+255),b
   810                           
   811                           ;main.c: 51:     motorR.direction=1;
   812   0013CE  0E01               	movlw	1
   813   0013D0  6FBA               	movwf	(main@motorR+1)& (0+255),b
   814                           
   815                           ;main.c: 52:     motorR.brakemode=1;
   816   0013D2  0E01               	movlw	1
   817   0013D4  6FBB               	movwf	(main@motorR+2)& (0+255),b
   818   0013D6                     
   819                           ; BSR set to: 0
   820                           ;main.c: 53:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   821   0013D6  0E25               	movlw	37
   822   0013D8  6FBE               	movwf	(main@motorR+5)& (0+255),b
   823   0013DA  0E0F               	movlw	15
   824   0013DC  6FBF               	movwf	(main@motorR+6)& (0+255),b
   825   0013DE                     
   826                           ; BSR set to: 0
   827                           ;main.c: 54:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   828   0013DE  0E21               	movlw	33
   829   0013E0  6FC0               	movwf	(main@motorR+7)& (0+255),b
   830   0013E2  0E0F               	movlw	15
   831   0013E4  6FC1               	movwf	(main@motorR+8)& (0+255),b
   832   0013E6                     
   833                           ; BSR set to: 0
   834                           ;main.c: 55:     motorR.PWMperiod=PWMcycle;
   835   0013E6  C0AF  F0BC         	movff	main@PWMcycle,main@motorR+3
   836   0013EA  6BBD               	clrf	(main@motorR+4)& (0+255),b
   837   0013EC                     
   838                           ; BSR set to: 0
   839                           ;main.c: 57:     setMotorPWM(&motorL);
   840   0013EC  0EB0               	movlw	low main@motorL
   841   0013EE  6E12               	movwf	setMotorPWM@m^0,c
   842   0013F0  0E00               	movlw	high main@motorL
   843   0013F2  6E13               	movwf	(setMotorPWM@m+1)^0,c
   844   0013F4  EC0F  F009         	call	_setMotorPWM	;wreg free
   845   0013F8                     
   846                           ;main.c: 58:     setMotorPWM(&motorR);
   847   0013F8  0EB9               	movlw	low main@motorR
   848   0013FA  6E12               	movwf	setMotorPWM@m^0,c
   849   0013FC  0E00               	movlw	high main@motorR
   850   0013FE  6E13               	movwf	(setMotorPWM@m+1)^0,c
   851   001400  EC0F  F009         	call	_setMotorPWM	;wreg free
   852   001404                     
   853                           ;main.c: 64:     unsigned int expected_values[3][3] = {{13000, 2600, 1800},{8400, 6500, 
      +                          5000},{4400, 1800, 2800}};
   854   001404  EE20  F0DB         	lfsr	2,main@F14641
   855   001408  EE10  F081         	lfsr	1,main@expected_values
   856   00140C  0E11               	movlw	17
   857   00140E                     u1881:
   858   00140E  CFDB FFE3          	movff	plusw2,plusw1
   859   001412  06E8               	decf	wreg,f,c
   860   001414  E2FC               	bc	u1881
   861   001416                     
   862                           ;main.c: 102:     while(PORTFbits.RF2){
   863   001416  EF0E  F00A         	goto	l230
   864   00141A                     l231:
   865                           
   866                           ;main.c: 103:         LATHbits.LATH1 = 1;
   867   00141A  8280               	bsf	128,1,c	;volatile
   868   00141C                     l230:
   869                           
   870                           ;main.c: 102:     while(PORTFbits.RF2){
   871   00141C  B48E               	btfsc	142,2,c	;volatile
   872   00141E  EF13  F00A         	goto	u1891
   873   001422  EF15  F00A         	goto	u1890
   874   001426                     u1891:
   875   001426  EF0D  F00A         	goto	l231
   876   00142A                     u1890:
   877   00142A                     
   878                           ;main.c: 128:         LATHbits.LATH3=0;
   879   00142A  9680               	bcf	128,3,c	;volatile
   880                           
   881                           ;main.c: 129:     TRISHbits.TRISH3=0;
   882   00142C  9688               	bcf	136,3,c	;volatile
   883                           
   884                           ;main.c: 131:     char buf[20];;main.c: 133:     LATDbits.LATD7=0;
   885   00142E  9E7C               	bcf	124,7,c	;volatile
   886                           
   887                           ;main.c: 134:     TRISDbits.TRISD7=0;
   888   001430  9E84               	bcf	132,7,c	;volatile
   889   001432                     l3255:
   890                           
   891                           ;main.c: 138:         red_read = color_read_Red();
   892   001432  EC96  F00D         	call	_color_read_Red	;wreg free
   893   001436  C009  F0A7         	movff	?_color_read_Red,main@red_read
   894   00143A  C00A  F0A8         	movff	?_color_read_Red+1,main@red_read+1
   895                           
   896                           ;main.c: 139:         blue_read = color_read_Blue();
   897   00143E  EC0E  F00E         	call	_color_read_Blue	;wreg free
   898   001442  C009  F0AB         	movff	?_color_read_Blue,main@blue_read
   899   001446  C00A  F0AC         	movff	?_color_read_Blue+1,main@blue_read+1
   900                           
   901                           ;main.c: 140:         green_read = color_read_Green();
   902   00144A  ECBE  F00D         	call	_color_read_Green	;wreg free
   903   00144E  C009  F0A9         	movff	?_color_read_Green,main@green_read
   904   001452  C00A  F0AA         	movff	?_color_read_Green+1,main@green_read+1
   905                           
   906                           ;main.c: 141:         clear_read = color_read_Clear();
   907   001456  ECE6  F00D         	call	_color_read_Clear	;wreg free
   908   00145A  C009  F0AD         	movff	?_color_read_Clear,main@clear_read
   909   00145E  C00A  F0AE         	movff	?_color_read_Clear+1,main@clear_read+1
   910   001462                     
   911                           ;main.c: 144:         sprintf(buf, "Raw %d, %d, %d, %d \n", red_read, green_read, blue_r
      +                          ead, clear_read);
   912   001462  0E93               	movlw	low main@buf
   913   001464  0100               	movlb	0	; () banked
   914   001466  6F66               	movwf	sprintf@s& (0+255),b
   915   001468  0E00               	movlw	high main@buf
   916   00146A  6F67               	movwf	(sprintf@s+1)& (0+255),b
   917   00146C  0E01               	movlw	low STR_1
   918   00146E  6F68               	movwf	sprintf@fmt& (0+255),b
   919   001470  0E0E               	movlw	high STR_1
   920   001472  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   921   001474  C0A7  F06A         	movff	main@red_read,?_sprintf+4
   922   001478  C0A8  F06B         	movff	main@red_read+1,?_sprintf+5
   923   00147C  C0A9  F06C         	movff	main@green_read,?_sprintf+6
   924   001480  C0AA  F06D         	movff	main@green_read+1,?_sprintf+7
   925   001484  C0AB  F06E         	movff	main@blue_read,?_sprintf+8
   926   001488  C0AC  F06F         	movff	main@blue_read+1,?_sprintf+9
   927   00148C  C0AD  F070         	movff	main@clear_read,?_sprintf+10
   928   001490  C0AE  F071         	movff	main@clear_read+1,?_sprintf+11
   929   001494  EC6D  F00D         	call	_sprintf	;wreg free
   930   001498                     
   931                           ;main.c: 145:         sendStringSerial4(buf);
   932   001498  0E93               	movlw	low main@buf
   933   00149A  6E06               	movwf	sendStringSerial4@string^0,c
   934   00149C  0E00               	movlw	high main@buf
   935   00149E  6E07               	movwf	(sendStringSerial4@string+1)^0,c
   936   0014A0  ECD8  F00E         	call	_sendStringSerial4	;wreg free
   937   0014A4                     
   938                           ;main.c: 146:         _delay((unsigned long)((100)*(64000000/4000.0)));
   939   0014A4  0E09               	movlw	9
   940   0014A6  0100               	movlb	0	; () banked
   941   0014A8  6F80               	movwf	(??_main+1)& (0+255),b
   942   0014AA  0E1E               	movlw	30
   943   0014AC  6F7F               	movwf	??_main& (0+255),b
   944   0014AE  0EE4               	movlw	228
   945   0014B0                     u1937:
   946   0014B0  2EE8               	decfsz	wreg,f,c
   947   0014B2  D7FE               	bra	u1937
   948   0014B4  2F7F               	decfsz	??_main& (0+255),f,b
   949   0014B6  D7FC               	bra	u1937
   950   0014B8  2F80               	decfsz	(??_main+1)& (0+255),f,b
   951   0014BA  D7FA               	bra	u1937
   952   0014BC  F000               	nop	
   953   0014BE                     
   954                           ;main.c: 147:         LATHbits.LATH3=!LATHbits.LATH3;
   955   0014BE  A680               	btfss	128,3,c	;volatile
   956   0014C0  EF64  F00A         	goto	u1901
   957   0014C4  EF69  F00A         	goto	u1900
   958   0014C8                     u1901:
   959   0014C8  0100               	movlb	0	; () banked
   960   0014CA  6B7F               	clrf	??_main& (0+255),b
   961   0014CC  2B7F               	incf	??_main& (0+255),f,b
   962   0014CE  EF6B  F00A         	goto	u1918
   963   0014D2                     u1900:
   964   0014D2  0100               	movlb	0	; () banked
   965   0014D4  6B7F               	clrf	??_main& (0+255),b
   966   0014D6                     u1918:
   967   0014D6  477F               	rlncf	??_main& (0+255),f,b
   968   0014D8  477F               	rlncf	??_main& (0+255),f,b
   969   0014DA  477F               	rlncf	??_main& (0+255),f,b
   970   0014DC  5080               	movf	128,w,c	;volatile
   971   0014DE  197F               	xorwf	??_main& (0+255),w,b
   972   0014E0  0BF7               	andlw	-9
   973   0014E2  197F               	xorwf	??_main& (0+255),w,b
   974   0014E4  6E80               	movwf	128,c	;volatile
   975   0014E6  EF19  F00A         	goto	l3255
   976   0014EA  EF2D  F000         	goto	start
   977   0014EE                     __end_of_main:
   978                           	callstack 0
   979                           
   980 ;; *************** function _sprintf *****************
   981 ;; Defined at:
   982 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  s               2    6[BANK0 ] PTR unsigned char 
   985 ;;		 -> main@buf(20), 
   986 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   987 ;;		 -> STR_1(21), 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  f              11   20[BANK0 ] struct _IO_FILE
   990 ;;  ap              2   18[BANK0 ] PTR void [1]
   991 ;;		 -> ?_sprintf(2), 
   992 ;;  ret             2    0        int 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  2    6[BANK0 ] int 
   995 ;; Registers used:
   996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1002 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1003 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1005 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1006 ;;Total ram usage:       25 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; Hardware stack levels required when called: 11
  1009 ;; This function calls:
  1010 ;;		_vfprintf
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text1
  1017   001ADA                     __ptext1:
  1018                           	callstack 0
  1019   001ADA                     _sprintf:
  1020                           	callstack 19
  1021   001ADA  0E6A               	movlw	low (?_sprintf+4)
  1022   001ADC  0100               	movlb	0	; () banked
  1023   001ADE  6F72               	movwf	sprintf@ap& (0+255),b
  1024   001AE0  0E00               	movlw	high (?_sprintf+4)
  1025   001AE2  6F73               	movwf	(sprintf@ap+1)& (0+255),b
  1026   001AE4  C066  F074         	movff	sprintf@s,sprintf@f
  1027   001AE8  C067  F075         	movff	sprintf@s+1,sprintf@f+1
  1028   001AEC                     
  1029                           ; BSR set to: 0
  1030   001AEC  0E00               	movlw	0
  1031   001AEE  6F78               	movwf	(sprintf@f+4)& (0+255),b
  1032   001AF0  0E00               	movlw	0
  1033   001AF2  6F77               	movwf	(sprintf@f+3)& (0+255),b
  1034   001AF4                     
  1035                           ; BSR set to: 0
  1036   001AF4  0E00               	movlw	0
  1037   001AF6  6F7E               	movwf	(sprintf@f+10)& (0+255),b
  1038   001AF8  0E00               	movlw	0
  1039   001AFA  6F7D               	movwf	(sprintf@f+9)& (0+255),b
  1040   001AFC                     
  1041                           ; BSR set to: 0
  1042   001AFC  0E74               	movlw	low sprintf@f
  1043   001AFE  6F60               	movwf	vfprintf@fp& (0+255),b
  1044   001B00  0E00               	movlw	high sprintf@f
  1045   001B02  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  1046   001B04  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  1047   001B08  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1048   001B0C  0E72               	movlw	low sprintf@ap
  1049   001B0E  6F64               	movwf	vfprintf@ap& (0+255),b
  1050   001B10  0E00               	movlw	high sprintf@ap
  1051   001B12  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  1052   001B14  EC43  F00D         	call	_vfprintf	;wreg free
  1053   001B18  0100               	movlb	0	; () banked
  1054   001B1A  5177               	movf	(sprintf@f+3)& (0+255),w,b
  1055   001B1C  2566               	addwf	sprintf@s& (0+255),w,b
  1056   001B1E  6ED9               	movwf	fsr2l,c
  1057   001B20  5178               	movf	(sprintf@f+4)& (0+255),w,b
  1058   001B22  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  1059   001B24  6EDA               	movwf	fsr2h,c
  1060   001B26  0E00               	movlw	0
  1061   001B28  6EDF               	movwf	indf2,c
  1062   001B2A                     
  1063                           ; BSR set to: 0
  1064   001B2A  0012               	return		;funcret
  1065   001B2C                     __end_of_sprintf:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _vfprintf *****************
  1069 ;; Defined at:
  1070 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1073 ;;		 -> sprintf@f(11), 
  1074 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1075 ;;		 -> STR_1(21), 
  1076 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1077 ;;		 -> sprintf@ap(2), 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  1080 ;;		 -> STR_1(21), 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  2    0[BANK0 ] int 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1090 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;Total ram usage:        8 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 10
  1097 ;; This function calls:
  1098 ;;		_vfpfcnvrt
  1099 ;; This function is called by:
  1100 ;;		_sprintf
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text2
  1105   001A86                     __ptext2:
  1106                           	callstack 0
  1107   001A86                     _vfprintf:
  1108                           	callstack 19
  1109   001A86                     
  1110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1111   001A86  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  1112   001A8A  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1113                           
  1114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1115   001A8E  EF57  F00D         	goto	l3197
  1116   001A92                     l3195:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1119   001A92  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1120   001A96  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1121   001A9A  0E55               	movlw	low vfprintf@cfmt
  1122   001A9C  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1123   001A9E  0E00               	movlw	high vfprintf@cfmt
  1124   001AA0  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1125   001AA2  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1126   001AA6  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1127   001AAA  EC29  F00B         	call	_vfpfcnvrt	;wreg free
  1128   001AAE                     l3197:
  1129                           
  1130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1131   001AAE  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  1132   001AB2  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1133   001AB6                     	if	0	;tblptru may be non-zero
  1134   001AB6                     	endif
  1135   001AB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1136   001AB6  0E00               	movlw	low (__mediumconst shr (0+16))
  1137   001AB8  6EF8               	movwf	tblptru,c
  1138   001ABA                     	endif
  1139   001ABA  0008               	tblrd		*
  1140   001ABC  50F5               	movf	tablat,w,c
  1141   001ABE  0900               	iorlw	0
  1142   001AC0  A4D8               	btfss	status,2,c
  1143   001AC2  EF65  F00D         	goto	u1871
  1144   001AC6  EF67  F00D         	goto	u1870
  1145   001ACA                     u1871:
  1146   001ACA  EF49  F00D         	goto	l3195
  1147   001ACE                     u1870:
  1148   001ACE                     
  1149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1150   001ACE  0E00               	movlw	0
  1151   001AD0  0100               	movlb	0	; () banked
  1152   001AD2  6F61               	movwf	(?_vfprintf+1)& (0+255),b
  1153   001AD4  0E00               	movlw	0
  1154   001AD6  6F60               	movwf	?_vfprintf& (0+255),b
  1155   001AD8                     
  1156                           ; BSR set to: 0
  1157   001AD8  0012               	return		;funcret
  1158   001ADA                     __end_of_vfprintf:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _vfpfcnvrt *****************
  1162 ;; Defined at:
  1163 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1166 ;;		 -> sprintf@f(11), 
  1167 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1168 ;;		 -> vfprintf@cfmt(2), 
  1169 ;;  ap              2   70[COMRAM] PTR PTR void 
  1170 ;;		 -> sprintf@ap(2), 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  convarg         8   74[COMRAM] struct .
  1173 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1174 ;;		 -> STR_1(21), 
  1175 ;;  i               2    0        int 
  1176 ;;  done            2    0        int 
  1177 ;;  c               1    0        unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1187 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1188 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1189 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;Total ram usage:       18 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 9
  1194 ;; This function calls:
  1195 ;;		_dtoa
  1196 ;;		_fputc
  1197 ;; This function is called by:
  1198 ;;		_vfprintf
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text3
  1203   001652                     __ptext3:
  1204                           	callstack 0
  1205   001652                     _vfpfcnvrt:
  1206                           	callstack 19
  1207   001652                     
  1208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1209   001652  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1210   001656  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1211   00165A  CFDE FFF6          	movff	postinc2,tblptrl
  1212   00165E  CFDD FFF7          	movff	postdec2,tblptrh
  1213   001662                     	if	0	;tblptru may be non-zero
  1214   001662                     	endif
  1215   001662                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1216   001662  0E00               	movlw	low (__mediumconst shr (0+16))
  1217   001664  6EF8               	movwf	tblptru,c
  1218   001666                     	endif
  1219   001666  0008               	tblrd		*
  1220   001668  50F5               	movf	tablat,w,c
  1221   00166A  0A25               	xorlw	37
  1222   00166C  A4D8               	btfss	status,2,c
  1223   00166E  EF3B  F00B         	goto	u1841
  1224   001672  EF3D  F00B         	goto	u1840
  1225   001676                     u1841:
  1226   001676  EFC1  F00B         	goto	l3187
  1227   00167A                     u1840:
  1228   00167A                     
  1229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1230   00167A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1231   00167E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1232   001682  2ADE               	incf	postinc2,f,c
  1233   001684  0E00               	movlw	0
  1234   001686  22DD               	addwfc	postdec2,f,c
  1235   001688                     
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1237   001688  0E00               	movlw	0
  1238   00168A  0100               	movlb	0	; () banked
  1239   00168C  6FD7               	movwf	(_width+1)& (0+255),b
  1240   00168E  0E00               	movlw	0
  1241   001690  6FD6               	movwf	_width& (0+255),b
  1242   001692  C0D6  F0DA         	movff	_width,_flags
  1243   001696                     
  1244                           ; BSR set to: 0
  1245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1246   001696  69D8               	setf	_prec& (0+255),b
  1247   001698  69D9               	setf	(_prec+1)& (0+255),b
  1248   00169A                     
  1249                           ; BSR set to: 0
  1250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1251   00169A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1252   00169E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1253   0016A2  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1254   0016A6  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1255   0016AA                     
  1256                           ; BSR set to: 0
  1257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1258   0016AA  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1259   0016AE  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1260   0016B2                     	if	0	;tblptru may be non-zero
  1261   0016B2                     	endif
  1262   0016B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1263   0016B2  0E00               	movlw	low (__mediumconst shr (0+16))
  1264   0016B4  6EF8               	movwf	tblptru,c
  1265   0016B6                     	endif
  1266   0016B6  0008               	tblrd		*
  1267   0016B8  50F5               	movf	tablat,w,c
  1268   0016BA  0A64               	xorlw	100
  1269   0016BC  B4D8               	btfsc	status,2,c
  1270   0016BE  EF63  F00B         	goto	u1851
  1271   0016C2  EF65  F00B         	goto	u1850
  1272   0016C6                     u1851:
  1273   0016C6  EF75  F00B         	goto	l3177
  1274   0016CA                     u1850:
  1275   0016CA                     
  1276                           ; BSR set to: 0
  1277   0016CA  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1278   0016CE  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1279   0016D2                     	if	0	;tblptru may be non-zero
  1280   0016D2                     	endif
  1281   0016D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1282   0016D2  0E00               	movlw	low (__mediumconst shr (0+16))
  1283   0016D4  6EF8               	movwf	tblptru,c
  1284   0016D6                     	endif
  1285   0016D6  0008               	tblrd		*
  1286   0016D8  50F5               	movf	tablat,w,c
  1287   0016DA  0A69               	xorlw	105
  1288   0016DC  A4D8               	btfss	status,2,c
  1289   0016DE  EF73  F00B         	goto	u1861
  1290   0016E2  EF75  F00B         	goto	u1860
  1291   0016E6                     u1861:
  1292   0016E6  EFB8  F00B         	goto	l3183
  1293   0016EA                     u1860:
  1294   0016EA                     l3177:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1298   0016EA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1299   0016EE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1300   0016F2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1301   0016F6  0E02               	movlw	2
  1302   0016F8  26DE               	addwf	postinc2,f,c
  1303   0016FA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1304   0016FE  0E00               	movlw	0
  1305   001700  22DD               	addwfc	postdec2,f,c
  1306   001702  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1307   001706  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1308   00170A  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1309   00170E  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1310   001712  0E00               	movlw	0
  1311   001714  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1312   001716  0EFF               	movlw	-1
  1313   001718  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1314   00171A  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1315   00171C  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1316   00171E  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1317   001720  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1318   001722  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1321   001724  0E01               	movlw	1
  1322   001726  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1323   001728  6E49               	movwf	??_vfpfcnvrt^0,c
  1324   00172A  0E00               	movlw	0
  1325   00172C  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1326   00172E  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1327   001730  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1328   001734  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1329   001738  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1330   00173C  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1331   001740                     
  1332                           ; BSR set to: 0
  1333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1334   001740  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1335   001744  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1336   001748  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1337   00174C  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1338   001750  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1339   001754  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1340   001758  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1341   00175C  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1342   001760  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1343   001764  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1344   001768  EC0C  F007         	call	_dtoa	;wreg free
  1345   00176C  EFD7  F00B         	goto	l1216
  1346   001770                     l3183:
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1349   001770  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1350   001774  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1351   001778  2ADE               	incf	postinc2,f,c
  1352   00177A  0E00               	movlw	0
  1353   00177C  22DD               	addwfc	postdec2,f,c
  1354   00177E  EFD7  F00B         	goto	l1216
  1355   001782                     l3187:
  1356                           
  1357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1358   001782  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1359   001786  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1360   00178A  CFDE FFF6          	movff	postinc2,tblptrl
  1361   00178E  CFDD FFF7          	movff	postdec2,tblptrh
  1362   001792                     	if	0	;tblptru may be non-zero
  1363   001792                     	endif
  1364   001792                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1365   001792  0E00               	movlw	low (__mediumconst shr (0+16))
  1366   001794  6EF8               	movwf	tblptru,c
  1367   001796                     	endif
  1368   001796  0008               	tblrd		*
  1369   001798  50F5               	movf	tablat,w,c
  1370   00179A  6E05               	movwf	fputc@c^0,c
  1371   00179C  6A06               	clrf	(fputc@c+1)^0,c
  1372   00179E  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1373   0017A2  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1374   0017A6  ECD8  F00B         	call	_fputc	;wreg free
  1375   0017AA  EFB8  F00B         	goto	l3183
  1376   0017AE                     l1216:
  1377   0017AE  0012               	return		;funcret
  1378   0017B0                     __end_of_vfpfcnvrt:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _dtoa *****************
  1382 ;; Defined at:
  1383 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1386 ;;		 -> sprintf@f(11), 
  1387 ;;  d               8   33[COMRAM] long long 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  n               8   55[COMRAM] long long 
  1390 ;;  i               2   64[COMRAM] int 
  1391 ;;  w               2   53[COMRAM] int 
  1392 ;;  p               2   51[COMRAM] int 
  1393 ;;  s               1   63[COMRAM] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1403 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;Total ram usage:       35 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 8
  1410 ;; This function calls:
  1411 ;;		___aodiv
  1412 ;;		___aomod
  1413 ;;		_abs
  1414 ;;		_pad
  1415 ;; This function is called by:
  1416 ;;		_vfpfcnvrt
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text4
  1421   000E18                     __ptext4:
  1422                           	callstack 0
  1423   000E18                     _dtoa:
  1424                           	callstack 19
  1425   000E18                     
  1426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1427   000E18  C022  F038         	movff	dtoa@d,dtoa@n
  1428   000E1C  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1429   000E20  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1430   000E24  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1431   000E28  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1432   000E2C  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1433   000E30  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1434   000E34  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1435   000E38                     
  1436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1437   000E38  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1438   000E3A  EF21  F007         	goto	u1741
  1439   000E3E  EF24  F007         	goto	u1740
  1440   000E42                     u1741:
  1441   000E42  0E01               	movlw	1
  1442   000E44  EF25  F007         	goto	u1750
  1443   000E48                     u1740:
  1444   000E48  0E00               	movlw	0
  1445   000E4A                     u1750:
  1446   000E4A  6E40               	movwf	dtoa@s^0,c
  1447   000E4C                     
  1448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1449   000E4C  5040               	movf	dtoa@s^0,w,c
  1450   000E4E  B4D8               	btfsc	status,2,c
  1451   000E50  EF2C  F007         	goto	u1761
  1452   000E54  EF2E  F007         	goto	u1760
  1453   000E58                     u1761:
  1454   000E58  EF3E  F007         	goto	l3119
  1455   000E5C                     u1760:
  1456   000E5C                     
  1457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1458   000E5C  1E3F               	comf	(dtoa@n+7)^0,f,c
  1459   000E5E  1E3E               	comf	(dtoa@n+6)^0,f,c
  1460   000E60  1E3D               	comf	(dtoa@n+5)^0,f,c
  1461   000E62  1E3C               	comf	(dtoa@n+4)^0,f,c
  1462   000E64  1E3B               	comf	(dtoa@n+3)^0,f,c
  1463   000E66  1E3A               	comf	(dtoa@n+2)^0,f,c
  1464   000E68  1E39               	comf	(dtoa@n+1)^0,f,c
  1465   000E6A  6C38               	negf	dtoa@n^0,c
  1466   000E6C  0E00               	movlw	0
  1467   000E6E  2239               	addwfc	(dtoa@n+1)^0,f,c
  1468   000E70  223A               	addwfc	(dtoa@n+2)^0,f,c
  1469   000E72  223B               	addwfc	(dtoa@n+3)^0,f,c
  1470   000E74  223C               	addwfc	(dtoa@n+4)^0,f,c
  1471   000E76  223D               	addwfc	(dtoa@n+5)^0,f,c
  1472   000E78  223E               	addwfc	(dtoa@n+6)^0,f,c
  1473   000E7A  223F               	addwfc	(dtoa@n+7)^0,f,c
  1474   000E7C                     l3119:
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1477   000E7C  0100               	movlb	0	; () banked
  1478   000E7E  BFD9               	btfsc	(_prec+1)& (0+255),7,b
  1479   000E80  EF4C  F007         	goto	u1770
  1480   000E84  51D9               	movf	(_prec+1)& (0+255),w,b
  1481   000E86  E106               	bnz	u1771
  1482   000E88  05D8               	decf	_prec& (0+255),w,b
  1483   000E8A  B0D8               	btfsc	status,0,c
  1484   000E8C  EF4A  F007         	goto	u1771
  1485   000E90  EF4C  F007         	goto	u1770
  1486   000E94                     u1771:
  1487   000E94  EF52  F007         	goto	l1195
  1488   000E98                     u1770:
  1489   000E98                     
  1490                           ; BSR set to: 0
  1491   000E98  0E00               	movlw	0
  1492   000E9A  6E35               	movwf	(dtoa@p+1)^0,c
  1493   000E9C  0E01               	movlw	1
  1494   000E9E  6E34               	movwf	dtoa@p^0,c
  1495   000EA0  EF56  F007         	goto	l1197
  1496   000EA4                     l1195:
  1497                           
  1498                           ; BSR set to: 0
  1499   000EA4  C0D8  F034         	movff	_prec,dtoa@p
  1500   000EA8  C0D9  F035         	movff	_prec+1,dtoa@p+1
  1501   000EAC                     l1197:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1505   000EAC  C0D6  F036         	movff	_width,dtoa@w
  1506   000EB0  C0D7  F037         	movff	_width+1,dtoa@w+1
  1507   000EB4                     
  1508                           ; BSR set to: 0
  1509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1510   000EB4  5040               	movf	dtoa@s^0,w,c
  1511   000EB6  B4D8               	btfsc	status,2,c
  1512   000EB8  EF60  F007         	goto	u1781
  1513   000EBC  EF62  F007         	goto	u1780
  1514   000EC0                     u1781:
  1515   000EC0  EF79  F007         	goto	l1198
  1516   000EC4                     u1780:
  1517   000EC4                     
  1518                           ; BSR set to: 0
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1520   000EC4  0636               	decf	dtoa@w^0,f,c
  1521   000EC6  A0D8               	btfss	status,0,c
  1522   000EC8  0637               	decf	(dtoa@w+1)^0,f,c
  1523   000ECA                     
  1524                           ; BSR set to: 0
  1525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1526   000ECA  5040               	movf	dtoa@s^0,w,c
  1527   000ECC  A4D8               	btfss	status,2,c
  1528   000ECE  EF6B  F007         	goto	u1791
  1529   000ED2  EF6D  F007         	goto	u1790
  1530   000ED6                     u1791:
  1531   000ED6  EF73  F007         	goto	l3131
  1532   000EDA                     u1790:
  1533   000EDA                     
  1534                           ; BSR set to: 0
  1535   000EDA  0E00               	movlw	0
  1536   000EDC  6E33               	movwf	(_dtoa$2470+1)^0,c
  1537   000EDE  0E2B               	movlw	43
  1538   000EE0  6E32               	movwf	_dtoa$2470^0,c
  1539   000EE2  EF77  F007         	goto	l3133
  1540   000EE6                     l3131:
  1541                           
  1542                           ; BSR set to: 0
  1543   000EE6  0E00               	movlw	0
  1544   000EE8  6E33               	movwf	(_dtoa$2470+1)^0,c
  1545   000EEA  0E2D               	movlw	45
  1546   000EEC  6E32               	movwf	_dtoa$2470^0,c
  1547   000EEE                     l3133:
  1548                           
  1549                           ; BSR set to: 0
  1550   000EEE  C032  F040         	movff	_dtoa$2470,dtoa@s
  1551   000EF2                     l1198:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1555   000EF2  0E00               	movlw	0
  1556   000EF4  6E42               	movwf	(dtoa@i+1)^0,c
  1557   000EF6  0E1F               	movlw	31
  1558   000EF8  6E41               	movwf	dtoa@i^0,c
  1559   000EFA                     
  1560                           ; BSR set to: 0
  1561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1562   000EFA  0E00               	movlw	0
  1563   000EFC  0101               	movlb	1	; () banked
  1564   000EFE  6F5B               	movwf	(_dbuf+31)& (0+255),b
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1567   000F00  EFFE  F007         	goto	l3147
  1568   000F04                     l3137:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1571   000F04  0641               	decf	dtoa@i^0,f,c
  1572   000F06  A0D8               	btfss	status,0,c
  1573   000F08  0642               	decf	(dtoa@i+1)^0,f,c
  1574   000F0A                     
  1575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1576   000F0A  0E3C               	movlw	low _dbuf
  1577   000F0C  2441               	addwf	dtoa@i^0,w,c
  1578   000F0E  6ED9               	movwf	fsr2l,c
  1579   000F10  0E01               	movlw	high _dbuf
  1580   000F12  2042               	addwfc	(dtoa@i+1)^0,w,c
  1581   000F14  6EDA               	movwf	fsr2h,c
  1582   000F16  C038  F005         	movff	dtoa@n,___aomod@dividend
  1583   000F1A  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1584   000F1E  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1585   000F22  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1586   000F26  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1587   000F2A  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1588   000F2E  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1589   000F32  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1590   000F36  0E0A               	movlw	10
  1591   000F38  6E0D               	movwf	___aomod@divisor^0,c
  1592   000F3A  0E00               	movlw	0
  1593   000F3C  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1594   000F3E  0E00               	movlw	0
  1595   000F40  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1596   000F42  0E00               	movlw	0
  1597   000F44  6E10               	movwf	(___aomod@divisor+3)^0,c
  1598   000F46  0E00               	movlw	0
  1599   000F48  6E11               	movwf	(___aomod@divisor+4)^0,c
  1600   000F4A  0E00               	movlw	0
  1601   000F4C  6E12               	movwf	(___aomod@divisor+5)^0,c
  1602   000F4E  0E00               	movlw	0
  1603   000F50  6E13               	movwf	(___aomod@divisor+6)^0,c
  1604   000F52  0E00               	movlw	0
  1605   000F54  6E14               	movwf	(___aomod@divisor+7)^0,c
  1606   000F56  EC77  F00A         	call	___aomod	;wreg free
  1607   000F5A  C005  F02A         	movff	?___aomod,??_dtoa
  1608   000F5E  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1609   000F62  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1610   000F66  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1611   000F6A  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1612   000F6E  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1613   000F72  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1614   000F76  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1615   000F7A  C02A  F017         	movff	??_dtoa,abs@a
  1616   000F7E  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1617   000F82  EC9E  F00E         	call	_abs	;wreg free
  1618   000F86  5017               	movf	?_abs^0,w,c
  1619   000F88  0F30               	addlw	48
  1620   000F8A  6EDF               	movwf	indf2,c
  1621   000F8C                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1623   000F8C  0634               	decf	dtoa@p^0,f,c
  1624   000F8E  A0D8               	btfss	status,0,c
  1625   000F90  0635               	decf	(dtoa@p+1)^0,f,c
  1626   000F92                     
  1627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1628   000F92  0636               	decf	dtoa@w^0,f,c
  1629   000F94  A0D8               	btfss	status,0,c
  1630   000F96  0637               	decf	(dtoa@w+1)^0,f,c
  1631   000F98                     
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1633   000F98  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1634   000F9C  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1635   000FA0  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1636   000FA4  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1637   000FA8  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1638   000FAC  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1639   000FB0  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1640   000FB4  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1641   000FB8  0E0A               	movlw	10
  1642   000FBA  6E0D               	movwf	___aodiv@divisor^0,c
  1643   000FBC  0E00               	movlw	0
  1644   000FBE  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1645   000FC0  0E00               	movlw	0
  1646   000FC2  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1647   000FC4  0E00               	movlw	0
  1648   000FC6  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1649   000FC8  0E00               	movlw	0
  1650   000FCA  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1651   000FCC  0E00               	movlw	0
  1652   000FCE  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1653   000FD0  0E00               	movlw	0
  1654   000FD2  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1655   000FD4  0E00               	movlw	0
  1656   000FD6  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1657   000FD8  EC4B  F008         	call	___aodiv	;wreg free
  1658   000FDC  C005  F038         	movff	?___aodiv,dtoa@n
  1659   000FE0  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1660   000FE4  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1661   000FE8  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1662   000FEC  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1663   000FF0  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1664   000FF4  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1665   000FF8  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1666   000FFC                     l3147:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1669   000FFC  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1670   000FFE  EF09  F008         	goto	u1801
  1671   001002  5042               	movf	(dtoa@i+1)^0,w,c
  1672   001004  E108               	bnz	u1800
  1673   001006  0441               	decf	dtoa@i^0,w,c
  1674   001008  A0D8               	btfss	status,0,c
  1675   00100A  EF09  F008         	goto	u1801
  1676   00100E  EF0B  F008         	goto	u1800
  1677   001012                     u1801:
  1678   001012  EF27  F008         	goto	l3153
  1679   001016                     u1800:
  1680   001016  5038               	movf	dtoa@n^0,w,c
  1681   001018  1039               	iorwf	(dtoa@n+1)^0,w,c
  1682   00101A  103A               	iorwf	(dtoa@n+2)^0,w,c
  1683   00101C  103B               	iorwf	(dtoa@n+3)^0,w,c
  1684   00101E  103C               	iorwf	(dtoa@n+4)^0,w,c
  1685   001020  103D               	iorwf	(dtoa@n+5)^0,w,c
  1686   001022  103E               	iorwf	(dtoa@n+6)^0,w,c
  1687   001024  103F               	iorwf	(dtoa@n+7)^0,w,c
  1688   001026  A4D8               	btfss	status,2,c
  1689   001028  EF18  F008         	goto	u1811
  1690   00102C  EF1A  F008         	goto	u1810
  1691   001030                     u1811:
  1692   001030  EF82  F007         	goto	l3137
  1693   001034                     u1810:
  1694   001034  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1695   001036  EF27  F008         	goto	u1820
  1696   00103A  5035               	movf	(dtoa@p+1)^0,w,c
  1697   00103C  E106               	bnz	u1821
  1698   00103E  0434               	decf	dtoa@p^0,w,c
  1699   001040  B0D8               	btfsc	status,0,c
  1700   001042  EF25  F008         	goto	u1821
  1701   001046  EF27  F008         	goto	u1820
  1702   00104A                     u1821:
  1703   00104A  EF82  F007         	goto	l3137
  1704   00104E                     u1820:
  1705   00104E                     l3153:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1708   00104E  5040               	movf	dtoa@s^0,w,c
  1709   001050  B4D8               	btfsc	status,2,c
  1710   001052  EF2D  F008         	goto	u1831
  1711   001056  EF2F  F008         	goto	u1830
  1712   00105A                     u1831:
  1713   00105A  EF3A  F008         	goto	l3159
  1714   00105E                     u1830:
  1715   00105E                     
  1716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1717   00105E  0641               	decf	dtoa@i^0,f,c
  1718   001060  A0D8               	btfss	status,0,c
  1719   001062  0642               	decf	(dtoa@i+1)^0,f,c
  1720   001064                     
  1721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1722   001064  0E3C               	movlw	low _dbuf
  1723   001066  2441               	addwf	dtoa@i^0,w,c
  1724   001068  6ED9               	movwf	fsr2l,c
  1725   00106A  0E01               	movlw	high _dbuf
  1726   00106C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1727   00106E  6EDA               	movwf	fsr2h,c
  1728   001070  C040  FFDF         	movff	dtoa@s,indf2
  1729   001074                     l3159:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1732   001074  C020  F015         	movff	dtoa@fp,pad@fp
  1733   001078  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1734   00107C  0E3C               	movlw	low _dbuf
  1735   00107E  2441               	addwf	dtoa@i^0,w,c
  1736   001080  6E17               	movwf	pad@buf^0,c
  1737   001082  0E01               	movlw	high _dbuf
  1738   001084  2042               	addwfc	(dtoa@i+1)^0,w,c
  1739   001086  6E18               	movwf	(pad@buf+1)^0,c
  1740   001088  C036  F019         	movff	dtoa@w,pad@p
  1741   00108C  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1742   001090  ECCC  F00C         	call	_pad	;wreg free
  1743   001094  0012               	return		;funcret
  1744   001096                     __end_of_dtoa:
  1745                           	callstack 0
  1746                           
  1747 ;; *************** function _pad *****************
  1748 ;; Defined at:
  1749 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1752 ;;		 -> sprintf@f(11), 
  1753 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1754 ;;		 -> dbuf(32), 
  1755 ;;  p               2   24[COMRAM] int 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  w               2   29[COMRAM] int 
  1758 ;;  i               2   27[COMRAM] int 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1768 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;Total ram usage:       11 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 7
  1775 ;; This function calls:
  1776 ;;		_fputc
  1777 ;;		_fputs
  1778 ;; This function is called by:
  1779 ;;		_dtoa
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text5
  1784   001998                     __ptext5:
  1785                           	callstack 0
  1786   001998                     _pad:
  1787                           	callstack 19
  1788   001998                     
  1789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1790   001998  BE1A               	btfsc	(pad@p+1)^0,7,c
  1791   00199A  EFD1  F00C         	goto	u1721
  1792   00199E  EFD3  F00C         	goto	u1720
  1793   0019A2                     u1721:
  1794   0019A2  EFD9  F00C         	goto	l3101
  1795   0019A6                     u1720:
  1796   0019A6  C019  F01E         	movff	pad@p,pad@w
  1797   0019AA  C01A  F01F         	movff	pad@p+1,pad@w+1
  1798   0019AE  EFDD  F00C         	goto	l1186
  1799   0019B2                     l3101:
  1800   0019B2  0E00               	movlw	0
  1801   0019B4  6E1F               	movwf	(pad@w+1)^0,c
  1802   0019B6  0E00               	movlw	0
  1803   0019B8  6E1E               	movwf	pad@w^0,c
  1804   0019BA                     l1186:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1807   0019BA  0E00               	movlw	0
  1808   0019BC  6E1D               	movwf	(pad@i+1)^0,c
  1809   0019BE  0E00               	movlw	0
  1810   0019C0  6E1C               	movwf	pad@i^0,c
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1813   0019C2  EFEF  F00C         	goto	l3107
  1814   0019C6                     l3103:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1817   0019C6  0E00               	movlw	0
  1818   0019C8  6E06               	movwf	(fputc@c+1)^0,c
  1819   0019CA  0E20               	movlw	32
  1820   0019CC  6E05               	movwf	fputc@c^0,c
  1821   0019CE  C015  F007         	movff	pad@fp,fputc@fp
  1822   0019D2  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1823   0019D6  ECD8  F00B         	call	_fputc	;wreg free
  1824   0019DA                     
  1825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1826   0019DA  4A1C               	infsnz	pad@i^0,f,c
  1827   0019DC  2A1D               	incf	(pad@i+1)^0,f,c
  1828   0019DE                     l3107:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1831   0019DE  501E               	movf	pad@w^0,w,c
  1832   0019E0  5C1C               	subwf	pad@i^0,w,c
  1833   0019E2  501D               	movf	(pad@i+1)^0,w,c
  1834   0019E4  0A80               	xorlw	128
  1835   0019E6  6E1B               	movwf	??_pad^0,c
  1836   0019E8  501F               	movf	(pad@w+1)^0,w,c
  1837   0019EA  0A80               	xorlw	128
  1838   0019EC  581B               	subwfb	??_pad^0,w,c
  1839   0019EE  A0D8               	btfss	status,0,c
  1840   0019F0  EFFC  F00C         	goto	u1731
  1841   0019F4  EFFE  F00C         	goto	u1730
  1842   0019F8                     u1731:
  1843   0019F8  EFE3  F00C         	goto	l3103
  1844   0019FC                     u1730:
  1845   0019FC                     
  1846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1847   0019FC  C017  F00E         	movff	pad@buf,fputs@s
  1848   001A00  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1849   001A04  C015  F010         	movff	pad@fp,fputs@fp
  1850   001A08  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1851   001A0C  EC5B  F00E         	call	_fputs	;wreg free
  1852   001A10  0012               	return		;funcret
  1853   001A12                     __end_of_pad:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _fputs *****************
  1857 ;; Defined at:
  1858 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1861 ;;		 -> dbuf(32), 
  1862 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1863 ;;		 -> sprintf@f(11), 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  i               2   18[COMRAM] int 
  1866 ;;  c               1   17[COMRAM] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  2   13[COMRAM] int 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;Total ram usage:        7 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 6
  1883 ;; This function calls:
  1884 ;;		_fputc
  1885 ;; This function is called by:
  1886 ;;		_pad
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text6
  1891   001CB6                     __ptext6:
  1892                           	callstack 0
  1893   001CB6                     _fputs:
  1894                           	callstack 19
  1895   001CB6  0E00               	movlw	0
  1896   001CB8  6E14               	movwf	(fputs@i+1)^0,c
  1897   001CBA  0E00               	movlw	0
  1898   001CBC  6E13               	movwf	fputs@i^0,c
  1899   001CBE  EF6C  F00E         	goto	l3011
  1900   001CC2                     l3007:
  1901   001CC2  C012  F005         	movff	fputs@c,fputc@c
  1902   001CC6  6A06               	clrf	(fputc@c+1)^0,c
  1903   001CC8  C010  F007         	movff	fputs@fp,fputc@fp
  1904   001CCC  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1905   001CD0  ECD8  F00B         	call	_fputc	;wreg free
  1906   001CD4  4A13               	infsnz	fputs@i^0,f,c
  1907   001CD6  2A14               	incf	(fputs@i+1)^0,f,c
  1908   001CD8                     l3011:
  1909   001CD8  5013               	movf	fputs@i^0,w,c
  1910   001CDA  240E               	addwf	fputs@s^0,w,c
  1911   001CDC  6ED9               	movwf	fsr2l,c
  1912   001CDE  5014               	movf	(fputs@i+1)^0,w,c
  1913   001CE0  200F               	addwfc	(fputs@s+1)^0,w,c
  1914   001CE2  6EDA               	movwf	fsr2h,c
  1915   001CE4  50DF               	movf	indf2,w,c
  1916   001CE6  6E12               	movwf	fputs@c^0,c
  1917   001CE8  5012               	movf	fputs@c^0,w,c
  1918   001CEA  A4D8               	btfss	status,2,c
  1919   001CEC  EF7A  F00E         	goto	u1571
  1920   001CF0  EF7C  F00E         	goto	u1570
  1921   001CF4                     u1571:
  1922   001CF4  EF61  F00E         	goto	l3007
  1923   001CF8                     u1570:
  1924   001CF8  0012               	return		;funcret
  1925   001CFA                     __end_of_fputs:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _fputc *****************
  1929 ;; Defined at:
  1930 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  c               2    4[COMRAM] int 
  1933 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1934 ;;		 -> sprintf@f(11), 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2    4[COMRAM] int 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;Total ram usage:        9 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 5
  1953 ;; This function calls:
  1954 ;;		_putch
  1955 ;; This function is called by:
  1956 ;;		_pad
  1957 ;;		_vfpfcnvrt
  1958 ;;		_fputs
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text7
  1963   0017B0                     __ptext7:
  1964                           	callstack 0
  1965   0017B0                     _fputc:
  1966                           	callstack 22
  1967   0017B0  5007               	movf	fputc@fp^0,w,c
  1968   0017B2  1008               	iorwf	(fputc@fp+1)^0,w,c
  1969   0017B4  B4D8               	btfsc	status,2,c
  1970   0017B6  EFDF  F00B         	goto	u1531
  1971   0017BA  EFE1  F00B         	goto	u1530
  1972   0017BE                     u1531:
  1973   0017BE  EFEA  F00B         	goto	l2995
  1974   0017C2                     u1530:
  1975   0017C2  5007               	movf	fputc@fp^0,w,c
  1976   0017C4  1008               	iorwf	(fputc@fp+1)^0,w,c
  1977   0017C6  A4D8               	btfss	status,2,c
  1978   0017C8  EFE8  F00B         	goto	u1541
  1979   0017CC  EFEA  F00B         	goto	u1540
  1980   0017D0                     u1541:
  1981   0017D0  EFEF  F00B         	goto	l2997
  1982   0017D4                     u1540:
  1983   0017D4                     l2995:
  1984   0017D4  5005               	movf	fputc@c^0,w,c
  1985   0017D6  ECE0  F00F         	call	_putch
  1986   0017DA  EF3C  F00C         	goto	l1234
  1987   0017DE                     l2997:
  1988   0017DE  EE20 F009          	lfsr	2,9
  1989   0017E2  5007               	movf	fputc@fp^0,w,c
  1990   0017E4  26D9               	addwf	fsr2l,f,c
  1991   0017E6  5008               	movf	(fputc@fp+1)^0,w,c
  1992   0017E8  22DA               	addwfc	fsr2h,f,c
  1993   0017EA  50DE               	movf	postinc2,w,c
  1994   0017EC  10DE               	iorwf	postinc2,w,c
  1995   0017EE  B4D8               	btfsc	status,2,c
  1996   0017F0  EFFC  F00B         	goto	u1551
  1997   0017F4  EFFE  F00B         	goto	u1550
  1998   0017F8                     u1551:
  1999   0017F8  EF19  F00C         	goto	l3001
  2000   0017FC                     u1550:
  2001   0017FC  EE20 F009          	lfsr	2,9
  2002   001800  5007               	movf	fputc@fp^0,w,c
  2003   001802  26D9               	addwf	fsr2l,f,c
  2004   001804  5008               	movf	(fputc@fp+1)^0,w,c
  2005   001806  22DA               	addwfc	fsr2h,f,c
  2006   001808  EE10 F003          	lfsr	1,3
  2007   00180C  5007               	movf	fputc@fp^0,w,c
  2008   00180E  26E1               	addwf	fsr1l,f,c
  2009   001810  5008               	movf	(fputc@fp+1)^0,w,c
  2010   001812  22E2               	addwfc	fsr1h,f,c
  2011   001814  50DE               	movf	postinc2,w,c
  2012   001816  5CE6               	subwf	postinc1,w,c
  2013   001818  50E6               	movf	postinc1,w,c
  2014   00181A  0A80               	xorlw	128
  2015   00181C  6E0D               	movwf	(??_fputc+4)^0,c
  2016   00181E  50DE               	movf	postinc2,w,c
  2017   001820  0A80               	xorlw	128
  2018   001822  580D               	subwfb	(??_fputc+4)^0,w,c
  2019   001824  B0D8               	btfsc	status,0,c
  2020   001826  EF17  F00C         	goto	u1561
  2021   00182A  EF19  F00C         	goto	u1560
  2022   00182E                     u1561:
  2023   00182E  EF3C  F00C         	goto	l1234
  2024   001832                     u1560:
  2025   001832                     l3001:
  2026   001832  EE20 F003          	lfsr	2,3
  2027   001836  5007               	movf	fputc@fp^0,w,c
  2028   001838  26D9               	addwf	fsr2l,f,c
  2029   00183A  5008               	movf	(fputc@fp+1)^0,w,c
  2030   00183C  22DA               	addwfc	fsr2h,f,c
  2031   00183E  CFDE F009          	movff	postinc2,??_fputc
  2032   001842  CFDD F00A          	movff	postdec2,??_fputc+1
  2033   001846  C007  FFD9         	movff	fputc@fp,fsr2l
  2034   00184A  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2035   00184E  CFDE F00B          	movff	postinc2,??_fputc+2
  2036   001852  CFDD F00C          	movff	postdec2,??_fputc+3
  2037   001856  5009               	movf	??_fputc^0,w,c
  2038   001858  240B               	addwf	(??_fputc+2)^0,w,c
  2039   00185A  6ED9               	movwf	fsr2l,c
  2040   00185C  500A               	movf	(??_fputc+1)^0,w,c
  2041   00185E  200C               	addwfc	(??_fputc+3)^0,w,c
  2042   001860  6EDA               	movwf	fsr2h,c
  2043   001862  C005  FFDF         	movff	fputc@c,indf2
  2044   001866  EE20 F003          	lfsr	2,3
  2045   00186A  5007               	movf	fputc@fp^0,w,c
  2046   00186C  26D9               	addwf	fsr2l,f,c
  2047   00186E  5008               	movf	(fputc@fp+1)^0,w,c
  2048   001870  22DA               	addwfc	fsr2h,f,c
  2049   001872  2ADE               	incf	postinc2,f,c
  2050   001874  0E00               	movlw	0
  2051   001876  22DD               	addwfc	postdec2,f,c
  2052   001878                     l1234:
  2053   001878  0012               	return		;funcret
  2054   00187A                     __end_of_fputc:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _putch *****************
  2058 ;; Defined at:
  2059 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  c               1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  c               1    0[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 4
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_fputc
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text8
  2088   001FC0                     __ptext8:
  2089                           	callstack 0
  2090   001FC0                     _putch:
  2091                           	callstack 22
  2092   001FC0  0012               	return		;funcret
  2093   001FC2                     __end_of_putch:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _abs *****************
  2097 ;; Defined at:
  2098 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  a               2   22[COMRAM] int 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  2   22[COMRAM] int 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;Total ram usage:        4 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 4
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_dtoa
  2123 ;;		_normalise_readings
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text9
  2128   001D3C                     __ptext9:
  2129                           	callstack 0
  2130   001D3C                     _abs:
  2131                           	callstack 22
  2132   001D3C  BE18               	btfsc	(abs@a+1)^0,7,c
  2133   001D3E  EFAB  F00E         	goto	u1580
  2134   001D42  5018               	movf	(abs@a+1)^0,w,c
  2135   001D44  E106               	bnz	u1581
  2136   001D46  0417               	decf	abs@a^0,w,c
  2137   001D48  B0D8               	btfsc	status,0,c
  2138   001D4A  EFA9  F00E         	goto	u1581
  2139   001D4E  EFAB  F00E         	goto	u1580
  2140   001D52                     u1581:
  2141   001D52  EFB9  F00E         	goto	l1154
  2142   001D56                     u1580:
  2143   001D56  C017  F019         	movff	abs@a,??_abs
  2144   001D5A  C018  F01A         	movff	abs@a+1,??_abs+1
  2145   001D5E  1E19               	comf	??_abs^0,f,c
  2146   001D60  1E1A               	comf	(??_abs+1)^0,f,c
  2147   001D62  4A19               	infsnz	??_abs^0,f,c
  2148   001D64  2A1A               	incf	(??_abs+1)^0,f,c
  2149   001D66  C019  F017         	movff	??_abs,?_abs
  2150   001D6A  C01A  F018         	movff	??_abs+1,?_abs+1
  2151   001D6E  EFBD  F00E         	goto	l1157
  2152   001D72                     l1154:
  2153   001D72  C017  F017         	movff	abs@a,?_abs
  2154   001D76  C018  F018         	movff	abs@a+1,?_abs+1
  2155   001D7A                     l1157:
  2156   001D7A  0012               	return		;funcret
  2157   001D7C                     __end_of_abs:
  2158                           	callstack 0
  2159                           
  2160 ;; *************** function ___aomod *****************
  2161 ;; Defined at:
  2162 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  dividend        8    4[COMRAM] long long 
  2165 ;;  divisor         8   12[COMRAM] long long 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  sign            1   21[COMRAM] unsigned char 
  2168 ;;  counter         1   20[COMRAM] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  8    4[COMRAM] long long 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2178 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;Total ram usage:       18 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 4
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_dtoa
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text10
  2193   0014EE                     __ptext10:
  2194                           	callstack 0
  2195   0014EE                     ___aomod:
  2196                           	callstack 22
  2197   0014EE  0E00               	movlw	0
  2198   0014F0  6E16               	movwf	___aomod@sign^0,c
  2199   0014F2  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2200   0014F4  EF80  F00A         	goto	u1660
  2201   0014F8  EF7E  F00A         	goto	u1661
  2202   0014FC                     u1661:
  2203   0014FC  EF92  F00A         	goto	l3069
  2204   001500                     u1660:
  2205   001500  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2206   001502  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2207   001504  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2208   001506  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2209   001508  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2210   00150A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2211   00150C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2212   00150E  6C05               	negf	___aomod@dividend^0,c
  2213   001510  0E00               	movlw	0
  2214   001512  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2215   001514  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2216   001516  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2217   001518  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2218   00151A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2219   00151C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2220   00151E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2221   001520  0E01               	movlw	1
  2222   001522  6E16               	movwf	___aomod@sign^0,c
  2223   001524                     l3069:
  2224   001524  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2225   001526  EF99  F00A         	goto	u1670
  2226   00152A  EF97  F00A         	goto	u1671
  2227   00152E                     u1671:
  2228   00152E  EFA9  F00A         	goto	l3073
  2229   001532                     u1670:
  2230   001532  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2231   001534  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2232   001536  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2233   001538  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2234   00153A  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2235   00153C  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2236   00153E  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2237   001540  6C0D               	negf	___aomod@divisor^0,c
  2238   001542  0E00               	movlw	0
  2239   001544  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2240   001546  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2241   001548  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2242   00154A  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2243   00154C  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2244   00154E  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2245   001550  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2246   001552                     l3073:
  2247   001552  500D               	movf	___aomod@divisor^0,w,c
  2248   001554  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2249   001556  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2250   001558  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2251   00155A  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2252   00155C  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2253   00155E  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2254   001560  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2255   001562  B4D8               	btfsc	status,2,c
  2256   001564  EFB6  F00A         	goto	u1681
  2257   001568  EFB8  F00A         	goto	u1680
  2258   00156C                     u1681:
  2259   00156C  EF00  F00B         	goto	l3089
  2260   001570                     u1680:
  2261   001570  0E01               	movlw	1
  2262   001572  6E15               	movwf	___aomod@counter^0,c
  2263   001574  EFC6  F00A         	goto	l3079
  2264   001578                     l3077:
  2265   001578  90D8               	bcf	status,0,c
  2266   00157A  360D               	rlcf	___aomod@divisor^0,f,c
  2267   00157C  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2268   00157E  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2269   001580  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2270   001582  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2271   001584  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2272   001586  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2273   001588  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2274   00158A  2A15               	incf	___aomod@counter^0,f,c
  2275   00158C                     l3079:
  2276   00158C  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2277   00158E  EFCB  F00A         	goto	u1691
  2278   001592  EFCD  F00A         	goto	u1690
  2279   001596                     u1691:
  2280   001596  EFBC  F00A         	goto	l3077
  2281   00159A                     u1690:
  2282   00159A                     l3081:
  2283   00159A  500D               	movf	___aomod@divisor^0,w,c
  2284   00159C  5C05               	subwf	___aomod@dividend^0,w,c
  2285   00159E  500E               	movf	(___aomod@divisor+1)^0,w,c
  2286   0015A0  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2287   0015A2  500F               	movf	(___aomod@divisor+2)^0,w,c
  2288   0015A4  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2289   0015A6  5010               	movf	(___aomod@divisor+3)^0,w,c
  2290   0015A8  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2291   0015AA  5011               	movf	(___aomod@divisor+4)^0,w,c
  2292   0015AC  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2293   0015AE  5012               	movf	(___aomod@divisor+5)^0,w,c
  2294   0015B0  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2295   0015B2  5013               	movf	(___aomod@divisor+6)^0,w,c
  2296   0015B4  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2297   0015B6  5014               	movf	(___aomod@divisor+7)^0,w,c
  2298   0015B8  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2299   0015BA  A0D8               	btfss	status,0,c
  2300   0015BC  EFE2  F00A         	goto	u1701
  2301   0015C0  EFE4  F00A         	goto	u1700
  2302   0015C4                     u1701:
  2303   0015C4  EFF4  F00A         	goto	l3085
  2304   0015C8                     u1700:
  2305   0015C8  500D               	movf	___aomod@divisor^0,w,c
  2306   0015CA  5E05               	subwf	___aomod@dividend^0,f,c
  2307   0015CC  500E               	movf	(___aomod@divisor+1)^0,w,c
  2308   0015CE  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2309   0015D0  500F               	movf	(___aomod@divisor+2)^0,w,c
  2310   0015D2  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2311   0015D4  5010               	movf	(___aomod@divisor+3)^0,w,c
  2312   0015D6  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2313   0015D8  5011               	movf	(___aomod@divisor+4)^0,w,c
  2314   0015DA  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2315   0015DC  5012               	movf	(___aomod@divisor+5)^0,w,c
  2316   0015DE  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2317   0015E0  5013               	movf	(___aomod@divisor+6)^0,w,c
  2318   0015E2  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2319   0015E4  5014               	movf	(___aomod@divisor+7)^0,w,c
  2320   0015E6  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2321   0015E8                     l3085:
  2322   0015E8  90D8               	bcf	status,0,c
  2323   0015EA  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2324   0015EC  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2325   0015EE  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2326   0015F0  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2327   0015F2  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2328   0015F4  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2329   0015F6  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2330   0015F8  320D               	rrcf	___aomod@divisor^0,f,c
  2331   0015FA  2E15               	decfsz	___aomod@counter^0,f,c
  2332   0015FC  EFCD  F00A         	goto	l3081
  2333   001600                     l3089:
  2334   001600  5016               	movf	___aomod@sign^0,w,c
  2335   001602  B4D8               	btfsc	status,2,c
  2336   001604  EF06  F00B         	goto	u1711
  2337   001608  EF08  F00B         	goto	u1710
  2338   00160C                     u1711:
  2339   00160C  EF18  F00B         	goto	l3093
  2340   001610                     u1710:
  2341   001610  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2342   001612  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2343   001614  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2344   001616  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2345   001618  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2346   00161A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2347   00161C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2348   00161E  6C05               	negf	___aomod@dividend^0,c
  2349   001620  0E00               	movlw	0
  2350   001622  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2351   001624  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2352   001626  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2353   001628  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2354   00162A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2355   00162C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2356   00162E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2357   001630                     l3093:
  2358   001630  C005  F005         	movff	___aomod@dividend,?___aomod
  2359   001634  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2360   001638  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2361   00163C  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2362   001640  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2363   001644  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2364   001648  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2365   00164C  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2366   001650  0012               	return		;funcret
  2367   001652                     __end_of___aomod:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function ___aodiv *****************
  2371 ;; Defined at:
  2372 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  dividend        8    4[COMRAM] long long 
  2375 ;;  divisor         8   12[COMRAM] long long 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  quotient        8   22[COMRAM] long long 
  2378 ;;  sign            1   21[COMRAM] unsigned char 
  2379 ;;  counter         1   20[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  8    4[COMRAM] long long 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2389 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;Total ram usage:       26 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 4
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_dtoa
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text11
  2404   001096                     __ptext11:
  2405                           	callstack 0
  2406   001096                     ___aodiv:
  2407                           	callstack 22
  2408   001096  0E00               	movlw	0
  2409   001098  6E16               	movwf	___aodiv@sign^0,c
  2410   00109A  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2411   00109C  EF54  F008         	goto	u1590
  2412   0010A0  EF52  F008         	goto	u1591
  2413   0010A4                     u1591:
  2414   0010A4  EF66  F008         	goto	l3025
  2415   0010A8                     u1590:
  2416   0010A8  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2417   0010AA  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2418   0010AC  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2419   0010AE  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2420   0010B0  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2421   0010B2  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2422   0010B4  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2423   0010B6  6C0D               	negf	___aodiv@divisor^0,c
  2424   0010B8  0E00               	movlw	0
  2425   0010BA  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2426   0010BC  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2427   0010BE  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2428   0010C0  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2429   0010C2  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2430   0010C4  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2431   0010C6  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2432   0010C8  0E01               	movlw	1
  2433   0010CA  6E16               	movwf	___aodiv@sign^0,c
  2434   0010CC                     l3025:
  2435   0010CC  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2436   0010CE  EF6D  F008         	goto	u1600
  2437   0010D2  EF6B  F008         	goto	u1601
  2438   0010D6                     u1601:
  2439   0010D6  EF7F  F008         	goto	l3031
  2440   0010DA                     u1600:
  2441   0010DA  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2442   0010DC  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2443   0010DE  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2444   0010E0  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2445   0010E2  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2446   0010E4  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2447   0010E6  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2448   0010E8  6C05               	negf	___aodiv@dividend^0,c
  2449   0010EA  0E00               	movlw	0
  2450   0010EC  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2451   0010EE  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2452   0010F0  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2453   0010F2  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2454   0010F4  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2455   0010F6  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2456   0010F8  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2457   0010FA  0E01               	movlw	1
  2458   0010FC  1A16               	xorwf	___aodiv@sign^0,f,c
  2459   0010FE                     l3031:
  2460   0010FE  EE20  F017         	lfsr	2,___aodiv@quotient
  2461   001102  0E07               	movlw	7
  2462   001104                     u1611:
  2463   001104  6ADE               	clrf	postinc2,c
  2464   001106  06E8               	decf	wreg,f,c
  2465   001108  E2FD               	bc	u1611
  2466   00110A  500D               	movf	___aodiv@divisor^0,w,c
  2467   00110C  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2468   00110E  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2469   001110  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2470   001112  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2471   001114  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2472   001116  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2473   001118  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2474   00111A  B4D8               	btfsc	status,2,c
  2475   00111C  EF92  F008         	goto	u1621
  2476   001120  EF94  F008         	goto	u1620
  2477   001124                     u1621:
  2478   001124  EFE6  F008         	goto	l3053
  2479   001128                     u1620:
  2480   001128  0E01               	movlw	1
  2481   00112A  6E15               	movwf	___aodiv@counter^0,c
  2482   00112C  EFA2  F008         	goto	l3039
  2483   001130                     l3037:
  2484   001130  90D8               	bcf	status,0,c
  2485   001132  360D               	rlcf	___aodiv@divisor^0,f,c
  2486   001134  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2487   001136  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2488   001138  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2489   00113A  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2490   00113C  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2491   00113E  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2492   001140  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2493   001142  2A15               	incf	___aodiv@counter^0,f,c
  2494   001144                     l3039:
  2495   001144  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2496   001146  EFA7  F008         	goto	u1631
  2497   00114A  EFA9  F008         	goto	u1630
  2498   00114E                     u1631:
  2499   00114E  EF98  F008         	goto	l3037
  2500   001152                     u1630:
  2501   001152                     l3041:
  2502   001152  90D8               	bcf	status,0,c
  2503   001154  3617               	rlcf	___aodiv@quotient^0,f,c
  2504   001156  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2505   001158  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2506   00115A  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2507   00115C  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2508   00115E  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2509   001160  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2510   001162  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2511   001164  500D               	movf	___aodiv@divisor^0,w,c
  2512   001166  5C05               	subwf	___aodiv@dividend^0,w,c
  2513   001168  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2514   00116A  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2515   00116C  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2516   00116E  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2517   001170  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2518   001172  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2519   001174  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2520   001176  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2521   001178  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2522   00117A  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2523   00117C  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2524   00117E  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2525   001180  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2526   001182  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2527   001184  A0D8               	btfss	status,0,c
  2528   001186  EFC7  F008         	goto	u1641
  2529   00118A  EFC9  F008         	goto	u1640
  2530   00118E                     u1641:
  2531   00118E  EFDA  F008         	goto	l3049
  2532   001192                     u1640:
  2533   001192  500D               	movf	___aodiv@divisor^0,w,c
  2534   001194  5E05               	subwf	___aodiv@dividend^0,f,c
  2535   001196  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2536   001198  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2537   00119A  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2538   00119C  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2539   00119E  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2540   0011A0  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2541   0011A2  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2542   0011A4  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2543   0011A6  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2544   0011A8  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2545   0011AA  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2546   0011AC  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2547   0011AE  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2548   0011B0  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2549   0011B2  8017               	bsf	___aodiv@quotient^0,0,c
  2550   0011B4                     l3049:
  2551   0011B4  90D8               	bcf	status,0,c
  2552   0011B6  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2553   0011B8  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2554   0011BA  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2555   0011BC  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2556   0011BE  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2557   0011C0  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2558   0011C2  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2559   0011C4  320D               	rrcf	___aodiv@divisor^0,f,c
  2560   0011C6  2E15               	decfsz	___aodiv@counter^0,f,c
  2561   0011C8  EFA9  F008         	goto	l3041
  2562   0011CC                     l3053:
  2563   0011CC  5016               	movf	___aodiv@sign^0,w,c
  2564   0011CE  B4D8               	btfsc	status,2,c
  2565   0011D0  EFEC  F008         	goto	u1651
  2566   0011D4  EFEE  F008         	goto	u1650
  2567   0011D8                     u1651:
  2568   0011D8  EFFE  F008         	goto	l3057
  2569   0011DC                     u1650:
  2570   0011DC  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2571   0011DE  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2572   0011E0  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2573   0011E2  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2574   0011E4  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2575   0011E6  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2576   0011E8  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2577   0011EA  6C17               	negf	___aodiv@quotient^0,c
  2578   0011EC  0E00               	movlw	0
  2579   0011EE  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2580   0011F0  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2581   0011F2  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2582   0011F4  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2583   0011F6  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2584   0011F8  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2585   0011FA  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2586   0011FC                     l3057:
  2587   0011FC  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2588   001200  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2589   001204  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2590   001208  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2591   00120C  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2592   001210  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2593   001214  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2594   001218  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2595   00121C  0012               	return		;funcret
  2596   00121E                     __end_of___aodiv:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function _setMotorPWM *****************
  2600 ;; Defined at:
  2601 ;;		line 61 in file "dc_motor.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  m               2   17[COMRAM] PTR struct DC_motor
  2604 ;;		 -> main@motorR(9), main@motorL(9), 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  negDuty         1   22[COMRAM] unsigned char 
  2607 ;;  posDuty         1   21[COMRAM] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;Total ram usage:        6 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 5
  2624 ;; This function calls:
  2625 ;;		___lwdiv
  2626 ;;		___wmul
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;;		_stop
  2630 ;;		_turnLeft45
  2631 ;;		_turnRight45
  2632 ;;		_fullSpeedAhead
  2633 ;;		_reverseFullSpeed
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text12
  2638   00121E                     __ptext12:
  2639                           	callstack 0
  2640   00121E                     _setMotorPWM:
  2641                           	callstack 25
  2642   00121E                     
  2643                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2644   00121E  EE20 F002          	lfsr	2,2
  2645   001222  5012               	movf	setMotorPWM@m^0,w,c
  2646   001224  26D9               	addwf	fsr2l,f,c
  2647   001226  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2648   001228  22DA               	addwfc	fsr2h,f,c
  2649   00122A  50DF               	movf	indf2,w,c
  2650   00122C  B4D8               	btfsc	status,2,c
  2651   00122E  EF1B  F009         	goto	u1291
  2652   001232  EF1D  F009         	goto	u1290
  2653   001236                     u1291:
  2654   001236  EF51  F009         	goto	l2545
  2655   00123A                     u1290:
  2656   00123A                     
  2657                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2658   00123A  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  2659   00123E  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2660   001242  50DF               	movf	indf2,w,c
  2661   001244  6E14               	movwf	??_setMotorPWM^0,c
  2662   001246  5014               	movf	??_setMotorPWM^0,w,c
  2663   001248  6E05               	movwf	___wmul@multiplier^0,c
  2664   00124A  6A06               	clrf	(___wmul@multiplier+1)^0,c
  2665   00124C  EE20 F003          	lfsr	2,3
  2666   001250  5012               	movf	setMotorPWM@m^0,w,c
  2667   001252  26D9               	addwf	fsr2l,f,c
  2668   001254  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2669   001256  22DA               	addwfc	fsr2h,f,c
  2670   001258  CFDE F007          	movff	postinc2,___wmul@multiplicand
  2671   00125C  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  2672   001260  EC44  F00F         	call	___wmul	;wreg free
  2673   001264  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2674   001268  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2675   00126C  0E00               	movlw	0
  2676   00126E  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  2677   001270  0E64               	movlw	100
  2678   001272  6E0D               	movwf	___lwdiv@divisor^0,c
  2679   001274  EC09  F00D         	call	___lwdiv	;wreg free
  2680   001278  EE20 F003          	lfsr	2,3
  2681   00127C  5012               	movf	setMotorPWM@m^0,w,c
  2682   00127E  26D9               	addwf	fsr2l,f,c
  2683   001280  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2684   001282  22DA               	addwfc	fsr2h,f,c
  2685   001284  50DF               	movf	indf2,w,c
  2686   001286  6E15               	movwf	(??_setMotorPWM+1)^0,c
  2687   001288  500B               	movf	?___lwdiv^0,w,c
  2688   00128A  5C15               	subwf	(??_setMotorPWM+1)^0,w,c
  2689   00128C  6E16               	movwf	setMotorPWM@posDuty^0,c
  2690   00128E                     
  2691                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2692   00128E  EE20 F003          	lfsr	2,3
  2693   001292  5012               	movf	setMotorPWM@m^0,w,c
  2694   001294  26D9               	addwf	fsr2l,f,c
  2695   001296  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2696   001298  22DA               	addwfc	fsr2h,f,c
  2697   00129A  50DF               	movf	indf2,w,c
  2698   00129C  6E17               	movwf	setMotorPWM@negDuty^0,c
  2699                           
  2700                           ;dc_motor.c: 68:     }
  2701   00129E  EF74  F009         	goto	l2549
  2702   0012A2                     l2545:
  2703                           
  2704                           ;dc_motor.c: 70:         posDuty=0;
  2705   0012A2  0E00               	movlw	0
  2706   0012A4  6E16               	movwf	setMotorPWM@posDuty^0,c
  2707   0012A6                     
  2708                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2709   0012A6  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  2710   0012AA  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2711   0012AE  50DF               	movf	indf2,w,c
  2712   0012B0  6E14               	movwf	??_setMotorPWM^0,c
  2713   0012B2  5014               	movf	??_setMotorPWM^0,w,c
  2714   0012B4  6E05               	movwf	___wmul@multiplier^0,c
  2715   0012B6  6A06               	clrf	(___wmul@multiplier+1)^0,c
  2716   0012B8  EE20 F003          	lfsr	2,3
  2717   0012BC  5012               	movf	setMotorPWM@m^0,w,c
  2718   0012BE  26D9               	addwf	fsr2l,f,c
  2719   0012C0  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2720   0012C2  22DA               	addwfc	fsr2h,f,c
  2721   0012C4  CFDE F007          	movff	postinc2,___wmul@multiplicand
  2722   0012C8  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  2723   0012CC  EC44  F00F         	call	___wmul	;wreg free
  2724   0012D0  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2725   0012D4  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2726   0012D8  0E00               	movlw	0
  2727   0012DA  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  2728   0012DC  0E64               	movlw	100
  2729   0012DE  6E0D               	movwf	___lwdiv@divisor^0,c
  2730   0012E0  EC09  F00D         	call	___lwdiv	;wreg free
  2731   0012E4  500B               	movf	?___lwdiv^0,w,c
  2732   0012E6  6E17               	movwf	setMotorPWM@negDuty^0,c
  2733   0012E8                     l2549:
  2734                           
  2735                           ;dc_motor.c: 74:     if (m->direction) {
  2736   0012E8  EE20 F001          	lfsr	2,1
  2737   0012EC  5012               	movf	setMotorPWM@m^0,w,c
  2738   0012EE  26D9               	addwf	fsr2l,f,c
  2739   0012F0  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2740   0012F2  22DA               	addwfc	fsr2h,f,c
  2741   0012F4  50DF               	movf	indf2,w,c
  2742   0012F6  B4D8               	btfsc	status,2,c
  2743   0012F8  EF80  F009         	goto	u1301
  2744   0012FC  EF82  F009         	goto	u1300
  2745   001300                     u1301:
  2746   001300  EFA4  F009         	goto	l2553
  2747   001304                     u1300:
  2748   001304                     
  2749                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2750   001304  EE20 F005          	lfsr	2,5
  2751   001308  5012               	movf	setMotorPWM@m^0,w,c
  2752   00130A  26D9               	addwf	fsr2l,f,c
  2753   00130C  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2754   00130E  22DA               	addwfc	fsr2h,f,c
  2755   001310  CFDE F014          	movff	postinc2,??_setMotorPWM
  2756   001314  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2757   001318  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2758   00131C  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2759   001320  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  2760                           
  2761                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2762   001324  EE20 F007          	lfsr	2,7
  2763   001328  5012               	movf	setMotorPWM@m^0,w,c
  2764   00132A  26D9               	addwf	fsr2l,f,c
  2765   00132C  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2766   00132E  22DA               	addwfc	fsr2h,f,c
  2767   001330  CFDE F014          	movff	postinc2,??_setMotorPWM
  2768   001334  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2769   001338  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2770   00133C  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2771   001340  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  2772                           
  2773                           ;dc_motor.c: 77:     } else {
  2774   001344  EFC4  F009         	goto	l86
  2775   001348                     l2553:
  2776                           
  2777                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2778   001348  EE20 F005          	lfsr	2,5
  2779   00134C  5012               	movf	setMotorPWM@m^0,w,c
  2780   00134E  26D9               	addwf	fsr2l,f,c
  2781   001350  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2782   001352  22DA               	addwfc	fsr2h,f,c
  2783   001354  CFDE F014          	movff	postinc2,??_setMotorPWM
  2784   001358  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2785   00135C  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2786   001360  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2787   001364  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  2788                           
  2789                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2790   001368  EE20 F007          	lfsr	2,7
  2791   00136C  5012               	movf	setMotorPWM@m^0,w,c
  2792   00136E  26D9               	addwf	fsr2l,f,c
  2793   001370  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2794   001372  22DA               	addwfc	fsr2h,f,c
  2795   001374  CFDE F014          	movff	postinc2,??_setMotorPWM
  2796   001378  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2797   00137C  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2798   001380  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2799   001384  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  2800   001388                     l86:
  2801   001388  0012               	return		;funcret
  2802   00138A                     __end_of_setMotorPWM:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function ___wmul *****************
  2806 ;; Defined at:
  2807 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  multiplier      2    4[COMRAM] unsigned int 
  2810 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  product         2    8[COMRAM] unsigned int 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  2    4[COMRAM] unsigned int 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, prodl, prodh
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2826 ;;Total ram usage:        6 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 4
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_setMotorPWM
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text13
  2837   001E88                     __ptext13:
  2838                           	callstack 0
  2839   001E88                     ___wmul:
  2840                           	callstack 25
  2841   001E88  5005               	movf	___wmul@multiplier^0,w,c
  2842   001E8A  0207               	mulwf	___wmul@multiplicand^0,c
  2843   001E8C  CFF3 F009          	movff	prodl,___wmul@product
  2844   001E90  CFF4 F00A          	movff	prodh,___wmul@product+1
  2845   001E94  5005               	movf	___wmul@multiplier^0,w,c
  2846   001E96  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  2847   001E98  50F3               	movf	243,w,c
  2848   001E9A  260A               	addwf	(___wmul@product+1)^0,f,c
  2849   001E9C  5006               	movf	(___wmul@multiplier+1)^0,w,c
  2850   001E9E  0207               	mulwf	___wmul@multiplicand^0,c
  2851   001EA0  50F3               	movf	243,w,c
  2852   001EA2  260A               	addwf	(___wmul@product+1)^0,f,c
  2853   001EA4  C009  F005         	movff	___wmul@product,?___wmul
  2854   001EA8  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  2855   001EAC  0012               	return		;funcret
  2856   001EAE                     __end_of___wmul:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function ___lwdiv *****************
  2860 ;; Defined at:
  2861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  dividend        2   10[COMRAM] unsigned int 
  2864 ;;  divisor         2   12[COMRAM] unsigned int 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  quotient        2   14[COMRAM] unsigned int 
  2867 ;;  counter         1   16[COMRAM] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  2   10[COMRAM] unsigned int 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;Total ram usage:        7 bytes
  2882 ;; Hardware stack levels used: 1
  2883 ;; Hardware stack levels required when called: 4
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_setMotorPWM
  2888 ;;		_collect_avg_readings
  2889 ;;		_normalise_readings
  2890 ;;		_make_master_closeness
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text14
  2895   001A12                     __ptext14:
  2896                           	callstack 0
  2897   001A12                     ___lwdiv:
  2898                           	callstack 25
  2899   001A12  0E00               	movlw	0
  2900   001A14  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  2901   001A16  0E00               	movlw	0
  2902   001A18  6E0F               	movwf	___lwdiv@quotient^0,c
  2903   001A1A  500D               	movf	___lwdiv@divisor^0,w,c
  2904   001A1C  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2905   001A1E  B4D8               	btfsc	status,2,c
  2906   001A20  EF14  F00D         	goto	u1251
  2907   001A24  EF16  F00D         	goto	u1250
  2908   001A28                     u1251:
  2909   001A28  EF3E  F00D         	goto	l970
  2910   001A2C                     u1250:
  2911   001A2C  0E01               	movlw	1
  2912   001A2E  6E11               	movwf	___lwdiv@counter^0,c
  2913   001A30  EF1E  F00D         	goto	l2447
  2914   001A34                     l2445:
  2915   001A34  90D8               	bcf	status,0,c
  2916   001A36  360D               	rlcf	___lwdiv@divisor^0,f,c
  2917   001A38  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2918   001A3A  2A11               	incf	___lwdiv@counter^0,f,c
  2919   001A3C                     l2447:
  2920   001A3C  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  2921   001A3E  EF23  F00D         	goto	u1261
  2922   001A42  EF25  F00D         	goto	u1260
  2923   001A46                     u1261:
  2924   001A46  EF1A  F00D         	goto	l2445
  2925   001A4A                     u1260:
  2926   001A4A                     l2449:
  2927   001A4A  90D8               	bcf	status,0,c
  2928   001A4C  360F               	rlcf	___lwdiv@quotient^0,f,c
  2929   001A4E  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2930   001A50  500D               	movf	___lwdiv@divisor^0,w,c
  2931   001A52  5C0B               	subwf	___lwdiv@dividend^0,w,c
  2932   001A54  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  2933   001A56  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2934   001A58  A0D8               	btfss	status,0,c
  2935   001A5A  EF31  F00D         	goto	u1271
  2936   001A5E  EF33  F00D         	goto	u1270
  2937   001A62                     u1271:
  2938   001A62  EF38  F00D         	goto	l2457
  2939   001A66                     u1270:
  2940   001A66  500D               	movf	___lwdiv@divisor^0,w,c
  2941   001A68  5E0B               	subwf	___lwdiv@dividend^0,f,c
  2942   001A6A  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  2943   001A6C  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2944   001A6E  800F               	bsf	___lwdiv@quotient^0,0,c
  2945   001A70                     l2457:
  2946   001A70  90D8               	bcf	status,0,c
  2947   001A72  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2948   001A74  320D               	rrcf	___lwdiv@divisor^0,f,c
  2949   001A76  2E11               	decfsz	___lwdiv@counter^0,f,c
  2950   001A78  EF25  F00D         	goto	l2449
  2951   001A7C                     l970:
  2952   001A7C  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  2953   001A80  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2954   001A84  0012               	return		;funcret
  2955   001A86                     __end_of___lwdiv:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _sendStringSerial4 *****************
  2959 ;; Defined at:
  2960 ;;		line 39 in file "serial.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  string          2    5[COMRAM] PTR unsigned char 
  2963 ;;		 -> main@buf(20), 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;Total ram usage:        2 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 5
  2982 ;; This function calls:
  2983 ;;		_sendCharSerial4
  2984 ;; This function is called by:
  2985 ;;		_main
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text15
  2990   001DB0                     __ptext15:
  2991                           	callstack 0
  2992   001DB0                     _sendStringSerial4:
  2993                           	callstack 25
  2994   001DB0                     
  2995                           ;serial.c: 40:  while(*string != 0) {
  2996   001DB0  EFE3  F00E         	goto	l2673
  2997   001DB4                     l2669:
  2998                           
  2999                           ;serial.c: 41:         sendCharSerial4(*string++);
  3000   001DB4  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  3001   001DB8  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3002   001DBC  50DF               	movf	indf2,w,c
  3003   001DBE  EC88  F00F         	call	_sendCharSerial4
  3004   001DC2  4A06               	infsnz	sendStringSerial4@string^0,f,c
  3005   001DC4  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  3006   001DC6                     l2673:
  3007                           
  3008                           ;serial.c: 40:  while(*string != 0) {
  3009   001DC6  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  3010   001DCA  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3011   001DCE  50DF               	movf	indf2,w,c
  3012   001DD0  A4D8               	btfss	status,2,c
  3013   001DD2  EFED  F00E         	goto	u1361
  3014   001DD6  EFEF  F00E         	goto	u1360
  3015   001DDA                     u1361:
  3016   001DDA  EFDA  F00E         	goto	l2669
  3017   001DDE                     u1360:
  3018   001DDE  0012               	return		;funcret
  3019   001DE0                     __end_of_sendStringSerial4:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function _sendCharSerial4 *****************
  3023 ;; Defined at:
  3024 ;;		line 32 in file "serial.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  charToSend      1    wreg     unsigned char 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  charToSend      1    4[COMRAM] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;Total ram usage:        1 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 4
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_sendStringSerial4
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text16
  3053   001F10                     __ptext16:
  3054                           	callstack 0
  3055   001F10                     _sendCharSerial4:
  3056                           	callstack 25
  3057                           
  3058                           ;incstack = 0
  3059                           ;sendCharSerial4@charToSend stored from wreg
  3060   001F10  6E05               	movwf	sendCharSerial4@charToSend^0,c
  3061   001F12                     l377:
  3062   001F12  010E               	movlb	14	; () banked
  3063   001F14  A537               	btfss	55,2,b	;volatile
  3064   001F16  EF8F  F00F         	goto	u1201
  3065   001F1A  EF91  F00F         	goto	u1200
  3066   001F1E                     u1201:
  3067   001F1E  EF89  F00F         	goto	l377
  3068   001F22                     u1200:
  3069   001F22                     
  3070                           ; BSR set to: 14
  3071                           ;serial.c: 34:     TX4REG = charToSend;
  3072   001F22  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3073   001F26                     
  3074                           ; BSR set to: 14
  3075   001F26  0012               	return		;funcret
  3076   001F28                     __end_of_sendCharSerial4:
  3077                           	callstack 0
  3078                           
  3079 ;; *************** function _initUSART4 *****************
  3080 ;; Defined at:
  3081 ;;		line 6 in file "serial.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3099 ;;Total ram usage:        0 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; Hardware stack levels required when called: 4
  3102 ;; This function calls:
  3103 ;;		Nothing
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text17
  3110   001ED0                     __ptext17:
  3111                           	callstack 0
  3112   001ED0                     _initUSART4:
  3113                           	callstack 26
  3114   001ED0                     
  3115                           ;serial.c: 10:     RC0PPS = 0x12;
  3116   001ED0  0E12               	movlw	18
  3117   001ED2  010E               	movlb	14	; () banked
  3118   001ED4  6F62               	movwf	98,b	;volatile
  3119                           
  3120                           ;serial.c: 11:     RX4PPS = 0x11;
  3121   001ED6  0E11               	movlw	17
  3122   001ED8  6F15               	movwf	21,b	;volatile
  3123   001EDA                     
  3124                           ; BSR set to: 14
  3125                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3126   001EDA  8283               	bsf	131,1,c	;volatile
  3127   001EDC                     
  3128                           ; BSR set to: 14
  3129                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3130   001EDC  97E9               	bcf	233,3,b	;volatile
  3131   001EDE                     
  3132                           ; BSR set to: 14
  3133                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3134   001EDE  95E8               	bcf	232,2,b	;volatile
  3135                           
  3136                           ;serial.c: 17:     SP4BRGL = 51;
  3137   001EE0  0E33               	movlw	51
  3138   001EE2  6FE5               	movwf	229,b	;volatile
  3139                           
  3140                           ;serial.c: 18:     SP4BRGH = 0;
  3141   001EE4  0E00               	movlw	0
  3142   001EE6  6FE6               	movwf	230,b	;volatile
  3143   001EE8                     
  3144                           ; BSR set to: 14
  3145                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3146   001EE8  89E7               	bsf	231,4,b	;volatile
  3147   001EEA                     
  3148                           ; BSR set to: 14
  3149                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3150   001EEA  8BE8               	bsf	232,5,b	;volatile
  3151   001EEC                     
  3152                           ; BSR set to: 14
  3153                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3154   001EEC  8FE7               	bsf	231,7,b	;volatile
  3155   001EEE                     
  3156                           ; BSR set to: 14
  3157   001EEE  0012               	return		;funcret
  3158   001EF0                     __end_of_initUSART4:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _initDCmotorsPWM *****************
  3162 ;; Defined at:
  3163 ;;		line 6 in file "dc_motor.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 4
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text18
  3192   001910                     __ptext18:
  3193                           	callstack 0
  3194   001910                     _initDCmotorsPWM:
  3195                           	callstack 26
  3196   001910                     
  3197                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3198   001910  9485               	bcf	133,2,c	;volatile
  3199                           
  3200                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3201   001912  9885               	bcf	133,4,c	;volatile
  3202                           
  3203                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3204   001914  9E83               	bcf	131,7,c	;volatile
  3205                           
  3206                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3207   001916  9C87               	bcf	135,6,c	;volatile
  3208   001918                     
  3209                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3210   001918  0E05               	movlw	5
  3211   00191A  010E               	movlb	14	; () banked
  3212   00191C  6F74               	movwf	116,b	;volatile
  3213                           
  3214                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3215   00191E  0E06               	movlw	6
  3216   001920  6F76               	movwf	118,b	;volatile
  3217                           
  3218                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3219   001922  0E07               	movlw	7
  3220   001924  6F69               	movwf	105,b	;volatile
  3221                           
  3222                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3223   001926  0E08               	movlw	8
  3224   001928  6F88               	movwf	136,b	;volatile
  3225                           
  3226                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3227   00192A  50BD               	movf	189,w,c	;volatile
  3228   00192C  0B8F               	andlw	-113
  3229   00192E  0940               	iorlw	64
  3230   001930  6EBD               	movwf	189,c	;volatile
  3231                           
  3232                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3233   001932  0EE0               	movlw	-32
  3234   001934  16BE               	andwf	190,f,c	;volatile
  3235                           
  3236                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3237   001936  50BF               	movf	191,w,c	;volatile
  3238   001938  0BF0               	andlw	-16
  3239   00193A  0901               	iorlw	1
  3240   00193C  6EBF               	movwf	191,c	;volatile
  3241                           
  3242                           ;dc_motor.c: 26:     T2PR=99;
  3243   00193E  0E63               	movlw	99
  3244   001940  6EBC               	movwf	188,c	;volatile
  3245   001942                     
  3246                           ; BSR set to: 14
  3247                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3248   001942  8EBD               	bsf	189,7,c	;volatile
  3249                           
  3250                           ;dc_motor.c: 31:     CCPR1H=0;
  3251   001944  0E00               	movlw	0
  3252   001946  6EAA               	movwf	170,c	;volatile
  3253                           
  3254                           ;dc_motor.c: 32:     CCPR2H=0;
  3255   001948  0E00               	movlw	0
  3256   00194A  6EA6               	movwf	166,c	;volatile
  3257                           
  3258                           ;dc_motor.c: 33:     CCPR3H=0;
  3259   00194C  0E00               	movlw	0
  3260   00194E  010F               	movlb	15	; () banked
  3261   001950  6F25               	movwf	37,b	;volatile
  3262                           
  3263                           ;dc_motor.c: 34:     CCPR4H=0;
  3264   001952  0E00               	movlw	0
  3265   001954  6F21               	movwf	33,b	;volatile
  3266                           
  3267                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3268   001956  0EFC               	movlw	-4
  3269   001958  16AD               	andwf	173,f,c	;volatile
  3270                           
  3271                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3272   00195A  0EF3               	movlw	-13
  3273   00195C  16AD               	andwf	173,f,c	;volatile
  3274                           
  3275                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3276   00195E  0ECF               	movlw	-49
  3277   001960  16AD               	andwf	173,f,c	;volatile
  3278                           
  3279                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3280   001962  0E3F               	movlw	-193
  3281   001964  16AD               	andwf	173,f,c	;volatile
  3282   001966                     
  3283                           ; BSR set to: 15
  3284                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3285   001966  88AB               	bsf	171,4,c	;volatile
  3286                           
  3287                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3288   001968  50AB               	movf	171,w,c	;volatile
  3289   00196A  0BF0               	andlw	-16
  3290   00196C  090C               	iorlw	12
  3291   00196E  6EAB               	movwf	171,c	;volatile
  3292   001970                     
  3293                           ; BSR set to: 15
  3294                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3295   001970  8EAB               	bsf	171,7,c	;volatile
  3296   001972                     
  3297                           ; BSR set to: 15
  3298                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3299   001972  88A7               	bsf	167,4,c	;volatile
  3300                           
  3301                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3302   001974  50A7               	movf	167,w,c	;volatile
  3303   001976  0BF0               	andlw	-16
  3304   001978  090C               	iorlw	12
  3305   00197A  6EA7               	movwf	167,c	;volatile
  3306   00197C                     
  3307                           ; BSR set to: 15
  3308                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3309   00197C  8EA7               	bsf	167,7,c	;volatile
  3310   00197E                     
  3311                           ; BSR set to: 15
  3312                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3313   00197E  8926               	bsf	38,4,b	;volatile
  3314                           
  3315                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3316   001980  5126               	movf	38,w,b	;volatile
  3317   001982  0BF0               	andlw	-16
  3318   001984  090C               	iorlw	12
  3319   001986  6F26               	movwf	38,b	;volatile
  3320   001988                     
  3321                           ; BSR set to: 15
  3322                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3323   001988  8F26               	bsf	38,7,b	;volatile
  3324   00198A                     
  3325                           ; BSR set to: 15
  3326                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3327   00198A  8922               	bsf	34,4,b	;volatile
  3328                           
  3329                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3330   00198C  5122               	movf	34,w,b	;volatile
  3331   00198E  0BF0               	andlw	-16
  3332   001990  090C               	iorlw	12
  3333   001992  6F22               	movwf	34,b	;volatile
  3334   001994                     
  3335                           ; BSR set to: 15
  3336                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3337   001994  8F22               	bsf	34,7,b	;volatile
  3338   001996                     
  3339                           ; BSR set to: 15
  3340   001996  0012               	return		;funcret
  3341   001998                     __end_of_initDCmotorsPWM:
  3342                           	callstack 0
  3343                           
  3344 ;; *************** function _color_read_Red *****************
  3345 ;; Defined at:
  3346 ;;		line 29 in file "color.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  tmp             2   13[COMRAM] unsigned int 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  2    8[COMRAM] unsigned int 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3364 ;;Total ram usage:        7 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 6
  3367 ;; This function calls:
  3368 ;;		_I2C_2_Master_Read
  3369 ;;		_I2C_2_Master_RepStart
  3370 ;;		_I2C_2_Master_Start
  3371 ;;		_I2C_2_Master_Stop
  3372 ;;		_I2C_2_Master_Write
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;;		_collect_avg_readings
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text19
  3380   001B2C                     __ptext19:
  3381                           	callstack 0
  3382   001B2C                     _color_read_Red:
  3383                           	callstack 24
  3384   001B2C                     
  3385                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  3386   001B2C  ECD1  F00F         	call	_I2C_2_Master_Start	;wreg free
  3387                           
  3388                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  3389   001B30  0E52               	movlw	82
  3390   001B32  ECBB  F00F         	call	_I2C_2_Master_Write
  3391                           
  3392                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  3393   001B36  0EB6               	movlw	182
  3394   001B38  ECBB  F00F         	call	_I2C_2_Master_Write
  3395                           
  3396                           ;color.c: 35:  I2C_2_Master_RepStart();
  3397   001B3C  ECC7  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3398                           
  3399                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  3400   001B40  0E53               	movlw	83
  3401   001B42  ECBB  F00F         	call	_I2C_2_Master_Write
  3402                           
  3403                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  3404   001B46  0E01               	movlw	1
  3405   001B48  EC7D  F00E         	call	_I2C_2_Master_Read
  3406   001B4C  6E0B               	movwf	??_color_read_Red^0,c
  3407   001B4E  500B               	movf	??_color_read_Red^0,w,c
  3408   001B50  6E0E               	movwf	color_read_Red@tmp^0,c
  3409   001B52  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  3410                           
  3411                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3412   001B54  0E00               	movlw	0
  3413   001B56  EC7D  F00E         	call	_I2C_2_Master_Read
  3414   001B5A  6E0B               	movwf	??_color_read_Red^0,c
  3415   001B5C  500B               	movf	??_color_read_Red^0,w,c
  3416   001B5E  6E0D               	movwf	(??_color_read_Red+2)^0,c
  3417   001B60  6A0C               	clrf	(??_color_read_Red+1)^0,c
  3418   001B62  500E               	movf	color_read_Red@tmp^0,w,c
  3419   001B64  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  3420   001B66  6E0E               	movwf	color_read_Red@tmp^0,c
  3421   001B68  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  3422   001B6A  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  3423   001B6C  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  3424                           
  3425                           ;color.c: 39:  I2C_2_Master_Stop();
  3426   001B6E  ECCC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3427   001B72                     
  3428                           ;color.c: 40:  return tmp;
  3429   001B72  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  3430   001B76  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3431   001B7A  0012               	return		;funcret
  3432   001B7C                     __end_of_color_read_Red:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _color_read_Green *****************
  3436 ;; Defined at:
  3437 ;;		line 43 in file "color.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  tmp             2   13[COMRAM] unsigned int 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2    8[COMRAM] unsigned int 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;Total ram usage:        7 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 6
  3458 ;; This function calls:
  3459 ;;		_I2C_2_Master_Read
  3460 ;;		_I2C_2_Master_RepStart
  3461 ;;		_I2C_2_Master_Start
  3462 ;;		_I2C_2_Master_Stop
  3463 ;;		_I2C_2_Master_Write
  3464 ;; This function is called by:
  3465 ;;		_main
  3466 ;;		_collect_avg_readings
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text20
  3471   001B7C                     __ptext20:
  3472                           	callstack 0
  3473   001B7C                     _color_read_Green:
  3474                           	callstack 24
  3475   001B7C                     
  3476                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  3477   001B7C  ECD1  F00F         	call	_I2C_2_Master_Start	;wreg free
  3478                           
  3479                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3480   001B80  0E52               	movlw	82
  3481   001B82  ECBB  F00F         	call	_I2C_2_Master_Write
  3482                           
  3483                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  3484   001B86  0EB8               	movlw	184
  3485   001B88  ECBB  F00F         	call	_I2C_2_Master_Write
  3486                           
  3487                           ;color.c: 49:  I2C_2_Master_RepStart();
  3488   001B8C  ECC7  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3489                           
  3490                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3491   001B90  0E53               	movlw	83
  3492   001B92  ECBB  F00F         	call	_I2C_2_Master_Write
  3493                           
  3494                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  3495   001B96  0E01               	movlw	1
  3496   001B98  EC7D  F00E         	call	_I2C_2_Master_Read
  3497   001B9C  6E0B               	movwf	??_color_read_Green^0,c
  3498   001B9E  500B               	movf	??_color_read_Green^0,w,c
  3499   001BA0  6E0E               	movwf	color_read_Green@tmp^0,c
  3500   001BA2  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  3501                           
  3502                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3503   001BA4  0E00               	movlw	0
  3504   001BA6  EC7D  F00E         	call	_I2C_2_Master_Read
  3505   001BAA  6E0B               	movwf	??_color_read_Green^0,c
  3506   001BAC  500B               	movf	??_color_read_Green^0,w,c
  3507   001BAE  6E0D               	movwf	(??_color_read_Green+2)^0,c
  3508   001BB0  6A0C               	clrf	(??_color_read_Green+1)^0,c
  3509   001BB2  500E               	movf	color_read_Green@tmp^0,w,c
  3510   001BB4  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  3511   001BB6  6E0E               	movwf	color_read_Green@tmp^0,c
  3512   001BB8  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  3513   001BBA  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  3514   001BBC  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  3515                           
  3516                           ;color.c: 53:  I2C_2_Master_Stop();
  3517   001BBE  ECCC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3518   001BC2                     
  3519                           ;color.c: 54:  return tmp;
  3520   001BC2  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  3521   001BC6  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3522   001BCA  0012               	return		;funcret
  3523   001BCC                     __end_of_color_read_Green:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _color_read_Clear *****************
  3527 ;; Defined at:
  3528 ;;		line 71 in file "color.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  tmp             2   13[COMRAM] unsigned int 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  2    8[COMRAM] unsigned int 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;Total ram usage:        7 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 6
  3549 ;; This function calls:
  3550 ;;		_I2C_2_Master_Read
  3551 ;;		_I2C_2_Master_RepStart
  3552 ;;		_I2C_2_Master_Start
  3553 ;;		_I2C_2_Master_Stop
  3554 ;;		_I2C_2_Master_Write
  3555 ;; This function is called by:
  3556 ;;		_main
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text21
  3561   001BCC                     __ptext21:
  3562                           	callstack 0
  3563   001BCC                     _color_read_Clear:
  3564                           	callstack 24
  3565   001BCC                     
  3566                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3567   001BCC  ECD1  F00F         	call	_I2C_2_Master_Start	;wreg free
  3568                           
  3569                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3570   001BD0  0E52               	movlw	82
  3571   001BD2  ECBB  F00F         	call	_I2C_2_Master_Write
  3572                           
  3573                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  3574   001BD6  0EB4               	movlw	180
  3575   001BD8  ECBB  F00F         	call	_I2C_2_Master_Write
  3576                           
  3577                           ;color.c: 77:  I2C_2_Master_RepStart();
  3578   001BDC  ECC7  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3579                           
  3580                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3581   001BE0  0E53               	movlw	83
  3582   001BE2  ECBB  F00F         	call	_I2C_2_Master_Write
  3583                           
  3584                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  3585   001BE6  0E01               	movlw	1
  3586   001BE8  EC7D  F00E         	call	_I2C_2_Master_Read
  3587   001BEC  6E0B               	movwf	??_color_read_Clear^0,c
  3588   001BEE  500B               	movf	??_color_read_Clear^0,w,c
  3589   001BF0  6E0E               	movwf	color_read_Clear@tmp^0,c
  3590   001BF2  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3591                           
  3592                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3593   001BF4  0E00               	movlw	0
  3594   001BF6  EC7D  F00E         	call	_I2C_2_Master_Read
  3595   001BFA  6E0B               	movwf	??_color_read_Clear^0,c
  3596   001BFC  500B               	movf	??_color_read_Clear^0,w,c
  3597   001BFE  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3598   001C00  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3599   001C02  500E               	movf	color_read_Clear@tmp^0,w,c
  3600   001C04  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3601   001C06  6E0E               	movwf	color_read_Clear@tmp^0,c
  3602   001C08  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3603   001C0A  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3604   001C0C  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3605                           
  3606                           ;color.c: 81:  I2C_2_Master_Stop();
  3607   001C0E  ECCC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3608   001C12                     
  3609                           ;color.c: 82:  return tmp;
  3610   001C12  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3611   001C16  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3612   001C1A  0012               	return		;funcret
  3613   001C1C                     __end_of_color_read_Clear:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function _color_read_Blue *****************
  3617 ;; Defined at:
  3618 ;;		line 57 in file "color.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  tmp             2   13[COMRAM] unsigned int 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  2    8[COMRAM] unsigned int 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;Total ram usage:        7 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 6
  3639 ;; This function calls:
  3640 ;;		_I2C_2_Master_Read
  3641 ;;		_I2C_2_Master_RepStart
  3642 ;;		_I2C_2_Master_Start
  3643 ;;		_I2C_2_Master_Stop
  3644 ;;		_I2C_2_Master_Write
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;;		_collect_avg_readings
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text22
  3652   001C1C                     __ptext22:
  3653                           	callstack 0
  3654   001C1C                     _color_read_Blue:
  3655                           	callstack 24
  3656   001C1C                     
  3657                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  3658   001C1C  ECD1  F00F         	call	_I2C_2_Master_Start	;wreg free
  3659                           
  3660                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  3661   001C20  0E52               	movlw	82
  3662   001C22  ECBB  F00F         	call	_I2C_2_Master_Write
  3663                           
  3664                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  3665   001C26  0EBA               	movlw	186
  3666   001C28  ECBB  F00F         	call	_I2C_2_Master_Write
  3667                           
  3668                           ;color.c: 63:  I2C_2_Master_RepStart();
  3669   001C2C  ECC7  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3670                           
  3671                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  3672   001C30  0E53               	movlw	83
  3673   001C32  ECBB  F00F         	call	_I2C_2_Master_Write
  3674                           
  3675                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  3676   001C36  0E01               	movlw	1
  3677   001C38  EC7D  F00E         	call	_I2C_2_Master_Read
  3678   001C3C  6E0B               	movwf	??_color_read_Blue^0,c
  3679   001C3E  500B               	movf	??_color_read_Blue^0,w,c
  3680   001C40  6E0E               	movwf	color_read_Blue@tmp^0,c
  3681   001C42  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3682                           
  3683                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3684   001C44  0E00               	movlw	0
  3685   001C46  EC7D  F00E         	call	_I2C_2_Master_Read
  3686   001C4A  6E0B               	movwf	??_color_read_Blue^0,c
  3687   001C4C  500B               	movf	??_color_read_Blue^0,w,c
  3688   001C4E  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3689   001C50  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3690   001C52  500E               	movf	color_read_Blue@tmp^0,w,c
  3691   001C54  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3692   001C56  6E0E               	movwf	color_read_Blue@tmp^0,c
  3693   001C58  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3694   001C5A  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3695   001C5C  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3696                           
  3697                           ;color.c: 67:  I2C_2_Master_Stop();
  3698   001C5E  ECCC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3699   001C62                     
  3700                           ;color.c: 68:  return tmp;
  3701   001C62  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3702   001C66  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3703   001C6A  0012               	return		;funcret
  3704   001C6C                     __end_of_color_read_Blue:
  3705                           	callstack 0
  3706                           
  3707 ;; *************** function _I2C_2_Master_RepStart *****************
  3708 ;; Defined at:
  3709 ;;		line 33 in file "i2c.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;Total ram usage:        0 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; Hardware stack levels required when called: 5
  3730 ;; This function calls:
  3731 ;;		_I2C_2_Master_Idle
  3732 ;; This function is called by:
  3733 ;;		_color_read_Red
  3734 ;;		_color_read_Green
  3735 ;;		_color_read_Blue
  3736 ;;		_color_read_Clear
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text23
  3741   001F8E                     __ptext23:
  3742                           	callstack 0
  3743   001F8E                     _I2C_2_Master_RepStart:
  3744                           	callstack 24
  3745   001F8E                     
  3746                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3747   001F8E  EC1C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3748   001F92                     
  3749                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3750   001F92  010E               	movlb	14	; () banked
  3751   001F94  83DA               	bsf	218,1,b	;volatile
  3752   001F96                     
  3753                           ; BSR set to: 14
  3754   001F96  0012               	return		;funcret
  3755   001F98                     __end_of_I2C_2_Master_RepStart:
  3756                           	callstack 0
  3757                           
  3758 ;; *************** function _I2C_2_Master_Read *****************
  3759 ;; Defined at:
  3760 ;;		line 51 in file "i2c.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  ack             1    wreg     unsigned char 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  ack             1    6[COMRAM] unsigned char 
  3765 ;;  tmp             1    7[COMRAM] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      unsigned char 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3778 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3779 ;;Total ram usage:        3 bytes
  3780 ;; Hardware stack levels used: 1
  3781 ;; Hardware stack levels required when called: 5
  3782 ;; This function calls:
  3783 ;;		_I2C_2_Master_Idle
  3784 ;; This function is called by:
  3785 ;;		_color_read_Red
  3786 ;;		_color_read_Green
  3787 ;;		_color_read_Blue
  3788 ;;		_color_read_Clear
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text24
  3793   001CFA                     __ptext24:
  3794                           	callstack 0
  3795   001CFA                     _I2C_2_Master_Read:
  3796                           	callstack 24
  3797                           
  3798                           ; BSR set to: 14
  3799                           ;incstack = 0
  3800                           ;I2C_2_Master_Read@ack stored from wreg
  3801   001CFA  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3802   001CFC                     
  3803                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3804   001CFC  EC1C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3805   001D00                     
  3806                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3807   001D00  010E               	movlb	14	; () banked
  3808   001D02  87DA               	bsf	218,3,b	;volatile
  3809                           
  3810                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3811   001D04  EC1C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3812   001D08                     
  3813                           ;i2c.c: 57:   tmp = SSP2BUF;
  3814   001D08  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3815                           
  3816                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3817   001D0C  EC1C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3818   001D10                     
  3819                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3820   001D10  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3821   001D12  B4D8               	btfsc	status,2,c
  3822   001D14  EF8E  F00E         	goto	u1181
  3823   001D18  EF92  F00E         	goto	u1180
  3824   001D1C                     u1181:
  3825   001D1C  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3826   001D1E  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3827   001D20  EF93  F00E         	goto	u1198
  3828   001D24                     u1180:
  3829   001D24  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3830   001D26                     u1198:
  3831   001D26  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3832   001D28  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3833   001D2A  010E               	movlb	14	; () banked
  3834   001D2C  51DA               	movf	218,w,b	;volatile
  3835   001D2E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3836   001D30  0BDF               	andlw	-33
  3837   001D32  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3838   001D34  6FDA               	movwf	218,b	;volatile
  3839   001D36                     
  3840                           ; BSR set to: 14
  3841                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3842   001D36  89DA               	bsf	218,4,b	;volatile
  3843   001D38                     
  3844                           ; BSR set to: 14
  3845                           ;i2c.c: 61:   return tmp;
  3846   001D38  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3847   001D3A                     
  3848                           ; BSR set to: 14
  3849   001D3A  0012               	return		;funcret
  3850   001D3C                     __end_of_I2C_2_Master_Read:
  3851                           	callstack 0
  3852                           
  3853 ;; *************** function _color_click_init *****************
  3854 ;; Defined at:
  3855 ;;		line 5 in file "color.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3873 ;;Total ram usage:        1 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; Hardware stack levels required when called: 7
  3876 ;; This function calls:
  3877 ;;		_I2C_2_Master_Init
  3878 ;;		_color_writetoaddr
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text25
  3885   001D7C                     __ptext25:
  3886                           	callstack 0
  3887   001D7C                     _color_click_init:
  3888                           	callstack 23
  3889   001D7C                     
  3890                           ;color.c: 8:     I2C_2_Master_Init();
  3891   001D7C  EC07  F00F         	call	_I2C_2_Master_Init	;wreg free
  3892   001D80                     
  3893                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3894   001D80  0E01               	movlw	1
  3895   001D82  6E07               	movwf	color_writetoaddr@value^0,c
  3896   001D84  0E00               	movlw	0
  3897   001D86  EC78  F00F         	call	_color_writetoaddr
  3898   001D8A                     
  3899                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3900   001D8A  0E3F               	movlw	63
  3901   001D8C  6E09               	movwf	??_color_click_init^0,c
  3902   001D8E  0E55               	movlw	85
  3903   001D90                     u1947:
  3904   001D90  2EE8               	decfsz	wreg,f,c
  3905   001D92  D7FE               	bra	u1947
  3906   001D94  2E09               	decfsz	??_color_click_init^0,f,c
  3907   001D96  D7FC               	bra	u1947
  3908   001D98  F000               	nop	
  3909   001D9A                     
  3910                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3911   001D9A  0E03               	movlw	3
  3912   001D9C  6E07               	movwf	color_writetoaddr@value^0,c
  3913   001D9E  0E00               	movlw	0
  3914   001DA0  EC78  F00F         	call	_color_writetoaddr
  3915   001DA4                     
  3916                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3917   001DA4  0ED5               	movlw	213
  3918   001DA6  6E07               	movwf	color_writetoaddr@value^0,c
  3919   001DA8  0E01               	movlw	1
  3920   001DAA  EC78  F00F         	call	_color_writetoaddr
  3921   001DAE  0012               	return		;funcret
  3922   001DB0                     __end_of_color_click_init:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _I2C_2_Master_Init *****************
  3926 ;; Defined at:
  3927 ;;		line 4 in file "i2c.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 4
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_color_click_init
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text26
  3957   001E0E                     __ptext26:
  3958                           	callstack 0
  3959   001E0E                     _I2C_2_Master_Init:
  3960                           	callstack 25
  3961   001E0E                     
  3962                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3963   001E0E  010E               	movlb	14	; () banked
  3964   001E10  51D9               	movf	217,w,b	;volatile
  3965   001E12  0BF0               	andlw	-16
  3966   001E14  0908               	iorlw	8
  3967   001E16  6FD9               	movwf	217,b	;volatile
  3968   001E18                     
  3969                           ; BSR set to: 14
  3970                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3971   001E18  8BD9               	bsf	217,5,b	;volatile
  3972                           
  3973                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3974   001E1A  0E9F               	movlw	159
  3975   001E1C  6FD6               	movwf	214,b	;volatile
  3976   001E1E                     
  3977                           ; BSR set to: 14
  3978                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3979   001E1E  8A84               	bsf	132,5,c	;volatile
  3980   001E20                     
  3981                           ; BSR set to: 14
  3982                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3983   001E20  8C84               	bsf	132,6,c	;volatile
  3984   001E22                     
  3985                           ; BSR set to: 14
  3986                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3987   001E22  9BA7               	bcf	167,5,b	;volatile
  3988   001E24                     
  3989                           ; BSR set to: 14
  3990                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3991   001E24  9DA7               	bcf	167,6,b	;volatile
  3992                           
  3993                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3994   001E26  0E1D               	movlw	29
  3995   001E28  6F1D               	movwf	29,b	;volatile
  3996                           
  3997                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3998   001E2A  0E1E               	movlw	30
  3999   001E2C  6F1C               	movwf	28,b	;volatile
  4000                           
  4001                           ;i2c.c: 18:   RD5PPS=0x1C;
  4002   001E2E  0E1C               	movlw	28
  4003   001E30  6F6F               	movwf	111,b	;volatile
  4004                           
  4005                           ;i2c.c: 19:   RD6PPS=0x1B;
  4006   001E32  0E1B               	movlw	27
  4007   001E34  6F70               	movwf	112,b	;volatile
  4008   001E36                     
  4009                           ; BSR set to: 14
  4010   001E36  0012               	return		;funcret
  4011   001E38                     __end_of_I2C_2_Master_Init:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _LEDSon_init *****************
  4015 ;; Defined at:
  4016 ;;		line 18 in file "LEDsOn.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		None
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;Total ram usage:        0 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; Hardware stack levels required when called: 4
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_main
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text27
  4045   001EAE                     __ptext27:
  4046                           	callstack 0
  4047   001EAE                     _LEDSon_init:
  4048                           	callstack 26
  4049   001EAE                     
  4050                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  4051   001EAE  9288               	bcf	136,1,c	;volatile
  4052                           
  4053                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  4054   001EB0  9088               	bcf	136,0,c	;volatile
  4055                           
  4056                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  4057   001EB2  9884               	bcf	132,4,c	;volatile
  4058                           
  4059                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  4060   001EB4  9684               	bcf	132,3,c	;volatile
  4061                           
  4062                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  4063   001EB6  9086               	bcf	134,0,c	;volatile
  4064                           
  4065                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  4066   001EB8  9287               	bcf	135,1,c	;volatile
  4067                           
  4068                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  4069   001EBA  9E86               	bcf	134,7,c	;volatile
  4070                           
  4071                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  4072   001EBC  9881               	bcf	129,4,c	;volatile
  4073                           
  4074                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  4075   001EBE  8E7E               	bsf	126,7,c	;volatile
  4076                           
  4077                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  4078   001EC0  827F               	bsf	127,1,c	;volatile
  4079                           
  4080                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  4081   001EC2  8879               	bsf	121,4,c	;volatile
  4082                           
  4083                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  4084   001EC4  987C               	bcf	124,4,c	;volatile
  4085                           
  4086                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  4087   001EC6  9280               	bcf	128,1,c	;volatile
  4088                           
  4089                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  4090   001EC8  907E               	bcf	126,0,c	;volatile
  4091                           
  4092                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  4093   001ECA  9080               	bcf	128,0,c	;volatile
  4094                           
  4095                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  4096   001ECC  967C               	bcf	124,3,c	;volatile
  4097   001ECE  0012               	return		;funcret
  4098   001ED0                     __end_of_LEDSon_init:
  4099                           	callstack 0
  4100                           
  4101 ;; *************** function _Interrupts_init *****************
  4102 ;; Defined at:
  4103 ;;		line 7 in file "interrupts.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;Total ram usage:        0 bytes
  4122 ;; Hardware stack levels used: 1
  4123 ;; Hardware stack levels required when called: 8
  4124 ;; This function calls:
  4125 ;;		_enable_color_interrupt
  4126 ;;		_set_interrupt_threshold
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text28
  4133   001DE0                     __ptext28:
  4134                           	callstack 0
  4135   001DE0                     _Interrupts_init:
  4136                           	callstack 22
  4137   001DE0                     
  4138                           ;interrupts.c: 9:     enable_color_interrupt();
  4139   001DE0  ECB3  F00F         	call	_enable_color_interrupt	;wreg free
  4140                           
  4141                           ;interrupts.c: 10:     set_interrupt_threshold(5, 5000, 0b0100);
  4142   001DE4  0E88               	movlw	136
  4143   001DE6  6E09               	movwf	set_interrupt_threshold@AIHT^0,c
  4144   001DE8  0E04               	movlw	4
  4145   001DEA  6E0A               	movwf	set_interrupt_threshold@persistence^0,c
  4146   001DEC  0E05               	movlw	5
  4147   001DEE  EC3D  F00C         	call	_set_interrupt_threshold
  4148   001DF2                     
  4149                           ;interrupts.c: 11:     TRISBbits.TRISB1 = 1;
  4150   001DF2  8282               	bsf	130,1,c	;volatile
  4151   001DF4                     
  4152                           ;interrupts.c: 12:     ANSELBbits.ANSELB1 = 0;
  4153   001DF4  010E               	movlb	14	; () banked
  4154   001DF6  939A               	bcf	154,1,b	;volatile
  4155   001DF8                     
  4156                           ; BSR set to: 14
  4157                           ;interrupts.c: 13:     INT1PPS=0x09;
  4158   001DF8  0E09               	movlw	9
  4159   001DFA  010D               	movlb	13	; () banked
  4160   001DFC  6FF1               	movwf	241,b	;volatile
  4161   001DFE                     
  4162                           ; BSR set to: 13
  4163                           ;interrupts.c: 14:     PIE0bits.INT1IE = 1;
  4164   001DFE  010E               	movlb	14	; () banked
  4165   001E00  8329               	bsf	41,1,b	;volatile
  4166   001E02                     
  4167                           ; BSR set to: 14
  4168                           ;interrupts.c: 15:     IPR0bits.INT1IP = 1;
  4169   001E02  831F               	bsf	31,1,b	;volatile
  4170   001E04                     
  4171                           ; BSR set to: 14
  4172                           ;interrupts.c: 16:     INTCONbits.INT1EDG = 0;
  4173   001E04  92F2               	bcf	242,1,c	;volatile
  4174   001E06                     
  4175                           ; BSR set to: 14
  4176                           ;interrupts.c: 17:     INTCONbits.IPEN = 1;
  4177   001E06  8AF2               	bsf	242,5,c	;volatile
  4178   001E08                     
  4179                           ; BSR set to: 14
  4180                           ;interrupts.c: 18:     INTCONbits.GIEL = 1;
  4181   001E08  8CF2               	bsf	242,6,c	;volatile
  4182   001E0A                     
  4183                           ; BSR set to: 14
  4184                           ;interrupts.c: 19:     INTCONbits.GIEH=1;}
  4185   001E0A  8EF2               	bsf	242,7,c	;volatile
  4186   001E0C                     
  4187                           ; BSR set to: 14
  4188   001E0C  0012               	return		;funcret
  4189   001E0E                     __end_of_Interrupts_init:
  4190                           	callstack 0
  4191                           
  4192 ;; *************** function _set_interrupt_threshold *****************
  4193 ;; Defined at:
  4194 ;;		line 40 in file "interrupts.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;  AILT            1    wreg     unsigned char 
  4197 ;;  AIHT            1    8[COMRAM] unsigned char 
  4198 ;;  persistence     1    9[COMRAM] unsigned char 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  AILT            1   14[COMRAM] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;Total ram usage:        7 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 7
  4217 ;; This function calls:
  4218 ;;		_color_writetoaddr
  4219 ;; This function is called by:
  4220 ;;		_Interrupts_init
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text29
  4225   00187A                     __ptext29:
  4226                           	callstack 0
  4227   00187A                     _set_interrupt_threshold:
  4228                           	callstack 22
  4229                           
  4230                           ; BSR set to: 14
  4231                           ;incstack = 0
  4232                           ;set_interrupt_threshold@AILT stored from wreg
  4233   00187A  6E0F               	movwf	set_interrupt_threshold@AILT^0,c
  4234   00187C                     
  4235                           ;interrupts.c: 42:     color_writetoaddr(0x0C, persistence);
  4236   00187C  C00A  F007         	movff	set_interrupt_threshold@persistence,color_writetoaddr@value
  4237   001880  0E0C               	movlw	12
  4238   001882  EC78  F00F         	call	_color_writetoaddr
  4239   001886                     
  4240                           ;interrupts.c: 43:     color_writetoaddr(0x05, AILT && 0b1111111100000000);
  4241   001886  0E00               	movlw	0
  4242   001888  6E0B               	movwf	_set_interrupt_threshold$1949^0,c
  4243   00188A  500F               	movf	set_interrupt_threshold@AILT^0,w,c
  4244   00188C  B4D8               	btfsc	status,2,c
  4245   00188E  EF4B  F00C         	goto	u1211
  4246   001892  EF4D  F00C         	goto	u1210
  4247   001896                     u1211:
  4248   001896  EF4F  F00C         	goto	l2407
  4249   00189A                     u1210:
  4250   00189A  0E01               	movlw	1
  4251   00189C  6E0B               	movwf	_set_interrupt_threshold$1949^0,c
  4252   00189E                     l2407:
  4253   00189E  C00B  F007         	movff	_set_interrupt_threshold$1949,color_writetoaddr@value
  4254   0018A2  0E05               	movlw	5
  4255   0018A4  EC78  F00F         	call	_color_writetoaddr
  4256   0018A8                     
  4257                           ;interrupts.c: 44:     color_writetoaddr(0x04, AILT && 0b0000000011111111);
  4258   0018A8  0E00               	movlw	0
  4259   0018AA  6E0C               	movwf	_set_interrupt_threshold$1950^0,c
  4260   0018AC  500F               	movf	set_interrupt_threshold@AILT^0,w,c
  4261   0018AE  B4D8               	btfsc	status,2,c
  4262   0018B0  EF5C  F00C         	goto	u1221
  4263   0018B4  EF5E  F00C         	goto	u1220
  4264   0018B8                     u1221:
  4265   0018B8  EF60  F00C         	goto	l2415
  4266   0018BC                     u1220:
  4267   0018BC  0E01               	movlw	1
  4268   0018BE  6E0C               	movwf	_set_interrupt_threshold$1950^0,c
  4269   0018C0                     l2415:
  4270   0018C0  C00C  F007         	movff	_set_interrupt_threshold$1950,color_writetoaddr@value
  4271   0018C4  0E04               	movlw	4
  4272   0018C6  EC78  F00F         	call	_color_writetoaddr
  4273   0018CA                     
  4274                           ;interrupts.c: 45:     color_writetoaddr(0x07, AIHT && 0b1111111100000000);
  4275   0018CA  0E00               	movlw	0
  4276   0018CC  6E0D               	movwf	_set_interrupt_threshold$1951^0,c
  4277   0018CE  5009               	movf	set_interrupt_threshold@AIHT^0,w,c
  4278   0018D0  B4D8               	btfsc	status,2,c
  4279   0018D2  EF6D  F00C         	goto	u1231
  4280   0018D6  EF6F  F00C         	goto	u1230
  4281   0018DA                     u1231:
  4282   0018DA  EF71  F00C         	goto	l2423
  4283   0018DE                     u1230:
  4284   0018DE  0E01               	movlw	1
  4285   0018E0  6E0D               	movwf	_set_interrupt_threshold$1951^0,c
  4286   0018E2                     l2423:
  4287   0018E2  C00D  F007         	movff	_set_interrupt_threshold$1951,color_writetoaddr@value
  4288   0018E6  0E07               	movlw	7
  4289   0018E8  EC78  F00F         	call	_color_writetoaddr
  4290   0018EC                     
  4291                           ;interrupts.c: 46:     color_writetoaddr(0x06, AIHT && 0b0000000011111111);
  4292   0018EC  0E00               	movlw	0
  4293   0018EE  6E0E               	movwf	_set_interrupt_threshold$1952^0,c
  4294   0018F0  5009               	movf	set_interrupt_threshold@AIHT^0,w,c
  4295   0018F2  B4D8               	btfsc	status,2,c
  4296   0018F4  EF7E  F00C         	goto	u1241
  4297   0018F8  EF80  F00C         	goto	u1240
  4298   0018FC                     u1241:
  4299   0018FC  EF82  F00C         	goto	l2431
  4300   001900                     u1240:
  4301   001900  0E01               	movlw	1
  4302   001902  6E0E               	movwf	_set_interrupt_threshold$1952^0,c
  4303   001904                     l2431:
  4304   001904  C00E  F007         	movff	_set_interrupt_threshold$1952,color_writetoaddr@value
  4305   001908  0E06               	movlw	6
  4306   00190A  EC78  F00F         	call	_color_writetoaddr
  4307   00190E  0012               	return		;funcret
  4308   001910                     __end_of_set_interrupt_threshold:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _enable_color_interrupt *****************
  4312 ;; Defined at:
  4313 ;;		line 35 in file "interrupts.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 7
  4334 ;; This function calls:
  4335 ;;		_clear_interrupt_flag
  4336 ;;		_color_writetoaddr
  4337 ;; This function is called by:
  4338 ;;		_Interrupts_init
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text30
  4343   001F66                     __ptext30:
  4344                           	callstack 0
  4345   001F66                     _enable_color_interrupt:
  4346                           	callstack 22
  4347   001F66                     
  4348                           ;interrupts.c: 36:     clear_interrupt_flag();
  4349   001F66  EC94  F00F         	call	_clear_interrupt_flag	;wreg free
  4350                           
  4351                           ;interrupts.c: 37:  color_writetoaddr(0x00, 0b10011);
  4352   001F6A  0E13               	movlw	19
  4353   001F6C  6E07               	movwf	color_writetoaddr@value^0,c
  4354   001F6E  0E00               	movlw	0
  4355   001F70  EC78  F00F         	call	_color_writetoaddr
  4356   001F74  0012               	return		;funcret
  4357   001F76                     __end_of_enable_color_interrupt:
  4358                           	callstack 0
  4359                           
  4360 ;; *************** function _color_writetoaddr *****************
  4361 ;; Defined at:
  4362 ;;		line 21 in file "color.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  address         1    wreg     unsigned char 
  4365 ;;  value           1    6[COMRAM] unsigned char 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  address         1    7[COMRAM] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4381 ;;Total ram usage:        2 bytes
  4382 ;; Hardware stack levels used: 1
  4383 ;; Hardware stack levels required when called: 6
  4384 ;; This function calls:
  4385 ;;		_I2C_2_Master_Start
  4386 ;;		_I2C_2_Master_Stop
  4387 ;;		_I2C_2_Master_Write
  4388 ;; This function is called by:
  4389 ;;		_color_click_init
  4390 ;;		_enable_color_interrupt
  4391 ;;		_set_interrupt_threshold
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text31
  4396   001EF0                     __ptext31:
  4397                           	callstack 0
  4398   001EF0                     _color_writetoaddr:
  4399                           	callstack 23
  4400                           
  4401                           ;incstack = 0
  4402                           ;color_writetoaddr@address stored from wreg
  4403   001EF0  6E08               	movwf	color_writetoaddr@address^0,c
  4404   001EF2                     
  4405                           ;color.c: 22:     I2C_2_Master_Start();
  4406   001EF2  ECD1  F00F         	call	_I2C_2_Master_Start	;wreg free
  4407                           
  4408                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4409   001EF6  0E52               	movlw	82
  4410   001EF8  ECBB  F00F         	call	_I2C_2_Master_Write
  4411                           
  4412                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4413   001EFC  5008               	movf	color_writetoaddr@address^0,w,c
  4414   001EFE  0980               	iorlw	128
  4415   001F00  ECBB  F00F         	call	_I2C_2_Master_Write
  4416                           
  4417                           ;color.c: 25:     I2C_2_Master_Write(value);
  4418   001F04  5007               	movf	color_writetoaddr@value^0,w,c
  4419   001F06  ECBB  F00F         	call	_I2C_2_Master_Write
  4420                           
  4421                           ;color.c: 26:     I2C_2_Master_Stop();
  4422   001F0A  ECCC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4423   001F0E  0012               	return		;funcret
  4424   001F10                     __end_of_color_writetoaddr:
  4425                           	callstack 0
  4426                           
  4427 ;; *************** function _clear_interrupt_flag *****************
  4428 ;; Defined at:
  4429 ;;		line 49 in file "interrupts.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 6
  4450 ;; This function calls:
  4451 ;;		_I2C_2_Master_Start
  4452 ;;		_I2C_2_Master_Stop
  4453 ;;		_I2C_2_Master_Write
  4454 ;; This function is called by:
  4455 ;;		_enable_color_interrupt
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text32
  4460   001F28                     __ptext32:
  4461                           	callstack 0
  4462   001F28                     _clear_interrupt_flag:
  4463                           	callstack 22
  4464   001F28                     
  4465                           ;interrupts.c: 50:     I2C_2_Master_Start();
  4466   001F28  ECD1  F00F         	call	_I2C_2_Master_Start	;wreg free
  4467                           
  4468                           ;interrupts.c: 51:     I2C_2_Master_Write(0x52 | 0x00);
  4469   001F2C  0E52               	movlw	82
  4470   001F2E  ECBB  F00F         	call	_I2C_2_Master_Write
  4471                           
  4472                           ;interrupts.c: 52:     I2C_2_Master_Write(0b11100110);
  4473   001F32  0EE6               	movlw	230
  4474   001F34  ECBB  F00F         	call	_I2C_2_Master_Write
  4475                           
  4476                           ;interrupts.c: 53:     I2C_2_Master_Stop();
  4477   001F38  ECCC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4478   001F3C  0012               	return		;funcret
  4479   001F3E                     __end_of_clear_interrupt_flag:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _I2C_2_Master_Write *****************
  4483 ;; Defined at:
  4484 ;;		line 45 in file "i2c.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  data_byte       1    wreg     unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  data_byte       1    5[COMRAM] unsigned char 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;Total ram usage:        1 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 5
  4505 ;; This function calls:
  4506 ;;		_I2C_2_Master_Idle
  4507 ;; This function is called by:
  4508 ;;		_color_writetoaddr
  4509 ;;		_color_read_Red
  4510 ;;		_color_read_Green
  4511 ;;		_color_read_Blue
  4512 ;;		_color_read_Clear
  4513 ;;		_clear_interrupt_flag
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text33
  4518   001F76                     __ptext33:
  4519                           	callstack 0
  4520   001F76                     _I2C_2_Master_Write:
  4521                           	callstack 24
  4522                           
  4523                           ;incstack = 0
  4524                           ;I2C_2_Master_Write@data_byte stored from wreg
  4525   001F76  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  4526   001F78                     
  4527                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4528   001F78  EC1C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4529   001F7C                     
  4530                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4531   001F7C  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4532   001F80  0012               	return		;funcret
  4533   001F82                     __end_of_I2C_2_Master_Write:
  4534                           	callstack 0
  4535                           
  4536 ;; *************** function _I2C_2_Master_Stop *****************
  4537 ;; Defined at:
  4538 ;;		line 39 in file "i2c.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4556 ;;Total ram usage:        0 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; Hardware stack levels required when called: 5
  4559 ;; This function calls:
  4560 ;;		_I2C_2_Master_Idle
  4561 ;; This function is called by:
  4562 ;;		_color_writetoaddr
  4563 ;;		_color_read_Red
  4564 ;;		_color_read_Green
  4565 ;;		_color_read_Blue
  4566 ;;		_color_read_Clear
  4567 ;;		_clear_interrupt_flag
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text34
  4572   001F98                     __ptext34:
  4573                           	callstack 0
  4574   001F98                     _I2C_2_Master_Stop:
  4575                           	callstack 24
  4576   001F98                     
  4577                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4578   001F98  EC1C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4579   001F9C                     
  4580                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4581   001F9C  010E               	movlb	14	; () banked
  4582   001F9E  85DA               	bsf	218,2,b	;volatile
  4583   001FA0                     
  4584                           ; BSR set to: 14
  4585   001FA0  0012               	return		;funcret
  4586   001FA2                     __end_of_I2C_2_Master_Stop:
  4587                           	callstack 0
  4588                           
  4589 ;; *************** function _I2C_2_Master_Start *****************
  4590 ;; Defined at:
  4591 ;;		line 27 in file "i2c.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;Total ram usage:        0 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; Hardware stack levels required when called: 5
  4612 ;; This function calls:
  4613 ;;		_I2C_2_Master_Idle
  4614 ;; This function is called by:
  4615 ;;		_color_writetoaddr
  4616 ;;		_color_read_Red
  4617 ;;		_color_read_Green
  4618 ;;		_color_read_Blue
  4619 ;;		_color_read_Clear
  4620 ;;		_clear_interrupt_flag
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text35
  4625   001FA2                     __ptext35:
  4626                           	callstack 0
  4627   001FA2                     _I2C_2_Master_Start:
  4628                           	callstack 24
  4629   001FA2                     
  4630                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4631   001FA2  EC1C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4632   001FA6                     
  4633                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4634   001FA6  010E               	movlb	14	; () banked
  4635   001FA8  81DA               	bsf	218,0,b	;volatile
  4636   001FAA                     
  4637                           ; BSR set to: 14
  4638   001FAA  0012               	return		;funcret
  4639   001FAC                     __end_of_I2C_2_Master_Start:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function _I2C_2_Master_Idle *****************
  4643 ;; Defined at:
  4644 ;;		line 22 in file "i2c.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;Total ram usage:        1 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 4
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_I2C_2_Master_Start
  4669 ;;		_I2C_2_Master_RepStart
  4670 ;;		_I2C_2_Master_Stop
  4671 ;;		_I2C_2_Master_Write
  4672 ;;		_I2C_2_Master_Read
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text36
  4677   001E38                     __ptext36:
  4678                           	callstack 0
  4679   001E38                     _I2C_2_Master_Idle:
  4680                           	callstack 24
  4681   001E38                     l145:
  4682   001E38  010E               	movlb	14	; () banked
  4683   001E3A  B5D8               	btfsc	216,2,b	;volatile
  4684   001E3C  EF22  F00F         	goto	u851
  4685   001E40  EF24  F00F         	goto	u850
  4686   001E44                     u851:
  4687   001E44  EF1C  F00F         	goto	l145
  4688   001E48                     u850:
  4689   001E48                     
  4690                           ; BSR set to: 14
  4691   001E48  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4692   001E4C  0E1F               	movlw	31
  4693   001E4E  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  4694   001E50  A4D8               	btfss	status,2,c
  4695   001E52  EF2D  F00F         	goto	u861
  4696   001E56  EF2F  F00F         	goto	u860
  4697   001E5A                     u861:
  4698   001E5A  EF1C  F00F         	goto	l145
  4699   001E5E                     u860:
  4700   001E5E                     
  4701                           ; BSR set to: 14
  4702   001E5E  0012               	return		;funcret
  4703   001E60                     __end_of_I2C_2_Master_Idle:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function _HighISR *****************
  4707 ;; Defined at:
  4708 ;;		line 21 in file "interrupts.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0, cstack
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;Total ram usage:        2 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; Hardware stack levels required when called: 3
  4729 ;; This function calls:
  4730 ;;		i2_clear_interrupt_flag
  4731 ;; This function is called by:
  4732 ;;		Interrupt level 2
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	intcode
  4737   000008                     __pintcode:
  4738                           	callstack 0
  4739   000008                     _HighISR:
  4740                           	callstack 19
  4741                           
  4742                           ; BSR set to: 14
  4743                           ;incstack = 0
  4744   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4745   00000A                     
  4746                           ;interrupts.c: 24:     if(PIR0bits.INT1IF == 1) {
  4747   00000A  010E               	movlb	14	; () banked
  4748   00000C  A333               	btfss	51,1,b	;volatile
  4749   00000E  EF0B  F000         	goto	i2u152_41
  4750   000012  EF0D  F000         	goto	i2u152_40
  4751   000016                     i2u152_41:
  4752   000016  EF2B  F000         	goto	i2l459
  4753   00001A                     i2u152_40:
  4754   00001A                     
  4755                           ; BSR set to: 14
  4756                           ;interrupts.c: 25:         LATDbits.LATD7=1;
  4757   00001A  8E7C               	bsf	124,7,c	;volatile
  4758   00001C                     
  4759                           ; BSR set to: 14
  4760                           ;interrupts.c: 26:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4761   00001C  0E05               	movlw	5
  4762   00001E  6E04               	movwf	(??_HighISR+1)^0,c
  4763   000020  0E0F               	movlw	15
  4764   000022  6E03               	movwf	??_HighISR^0,c
  4765   000024  0EF1               	movlw	241
  4766   000026                     i2u195_47:
  4767   000026  2EE8               	decfsz	wreg,f,c
  4768   000028  D7FE               	bra	i2u195_47
  4769   00002A  2E03               	decfsz	??_HighISR^0,f,c
  4770   00002C  D7FC               	bra	i2u195_47
  4771   00002E  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4772   000030  D7FA               	bra	i2u195_47
  4773   000032  F000               	nop	
  4774   000034                     
  4775                           ;interrupts.c: 27:         LATDbits.LATD7=0;
  4776   000034  9E7C               	bcf	124,7,c	;volatile
  4777                           
  4778                           ;interrupts.c: 28:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4779   000036  0E05               	movlw	5
  4780   000038  6E04               	movwf	(??_HighISR+1)^0,c
  4781   00003A  0E0F               	movlw	15
  4782   00003C  6E03               	movwf	??_HighISR^0,c
  4783   00003E  0EF1               	movlw	241
  4784   000040                     i2u196_47:
  4785   000040  2EE8               	decfsz	wreg,f,c
  4786   000042  D7FE               	bra	i2u196_47
  4787   000044  2E03               	decfsz	??_HighISR^0,f,c
  4788   000046  D7FC               	bra	i2u196_47
  4789   000048  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4790   00004A  D7FA               	bra	i2u196_47
  4791   00004C  F000               	nop	
  4792   00004E                     
  4793                           ;interrupts.c: 29:         clear_interrupt_flag();
  4794   00004E  EC9F  F00F         	call	i2_clear_interrupt_flag	;wreg free
  4795   000052                     
  4796                           ;interrupts.c: 30:         PIR0bits.INT1IF = 0;
  4797   000052  010E               	movlb	14	; () banked
  4798   000054  9333               	bcf	51,1,b	;volatile
  4799   000056                     i2l459:
  4800                           
  4801                           ; BSR set to: 14
  4802   000056  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4803   000058  0011               	retfie		f
  4804   00005A                     __end_of_HighISR:
  4805                           	callstack 0
  4806                           
  4807 ;; *************** function i2_clear_interrupt_flag *****************
  4808 ;; Defined at:
  4809 ;;		line 49 in file "interrupts.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4827 ;;Total ram usage:        0 bytes
  4828 ;; Hardware stack levels used: 1
  4829 ;; Hardware stack levels required when called: 2
  4830 ;; This function calls:
  4831 ;;		i2_I2C_2_Master_Start
  4832 ;;		i2_I2C_2_Master_Stop
  4833 ;;		i2_I2C_2_Master_Write
  4834 ;; This function is called by:
  4835 ;;		_HighISR
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text38
  4840   001F3E                     __ptext38:
  4841                           	callstack 0
  4842   001F3E                     i2_clear_interrupt_flag:
  4843                           	callstack 19
  4844   001F3E                     
  4845                           ;interrupts.c: 50:     I2C_2_Master_Start();
  4846   001F3E  ECDB  F00F         	call	i2_I2C_2_Master_Start	;wreg free
  4847                           
  4848                           ;interrupts.c: 51:     I2C_2_Master_Write(0x52 | 0x00);
  4849   001F42  0E52               	movlw	82
  4850   001F44  ECC1  F00F         	call	i2_I2C_2_Master_Write
  4851                           
  4852                           ;interrupts.c: 52:     I2C_2_Master_Write(0b11100110);
  4853   001F48  0EE6               	movlw	230
  4854   001F4A  ECC1  F00F         	call	i2_I2C_2_Master_Write
  4855                           
  4856                           ;interrupts.c: 53:     I2C_2_Master_Stop();
  4857   001F4E  ECD6  F00F         	call	i2_I2C_2_Master_Stop	;wreg free
  4858   001F52  0012               	return		;funcret
  4859   001F54                     __end_ofi2_clear_interrupt_flag:
  4860                           	callstack 0
  4861                           
  4862 ;; *************** function i2_I2C_2_Master_Write *****************
  4863 ;; Defined at:
  4864 ;;		line 45 in file "i2c.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  data_byte       1    wreg     unsigned char 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  data_byte       1    1[COMRAM] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;Total ram usage:        1 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 1
  4885 ;; This function calls:
  4886 ;;		i2_I2C_2_Master_Idle
  4887 ;; This function is called by:
  4888 ;;		i2_clear_interrupt_flag
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text39
  4893   001F82                     __ptext39:
  4894                           	callstack 0
  4895   001F82                     i2_I2C_2_Master_Write:
  4896                           	callstack 19
  4897                           
  4898                           ;incstack = 0
  4899                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  4900   001F82  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  4901   001F84                     
  4902                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4903   001F84  EC30  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4904   001F88                     
  4905                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4906   001F88  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  4907   001F8C  0012               	return		;funcret
  4908   001F8E                     __end_ofi2_I2C_2_Master_Write:
  4909                           	callstack 0
  4910                           
  4911 ;; *************** function i2_I2C_2_Master_Stop *****************
  4912 ;; Defined at:
  4913 ;;		line 39 in file "i2c.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;Total ram usage:        0 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 1
  4934 ;; This function calls:
  4935 ;;		i2_I2C_2_Master_Idle
  4936 ;; This function is called by:
  4937 ;;		i2_clear_interrupt_flag
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text40
  4942   001FAC                     __ptext40:
  4943                           	callstack 0
  4944   001FAC                     i2_I2C_2_Master_Stop:
  4945                           	callstack 19
  4946   001FAC                     
  4947                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4948   001FAC  EC30  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4949   001FB0                     
  4950                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4951   001FB0  010E               	movlb	14	; () banked
  4952   001FB2  85DA               	bsf	218,2,b	;volatile
  4953   001FB4                     
  4954                           ; BSR set to: 14
  4955   001FB4  0012               	return		;funcret
  4956   001FB6                     __end_ofi2_I2C_2_Master_Stop:
  4957                           	callstack 0
  4958                           
  4959 ;; *************** function i2_I2C_2_Master_Start *****************
  4960 ;; Defined at:
  4961 ;;		line 27 in file "i2c.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, status,0, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4979 ;;Total ram usage:        0 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; Hardware stack levels required when called: 1
  4982 ;; This function calls:
  4983 ;;		i2_I2C_2_Master_Idle
  4984 ;; This function is called by:
  4985 ;;		i2_clear_interrupt_flag
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text41
  4990   001FB6                     __ptext41:
  4991                           	callstack 0
  4992   001FB6                     i2_I2C_2_Master_Start:
  4993                           	callstack 19
  4994   001FB6                     
  4995                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4996   001FB6  EC30  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4997   001FBA                     
  4998                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4999   001FBA  010E               	movlb	14	; () banked
  5000   001FBC  81DA               	bsf	218,0,b	;volatile
  5001   001FBE                     
  5002                           ; BSR set to: 14
  5003   001FBE  0012               	return		;funcret
  5004   001FC0                     __end_ofi2_I2C_2_Master_Start:
  5005                           	callstack 0
  5006                           
  5007 ;; *************** function i2_I2C_2_Master_Idle *****************
  5008 ;; Defined at:
  5009 ;;		line 22 in file "i2c.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5027 ;;Total ram usage:        1 bytes
  5028 ;; Hardware stack levels used: 1
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		i2_I2C_2_Master_Start
  5033 ;;		i2_I2C_2_Master_Stop
  5034 ;;		i2_I2C_2_Master_Write
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text42
  5039   001E60                     __ptext42:
  5040                           	callstack 0
  5041   001E60                     i2_I2C_2_Master_Idle:
  5042                           	callstack 19
  5043   001E60                     i2l145:
  5044   001E60  010E               	movlb	14	; () banked
  5045   001E62  B5D8               	btfsc	216,2,b	;volatile
  5046   001E64  EF36  F00F         	goto	i2u116_41
  5047   001E68  EF38  F00F         	goto	i2u116_40
  5048   001E6C                     i2u116_41:
  5049   001E6C  EF30  F00F         	goto	i2l145
  5050   001E70                     i2u116_40:
  5051   001E70                     
  5052                           ; BSR set to: 14
  5053   001E70  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5054   001E74  0E1F               	movlw	31
  5055   001E76  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5056   001E78  A4D8               	btfss	status,2,c
  5057   001E7A  EF41  F00F         	goto	i2u117_41
  5058   001E7E  EF43  F00F         	goto	i2u117_40
  5059   001E82                     i2u117_41:
  5060   001E82  EF30  F00F         	goto	i2l145
  5061   001E86                     i2u117_40:
  5062   001E86                     
  5063                           ; BSR set to: 14
  5064   001E86  0012               	return		;funcret
  5065   001E88                     __end_ofi2_I2C_2_Master_Idle:
  5066                           	callstack 0
  5067                           
  5068                           	psect	rparam
  5069   000000                     
  5070                           	psect	temp
  5071   00005B                     btemp:
  5072                           	callstack 0
  5073   00005B                     	ds	1
  5074   000000                     int$flags	set	btemp
  5075   000000                     wtemp8	set	btemp+1
  5076   000000                     ttemp5	set	btemp+1
  5077   000000                     ttemp6	set	btemp+4
  5078   000000                     ttemp7	set	btemp+8
  5079                           
  5080                           	psect	idloc
  5081                           
  5082                           ;Config register IDLOC0 @ 0x200000
  5083                           ;	unspecified, using default values
  5084   200000                     	org	2097152
  5085   200000  0FFF               	dw	4095
  5086                           
  5087                           ;Config register IDLOC1 @ 0x200002
  5088                           ;	unspecified, using default values
  5089   200002                     	org	2097154
  5090   200002  0FFF               	dw	4095
  5091                           
  5092                           ;Config register IDLOC2 @ 0x200004
  5093                           ;	unspecified, using default values
  5094   200004                     	org	2097156
  5095   200004  0FFF               	dw	4095
  5096                           
  5097                           ;Config register IDLOC3 @ 0x200006
  5098                           ;	unspecified, using default values
  5099   200006                     	org	2097158
  5100   200006  0FFF               	dw	4095
  5101                           
  5102                           ;Config register IDLOC4 @ 0x200008
  5103                           ;	unspecified, using default values
  5104   200008                     	org	2097160
  5105   200008  0FFF               	dw	4095
  5106                           
  5107                           ;Config register IDLOC5 @ 0x20000A
  5108                           ;	unspecified, using default values
  5109   20000A                     	org	2097162
  5110   20000A  0FFF               	dw	4095
  5111                           
  5112                           ;Config register IDLOC6 @ 0x20000C
  5113                           ;	unspecified, using default values
  5114   20000C                     	org	2097164
  5115   20000C  0FFF               	dw	4095
  5116                           
  5117                           ;Config register IDLOC7 @ 0x20000E
  5118                           ;	unspecified, using default values
  5119   20000E                     	org	2097166
  5120   20000E  0FFF               	dw	4095
  5121                           
  5122                           	psect	config
  5123                           
  5124                           ;Config register CONFIG1L @ 0x300000
  5125                           ;	External Oscillator mode Selection bits
  5126                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5127                           ;	Power-up default value for COSC bits
  5128                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5129   300000                     	org	3145728
  5130   300000  AA                 	db	170
  5131                           
  5132                           ;Config register CONFIG1H @ 0x300001
  5133                           ;	unspecified, using default values
  5134                           ;	Clock Out Enable bit
  5135                           ;	CLKOUTEN = 0x1, unprogrammed default
  5136                           ;	Clock Switch Enable bit
  5137                           ;	CSWEN = 0x1, unprogrammed default
  5138                           ;	Fail-Safe Clock Monitor Enable bit
  5139                           ;	FCMEN = 0x1, unprogrammed default
  5140   300001                     	org	3145729
  5141   300001  FF                 	db	255
  5142                           
  5143                           ;Config register CONFIG2L @ 0x300002
  5144                           ;	unspecified, using default values
  5145                           ;	Master Clear Enable bit
  5146                           ;	MCLRE = 0x1, unprogrammed default
  5147                           ;	Power-up Timer Enable bit
  5148                           ;	PWRTE = 0x1, unprogrammed default
  5149                           ;	Low-power BOR enable bit
  5150                           ;	LPBOREN = 0x1, unprogrammed default
  5151                           ;	Brown-out Reset Enable bits
  5152                           ;	BOREN = 0x3, unprogrammed default
  5153   300002                     	org	3145730
  5154   300002  FF                 	db	255
  5155                           
  5156                           ;Config register CONFIG2H @ 0x300003
  5157                           ;	unspecified, using default values
  5158                           ;	Brown Out Reset Voltage selection bits
  5159                           ;	BORV = 0x3, unprogrammed default
  5160                           ;	ZCD Disable bit
  5161                           ;	ZCD = 0x1, unprogrammed default
  5162                           ;	PPSLOCK bit One-Way Set Enable bit
  5163                           ;	PPS1WAY = 0x1, unprogrammed default
  5164                           ;	Stack Full/Underflow Reset Enable bit
  5165                           ;	STVREN = 0x1, unprogrammed default
  5166                           ;	Debugger Enable bit
  5167                           ;	DEBUG = 0x1, unprogrammed default
  5168                           ;	Extended Instruction Set Enable bit
  5169                           ;	XINST = 0x1, unprogrammed default
  5170   300003                     	org	3145731
  5171   300003  FF                 	db	255
  5172                           
  5173                           ;Config register CONFIG3L @ 0x300004
  5174                           ;	WDT Period Select bits
  5175                           ;	WDTCPS = 0x1F, unprogrammed default
  5176                           ;	WDT operating mode
  5177                           ;	WDTE = OFF, WDT Disabled
  5178   300004                     	org	3145732
  5179   300004  9F                 	db	159
  5180                           
  5181                           ;Config register CONFIG3H @ 0x300005
  5182                           ;	unspecified, using default values
  5183                           ;	WDT Window Select bits
  5184                           ;	WDTCWS = 0x7, unprogrammed default
  5185                           ;	WDT input clock selector
  5186                           ;	WDTCCS = 0x7, unprogrammed default
  5187   300005                     	org	3145733
  5188   300005  FF                 	db	255
  5189                           
  5190                           ;Config register CONFIG4L @ 0x300006
  5191                           ;	unspecified, using default values
  5192                           ;	Write Protection Block 0
  5193                           ;	WRT0 = 0x1, unprogrammed default
  5194                           ;	Write Protection Block 1
  5195                           ;	WRT1 = 0x1, unprogrammed default
  5196                           ;	Write Protection Block 2
  5197                           ;	WRT2 = 0x1, unprogrammed default
  5198                           ;	Write Protection Block 3
  5199                           ;	WRT3 = 0x1, unprogrammed default
  5200                           ;	Write Protection Block 3
  5201                           ;	WRT4 = 0x1, unprogrammed default
  5202                           ;	Write Protection Block 3
  5203                           ;	WRT5 = 0x1, unprogrammed default
  5204                           ;	Write Protection Block 3
  5205                           ;	WRT6 = 0x1, unprogrammed default
  5206                           ;	Write Protection Block 3
  5207                           ;	WRT7 = 0x1, unprogrammed default
  5208   300006                     	org	3145734
  5209   300006  FF                 	db	255
  5210                           
  5211                           ;Config register CONFIG4H @ 0x300007
  5212                           ;	unspecified, using default values
  5213                           ;	Configuration Register Write Protection bit
  5214                           ;	WRTC = 0x1, unprogrammed default
  5215                           ;	Boot Block Write Protection bit
  5216                           ;	WRTB = 0x1, unprogrammed default
  5217                           ;	Data EEPROM Write Protection bit
  5218                           ;	WRTD = 0x1, unprogrammed default
  5219                           ;	Scanner Enable bit
  5220                           ;	SCANE = 0x1, unprogrammed default
  5221                           ;	Low Voltage Programming Enable bit
  5222                           ;	LVP = 0x1, unprogrammed default
  5223   300007                     	org	3145735
  5224   300007  FF                 	db	255
  5225                           
  5226                           ;Config register CONFIG5L @ 0x300008
  5227                           ;	unspecified, using default values
  5228                           ;	UserNVM Program Memory Code Protection bit
  5229                           ;	CP = 0x1, unprogrammed default
  5230                           ;	DataNVM Memory Code Protection bit
  5231                           ;	CPD = 0x1, unprogrammed default
  5232   300008                     	org	3145736
  5233   300008  FF                 	db	255
  5234                           
  5235                           ;Config register CONFIG5H @ 0x300009
  5236                           ;	unspecified, using default values
  5237   300009                     	org	3145737
  5238   300009  FF                 	db	255
  5239                           
  5240                           ;Config register CONFIG6L @ 0x30000A
  5241                           ;	unspecified, using default values
  5242                           ;	Table Read Protection Block 0
  5243                           ;	EBTR0 = 0x1, unprogrammed default
  5244                           ;	Table Read Protection Block 1
  5245                           ;	EBTR1 = 0x1, unprogrammed default
  5246                           ;	Table Read Protection Block 2
  5247                           ;	EBTR2 = 0x1, unprogrammed default
  5248                           ;	Table Read Protection Block 3
  5249                           ;	EBTR3 = 0x1, unprogrammed default
  5250                           ;	Table Read Protection Block 4
  5251                           ;	EBTR4 = 0x1, unprogrammed default
  5252                           ;	Table Read Protection Block 5
  5253                           ;	EBTR5 = 0x1, unprogrammed default
  5254                           ;	Table Read Protection Block 6
  5255                           ;	EBTR6 = 0x1, unprogrammed default
  5256                           ;	Table Read Protection Block 7
  5257                           ;	EBTR7 = 0x1, unprogrammed default
  5258   30000A                     	org	3145738
  5259   30000A  FF                 	db	255
  5260                           
  5261                           ;Config register CONFIG6H @ 0x30000B
  5262                           ;	unspecified, using default values
  5263                           ;	Boot Block Table Read Protection bit
  5264                           ;	EBTRB = 0x1, unprogrammed default
  5265   30000B                     	org	3145739
  5266   30000B  FF                 	db	255
  5267                           tosu	equ	0xFFF
  5268                           tosh	equ	0xFFE
  5269                           tosl	equ	0xFFD
  5270                           stkptr	equ	0xFFC
  5271                           pclatu	equ	0xFFB
  5272                           pclath	equ	0xFFA
  5273                           pcl	equ	0xFF9
  5274                           tblptru	equ	0xFF8
  5275                           tblptrh	equ	0xFF7
  5276                           tblptrl	equ	0xFF6
  5277                           tablat	equ	0xFF5
  5278                           prodh	equ	0xFF4
  5279                           prodl	equ	0xFF3
  5280                           indf0	equ	0xFEF
  5281                           postinc0	equ	0xFEE
  5282                           postdec0	equ	0xFED
  5283                           preinc0	equ	0xFEC
  5284                           plusw0	equ	0xFEB
  5285                           fsr0h	equ	0xFEA
  5286                           fsr0l	equ	0xFE9
  5287                           wreg	equ	0xFE8
  5288                           indf1	equ	0xFE7
  5289                           postinc1	equ	0xFE6
  5290                           postdec1	equ	0xFE5
  5291                           preinc1	equ	0xFE4
  5292                           plusw1	equ	0xFE3
  5293                           fsr1h	equ	0xFE2
  5294                           fsr1l	equ	0xFE1
  5295                           bsr	equ	0xFE0
  5296                           indf2	equ	0xFDF
  5297                           postinc2	equ	0xFDE
  5298                           postdec2	equ	0xFDD
  5299                           preinc2	equ	0xFDC
  5300                           plusw2	equ	0xFDB
  5301                           fsr2h	equ	0xFDA
  5302                           fsr2l	equ	0xFD9
  5303                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        18
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     98     141
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2442$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2393$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2393$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    S525DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    S525DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _Interrupts_init->_set_interrupt_threshold
    _set_interrupt_threshold->_color_writetoaddr
    _enable_color_interrupt->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _clear_interrupt_flag->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    i2_clear_interrupt_flag->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                92    92      0   14665
                                             31 BANK0     67    67      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _LEDSon_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7586
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7100
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6639
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5072
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     453
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3045
                                             17 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1422
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0    1880
             _enable_color_interrupt
            _set_interrupt_threshold
 ---------------------------------------------------------------------------------
 (2) _set_interrupt_threshold                              7     5      2    1108
                                              8 COMRAM     7     5      2
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _enable_color_interrupt                               0     0      0     772
               _clear_interrupt_flag
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _clear_interrupt_flag                                 0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
             i2_clear_interrupt_flag
 ---------------------------------------------------------------------------------
 (10) i2_clear_interrupt_flag                              0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
     _enable_color_interrupt
       _clear_interrupt_flag
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _set_interrupt_threshold
       _color_writetoaddr
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   i2_clear_interrupt_flag
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     62      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRllhhhl     37      0       0      43        0.0%
BITBIGSFRhhhl       32      0       0      33        0.0%
BITBIGSFRllhhhl     2D      0       0      46        0.0%
BITBIGSFRllllhl     2A      0       0      54        0.0%
BITBIGSFRllllll     23      0       0      61        0.0%
BITBIGSFRhhlllh     17      0       0      37        0.0%
BITBIGSFRllhhhl     11      0       0      48        0.0%
BITBIGSFRllhhl      11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      34        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllhhhl      C      0       0      47        0.0%
BITBIGSFRllllhl      9      0       0      58        0.0%
BITBIGSFRllhhhl      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      60        0.0%
BITBIGSFRllllhh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRlllhl       5      0       0      52        0.0%
BITBIGSFRhhllll      5      0       0      38        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      57        0.0%
BITBIGSFRlllhh       3      0       0      51        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      36        0.0%
BITBIGSFRllllll      2      0       0      62        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllllhl      1      0       0      59        0.0%
BITBIGSFRllhhhl      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      35        0.0%
BITBIGSFRllhl        1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     143      63        0.0%
DATA                 0      0     143       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 05 11:12:44 2022

                    _color_read_Red 1B2C                     _color_read_Blue 1C1C  
                                l22 1F0E                                  l31 1C6A  
                                l25 1B7A                                  l34 1C1A  
                                l19 1DAE                                  l28 1BCA  
                                l86 1388                                  l79 1996  
               ___wmul@multiplicand 0007                    _color_read_Clear 1BCC  
                  _color_read_Green 1B7C                   ??_Interrupts_init 0010  
                               l142 1E36                                 l230 141C  
                               l151 1FAA                                 l231 141A  
                               l160 1F80                                 l232 142A  
                               l145 1E38                                 l154 1F96  
                               l163 1D3A                                 l148 1E5E  
                               l157 1FA0                                 l259 1ECE  
                               l380 1F26                                 l453 1E0C  
                               l462 1F74                                 l606 1650  
                               l368 1EEE                                 l473 190E  
                               l377 1F12                                 l386 1DDE  
                               l476 1F3C                                 l479 1EAC  
                               l593 121C                                 l970 1A7C  
                               l977 1A84                                 u850 1E48  
                               u851 1E44                                 u860 1E5E  
                               u861 1E5A                                 _abs 1D3C  
                               _pad 1998                                 wreg 000FE8  
                              ?_abs 0017                                l1222 1AD8  
                              l1216 17AE                                l3001 1832  
                              l1209 1094                                l1154 1D72  
                              l1234 1878                                l1242 1CF8  
                              l3011 1CD8                                l1164 1B2A  
                              l3021 10A8                                l1157 1D7A  
                              l3013 1D3C                                l1245 1FC0  
                              l3005 1CB6                                l3101 19B2  
                              l1190 1A10                                l3031 10FE  
                              l3023 10C8                                l3015 1D56  
                              l3007 1CC2                                l3103 19C6  
                              l3111 0E18                                l2161 1E48  
                              l2401 1886                                l3041 1152  
                              l3033 110A                                l3025 10CC  
                              l3017 1096                                l3009 1CD4  
                              l3105 19DA                                l3121 0E98  
                              l3113 0E38                                l1186 19BA  
                              l2411 18AC                                l2403 188A  
                              l3051 11C6                                l3043 1164  
                              l3035 1128                                l3027 10DA  
                              l3019 109A                                l3107 19DE  
                              l3131 0EE6                                l3123 0EB4  
                              l1195 0EA4                                l3115 0E4C  
                              l3211 1B18                                l3203 1ADA  
                              l2261 1FA2                                l2325 1EF2  
                              l2421 18DE                                l2413 18BC  
                              l2405 189A                                l2501 1BC2  
                              l3045 1192                                l3037 1130  
                              l3053 11CC                                l3029 10FA  
                              l3061 14EE                                l3109 19FC  
                              l3141 0F8C                                l3133 0EEE  
                              l3125 0EC4                                l1197 0EAC  
                              l3117 0E5C                                l3205 1AEC  
                              l3221 1396                                l1198 0EF2  
                              l2159 1E38                                l2263 1FA6  
                              l2271 1F9C                                l2327 1F28  
                              l2431 1904                                l2423 18E2  
                              l2415 18C0                                l2407 189E  
                              l2511 1BCC                                l3055 11DC  
                              l3047 11B2                                l3039 1144  
                              l3071 1532                                l3063 14F2  
                              l3151 1034                                l3143 0F92  
                              l3135 0EFA                                l3127 0ECA  
                              l3119 0E7C                                l3207 1AF4  
                              l3231 13BC                                l3223 139A  
                              l3215 138A                                l2265 1F78  
                              l2425 18EC                                l2417 18CA  
                              l2409 18A8                                l2505 1C1C  
                              l2513 1C12                                l2521 1942  
                              l2441 1A1A                                l2433 1E88  
                              l3057 11FC                                l3049 11B4  
                              l3081 159A                                l3073 1552  
                              l3065 1500                                l3153 104E  
                              l3145 0F98                                l3137 0F04  
                              l3129 0EDA                                l3209 1AFC  
                              l3241 13EC                                l3233 13C4  
                              l3225 139E                                l3217 138E  
                              l2267 1F7C                                l2427 18F0  
                              l2419 18CE                                l2371 1E22  
                              l2363 1E0E                                l2507 1C62  
                              l2531 197E                                l2523 1966  
                              l2451 1A50                                l2443 1A2C  
                              l2435 1EA4                                l3091 1610  
                              l3083 15C8                                l3075 1570  
                              l3067 1520                                l3155 105E  
                              l3139 0F0A                                l3147 0FFC  
                              l3171 169A                                l3163 1652  
                              l3251 1416                                l3243 13F8  
                              l3235 13D6                                l3227 13A2  
                              l3219 1392                                l2269 1F98  
                              l2429 1900                                l2373 1E24  
                              l2365 1E18                                l2381 1D00  
                              l2533 1988                                l2525 1970  
                              l2517 1910                                l2621 1ED0  
                              l2453 1A66                                l2445 1A34  
                              l2541 123A                                l3093 1630  
                              l3085 15E8                                l3077 1578  
                              l3069 1524                                l3157 1064  
                              l3149 1016                                l3173 16AA  
                              l3165 167A                                l3261 14A4  
                              l3253 1416                                l3245 1404  
                              l3237 13DE                                l3229 13B4  
                              l2367 1E1E                                l2383 1D08  
                              l2375 1F8E                                l2535 198A  
                              l2527 1972                                l2519 1918  
                              l2631 1EEA                                l2623 1EDA  
                              l2455 1A6E                                l2447 1A3C  
                              l2439 1A12                                l2551 1304  
                              l2543 128E                                l3087 15FA  
                              l3079 158C                                l3159 1074  
                              l3183 1770                                l3175 16CA  
                              l3167 1688                                l3263 14BE  
                              l3255 1432                                l3247 1416  
                              l3239 13E6                                l2641 1DF8  
                              l2369 1E20                                l2385 1D10  
                              l2377 1F92                                l2537 1994  
                              l2529 197C                                l2633 1EEC  
                              l2625 1EDC                                l2393 1F12  
                              l2457 1A70                                l2449 1A4A  
                              l2553 1348                                l2545 12A2  
                              l3089 1600                                l3097 1998  
                              l3177 16EA                                l3169 1696  
                              l3193 1A86                                l3257 1462  
                              l3249 1416                                l2651 1E08  
                              l2643 1DFE                                l2635 1DE0  
                              l2619 1EAE                                l2491 1DA4  
                              l2483 1D7C                                l2387 1D36  
                              l2379 1CFC                                l2627 1EDE  
                              l2395 1F22                                l2459 1A76  
                              l2547 12A6                                l2539 121E  
                              l3099 19A6                                l3179 1740  
                              l3187 1782                                l3195 1A92  
                              l3259 1498                                l2397 1F66  
                              l2653 1E0A                                l2645 1E02  
                              l2637 1DF2                                l2485 1D80  
                              l2389 1D38                                l2493 1B2C  
                              l2629 1EE8                                l2549 12E8  
                              l3197 1AAE                                l2399 187C  
                              l2647 1E04                                l2639 1DF4  
                              l2487 1D8A                                l2495 1B72  
                              l2671 1DC2                                l3199 1ACE  
                              l2649 1E06                                l2489 1D9A  
                              l2673 1DC6                                l2499 1B7C  
                              l2667 1DB0                                l2669 1DB4  
                              ?_pad 0015                                l2991 17B0  
                              l2993 17C2                                l2995 17D4  
                              l2997 17DE                                l2999 17FC  
                              STR_1 0E01                                u1200 1F22  
                              u1201 1F1E                                u1210 189A  
                              u1211 1896                                u1220 18BC  
                              u1300 1304                        ?_LEDSon_init 0001  
                              u1221 18B8                                u1301 1300  
                              u1230 18DE                                u1231 18DA  
                              u1240 1900                                u1241 18FC  
                              u1250 1A2C                                u1251 1A28  
                              u1180 1D24                                u1260 1A4A  
                              u1181 1D1C                                u1261 1A46  
                              u1270 1A66                                u1271 1A62  
                              u1360 1DDE                                u1600 10DA  
                      _BAUD4CONbits 000EE9                                u1361 1DDA  
                              u1601 10D6                                u1290 123A  
                              u1530 17C2                                u1291 1236  
                              u1611 1104                                u1531 17BE  
                              u1620 1128                                u1700 15C8  
                              u1540 17D4                                u1621 1124  
                              u1701 15C4                                u1541 17D0  
                              u1198 1D26                                u1630 1152  
                              u1710 1610                                u1550 17FC  
                              u1631 114E                                u1711 160C  
                              u1551 17F8                                u1640 1192  
                              u1560 1832                                u1720 19A6  
                              u1800 1016                                u1641 118E  
                              u1561 182E                                u1721 19A2  
                              u1801 1012                                u1650 11DC  
                              u1570 1CF8                                u1730 19FC  
                              u1810 1034                                _T2PR 000FBC  
                              u1651 11D8                                u1571 1CF4  
                              u1731 19F8                                u1811 1030  
                              u1660 1500                                u1580 1D56  
                              u1820 104E                                u1740 0E48  
                              u1900 14D2                                u1661 14FC  
                              u1581 1D52                                u1821 104A  
                              u1741 0E42                                u1901 14C8  
                              u1590 10A8                                u1670 1532  
                              u1830 105E                                u1750 0E4A  
                              u1591 10A4                                u1671 152E  
                              u1831 105A                                u1680 1570  
                              u1760 0E5C                                u1840 167A  
                              u1681 156C                                u1761 0E58  
                              u1841 1676                                u1690 159A  
                              u1770 0E98                                u1850 16CA  
                              u1691 1596                                u1771 0E94  
                              u1851 16C6                                u1780 0EC4  
                              u1860 16EA                                u1781 0EC0  
                              u1861 16E6                                u1790 0EDA  
                              u1870 1ACE                                u1918 14D6  
                              u1791 0ED6                                u1871 1ACA  
                              u1937 14B0                                u1881 140E  
                              u1890 142A                                u1947 1D90  
                              u1891 1426                                abs@a 0017  
                              _dbuf 013C                                _main 138A  
                              _dtoa 0E18                                _prec 00D8  
                              pad@i 001C                                pad@p 0019  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 001E                                fsr2l 000FD9  
                              btemp 005B                                prodh 000FF4  
                              prodl 000FF3                                start 005A  
            __end_of_color_read_Red 1B7C                     __end_of_HighISR 005A  
                      ___param_bank 000000                               ??_abs 0019  
                             ??_pad 001B                     __end_of___aodiv 121E  
                             ?_main 0001                               ?_dtoa 0020  
                   __end_of___aomod 1652                     __end_of___lwdiv 1A86  
                             i2l151 1FBE                               i2l160 1F8C  
                             i2l145 1E60                               i2l148 1E86  
                             i2l157 1FB4                               i2l459 0056  
                             i2l476 1F52                        vfpfcnvrt@fmt 0045  
           ?_enable_color_interrupt 0001                        main@red_read 00A7  
           __end_of_sendCharSerial4 1F28          __end_of_I2C_2_Master_Start 1FAC  
        __end_of_I2C_2_Master_Write 1F82                               _flags 00DA  
                             _fputc 17B0                               _fputs 1CB6  
                             pad@fp 0015                               _width 00D6  
                             _putch 1FC0                               dtoa@d 0022  
                             dtoa@i 0041                               dtoa@n 0038  
                             dtoa@p 0034                               dtoa@s 0040  
                             dtoa@w 0036                               tablat 000FF5  
                             plusw1 000FE3                               plusw2 000FDB  
                             ttemp5 005C                               ttemp6 005F  
                             ttemp7 0063                               status 000FD8  
                             wtemp8 005C                     __end_of_sprintf 1B2C  
           __end_of_color_read_Blue 1C6C               _I2C_2_Master_RepStart 1F8E  
                   ?_color_read_Red 0009                     __initialization 1C6C  
                      __end_of_main 14EE                        __end_of_dtoa 1096  
    __end_of_enable_color_interrupt 1F76                              ??_main 007F  
                            ??_dtoa 002A                       __activetblptr 000003  
                     main@blue_read 00AB                        ?_setMotorPWM 0012  
                            ?_fputc 0005                              ?_fputs 000E  
                            _CCPR1H 000FAA                              _CCPR2H 000FA6  
                            _CCPR3H 000F25                              _CCPR4H 000F21  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              _RE4PPS 000E76  
                            i2l2361 1E70                              i2l2359 1E60  
                            i2l2471 1FB6                              i2l2473 1FBA  
                            i2l2481 1F88                              i2l2475 1FAC  
                            i2l2477 1FB0                              i2l2479 1F84  
                            i2l2683 1F3E                              _RG6PPS 000E88  
                            i2l2981 001A                              i2l2983 001C  
                            i2l2985 0034                              i2l2987 004E  
                            i2l2979 000A                              i2l2989 0052  
                         ??_HighISR 0003            __end_of_color_click_init 1DB0  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                      _CCPTMRS0bits 000FAD                        vfprintf@cfmt 0055  
                         ??___aodiv 0015                           ??___aomod 0015  
                            ___wmul 1E88                           ??___lwdiv 000F  
                            clear_0 1C92                              clear_1 1C9E  
                            isa$std 000001                              pad@buf 0017  
                            dtoa@fp 0020        __end_of_clear_interrupt_flag 1F3E  
                            fputc@c 0005                              fputs@c 0012  
                            fputs@i 0013                              fputs@s 000E  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                  ?_sendCharSerial4 0001                              putch@c 0001  
                  __end_of_vfprintf 1ADA                   ??_initDCmotorsPWM 0005  
                         ??_sprintf 0057             ?i2_clear_interrupt_flag 0001  
                        __accesstop 0060             __end_of__initialization 1CAC  
          __end_of_color_read_Clear 1C1C            __end_of_color_read_Green 1BCC  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                  ?_color_read_Blue 0009                     _Interrupts_init 1DE0  
                    __pcstackCOMRAM 0001                        __pidataBANK0 1F54  
           _set_interrupt_threshold 187A                       __end_of_fputc 187A  
                     __end_of_fputs 1CFA                       __end_of_putch 1FC2  
                    main@clear_read 00AD      __end_ofi2_clear_interrupt_flag 1F54  
                           ??_fputc 0009                             ??_fputs 0012  
                           ??_putch 0005                          __pbssBANK0 00C2  
                        __pbssBANK1 0100                   _color_writetoaddr 1EF0  
                      _T2CLKCONbits 000FBF                  ?_color_writetoaddr 0007  
                           ?___wmul 0005                 ??_color_writetoaddr 0008  
                           _INT1PPS 000DF1                      main@green_read 00A9  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
       set_interrupt_threshold@AIHT 0009         set_interrupt_threshold@AILT 000F  
           __end_of_Interrupts_init 1E0E              color_writetoaddr@value 0007  
                  ??_color_read_Red 000B                             _HighISR 0008  
         __end_of_color_writetoaddr 1F10                _clear_interrupt_flag 1F28  
                _I2C_2_Master_Start 1FA2                          _initUSART4 1ED0  
               i2_I2C_2_Master_Idle 1E60                  _I2C_2_Master_Write 1F76  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 1FAC  
                           __Lparam 0000                   color_read_Red@tmp 000E  
         ??_set_interrupt_threshold 000B             sendStringSerial4@string 0006  
                           ___aodiv 1096                             ___aomod 14EE  
               ?_I2C_2_Master_Start 0001                             ___lwdiv 1A12  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 0060  
                      __psmallconst 0E00                             __pcinit 1C6C  
                           __ramtop 0E00                             __ptext0 138A  
                           __ptext1 1ADA                             __ptext2 1A86  
                           __ptext3 1652                             __ptext4 0E18  
                           __ptext5 1998                             __ptext6 1CB6  
                           __ptext7 17B0                             __ptext8 1FC0  
                           __ptext9 1D3C                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                ?i2_I2C_2_Master_Stop 0001  
                         _T2HLTbits 000FBE                       _RxBufWriteCnt 005A  
                           main@buf 0093                             _sprintf 1ADA  
              ??_I2C_2_Master_Start 0006                ??_I2C_2_Master_Write 0006  
              end_of_initialization 1CAC                             fputc@fp 0007  
                           fputs@fp 0010                   ?_color_click_init 0001  
             ?_clear_interrupt_flag 0001                  ??_color_click_init 0009  
                 __end_of_vfpfcnvrt 17B0                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                  vfpfcnvrt@convarg 004B                          main@F14641 00DB  
                        ??_vfprintf 0055                     _initDCmotorsPWM 1910  
                         _PORTFbits 000F8E                  setMotorPWM@negDuty 0017  
             ??i2_I2C_2_Master_Idle 0001               ??i2_I2C_2_Master_Stop 0002  
   __end_of_set_interrupt_threshold 1910                           _TRISAbits 000F81  
                setMotorPWM@posDuty 0016                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
               main@expected_values 0081            color_writetoaddr@address 0008  
           ??_I2C_2_Master_RepStart 0006                    ?_Interrupts_init 0001  
                       _CCP1CONbits 000FAB                   ?_color_read_Clear 0009  
                      _EUSART4RXbuf 00C2                        _EUSART4TXbuf 0100  
                       _CCP2CONbits 000FA7                   ?_color_read_Green 0009  
                       _CCP3CONbits 000F26                         ?_initUSART4 0001  
                       _CCP4CONbits 000F22           sendCharSerial4@charToSend 0005  
                        main@motorL 00B0                          main@motorR 00B9  
                ??_color_read_Clear 000B                  ??_color_read_Green 000B  
                       vfpfcnvrt@ap 0047                         vfpfcnvrt@cp 0053  
                       vfpfcnvrt@fp 0043                      __end_of___wmul 1EAE  
               color_read_Clear@tmp 000E                 start_initialization 1C6C  
                       __end_of_abs 1D7C                         __end_of_pad 1A12  
                     _TxBufWriteCnt 0058                       ??_LEDSon_init 0005  
            ??_clear_interrupt_flag 0007                 color_read_Green@tmp 000E  
           __end_of_initDCmotorsPWM 1998                         vfprintf@fmt 0062  
          ??_enable_color_interrupt 0009                            ??___wmul 0009  
                       __pdataBANK0 00DB       i2I2C_2_Master_Write@data_byte 0002  
      __end_ofi2_I2C_2_Master_Start 1FC0        __end_ofi2_I2C_2_Master_Write 1F8E  
                       __pbssCOMRAM 0057                       __pcstackBANK0 0060  
                  ___aodiv@dividend 0005                            ?_HighISR 0001  
               __end_of_LEDSon_init 1ED0                    ___lwdiv@dividend 000B  
                         _dtoa$2470 0032                           __pintcode 0008  
                          ?___aodiv 0005                            ?___aomod 0005  
                  ___aodiv@quotient 0017                            ?___lwdiv 000B  
              I2C_2_Master_Read@ack 0007                I2C_2_Master_Read@tmp 0008  
                       __smallconst 0E00                   _I2C_2_Master_Idle 1E38  
                 _I2C_2_Master_Init 1E0E                   _I2C_2_Master_Read 1CFA  
                 _I2C_2_Master_Stop 1F98                        _RxBufReadCnt 0059  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0014  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000F  
                          ?_sprintf 0066                   _sendStringSerial4 1DB0  
               ??_I2C_2_Master_Idle 0005                 ??_I2C_2_Master_Init 0005  
               ??_I2C_2_Master_Read 0006  set_interrupt_threshold@persistence 000A  
                    ___wmul@product 0009                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0006                            _LATDbits 000F7C  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                  ?_sendStringSerial4 0006  
                          _PIE4bits 000E2D                            i2u116_40 1E70  
                          i2u116_41 1E6C                            i2u117_40 1E86  
                          i2u117_41 1E82                            i2u152_40 001A  
                          i2u152_41 0016                            _PIR0bits 000E33  
                          i2u195_47 0026                            i2u196_47 0040  
                          _PIR4bits 000E37                    ?_initDCmotorsPWM 0001  
                 ??_sendCharSerial4 0005                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 0008                            _SSP2STAT 000ED8  
                         _vfpfcnvrt 1652           __end_of_I2C_2_Master_Idle 1E60  
         __end_of_I2C_2_Master_Init 1E38           __end_of_I2C_2_Master_Read 1D3C  
                 ___wmul@multiplier 0005           __end_of_I2C_2_Master_Stop 1FA2  
          ??i2_clear_interrupt_flag 0003                        setMotorPWM@m 0012  
       I2C_2_Master_Write@data_byte 0006                   ??_color_read_Blue 000B  
                      _TxBufReadCnt 0057                           copy_data0 1C80  
         __end_of_sendStringSerial4 1DE0                         _LEDSon_init 1EAE  
     __end_of_I2C_2_Master_RepStart 1F98                  color_read_Blue@tmp 000E  
          ?_set_interrupt_threshold 0009                 __end_of_setMotorPWM 138A  
                      ??_initUSART4 0005                i2_I2C_2_Master_Start 1FB6  
              i2_I2C_2_Master_Write 1F82                            __Hrparam 0000  
                        vfprintf@ap 0064                            __Lrparam 0000  
                        vfprintf@fp 0060         __end_ofi2_I2C_2_Master_Idle 1E88  
       __end_ofi2_I2C_2_Master_Stop 1FB6                          ?_vfpfcnvrt 0043  
                   ___aodiv@divisor 000D                     ___aodiv@counter 0015  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        sprintf@fmt 0068                     ___lwdiv@divisor 000D  
                __end_of_initUSART4 1EF0                     ___lwdiv@counter 0011  
                          __ptext10 14EE                            __ptext11 1096  
                          __ptext20 1B7C                            __ptext12 121E  
                          __ptext21 1BCC                            __ptext13 1E88  
            _enable_color_interrupt 1F66                            __ptext30 1F66  
                          __ptext22 1C1C                            __ptext14 1A12  
                          __ptext31 1EF0                            __ptext23 1F8E  
                          __ptext15 1DB0                            __ptext40 1FAC  
                          __ptext32 1F28                            __ptext24 1CFA  
                          __ptext16 1F10                            __ptext41 1FB6  
                          __ptext33 1F76                            __ptext25 1D7C  
                          __ptext17 1ED0                            __ptext42 1E60  
                          __ptext34 1F98                            __ptext26 1E0E  
                          __ptext18 1910                            __ptext35 1FA2  
                          __ptext27 1EAE                            __ptext19 1B2C  
                          __ptext36 1E38                            __ptext28 1DE0  
                          __ptext29 187A                            __ptext38 1F3E  
                          __ptext39 1F82                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 005B  
                          _vfprintf 1A86                    ___aomod@dividend 0005  
                        _INTCONbits 000FF2        _set_interrupt_threshold$1950 000C  
      _set_interrupt_threshold$1951 000D        _set_interrupt_threshold$1952 000E  
      _set_interrupt_threshold$1949 000B                         _setMotorPWM 121E  
                          intlevel2 0000                           sprintf@ap 0072  
                   ___aomod@divisor 000D                         ??_vfpfcnvrt 0049  
                   ___aomod@counter 0015                    _color_click_init 1D7C  
                          sprintf@f 0074                            sprintf@s 0066  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                        _TX4STAbits 000EE8                        ___aodiv@sign 0016  
                   _sendCharSerial4 1F10              ??i2_I2C_2_Master_Start 0002  
            ??i2_I2C_2_Master_Write 0002              i2_clear_interrupt_flag 1F3E  
                      ___aomod@sign 0016                        main@PWMcycle 00AF  
