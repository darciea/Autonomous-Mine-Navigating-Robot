

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 09 09:22:27 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Version 2.35
    64                           ; Generated 05/05/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F67K40 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99                           	psect	idataBANK0
   100   001F34                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for main@F14641
   104   001F34  32C8               	dw	13000
   105   001F36  0A28               	dw	2600
   106   001F38  0708               	dw	1800
   107   001F3A  20D0               	dw	8400
   108   001F3C  1964               	dw	6500
   109   001F3E  1388               	dw	5000
   110   001F40  1130               	dw	4400
   111   001F42  0708               	dw	1800
   112   001F44  0AF0               	dw	2800
   113   000000                     _TRISBbits	set	3970
   114   000000                     _TX4REG	set	3812
   115   000000                     _RC4STAbits	set	3815
   116   000000                     _SP4BRGH	set	3814
   117   000000                     _LATGbits	set	3967
   118   000000                     _TRISAbits	set	3969
   119   000000                     _TRISFbits	set	3974
   120   000000                     _TRISDbits	set	3972
   121   000000                     _TRISGbits	set	3975
   122   000000                     _SSP2CON2bits	set	3802
   123   000000                     _INT1PPS	set	3569
   124   000000                     _RX4PPS	set	3605
   125   000000                     _SSP2CLKPPS	set	3612
   126   000000                     _SSP2DATPPS	set	3613
   127   000000                     _RC7PPS	set	3689
   128   000000                     _RE2PPS	set	3700
   129   000000                     _TRISCbits	set	3971
   130   000000                     _TRISEbits	set	3973
   131   000000                     _TRISHbits	set	3976
   132   000000                     _PORTFbits	set	3982
   133   000000                     _T2PR	set	4028
   134   000000                     _T2CONbits	set	4029
   135   000000                     _CCPR2H	set	4006
   136   000000                     _CCPR1H	set	4010
   137   000000                     _RE4PPS	set	3702
   138   000000                     _RG6PPS	set	3720
   139   000000                     _RD5PPS	set	3695
   140   000000                     _ANSELBbits	set	3738
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _CCPR4H	set	3873
   145   000000                     _CCPR3H	set	3877
   146   000000                     _INTCONbits	set	4082
   147   000000                     _T2CLKCONbits	set	4031
   148   000000                     _T2HLTbits	set	4030
   149   000000                     _CCP1CONbits	set	4011
   150   000000                     _CCPTMRS0bits	set	4013
   151   000000                     _CCP2CONbits	set	4007
   152   000000                     _LATAbits	set	3961
   153   000000                     _LATDbits	set	3964
   154   000000                     _LATHbits	set	3968
   155   000000                     _CCP3CONbits	set	3878
   156   000000                     _CCP4CONbits	set	3874
   157   000000                     _RC4REG	set	3811
   158   000000                     _SP4BRGL	set	3813
   159   000000                     _TX4STAbits	set	3816
   160   000000                     _BAUD4CONbits	set	3817
   161   000000                     _SSP2CON2	set	3802
   162   000000                     _SSP2STAT	set	3800
   163   000000                     _SSP2BUF	set	3797
   164   000000                     _IPR0bits	set	3615
   165   000000                     _PIE0bits	set	3625
   166   000000                     _PIE4bits	set	3629
   167   000000                     _PIR4bits	set	3639
   168   000000                     _RC0PPS	set	3682
   169   000000                     _RD6PPS	set	3696
   170   000000                     _LATFbits	set	3966
   171   000000                     _PIR0bits	set	3635
   172                           
   173                           	psect	smallconst
   174   000E00                     __psmallconst:
   175                           	callstack 0
   176   000E00  00                 	db	0
   177   000E01                     STR_1:
   178                           
   179                           ; BSR set to: 14
   180   000E01  52                 	db	82	;'R'
   181   000E02  61                 	db	97	;'a'
   182   000E03  77                 	db	119	;'w'
   183   000E04  20                 	db	32
   184   000E05  25                 	db	37
   185   000E06  64                 	db	100	;'d'
   186   000E07  2C                 	db	44
   187   000E08  20                 	db	32
   188   000E09  25                 	db	37
   189   000E0A  64                 	db	100	;'d'
   190   000E0B  2C                 	db	44
   191   000E0C  20                 	db	32
   192   000E0D  25                 	db	37
   193   000E0E  64                 	db	100	;'d'
   194   000E0F  2C                 	db	44
   195   000E10  20                 	db	32
   196   000E11  25                 	db	37
   197   000E12  64                 	db	100	;'d'
   198   000E13  20                 	db	32
   199   000E14  0A                 	db	10
   200   000E15  00                 	db	0
   201   000E16  00                 	db	0	; dummy byte at the end
   202   000000                     
   203                           ; #config settings
   204                           
   205                           	psect	cinit
   206   001C3E                     __pcinit:
   207                           	callstack 0
   208   001C3E                     start_initialization:
   209                           	callstack 0
   210   001C3E                     __initialization:
   211                           	callstack 0
   212                           
   213                           ; Initialize objects allocated to BANK0 (18 bytes)
   214                           ; load TBLPTR registers with __pidataBANK0
   215   001C3E  0E34               	movlw	low __pidataBANK0
   216   001C40  6EF6               	movwf	tblptrl,c
   217   001C42  0E1F               	movlw	high __pidataBANK0
   218   001C44  6EF7               	movwf	tblptrh,c
   219   001C46  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   220   001C48  6EF8               	movwf	tblptru,c
   221   001C4A  EE00  F0DB         	lfsr	0,__pdataBANK0
   222   001C4E  EE10 F012          	lfsr	1,18
   223   001C52                     copy_data0:
   224   001C52  0009               	tblrd		*+
   225   001C54  CFF5 FFEE          	movff	tablat,postinc0
   226   001C58  50E5               	movf	postdec1,w,c
   227   001C5A  50E1               	movf	fsr1l,w,c
   228   001C5C  E1FA               	bnz	copy_data0
   229                           
   230                           ; Clear objects allocated to BANK1 (92 bytes)
   231   001C5E  EE01  F000         	lfsr	0,__pbssBANK1
   232   001C62  0E5C               	movlw	92
   233   001C64                     clear_0:
   234   001C64  6AEE               	clrf	postinc0,c
   235   001C66  06E8               	decf	wreg,f,c
   236   001C68  E1FD               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to BANK0 (25 bytes)
   239   001C6A  EE00  F0C2         	lfsr	0,__pbssBANK0
   240   001C6E  0E19               	movlw	25
   241   001C70                     clear_1:
   242   001C70  6AEE               	clrf	postinc0,c
   243   001C72  06E8               	decf	wreg,f,c
   244   001C74  E1FD               	bnz	clear_1
   245                           
   246                           ; Clear objects allocated to COMRAM (4 bytes)
   247   001C76  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   248   001C78  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   249   001C7A  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   250   001C7C  6A57               	clrf	__pbssCOMRAM& (0+255),c
   251   001C7E                     end_of_initialization:
   252                           	callstack 0
   253   001C7E                     __end_of__initialization:
   254                           	callstack 0
   255   001C7E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   256   001C80  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   257   001C82  0100               	movlb	0
   258   001C84  EFC5  F009         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMRAM
   261   000057                     __pbssCOMRAM:
   262                           	callstack 0
   263   000057                     _TxBufReadCnt:
   264                           	callstack 0
   265   000057                     	ds	1
   266   000058                     _TxBufWriteCnt:
   267                           	callstack 0
   268   000058                     	ds	1
   269   000059                     _RxBufReadCnt:
   270                           	callstack 0
   271   000059                     	ds	1
   272   00005A                     _RxBufWriteCnt:
   273                           	callstack 0
   274   00005A                     	ds	1
   275                           
   276                           	psect	bssBANK0
   277   0000C2                     __pbssBANK0:
   278                           	callstack 0
   279   0000C2                     _EUSART4RXbuf:
   280                           	callstack 0
   281   0000C2                     	ds	20
   282   0000D6                     _width:
   283                           	callstack 0
   284   0000D6                     	ds	2
   285   0000D8                     _prec:
   286                           	callstack 0
   287   0000D8                     	ds	2
   288   0000DA                     _flags:
   289                           	callstack 0
   290   0000DA                     	ds	1
   291                           
   292                           	psect	dataBANK0
   293   0000DB                     __pdataBANK0:
   294                           	callstack 0
   295   0000DB                     main@F14641:
   296                           	callstack 0
   297   0000DB                     	ds	18
   298                           
   299                           	psect	bssBANK1
   300   000100                     __pbssBANK1:
   301                           	callstack 0
   302   000100                     _EUSART4TXbuf:
   303                           	callstack 0
   304   000100                     	ds	60
   305   00013C                     _dbuf:
   306                           	callstack 0
   307   00013C                     	ds	32
   308                           
   309                           	psect	cstackBANK0
   310   000060                     __pcstackBANK0:
   311                           	callstack 0
   312   000060                     ?_vfprintf:
   313                           	callstack 0
   314   000060                     vfprintf@fp:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x0
   318   000060                     	ds	2
   319   000062                     vfprintf@fmt:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x2
   323   000062                     	ds	2
   324   000064                     vfprintf@ap:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x4
   328   000064                     	ds	2
   329   000066                     ?_sprintf:
   330                           	callstack 0
   331   000066                     sprintf@s:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x6
   335   000066                     	ds	2
   336   000068                     sprintf@fmt:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x8
   340   000068                     	ds	10
   341   000072                     sprintf@ap:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x12
   345   000072                     	ds	2
   346   000074                     sprintf@f:
   347                           	callstack 0
   348                           
   349                           ; 11 bytes @ 0x14
   350   000074                     	ds	11
   351   00007F                     ??_main:
   352                           
   353                           ; 1 bytes @ 0x1F
   354   00007F                     	ds	2
   355   000081                     main@expected_values:
   356                           	callstack 0
   357                           
   358                           ; 18 bytes @ 0x21
   359   000081                     	ds	18
   360   000093                     main@buf:
   361                           	callstack 0
   362                           
   363                           ; 20 bytes @ 0x33
   364   000093                     	ds	20
   365   0000A7                     main@red_read:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x47
   369   0000A7                     	ds	2
   370   0000A9                     main@green_read:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x49
   374   0000A9                     	ds	2
   375   0000AB                     main@blue_read:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x4B
   379   0000AB                     	ds	2
   380   0000AD                     main@clear_read:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x4D
   384   0000AD                     	ds	2
   385   0000AF                     main@PWMcycle:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x4F
   389   0000AF                     	ds	1
   390   0000B0                     main@motorL:
   391                           	callstack 0
   392                           
   393                           ; 9 bytes @ 0x50
   394   0000B0                     	ds	9
   395   0000B9                     main@motorR:
   396                           	callstack 0
   397                           
   398                           ; 9 bytes @ 0x59
   399   0000B9                     	ds	9
   400                           
   401                           	psect	cstackCOMRAM
   402   000001                     __pcstackCOMRAM:
   403                           	callstack 0
   404   000001                     ??i2_I2C_2_Master_Idle:
   405   000001                     
   406                           ; 1 bytes @ 0x0
   407   000001                     	ds	1
   408   000002                     i2I2C_2_Master_Write@data_byte:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x1
   412   000002                     	ds	1
   413   000003                     ??_HighISR:
   414   000003                     
   415                           ; 1 bytes @ 0x2
   416   000003                     	ds	2
   417   000005                     ??_I2C_2_Master_Idle:
   418   000005                     ?___wmul:
   419                           	callstack 0
   420   000005                     ?___aodiv:
   421                           	callstack 0
   422   000005                     ?___aomod:
   423                           	callstack 0
   424   000005                     sendCharSerial4@charToSend:
   425                           	callstack 0
   426   000005                     ___wmul@multiplier:
   427                           	callstack 0
   428   000005                     fputc@c:
   429                           	callstack 0
   430   000005                     ___aodiv@dividend:
   431                           	callstack 0
   432   000005                     ___aomod@dividend:
   433                           	callstack 0
   434                           
   435                           ; 8 bytes @ 0x4
   436   000005                     	ds	1
   437   000006                     ??_I2C_2_Master_Read:
   438   000006                     I2C_2_Master_Write@data_byte:
   439                           	callstack 0
   440   000006                     sendStringSerial4@string:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x5
   444   000006                     	ds	1
   445   000007                     color_writetoaddr@value:
   446                           	callstack 0
   447   000007                     I2C_2_Master_Read@ack:
   448                           	callstack 0
   449   000007                     ___wmul@multiplicand:
   450                           	callstack 0
   451   000007                     fputc@fp:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x6
   455   000007                     	ds	1
   456   000008                     color_writetoaddr@address:
   457                           	callstack 0
   458   000008                     I2C_2_Master_Read@tmp:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x7
   462   000008                     	ds	1
   463   000009                     ??_fputc:
   464   000009                     ??_color_click_init:
   465   000009                     ?_color_read_Red:
   466                           	callstack 0
   467   000009                     ?_color_read_Green:
   468                           	callstack 0
   469   000009                     ?_color_read_Blue:
   470                           	callstack 0
   471   000009                     ?_color_read_Clear:
   472                           	callstack 0
   473   000009                     set_interrupt_threshold@AILT:
   474                           	callstack 0
   475   000009                     ___wmul@product:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x8
   479   000009                     	ds	2
   480   00000B                     ??_color_read_Red:
   481   00000B                     ??_color_read_Green:
   482   00000B                     ??_color_read_Blue:
   483   00000B                     ??_color_read_Clear:
   484   00000B                     ?___lwdiv:
   485                           	callstack 0
   486   00000B                     set_interrupt_threshold@AIHT:
   487                           	callstack 0
   488   00000B                     ___lwdiv@dividend:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0xA
   492   00000B                     	ds	2
   493   00000D                     set_interrupt_threshold@persistence:
   494                           	callstack 0
   495   00000D                     ___lwdiv@divisor:
   496                           	callstack 0
   497   00000D                     ___aodiv@divisor:
   498                           	callstack 0
   499   00000D                     ___aomod@divisor:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0xC
   503   00000D                     	ds	1
   504   00000E                     color_read_Red@tmp:
   505                           	callstack 0
   506   00000E                     color_read_Green@tmp:
   507                           	callstack 0
   508   00000E                     color_read_Blue@tmp:
   509                           	callstack 0
   510   00000E                     color_read_Clear@tmp:
   511                           	callstack 0
   512   00000E                     fputs@s:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0xD
   516   00000E                     	ds	1
   517   00000F                     _set_interrupt_threshold$1949:
   518                           	callstack 0
   519   00000F                     ___lwdiv@quotient:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xE
   523   00000F                     	ds	1
   524   000010                     _set_interrupt_threshold$1950:
   525                           	callstack 0
   526   000010                     fputs@fp:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xF
   530   000010                     	ds	1
   531   000011                     ___lwdiv@counter:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x10
   535   000011                     	ds	1
   536   000012                     fputs@c:
   537                           	callstack 0
   538   000012                     setMotorPWM@m:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x11
   542   000012                     	ds	1
   543   000013                     fputs@i:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x12
   547   000013                     	ds	1
   548   000014                     ??_setMotorPWM:
   549                           
   550                           ; 1 bytes @ 0x13
   551   000014                     	ds	1
   552   000015                     ___aodiv@counter:
   553                           	callstack 0
   554   000015                     ___aomod@counter:
   555                           	callstack 0
   556   000015                     pad@fp:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x14
   560   000015                     	ds	1
   561   000016                     setMotorPWM@posDuty:
   562                           	callstack 0
   563   000016                     ___aodiv@sign:
   564                           	callstack 0
   565   000016                     ___aomod@sign:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x15
   569   000016                     	ds	1
   570   000017                     ?_abs:
   571                           	callstack 0
   572   000017                     setMotorPWM@negDuty:
   573                           	callstack 0
   574   000017                     abs@a:
   575                           	callstack 0
   576   000017                     pad@buf:
   577                           	callstack 0
   578   000017                     ___aodiv@quotient:
   579                           	callstack 0
   580                           
   581                           ; 8 bytes @ 0x16
   582   000017                     	ds	2
   583   000019                     ??_abs:
   584   000019                     pad@p:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x18
   588   000019                     	ds	2
   589   00001B                     ??_pad:
   590                           
   591                           ; 1 bytes @ 0x1A
   592   00001B                     	ds	1
   593   00001C                     pad@i:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x1B
   597   00001C                     	ds	2
   598   00001E                     pad@w:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x1D
   602   00001E                     	ds	2
   603   000020                     dtoa@fp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x1F
   607   000020                     	ds	2
   608   000022                     dtoa@d:
   609                           	callstack 0
   610                           
   611                           ; 8 bytes @ 0x21
   612   000022                     	ds	8
   613   00002A                     ??_dtoa:
   614                           
   615                           ; 1 bytes @ 0x29
   616   00002A                     	ds	8
   617   000032                     _dtoa$2468:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x31
   621   000032                     	ds	2
   622   000034                     dtoa@p:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x33
   626   000034                     	ds	2
   627   000036                     dtoa@w:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x35
   631   000036                     	ds	2
   632   000038                     dtoa@n:
   633                           	callstack 0
   634                           
   635                           ; 8 bytes @ 0x37
   636   000038                     	ds	8
   637   000040                     dtoa@s:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x3F
   641   000040                     	ds	1
   642   000041                     dtoa@i:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x40
   646   000041                     	ds	2
   647   000043                     vfpfcnvrt@fp:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x42
   651   000043                     	ds	2
   652   000045                     vfpfcnvrt@fmt:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x44
   656   000045                     	ds	2
   657   000047                     vfpfcnvrt@ap:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x46
   661   000047                     	ds	2
   662   000049                     ??_vfpfcnvrt:
   663                           
   664                           ; 1 bytes @ 0x48
   665   000049                     	ds	2
   666   00004B                     vfpfcnvrt@convarg:
   667                           	callstack 0
   668                           
   669                           ; 8 bytes @ 0x4A
   670   00004B                     	ds	8
   671   000053                     vfpfcnvrt@cp:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x52
   675   000053                     	ds	2
   676   000055                     vfprintf@cfmt:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x54
   680   000055                     	ds	2
   681   000057                     
   682                           ; 1 bytes @ 0x56
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 21 in file "main.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  buf            20   51[BANK0 ] unsigned char [20]
   693 ;;  expected_val   18   33[BANK0 ] unsigned int [3][3]
   694 ;;  normalised_v   18    0        unsigned int [3][3]
   695 ;;  motorR          9   89[BANK0 ] struct DC_motor
   696 ;;  motorL          9   80[BANK0 ] struct DC_motor
   697 ;;  master_close    6    0        unsigned int [3]
   698 ;;  clear_read      2   77[BANK0 ] unsigned int 
   699 ;;  blue_read       2   75[BANK0 ] unsigned int 
   700 ;;  green_read      2   73[BANK0 ] unsigned int 
   701 ;;  red_read        2   71[BANK0 ] unsigned int 
   702 ;;  PWMcycle        1   79[BANK0 ] unsigned char 
   703 ;;  card            1    0        enum E14569
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   714 ;;      Locals:         0      65       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   715 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   716 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   717 ;;Total ram usage:       67 bytes
   718 ;; Hardware stack levels required when called: 12
   719 ;; This function calls:
   720 ;;		_I2C_2_Master_Init
   721 ;;		_Interrupts_init
   722 ;;		_LEDSon_init
   723 ;;		_color_click_init
   724 ;;		_color_read_Blue
   725 ;;		_color_read_Clear
   726 ;;		_color_read_Green
   727 ;;		_color_read_Red
   728 ;;		_initDCmotorsPWM
   729 ;;		_initUSART4
   730 ;;		_sendStringSerial4
   731 ;;		_setMotorPWM
   732 ;;		_sprintf
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text0
   739   00138A                     __ptext0:
   740                           	callstack 0
   741   00138A                     _main:
   742                           	callstack 19
   743   00138A                     
   744                           ;main.c: 26:     LEDSon_init();
   745   00138A  EC47  F00F         	call	_LEDSon_init	;wreg free
   746   00138E                     
   747                           ;main.c: 27:     I2C_2_Master_Init();
   748   00138E  ECF7  F00E         	call	_I2C_2_Master_Init	;wreg free
   749   001392                     
   750                           ;main.c: 28:     color_click_init();
   751   001392  ECC5  F00E         	call	_color_click_init	;wreg free
   752   001396                     
   753                           ;main.c: 29:     initDCmotorsPWM();
   754   001396  EC3D  F00C         	call	_initDCmotorsPWM	;wreg free
   755   00139A                     
   756                           ;main.c: 30:     initUSART4();
   757   00139A  EC58  F00F         	call	_initUSART4	;wreg free
   758   00139E                     
   759                           ;main.c: 31:     Interrupts_init();
   760   00139E  ECA7  F00E         	call	_Interrupts_init	;wreg free
   761   0013A2                     
   762                           ;main.c: 39:     unsigned char PWMcycle = T2PR;
   763   0013A2  CFBC F0AF          	movff	4028,main@PWMcycle	;volatile
   764                           
   765                           ;main.c: 41:     struct DC_motor motorL, motorR;;main.c: 43:     motorL.power=0;
   766   0013A6  0E00               	movlw	0
   767   0013A8  0100               	movlb	0	; () banked
   768   0013AA  6FB0               	movwf	main@motorL& (0+255),b
   769                           
   770                           ;main.c: 44:     motorL.direction=1;
   771   0013AC  0E01               	movlw	1
   772   0013AE  6FB1               	movwf	(main@motorL+1)& (0+255),b
   773                           
   774                           ;main.c: 45:     motorL.brakemode=1;
   775   0013B0  0E01               	movlw	1
   776   0013B2  6FB2               	movwf	(main@motorL+2)& (0+255),b
   777   0013B4                     
   778                           ; BSR set to: 0
   779                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   780   0013B4  0EAA               	movlw	170
   781   0013B6  6FB5               	movwf	(main@motorL+5)& (0+255),b
   782   0013B8  0E0F               	movlw	15
   783   0013BA  6FB6               	movwf	(main@motorL+6)& (0+255),b
   784   0013BC                     
   785                           ; BSR set to: 0
   786                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   787   0013BC  0EA6               	movlw	166
   788   0013BE  6FB7               	movwf	(main@motorL+7)& (0+255),b
   789   0013C0  0E0F               	movlw	15
   790   0013C2  6FB8               	movwf	(main@motorL+8)& (0+255),b
   791   0013C4                     
   792                           ; BSR set to: 0
   793                           ;main.c: 48:     motorL.PWMperiod=PWMcycle;
   794   0013C4  C0AF  F0B3         	movff	main@PWMcycle,main@motorL+3
   795   0013C8  6BB4               	clrf	(main@motorL+4)& (0+255),b
   796                           
   797                           ;main.c: 50:     motorR.power=0;
   798   0013CA  0E00               	movlw	0
   799   0013CC  6FB9               	movwf	main@motorR& (0+255),b
   800                           
   801                           ;main.c: 51:     motorR.direction=1;
   802   0013CE  0E01               	movlw	1
   803   0013D0  6FBA               	movwf	(main@motorR+1)& (0+255),b
   804                           
   805                           ;main.c: 52:     motorR.brakemode=1;
   806   0013D2  0E01               	movlw	1
   807   0013D4  6FBB               	movwf	(main@motorR+2)& (0+255),b
   808   0013D6                     
   809                           ; BSR set to: 0
   810                           ;main.c: 53:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   811   0013D6  0E25               	movlw	37
   812   0013D8  6FBE               	movwf	(main@motorR+5)& (0+255),b
   813   0013DA  0E0F               	movlw	15
   814   0013DC  6FBF               	movwf	(main@motorR+6)& (0+255),b
   815   0013DE                     
   816                           ; BSR set to: 0
   817                           ;main.c: 54:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   818   0013DE  0E21               	movlw	33
   819   0013E0  6FC0               	movwf	(main@motorR+7)& (0+255),b
   820   0013E2  0E0F               	movlw	15
   821   0013E4  6FC1               	movwf	(main@motorR+8)& (0+255),b
   822   0013E6                     
   823                           ; BSR set to: 0
   824                           ;main.c: 55:     motorR.PWMperiod=PWMcycle;
   825   0013E6  C0AF  F0BC         	movff	main@PWMcycle,main@motorR+3
   826   0013EA  6BBD               	clrf	(main@motorR+4)& (0+255),b
   827   0013EC                     
   828                           ; BSR set to: 0
   829                           ;main.c: 57:     setMotorPWM(&motorL);
   830   0013EC  0EB0               	movlw	low main@motorL
   831   0013EE  6E12               	movwf	setMotorPWM@m^0,c
   832   0013F0  0E00               	movlw	high main@motorL
   833   0013F2  6E13               	movwf	(setMotorPWM@m+1)^0,c
   834   0013F4  EC0F  F009         	call	_setMotorPWM	;wreg free
   835   0013F8                     
   836                           ;main.c: 58:     setMotorPWM(&motorR);
   837   0013F8  0EB9               	movlw	low main@motorR
   838   0013FA  6E12               	movwf	setMotorPWM@m^0,c
   839   0013FC  0E00               	movlw	high main@motorR
   840   0013FE  6E13               	movwf	(setMotorPWM@m+1)^0,c
   841   001400  EC0F  F009         	call	_setMotorPWM	;wreg free
   842   001404                     
   843                           ;main.c: 64:     unsigned int expected_values[3][3] = {{13000, 2600, 1800},{8400, 6500, 
      +                          5000},{4400, 1800, 2800}};
   844   001404  EE20  F0DB         	lfsr	2,main@F14641
   845   001408  EE10  F081         	lfsr	1,main@expected_values
   846   00140C  0E11               	movlw	17
   847   00140E                     u1841:
   848   00140E  CFDB FFE3          	movff	plusw2,plusw1
   849   001412  06E8               	decf	wreg,f,c
   850   001414  E2FC               	bc	u1841
   851   001416                     
   852                           ;main.c: 102:     while(PORTFbits.RF2){
   853   001416  EF0E  F00A         	goto	l230
   854   00141A                     l231:
   855                           
   856                           ;main.c: 103:         LATHbits.LATH1 = 1;
   857   00141A  8280               	bsf	128,1,c	;volatile
   858   00141C                     l230:
   859                           
   860                           ;main.c: 102:     while(PORTFbits.RF2){
   861   00141C  B48E               	btfsc	142,2,c	;volatile
   862   00141E  EF13  F00A         	goto	u1851
   863   001422  EF15  F00A         	goto	u1850
   864   001426                     u1851:
   865   001426  EF0D  F00A         	goto	l231
   866   00142A                     u1850:
   867   00142A                     
   868                           ;main.c: 128:     LATHbits.LATH3=0;
   869   00142A  9680               	bcf	128,3,c	;volatile
   870                           
   871                           ;main.c: 129:     TRISHbits.TRISH3=0;
   872   00142C  9688               	bcf	136,3,c	;volatile
   873                           
   874                           ;main.c: 131:     char buf[20];;main.c: 133:     LATDbits.LATD7=0;
   875   00142E  9E7C               	bcf	124,7,c	;volatile
   876                           
   877                           ;main.c: 134:     TRISDbits.TRISD7=0;
   878   001430  9E84               	bcf	132,7,c	;volatile
   879   001432                     l3219:
   880                           
   881                           ;main.c: 138:         red_read = color_read_Red();
   882   001432  EC7F  F00D         	call	_color_read_Red	;wreg free
   883   001436  C009  F0A7         	movff	?_color_read_Red,main@red_read
   884   00143A  C00A  F0A8         	movff	?_color_read_Red+1,main@red_read+1
   885                           
   886                           ;main.c: 139:         blue_read = color_read_Blue();
   887   00143E  ECF7  F00D         	call	_color_read_Blue	;wreg free
   888   001442  C009  F0AB         	movff	?_color_read_Blue,main@blue_read
   889   001446  C00A  F0AC         	movff	?_color_read_Blue+1,main@blue_read+1
   890                           
   891                           ;main.c: 140:         green_read = color_read_Green();
   892   00144A  ECA7  F00D         	call	_color_read_Green	;wreg free
   893   00144E  C009  F0A9         	movff	?_color_read_Green,main@green_read
   894   001452  C00A  F0AA         	movff	?_color_read_Green+1,main@green_read+1
   895                           
   896                           ;main.c: 141:         clear_read = color_read_Clear();
   897   001456  ECCF  F00D         	call	_color_read_Clear	;wreg free
   898   00145A  C009  F0AD         	movff	?_color_read_Clear,main@clear_read
   899   00145E  C00A  F0AE         	movff	?_color_read_Clear+1,main@clear_read+1
   900   001462                     
   901                           ;main.c: 144:         sprintf(buf, "Raw %d, %d, %d, %d \n", red_read, green_read, blue_r
      +                          ead, clear_read);
   902   001462  0E93               	movlw	low main@buf
   903   001464  0100               	movlb	0	; () banked
   904   001466  6F66               	movwf	sprintf@s& (0+255),b
   905   001468  0E00               	movlw	high main@buf
   906   00146A  6F67               	movwf	(sprintf@s+1)& (0+255),b
   907   00146C  0E01               	movlw	low STR_1
   908   00146E  6F68               	movwf	sprintf@fmt& (0+255),b
   909   001470  0E0E               	movlw	high STR_1
   910   001472  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   911   001474  C0A7  F06A         	movff	main@red_read,?_sprintf+4
   912   001478  C0A8  F06B         	movff	main@red_read+1,?_sprintf+5
   913   00147C  C0A9  F06C         	movff	main@green_read,?_sprintf+6
   914   001480  C0AA  F06D         	movff	main@green_read+1,?_sprintf+7
   915   001484  C0AB  F06E         	movff	main@blue_read,?_sprintf+8
   916   001488  C0AC  F06F         	movff	main@blue_read+1,?_sprintf+9
   917   00148C  C0AD  F070         	movff	main@clear_read,?_sprintf+10
   918   001490  C0AE  F071         	movff	main@clear_read+1,?_sprintf+11
   919   001494  EC56  F00D         	call	_sprintf	;wreg free
   920   001498                     
   921                           ;main.c: 145:         sendStringSerial4(buf);
   922   001498  0E93               	movlw	low main@buf
   923   00149A  6E06               	movwf	sendStringSerial4@string^0,c
   924   00149C  0E00               	movlw	high main@buf
   925   00149E  6E07               	movwf	(sendStringSerial4@string+1)^0,c
   926   0014A0  ECDF  F00E         	call	_sendStringSerial4	;wreg free
   927   0014A4                     
   928                           ;main.c: 146:         _delay((unsigned long)((100)*(64000000/4000.0)));
   929   0014A4  0E09               	movlw	9
   930   0014A6  0100               	movlb	0	; () banked
   931   0014A8  6F80               	movwf	(??_main+1)& (0+255),b
   932   0014AA  0E1E               	movlw	30
   933   0014AC  6F7F               	movwf	??_main& (0+255),b
   934   0014AE  0EE4               	movlw	228
   935   0014B0                     u1897:
   936   0014B0  2EE8               	decfsz	wreg,f,c
   937   0014B2  D7FE               	bra	u1897
   938   0014B4  2F7F               	decfsz	??_main& (0+255),f,b
   939   0014B6  D7FC               	bra	u1897
   940   0014B8  2F80               	decfsz	(??_main+1)& (0+255),f,b
   941   0014BA  D7FA               	bra	u1897
   942   0014BC  F000               	nop	
   943   0014BE                     
   944                           ;main.c: 147:         LATHbits.LATH3=!LATHbits.LATH3;
   945   0014BE  A680               	btfss	128,3,c	;volatile
   946   0014C0  EF64  F00A         	goto	u1861
   947   0014C4  EF69  F00A         	goto	u1860
   948   0014C8                     u1861:
   949   0014C8  0100               	movlb	0	; () banked
   950   0014CA  6B7F               	clrf	??_main& (0+255),b
   951   0014CC  2B7F               	incf	??_main& (0+255),f,b
   952   0014CE  EF6B  F00A         	goto	u1878
   953   0014D2                     u1860:
   954   0014D2  0100               	movlb	0	; () banked
   955   0014D4  6B7F               	clrf	??_main& (0+255),b
   956   0014D6                     u1878:
   957   0014D6  477F               	rlncf	??_main& (0+255),f,b
   958   0014D8  477F               	rlncf	??_main& (0+255),f,b
   959   0014DA  477F               	rlncf	??_main& (0+255),f,b
   960   0014DC  5080               	movf	128,w,c	;volatile
   961   0014DE  197F               	xorwf	??_main& (0+255),w,b
   962   0014E0  0BF7               	andlw	-9
   963   0014E2  197F               	xorwf	??_main& (0+255),w,b
   964   0014E4  6E80               	movwf	128,c	;volatile
   965   0014E6  EF19  F00A         	goto	l3219
   966   0014EA  EF2D  F000         	goto	start
   967   0014EE                     __end_of_main:
   968                           	callstack 0
   969                           
   970 ;; *************** function _sprintf *****************
   971 ;; Defined at:
   972 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  s               2    6[BANK0 ] PTR unsigned char 
   975 ;;		 -> main@buf(20), 
   976 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   977 ;;		 -> STR_1(21), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  f              11   20[BANK0 ] struct _IO_FILE
   980 ;;  ap              2   18[BANK0 ] PTR void [1]
   981 ;;		 -> ?_sprintf(2), 
   982 ;;  ret             2    0        int 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  2    6[BANK0 ] int 
   985 ;; Registers used:
   986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   992 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   993 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   995 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   996 ;;Total ram usage:       25 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; Hardware stack levels required when called: 11
   999 ;; This function calls:
  1000 ;;		_vfprintf
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text1
  1007   001AAC                     __ptext1:
  1008                           	callstack 0
  1009   001AAC                     _sprintf:
  1010                           	callstack 19
  1011   001AAC  0E6A               	movlw	low (?_sprintf+4)
  1012   001AAE  0100               	movlb	0	; () banked
  1013   001AB0  6F72               	movwf	sprintf@ap& (0+255),b
  1014   001AB2  0E00               	movlw	high (?_sprintf+4)
  1015   001AB4  6F73               	movwf	(sprintf@ap+1)& (0+255),b
  1016   001AB6  C066  F074         	movff	sprintf@s,sprintf@f
  1017   001ABA  C067  F075         	movff	sprintf@s+1,sprintf@f+1
  1018   001ABE                     
  1019                           ; BSR set to: 0
  1020   001ABE  0E00               	movlw	0
  1021   001AC0  6F78               	movwf	(sprintf@f+4)& (0+255),b
  1022   001AC2  0E00               	movlw	0
  1023   001AC4  6F77               	movwf	(sprintf@f+3)& (0+255),b
  1024   001AC6                     
  1025                           ; BSR set to: 0
  1026   001AC6  0E00               	movlw	0
  1027   001AC8  6F7E               	movwf	(sprintf@f+10)& (0+255),b
  1028   001ACA  0E00               	movlw	0
  1029   001ACC  6F7D               	movwf	(sprintf@f+9)& (0+255),b
  1030   001ACE                     
  1031                           ; BSR set to: 0
  1032   001ACE  0E74               	movlw	low sprintf@f
  1033   001AD0  6F60               	movwf	vfprintf@fp& (0+255),b
  1034   001AD2  0E00               	movlw	high sprintf@f
  1035   001AD4  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  1036   001AD6  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  1037   001ADA  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1038   001ADE  0E72               	movlw	low sprintf@ap
  1039   001AE0  6F64               	movwf	vfprintf@ap& (0+255),b
  1040   001AE2  0E00               	movlw	high sprintf@ap
  1041   001AE4  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  1042   001AE6  EC2C  F00D         	call	_vfprintf	;wreg free
  1043   001AEA  0100               	movlb	0	; () banked
  1044   001AEC  5177               	movf	(sprintf@f+3)& (0+255),w,b
  1045   001AEE  2566               	addwf	sprintf@s& (0+255),w,b
  1046   001AF0  6ED9               	movwf	fsr2l,c
  1047   001AF2  5178               	movf	(sprintf@f+4)& (0+255),w,b
  1048   001AF4  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  1049   001AF6  6EDA               	movwf	fsr2h,c
  1050   001AF8  0E00               	movlw	0
  1051   001AFA  6EDF               	movwf	indf2,c
  1052   001AFC                     
  1053                           ; BSR set to: 0
  1054   001AFC  0012               	return		;funcret
  1055   001AFE                     __end_of_sprintf:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _vfprintf *****************
  1059 ;; Defined at:
  1060 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1063 ;;		 -> sprintf@f(11), 
  1064 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1065 ;;		 -> STR_1(21), 
  1066 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1067 ;;		 -> sprintf@ap(2), 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  1070 ;;		 -> STR_1(21), 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  2    0[BANK0 ] int 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1080 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;Total ram usage:        8 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 10
  1087 ;; This function calls:
  1088 ;;		_vfpfcnvrt
  1089 ;; This function is called by:
  1090 ;;		_sprintf
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text2
  1095   001A58                     __ptext2:
  1096                           	callstack 0
  1097   001A58                     _vfprintf:
  1098                           	callstack 19
  1099   001A58                     
  1100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1101   001A58  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  1102   001A5C  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1103                           
  1104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1105   001A60  EF40  F00D         	goto	l3161
  1106   001A64                     l3159:
  1107                           
  1108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1109   001A64  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1110   001A68  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1111   001A6C  0E55               	movlw	low vfprintf@cfmt
  1112   001A6E  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1113   001A70  0E00               	movlw	high vfprintf@cfmt
  1114   001A72  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1115   001A74  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1116   001A78  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1117   001A7C  EC29  F00B         	call	_vfpfcnvrt	;wreg free
  1118   001A80                     l3161:
  1119                           
  1120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1121   001A80  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  1122   001A84  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1123   001A88                     	if	0	;tblptru may be non-zero
  1124   001A88                     	endif
  1125   001A88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1126   001A88  0E00               	movlw	low (__mediumconst shr (0+16))
  1127   001A8A  6EF8               	movwf	tblptru,c
  1128   001A8C                     	endif
  1129   001A8C  0008               	tblrd		*
  1130   001A8E  50F5               	movf	tablat,w,c
  1131   001A90  0900               	iorlw	0
  1132   001A92  A4D8               	btfss	status,2,c
  1133   001A94  EF4E  F00D         	goto	u1831
  1134   001A98  EF50  F00D         	goto	u1830
  1135   001A9C                     u1831:
  1136   001A9C  EF32  F00D         	goto	l3159
  1137   001AA0                     u1830:
  1138   001AA0                     
  1139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1140   001AA0  0E00               	movlw	0
  1141   001AA2  0100               	movlb	0	; () banked
  1142   001AA4  6F61               	movwf	(?_vfprintf+1)& (0+255),b
  1143   001AA6  0E00               	movlw	0
  1144   001AA8  6F60               	movwf	?_vfprintf& (0+255),b
  1145   001AAA                     
  1146                           ; BSR set to: 0
  1147   001AAA  0012               	return		;funcret
  1148   001AAC                     __end_of_vfprintf:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function _vfpfcnvrt *****************
  1152 ;; Defined at:
  1153 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1156 ;;		 -> sprintf@f(11), 
  1157 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1158 ;;		 -> vfprintf@cfmt(2), 
  1159 ;;  ap              2   70[COMRAM] PTR PTR void 
  1160 ;;		 -> sprintf@ap(2), 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  convarg         8   74[COMRAM] struct .
  1163 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1164 ;;		 -> STR_1(21), 
  1165 ;;  i               2    0        int 
  1166 ;;  done            2    0        int 
  1167 ;;  c               1    0        unsigned char 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1177 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1181 ;;Total ram usage:       18 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 9
  1184 ;; This function calls:
  1185 ;;		_dtoa
  1186 ;;		_fputc
  1187 ;; This function is called by:
  1188 ;;		_vfprintf
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text3
  1193   001652                     __ptext3:
  1194                           	callstack 0
  1195   001652                     _vfpfcnvrt:
  1196                           	callstack 19
  1197   001652                     
  1198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1199   001652  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1200   001656  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1201   00165A  CFDE FFF6          	movff	postinc2,tblptrl
  1202   00165E  CFDD FFF7          	movff	postdec2,tblptrh
  1203   001662                     	if	0	;tblptru may be non-zero
  1204   001662                     	endif
  1205   001662                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1206   001662  0E00               	movlw	low (__mediumconst shr (0+16))
  1207   001664  6EF8               	movwf	tblptru,c
  1208   001666                     	endif
  1209   001666  0008               	tblrd		*
  1210   001668  50F5               	movf	tablat,w,c
  1211   00166A  0A25               	xorlw	37
  1212   00166C  A4D8               	btfss	status,2,c
  1213   00166E  EF3B  F00B         	goto	u1801
  1214   001672  EF3D  F00B         	goto	u1800
  1215   001676                     u1801:
  1216   001676  EFC1  F00B         	goto	l3151
  1217   00167A                     u1800:
  1218   00167A                     
  1219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1220   00167A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1221   00167E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1222   001682  2ADE               	incf	postinc2,f,c
  1223   001684  0E00               	movlw	0
  1224   001686  22DD               	addwfc	postdec2,f,c
  1225   001688                     
  1226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1227   001688  0E00               	movlw	0
  1228   00168A  0100               	movlb	0	; () banked
  1229   00168C  6FD7               	movwf	(_width+1)& (0+255),b
  1230   00168E  0E00               	movlw	0
  1231   001690  6FD6               	movwf	_width& (0+255),b
  1232   001692  C0D6  F0DA         	movff	_width,_flags
  1233   001696                     
  1234                           ; BSR set to: 0
  1235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1236   001696  69D8               	setf	_prec& (0+255),b
  1237   001698  69D9               	setf	(_prec+1)& (0+255),b
  1238   00169A                     
  1239                           ; BSR set to: 0
  1240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1241   00169A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1242   00169E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1243   0016A2  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1244   0016A6  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1245   0016AA                     
  1246                           ; BSR set to: 0
  1247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1248   0016AA  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1249   0016AE  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1250   0016B2                     	if	0	;tblptru may be non-zero
  1251   0016B2                     	endif
  1252   0016B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1253   0016B2  0E00               	movlw	low (__mediumconst shr (0+16))
  1254   0016B4  6EF8               	movwf	tblptru,c
  1255   0016B6                     	endif
  1256   0016B6  0008               	tblrd		*
  1257   0016B8  50F5               	movf	tablat,w,c
  1258   0016BA  0A64               	xorlw	100
  1259   0016BC  B4D8               	btfsc	status,2,c
  1260   0016BE  EF63  F00B         	goto	u1811
  1261   0016C2  EF65  F00B         	goto	u1810
  1262   0016C6                     u1811:
  1263   0016C6  EF75  F00B         	goto	l3141
  1264   0016CA                     u1810:
  1265   0016CA                     
  1266                           ; BSR set to: 0
  1267   0016CA  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1268   0016CE  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1269   0016D2                     	if	0	;tblptru may be non-zero
  1270   0016D2                     	endif
  1271   0016D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1272   0016D2  0E00               	movlw	low (__mediumconst shr (0+16))
  1273   0016D4  6EF8               	movwf	tblptru,c
  1274   0016D6                     	endif
  1275   0016D6  0008               	tblrd		*
  1276   0016D8  50F5               	movf	tablat,w,c
  1277   0016DA  0A69               	xorlw	105
  1278   0016DC  A4D8               	btfss	status,2,c
  1279   0016DE  EF73  F00B         	goto	u1821
  1280   0016E2  EF75  F00B         	goto	u1820
  1281   0016E6                     u1821:
  1282   0016E6  EFB8  F00B         	goto	l3147
  1283   0016EA                     u1820:
  1284   0016EA                     l3141:
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1288   0016EA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1289   0016EE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1290   0016F2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1291   0016F6  0E02               	movlw	2
  1292   0016F8  26DE               	addwf	postinc2,f,c
  1293   0016FA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1294   0016FE  0E00               	movlw	0
  1295   001700  22DD               	addwfc	postdec2,f,c
  1296   001702  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1297   001706  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1298   00170A  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1299   00170E  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1300   001712  0E00               	movlw	0
  1301   001714  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1302   001716  0EFF               	movlw	-1
  1303   001718  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1304   00171A  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1305   00171C  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1306   00171E  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1307   001720  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1308   001722  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1311   001724  0E01               	movlw	1
  1312   001726  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1313   001728  6E49               	movwf	??_vfpfcnvrt^0,c
  1314   00172A  0E00               	movlw	0
  1315   00172C  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1316   00172E  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1317   001730  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1318   001734  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1319   001738  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1320   00173C  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1321   001740                     
  1322                           ; BSR set to: 0
  1323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1324   001740  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1325   001744  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1326   001748  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1327   00174C  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1328   001750  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1329   001754  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1330   001758  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1331   00175C  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1332   001760  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1333   001764  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1334   001768  EC0C  F007         	call	_dtoa	;wreg free
  1335   00176C  EFD7  F00B         	goto	l1212
  1336   001770                     l3147:
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1339   001770  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1340   001774  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1341   001778  2ADE               	incf	postinc2,f,c
  1342   00177A  0E00               	movlw	0
  1343   00177C  22DD               	addwfc	postdec2,f,c
  1344   00177E  EFD7  F00B         	goto	l1212
  1345   001782                     l3151:
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1348   001782  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1349   001786  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1350   00178A  CFDE FFF6          	movff	postinc2,tblptrl
  1351   00178E  CFDD FFF7          	movff	postdec2,tblptrh
  1352   001792                     	if	0	;tblptru may be non-zero
  1353   001792                     	endif
  1354   001792                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1355   001792  0E00               	movlw	low (__mediumconst shr (0+16))
  1356   001794  6EF8               	movwf	tblptru,c
  1357   001796                     	endif
  1358   001796  0008               	tblrd		*
  1359   001798  50F5               	movf	tablat,w,c
  1360   00179A  6E05               	movwf	fputc@c^0,c
  1361   00179C  6A06               	clrf	(fputc@c+1)^0,c
  1362   00179E  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1363   0017A2  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1364   0017A6  ECD8  F00B         	call	_fputc	;wreg free
  1365   0017AA  EFB8  F00B         	goto	l3147
  1366   0017AE                     l1212:
  1367   0017AE  0012               	return		;funcret
  1368   0017B0                     __end_of_vfpfcnvrt:
  1369                           	callstack 0
  1370                           
  1371 ;; *************** function _dtoa *****************
  1372 ;; Defined at:
  1373 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1376 ;;		 -> sprintf@f(11), 
  1377 ;;  d               8   33[COMRAM] long long 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  n               8   55[COMRAM] long long 
  1380 ;;  i               2   64[COMRAM] int 
  1381 ;;  w               2   53[COMRAM] int 
  1382 ;;  p               2   51[COMRAM] int 
  1383 ;;  s               1   63[COMRAM] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1393 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;Total ram usage:       35 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 8
  1400 ;; This function calls:
  1401 ;;		___aodiv
  1402 ;;		___aomod
  1403 ;;		_abs
  1404 ;;		_pad
  1405 ;; This function is called by:
  1406 ;;		_vfpfcnvrt
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text4
  1411   000E18                     __ptext4:
  1412                           	callstack 0
  1413   000E18                     _dtoa:
  1414                           	callstack 19
  1415   000E18                     
  1416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1417   000E18  C022  F038         	movff	dtoa@d,dtoa@n
  1418   000E1C  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1419   000E20  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1420   000E24  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1421   000E28  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1422   000E2C  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1423   000E30  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1424   000E34  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1425   000E38                     
  1426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1427   000E38  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1428   000E3A  EF21  F007         	goto	u1701
  1429   000E3E  EF24  F007         	goto	u1700
  1430   000E42                     u1701:
  1431   000E42  0E01               	movlw	1
  1432   000E44  EF25  F007         	goto	u1710
  1433   000E48                     u1700:
  1434   000E48  0E00               	movlw	0
  1435   000E4A                     u1710:
  1436   000E4A  6E40               	movwf	dtoa@s^0,c
  1437   000E4C                     
  1438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1439   000E4C  5040               	movf	dtoa@s^0,w,c
  1440   000E4E  B4D8               	btfsc	status,2,c
  1441   000E50  EF2C  F007         	goto	u1721
  1442   000E54  EF2E  F007         	goto	u1720
  1443   000E58                     u1721:
  1444   000E58  EF3E  F007         	goto	l3083
  1445   000E5C                     u1720:
  1446   000E5C                     
  1447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1448   000E5C  1E3F               	comf	(dtoa@n+7)^0,f,c
  1449   000E5E  1E3E               	comf	(dtoa@n+6)^0,f,c
  1450   000E60  1E3D               	comf	(dtoa@n+5)^0,f,c
  1451   000E62  1E3C               	comf	(dtoa@n+4)^0,f,c
  1452   000E64  1E3B               	comf	(dtoa@n+3)^0,f,c
  1453   000E66  1E3A               	comf	(dtoa@n+2)^0,f,c
  1454   000E68  1E39               	comf	(dtoa@n+1)^0,f,c
  1455   000E6A  6C38               	negf	dtoa@n^0,c
  1456   000E6C  0E00               	movlw	0
  1457   000E6E  2239               	addwfc	(dtoa@n+1)^0,f,c
  1458   000E70  223A               	addwfc	(dtoa@n+2)^0,f,c
  1459   000E72  223B               	addwfc	(dtoa@n+3)^0,f,c
  1460   000E74  223C               	addwfc	(dtoa@n+4)^0,f,c
  1461   000E76  223D               	addwfc	(dtoa@n+5)^0,f,c
  1462   000E78  223E               	addwfc	(dtoa@n+6)^0,f,c
  1463   000E7A  223F               	addwfc	(dtoa@n+7)^0,f,c
  1464   000E7C                     l3083:
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1467   000E7C  0100               	movlb	0	; () banked
  1468   000E7E  BFD9               	btfsc	(_prec+1)& (0+255),7,b
  1469   000E80  EF4C  F007         	goto	u1730
  1470   000E84  51D9               	movf	(_prec+1)& (0+255),w,b
  1471   000E86  E106               	bnz	u1731
  1472   000E88  05D8               	decf	_prec& (0+255),w,b
  1473   000E8A  B0D8               	btfsc	status,0,c
  1474   000E8C  EF4A  F007         	goto	u1731
  1475   000E90  EF4C  F007         	goto	u1730
  1476   000E94                     u1731:
  1477   000E94  EF52  F007         	goto	l1191
  1478   000E98                     u1730:
  1479   000E98                     
  1480                           ; BSR set to: 0
  1481   000E98  0E00               	movlw	0
  1482   000E9A  6E35               	movwf	(dtoa@p+1)^0,c
  1483   000E9C  0E01               	movlw	1
  1484   000E9E  6E34               	movwf	dtoa@p^0,c
  1485   000EA0  EF56  F007         	goto	l1193
  1486   000EA4                     l1191:
  1487                           
  1488                           ; BSR set to: 0
  1489   000EA4  C0D8  F034         	movff	_prec,dtoa@p
  1490   000EA8  C0D9  F035         	movff	_prec+1,dtoa@p+1
  1491   000EAC                     l1193:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1495   000EAC  C0D6  F036         	movff	_width,dtoa@w
  1496   000EB0  C0D7  F037         	movff	_width+1,dtoa@w+1
  1497   000EB4                     
  1498                           ; BSR set to: 0
  1499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1500   000EB4  5040               	movf	dtoa@s^0,w,c
  1501   000EB6  B4D8               	btfsc	status,2,c
  1502   000EB8  EF60  F007         	goto	u1741
  1503   000EBC  EF62  F007         	goto	u1740
  1504   000EC0                     u1741:
  1505   000EC0  EF79  F007         	goto	l1194
  1506   000EC4                     u1740:
  1507   000EC4                     
  1508                           ; BSR set to: 0
  1509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1510   000EC4  0636               	decf	dtoa@w^0,f,c
  1511   000EC6  A0D8               	btfss	status,0,c
  1512   000EC8  0637               	decf	(dtoa@w+1)^0,f,c
  1513   000ECA                     
  1514                           ; BSR set to: 0
  1515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1516   000ECA  5040               	movf	dtoa@s^0,w,c
  1517   000ECC  A4D8               	btfss	status,2,c
  1518   000ECE  EF6B  F007         	goto	u1751
  1519   000ED2  EF6D  F007         	goto	u1750
  1520   000ED6                     u1751:
  1521   000ED6  EF73  F007         	goto	l3095
  1522   000EDA                     u1750:
  1523   000EDA                     
  1524                           ; BSR set to: 0
  1525   000EDA  0E00               	movlw	0
  1526   000EDC  6E33               	movwf	(_dtoa$2468+1)^0,c
  1527   000EDE  0E2B               	movlw	43
  1528   000EE0  6E32               	movwf	_dtoa$2468^0,c
  1529   000EE2  EF77  F007         	goto	l3097
  1530   000EE6                     l3095:
  1531                           
  1532                           ; BSR set to: 0
  1533   000EE6  0E00               	movlw	0
  1534   000EE8  6E33               	movwf	(_dtoa$2468+1)^0,c
  1535   000EEA  0E2D               	movlw	45
  1536   000EEC  6E32               	movwf	_dtoa$2468^0,c
  1537   000EEE                     l3097:
  1538                           
  1539                           ; BSR set to: 0
  1540   000EEE  C032  F040         	movff	_dtoa$2468,dtoa@s
  1541   000EF2                     l1194:
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1545   000EF2  0E00               	movlw	0
  1546   000EF4  6E42               	movwf	(dtoa@i+1)^0,c
  1547   000EF6  0E1F               	movlw	31
  1548   000EF8  6E41               	movwf	dtoa@i^0,c
  1549   000EFA                     
  1550                           ; BSR set to: 0
  1551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1552   000EFA  0E00               	movlw	0
  1553   000EFC  0101               	movlb	1	; () banked
  1554   000EFE  6F5B               	movwf	(_dbuf+31)& (0+255),b
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1557   000F00  EFFE  F007         	goto	l3111
  1558   000F04                     l3101:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1561   000F04  0641               	decf	dtoa@i^0,f,c
  1562   000F06  A0D8               	btfss	status,0,c
  1563   000F08  0642               	decf	(dtoa@i+1)^0,f,c
  1564   000F0A                     
  1565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1566   000F0A  0E3C               	movlw	low _dbuf
  1567   000F0C  2441               	addwf	dtoa@i^0,w,c
  1568   000F0E  6ED9               	movwf	fsr2l,c
  1569   000F10  0E01               	movlw	high _dbuf
  1570   000F12  2042               	addwfc	(dtoa@i+1)^0,w,c
  1571   000F14  6EDA               	movwf	fsr2h,c
  1572   000F16  C038  F005         	movff	dtoa@n,___aomod@dividend
  1573   000F1A  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1574   000F1E  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1575   000F22  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1576   000F26  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1577   000F2A  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1578   000F2E  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1579   000F32  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1580   000F36  0E0A               	movlw	10
  1581   000F38  6E0D               	movwf	___aomod@divisor^0,c
  1582   000F3A  0E00               	movlw	0
  1583   000F3C  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1584   000F3E  0E00               	movlw	0
  1585   000F40  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1586   000F42  0E00               	movlw	0
  1587   000F44  6E10               	movwf	(___aomod@divisor+3)^0,c
  1588   000F46  0E00               	movlw	0
  1589   000F48  6E11               	movwf	(___aomod@divisor+4)^0,c
  1590   000F4A  0E00               	movlw	0
  1591   000F4C  6E12               	movwf	(___aomod@divisor+5)^0,c
  1592   000F4E  0E00               	movlw	0
  1593   000F50  6E13               	movwf	(___aomod@divisor+6)^0,c
  1594   000F52  0E00               	movlw	0
  1595   000F54  6E14               	movwf	(___aomod@divisor+7)^0,c
  1596   000F56  EC77  F00A         	call	___aomod	;wreg free
  1597   000F5A  C005  F02A         	movff	?___aomod,??_dtoa
  1598   000F5E  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1599   000F62  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1600   000F66  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1601   000F6A  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1602   000F6E  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1603   000F72  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1604   000F76  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1605   000F7A  C02A  F017         	movff	??_dtoa,abs@a
  1606   000F7E  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1607   000F82  EC87  F00E         	call	_abs	;wreg free
  1608   000F86  5017               	movf	?_abs^0,w,c
  1609   000F88  0F30               	addlw	48
  1610   000F8A  6EDF               	movwf	indf2,c
  1611   000F8C                     
  1612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1613   000F8C  0634               	decf	dtoa@p^0,f,c
  1614   000F8E  A0D8               	btfss	status,0,c
  1615   000F90  0635               	decf	(dtoa@p+1)^0,f,c
  1616   000F92                     
  1617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1618   000F92  0636               	decf	dtoa@w^0,f,c
  1619   000F94  A0D8               	btfss	status,0,c
  1620   000F96  0637               	decf	(dtoa@w+1)^0,f,c
  1621   000F98                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1623   000F98  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1624   000F9C  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1625   000FA0  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1626   000FA4  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1627   000FA8  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1628   000FAC  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1629   000FB0  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1630   000FB4  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1631   000FB8  0E0A               	movlw	10
  1632   000FBA  6E0D               	movwf	___aodiv@divisor^0,c
  1633   000FBC  0E00               	movlw	0
  1634   000FBE  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1635   000FC0  0E00               	movlw	0
  1636   000FC2  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1637   000FC4  0E00               	movlw	0
  1638   000FC6  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1639   000FC8  0E00               	movlw	0
  1640   000FCA  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1641   000FCC  0E00               	movlw	0
  1642   000FCE  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1643   000FD0  0E00               	movlw	0
  1644   000FD2  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1645   000FD4  0E00               	movlw	0
  1646   000FD6  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1647   000FD8  EC4B  F008         	call	___aodiv	;wreg free
  1648   000FDC  C005  F038         	movff	?___aodiv,dtoa@n
  1649   000FE0  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1650   000FE4  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1651   000FE8  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1652   000FEC  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1653   000FF0  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1654   000FF4  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1655   000FF8  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1656   000FFC                     l3111:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1659   000FFC  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1660   000FFE  EF09  F008         	goto	u1761
  1661   001002  5042               	movf	(dtoa@i+1)^0,w,c
  1662   001004  E108               	bnz	u1760
  1663   001006  0441               	decf	dtoa@i^0,w,c
  1664   001008  A0D8               	btfss	status,0,c
  1665   00100A  EF09  F008         	goto	u1761
  1666   00100E  EF0B  F008         	goto	u1760
  1667   001012                     u1761:
  1668   001012  EF27  F008         	goto	l3117
  1669   001016                     u1760:
  1670   001016  5038               	movf	dtoa@n^0,w,c
  1671   001018  1039               	iorwf	(dtoa@n+1)^0,w,c
  1672   00101A  103A               	iorwf	(dtoa@n+2)^0,w,c
  1673   00101C  103B               	iorwf	(dtoa@n+3)^0,w,c
  1674   00101E  103C               	iorwf	(dtoa@n+4)^0,w,c
  1675   001020  103D               	iorwf	(dtoa@n+5)^0,w,c
  1676   001022  103E               	iorwf	(dtoa@n+6)^0,w,c
  1677   001024  103F               	iorwf	(dtoa@n+7)^0,w,c
  1678   001026  A4D8               	btfss	status,2,c
  1679   001028  EF18  F008         	goto	u1771
  1680   00102C  EF1A  F008         	goto	u1770
  1681   001030                     u1771:
  1682   001030  EF82  F007         	goto	l3101
  1683   001034                     u1770:
  1684   001034  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1685   001036  EF27  F008         	goto	u1780
  1686   00103A  5035               	movf	(dtoa@p+1)^0,w,c
  1687   00103C  E106               	bnz	u1781
  1688   00103E  0434               	decf	dtoa@p^0,w,c
  1689   001040  B0D8               	btfsc	status,0,c
  1690   001042  EF25  F008         	goto	u1781
  1691   001046  EF27  F008         	goto	u1780
  1692   00104A                     u1781:
  1693   00104A  EF82  F007         	goto	l3101
  1694   00104E                     u1780:
  1695   00104E                     l3117:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1698   00104E  5040               	movf	dtoa@s^0,w,c
  1699   001050  B4D8               	btfsc	status,2,c
  1700   001052  EF2D  F008         	goto	u1791
  1701   001056  EF2F  F008         	goto	u1790
  1702   00105A                     u1791:
  1703   00105A  EF3A  F008         	goto	l3123
  1704   00105E                     u1790:
  1705   00105E                     
  1706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1707   00105E  0641               	decf	dtoa@i^0,f,c
  1708   001060  A0D8               	btfss	status,0,c
  1709   001062  0642               	decf	(dtoa@i+1)^0,f,c
  1710   001064                     
  1711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1712   001064  0E3C               	movlw	low _dbuf
  1713   001066  2441               	addwf	dtoa@i^0,w,c
  1714   001068  6ED9               	movwf	fsr2l,c
  1715   00106A  0E01               	movlw	high _dbuf
  1716   00106C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1717   00106E  6EDA               	movwf	fsr2h,c
  1718   001070  C040  FFDF         	movff	dtoa@s,indf2
  1719   001074                     l3123:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1722   001074  C020  F015         	movff	dtoa@fp,pad@fp
  1723   001078  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1724   00107C  0E3C               	movlw	low _dbuf
  1725   00107E  2441               	addwf	dtoa@i^0,w,c
  1726   001080  6E17               	movwf	pad@buf^0,c
  1727   001082  0E01               	movlw	high _dbuf
  1728   001084  2042               	addwfc	(dtoa@i+1)^0,w,c
  1729   001086  6E18               	movwf	(pad@buf+1)^0,c
  1730   001088  C036  F019         	movff	dtoa@w,pad@p
  1731   00108C  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1732   001090  EC81  F00C         	call	_pad	;wreg free
  1733   001094  0012               	return		;funcret
  1734   001096                     __end_of_dtoa:
  1735                           	callstack 0
  1736                           
  1737 ;; *************** function _pad *****************
  1738 ;; Defined at:
  1739 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1742 ;;		 -> sprintf@f(11), 
  1743 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1744 ;;		 -> dbuf(32), 
  1745 ;;  p               2   24[COMRAM] int 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  w               2   29[COMRAM] int 
  1748 ;;  i               2   27[COMRAM] int 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1758 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1759 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1762 ;;Total ram usage:       11 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; Hardware stack levels required when called: 7
  1765 ;; This function calls:
  1766 ;;		_fputc
  1767 ;;		_fputs
  1768 ;; This function is called by:
  1769 ;;		_dtoa
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text5
  1774   001902                     __ptext5:
  1775                           	callstack 0
  1776   001902                     _pad:
  1777                           	callstack 19
  1778   001902                     
  1779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1780   001902  BE1A               	btfsc	(pad@p+1)^0,7,c
  1781   001904  EF86  F00C         	goto	u1681
  1782   001908  EF88  F00C         	goto	u1680
  1783   00190C                     u1681:
  1784   00190C  EF8E  F00C         	goto	l3065
  1785   001910                     u1680:
  1786   001910  C019  F01E         	movff	pad@p,pad@w
  1787   001914  C01A  F01F         	movff	pad@p+1,pad@w+1
  1788   001918  EF92  F00C         	goto	l1182
  1789   00191C                     l3065:
  1790   00191C  0E00               	movlw	0
  1791   00191E  6E1F               	movwf	(pad@w+1)^0,c
  1792   001920  0E00               	movlw	0
  1793   001922  6E1E               	movwf	pad@w^0,c
  1794   001924                     l1182:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1797   001924  0E00               	movlw	0
  1798   001926  6E1D               	movwf	(pad@i+1)^0,c
  1799   001928  0E00               	movlw	0
  1800   00192A  6E1C               	movwf	pad@i^0,c
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1803   00192C  EFA4  F00C         	goto	l3071
  1804   001930                     l3067:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1807   001930  0E00               	movlw	0
  1808   001932  6E06               	movwf	(fputc@c+1)^0,c
  1809   001934  0E20               	movlw	32
  1810   001936  6E05               	movwf	fputc@c^0,c
  1811   001938  C015  F007         	movff	pad@fp,fputc@fp
  1812   00193C  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1813   001940  ECD8  F00B         	call	_fputc	;wreg free
  1814   001944                     
  1815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1816   001944  4A1C               	infsnz	pad@i^0,f,c
  1817   001946  2A1D               	incf	(pad@i+1)^0,f,c
  1818   001948                     l3071:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1821   001948  501E               	movf	pad@w^0,w,c
  1822   00194A  5C1C               	subwf	pad@i^0,w,c
  1823   00194C  501D               	movf	(pad@i+1)^0,w,c
  1824   00194E  0A80               	xorlw	128
  1825   001950  6E1B               	movwf	??_pad^0,c
  1826   001952  501F               	movf	(pad@w+1)^0,w,c
  1827   001954  0A80               	xorlw	128
  1828   001956  581B               	subwfb	??_pad^0,w,c
  1829   001958  A0D8               	btfss	status,0,c
  1830   00195A  EFB1  F00C         	goto	u1691
  1831   00195E  EFB3  F00C         	goto	u1690
  1832   001962                     u1691:
  1833   001962  EF98  F00C         	goto	l3067
  1834   001966                     u1690:
  1835   001966                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1837   001966  C017  F00E         	movff	pad@buf,fputs@s
  1838   00196A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1839   00196E  C015  F010         	movff	pad@fp,fputs@fp
  1840   001972  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1841   001976  EC44  F00E         	call	_fputs	;wreg free
  1842   00197A  0012               	return		;funcret
  1843   00197C                     __end_of_pad:
  1844                           	callstack 0
  1845                           
  1846 ;; *************** function _fputs *****************
  1847 ;; Defined at:
  1848 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1851 ;;		 -> dbuf(32), 
  1852 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1853 ;;		 -> sprintf@f(11), 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  i               2   18[COMRAM] int 
  1856 ;;  c               1   17[COMRAM] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2   13[COMRAM] int 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;Total ram usage:        7 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 6
  1873 ;; This function calls:
  1874 ;;		_fputc
  1875 ;; This function is called by:
  1876 ;;		_pad
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text6
  1881   001C88                     __ptext6:
  1882                           	callstack 0
  1883   001C88                     _fputs:
  1884                           	callstack 19
  1885   001C88  0E00               	movlw	0
  1886   001C8A  6E14               	movwf	(fputs@i+1)^0,c
  1887   001C8C  0E00               	movlw	0
  1888   001C8E  6E13               	movwf	fputs@i^0,c
  1889   001C90  EF55  F00E         	goto	l2975
  1890   001C94                     l2971:
  1891   001C94  C012  F005         	movff	fputs@c,fputc@c
  1892   001C98  6A06               	clrf	(fputc@c+1)^0,c
  1893   001C9A  C010  F007         	movff	fputs@fp,fputc@fp
  1894   001C9E  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1895   001CA2  ECD8  F00B         	call	_fputc	;wreg free
  1896   001CA6  4A13               	infsnz	fputs@i^0,f,c
  1897   001CA8  2A14               	incf	(fputs@i+1)^0,f,c
  1898   001CAA                     l2975:
  1899   001CAA  5013               	movf	fputs@i^0,w,c
  1900   001CAC  240E               	addwf	fputs@s^0,w,c
  1901   001CAE  6ED9               	movwf	fsr2l,c
  1902   001CB0  5014               	movf	(fputs@i+1)^0,w,c
  1903   001CB2  200F               	addwfc	(fputs@s+1)^0,w,c
  1904   001CB4  6EDA               	movwf	fsr2h,c
  1905   001CB6  50DF               	movf	indf2,w,c
  1906   001CB8  6E12               	movwf	fputs@c^0,c
  1907   001CBA  5012               	movf	fputs@c^0,w,c
  1908   001CBC  A4D8               	btfss	status,2,c
  1909   001CBE  EF63  F00E         	goto	u1531
  1910   001CC2  EF65  F00E         	goto	u1530
  1911   001CC6                     u1531:
  1912   001CC6  EF4A  F00E         	goto	l2971
  1913   001CCA                     u1530:
  1914   001CCA  0012               	return		;funcret
  1915   001CCC                     __end_of_fputs:
  1916                           	callstack 0
  1917                           
  1918 ;; *************** function _fputc *****************
  1919 ;; Defined at:
  1920 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  c               2    4[COMRAM] int 
  1923 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1924 ;;		 -> sprintf@f(11), 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  2    4[COMRAM] int 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;Total ram usage:        9 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 5
  1943 ;; This function calls:
  1944 ;;		_putch
  1945 ;; This function is called by:
  1946 ;;		_pad
  1947 ;;		_vfpfcnvrt
  1948 ;;		_fputs
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text7
  1953   0017B0                     __ptext7:
  1954                           	callstack 0
  1955   0017B0                     _fputc:
  1956                           	callstack 22
  1957   0017B0  5007               	movf	fputc@fp^0,w,c
  1958   0017B2  1008               	iorwf	(fputc@fp+1)^0,w,c
  1959   0017B4  B4D8               	btfsc	status,2,c
  1960   0017B6  EFDF  F00B         	goto	u1491
  1961   0017BA  EFE1  F00B         	goto	u1490
  1962   0017BE                     u1491:
  1963   0017BE  EFEA  F00B         	goto	l2959
  1964   0017C2                     u1490:
  1965   0017C2  5007               	movf	fputc@fp^0,w,c
  1966   0017C4  1008               	iorwf	(fputc@fp+1)^0,w,c
  1967   0017C6  A4D8               	btfss	status,2,c
  1968   0017C8  EFE8  F00B         	goto	u1501
  1969   0017CC  EFEA  F00B         	goto	u1500
  1970   0017D0                     u1501:
  1971   0017D0  EFEF  F00B         	goto	l2961
  1972   0017D4                     u1500:
  1973   0017D4                     l2959:
  1974   0017D4  5005               	movf	fputc@c^0,w,c
  1975   0017D6  ECD0  F00F         	call	_putch
  1976   0017DA  EF3C  F00C         	goto	l1230
  1977   0017DE                     l2961:
  1978   0017DE  EE20 F009          	lfsr	2,9
  1979   0017E2  5007               	movf	fputc@fp^0,w,c
  1980   0017E4  26D9               	addwf	fsr2l,f,c
  1981   0017E6  5008               	movf	(fputc@fp+1)^0,w,c
  1982   0017E8  22DA               	addwfc	fsr2h,f,c
  1983   0017EA  50DE               	movf	postinc2,w,c
  1984   0017EC  10DE               	iorwf	postinc2,w,c
  1985   0017EE  B4D8               	btfsc	status,2,c
  1986   0017F0  EFFC  F00B         	goto	u1511
  1987   0017F4  EFFE  F00B         	goto	u1510
  1988   0017F8                     u1511:
  1989   0017F8  EF19  F00C         	goto	l2965
  1990   0017FC                     u1510:
  1991   0017FC  EE20 F009          	lfsr	2,9
  1992   001800  5007               	movf	fputc@fp^0,w,c
  1993   001802  26D9               	addwf	fsr2l,f,c
  1994   001804  5008               	movf	(fputc@fp+1)^0,w,c
  1995   001806  22DA               	addwfc	fsr2h,f,c
  1996   001808  EE10 F003          	lfsr	1,3
  1997   00180C  5007               	movf	fputc@fp^0,w,c
  1998   00180E  26E1               	addwf	fsr1l,f,c
  1999   001810  5008               	movf	(fputc@fp+1)^0,w,c
  2000   001812  22E2               	addwfc	fsr1h,f,c
  2001   001814  50DE               	movf	postinc2,w,c
  2002   001816  5CE6               	subwf	postinc1,w,c
  2003   001818  50E6               	movf	postinc1,w,c
  2004   00181A  0A80               	xorlw	128
  2005   00181C  6E0D               	movwf	(??_fputc+4)^0,c
  2006   00181E  50DE               	movf	postinc2,w,c
  2007   001820  0A80               	xorlw	128
  2008   001822  580D               	subwfb	(??_fputc+4)^0,w,c
  2009   001824  B0D8               	btfsc	status,0,c
  2010   001826  EF17  F00C         	goto	u1521
  2011   00182A  EF19  F00C         	goto	u1520
  2012   00182E                     u1521:
  2013   00182E  EF3C  F00C         	goto	l1230
  2014   001832                     u1520:
  2015   001832                     l2965:
  2016   001832  EE20 F003          	lfsr	2,3
  2017   001836  5007               	movf	fputc@fp^0,w,c
  2018   001838  26D9               	addwf	fsr2l,f,c
  2019   00183A  5008               	movf	(fputc@fp+1)^0,w,c
  2020   00183C  22DA               	addwfc	fsr2h,f,c
  2021   00183E  CFDE F009          	movff	postinc2,??_fputc
  2022   001842  CFDD F00A          	movff	postdec2,??_fputc+1
  2023   001846  C007  FFD9         	movff	fputc@fp,fsr2l
  2024   00184A  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2025   00184E  CFDE F00B          	movff	postinc2,??_fputc+2
  2026   001852  CFDD F00C          	movff	postdec2,??_fputc+3
  2027   001856  5009               	movf	??_fputc^0,w,c
  2028   001858  240B               	addwf	(??_fputc+2)^0,w,c
  2029   00185A  6ED9               	movwf	fsr2l,c
  2030   00185C  500A               	movf	(??_fputc+1)^0,w,c
  2031   00185E  200C               	addwfc	(??_fputc+3)^0,w,c
  2032   001860  6EDA               	movwf	fsr2h,c
  2033   001862  C005  FFDF         	movff	fputc@c,indf2
  2034   001866  EE20 F003          	lfsr	2,3
  2035   00186A  5007               	movf	fputc@fp^0,w,c
  2036   00186C  26D9               	addwf	fsr2l,f,c
  2037   00186E  5008               	movf	(fputc@fp+1)^0,w,c
  2038   001870  22DA               	addwfc	fsr2h,f,c
  2039   001872  2ADE               	incf	postinc2,f,c
  2040   001874  0E00               	movlw	0
  2041   001876  22DD               	addwfc	postdec2,f,c
  2042   001878                     l1230:
  2043   001878  0012               	return		;funcret
  2044   00187A                     __end_of_fputc:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function _putch *****************
  2048 ;; Defined at:
  2049 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  c               1    wreg     unsigned char 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  c               1    0[COMRAM] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 4
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_fputc
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text8
  2078   001FA0                     __ptext8:
  2079                           	callstack 0
  2080   001FA0                     _putch:
  2081                           	callstack 22
  2082   001FA0  0012               	return		;funcret
  2083   001FA2                     __end_of_putch:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _abs *****************
  2087 ;; Defined at:
  2088 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  a               2   22[COMRAM] int 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  2   22[COMRAM] int 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2106 ;;Total ram usage:        4 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 4
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_dtoa
  2113 ;;		_normalise_readings
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text9
  2118   001D0E                     __ptext9:
  2119                           	callstack 0
  2120   001D0E                     _abs:
  2121                           	callstack 22
  2122   001D0E  BE18               	btfsc	(abs@a+1)^0,7,c
  2123   001D10  EF94  F00E         	goto	u1540
  2124   001D14  5018               	movf	(abs@a+1)^0,w,c
  2125   001D16  E106               	bnz	u1541
  2126   001D18  0417               	decf	abs@a^0,w,c
  2127   001D1A  B0D8               	btfsc	status,0,c
  2128   001D1C  EF92  F00E         	goto	u1541
  2129   001D20  EF94  F00E         	goto	u1540
  2130   001D24                     u1541:
  2131   001D24  EFA2  F00E         	goto	l1150
  2132   001D28                     u1540:
  2133   001D28  C017  F019         	movff	abs@a,??_abs
  2134   001D2C  C018  F01A         	movff	abs@a+1,??_abs+1
  2135   001D30  1E19               	comf	??_abs^0,f,c
  2136   001D32  1E1A               	comf	(??_abs+1)^0,f,c
  2137   001D34  4A19               	infsnz	??_abs^0,f,c
  2138   001D36  2A1A               	incf	(??_abs+1)^0,f,c
  2139   001D38  C019  F017         	movff	??_abs,?_abs
  2140   001D3C  C01A  F018         	movff	??_abs+1,?_abs+1
  2141   001D40  EFA6  F00E         	goto	l1153
  2142   001D44                     l1150:
  2143   001D44  C017  F017         	movff	abs@a,?_abs
  2144   001D48  C018  F018         	movff	abs@a+1,?_abs+1
  2145   001D4C                     l1153:
  2146   001D4C  0012               	return		;funcret
  2147   001D4E                     __end_of_abs:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function ___aomod *****************
  2151 ;; Defined at:
  2152 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  dividend        8    4[COMRAM] long long 
  2155 ;;  divisor         8   12[COMRAM] long long 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  sign            1   21[COMRAM] unsigned char 
  2158 ;;  counter         1   20[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  8    4[COMRAM] long long 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2168 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;Total ram usage:       18 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 4
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_dtoa
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text10
  2183   0014EE                     __ptext10:
  2184                           	callstack 0
  2185   0014EE                     ___aomod:
  2186                           	callstack 22
  2187   0014EE  0E00               	movlw	0
  2188   0014F0  6E16               	movwf	___aomod@sign^0,c
  2189   0014F2  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2190   0014F4  EF80  F00A         	goto	u1620
  2191   0014F8  EF7E  F00A         	goto	u1621
  2192   0014FC                     u1621:
  2193   0014FC  EF92  F00A         	goto	l3033
  2194   001500                     u1620:
  2195   001500  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2196   001502  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2197   001504  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2198   001506  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2199   001508  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2200   00150A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2201   00150C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2202   00150E  6C05               	negf	___aomod@dividend^0,c
  2203   001510  0E00               	movlw	0
  2204   001512  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2205   001514  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2206   001516  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2207   001518  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2208   00151A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2209   00151C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2210   00151E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2211   001520  0E01               	movlw	1
  2212   001522  6E16               	movwf	___aomod@sign^0,c
  2213   001524                     l3033:
  2214   001524  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2215   001526  EF99  F00A         	goto	u1630
  2216   00152A  EF97  F00A         	goto	u1631
  2217   00152E                     u1631:
  2218   00152E  EFA9  F00A         	goto	l3037
  2219   001532                     u1630:
  2220   001532  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2221   001534  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2222   001536  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2223   001538  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2224   00153A  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2225   00153C  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2226   00153E  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2227   001540  6C0D               	negf	___aomod@divisor^0,c
  2228   001542  0E00               	movlw	0
  2229   001544  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2230   001546  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2231   001548  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2232   00154A  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2233   00154C  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2234   00154E  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2235   001550  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2236   001552                     l3037:
  2237   001552  500D               	movf	___aomod@divisor^0,w,c
  2238   001554  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2239   001556  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2240   001558  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2241   00155A  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2242   00155C  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2243   00155E  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2244   001560  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2245   001562  B4D8               	btfsc	status,2,c
  2246   001564  EFB6  F00A         	goto	u1641
  2247   001568  EFB8  F00A         	goto	u1640
  2248   00156C                     u1641:
  2249   00156C  EF00  F00B         	goto	l3053
  2250   001570                     u1640:
  2251   001570  0E01               	movlw	1
  2252   001572  6E15               	movwf	___aomod@counter^0,c
  2253   001574  EFC6  F00A         	goto	l3043
  2254   001578                     l3041:
  2255   001578  90D8               	bcf	status,0,c
  2256   00157A  360D               	rlcf	___aomod@divisor^0,f,c
  2257   00157C  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2258   00157E  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2259   001580  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2260   001582  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2261   001584  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2262   001586  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2263   001588  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2264   00158A  2A15               	incf	___aomod@counter^0,f,c
  2265   00158C                     l3043:
  2266   00158C  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2267   00158E  EFCB  F00A         	goto	u1651
  2268   001592  EFCD  F00A         	goto	u1650
  2269   001596                     u1651:
  2270   001596  EFBC  F00A         	goto	l3041
  2271   00159A                     u1650:
  2272   00159A                     l3045:
  2273   00159A  500D               	movf	___aomod@divisor^0,w,c
  2274   00159C  5C05               	subwf	___aomod@dividend^0,w,c
  2275   00159E  500E               	movf	(___aomod@divisor+1)^0,w,c
  2276   0015A0  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2277   0015A2  500F               	movf	(___aomod@divisor+2)^0,w,c
  2278   0015A4  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2279   0015A6  5010               	movf	(___aomod@divisor+3)^0,w,c
  2280   0015A8  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2281   0015AA  5011               	movf	(___aomod@divisor+4)^0,w,c
  2282   0015AC  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2283   0015AE  5012               	movf	(___aomod@divisor+5)^0,w,c
  2284   0015B0  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2285   0015B2  5013               	movf	(___aomod@divisor+6)^0,w,c
  2286   0015B4  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2287   0015B6  5014               	movf	(___aomod@divisor+7)^0,w,c
  2288   0015B8  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2289   0015BA  A0D8               	btfss	status,0,c
  2290   0015BC  EFE2  F00A         	goto	u1661
  2291   0015C0  EFE4  F00A         	goto	u1660
  2292   0015C4                     u1661:
  2293   0015C4  EFF4  F00A         	goto	l3049
  2294   0015C8                     u1660:
  2295   0015C8  500D               	movf	___aomod@divisor^0,w,c
  2296   0015CA  5E05               	subwf	___aomod@dividend^0,f,c
  2297   0015CC  500E               	movf	(___aomod@divisor+1)^0,w,c
  2298   0015CE  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2299   0015D0  500F               	movf	(___aomod@divisor+2)^0,w,c
  2300   0015D2  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2301   0015D4  5010               	movf	(___aomod@divisor+3)^0,w,c
  2302   0015D6  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2303   0015D8  5011               	movf	(___aomod@divisor+4)^0,w,c
  2304   0015DA  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2305   0015DC  5012               	movf	(___aomod@divisor+5)^0,w,c
  2306   0015DE  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2307   0015E0  5013               	movf	(___aomod@divisor+6)^0,w,c
  2308   0015E2  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2309   0015E4  5014               	movf	(___aomod@divisor+7)^0,w,c
  2310   0015E6  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2311   0015E8                     l3049:
  2312   0015E8  90D8               	bcf	status,0,c
  2313   0015EA  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2314   0015EC  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2315   0015EE  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2316   0015F0  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2317   0015F2  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2318   0015F4  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2319   0015F6  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2320   0015F8  320D               	rrcf	___aomod@divisor^0,f,c
  2321   0015FA  2E15               	decfsz	___aomod@counter^0,f,c
  2322   0015FC  EFCD  F00A         	goto	l3045
  2323   001600                     l3053:
  2324   001600  5016               	movf	___aomod@sign^0,w,c
  2325   001602  B4D8               	btfsc	status,2,c
  2326   001604  EF06  F00B         	goto	u1671
  2327   001608  EF08  F00B         	goto	u1670
  2328   00160C                     u1671:
  2329   00160C  EF18  F00B         	goto	l3057
  2330   001610                     u1670:
  2331   001610  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2332   001612  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2333   001614  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2334   001616  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2335   001618  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2336   00161A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2337   00161C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2338   00161E  6C05               	negf	___aomod@dividend^0,c
  2339   001620  0E00               	movlw	0
  2340   001622  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2341   001624  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2342   001626  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2343   001628  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2344   00162A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2345   00162C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2346   00162E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2347   001630                     l3057:
  2348   001630  C005  F005         	movff	___aomod@dividend,?___aomod
  2349   001634  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2350   001638  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2351   00163C  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2352   001640  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2353   001644  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2354   001648  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2355   00164C  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2356   001650  0012               	return		;funcret
  2357   001652                     __end_of___aomod:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function ___aodiv *****************
  2361 ;; Defined at:
  2362 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  dividend        8    4[COMRAM] long long 
  2365 ;;  divisor         8   12[COMRAM] long long 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  quotient        8   22[COMRAM] long long 
  2368 ;;  sign            1   21[COMRAM] unsigned char 
  2369 ;;  counter         1   20[COMRAM] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  8    4[COMRAM] long long 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2379 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;Total ram usage:       26 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 4
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_dtoa
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text11
  2394   001096                     __ptext11:
  2395                           	callstack 0
  2396   001096                     ___aodiv:
  2397                           	callstack 22
  2398   001096  0E00               	movlw	0
  2399   001098  6E16               	movwf	___aodiv@sign^0,c
  2400   00109A  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2401   00109C  EF54  F008         	goto	u1550
  2402   0010A0  EF52  F008         	goto	u1551
  2403   0010A4                     u1551:
  2404   0010A4  EF66  F008         	goto	l2989
  2405   0010A8                     u1550:
  2406   0010A8  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2407   0010AA  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2408   0010AC  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2409   0010AE  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2410   0010B0  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2411   0010B2  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2412   0010B4  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2413   0010B6  6C0D               	negf	___aodiv@divisor^0,c
  2414   0010B8  0E00               	movlw	0
  2415   0010BA  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2416   0010BC  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2417   0010BE  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2418   0010C0  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2419   0010C2  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2420   0010C4  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2421   0010C6  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2422   0010C8  0E01               	movlw	1
  2423   0010CA  6E16               	movwf	___aodiv@sign^0,c
  2424   0010CC                     l2989:
  2425   0010CC  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2426   0010CE  EF6D  F008         	goto	u1560
  2427   0010D2  EF6B  F008         	goto	u1561
  2428   0010D6                     u1561:
  2429   0010D6  EF7F  F008         	goto	l2995
  2430   0010DA                     u1560:
  2431   0010DA  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2432   0010DC  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2433   0010DE  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2434   0010E0  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2435   0010E2  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2436   0010E4  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2437   0010E6  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2438   0010E8  6C05               	negf	___aodiv@dividend^0,c
  2439   0010EA  0E00               	movlw	0
  2440   0010EC  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2441   0010EE  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2442   0010F0  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2443   0010F2  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2444   0010F4  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2445   0010F6  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2446   0010F8  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2447   0010FA  0E01               	movlw	1
  2448   0010FC  1A16               	xorwf	___aodiv@sign^0,f,c
  2449   0010FE                     l2995:
  2450   0010FE  EE20  F017         	lfsr	2,___aodiv@quotient
  2451   001102  0E07               	movlw	7
  2452   001104                     u1571:
  2453   001104  6ADE               	clrf	postinc2,c
  2454   001106  06E8               	decf	wreg,f,c
  2455   001108  E2FD               	bc	u1571
  2456   00110A  500D               	movf	___aodiv@divisor^0,w,c
  2457   00110C  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2458   00110E  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2459   001110  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2460   001112  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2461   001114  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2462   001116  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2463   001118  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2464   00111A  B4D8               	btfsc	status,2,c
  2465   00111C  EF92  F008         	goto	u1581
  2466   001120  EF94  F008         	goto	u1580
  2467   001124                     u1581:
  2468   001124  EFE6  F008         	goto	l3017
  2469   001128                     u1580:
  2470   001128  0E01               	movlw	1
  2471   00112A  6E15               	movwf	___aodiv@counter^0,c
  2472   00112C  EFA2  F008         	goto	l3003
  2473   001130                     l3001:
  2474   001130  90D8               	bcf	status,0,c
  2475   001132  360D               	rlcf	___aodiv@divisor^0,f,c
  2476   001134  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2477   001136  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2478   001138  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2479   00113A  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2480   00113C  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2481   00113E  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2482   001140  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2483   001142  2A15               	incf	___aodiv@counter^0,f,c
  2484   001144                     l3003:
  2485   001144  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2486   001146  EFA7  F008         	goto	u1591
  2487   00114A  EFA9  F008         	goto	u1590
  2488   00114E                     u1591:
  2489   00114E  EF98  F008         	goto	l3001
  2490   001152                     u1590:
  2491   001152                     l3005:
  2492   001152  90D8               	bcf	status,0,c
  2493   001154  3617               	rlcf	___aodiv@quotient^0,f,c
  2494   001156  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2495   001158  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2496   00115A  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2497   00115C  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2498   00115E  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2499   001160  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2500   001162  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2501   001164  500D               	movf	___aodiv@divisor^0,w,c
  2502   001166  5C05               	subwf	___aodiv@dividend^0,w,c
  2503   001168  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2504   00116A  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2505   00116C  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2506   00116E  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2507   001170  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2508   001172  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2509   001174  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2510   001176  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2511   001178  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2512   00117A  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2513   00117C  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2514   00117E  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2515   001180  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2516   001182  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2517   001184  A0D8               	btfss	status,0,c
  2518   001186  EFC7  F008         	goto	u1601
  2519   00118A  EFC9  F008         	goto	u1600
  2520   00118E                     u1601:
  2521   00118E  EFDA  F008         	goto	l3013
  2522   001192                     u1600:
  2523   001192  500D               	movf	___aodiv@divisor^0,w,c
  2524   001194  5E05               	subwf	___aodiv@dividend^0,f,c
  2525   001196  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2526   001198  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2527   00119A  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2528   00119C  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2529   00119E  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2530   0011A0  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2531   0011A2  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2532   0011A4  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2533   0011A6  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2534   0011A8  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2535   0011AA  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2536   0011AC  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2537   0011AE  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2538   0011B0  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2539   0011B2  8017               	bsf	___aodiv@quotient^0,0,c
  2540   0011B4                     l3013:
  2541   0011B4  90D8               	bcf	status,0,c
  2542   0011B6  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2543   0011B8  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2544   0011BA  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2545   0011BC  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2546   0011BE  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2547   0011C0  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2548   0011C2  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2549   0011C4  320D               	rrcf	___aodiv@divisor^0,f,c
  2550   0011C6  2E15               	decfsz	___aodiv@counter^0,f,c
  2551   0011C8  EFA9  F008         	goto	l3005
  2552   0011CC                     l3017:
  2553   0011CC  5016               	movf	___aodiv@sign^0,w,c
  2554   0011CE  B4D8               	btfsc	status,2,c
  2555   0011D0  EFEC  F008         	goto	u1611
  2556   0011D4  EFEE  F008         	goto	u1610
  2557   0011D8                     u1611:
  2558   0011D8  EFFE  F008         	goto	l3021
  2559   0011DC                     u1610:
  2560   0011DC  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2561   0011DE  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2562   0011E0  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2563   0011E2  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2564   0011E4  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2565   0011E6  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2566   0011E8  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2567   0011EA  6C17               	negf	___aodiv@quotient^0,c
  2568   0011EC  0E00               	movlw	0
  2569   0011EE  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2570   0011F0  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2571   0011F2  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2572   0011F4  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2573   0011F6  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2574   0011F8  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2575   0011FA  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2576   0011FC                     l3021:
  2577   0011FC  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2578   001200  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2579   001204  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2580   001208  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2581   00120C  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2582   001210  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2583   001214  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2584   001218  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2585   00121C  0012               	return		;funcret
  2586   00121E                     __end_of___aodiv:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _setMotorPWM *****************
  2590 ;; Defined at:
  2591 ;;		line 61 in file "dc_motor.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  m               2   17[COMRAM] PTR struct DC_motor
  2594 ;;		 -> main@motorR(9), main@motorL(9), 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  negDuty         1   22[COMRAM] unsigned char 
  2597 ;;  posDuty         1   21[COMRAM] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;Total ram usage:        6 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 5
  2614 ;; This function calls:
  2615 ;;		___lwdiv
  2616 ;;		___wmul
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;;		_stop
  2620 ;;		_turnLeft45
  2621 ;;		_turnRight45
  2622 ;;		_fullSpeedAhead
  2623 ;;		_reverseFullSpeed
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text12
  2628   00121E                     __ptext12:
  2629                           	callstack 0
  2630   00121E                     _setMotorPWM:
  2631                           	callstack 25
  2632   00121E                     
  2633                           ;dc_motor.c: 61: void setMotorPWM(DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 65:     if(m->brakemode) {
  2634   00121E  EE20 F002          	lfsr	2,2
  2635   001222  5012               	movf	setMotorPWM@m^0,w,c
  2636   001224  26D9               	addwf	fsr2l,f,c
  2637   001226  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2638   001228  22DA               	addwfc	fsr2h,f,c
  2639   00122A  50DF               	movf	indf2,w,c
  2640   00122C  B4D8               	btfsc	status,2,c
  2641   00122E  EF1B  F009         	goto	u1251
  2642   001232  EF1D  F009         	goto	u1250
  2643   001236                     u1251:
  2644   001236  EF51  F009         	goto	l2509
  2645   00123A                     u1250:
  2646   00123A                     
  2647                           ;dc_motor.c: 66:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2648   00123A  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  2649   00123E  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2650   001242  50DF               	movf	indf2,w,c
  2651   001244  6E14               	movwf	??_setMotorPWM^0,c
  2652   001246  5014               	movf	??_setMotorPWM^0,w,c
  2653   001248  6E05               	movwf	___wmul@multiplier^0,c
  2654   00124A  6A06               	clrf	(___wmul@multiplier+1)^0,c
  2655   00124C  EE20 F003          	lfsr	2,3
  2656   001250  5012               	movf	setMotorPWM@m^0,w,c
  2657   001252  26D9               	addwf	fsr2l,f,c
  2658   001254  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2659   001256  22DA               	addwfc	fsr2h,f,c
  2660   001258  CFDE F007          	movff	postinc2,___wmul@multiplicand
  2661   00125C  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  2662   001260  EC34  F00F         	call	___wmul	;wreg free
  2663   001264  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2664   001268  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2665   00126C  0E00               	movlw	0
  2666   00126E  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  2667   001270  0E64               	movlw	100
  2668   001272  6E0D               	movwf	___lwdiv@divisor^0,c
  2669   001274  ECBE  F00C         	call	___lwdiv	;wreg free
  2670   001278  EE20 F003          	lfsr	2,3
  2671   00127C  5012               	movf	setMotorPWM@m^0,w,c
  2672   00127E  26D9               	addwf	fsr2l,f,c
  2673   001280  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2674   001282  22DA               	addwfc	fsr2h,f,c
  2675   001284  50DF               	movf	indf2,w,c
  2676   001286  6E15               	movwf	(??_setMotorPWM+1)^0,c
  2677   001288  500B               	movf	?___lwdiv^0,w,c
  2678   00128A  5C15               	subwf	(??_setMotorPWM+1)^0,w,c
  2679   00128C  6E16               	movwf	setMotorPWM@posDuty^0,c
  2680   00128E                     
  2681                           ;dc_motor.c: 67:         negDuty=m->PWMperiod;
  2682   00128E  EE20 F003          	lfsr	2,3
  2683   001292  5012               	movf	setMotorPWM@m^0,w,c
  2684   001294  26D9               	addwf	fsr2l,f,c
  2685   001296  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2686   001298  22DA               	addwfc	fsr2h,f,c
  2687   00129A  50DF               	movf	indf2,w,c
  2688   00129C  6E17               	movwf	setMotorPWM@negDuty^0,c
  2689                           
  2690                           ;dc_motor.c: 68:     }
  2691   00129E  EF74  F009         	goto	l2513
  2692   0012A2                     l2509:
  2693                           
  2694                           ;dc_motor.c: 70:         posDuty=0;
  2695   0012A2  0E00               	movlw	0
  2696   0012A4  6E16               	movwf	setMotorPWM@posDuty^0,c
  2697   0012A6                     
  2698                           ;dc_motor.c: 71:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2699   0012A6  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  2700   0012AA  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2701   0012AE  50DF               	movf	indf2,w,c
  2702   0012B0  6E14               	movwf	??_setMotorPWM^0,c
  2703   0012B2  5014               	movf	??_setMotorPWM^0,w,c
  2704   0012B4  6E05               	movwf	___wmul@multiplier^0,c
  2705   0012B6  6A06               	clrf	(___wmul@multiplier+1)^0,c
  2706   0012B8  EE20 F003          	lfsr	2,3
  2707   0012BC  5012               	movf	setMotorPWM@m^0,w,c
  2708   0012BE  26D9               	addwf	fsr2l,f,c
  2709   0012C0  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2710   0012C2  22DA               	addwfc	fsr2h,f,c
  2711   0012C4  CFDE F007          	movff	postinc2,___wmul@multiplicand
  2712   0012C8  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  2713   0012CC  EC34  F00F         	call	___wmul	;wreg free
  2714   0012D0  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2715   0012D4  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2716   0012D8  0E00               	movlw	0
  2717   0012DA  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  2718   0012DC  0E64               	movlw	100
  2719   0012DE  6E0D               	movwf	___lwdiv@divisor^0,c
  2720   0012E0  ECBE  F00C         	call	___lwdiv	;wreg free
  2721   0012E4  500B               	movf	?___lwdiv^0,w,c
  2722   0012E6  6E17               	movwf	setMotorPWM@negDuty^0,c
  2723   0012E8                     l2513:
  2724                           
  2725                           ;dc_motor.c: 74:     if (m->direction) {
  2726   0012E8  EE20 F001          	lfsr	2,1
  2727   0012EC  5012               	movf	setMotorPWM@m^0,w,c
  2728   0012EE  26D9               	addwf	fsr2l,f,c
  2729   0012F0  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2730   0012F2  22DA               	addwfc	fsr2h,f,c
  2731   0012F4  50DF               	movf	indf2,w,c
  2732   0012F6  B4D8               	btfsc	status,2,c
  2733   0012F8  EF80  F009         	goto	u1261
  2734   0012FC  EF82  F009         	goto	u1260
  2735   001300                     u1261:
  2736   001300  EFA4  F009         	goto	l2517
  2737   001304                     u1260:
  2738   001304                     
  2739                           ;dc_motor.c: 75:         *(m->posDutyHighByte)=posDuty;
  2740   001304  EE20 F005          	lfsr	2,5
  2741   001308  5012               	movf	setMotorPWM@m^0,w,c
  2742   00130A  26D9               	addwf	fsr2l,f,c
  2743   00130C  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2744   00130E  22DA               	addwfc	fsr2h,f,c
  2745   001310  CFDE F014          	movff	postinc2,??_setMotorPWM
  2746   001314  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2747   001318  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2748   00131C  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2749   001320  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  2750                           
  2751                           ;dc_motor.c: 76:         *(m->negDutyHighByte)=negDuty;
  2752   001324  EE20 F007          	lfsr	2,7
  2753   001328  5012               	movf	setMotorPWM@m^0,w,c
  2754   00132A  26D9               	addwf	fsr2l,f,c
  2755   00132C  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2756   00132E  22DA               	addwfc	fsr2h,f,c
  2757   001330  CFDE F014          	movff	postinc2,??_setMotorPWM
  2758   001334  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2759   001338  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2760   00133C  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2761   001340  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  2762                           
  2763                           ;dc_motor.c: 77:     } else {
  2764   001344  EFC4  F009         	goto	l86
  2765   001348                     l2517:
  2766                           
  2767                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=negDuty;
  2768   001348  EE20 F005          	lfsr	2,5
  2769   00134C  5012               	movf	setMotorPWM@m^0,w,c
  2770   00134E  26D9               	addwf	fsr2l,f,c
  2771   001350  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2772   001352  22DA               	addwfc	fsr2h,f,c
  2773   001354  CFDE F014          	movff	postinc2,??_setMotorPWM
  2774   001358  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2775   00135C  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2776   001360  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2777   001364  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  2778                           
  2779                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=posDuty;
  2780   001368  EE20 F007          	lfsr	2,7
  2781   00136C  5012               	movf	setMotorPWM@m^0,w,c
  2782   00136E  26D9               	addwf	fsr2l,f,c
  2783   001370  5013               	movf	(setMotorPWM@m+1)^0,w,c
  2784   001372  22DA               	addwfc	fsr2h,f,c
  2785   001374  CFDE F014          	movff	postinc2,??_setMotorPWM
  2786   001378  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  2787   00137C  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  2788   001380  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2789   001384  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  2790   001388                     l86:
  2791   001388  0012               	return		;funcret
  2792   00138A                     __end_of_setMotorPWM:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function ___wmul *****************
  2796 ;; Defined at:
  2797 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  multiplier      2    4[COMRAM] unsigned int 
  2800 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  product         2    8[COMRAM] unsigned int 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  2    4[COMRAM] unsigned int 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, prodl, prodh
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;Total ram usage:        6 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 4
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_setMotorPWM
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text13
  2827   001E68                     __ptext13:
  2828                           	callstack 0
  2829   001E68                     ___wmul:
  2830                           	callstack 25
  2831   001E68  5005               	movf	___wmul@multiplier^0,w,c
  2832   001E6A  0207               	mulwf	___wmul@multiplicand^0,c
  2833   001E6C  CFF3 F009          	movff	prodl,___wmul@product
  2834   001E70  CFF4 F00A          	movff	prodh,___wmul@product+1
  2835   001E74  5005               	movf	___wmul@multiplier^0,w,c
  2836   001E76  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  2837   001E78  50F3               	movf	243,w,c
  2838   001E7A  260A               	addwf	(___wmul@product+1)^0,f,c
  2839   001E7C  5006               	movf	(___wmul@multiplier+1)^0,w,c
  2840   001E7E  0207               	mulwf	___wmul@multiplicand^0,c
  2841   001E80  50F3               	movf	243,w,c
  2842   001E82  260A               	addwf	(___wmul@product+1)^0,f,c
  2843   001E84  C009  F005         	movff	___wmul@product,?___wmul
  2844   001E88  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  2845   001E8C  0012               	return		;funcret
  2846   001E8E                     __end_of___wmul:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function ___lwdiv *****************
  2850 ;; Defined at:
  2851 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  dividend        2   10[COMRAM] unsigned int 
  2854 ;;  divisor         2   12[COMRAM] unsigned int 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  quotient        2   14[COMRAM] unsigned int 
  2857 ;;  counter         1   16[COMRAM] unsigned char 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  2   10[COMRAM] unsigned int 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;Total ram usage:        7 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 4
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_setMotorPWM
  2878 ;;		_collect_avg_readings
  2879 ;;		_normalise_readings
  2880 ;;		_make_master_closeness
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text14
  2885   00197C                     __ptext14:
  2886                           	callstack 0
  2887   00197C                     ___lwdiv:
  2888                           	callstack 25
  2889   00197C  0E00               	movlw	0
  2890   00197E  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  2891   001980  0E00               	movlw	0
  2892   001982  6E0F               	movwf	___lwdiv@quotient^0,c
  2893   001984  500D               	movf	___lwdiv@divisor^0,w,c
  2894   001986  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2895   001988  B4D8               	btfsc	status,2,c
  2896   00198A  EFC9  F00C         	goto	u1211
  2897   00198E  EFCB  F00C         	goto	u1210
  2898   001992                     u1211:
  2899   001992  EFF3  F00C         	goto	l966
  2900   001996                     u1210:
  2901   001996  0E01               	movlw	1
  2902   001998  6E11               	movwf	___lwdiv@counter^0,c
  2903   00199A  EFD3  F00C         	goto	l2411
  2904   00199E                     l2409:
  2905   00199E  90D8               	bcf	status,0,c
  2906   0019A0  360D               	rlcf	___lwdiv@divisor^0,f,c
  2907   0019A2  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2908   0019A4  2A11               	incf	___lwdiv@counter^0,f,c
  2909   0019A6                     l2411:
  2910   0019A6  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  2911   0019A8  EFD8  F00C         	goto	u1221
  2912   0019AC  EFDA  F00C         	goto	u1220
  2913   0019B0                     u1221:
  2914   0019B0  EFCF  F00C         	goto	l2409
  2915   0019B4                     u1220:
  2916   0019B4                     l2413:
  2917   0019B4  90D8               	bcf	status,0,c
  2918   0019B6  360F               	rlcf	___lwdiv@quotient^0,f,c
  2919   0019B8  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2920   0019BA  500D               	movf	___lwdiv@divisor^0,w,c
  2921   0019BC  5C0B               	subwf	___lwdiv@dividend^0,w,c
  2922   0019BE  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  2923   0019C0  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2924   0019C2  A0D8               	btfss	status,0,c
  2925   0019C4  EFE6  F00C         	goto	u1231
  2926   0019C8  EFE8  F00C         	goto	u1230
  2927   0019CC                     u1231:
  2928   0019CC  EFED  F00C         	goto	l2421
  2929   0019D0                     u1230:
  2930   0019D0  500D               	movf	___lwdiv@divisor^0,w,c
  2931   0019D2  5E0B               	subwf	___lwdiv@dividend^0,f,c
  2932   0019D4  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  2933   0019D6  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2934   0019D8  800F               	bsf	___lwdiv@quotient^0,0,c
  2935   0019DA                     l2421:
  2936   0019DA  90D8               	bcf	status,0,c
  2937   0019DC  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2938   0019DE  320D               	rrcf	___lwdiv@divisor^0,f,c
  2939   0019E0  2E11               	decfsz	___lwdiv@counter^0,f,c
  2940   0019E2  EFDA  F00C         	goto	l2413
  2941   0019E6                     l966:
  2942   0019E6  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  2943   0019EA  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2944   0019EE  0012               	return		;funcret
  2945   0019F0                     __end_of___lwdiv:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _sendStringSerial4 *****************
  2949 ;; Defined at:
  2950 ;;		line 39 in file "serial.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  string          2    5[COMRAM] PTR unsigned char 
  2953 ;;		 -> main@buf(20), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 5
  2972 ;; This function calls:
  2973 ;;		_sendCharSerial4
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text15
  2980   001DBE                     __ptext15:
  2981                           	callstack 0
  2982   001DBE                     _sendStringSerial4:
  2983                           	callstack 25
  2984   001DBE                     
  2985                           ;serial.c: 40:  while(*string != 0) {
  2986   001DBE  EFEA  F00E         	goto	l2637
  2987   001DC2                     l2633:
  2988                           
  2989                           ;serial.c: 41:         sendCharSerial4(*string++);
  2990   001DC2  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2991   001DC6  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2992   001DCA  50DF               	movf	indf2,w,c
  2993   001DCC  EC78  F00F         	call	_sendCharSerial4
  2994   001DD0  4A06               	infsnz	sendStringSerial4@string^0,f,c
  2995   001DD2  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  2996   001DD4                     l2637:
  2997                           
  2998                           ;serial.c: 40:  while(*string != 0) {
  2999   001DD4  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  3000   001DD8  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3001   001DDC  50DF               	movf	indf2,w,c
  3002   001DDE  A4D8               	btfss	status,2,c
  3003   001DE0  EFF4  F00E         	goto	u1321
  3004   001DE4  EFF6  F00E         	goto	u1320
  3005   001DE8                     u1321:
  3006   001DE8  EFE1  F00E         	goto	l2633
  3007   001DEC                     u1320:
  3008   001DEC  0012               	return		;funcret
  3009   001DEE                     __end_of_sendStringSerial4:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _sendCharSerial4 *****************
  3013 ;; Defined at:
  3014 ;;		line 32 in file "serial.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  charToSend      1    wreg     unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  charToSend      1    4[COMRAM] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;Total ram usage:        1 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 4
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_sendStringSerial4
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text16
  3043   001EF0                     __ptext16:
  3044                           	callstack 0
  3045   001EF0                     _sendCharSerial4:
  3046                           	callstack 25
  3047                           
  3048                           ;incstack = 0
  3049                           ;sendCharSerial4@charToSend stored from wreg
  3050   001EF0  6E05               	movwf	sendCharSerial4@charToSend^0,c
  3051   001EF2                     l377:
  3052   001EF2  010E               	movlb	14	; () banked
  3053   001EF4  A537               	btfss	55,2,b	;volatile
  3054   001EF6  EF7F  F00F         	goto	u1181
  3055   001EFA  EF81  F00F         	goto	u1180
  3056   001EFE                     u1181:
  3057   001EFE  EF79  F00F         	goto	l377
  3058   001F02                     u1180:
  3059   001F02                     
  3060                           ; BSR set to: 14
  3061                           ;serial.c: 34:     TX4REG = charToSend;
  3062   001F02  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3063   001F06                     
  3064                           ; BSR set to: 14
  3065   001F06  0012               	return		;funcret
  3066   001F08                     __end_of_sendCharSerial4:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _initUSART4 *****************
  3070 ;; Defined at:
  3071 ;;		line 6 in file "serial.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 4
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text17
  3100   001EB0                     __ptext17:
  3101                           	callstack 0
  3102   001EB0                     _initUSART4:
  3103                           	callstack 26
  3104   001EB0                     
  3105                           ;serial.c: 10:     RC0PPS = 0x12;
  3106   001EB0  0E12               	movlw	18
  3107   001EB2  010E               	movlb	14	; () banked
  3108   001EB4  6F62               	movwf	98,b	;volatile
  3109                           
  3110                           ;serial.c: 11:     RX4PPS = 0x11;
  3111   001EB6  0E11               	movlw	17
  3112   001EB8  6F15               	movwf	21,b	;volatile
  3113   001EBA                     
  3114                           ; BSR set to: 14
  3115                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3116   001EBA  8283               	bsf	131,1,c	;volatile
  3117   001EBC                     
  3118                           ; BSR set to: 14
  3119                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3120   001EBC  97E9               	bcf	233,3,b	;volatile
  3121   001EBE                     
  3122                           ; BSR set to: 14
  3123                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3124   001EBE  95E8               	bcf	232,2,b	;volatile
  3125                           
  3126                           ;serial.c: 17:     SP4BRGL = 51;
  3127   001EC0  0E33               	movlw	51
  3128   001EC2  6FE5               	movwf	229,b	;volatile
  3129                           
  3130                           ;serial.c: 18:     SP4BRGH = 0;
  3131   001EC4  0E00               	movlw	0
  3132   001EC6  6FE6               	movwf	230,b	;volatile
  3133   001EC8                     
  3134                           ; BSR set to: 14
  3135                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  3136   001EC8  89E7               	bsf	231,4,b	;volatile
  3137   001ECA                     
  3138                           ; BSR set to: 14
  3139                           ;serial.c: 21:     TX4STAbits.TXEN = 1;
  3140   001ECA  8BE8               	bsf	232,5,b	;volatile
  3141   001ECC                     
  3142                           ; BSR set to: 14
  3143                           ;serial.c: 22:     RC4STAbits.SPEN = 1;
  3144   001ECC  8FE7               	bsf	231,7,b	;volatile
  3145   001ECE                     
  3146                           ; BSR set to: 14
  3147   001ECE  0012               	return		;funcret
  3148   001ED0                     __end_of_initUSART4:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _initDCmotorsPWM *****************
  3152 ;; Defined at:
  3153 ;;		line 6 in file "dc_motor.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 4
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text18
  3182   00187A                     __ptext18:
  3183                           	callstack 0
  3184   00187A                     _initDCmotorsPWM:
  3185                           	callstack 26
  3186   00187A                     
  3187                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
  3188   00187A  9485               	bcf	133,2,c	;volatile
  3189                           
  3190                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3191   00187C  9885               	bcf	133,4,c	;volatile
  3192                           
  3193                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
  3194   00187E  9E83               	bcf	131,7,c	;volatile
  3195                           
  3196                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
  3197   001880  9C87               	bcf	135,6,c	;volatile
  3198   001882                     
  3199                           ;dc_motor.c: 14:     RE2PPS=0x05;
  3200   001882  0E05               	movlw	5
  3201   001884  010E               	movlb	14	; () banked
  3202   001886  6F74               	movwf	116,b	;volatile
  3203                           
  3204                           ;dc_motor.c: 15:     RE4PPS=0x06;
  3205   001888  0E06               	movlw	6
  3206   00188A  6F76               	movwf	118,b	;volatile
  3207                           
  3208                           ;dc_motor.c: 16:     RC7PPS=0x07;
  3209   00188C  0E07               	movlw	7
  3210   00188E  6F69               	movwf	105,b	;volatile
  3211                           
  3212                           ;dc_motor.c: 17:     RG6PPS=0x08;
  3213   001890  0E08               	movlw	8
  3214   001892  6F88               	movwf	136,b	;volatile
  3215                           
  3216                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b100;
  3217   001894  50BD               	movf	189,w,c	;volatile
  3218   001896  0B8F               	andlw	-113
  3219   001898  0940               	iorlw	64
  3220   00189A  6EBD               	movwf	189,c	;volatile
  3221                           
  3222                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  3223   00189C  0EE0               	movlw	-32
  3224   00189E  16BE               	andwf	190,f,c	;volatile
  3225                           
  3226                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  3227   0018A0  50BF               	movf	191,w,c	;volatile
  3228   0018A2  0BF0               	andlw	-16
  3229   0018A4  0901               	iorlw	1
  3230   0018A6  6EBF               	movwf	191,c	;volatile
  3231                           
  3232                           ;dc_motor.c: 26:     T2PR=99;
  3233   0018A8  0E63               	movlw	99
  3234   0018AA  6EBC               	movwf	188,c	;volatile
  3235   0018AC                     
  3236                           ; BSR set to: 14
  3237                           ;dc_motor.c: 27:     T2CONbits.ON=1;
  3238   0018AC  8EBD               	bsf	189,7,c	;volatile
  3239                           
  3240                           ;dc_motor.c: 31:     CCPR1H=0;
  3241   0018AE  0E00               	movlw	0
  3242   0018B0  6EAA               	movwf	170,c	;volatile
  3243                           
  3244                           ;dc_motor.c: 32:     CCPR2H=0;
  3245   0018B2  0E00               	movlw	0
  3246   0018B4  6EA6               	movwf	166,c	;volatile
  3247                           
  3248                           ;dc_motor.c: 33:     CCPR3H=0;
  3249   0018B6  0E00               	movlw	0
  3250   0018B8  010F               	movlb	15	; () banked
  3251   0018BA  6F25               	movwf	37,b	;volatile
  3252                           
  3253                           ;dc_motor.c: 34:     CCPR4H=0;
  3254   0018BC  0E00               	movlw	0
  3255   0018BE  6F21               	movwf	33,b	;volatile
  3256                           
  3257                           ;dc_motor.c: 37:     CCPTMRS0bits.C1TSEL=0;
  3258   0018C0  0EFC               	movlw	-4
  3259   0018C2  16AD               	andwf	173,f,c	;volatile
  3260                           
  3261                           ;dc_motor.c: 38:     CCPTMRS0bits.C2TSEL=0;
  3262   0018C4  0EF3               	movlw	-13
  3263   0018C6  16AD               	andwf	173,f,c	;volatile
  3264                           
  3265                           ;dc_motor.c: 39:     CCPTMRS0bits.C3TSEL=0;
  3266   0018C8  0ECF               	movlw	-49
  3267   0018CA  16AD               	andwf	173,f,c	;volatile
  3268                           
  3269                           ;dc_motor.c: 40:     CCPTMRS0bits.C4TSEL=0;
  3270   0018CC  0E3F               	movlw	-193
  3271   0018CE  16AD               	andwf	173,f,c	;volatile
  3272   0018D0                     
  3273                           ; BSR set to: 15
  3274                           ;dc_motor.c: 43:     CCP1CONbits.FMT=1;
  3275   0018D0  88AB               	bsf	171,4,c	;volatile
  3276                           
  3277                           ;dc_motor.c: 44:     CCP1CONbits.CCP1MODE=0b1100;
  3278   0018D2  50AB               	movf	171,w,c	;volatile
  3279   0018D4  0BF0               	andlw	-16
  3280   0018D6  090C               	iorlw	12
  3281   0018D8  6EAB               	movwf	171,c	;volatile
  3282   0018DA                     
  3283                           ; BSR set to: 15
  3284                           ;dc_motor.c: 45:     CCP1CONbits.EN=1;
  3285   0018DA  8EAB               	bsf	171,7,c	;volatile
  3286   0018DC                     
  3287                           ; BSR set to: 15
  3288                           ;dc_motor.c: 47:     CCP2CONbits.FMT=1;
  3289   0018DC  88A7               	bsf	167,4,c	;volatile
  3290                           
  3291                           ;dc_motor.c: 48:     CCP2CONbits.CCP2MODE=0b1100;
  3292   0018DE  50A7               	movf	167,w,c	;volatile
  3293   0018E0  0BF0               	andlw	-16
  3294   0018E2  090C               	iorlw	12
  3295   0018E4  6EA7               	movwf	167,c	;volatile
  3296   0018E6                     
  3297                           ; BSR set to: 15
  3298                           ;dc_motor.c: 49:     CCP2CONbits.EN=1;
  3299   0018E6  8EA7               	bsf	167,7,c	;volatile
  3300   0018E8                     
  3301                           ; BSR set to: 15
  3302                           ;dc_motor.c: 51:     CCP3CONbits.FMT=1;
  3303   0018E8  8926               	bsf	38,4,b	;volatile
  3304                           
  3305                           ;dc_motor.c: 52:     CCP3CONbits.CCP3MODE=0b1100;
  3306   0018EA  5126               	movf	38,w,b	;volatile
  3307   0018EC  0BF0               	andlw	-16
  3308   0018EE  090C               	iorlw	12
  3309   0018F0  6F26               	movwf	38,b	;volatile
  3310   0018F2                     
  3311                           ; BSR set to: 15
  3312                           ;dc_motor.c: 53:     CCP3CONbits.EN=1;
  3313   0018F2  8F26               	bsf	38,7,b	;volatile
  3314   0018F4                     
  3315                           ; BSR set to: 15
  3316                           ;dc_motor.c: 55:     CCP4CONbits.FMT=1;
  3317   0018F4  8922               	bsf	34,4,b	;volatile
  3318                           
  3319                           ;dc_motor.c: 56:     CCP4CONbits.CCP4MODE=0b1100;
  3320   0018F6  5122               	movf	34,w,b	;volatile
  3321   0018F8  0BF0               	andlw	-16
  3322   0018FA  090C               	iorlw	12
  3323   0018FC  6F22               	movwf	34,b	;volatile
  3324   0018FE                     
  3325                           ; BSR set to: 15
  3326                           ;dc_motor.c: 57:     CCP4CONbits.EN=1;
  3327   0018FE  8F22               	bsf	34,7,b	;volatile
  3328   001900                     
  3329                           ; BSR set to: 15
  3330   001900  0012               	return		;funcret
  3331   001902                     __end_of_initDCmotorsPWM:
  3332                           	callstack 0
  3333                           
  3334 ;; *************** function _color_read_Red *****************
  3335 ;; Defined at:
  3336 ;;		line 29 in file "color.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  tmp             2   13[COMRAM] unsigned int 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  2    8[COMRAM] unsigned int 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;Total ram usage:        7 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; Hardware stack levels required when called: 6
  3357 ;; This function calls:
  3358 ;;		_I2C_2_Master_Read
  3359 ;;		_I2C_2_Master_RepStart
  3360 ;;		_I2C_2_Master_Start
  3361 ;;		_I2C_2_Master_Stop
  3362 ;;		_I2C_2_Master_Write
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;;		_collect_avg_readings
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text19
  3370   001AFE                     __ptext19:
  3371                           	callstack 0
  3372   001AFE                     _color_read_Red:
  3373                           	callstack 24
  3374   001AFE                     
  3375                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  3376   001AFE  ECC1  F00F         	call	_I2C_2_Master_Start	;wreg free
  3377                           
  3378                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  3379   001B02  0E52               	movlw	82
  3380   001B04  ECAB  F00F         	call	_I2C_2_Master_Write
  3381                           
  3382                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  3383   001B08  0EB6               	movlw	182
  3384   001B0A  ECAB  F00F         	call	_I2C_2_Master_Write
  3385                           
  3386                           ;color.c: 35:  I2C_2_Master_RepStart();
  3387   001B0E  ECB7  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3388                           
  3389                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  3390   001B12  0E53               	movlw	83
  3391   001B14  ECAB  F00F         	call	_I2C_2_Master_Write
  3392                           
  3393                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  3394   001B18  0E01               	movlw	1
  3395   001B1A  EC66  F00E         	call	_I2C_2_Master_Read
  3396   001B1E  6E0B               	movwf	??_color_read_Red^0,c
  3397   001B20  500B               	movf	??_color_read_Red^0,w,c
  3398   001B22  6E0E               	movwf	color_read_Red@tmp^0,c
  3399   001B24  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  3400                           
  3401                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3402   001B26  0E00               	movlw	0
  3403   001B28  EC66  F00E         	call	_I2C_2_Master_Read
  3404   001B2C  6E0B               	movwf	??_color_read_Red^0,c
  3405   001B2E  500B               	movf	??_color_read_Red^0,w,c
  3406   001B30  6E0D               	movwf	(??_color_read_Red+2)^0,c
  3407   001B32  6A0C               	clrf	(??_color_read_Red+1)^0,c
  3408   001B34  500E               	movf	color_read_Red@tmp^0,w,c
  3409   001B36  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  3410   001B38  6E0E               	movwf	color_read_Red@tmp^0,c
  3411   001B3A  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  3412   001B3C  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  3413   001B3E  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  3414                           
  3415                           ;color.c: 39:  I2C_2_Master_Stop();
  3416   001B40  ECBC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3417   001B44                     
  3418                           ;color.c: 40:  return tmp;
  3419   001B44  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  3420   001B48  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3421   001B4C  0012               	return		;funcret
  3422   001B4E                     __end_of_color_read_Red:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function _color_read_Green *****************
  3426 ;; Defined at:
  3427 ;;		line 43 in file "color.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  tmp             2   13[COMRAM] unsigned int 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  2    8[COMRAM] unsigned int 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;Total ram usage:        7 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 6
  3448 ;; This function calls:
  3449 ;;		_I2C_2_Master_Read
  3450 ;;		_I2C_2_Master_RepStart
  3451 ;;		_I2C_2_Master_Start
  3452 ;;		_I2C_2_Master_Stop
  3453 ;;		_I2C_2_Master_Write
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;;		_collect_avg_readings
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text20
  3461   001B4E                     __ptext20:
  3462                           	callstack 0
  3463   001B4E                     _color_read_Green:
  3464                           	callstack 24
  3465   001B4E                     
  3466                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  3467   001B4E  ECC1  F00F         	call	_I2C_2_Master_Start	;wreg free
  3468                           
  3469                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3470   001B52  0E52               	movlw	82
  3471   001B54  ECAB  F00F         	call	_I2C_2_Master_Write
  3472                           
  3473                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  3474   001B58  0EB8               	movlw	184
  3475   001B5A  ECAB  F00F         	call	_I2C_2_Master_Write
  3476                           
  3477                           ;color.c: 49:  I2C_2_Master_RepStart();
  3478   001B5E  ECB7  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3479                           
  3480                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3481   001B62  0E53               	movlw	83
  3482   001B64  ECAB  F00F         	call	_I2C_2_Master_Write
  3483                           
  3484                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  3485   001B68  0E01               	movlw	1
  3486   001B6A  EC66  F00E         	call	_I2C_2_Master_Read
  3487   001B6E  6E0B               	movwf	??_color_read_Green^0,c
  3488   001B70  500B               	movf	??_color_read_Green^0,w,c
  3489   001B72  6E0E               	movwf	color_read_Green@tmp^0,c
  3490   001B74  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  3491                           
  3492                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3493   001B76  0E00               	movlw	0
  3494   001B78  EC66  F00E         	call	_I2C_2_Master_Read
  3495   001B7C  6E0B               	movwf	??_color_read_Green^0,c
  3496   001B7E  500B               	movf	??_color_read_Green^0,w,c
  3497   001B80  6E0D               	movwf	(??_color_read_Green+2)^0,c
  3498   001B82  6A0C               	clrf	(??_color_read_Green+1)^0,c
  3499   001B84  500E               	movf	color_read_Green@tmp^0,w,c
  3500   001B86  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  3501   001B88  6E0E               	movwf	color_read_Green@tmp^0,c
  3502   001B8A  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  3503   001B8C  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  3504   001B8E  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  3505                           
  3506                           ;color.c: 53:  I2C_2_Master_Stop();
  3507   001B90  ECBC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3508   001B94                     
  3509                           ;color.c: 54:  return tmp;
  3510   001B94  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  3511   001B98  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3512   001B9C  0012               	return		;funcret
  3513   001B9E                     __end_of_color_read_Green:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function _color_read_Clear *****************
  3517 ;; Defined at:
  3518 ;;		line 71 in file "color.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  tmp             2   13[COMRAM] unsigned int 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  2    8[COMRAM] unsigned int 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3534 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3535 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3536 ;;Total ram usage:        7 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 6
  3539 ;; This function calls:
  3540 ;;		_I2C_2_Master_Read
  3541 ;;		_I2C_2_Master_RepStart
  3542 ;;		_I2C_2_Master_Start
  3543 ;;		_I2C_2_Master_Stop
  3544 ;;		_I2C_2_Master_Write
  3545 ;; This function is called by:
  3546 ;;		_main
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text21
  3551   001B9E                     __ptext21:
  3552                           	callstack 0
  3553   001B9E                     _color_read_Clear:
  3554                           	callstack 24
  3555   001B9E                     
  3556                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3557   001B9E  ECC1  F00F         	call	_I2C_2_Master_Start	;wreg free
  3558                           
  3559                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3560   001BA2  0E52               	movlw	82
  3561   001BA4  ECAB  F00F         	call	_I2C_2_Master_Write
  3562                           
  3563                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  3564   001BA8  0EB4               	movlw	180
  3565   001BAA  ECAB  F00F         	call	_I2C_2_Master_Write
  3566                           
  3567                           ;color.c: 77:  I2C_2_Master_RepStart();
  3568   001BAE  ECB7  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3569                           
  3570                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3571   001BB2  0E53               	movlw	83
  3572   001BB4  ECAB  F00F         	call	_I2C_2_Master_Write
  3573                           
  3574                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  3575   001BB8  0E01               	movlw	1
  3576   001BBA  EC66  F00E         	call	_I2C_2_Master_Read
  3577   001BBE  6E0B               	movwf	??_color_read_Clear^0,c
  3578   001BC0  500B               	movf	??_color_read_Clear^0,w,c
  3579   001BC2  6E0E               	movwf	color_read_Clear@tmp^0,c
  3580   001BC4  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3581                           
  3582                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3583   001BC6  0E00               	movlw	0
  3584   001BC8  EC66  F00E         	call	_I2C_2_Master_Read
  3585   001BCC  6E0B               	movwf	??_color_read_Clear^0,c
  3586   001BCE  500B               	movf	??_color_read_Clear^0,w,c
  3587   001BD0  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3588   001BD2  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3589   001BD4  500E               	movf	color_read_Clear@tmp^0,w,c
  3590   001BD6  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3591   001BD8  6E0E               	movwf	color_read_Clear@tmp^0,c
  3592   001BDA  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3593   001BDC  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3594   001BDE  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3595                           
  3596                           ;color.c: 81:  I2C_2_Master_Stop();
  3597   001BE0  ECBC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3598   001BE4                     
  3599                           ;color.c: 82:  return tmp;
  3600   001BE4  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3601   001BE8  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3602   001BEC  0012               	return		;funcret
  3603   001BEE                     __end_of_color_read_Clear:
  3604                           	callstack 0
  3605                           
  3606 ;; *************** function _color_read_Blue *****************
  3607 ;; Defined at:
  3608 ;;		line 57 in file "color.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  tmp             2   13[COMRAM] unsigned int 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  2    8[COMRAM] unsigned int 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;Total ram usage:        7 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 6
  3629 ;; This function calls:
  3630 ;;		_I2C_2_Master_Read
  3631 ;;		_I2C_2_Master_RepStart
  3632 ;;		_I2C_2_Master_Start
  3633 ;;		_I2C_2_Master_Stop
  3634 ;;		_I2C_2_Master_Write
  3635 ;; This function is called by:
  3636 ;;		_main
  3637 ;;		_collect_avg_readings
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text22
  3642   001BEE                     __ptext22:
  3643                           	callstack 0
  3644   001BEE                     _color_read_Blue:
  3645                           	callstack 24
  3646   001BEE                     
  3647                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  3648   001BEE  ECC1  F00F         	call	_I2C_2_Master_Start	;wreg free
  3649                           
  3650                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  3651   001BF2  0E52               	movlw	82
  3652   001BF4  ECAB  F00F         	call	_I2C_2_Master_Write
  3653                           
  3654                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  3655   001BF8  0EBA               	movlw	186
  3656   001BFA  ECAB  F00F         	call	_I2C_2_Master_Write
  3657                           
  3658                           ;color.c: 63:  I2C_2_Master_RepStart();
  3659   001BFE  ECB7  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3660                           
  3661                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  3662   001C02  0E53               	movlw	83
  3663   001C04  ECAB  F00F         	call	_I2C_2_Master_Write
  3664                           
  3665                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  3666   001C08  0E01               	movlw	1
  3667   001C0A  EC66  F00E         	call	_I2C_2_Master_Read
  3668   001C0E  6E0B               	movwf	??_color_read_Blue^0,c
  3669   001C10  500B               	movf	??_color_read_Blue^0,w,c
  3670   001C12  6E0E               	movwf	color_read_Blue@tmp^0,c
  3671   001C14  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3672                           
  3673                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3674   001C16  0E00               	movlw	0
  3675   001C18  EC66  F00E         	call	_I2C_2_Master_Read
  3676   001C1C  6E0B               	movwf	??_color_read_Blue^0,c
  3677   001C1E  500B               	movf	??_color_read_Blue^0,w,c
  3678   001C20  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3679   001C22  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3680   001C24  500E               	movf	color_read_Blue@tmp^0,w,c
  3681   001C26  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3682   001C28  6E0E               	movwf	color_read_Blue@tmp^0,c
  3683   001C2A  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3684   001C2C  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3685   001C2E  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3686                           
  3687                           ;color.c: 67:  I2C_2_Master_Stop();
  3688   001C30  ECBC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3689   001C34                     
  3690                           ;color.c: 68:  return tmp;
  3691   001C34  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3692   001C38  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3693   001C3C  0012               	return		;funcret
  3694   001C3E                     __end_of_color_read_Blue:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function _I2C_2_Master_RepStart *****************
  3698 ;; Defined at:
  3699 ;;		line 33 in file "i2c.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; Hardware stack levels required when called: 5
  3720 ;; This function calls:
  3721 ;;		_I2C_2_Master_Idle
  3722 ;; This function is called by:
  3723 ;;		_color_read_Red
  3724 ;;		_color_read_Green
  3725 ;;		_color_read_Blue
  3726 ;;		_color_read_Clear
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text23
  3731   001F6E                     __ptext23:
  3732                           	callstack 0
  3733   001F6E                     _I2C_2_Master_RepStart:
  3734                           	callstack 24
  3735   001F6E                     
  3736                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3737   001F6E  EC0C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3738   001F72                     
  3739                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3740   001F72  010E               	movlb	14	; () banked
  3741   001F74  83DA               	bsf	218,1,b	;volatile
  3742   001F76                     
  3743                           ; BSR set to: 14
  3744   001F76  0012               	return		;funcret
  3745   001F78                     __end_of_I2C_2_Master_RepStart:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function _I2C_2_Master_Read *****************
  3749 ;; Defined at:
  3750 ;;		line 51 in file "i2c.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  ack             1    wreg     unsigned char 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  ack             1    6[COMRAM] unsigned char 
  3755 ;;  tmp             1    7[COMRAM] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      unsigned char 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3768 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3769 ;;Total ram usage:        3 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; Hardware stack levels required when called: 5
  3772 ;; This function calls:
  3773 ;;		_I2C_2_Master_Idle
  3774 ;; This function is called by:
  3775 ;;		_color_read_Red
  3776 ;;		_color_read_Green
  3777 ;;		_color_read_Blue
  3778 ;;		_color_read_Clear
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text24
  3783   001CCC                     __ptext24:
  3784                           	callstack 0
  3785   001CCC                     _I2C_2_Master_Read:
  3786                           	callstack 24
  3787                           
  3788                           ; BSR set to: 14
  3789                           ;incstack = 0
  3790                           ;I2C_2_Master_Read@ack stored from wreg
  3791   001CCC  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3792   001CCE                     
  3793                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3794   001CCE  EC0C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3795   001CD2                     
  3796                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3797   001CD2  010E               	movlb	14	; () banked
  3798   001CD4  87DA               	bsf	218,3,b	;volatile
  3799                           
  3800                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3801   001CD6  EC0C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3802   001CDA                     
  3803                           ;i2c.c: 57:   tmp = SSP2BUF;
  3804   001CDA  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3805                           
  3806                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3807   001CDE  EC0C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3808   001CE2                     
  3809                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3810   001CE2  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3811   001CE4  B4D8               	btfsc	status,2,c
  3812   001CE6  EF77  F00E         	goto	u1161
  3813   001CEA  EF7B  F00E         	goto	u1160
  3814   001CEE                     u1161:
  3815   001CEE  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3816   001CF0  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3817   001CF2  EF7C  F00E         	goto	u1178
  3818   001CF6                     u1160:
  3819   001CF6  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3820   001CF8                     u1178:
  3821   001CF8  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3822   001CFA  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3823   001CFC  010E               	movlb	14	; () banked
  3824   001CFE  51DA               	movf	218,w,b	;volatile
  3825   001D00  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3826   001D02  0BDF               	andlw	-33
  3827   001D04  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3828   001D06  6FDA               	movwf	218,b	;volatile
  3829   001D08                     
  3830                           ; BSR set to: 14
  3831                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3832   001D08  89DA               	bsf	218,4,b	;volatile
  3833   001D0A                     
  3834                           ; BSR set to: 14
  3835                           ;i2c.c: 61:   return tmp;
  3836   001D0A  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3837   001D0C                     
  3838                           ; BSR set to: 14
  3839   001D0C  0012               	return		;funcret
  3840   001D0E                     __end_of_I2C_2_Master_Read:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _color_click_init *****************
  3844 ;; Defined at:
  3845 ;;		line 5 in file "color.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;Total ram usage:        1 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 7
  3866 ;; This function calls:
  3867 ;;		_I2C_2_Master_Init
  3868 ;;		_color_writetoaddr
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text25
  3875   001D8A                     __ptext25:
  3876                           	callstack 0
  3877   001D8A                     _color_click_init:
  3878                           	callstack 23
  3879   001D8A                     
  3880                           ;color.c: 8:     I2C_2_Master_Init();
  3881   001D8A  ECF7  F00E         	call	_I2C_2_Master_Init	;wreg free
  3882   001D8E                     
  3883                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3884   001D8E  0E01               	movlw	1
  3885   001D90  6E07               	movwf	color_writetoaddr@value^0,c
  3886   001D92  0E00               	movlw	0
  3887   001D94  EC68  F00F         	call	_color_writetoaddr
  3888   001D98                     
  3889                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3890   001D98  0E3F               	movlw	63
  3891   001D9A  6E09               	movwf	??_color_click_init^0,c
  3892   001D9C  0E55               	movlw	85
  3893   001D9E                     u1907:
  3894   001D9E  2EE8               	decfsz	wreg,f,c
  3895   001DA0  D7FE               	bra	u1907
  3896   001DA2  2E09               	decfsz	??_color_click_init^0,f,c
  3897   001DA4  D7FC               	bra	u1907
  3898   001DA6  F000               	nop	
  3899   001DA8                     
  3900                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3901   001DA8  0E03               	movlw	3
  3902   001DAA  6E07               	movwf	color_writetoaddr@value^0,c
  3903   001DAC  0E00               	movlw	0
  3904   001DAE  EC68  F00F         	call	_color_writetoaddr
  3905   001DB2                     
  3906                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3907   001DB2  0ED5               	movlw	213
  3908   001DB4  6E07               	movwf	color_writetoaddr@value^0,c
  3909   001DB6  0E01               	movlw	1
  3910   001DB8  EC68  F00F         	call	_color_writetoaddr
  3911   001DBC  0012               	return		;funcret
  3912   001DBE                     __end_of_color_click_init:
  3913                           	callstack 0
  3914                           
  3915 ;; *************** function _I2C_2_Master_Init *****************
  3916 ;; Defined at:
  3917 ;;		line 4 in file "i2c.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; Hardware stack levels required when called: 4
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_color_click_init
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text26
  3947   001DEE                     __ptext26:
  3948                           	callstack 0
  3949   001DEE                     _I2C_2_Master_Init:
  3950                           	callstack 25
  3951   001DEE                     
  3952                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3953   001DEE  010E               	movlb	14	; () banked
  3954   001DF0  51D9               	movf	217,w,b	;volatile
  3955   001DF2  0BF0               	andlw	-16
  3956   001DF4  0908               	iorlw	8
  3957   001DF6  6FD9               	movwf	217,b	;volatile
  3958   001DF8                     
  3959                           ; BSR set to: 14
  3960                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3961   001DF8  8BD9               	bsf	217,5,b	;volatile
  3962                           
  3963                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3964   001DFA  0E9F               	movlw	159
  3965   001DFC  6FD6               	movwf	214,b	;volatile
  3966   001DFE                     
  3967                           ; BSR set to: 14
  3968                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3969   001DFE  8A84               	bsf	132,5,c	;volatile
  3970   001E00                     
  3971                           ; BSR set to: 14
  3972                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3973   001E00  8C84               	bsf	132,6,c	;volatile
  3974   001E02                     
  3975                           ; BSR set to: 14
  3976                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3977   001E02  9BA7               	bcf	167,5,b	;volatile
  3978   001E04                     
  3979                           ; BSR set to: 14
  3980                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3981   001E04  9DA7               	bcf	167,6,b	;volatile
  3982                           
  3983                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3984   001E06  0E1D               	movlw	29
  3985   001E08  6F1D               	movwf	29,b	;volatile
  3986                           
  3987                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3988   001E0A  0E1E               	movlw	30
  3989   001E0C  6F1C               	movwf	28,b	;volatile
  3990                           
  3991                           ;i2c.c: 18:   RD5PPS=0x1C;
  3992   001E0E  0E1C               	movlw	28
  3993   001E10  6F6F               	movwf	111,b	;volatile
  3994                           
  3995                           ;i2c.c: 19:   RD6PPS=0x1B;
  3996   001E12  0E1B               	movlw	27
  3997   001E14  6F70               	movwf	112,b	;volatile
  3998   001E16                     
  3999                           ; BSR set to: 14
  4000   001E16  0012               	return		;funcret
  4001   001E18                     __end_of_I2C_2_Master_Init:
  4002                           	callstack 0
  4003                           
  4004 ;; *************** function _LEDSon_init *****************
  4005 ;; Defined at:
  4006 ;;		line 18 in file "LEDsOn.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		None
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;Total ram usage:        0 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; Hardware stack levels required when called: 4
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_main
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text27
  4035   001E8E                     __ptext27:
  4036                           	callstack 0
  4037   001E8E                     _LEDSon_init:
  4038                           	callstack 26
  4039   001E8E                     
  4040                           ;LEDsOn.c: 21:     TRISHbits.TRISH1 = 0;
  4041   001E8E  9288               	bcf	136,1,c	;volatile
  4042                           
  4043                           ;LEDsOn.c: 22:     TRISHbits.TRISH0 = 0;
  4044   001E90  9088               	bcf	136,0,c	;volatile
  4045                           
  4046                           ;LEDsOn.c: 23:     TRISDbits.TRISD4 = 0;
  4047   001E92  9884               	bcf	132,4,c	;volatile
  4048                           
  4049                           ;LEDsOn.c: 24:     TRISDbits.TRISD3 = 0;
  4050   001E94  9684               	bcf	132,3,c	;volatile
  4051                           
  4052                           ;LEDsOn.c: 25:     TRISFbits.TRISF0 = 0;
  4053   001E96  9086               	bcf	134,0,c	;volatile
  4054                           
  4055                           ;LEDsOn.c: 28:     TRISGbits.TRISG1 = 0;
  4056   001E98  9287               	bcf	135,1,c	;volatile
  4057                           
  4058                           ;LEDsOn.c: 29:     TRISFbits.TRISF7 = 0;
  4059   001E9A  9E86               	bcf	134,7,c	;volatile
  4060                           
  4061                           ;LEDsOn.c: 30:     TRISAbits.TRISA4 = 0;
  4062   001E9C  9881               	bcf	129,4,c	;volatile
  4063                           
  4064                           ;LEDsOn.c: 32:     LATFbits.LATF7 = 1;
  4065   001E9E  8E7E               	bsf	126,7,c	;volatile
  4066                           
  4067                           ;LEDsOn.c: 33:     LATGbits.LATG1 = 1;
  4068   001EA0  827F               	bsf	127,1,c	;volatile
  4069                           
  4070                           ;LEDsOn.c: 34:     LATAbits.LATA4 = 1;
  4071   001EA2  8879               	bsf	121,4,c	;volatile
  4072                           
  4073                           ;LEDsOn.c: 37:     LATDbits.LATD4 = 0;
  4074   001EA4  987C               	bcf	124,4,c	;volatile
  4075                           
  4076                           ;LEDsOn.c: 38:     LATHbits.LATH1 = 0;
  4077   001EA6  9280               	bcf	128,1,c	;volatile
  4078                           
  4079                           ;LEDsOn.c: 39:     LATFbits.LATF0 = 0;
  4080   001EA8  907E               	bcf	126,0,c	;volatile
  4081                           
  4082                           ;LEDsOn.c: 40:     LATHbits.LATH0 = 0;
  4083   001EAA  9080               	bcf	128,0,c	;volatile
  4084                           
  4085                           ;LEDsOn.c: 41:     LATDbits.LATD3 = 0;
  4086   001EAC  967C               	bcf	124,3,c	;volatile
  4087   001EAE  0012               	return		;funcret
  4088   001EB0                     __end_of_LEDSon_init:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _Interrupts_init *****************
  4092 ;; Defined at:
  4093 ;;		line 7 in file "interrupts.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;Total ram usage:        0 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 8
  4114 ;; This function calls:
  4115 ;;		_enable_color_interrupt
  4116 ;;		_set_interrupt_threshold
  4117 ;; This function is called by:
  4118 ;;		_main
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text28
  4123   001D4E                     __ptext28:
  4124                           	callstack 0
  4125   001D4E                     _Interrupts_init:
  4126                           	callstack 22
  4127   001D4E                     
  4128                           ;interrupts.c: 9:     enable_color_interrupt();
  4129   001D4E  ECA3  F00F         	call	_enable_color_interrupt	;wreg free
  4130                           
  4131                           ;interrupts.c: 10:     set_interrupt_threshold(5, 5000, 0b0100);
  4132   001D52  0E00               	movlw	0
  4133   001D54  6E0A               	movwf	(set_interrupt_threshold@AILT+1)^0,c
  4134   001D56  0E05               	movlw	5
  4135   001D58  6E09               	movwf	set_interrupt_threshold@AILT^0,c
  4136   001D5A  0E13               	movlw	19
  4137   001D5C  6E0C               	movwf	(set_interrupt_threshold@AIHT+1)^0,c
  4138   001D5E  0E88               	movlw	136
  4139   001D60  6E0B               	movwf	set_interrupt_threshold@AIHT^0,c
  4140   001D62  0E00               	movlw	0
  4141   001D64  6E0E               	movwf	(set_interrupt_threshold@persistence+1)^0,c
  4142   001D66  0E04               	movlw	4
  4143   001D68  6E0D               	movwf	set_interrupt_threshold@persistence^0,c
  4144   001D6A  ECF8  F00C         	call	_set_interrupt_threshold	;wreg free
  4145   001D6E                     
  4146                           ;interrupts.c: 11:     TRISBbits.TRISB1 = 1;
  4147   001D6E  8282               	bsf	130,1,c	;volatile
  4148   001D70                     
  4149                           ;interrupts.c: 12:     ANSELBbits.ANSELB1 = 0;
  4150   001D70  010E               	movlb	14	; () banked
  4151   001D72  939A               	bcf	154,1,b	;volatile
  4152   001D74                     
  4153                           ; BSR set to: 14
  4154                           ;interrupts.c: 13:     INT1PPS=0x09;
  4155   001D74  0E09               	movlw	9
  4156   001D76  010D               	movlb	13	; () banked
  4157   001D78  6FF1               	movwf	241,b	;volatile
  4158   001D7A                     
  4159                           ; BSR set to: 13
  4160                           ;interrupts.c: 14:     PIE0bits.INT1IE = 1;
  4161   001D7A  010E               	movlb	14	; () banked
  4162   001D7C  8329               	bsf	41,1,b	;volatile
  4163   001D7E                     
  4164                           ; BSR set to: 14
  4165                           ;interrupts.c: 15:     IPR0bits.INT1IP = 1;
  4166   001D7E  831F               	bsf	31,1,b	;volatile
  4167   001D80                     
  4168                           ; BSR set to: 14
  4169                           ;interrupts.c: 16:     INTCONbits.INT1EDG = 0;
  4170   001D80  92F2               	bcf	242,1,c	;volatile
  4171   001D82                     
  4172                           ; BSR set to: 14
  4173                           ;interrupts.c: 17:     INTCONbits.IPEN = 1;
  4174   001D82  8AF2               	bsf	242,5,c	;volatile
  4175   001D84                     
  4176                           ; BSR set to: 14
  4177                           ;interrupts.c: 18:     INTCONbits.GIEL = 1;
  4178   001D84  8CF2               	bsf	242,6,c	;volatile
  4179   001D86                     
  4180                           ; BSR set to: 14
  4181                           ;interrupts.c: 19:     INTCONbits.GIEH=1;}
  4182   001D86  8EF2               	bsf	242,7,c	;volatile
  4183   001D88                     
  4184                           ; BSR set to: 14
  4185   001D88  0012               	return		;funcret
  4186   001D8A                     __end_of_Interrupts_init:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _set_interrupt_threshold *****************
  4190 ;; Defined at:
  4191 ;;		line 40 in file "interrupts.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  AILT            2    8[COMRAM] unsigned int 
  4194 ;;  AIHT            2   10[COMRAM] unsigned int 
  4195 ;;  persistence     2   12[COMRAM] unsigned int 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4207 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;Total ram usage:        8 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; Hardware stack levels required when called: 7
  4214 ;; This function calls:
  4215 ;;		_color_writetoaddr
  4216 ;; This function is called by:
  4217 ;;		_Interrupts_init
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text29
  4222   0019F0                     __ptext29:
  4223                           	callstack 0
  4224   0019F0                     _set_interrupt_threshold:
  4225                           	callstack 22
  4226   0019F0                     
  4227                           ;interrupts.c: 42:     color_writetoaddr(0x0C, persistence);
  4228   0019F0  C00D  F007         	movff	set_interrupt_threshold@persistence,color_writetoaddr@value
  4229   0019F4  0E0C               	movlw	12
  4230   0019F6  EC68  F00F         	call	_color_writetoaddr
  4231                           
  4232                           ;interrupts.c: 43:     color_writetoaddr(0x05, AILT >> 8);
  4233   0019FA  500A               	movf	(set_interrupt_threshold@AILT+1)^0,w,c
  4234   0019FC  6E07               	movwf	color_writetoaddr@value^0,c
  4235   0019FE  0E05               	movlw	5
  4236   001A00  EC68  F00F         	call	_color_writetoaddr
  4237   001A04                     
  4238                           ;interrupts.c: 44:     color_writetoaddr(0x04, AILT && 0b0000000011111111);
  4239   001A04  0E00               	movlw	0
  4240   001A06  6E0F               	movwf	_set_interrupt_threshold$1949^0,c
  4241   001A08  5009               	movf	set_interrupt_threshold@AILT^0,w,c
  4242   001A0A  100A               	iorwf	(set_interrupt_threshold@AILT+1)^0,w,c
  4243   001A0C  B4D8               	btfsc	status,2,c
  4244   001A0E  EF0B  F00D         	goto	u1191
  4245   001A12  EF0D  F00D         	goto	u1190
  4246   001A16                     u1191:
  4247   001A16  EF0F  F00D         	goto	l2387
  4248   001A1A                     u1190:
  4249   001A1A  0E01               	movlw	1
  4250   001A1C  6E0F               	movwf	_set_interrupt_threshold$1949^0,c
  4251   001A1E                     l2387:
  4252   001A1E  C00F  F007         	movff	_set_interrupt_threshold$1949,color_writetoaddr@value
  4253   001A22  0E04               	movlw	4
  4254   001A24  EC68  F00F         	call	_color_writetoaddr
  4255   001A28                     
  4256                           ;interrupts.c: 45:     color_writetoaddr(0x07, AIHT >> 8);
  4257   001A28  500C               	movf	(set_interrupt_threshold@AIHT+1)^0,w,c
  4258   001A2A  6E07               	movwf	color_writetoaddr@value^0,c
  4259   001A2C  0E07               	movlw	7
  4260   001A2E  EC68  F00F         	call	_color_writetoaddr
  4261                           
  4262                           ;interrupts.c: 46:     color_writetoaddr(0x06, AIHT && 0b0000000011111111);
  4263   001A32  0E00               	movlw	0
  4264   001A34  6E10               	movwf	_set_interrupt_threshold$1950^0,c
  4265   001A36  500B               	movf	set_interrupt_threshold@AIHT^0,w,c
  4266   001A38  100C               	iorwf	(set_interrupt_threshold@AIHT+1)^0,w,c
  4267   001A3A  B4D8               	btfsc	status,2,c
  4268   001A3C  EF22  F00D         	goto	u1201
  4269   001A40  EF24  F00D         	goto	u1200
  4270   001A44                     u1201:
  4271   001A44  EF26  F00D         	goto	l2395
  4272   001A48                     u1200:
  4273   001A48  0E01               	movlw	1
  4274   001A4A  6E10               	movwf	_set_interrupt_threshold$1950^0,c
  4275   001A4C                     l2395:
  4276   001A4C  C010  F007         	movff	_set_interrupt_threshold$1950,color_writetoaddr@value
  4277   001A50  0E06               	movlw	6
  4278   001A52  EC68  F00F         	call	_color_writetoaddr
  4279   001A56  0012               	return		;funcret
  4280   001A58                     __end_of_set_interrupt_threshold:
  4281                           	callstack 0
  4282                           
  4283 ;; *************** function _enable_color_interrupt *****************
  4284 ;; Defined at:
  4285 ;;		line 35 in file "interrupts.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 7
  4306 ;; This function calls:
  4307 ;;		_clear_interrupt_flag
  4308 ;;		_color_writetoaddr
  4309 ;; This function is called by:
  4310 ;;		_Interrupts_init
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text30
  4315   001F46                     __ptext30:
  4316                           	callstack 0
  4317   001F46                     _enable_color_interrupt:
  4318                           	callstack 22
  4319   001F46                     
  4320                           ;interrupts.c: 36:     clear_interrupt_flag();
  4321   001F46  EC84  F00F         	call	_clear_interrupt_flag	;wreg free
  4322                           
  4323                           ;interrupts.c: 37:  color_writetoaddr(0x00, 0b10011);
  4324   001F4A  0E13               	movlw	19
  4325   001F4C  6E07               	movwf	color_writetoaddr@value^0,c
  4326   001F4E  0E00               	movlw	0
  4327   001F50  EC68  F00F         	call	_color_writetoaddr
  4328   001F54  0012               	return		;funcret
  4329   001F56                     __end_of_enable_color_interrupt:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _color_writetoaddr *****************
  4333 ;; Defined at:
  4334 ;;		line 21 in file "color.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  address         1    wreg     unsigned char 
  4337 ;;  value           1    6[COMRAM] unsigned char 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  address         1    7[COMRAM] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4349 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4353 ;;Total ram usage:        2 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 6
  4356 ;; This function calls:
  4357 ;;		_I2C_2_Master_Start
  4358 ;;		_I2C_2_Master_Stop
  4359 ;;		_I2C_2_Master_Write
  4360 ;; This function is called by:
  4361 ;;		_color_click_init
  4362 ;;		_enable_color_interrupt
  4363 ;;		_set_interrupt_threshold
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text31
  4368   001ED0                     __ptext31:
  4369                           	callstack 0
  4370   001ED0                     _color_writetoaddr:
  4371                           	callstack 23
  4372                           
  4373                           ;incstack = 0
  4374                           ;color_writetoaddr@address stored from wreg
  4375   001ED0  6E08               	movwf	color_writetoaddr@address^0,c
  4376   001ED2                     
  4377                           ;color.c: 22:     I2C_2_Master_Start();
  4378   001ED2  ECC1  F00F         	call	_I2C_2_Master_Start	;wreg free
  4379                           
  4380                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4381   001ED6  0E52               	movlw	82
  4382   001ED8  ECAB  F00F         	call	_I2C_2_Master_Write
  4383                           
  4384                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4385   001EDC  5008               	movf	color_writetoaddr@address^0,w,c
  4386   001EDE  0980               	iorlw	128
  4387   001EE0  ECAB  F00F         	call	_I2C_2_Master_Write
  4388                           
  4389                           ;color.c: 25:     I2C_2_Master_Write(value);
  4390   001EE4  5007               	movf	color_writetoaddr@value^0,w,c
  4391   001EE6  ECAB  F00F         	call	_I2C_2_Master_Write
  4392                           
  4393                           ;color.c: 26:     I2C_2_Master_Stop();
  4394   001EEA  ECBC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4395   001EEE  0012               	return		;funcret
  4396   001EF0                     __end_of_color_writetoaddr:
  4397                           	callstack 0
  4398                           
  4399 ;; *************** function _clear_interrupt_flag *****************
  4400 ;; Defined at:
  4401 ;;		line 49 in file "interrupts.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4419 ;;Total ram usage:        0 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 6
  4422 ;; This function calls:
  4423 ;;		_I2C_2_Master_Start
  4424 ;;		_I2C_2_Master_Stop
  4425 ;;		_I2C_2_Master_Write
  4426 ;; This function is called by:
  4427 ;;		_enable_color_interrupt
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text32
  4432   001F08                     __ptext32:
  4433                           	callstack 0
  4434   001F08                     _clear_interrupt_flag:
  4435                           	callstack 22
  4436   001F08                     
  4437                           ;interrupts.c: 50:     I2C_2_Master_Start();
  4438   001F08  ECC1  F00F         	call	_I2C_2_Master_Start	;wreg free
  4439                           
  4440                           ;interrupts.c: 51:     I2C_2_Master_Write(0x52 | 0x00);
  4441   001F0C  0E52               	movlw	82
  4442   001F0E  ECAB  F00F         	call	_I2C_2_Master_Write
  4443                           
  4444                           ;interrupts.c: 52:     I2C_2_Master_Write(0b11100110);
  4445   001F12  0EE6               	movlw	230
  4446   001F14  ECAB  F00F         	call	_I2C_2_Master_Write
  4447                           
  4448                           ;interrupts.c: 53:     I2C_2_Master_Stop();
  4449   001F18  ECBC  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4450   001F1C  0012               	return		;funcret
  4451   001F1E                     __end_of_clear_interrupt_flag:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function _I2C_2_Master_Write *****************
  4455 ;; Defined at:
  4456 ;;		line 45 in file "i2c.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  data_byte       1    wreg     unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  data_byte       1    5[COMRAM] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;Total ram usage:        1 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 5
  4477 ;; This function calls:
  4478 ;;		_I2C_2_Master_Idle
  4479 ;; This function is called by:
  4480 ;;		_color_writetoaddr
  4481 ;;		_color_read_Red
  4482 ;;		_color_read_Green
  4483 ;;		_color_read_Blue
  4484 ;;		_color_read_Clear
  4485 ;;		_clear_interrupt_flag
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text33
  4490   001F56                     __ptext33:
  4491                           	callstack 0
  4492   001F56                     _I2C_2_Master_Write:
  4493                           	callstack 24
  4494                           
  4495                           ;incstack = 0
  4496                           ;I2C_2_Master_Write@data_byte stored from wreg
  4497   001F56  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  4498   001F58                     
  4499                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4500   001F58  EC0C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4501   001F5C                     
  4502                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4503   001F5C  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4504   001F60  0012               	return		;funcret
  4505   001F62                     __end_of_I2C_2_Master_Write:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _I2C_2_Master_Stop *****************
  4509 ;; Defined at:
  4510 ;;		line 39 in file "i2c.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 5
  4531 ;; This function calls:
  4532 ;;		_I2C_2_Master_Idle
  4533 ;; This function is called by:
  4534 ;;		_color_writetoaddr
  4535 ;;		_color_read_Red
  4536 ;;		_color_read_Green
  4537 ;;		_color_read_Blue
  4538 ;;		_color_read_Clear
  4539 ;;		_clear_interrupt_flag
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text34
  4544   001F78                     __ptext34:
  4545                           	callstack 0
  4546   001F78                     _I2C_2_Master_Stop:
  4547                           	callstack 24
  4548   001F78                     
  4549                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4550   001F78  EC0C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4551   001F7C                     
  4552                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4553   001F7C  010E               	movlb	14	; () banked
  4554   001F7E  85DA               	bsf	218,2,b	;volatile
  4555   001F80                     
  4556                           ; BSR set to: 14
  4557   001F80  0012               	return		;funcret
  4558   001F82                     __end_of_I2C_2_Master_Stop:
  4559                           	callstack 0
  4560                           
  4561 ;; *************** function _I2C_2_Master_Start *****************
  4562 ;; Defined at:
  4563 ;;		line 27 in file "i2c.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;Total ram usage:        0 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 5
  4584 ;; This function calls:
  4585 ;;		_I2C_2_Master_Idle
  4586 ;; This function is called by:
  4587 ;;		_color_writetoaddr
  4588 ;;		_color_read_Red
  4589 ;;		_color_read_Green
  4590 ;;		_color_read_Blue
  4591 ;;		_color_read_Clear
  4592 ;;		_clear_interrupt_flag
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text35
  4597   001F82                     __ptext35:
  4598                           	callstack 0
  4599   001F82                     _I2C_2_Master_Start:
  4600                           	callstack 24
  4601   001F82                     
  4602                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4603   001F82  EC0C  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4604   001F86                     
  4605                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4606   001F86  010E               	movlb	14	; () banked
  4607   001F88  81DA               	bsf	218,0,b	;volatile
  4608   001F8A                     
  4609                           ; BSR set to: 14
  4610   001F8A  0012               	return		;funcret
  4611   001F8C                     __end_of_I2C_2_Master_Start:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function _I2C_2_Master_Idle *****************
  4615 ;; Defined at:
  4616 ;;		line 22 in file "i2c.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;Total ram usage:        1 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 4
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_I2C_2_Master_Start
  4641 ;;		_I2C_2_Master_RepStart
  4642 ;;		_I2C_2_Master_Stop
  4643 ;;		_I2C_2_Master_Write
  4644 ;;		_I2C_2_Master_Read
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text36
  4649   001E18                     __ptext36:
  4650                           	callstack 0
  4651   001E18                     _I2C_2_Master_Idle:
  4652                           	callstack 24
  4653   001E18                     l145:
  4654   001E18  010E               	movlb	14	; () banked
  4655   001E1A  B5D8               	btfsc	216,2,b	;volatile
  4656   001E1C  EF12  F00F         	goto	u831
  4657   001E20  EF14  F00F         	goto	u830
  4658   001E24                     u831:
  4659   001E24  EF0C  F00F         	goto	l145
  4660   001E28                     u830:
  4661   001E28                     
  4662                           ; BSR set to: 14
  4663   001E28  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4664   001E2C  0E1F               	movlw	31
  4665   001E2E  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  4666   001E30  A4D8               	btfss	status,2,c
  4667   001E32  EF1D  F00F         	goto	u841
  4668   001E36  EF1F  F00F         	goto	u840
  4669   001E3A                     u841:
  4670   001E3A  EF0C  F00F         	goto	l145
  4671   001E3E                     u840:
  4672   001E3E                     
  4673                           ; BSR set to: 14
  4674   001E3E  0012               	return		;funcret
  4675   001E40                     __end_of_I2C_2_Master_Idle:
  4676                           	callstack 0
  4677                           
  4678 ;; *************** function _HighISR *****************
  4679 ;; Defined at:
  4680 ;;		line 21 in file "interrupts.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;		None
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;Total ram usage:        2 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 3
  4701 ;; This function calls:
  4702 ;;		i2_clear_interrupt_flag
  4703 ;; This function is called by:
  4704 ;;		Interrupt level 2
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	intcode
  4709   000008                     __pintcode:
  4710                           	callstack 0
  4711   000008                     _HighISR:
  4712                           	callstack 19
  4713                           
  4714                           ; BSR set to: 14
  4715                           ;incstack = 0
  4716   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4717   00000A                     
  4718                           ;interrupts.c: 24:     if(PIR0bits.INT1IF == 1) {
  4719   00000A  010E               	movlb	14	; () banked
  4720   00000C  A333               	btfss	51,1,b	;volatile
  4721   00000E  EF0B  F000         	goto	i2u148_41
  4722   000012  EF0D  F000         	goto	i2u148_40
  4723   000016                     i2u148_41:
  4724   000016  EF2B  F000         	goto	i2l459
  4725   00001A                     i2u148_40:
  4726   00001A                     
  4727                           ; BSR set to: 14
  4728                           ;interrupts.c: 25:         LATDbits.LATD7=1;
  4729   00001A  8E7C               	bsf	124,7,c	;volatile
  4730   00001C                     
  4731                           ; BSR set to: 14
  4732                           ;interrupts.c: 26:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4733   00001C  0E05               	movlw	5
  4734   00001E  6E04               	movwf	(??_HighISR+1)^0,c
  4735   000020  0E0F               	movlw	15
  4736   000022  6E03               	movwf	??_HighISR^0,c
  4737   000024  0EF1               	movlw	241
  4738   000026                     i2u191_47:
  4739   000026  2EE8               	decfsz	wreg,f,c
  4740   000028  D7FE               	bra	i2u191_47
  4741   00002A  2E03               	decfsz	??_HighISR^0,f,c
  4742   00002C  D7FC               	bra	i2u191_47
  4743   00002E  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4744   000030  D7FA               	bra	i2u191_47
  4745   000032  F000               	nop	
  4746   000034                     
  4747                           ;interrupts.c: 27:         LATDbits.LATD7=0;
  4748   000034  9E7C               	bcf	124,7,c	;volatile
  4749                           
  4750                           ;interrupts.c: 28:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4751   000036  0E05               	movlw	5
  4752   000038  6E04               	movwf	(??_HighISR+1)^0,c
  4753   00003A  0E0F               	movlw	15
  4754   00003C  6E03               	movwf	??_HighISR^0,c
  4755   00003E  0EF1               	movlw	241
  4756   000040                     i2u192_47:
  4757   000040  2EE8               	decfsz	wreg,f,c
  4758   000042  D7FE               	bra	i2u192_47
  4759   000044  2E03               	decfsz	??_HighISR^0,f,c
  4760   000046  D7FC               	bra	i2u192_47
  4761   000048  2E04               	decfsz	(??_HighISR+1)^0,f,c
  4762   00004A  D7FA               	bra	i2u192_47
  4763   00004C  F000               	nop	
  4764   00004E                     
  4765                           ;interrupts.c: 29:         clear_interrupt_flag();
  4766   00004E  EC8F  F00F         	call	i2_clear_interrupt_flag	;wreg free
  4767   000052                     
  4768                           ;interrupts.c: 30:         PIR0bits.INT1IF = 0;
  4769   000052  010E               	movlb	14	; () banked
  4770   000054  9333               	bcf	51,1,b	;volatile
  4771   000056                     i2l459:
  4772                           
  4773                           ; BSR set to: 14
  4774   000056  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4775   000058  0011               	retfie		f
  4776   00005A                     __end_of_HighISR:
  4777                           	callstack 0
  4778                           
  4779 ;; *************** function i2_clear_interrupt_flag *****************
  4780 ;; Defined at:
  4781 ;;		line 49 in file "interrupts.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0, cstack
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;Total ram usage:        0 bytes
  4800 ;; Hardware stack levels used: 1
  4801 ;; Hardware stack levels required when called: 2
  4802 ;; This function calls:
  4803 ;;		i2_I2C_2_Master_Start
  4804 ;;		i2_I2C_2_Master_Stop
  4805 ;;		i2_I2C_2_Master_Write
  4806 ;; This function is called by:
  4807 ;;		_HighISR
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text38
  4812   001F1E                     __ptext38:
  4813                           	callstack 0
  4814   001F1E                     i2_clear_interrupt_flag:
  4815                           	callstack 19
  4816   001F1E                     
  4817                           ;interrupts.c: 50:     I2C_2_Master_Start();
  4818   001F1E  ECCB  F00F         	call	i2_I2C_2_Master_Start	;wreg free
  4819                           
  4820                           ;interrupts.c: 51:     I2C_2_Master_Write(0x52 | 0x00);
  4821   001F22  0E52               	movlw	82
  4822   001F24  ECB1  F00F         	call	i2_I2C_2_Master_Write
  4823                           
  4824                           ;interrupts.c: 52:     I2C_2_Master_Write(0b11100110);
  4825   001F28  0EE6               	movlw	230
  4826   001F2A  ECB1  F00F         	call	i2_I2C_2_Master_Write
  4827                           
  4828                           ;interrupts.c: 53:     I2C_2_Master_Stop();
  4829   001F2E  ECC6  F00F         	call	i2_I2C_2_Master_Stop	;wreg free
  4830   001F32  0012               	return		;funcret
  4831   001F34                     __end_ofi2_clear_interrupt_flag:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function i2_I2C_2_Master_Write *****************
  4835 ;; Defined at:
  4836 ;;		line 45 in file "i2c.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  data_byte       1    wreg     unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  data_byte       1    1[COMRAM] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;Total ram usage:        1 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 1
  4857 ;; This function calls:
  4858 ;;		i2_I2C_2_Master_Idle
  4859 ;; This function is called by:
  4860 ;;		i2_clear_interrupt_flag
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text39
  4865   001F62                     __ptext39:
  4866                           	callstack 0
  4867   001F62                     i2_I2C_2_Master_Write:
  4868                           	callstack 19
  4869                           
  4870                           ;incstack = 0
  4871                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  4872   001F62  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  4873   001F64                     
  4874                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4875   001F64  EC20  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4876   001F68                     
  4877                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4878   001F68  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  4879   001F6C  0012               	return		;funcret
  4880   001F6E                     __end_ofi2_I2C_2_Master_Write:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function i2_I2C_2_Master_Stop *****************
  4884 ;; Defined at:
  4885 ;;		line 39 in file "i2c.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; Hardware stack levels required when called: 1
  4906 ;; This function calls:
  4907 ;;		i2_I2C_2_Master_Idle
  4908 ;; This function is called by:
  4909 ;;		i2_clear_interrupt_flag
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text40
  4914   001F8C                     __ptext40:
  4915                           	callstack 0
  4916   001F8C                     i2_I2C_2_Master_Stop:
  4917                           	callstack 19
  4918   001F8C                     
  4919                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4920   001F8C  EC20  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4921   001F90                     
  4922                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4923   001F90  010E               	movlb	14	; () banked
  4924   001F92  85DA               	bsf	218,2,b	;volatile
  4925   001F94                     
  4926                           ; BSR set to: 14
  4927   001F94  0012               	return		;funcret
  4928   001F96                     __end_ofi2_I2C_2_Master_Stop:
  4929                           	callstack 0
  4930                           
  4931 ;; *************** function i2_I2C_2_Master_Start *****************
  4932 ;; Defined at:
  4933 ;;		line 27 in file "i2c.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;Total ram usage:        0 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; Hardware stack levels required when called: 1
  4954 ;; This function calls:
  4955 ;;		i2_I2C_2_Master_Idle
  4956 ;; This function is called by:
  4957 ;;		i2_clear_interrupt_flag
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text41
  4962   001F96                     __ptext41:
  4963                           	callstack 0
  4964   001F96                     i2_I2C_2_Master_Start:
  4965                           	callstack 19
  4966   001F96                     
  4967                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4968   001F96  EC20  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4969   001F9A                     
  4970                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4971   001F9A  010E               	movlb	14	; () banked
  4972   001F9C  81DA               	bsf	218,0,b	;volatile
  4973   001F9E                     
  4974                           ; BSR set to: 14
  4975   001F9E  0012               	return		;funcret
  4976   001FA0                     __end_ofi2_I2C_2_Master_Start:
  4977                           	callstack 0
  4978                           
  4979 ;; *************** function i2_I2C_2_Master_Idle *****************
  4980 ;; Defined at:
  4981 ;;		line 22 in file "i2c.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;Total ram usage:        1 bytes
  5000 ;; Hardware stack levels used: 1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		i2_I2C_2_Master_Start
  5005 ;;		i2_I2C_2_Master_Stop
  5006 ;;		i2_I2C_2_Master_Write
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text42
  5011   001E40                     __ptext42:
  5012                           	callstack 0
  5013   001E40                     i2_I2C_2_Master_Idle:
  5014                           	callstack 19
  5015   001E40                     i2l145:
  5016   001E40  010E               	movlb	14	; () banked
  5017   001E42  B5D8               	btfsc	216,2,b	;volatile
  5018   001E44  EF26  F00F         	goto	i2u114_41
  5019   001E48  EF28  F00F         	goto	i2u114_40
  5020   001E4C                     i2u114_41:
  5021   001E4C  EF20  F00F         	goto	i2l145
  5022   001E50                     i2u114_40:
  5023   001E50                     
  5024                           ; BSR set to: 14
  5025   001E50  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5026   001E54  0E1F               	movlw	31
  5027   001E56  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5028   001E58  A4D8               	btfss	status,2,c
  5029   001E5A  EF31  F00F         	goto	i2u115_41
  5030   001E5E  EF33  F00F         	goto	i2u115_40
  5031   001E62                     i2u115_41:
  5032   001E62  EF20  F00F         	goto	i2l145
  5033   001E66                     i2u115_40:
  5034   001E66                     
  5035                           ; BSR set to: 14
  5036   001E66  0012               	return		;funcret
  5037   001E68                     __end_ofi2_I2C_2_Master_Idle:
  5038                           	callstack 0
  5039                           
  5040                           	psect	rparam
  5041   000000                     
  5042                           	psect	temp
  5043   00005B                     btemp:
  5044                           	callstack 0
  5045   00005B                     	ds	1
  5046   000000                     int$flags	set	btemp
  5047   000000                     wtemp8	set	btemp+1
  5048   000000                     ttemp5	set	btemp+1
  5049   000000                     ttemp6	set	btemp+4
  5050   000000                     ttemp7	set	btemp+8
  5051                           
  5052                           	psect	idloc
  5053                           
  5054                           ;Config register IDLOC0 @ 0x200000
  5055                           ;	unspecified, using default values
  5056   200000                     	org	2097152
  5057   200000  0FFF               	dw	4095
  5058                           
  5059                           ;Config register IDLOC1 @ 0x200002
  5060                           ;	unspecified, using default values
  5061   200002                     	org	2097154
  5062   200002  0FFF               	dw	4095
  5063                           
  5064                           ;Config register IDLOC2 @ 0x200004
  5065                           ;	unspecified, using default values
  5066   200004                     	org	2097156
  5067   200004  0FFF               	dw	4095
  5068                           
  5069                           ;Config register IDLOC3 @ 0x200006
  5070                           ;	unspecified, using default values
  5071   200006                     	org	2097158
  5072   200006  0FFF               	dw	4095
  5073                           
  5074                           ;Config register IDLOC4 @ 0x200008
  5075                           ;	unspecified, using default values
  5076   200008                     	org	2097160
  5077   200008  0FFF               	dw	4095
  5078                           
  5079                           ;Config register IDLOC5 @ 0x20000A
  5080                           ;	unspecified, using default values
  5081   20000A                     	org	2097162
  5082   20000A  0FFF               	dw	4095
  5083                           
  5084                           ;Config register IDLOC6 @ 0x20000C
  5085                           ;	unspecified, using default values
  5086   20000C                     	org	2097164
  5087   20000C  0FFF               	dw	4095
  5088                           
  5089                           ;Config register IDLOC7 @ 0x20000E
  5090                           ;	unspecified, using default values
  5091   20000E                     	org	2097166
  5092   20000E  0FFF               	dw	4095
  5093                           
  5094                           	psect	config
  5095                           
  5096                           ;Config register CONFIG1L @ 0x300000
  5097                           ;	External Oscillator mode Selection bits
  5098                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5099                           ;	Power-up default value for COSC bits
  5100                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5101   300000                     	org	3145728
  5102   300000  AA                 	db	170
  5103                           
  5104                           ;Config register CONFIG1H @ 0x300001
  5105                           ;	unspecified, using default values
  5106                           ;	Clock Out Enable bit
  5107                           ;	CLKOUTEN = 0x1, unprogrammed default
  5108                           ;	Clock Switch Enable bit
  5109                           ;	CSWEN = 0x1, unprogrammed default
  5110                           ;	Fail-Safe Clock Monitor Enable bit
  5111                           ;	FCMEN = 0x1, unprogrammed default
  5112   300001                     	org	3145729
  5113   300001  FF                 	db	255
  5114                           
  5115                           ;Config register CONFIG2L @ 0x300002
  5116                           ;	unspecified, using default values
  5117                           ;	Master Clear Enable bit
  5118                           ;	MCLRE = 0x1, unprogrammed default
  5119                           ;	Power-up Timer Enable bit
  5120                           ;	PWRTE = 0x1, unprogrammed default
  5121                           ;	Low-power BOR enable bit
  5122                           ;	LPBOREN = 0x1, unprogrammed default
  5123                           ;	Brown-out Reset Enable bits
  5124                           ;	BOREN = 0x3, unprogrammed default
  5125   300002                     	org	3145730
  5126   300002  FF                 	db	255
  5127                           
  5128                           ;Config register CONFIG2H @ 0x300003
  5129                           ;	unspecified, using default values
  5130                           ;	Brown Out Reset Voltage selection bits
  5131                           ;	BORV = 0x3, unprogrammed default
  5132                           ;	ZCD Disable bit
  5133                           ;	ZCD = 0x1, unprogrammed default
  5134                           ;	PPSLOCK bit One-Way Set Enable bit
  5135                           ;	PPS1WAY = 0x1, unprogrammed default
  5136                           ;	Stack Full/Underflow Reset Enable bit
  5137                           ;	STVREN = 0x1, unprogrammed default
  5138                           ;	Debugger Enable bit
  5139                           ;	DEBUG = 0x1, unprogrammed default
  5140                           ;	Extended Instruction Set Enable bit
  5141                           ;	XINST = 0x1, unprogrammed default
  5142   300003                     	org	3145731
  5143   300003  FF                 	db	255
  5144                           
  5145                           ;Config register CONFIG3L @ 0x300004
  5146                           ;	WDT Period Select bits
  5147                           ;	WDTCPS = 0x1F, unprogrammed default
  5148                           ;	WDT operating mode
  5149                           ;	WDTE = OFF, WDT Disabled
  5150   300004                     	org	3145732
  5151   300004  9F                 	db	159
  5152                           
  5153                           ;Config register CONFIG3H @ 0x300005
  5154                           ;	unspecified, using default values
  5155                           ;	WDT Window Select bits
  5156                           ;	WDTCWS = 0x7, unprogrammed default
  5157                           ;	WDT input clock selector
  5158                           ;	WDTCCS = 0x7, unprogrammed default
  5159   300005                     	org	3145733
  5160   300005  FF                 	db	255
  5161                           
  5162                           ;Config register CONFIG4L @ 0x300006
  5163                           ;	unspecified, using default values
  5164                           ;	Write Protection Block 0
  5165                           ;	WRT0 = 0x1, unprogrammed default
  5166                           ;	Write Protection Block 1
  5167                           ;	WRT1 = 0x1, unprogrammed default
  5168                           ;	Write Protection Block 2
  5169                           ;	WRT2 = 0x1, unprogrammed default
  5170                           ;	Write Protection Block 3
  5171                           ;	WRT3 = 0x1, unprogrammed default
  5172                           ;	Write Protection Block 3
  5173                           ;	WRT4 = 0x1, unprogrammed default
  5174                           ;	Write Protection Block 3
  5175                           ;	WRT5 = 0x1, unprogrammed default
  5176                           ;	Write Protection Block 3
  5177                           ;	WRT6 = 0x1, unprogrammed default
  5178                           ;	Write Protection Block 3
  5179                           ;	WRT7 = 0x1, unprogrammed default
  5180   300006                     	org	3145734
  5181   300006  FF                 	db	255
  5182                           
  5183                           ;Config register CONFIG4H @ 0x300007
  5184                           ;	unspecified, using default values
  5185                           ;	Configuration Register Write Protection bit
  5186                           ;	WRTC = 0x1, unprogrammed default
  5187                           ;	Boot Block Write Protection bit
  5188                           ;	WRTB = 0x1, unprogrammed default
  5189                           ;	Data EEPROM Write Protection bit
  5190                           ;	WRTD = 0x1, unprogrammed default
  5191                           ;	Scanner Enable bit
  5192                           ;	SCANE = 0x1, unprogrammed default
  5193                           ;	Low Voltage Programming Enable bit
  5194                           ;	LVP = 0x1, unprogrammed default
  5195   300007                     	org	3145735
  5196   300007  FF                 	db	255
  5197                           
  5198                           ;Config register CONFIG5L @ 0x300008
  5199                           ;	unspecified, using default values
  5200                           ;	UserNVM Program Memory Code Protection bit
  5201                           ;	CP = 0x1, unprogrammed default
  5202                           ;	DataNVM Memory Code Protection bit
  5203                           ;	CPD = 0x1, unprogrammed default
  5204   300008                     	org	3145736
  5205   300008  FF                 	db	255
  5206                           
  5207                           ;Config register CONFIG5H @ 0x300009
  5208                           ;	unspecified, using default values
  5209   300009                     	org	3145737
  5210   300009  FF                 	db	255
  5211                           
  5212                           ;Config register CONFIG6L @ 0x30000A
  5213                           ;	unspecified, using default values
  5214                           ;	Table Read Protection Block 0
  5215                           ;	EBTR0 = 0x1, unprogrammed default
  5216                           ;	Table Read Protection Block 1
  5217                           ;	EBTR1 = 0x1, unprogrammed default
  5218                           ;	Table Read Protection Block 2
  5219                           ;	EBTR2 = 0x1, unprogrammed default
  5220                           ;	Table Read Protection Block 3
  5221                           ;	EBTR3 = 0x1, unprogrammed default
  5222                           ;	Table Read Protection Block 4
  5223                           ;	EBTR4 = 0x1, unprogrammed default
  5224                           ;	Table Read Protection Block 5
  5225                           ;	EBTR5 = 0x1, unprogrammed default
  5226                           ;	Table Read Protection Block 6
  5227                           ;	EBTR6 = 0x1, unprogrammed default
  5228                           ;	Table Read Protection Block 7
  5229                           ;	EBTR7 = 0x1, unprogrammed default
  5230   30000A                     	org	3145738
  5231   30000A  FF                 	db	255
  5232                           
  5233                           ;Config register CONFIG6H @ 0x30000B
  5234                           ;	unspecified, using default values
  5235                           ;	Boot Block Table Read Protection bit
  5236                           ;	EBTRB = 0x1, unprogrammed default
  5237   30000B                     	org	3145739
  5238   30000B  FF                 	db	255
  5239                           tosu	equ	0xFFF
  5240                           tosh	equ	0xFFE
  5241                           tosl	equ	0xFFD
  5242                           stkptr	equ	0xFFC
  5243                           pclatu	equ	0xFFB
  5244                           pclath	equ	0xFFA
  5245                           pcl	equ	0xFF9
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           indf0	equ	0xFEF
  5253                           postinc0	equ	0xFEE
  5254                           postdec0	equ	0xFED
  5255                           preinc0	equ	0xFEC
  5256                           plusw0	equ	0xFEB
  5257                           fsr0h	equ	0xFEA
  5258                           fsr0l	equ	0xFE9
  5259                           wreg	equ	0xFE8
  5260                           indf1	equ	0xFE7
  5261                           postinc1	equ	0xFE6
  5262                           postdec1	equ	0xFE5
  5263                           preinc1	equ	0xFE4
  5264                           plusw1	equ	0xFE3
  5265                           fsr1h	equ	0xFE2
  5266                           fsr1l	equ	0xFE1
  5267                           bsr	equ	0xFE0
  5268                           indf2	equ	0xFDF
  5269                           postinc2	equ	0xFDE
  5270                           postdec2	equ	0xFDD
  5271                           preinc2	equ	0xFDC
  5272                           plusw2	equ	0xFDB
  5273                           fsr2h	equ	0xFDA
  5274                           fsr2l	equ	0xFD9
  5275                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        18
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     98     141
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2440$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2391$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2391$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@buf(BANK0[20]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    reverseFullSpeed@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnRight45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    turnLeft45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    S525DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhhhllllll[1]), CCPR2H(BITBIGSFRhhllll[1]), 

    S525DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhhhllllll[1]), CCPR1H(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _Interrupts_init->_set_interrupt_threshold
    _set_interrupt_threshold->_color_writetoaddr
    _enable_color_interrupt->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _clear_interrupt_flag->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    i2_clear_interrupt_flag->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                92    92      0   14693
                                             31 BANK0     67    67      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _LEDSon_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7586
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7100
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6639
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5072
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     453
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                          6     4      2    3045
                                             17 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1422
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDSon_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0    1908
             _enable_color_interrupt
            _set_interrupt_threshold
 ---------------------------------------------------------------------------------
 (2) _set_interrupt_threshold                              8     2      6    1136
                                              8 COMRAM     8     2      6
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _enable_color_interrupt                               0     0      0     772
               _clear_interrupt_flag
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _clear_interrupt_flag                                 0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
             i2_clear_interrupt_flag
 ---------------------------------------------------------------------------------
 (10) i2_clear_interrupt_flag                              0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
     _enable_color_interrupt
       _clear_interrupt_flag
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _set_interrupt_threshold
       _color_writetoaddr
   _LEDSon_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   i2_clear_interrupt_flag
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     62      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRllhhhh     52      0       0      41        0.0%
BITBIGSFRllhhhl     37      0       0      43        0.0%
BITBIGSFRhhhl       32      0       0      33        0.0%
BITBIGSFRllhhhl     2D      0       0      46        0.0%
BITBIGSFRllllhl     2A      0       0      54        0.0%
BITBIGSFRllllll     23      0       0      61        0.0%
BITBIGSFRhhlllh     17      0       0      37        0.0%
BITBIGSFRllhhhl     11      0       0      48        0.0%
BITBIGSFRllhhl      11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      34        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllhhhl      C      0       0      47        0.0%
BITBIGSFRllllhl      9      0       0      58        0.0%
BITBIGSFRllhhhl      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      60        0.0%
BITBIGSFRllllhh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRlllhl       5      0       0      52        0.0%
BITBIGSFRhhllll      5      0       0      38        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      57        0.0%
BITBIGSFRlllhh       3      0       0      51        0.0%
BITBIGSFRllhhhh      2      0       0      40        0.0%
BITBIGSFRllhhhl      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      36        0.0%
BITBIGSFRllllll      2      0       0      62        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllllhl      1      0       0      59        0.0%
BITBIGSFRllhhhl      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      35        0.0%
BITBIGSFRllhl        1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     143      63        0.0%
DATA                 0      0     143       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 09 09:22:27 2022

                    _color_read_Red 1AFE                     _color_read_Blue 1BEE  
                                l22 1EEE                                  l31 1C3C  
                                l25 1B4C                                  l34 1BEC  
                                l19 1DBC                                  l28 1B9C  
                                l86 1388                                  l79 1900  
               ___wmul@multiplicand 0007                    _color_read_Clear 1B9E  
                  _color_read_Green 1B4E                   ??_Interrupts_init 0011  
                               l142 1E16                                 l230 141C  
                               l151 1F8A                                 l231 141A  
                               l160 1F60                                 l232 142A  
                               l145 1E18                                 l154 1F76  
                               l163 1D0C                                 l148 1E3E  
                               l157 1F80                                 l602 1650  
                               l259 1EAE                                 l380 1F06  
                               l453 1D88                                 l462 1F54  
                               l472 1F1C                                 l368 1ECE  
                               l377 1EF2                                 l386 1DEC  
                               l475 1E8C                                 l469 1A56  
                               l589 121C                                 l973 19EE  
                               l966 19E6                                 u830 1E28  
                               u831 1E24                                 u840 1E3E  
                               u841 1E3A                                 _abs 1D0E  
                               _pad 1902                                 wreg 000FE8  
                              ?_abs 0017                                l1212 17AE  
                              l1205 1094                                l1150 1D44  
                              l1230 1878                                l1160 1AFC  
                              l3001 1130                                l1153 1D4C  
                              l1241 1FA0                                l1218 1AAA  
                              l3011 11B2                                l3003 1144  
                              l2141 1E28                                l3021 11FC  
                              l3013 11B4                                l3005 1152  
                              l3101 0F04                                l1238 1CCA  
                              l1182 1924                                l3015 11C6  
                              l3007 1164                                l3031 1520  
                              l3103 0F0A                                l3111 0FFC  
                              l1191 0EA4                                l2241 1F82  
                              l2305 1ED2                                l3009 1192  
                              l3017 11CC                                l3041 1578  
                              l3033 1524                                l3025 14EE  
                              l3121 1064                                l3113 1016  
                              l3105 0F8C                                l1193 0EAC  
                              l3201 13DE                                l1186 197A  
                              l1194 0EF2                                l2139 1E18  
                              l2243 1F86                                l2251 1F7C  
                              l2307 1F08                                l2411 19A6  
                              l2403 197C                                l3019 11DC  
                              l3051 15FA                                l3043 158C  
                              l3035 1532                                l3027 14F2  
                              l3123 1074                                l3115 1034  
                              l3107 0F92                                l3131 1688  
                              l3211 1416                                l3203 13E6  
                              l2245 1F58                                l2501 18FE  
                              l2421 19DA                                l2413 19B4  
                              l2405 1984                                l3045 159A  
                              l3053 1600                                l3037 1552  
                              l3029 1500                                l3061 1902  
                              l3117 104E                                l3109 0F98  
                              l3141 16EA                                l3133 1696  
                              l3221 1462                                l3213 1416  
                              l3205 13EC                                l2247 1F5C  
                              l2351 1E02                                l2343 1DEE  
                              l2423 19E0                                l2415 19BA  
                              l2407 1996                                l2511 12A6  
                              l2503 121E                                l3055 1610  
                              l3047 15C8                                l3039 1570  
                              l3071 1948                                l3063 1910  
                              l3119 105E                                l3143 1740  
                              l3135 169A                                l3151 1782  
                              l3127 1652                                l3223 1498  
                              l3215 1416                                l3207 13F8  
                              l2249 1F78                                l2601 1D6E  
                              l2353 1E04                                l2345 1DF8  
                              l2361 1CD2                                l2417 19D0  
                              l2409 199E                                l2513 12E8  
                              l2505 123A                                l3057 1630  
                              l3049 15E8                                l3073 1966  
                              l3065 191C                                l3081 0E5C  
                              l3137 16AA                                l3129 167A  
                              l3161 1A80                                l3225 14A4  
                              l3217 1416                                l3209 1404  
                              l2611 1D80                                l2603 1D70  
                              l2347 1DFE                                l2451 1D98  
                              l2363 1CDA                                l2355 1F6E  
                              l2419 19D8                                l2515 1304  
                              l2507 128E                                l3067 1930  
                              l3091 0ECA                                l3083 0E7C  
                              l3075 0E18                                l3147 1770  
                              l3139 16CA                                l3163 1AA0  
                              l3171 1AC6                                l3227 14BE  
                              l3219 1432                                l2381 1A04  
                              l2613 1D82                                l2605 1D74  
                              l2349 1E00                                l2453 1DA8  
                              l2365 1CE2                                l2357 1F72  
                              l2373 1EF2                                l2517 1348  
                              l2509 12A2                                l3069 1944  
                              l3093 0EDA                                l3085 0E98  
                              l3077 0E38                                l3157 1A58  
                              l3173 1ACE                                l3181 138E  
                              l2391 1A36                                l2383 1A08  
                              l2615 1D84                                l2607 1D7A  
                              l2455 1DB2                                l2447 1D8A  
                              l2367 1D08                                l2359 1CCE  
                              l2471 1C34                                l2463 1B4E  
                              l2375 1F02                                l2631 1DBE  
                              l3095 0EE6                                l3087 0EB4  
                              l3079 0E4C                                l3159 1A64  
                              l3175 1AEA                                l3167 1AAC  
                              l3191 13A2                                l3183 1392  
                              l2377 1F46                                l2393 1A48  
                              l2385 1A1A                                l2617 1D86  
                              l2609 1D7E                                l2449 1D8E  
                              l2369 1D0A                                l2465 1B94  
                              l2457 1AFE                                l2481 187A  
                              l2633 1DC2                                l3097 0EEE  
                              l3089 0EC4                                l3169 1ABE  
                              l3193 13B4                                l3185 1396  
                              l2395 1A4C                                l2387 1A1E  
                              l2379 19F0                                l2475 1B9E  
                              l2459 1B44                                l2491 18DC  
                              l2483 1882                                l2635 1DD0  
                              l3099 0EFA                                l3195 13BC  
                              l3187 139A                                l3179 138A  
                              l2389 1A28                                l2469 1BEE  
                              l2477 1BE4                                l2493 18E6  
                              l2485 18AC                                l2637 1DD4  
                              l2397 1E68                                l3197 13C4  
                              l3189 139E                                l2583 1E8E  
                              l2495 18E8                                l2487 18D0  
                              l2591 1EBE                                l2399 1E84  
                              l3199 13D6                                l2497 18F2  
                              l2489 18DA                                l2593 1EC8  
                              l2585 1EB0                                l2499 18F4  
                              l2595 1ECA                                l2587 1EBA  
                              l2597 1ECC                                l2589 1EBC  
                              ?_pad 0015                                l2599 1D4E  
                              l2961 17DE                                l2963 17FC  
                              l2955 17B0                                l2971 1C94  
                              l2981 1096                                l2965 1832  
                              l2957 17C2                                l2973 1CA6  
                              l2991 10DA                                l2983 109A  
                              l2959 17D4                                l2975 1CAA  
                              l2993 10FA                                l2985 10A8  
                              l2977 1D0E                                l2969 1C88  
                              l2995 10FE                                l2987 10C8  
                              l2979 1D28                                l2997 110A  
                              l2989 10CC                                l2999 1128  
                              STR_1 0E01                                u1200 1A48  
                              u1201 1A44                                u1210 1996  
                              u1211 1992                                u1220 19B4  
                      ?_LEDSon_init 0001                                u1221 19B0  
                              u1230 19D0                                u1231 19CC  
                              u1160 1CF6                                u1320 1DEC  
                              u1161 1CEE                                u1321 1DE8  
                              u1250 123A                                u1251 1236  
                              u1180 1F02                                u1260 1304  
                              u1500 17D4                                u1181 1EFE  
                              u1261 1300                                u1501 17D0  
                              u1190 1A1A                                u1510 17FC  
                              u1191 1A16                                u1511 17F8  
                              u1600 1192                                u1520 1832  
                      _BAUD4CONbits 000EE9                                u1601 118E  
                              u1521 182E                                u1178 1CF8  
                              u1610 11DC                                u1530 1CCA  
                              u1611 11D8                                u1531 1CC6  
                              u1620 1500                                u1540 1D28  
                              u1700 0E48                                u1621 14FC  
                              u1541 1D24                                u1701 0E42  
                              u1550 10A8                                u1630 1532  
                              u1710 0E4A                                u1551 10A4  
                              u1631 152E                                u1560 10DA  
                              u1640 1570                                u1720 0E5C  
                              u1800 167A                                u1561 10D6  
                              u1641 156C                                u1721 0E58  
                              u1801 1676                                u1650 159A  
                              u1490 17C2                                u1730 0E98  
                              u1810 16CA                                _T2PR 000FBC  
                              u1571 1104                                u1651 1596  
                              u1491 17BE                                u1731 0E94  
                              u1811 16C6                                u1580 1128  
                              u1660 15C8                                u1740 0EC4  
                              u1820 16EA                                u1581 1124  
                              u1661 15C4                                u1741 0EC0  
                              u1821 16E6                                u1590 1152  
                              u1670 1610                                u1750 0EDA  
                              u1830 1AA0                                u1591 114E  
                              u1671 160C                                u1751 0ED6  
                              u1831 1A9C                                u1680 1910  
                              u1760 1016                                u1681 190C  
                              u1761 1012                                u1841 140E  
                              u1690 1966                                u1770 1034  
                              u1850 142A                                u1907 1D9E  
                              u1691 1962                                u1771 1030  
                              u1851 1426                                u1780 104E  
                              u1860 14D2                                u1781 104A  
                              u1861 14C8                                u1790 105E  
                              u1791 105A                                u1878 14D6  
                              u1897 14B0                                abs@a 0017  
                              _dbuf 013C                                _main 138A  
                              _dtoa 0E18                                _prec 00D8  
                              pad@i 001C                                pad@p 0019  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 001E                                fsr2l 000FD9  
                              btemp 005B                                prodh 000FF4  
                              prodl 000FF3                                start 005A  
            __end_of_color_read_Red 1B4E                     __end_of_HighISR 005A  
                      ___param_bank 000000                               ??_abs 0019  
                             ??_pad 001B                     __end_of___aodiv 121E  
                             ?_main 0001                               ?_dtoa 0020  
                   __end_of___aomod 1652                     __end_of___lwdiv 19F0  
                             i2l151 1F9E                               i2l160 1F6C  
                             i2l145 1E40                               i2l148 1E66  
                             i2l157 1F94                               i2l472 1F32  
                             i2l459 0056                        vfpfcnvrt@fmt 0045  
           ?_enable_color_interrupt 0001                        main@red_read 00A7  
           __end_of_sendCharSerial4 1F08          __end_of_I2C_2_Master_Start 1F8C  
        __end_of_I2C_2_Master_Write 1F62                               _flags 00DA  
                             _fputc 17B0                               _fputs 1C88  
                             pad@fp 0015                               _width 00D6  
                             _putch 1FA0                               dtoa@d 0022  
                             dtoa@i 0041                               dtoa@n 0038  
                             dtoa@p 0034                               dtoa@s 0040  
                             dtoa@w 0036                               tablat 000FF5  
                             plusw1 000FE3                               plusw2 000FDB  
                             ttemp5 005C                               ttemp6 005F  
                             ttemp7 0063                               status 000FD8  
                             wtemp8 005C                     __end_of_sprintf 1AFE  
           __end_of_color_read_Blue 1C3E               _I2C_2_Master_RepStart 1F6E  
                   ?_color_read_Red 0009                     __initialization 1C3E  
                      __end_of_main 14EE                        __end_of_dtoa 1096  
    __end_of_enable_color_interrupt 1F56                              ??_main 007F  
                            ??_dtoa 002A                       __activetblptr 000003  
                     main@blue_read 00AB                        ?_setMotorPWM 0012  
                            ?_fputc 0005                              ?_fputs 000E  
                            _CCPR1H 000FAA                              _CCPR2H 000FA6  
                            _CCPR3H 000F25                              _CCPR4H 000F21  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              _RE4PPS 000E76  
                            i2l2341 1E50                              i2l2441 1F90  
                            i2l2339 1E40                              i2l2435 1F96  
                            i2l2443 1F64                              i2l2437 1F9A  
                            i2l2445 1F68                              i2l2439 1F8C  
                            i2l2647 1F1E                              i2l2951 004E  
                            i2l2943 000A                              i2l2953 0052  
                            i2l2945 001A                              i2l2947 001C  
                            _RG6PPS 000E88                              i2l2949 0034  
                         ??_HighISR 0003            __end_of_color_click_init 1DBE  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                      _CCPTMRS0bits 000FAD                        vfprintf@cfmt 0055  
                         ??___aodiv 0015                           ??___aomod 0015  
                            ___wmul 1E68                           ??___lwdiv 000F  
                            clear_0 1C64                              clear_1 1C70  
                            isa$std 000001                              pad@buf 0017  
                            dtoa@fp 0020        __end_of_clear_interrupt_flag 1F1E  
                            fputc@c 0005                              fputs@c 0012  
                            fputs@i 0013                              fputs@s 000E  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                  ?_sendCharSerial4 0001                              putch@c 0001  
                  __end_of_vfprintf 1AAC                   ??_initDCmotorsPWM 0005  
                         ??_sprintf 0057             ?i2_clear_interrupt_flag 0001  
                        __accesstop 0060             __end_of__initialization 1C7E  
          __end_of_color_read_Clear 1BEE            __end_of_color_read_Green 1B9E  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                  ?_color_read_Blue 0009                     _Interrupts_init 1D4E  
                    __pcstackCOMRAM 0001                        __pidataBANK0 1F34  
           _set_interrupt_threshold 19F0                       __end_of_fputc 187A  
                     __end_of_fputs 1CCC                       __end_of_putch 1FA2  
                    main@clear_read 00AD      __end_ofi2_clear_interrupt_flag 1F34  
                           ??_fputc 0009                             ??_fputs 0012  
                           ??_putch 0005                          __pbssBANK0 00C2  
                        __pbssBANK1 0100                   _color_writetoaddr 1ED0  
                      _T2CLKCONbits 000FBF                  ?_color_writetoaddr 0007  
                           ?___wmul 0005                 ??_color_writetoaddr 0008  
                           _INT1PPS 000DF1                      main@green_read 00A9  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
       set_interrupt_threshold@AIHT 000B         set_interrupt_threshold@AILT 0009  
           __end_of_Interrupts_init 1D8A              color_writetoaddr@value 0007  
                  ??_color_read_Red 000B                             _HighISR 0008  
         __end_of_color_writetoaddr 1EF0                _clear_interrupt_flag 1F08  
                _I2C_2_Master_Start 1F82                          _initUSART4 1EB0  
               i2_I2C_2_Master_Idle 1E40                  _I2C_2_Master_Write 1F56  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 1F8C  
                           __Lparam 0000                   color_read_Red@tmp 000E  
         ??_set_interrupt_threshold 000F             sendStringSerial4@string 0006  
                           ___aodiv 1096                             ___aomod 14EE  
               ?_I2C_2_Master_Start 0001                             ___lwdiv 197C  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 0060  
                      __psmallconst 0E00                             __pcinit 1C3E  
                           __ramtop 0E00                             __ptext0 138A  
                           __ptext1 1AAC                             __ptext2 1A58  
                           __ptext3 1652                             __ptext4 0E18  
                           __ptext5 1902                             __ptext6 1C88  
                           __ptext7 17B0                             __ptext8 1FA0  
                           __ptext9 1D0E                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                ?i2_I2C_2_Master_Stop 0001  
                         _T2HLTbits 000FBE                       _RxBufWriteCnt 005A  
                           main@buf 0093                             _sprintf 1AAC  
              ??_I2C_2_Master_Start 0006                ??_I2C_2_Master_Write 0006  
              end_of_initialization 1C7E                             fputc@fp 0007  
                           fputs@fp 0010                   ?_color_click_init 0001  
             ?_clear_interrupt_flag 0001                  ??_color_click_init 0009  
                 __end_of_vfpfcnvrt 17B0                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                  vfpfcnvrt@convarg 004B                          main@F14641 00DB  
                        ??_vfprintf 0055                     _initDCmotorsPWM 187A  
                         _PORTFbits 000F8E                  setMotorPWM@negDuty 0017  
             ??i2_I2C_2_Master_Idle 0001               ??i2_I2C_2_Master_Stop 0002  
   __end_of_set_interrupt_threshold 1A58                           _TRISAbits 000F81  
                setMotorPWM@posDuty 0016                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
               main@expected_values 0081            color_writetoaddr@address 0008  
           ??_I2C_2_Master_RepStart 0006                    ?_Interrupts_init 0001  
                       _CCP1CONbits 000FAB                   ?_color_read_Clear 0009  
                      _EUSART4RXbuf 00C2                        _EUSART4TXbuf 0100  
                       _CCP2CONbits 000FA7                   ?_color_read_Green 0009  
                       _CCP3CONbits 000F26                         ?_initUSART4 0001  
                       _CCP4CONbits 000F22           sendCharSerial4@charToSend 0005  
                        main@motorL 00B0                          main@motorR 00B9  
                ??_color_read_Clear 000B                  ??_color_read_Green 000B  
                       vfpfcnvrt@ap 0047                         vfpfcnvrt@cp 0053  
                       vfpfcnvrt@fp 0043                      __end_of___wmul 1E8E  
               color_read_Clear@tmp 000E                 start_initialization 1C3E  
                       __end_of_abs 1D4E                         __end_of_pad 197C  
                     _TxBufWriteCnt 0058                       ??_LEDSon_init 0005  
            ??_clear_interrupt_flag 0007                 color_read_Green@tmp 000E  
           __end_of_initDCmotorsPWM 1902                         vfprintf@fmt 0062  
          ??_enable_color_interrupt 0009                            ??___wmul 0009  
                       __pdataBANK0 00DB       i2I2C_2_Master_Write@data_byte 0002  
      __end_ofi2_I2C_2_Master_Start 1FA0        __end_ofi2_I2C_2_Master_Write 1F6E  
                       __pbssCOMRAM 0057                       __pcstackBANK0 0060  
                  ___aodiv@dividend 0005                            ?_HighISR 0001  
               __end_of_LEDSon_init 1EB0                    ___lwdiv@dividend 000B  
                         _dtoa$2468 0032                           __pintcode 0008  
                          ?___aodiv 0005                            ?___aomod 0005  
                  ___aodiv@quotient 0017                            ?___lwdiv 000B  
              I2C_2_Master_Read@ack 0007                I2C_2_Master_Read@tmp 0008  
                       __smallconst 0E00                   _I2C_2_Master_Idle 1E18  
                 _I2C_2_Master_Init 1DEE                   _I2C_2_Master_Read 1CCC  
                 _I2C_2_Master_Stop 1F78                        _RxBufReadCnt 0059  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0014  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000F  
                          ?_sprintf 0066                   _sendStringSerial4 1DBE  
               ??_I2C_2_Master_Idle 0005                 ??_I2C_2_Master_Init 0005  
               ??_I2C_2_Master_Read 0006  set_interrupt_threshold@persistence 000D  
                    ___wmul@product 0009                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0006                            _LATDbits 000F7C  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                  ?_sendStringSerial4 0006  
                          _PIE4bits 000E2D                            i2u114_40 1E50  
                          i2u114_41 1E4C                            i2u115_40 1E66  
                          i2u115_41 1E62                            i2u148_40 001A  
                          i2u148_41 0016                            _PIR0bits 000E33  
                          i2u191_47 0026                            i2u192_47 0040  
                          _PIR4bits 000E37                    ?_initDCmotorsPWM 0001  
                 ??_sendCharSerial4 0005                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 0008                            _SSP2STAT 000ED8  
                         _vfpfcnvrt 1652           __end_of_I2C_2_Master_Idle 1E40  
         __end_of_I2C_2_Master_Init 1E18           __end_of_I2C_2_Master_Read 1D0E  
                 ___wmul@multiplier 0005           __end_of_I2C_2_Master_Stop 1F82  
          ??i2_clear_interrupt_flag 0003                        setMotorPWM@m 0012  
       I2C_2_Master_Write@data_byte 0006                   ??_color_read_Blue 000B  
                      _TxBufReadCnt 0057                           copy_data0 1C52  
         __end_of_sendStringSerial4 1DEE                         _LEDSon_init 1E8E  
     __end_of_I2C_2_Master_RepStart 1F78                  color_read_Blue@tmp 000E  
          ?_set_interrupt_threshold 0009                 __end_of_setMotorPWM 138A  
                      ??_initUSART4 0005                i2_I2C_2_Master_Start 1F96  
              i2_I2C_2_Master_Write 1F62                            __Hrparam 0000  
                        vfprintf@ap 0064                            __Lrparam 0000  
                        vfprintf@fp 0060         __end_ofi2_I2C_2_Master_Idle 1E68  
       __end_ofi2_I2C_2_Master_Stop 1F96                          ?_vfpfcnvrt 0043  
                   ___aodiv@divisor 000D                     ___aodiv@counter 0015  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        sprintf@fmt 0068                     ___lwdiv@divisor 000D  
                __end_of_initUSART4 1ED0                     ___lwdiv@counter 0011  
                          __ptext10 14EE                            __ptext11 1096  
                          __ptext20 1B4E                            __ptext12 121E  
                          __ptext21 1B9E                            __ptext13 1E68  
            _enable_color_interrupt 1F46                            __ptext30 1F46  
                          __ptext22 1BEE                            __ptext14 197C  
                          __ptext31 1ED0                            __ptext23 1F6E  
                          __ptext15 1DBE                            __ptext40 1F8C  
                          __ptext32 1F08                            __ptext24 1CCC  
                          __ptext16 1EF0                            __ptext41 1F96  
                          __ptext33 1F56                            __ptext25 1D8A  
                          __ptext17 1EB0                            __ptext42 1E40  
                          __ptext34 1F78                            __ptext26 1DEE  
                          __ptext18 187A                            __ptext35 1F82  
                          __ptext27 1E8E                            __ptext19 1AFE  
                          __ptext36 1E18                            __ptext28 1D4E  
                          __ptext29 19F0                            __ptext38 1F1E  
                          __ptext39 1F62                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 005B  
                          _vfprintf 1A58                    ___aomod@dividend 0005  
                        _INTCONbits 000FF2        _set_interrupt_threshold$1950 0010  
      _set_interrupt_threshold$1949 000F                         _setMotorPWM 121E  
                          intlevel2 0000                           sprintf@ap 0072  
                   ___aomod@divisor 000D                         ??_vfpfcnvrt 0049  
                   ___aomod@counter 0015                    _color_click_init 1D8A  
                          sprintf@f 0074                            sprintf@s 0066  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                        _TX4STAbits 000EE8                        ___aodiv@sign 0016  
                   _sendCharSerial4 1EF0              ??i2_I2C_2_Master_Start 0002  
            ??i2_I2C_2_Master_Write 0002              i2_clear_interrupt_flag 1F1E  
                      ___aomod@sign 0016                        main@PWMcycle 00AF  
